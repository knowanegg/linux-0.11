
;; Function strcpy (strcpy, funcdef_no=0, decl_uid=998, cgraph_uid=1, symbol_order=1)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 5(l0): point = 12
   Insn 18(l0): point = 14
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..12]
 a3(r86): [9..10]
 a4(r82): [14..14]
Compressing live ranges: from 17 to 7 - 41%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r86): [4..5]
 a4(r82): [6..6]
  pref0:a3(r86)<-hr5@1000
  pref1:a2(r85)<-hr4@1000
  pref2:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=7
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
    3:r86  l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strcpy

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 18 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 85)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 src+0 S4 A32])) "lib/string.c":19:2 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":19:2 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (asm_operands/v ("cld
1:	lodsb
	stosb
	testb %%al, %%al
	jne 1b") ("") 0 [
                    (reg/f:SI 85)
                    (reg/f:SI 86)
                ]
                 [
                    (asm_input:SI ("S") lib/string.c:19)
                    (asm_input:SI ("D") lib/string.c:19)
                ]
                 [] lib/string.c:19)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":19:2 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_DEAD (reg/f:SI 85)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 8 7 11 2 (set (reg/f:SI 83 [ _3 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":25:9 75 {*movsi_internal}
     (nil))
(insn 11 8 15 2 (set (reg/f:SI 84 [ <retval> ])
        (reg/f:SI 83 [ _3 ])) "lib/string.c":25:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _3 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 84 [ <retval> ])) "lib/string.c":26:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":26:1 -1
     (nil))

;; Function strncpy (strncpy, funcdef_no=1, decl_uid=1002, cgraph_uid=2, symbol_order=2)

scanning new insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best CREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
   Insn 19(l0): point = 16
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..14]
 a3(r86): [9..12]
 a4(r87): [9..10]
 a5(r82): [16..16]
Compressing live ranges: from 19 to 7 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r86): [4..5]
 a4(r87): [4..5]
 a5(r82): [6..6]
  pref0:a4(r87)<-hr2@1000
  pref1:a3(r86)<-hr5@1000
  pref2:a2(r85)<-hr4@1000
  pref3:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=7
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
    3:r86  l0     1    4:r87  l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strncpy

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,5u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 34{16d,18u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 19 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 85)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 src+0 S4 A32])) "lib/string.c":30:2 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":30:2 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 87)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 count+0 S4 A32])) "lib/string.c":30:2 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (asm_operands/v ("cld
1:	decl %2
	js 2f
	lodsb
	stosb
	testb %%al, %%al
	jne 1b
	rep
	stosb
2:") ("") 0 [
                    (reg/f:SI 85)
                    (reg/f:SI 86)
                    (reg:SI 87)
                ]
                 [
                    (asm_input:SI ("S") lib/string.c:30)
                    (asm_input:SI ("D") lib/string.c:30)
                    (asm_input:SI ("c") lib/string.c:30)
                ]
                 [] lib/string.c:30)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":30:2 -1
     (expr_list:REG_DEAD (reg:SI 87)
        (expr_list:REG_DEAD (reg/f:SI 86)
            (expr_list:REG_DEAD (reg/f:SI 85)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 9 8 12 2 (set (reg/f:SI 83 [ _4 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":41:9 75 {*movsi_internal}
     (nil))
(insn 12 9 16 2 (set (reg/f:SI 84 [ <retval> ])
        (reg/f:SI 83 [ _4 ])) "lib/string.c":41:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _4 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 84 [ <retval> ])) "lib/string.c":42:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":42:1 -1
     (nil))

;; Function strcat (strcat, funcdef_no=2, decl_uid=1005, cgraph_uid=3, symbol_order=3)

scanning new insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 5(l0): point = 16
   Insn 20(l0): point = 18
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..16]
 a3(r86): [9..14]
 a4(r87): [9..12]
 a5(r88): [9..10]
 a6(r82): [18..18]
Compressing live ranges: from 21 to 7 - 33%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r86): [4..5]
 a4(r87): [4..5]
 a5(r88): [4..5]
 a6(r82): [6..6]
  pref0:a5(r88)<-hr2@1000
  pref1:a4(r87)<-hr0@1000
  pref2:a3(r86)<-hr5@1000
  pref3:a2(r85)<-hr4@1000
  pref4:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=7
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     1
    3:r86  l0     3    4:r87  l0     0    5:r88  l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strcat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 35{17d,18u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 85)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 src+0 S4 A32])) "lib/string.c":46:2 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":46:2 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 87)
        (const_int 0 [0])) "lib/string.c":46:2 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 88)
        (const_int -1 [0xffffffffffffffff])) "lib/string.c":46:2 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (asm_operands/v ("cld
	repne
	scasb
	decl %1
1:	lodsb
	stosb
	testb %%al, %%al
	jne 1b") ("") 0 [
                    (reg/f:SI 85)
                    (reg/f:SI 86)
                    (reg:SI 87)
                    (reg:SI 88)
                ]
                 [
                    (asm_input:SI ("S") lib/string.c:46)
                    (asm_input:SI ("D") lib/string.c:46)
                    (asm_input:SI ("a") lib/string.c:46)
                    (asm_input:SI ("c") lib/string.c:46)
                ]
                 [] lib/string.c:46)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":46:2 -1
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg:SI 87)
            (expr_list:REG_DEAD (reg/f:SI 86)
                (expr_list:REG_DEAD (reg/f:SI 85)
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 10 9 13 2 (set (reg/f:SI 83 [ _3 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":55:9 75 {*movsi_internal}
     (nil))
(insn 13 10 17 2 (set (reg/f:SI 84 [ <retval> ])
        (reg/f:SI 83 [ _3 ])) "lib/string.c":55:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _3 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 84 [ <retval> ])) "lib/string.c":56:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":56:1 -1
     (nil))

;; Function strncat (strncat, funcdef_no=3, decl_uid=1009, cgraph_uid=4, symbol_order=4)

scanning new insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 5(l0): point = 16
   Insn 20(l0): point = 18
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..16]
 a3(r86): [9..14]
 a4(r87): [9..12]
 a5(r88): [9..10]
 a6(r82): [18..18]
Compressing live ranges: from 21 to 7 - 33%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r86): [4..5]
 a4(r87): [4..5]
 a5(r88): [4..5]
 a6(r82): [6..6]
  pref0:a5(r88)<-hr2@1000
  pref1:a4(r87)<-hr0@1000
  pref2:a3(r86)<-hr5@1000
  pref3:a2(r85)<-hr4@1000
  pref4:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=7
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     1
    3:r86  l0     3    4:r87  l0     0    5:r88  l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strncat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,5u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{17d,19u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 85)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 src+0 S4 A32])) "lib/string.c":60:2 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":60:2 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 87)
        (const_int 0 [0])) "lib/string.c":60:2 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 88)
        (const_int -1 [0xffffffffffffffff])) "lib/string.c":60:2 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (asm_operands/v ("cld
	repne
	scasb
	decl %1
	movl %4, %3
1:	decl %3
	js 2f
	lodsb
	stosb
	testb %%al, %%al
	jne 1b
2: 	xorl %2, %2
	stosb") ("") 0 [
                    (reg/f:SI 85)
                    (reg/f:SI 86)
                    (reg:SI 87)
                    (reg:SI 88)
                    (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [2 count+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("S") lib/string.c:60)
                    (asm_input:SI ("D") lib/string.c:60)
                    (asm_input:SI ("a") lib/string.c:60)
                    (asm_input:SI ("c") lib/string.c:60)
                    (asm_input:SI ("g") lib/string.c:60)
                ]
                 [] lib/string.c:60)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":60:2 -1
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg:SI 87)
            (expr_list:REG_DEAD (reg/f:SI 86)
                (expr_list:REG_DEAD (reg/f:SI 85)
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 10 9 13 2 (set (reg/f:SI 83 [ _4 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 dest+0 S4 A32])) "lib/string.c":75:9 75 {*movsi_internal}
     (nil))
(insn 13 10 17 2 (set (reg/f:SI 84 [ <retval> ])
        (reg/f:SI 83 [ _4 ])) "lib/string.c":75:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 84 [ <retval> ])) "lib/string.c":76:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":76:1 -1
     (nil))

;; Function strcmp (strcmp, funcdef_no=4, decl_uid=1019, cgraph_uid=5, symbol_order=5)

scanning new insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 5(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 19(l0): point = 16
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..10]
 a4(r87): [11..14]
 a5(r88): [11..12]
 a6(r82): [16..16]
Compressing live ranges: from 19 to 11 - 57%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [8..9]
 a5(r88): [8..9]
 a6(r82): [10..10]
  pref0:a5(r88)<-hr4@1000
  pref1:a4(r87)<-hr5@1000
  pref2:a3(r86)<-hr0@1000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    4:r87  l0     0    5:r88  l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strcmp

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,3u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 34{17d,17u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 19 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 19 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])) "lib/string.c":81:2 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 ct+0 S4 A32])) "lib/string.c":81:2 75 {*movsi_internal}
     (nil))
(insn 8 7 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
1:	lodsb
	scasb
	jne 2f
	testb %%al, %%al
	jne 1b
	xorl %%eax, %%eax
	jmp 3f
2:	movl $1, %%eax
	jl 3f
	negl %%eax
3:") ("=a") 0 [
                        (reg/f:SI 87)
                        (reg/f:SI 88)
                    ]
                     [
                        (asm_input:SI ("D") lib/string.c:81)
                        (asm_input:SI ("S") lib/string.c:81)
                    ]
                     [] lib/string.c:81))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":81:2 -1
     (expr_list:REG_DEAD (reg/f:SI 88)
        (expr_list:REG_DEAD (reg/f:SI 87)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 5 8 9 2 (set (reg/v:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":81:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 9 5 12 2 (set (reg:SI 84 [ _4 ])
        (reg/v:SI 83 [ __res ])) "lib/string.c":94:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ __res ])
        (nil)))
(insn 12 9 16 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _4 ])) "lib/string.c":94:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _4 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "lib/string.c":95:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":95:1 -1
     (nil))

;; Function strncmp (strncmp, funcdef_no=5, decl_uid=1013, cgraph_uid=6, symbol_order=6)

scanning new insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a6(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 5(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 20(l0): point = 18
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..10]
 a4(r87): [11..16]
 a5(r88): [11..14]
 a6(r89): [11..12]
 a7(r82): [18..18]
Compressing live ranges: from 21 to 11 - 52%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [8..9]
 a5(r88): [8..9]
 a6(r89): [8..9]
 a7(r82): [10..10]
  pref0:a6(r89)<-hr2@1000
  pref1:a5(r88)<-hr4@1000
  pref2:a4(r87)<-hr5@1000
  pref3:a3(r86)<-hr0@1000
  pref4:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    4:r87  l0     0    5:r88  l0     1    6:r89  l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strncmp

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 37{18d,19u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 20 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])) "lib/string.c":100:2 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 ct+0 S4 A32])) "lib/string.c":100:2 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 89)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 count+0 S4 A32])) "lib/string.c":100:2 75 {*movsi_internal}
     (nil))
(insn 9 8 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
1:	decl %3
	js 2f
	lodsb
	scasb
	jne 3f
	testb %%al, %%al
	jne 1b
2:	xorl %%eax, %%eax
	jmp 4f
3:	movl $1, %%eax
	jl 4f
	negl %%eax
4:") ("=a") 0 [
                        (reg/f:SI 87)
                        (reg/f:SI 88)
                        (reg:SI 89)
                    ]
                     [
                        (asm_input:SI ("D") lib/string.c:100)
                        (asm_input:SI ("S") lib/string.c:100)
                        (asm_input:SI ("c") lib/string.c:100)
                    ]
                     [] lib/string.c:100))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":100:2 -1
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_DEAD (reg/f:SI 88)
            (expr_list:REG_DEAD (reg/f:SI 87)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 5 9 10 2 (set (reg/v:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":100:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 10 5 13 2 (set (reg:SI 84 [ _5 ])
        (reg/v:SI 83 [ __res ])) "lib/string.c":115:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ __res ])
        (nil)))
(insn 13 10 17 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _5 ])) "lib/string.c":115:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _5 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "lib/string.c":116:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":116:1 -1
     (nil))

;; Function strchr (strchr, funcdef_no=6, decl_uid=1016, cgraph_uid=7, symbol_order=7)

scanning new insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a6 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r90,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a8(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 15(l0): point = 4
   Insn 12(l0): point = 6
   Insn 8(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
   Insn 22(l0): point = 22
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r88): [9..10]
 a4(r89): [11..14]
 a5(r90): [11..12]
 a6(r87): [17..18]
 a7(r86): [19..20]
 a8(r82): [22..22]
Compressing live ranges: from 25 to 15 - 60%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r88): [6..7]
 a4(r89): [8..9]
 a5(r90): [8..9]
 a6(r87): [10..11]
 a7(r86): [12..13]
 a8(r82): [14..14]
  pref0:a5(r90)<-hr0@2000
  pref1:a4(r89)<-hr4@1000
  pref2:a3(r88)<-hr0@1000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=15
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    7:r86  l0     0    6:r87  l0     0    3:r88  l0     0    4:r89  l0     1
    5:r90  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strchr

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,3u} r17={2d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 40{19d,21u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 22 3 2 (set (reg:SI 86)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 c+0 S4 A32])) "lib/string.c":119:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 87)
        (subreg:QI (reg:SI 86) 0)) "lib/string.c":119:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])
        (reg:QI 87)) "lib/string.c":119:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87)
        (nil)))
(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 5 10 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 s+0 S4 A32])) "lib/string.c":121:2 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:QI 90)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])) "lib/string.c":121:2 77 {*movqi_internal}
     (nil))
(insn 11 10 8 2 (parallel [
            (set (reg:SI 88 [ __res ])
                (asm_operands:SI ("cld
	movb %%al, %%ah
1:	lodsb
	cmpb %%ah, %%al
	je 2f
	testb %%al, %%al
	jne 1b
	movl $1, %1
2:	movl %1, %0
	decl %0") ("=a") 0 [
                        (reg/f:SI 89)
                        (reg:QI 90)
                    ]
                     [
                        (asm_input:SI ("S") lib/string.c:121)
                        (asm_input:QI ("0") lib/string.c:121)
                    ]
                     [] lib/string.c:121))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":121:2 -1
     (expr_list:REG_DEAD (reg:QI 90)
        (expr_list:REG_DEAD (reg/f:SI 89)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 8 11 12 2 (set (reg/v/f:SI 83 [ __res ])
        (reg:SI 88 [ __res ])) "lib/string.c":121:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ __res ])
        (nil)))
(insn 12 8 15 2 (set (reg/f:SI 84 [ _4 ])
        (reg/v/f:SI 83 [ __res ])) "lib/string.c":132:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 83 [ __res ])
        (nil)))
(insn 15 12 19 2 (set (reg/f:SI 85 [ <retval> ])
        (reg/f:SI 84 [ _4 ])) "lib/string.c":132:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _4 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 85 [ <retval> ])) "lib/string.c":133:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ <retval> ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":133:1 -1
     (nil))

;; Function strlen (strlen, funcdef_no=7, decl_uid=1021, cgraph_uid=8, symbol_order=8)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best CREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 5(l0): point = 8
   Insn 9(l0): point = 10
   Insn 20(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 21(l0): point = 20
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..12]
 a4(r87): [11..18]
 a5(r88): [11..16]
 a6(r89): [13..14]
 a7(r82): [20..20]
Compressing live ranges: from 23 to 11 - 47%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [6..9]
 a5(r88): [6..9]
 a6(r89): [8..9]
 a7(r82): [10..10]
  pref0:a5(r88)<-hr0@1000
  pref1:a4(r87)<-hr5@1000
  pref2:a3(r86)<-hr2@2000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     1    4:r87  l0     3    5:r88  l0     0    6:r89  l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strlen

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 37{19d,18u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 s+0 S4 A32])) "lib/string.c":139:2 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 88)
        (const_int 0 [0])) "lib/string.c":139:2 75 {*movsi_internal}
     (nil))
(insn 8 7 20 2 (set (reg:SI 89)
        (const_int -1 [0xffffffffffffffff])) "lib/string.c":139:2 75 {*movsi_internal}
     (nil))
(insn 20 8 9 2 (set (reg:SI 86 [ __res ])
        (reg:SI 89)) "lib/string.c":139:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 9 20 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
	repne
	scasb
	notl %0
	decl %0") ("=c") 0 [
                        (reg/f:SI 87)
                        (reg:SI 88)
                        (reg:SI 86 [ __res ])
                    ]
                     [
                        (asm_input:SI ("D") lib/string.c:139)
                        (asm_input:SI ("a") lib/string.c:139)
                        (asm_input:SI ("0") lib/string.c:139)
                    ]
                     [] lib/string.c:139))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":139:2 -1
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg/f:SI 87)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 5 9 10 2 (set (reg/v:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":139:2 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 10 5 13 2 (set (reg:SI 84 [ _3 ])
        (reg/v:SI 83 [ __res ])) "lib/string.c":146:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ __res ])
        (nil)))
(insn 13 10 17 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _3 ])) "lib/string.c":146:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "lib/string.c":147:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":147:1 -1
     (nil))

;; Function memset (memset, funcdef_no=8, decl_uid=1025, cgraph_uid=9, symbol_order=9)

scanning new insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r87,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a3(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 15(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
   Insn 22(l0): point = 22
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r87): [9..14]
 a3(r88): [9..12]
 a4(r89): [9..10]
 a5(r86): [17..18]
 a6(r85): [19..20]
 a7(r82): [22..22]
Compressing live ranges: from 25 to 11 - 44%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r87): [4..5]
 a3(r88): [4..5]
 a4(r89): [4..5]
 a5(r86): [6..7]
 a6(r85): [8..9]
 a7(r82): [10..10]
  pref0:a4(r89)<-hr2@1000
  pref1:a3(r88)<-hr5@1000
  pref2:a2(r87)<-hr0@2000
  pref3:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r82  l0     0    1:r83  l0     0    0:r84  l0     0    6:r85  l0     0
    5:r86  l0     0    2:r87  l0     0    3:r88  l0     1    4:r89  l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


memset

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,5u} r17={2d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 40{18d,22u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 22 3 2 (set (reg:SI 85)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 c+0 S4 A32])) "lib/string.c":150:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 86)
        (subreg:QI (reg:SI 85) 0)) "lib/string.c":150:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])
        (reg:QI 86)) "lib/string.c":150:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 87)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])) "lib/string.c":151:2 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 88)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 s+0 S4 A32])) "lib/string.c":151:2 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 89)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 count+0 S4 A32])) "lib/string.c":151:2 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (asm_operands/v ("cld
	rep
	stosb") ("") 0 [
                    (reg:QI 87)
                    (reg/f:SI 88)
                    (reg:SI 89)
                ]
                 [
                    (asm_input:QI ("a") lib/string.c:151)
                    (asm_input:SI ("D") lib/string.c:151)
                    (asm_input:SI ("c") lib/string.c:151)
                ]
                 [] lib/string.c:151)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":151:2 -1
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_DEAD (reg/f:SI 88)
            (expr_list:REG_DEAD (reg:QI 87)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 12 11 15 2 (set (reg/f:SI 83 [ _4 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [3 s+0 S4 A32])) "lib/string.c":156:9 75 {*movsi_internal}
     (nil))
(insn 15 12 19 2 (set (reg/f:SI 84 [ <retval> ])
        (reg/f:SI 83 [ _4 ])) "lib/string.c":156:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _4 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 84 [ <retval> ])) "lib/string.c":157:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ <retval> ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":157:1 -1
     (nil))

;; Function memcpy (memcpy, funcdef_no=9, decl_uid=1029, cgraph_uid=10, symbol_order=10)

scanning new insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best CREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 12(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
   Insn 19(l0): point = 16
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..14]
 a3(r86): [9..12]
 a4(r87): [9..10]
 a5(r82): [16..16]
Compressing live ranges: from 19 to 7 - 36%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r86): [4..5]
 a4(r87): [4..5]
 a5(r82): [6..6]
  pref0:a4(r87)<-hr5@1000
  pref1:a3(r86)<-hr4@1000
  pref2:a2(r85)<-hr2@1000
  pref3:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=7
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
    3:r86  l0     1    4:r87  l0     3
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


memcpy

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,5u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 34{16d,18u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 19 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 85)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 n+0 S4 A32])) "lib/string.c":161:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [3 src+0 S4 A32])) "lib/string.c":161:5 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 dest+0 S4 A32])) "lib/string.c":161:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (asm_operands/v ("cld
	rep
	movsb") ("") 0 [
                    (reg:SI 85)
                    (reg/f:SI 86)
                    (reg/f:SI 87)
                ]
                 [
                    (asm_input:SI ("c") lib/string.c:161)
                    (asm_input:SI ("S") lib/string.c:161)
                    (asm_input:SI ("D") lib/string.c:161)
                ]
                 [] lib/string.c:161)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":161:5 -1
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_DEAD (reg/f:SI 86)
            (expr_list:REG_DEAD (reg:SI 85)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 9 8 12 2 (set (reg/f:SI 83 [ _4 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [3 dest+0 S4 A32])) "lib/string.c":165:12 75 {*movsi_internal}
     (nil))
(insn 12 9 16 2 (set (reg/f:SI 84 [ <retval> ])
        (reg/f:SI 83 [ _4 ])) "lib/string.c":165:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _4 ])
        (nil)))
(insn 16 12 17 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 84 [ <retval> ])) "lib/string.c":166:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ <retval> ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":166:1 -1
     (nil))

;; Function strrchr (strrchr, funcdef_no=10, decl_uid=1080, cgraph_uid=11, symbol_order=11)

scanning new insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r88,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a4(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r91,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 8(l0): point = 8
   Insn 12(l0): point = 10
   Insn 23(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 4(l0): point = 20
   Insn 3(l0): point = 22
   Insn 2(l0): point = 24
   Insn 24(l0): point = 26
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r88): [9..12]
 a4(r90): [11..16]
 a5(r91): [11..14]
 a6(r89): [13..18]
 a7(r87): [21..22]
 a8(r86): [23..24]
 a9(r82): [26..26]
Compressing live ranges: from 29 to 15 - 51%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r88): [6..7]
 a4(r90): [6..9]
 a5(r91): [6..9]
 a6(r89): [8..9]
 a7(r87): [10..11]
 a8(r86): [12..13]
 a9(r82): [14..14]
  pref0:a5(r91)<-hr0@2000
  pref1:a4(r90)<-hr4@1000
  pref2:a3(r88)<-hr1@2000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=15
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    8:r86  l0     0    7:r87  l0     0    3:r88  l0     1    6:r89  l0     1
    4:r90  l0     2    5:r91  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strrchr

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,3u} r17={2d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={2d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 44{21d,23u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 24 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 24 3 2 (set (reg:SI 86)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 c+0 S4 A32])) "lib/string.c":170:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 87)
        (subreg:QI (reg:SI 86) 0)) "lib/string.c":170:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])
        (reg:QI 87)) "lib/string.c":170:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87)
        (nil)))
(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 5 10 2 (set (reg:SI 89)
        (const_int 0 [0])) "lib/string.c":172:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 s+0 S4 A32])) "lib/string.c":172:9 75 {*movsi_internal}
     (nil))
(insn 11 10 23 2 (set (reg:QI 91)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])) "lib/string.c":172:9 77 {*movqi_internal}
     (nil))
(insn 23 11 12 2 (set (reg:SI 88 [ __res ])
        (reg:SI 89)) "lib/string.c":172:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 12 23 8 2 (parallel [
            (set (reg:SI 88 [ __res ])
                (asm_operands:SI ("cld
	movb %%al,%%ah
1:	lodsb
	cmpb %%ah,%%al
	jne 2f
	movl %%esi,%0
	decl %0
2:	testb %%al,%%al
	jne 1b") ("=d") 0 [
                        (reg:SI 88 [ __res ])
                        (reg/f:SI 90)
                        (reg:QI 91)
                    ]
                     [
                        (asm_input:SI ("0") lib/string.c:172)
                        (asm_input:SI ("S") lib/string.c:172)
                        (asm_input:QI ("a") lib/string.c:172)
                    ]
                     [] lib/string.c:172))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":172:9 -1
     (expr_list:REG_DEAD (reg:QI 91)
        (expr_list:REG_DEAD (reg/f:SI 90)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 8 12 13 2 (set (reg/v/f:SI 83 [ __res ])
        (reg:SI 88 [ __res ])) "lib/string.c":172:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ __res ])
        (nil)))
(insn 13 8 16 2 (set (reg/f:SI 84 [ _4 ])
        (reg/v/f:SI 83 [ __res ])) "lib/string.c":182:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 83 [ __res ])
        (nil)))
(insn 16 13 20 2 (set (reg/f:SI 85 [ <retval> ])
        (reg/f:SI 84 [ _4 ])) "lib/string.c":182:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _4 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 85 [ <retval> ])) "lib/string.c":183:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":183:1 -1
     (nil))

;; Function strspn (strspn, funcdef_no=11, decl_uid=1085, cgraph_uid=12, symbol_order=12)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a3(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 5(l0): point = 8
   Insn 9(l0): point = 10
   Insn 20(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 21(l0): point = 20
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..12]
 a4(r87): [11..18]
 a5(r88): [11..16]
 a6(r89): [13..14]
 a7(r82): [20..20]
Compressing live ranges: from 23 to 11 - 47%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [6..9]
 a5(r88): [6..9]
 a6(r89): [8..9]
 a7(r82): [10..10]
  pref0:a5(r88)<-hr2@1000
  pref1:a4(r87)<-hr0@1000
  pref2:a3(r86)<-hr4@2000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     1    4:r87  l0     3    5:r88  l0     2    6:r89  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strspn

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u} r17={3d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 40{20d,20u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 87)
        (const_int 0 [0])) "lib/string.c":188:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 88)
        (const_int -1 [0xffffffffffffffff])) "lib/string.c":188:9 75 {*movsi_internal}
     (nil))
(insn 8 7 20 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])) "lib/string.c":188:9 75 {*movsi_internal}
     (nil))
(insn 20 8 9 2 (set (reg:SI 86 [ __res ])
        (reg/f:SI 89)) "lib/string.c":188:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 9 20 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
	movl %4,%%edi
	repne
	scasb
	notl %%ecx
	decl %%ecx
	movl %%ecx,%%edx
1:	lodsb
	testb %%al,%%al
	je 2f
	movl %4,%%edi
	movl %%edx,%%ecx
	repne
	scasb
	je 1b
2:	decl %0") ("=S") 0 [
                        (reg:SI 87)
                        (reg:SI 88)
                        (reg:SI 86 [ __res ])
                        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [1 ct+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("a") lib/string.c:188)
                        (asm_input:SI ("c") lib/string.c:188)
                        (asm_input:SI ("0") lib/string.c:188)
                        (asm_input:SI ("g") lib/string.c:188)
                    ]
                     [] lib/string.c:188))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":188:9 -1
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg:SI 87)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 5 9 10 2 (set (reg/v/f:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":188:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 10 5 13 2 (parallel [
            (set (reg:SI 84 [ _4 ])
                (minus:SI (reg/v/f:SI 83 [ __res ])
                    (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":206:21 282 {*subsi_1}
     (expr_list:REG_DEAD (reg/v/f:SI 83 [ __res ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 10 17 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _4 ])) "lib/string.c":206:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "lib/string.c":207:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":207:1 -1
     (nil))

;; Function strcspn (strcspn, funcdef_no=12, decl_uid=1090, cgraph_uid=13, symbol_order=13)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a3(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 5(l0): point = 8
   Insn 9(l0): point = 10
   Insn 20(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 21(l0): point = 20
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..12]
 a4(r87): [11..18]
 a5(r88): [11..16]
 a6(r89): [13..14]
 a7(r82): [20..20]
Compressing live ranges: from 23 to 11 - 47%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [6..9]
 a5(r88): [6..9]
 a6(r89): [8..9]
 a7(r82): [10..10]
  pref0:a5(r88)<-hr2@1000
  pref1:a4(r87)<-hr0@1000
  pref2:a3(r86)<-hr4@2000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     1    4:r87  l0     3    5:r88  l0     2    6:r89  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strcspn

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u} r17={3d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 40{20d,20u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 87)
        (const_int 0 [0])) "lib/string.c":212:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 88)
        (const_int -1 [0xffffffffffffffff])) "lib/string.c":212:9 75 {*movsi_internal}
     (nil))
(insn 8 7 20 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])) "lib/string.c":212:9 75 {*movsi_internal}
     (nil))
(insn 20 8 9 2 (set (reg:SI 86 [ __res ])
        (reg/f:SI 89)) "lib/string.c":212:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 9 20 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
	movl %4,%%edi
	repne
	scasb
	notl %%ecx
	decl %%ecx
	movl %%ecx,%%edx
1:	lodsb
	testb %%al,%%al
	je 2f
	movl %4,%%edi
	movl %%edx,%%ecx
	repne
	scasb
	jne 1b
2:	decl %0") ("=S") 0 [
                        (reg:SI 87)
                        (reg:SI 88)
                        (reg:SI 86 [ __res ])
                        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [1 ct+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("a") lib/string.c:212)
                        (asm_input:SI ("c") lib/string.c:212)
                        (asm_input:SI ("0") lib/string.c:212)
                        (asm_input:SI ("g") lib/string.c:212)
                    ]
                     [] lib/string.c:212))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":212:9 -1
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg:SI 87)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 5 9 10 2 (set (reg/v/f:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":212:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 10 5 13 2 (parallel [
            (set (reg:SI 84 [ _4 ])
                (minus:SI (reg/v/f:SI 83 [ __res ])
                    (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":230:21 282 {*subsi_1}
     (expr_list:REG_DEAD (reg/v/f:SI 83 [ __res ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 10 17 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _4 ])) "lib/string.c":230:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "lib/string.c":231:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":231:1 -1
     (nil))

;; Function strpbrk (strpbrk, funcdef_no=13, decl_uid=1095, cgraph_uid=14, symbol_order=14)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 5(l0): point = 8
   Insn 9(l0): point = 10
   Insn 20(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 21(l0): point = 20
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..12]
 a4(r87): [11..18]
 a5(r88): [11..16]
 a6(r89): [13..14]
 a7(r82): [20..20]
Compressing live ranges: from 23 to 11 - 47%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [6..9]
 a5(r88): [6..9]
 a6(r89): [8..9]
 a7(r82): [10..10]
  pref0:a5(r88)<-hr2@1000
  pref1:a4(r87)<-hr0@1000
  pref2:a3(r86)<-hr4@2000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     1    4:r87  l0     3    5:r88  l0     2    6:r89  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strpbrk

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,3u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{19d,19u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 87)
        (const_int 0 [0])) "lib/string.c":236:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 88)
        (const_int -1 [0xffffffffffffffff])) "lib/string.c":236:9 75 {*movsi_internal}
     (nil))
(insn 8 7 20 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])) "lib/string.c":236:9 75 {*movsi_internal}
     (nil))
(insn 20 8 9 2 (set (reg:SI 86 [ __res ])
        (reg/f:SI 89)) "lib/string.c":236:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 9 20 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
	movl %4,%%edi
	repne
	scasb
	notl %%ecx
	decl %%ecx
	movl %%ecx,%%edx
1:	lodsb
	testb %%al,%%al
	je 2f
	movl %4,%%edi
	movl %%edx,%%ecx
	repne
	scasb
	jne 1b
	decl %0
	jmp 3f
2:	xorl %0,%0
3:") ("=S") 0 [
                        (reg:SI 87)
                        (reg:SI 88)
                        (reg:SI 86 [ __res ])
                        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [1 ct+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("a") lib/string.c:236)
                        (asm_input:SI ("c") lib/string.c:236)
                        (asm_input:SI ("0") lib/string.c:236)
                        (asm_input:SI ("g") lib/string.c:236)
                    ]
                     [] lib/string.c:236))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":236:9 -1
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg:SI 87)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 5 9 10 2 (set (reg/v/f:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":236:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 10 5 13 2 (set (reg/f:SI 84 [ _4 ])
        (reg/v/f:SI 83 [ __res ])) "lib/string.c":257:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 83 [ __res ])
        (nil)))
(insn 13 10 17 2 (set (reg/f:SI 85 [ <retval> ])
        (reg/f:SI 84 [ _4 ])) "lib/string.c":257:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 85 [ <retval> ])) "lib/string.c":258:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":258:1 -1
     (nil))

;; Function strstr (strstr, funcdef_no=14, decl_uid=1100, cgraph_uid=15, symbol_order=15)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a4(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a5(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 5(l0): point = 8
   Insn 9(l0): point = 10
   Insn 20(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 21(l0): point = 20
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..12]
 a4(r88): [11..16]
 a5(r89): [11..14]
 a6(r87): [13..18]
 a7(r82): [20..20]
Compressing live ranges: from 23 to 11 - 47%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r88): [6..9]
 a5(r89): [6..9]
 a6(r87): [8..9]
 a7(r82): [10..10]
  pref0:a5(r89)<-hr4@1000
  pref1:a4(r88)<-hr2@1000
  pref2:a3(r86)<-hr0@2000
  pref3:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    7:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    6:r87  l0     0    4:r88  l0     2    5:r89  l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strstr

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,3u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{19d,19u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 87)
        (const_int 0 [0])) "lib/string.c":263:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 88)
        (const_int -1 [0xffffffffffffffff])) "lib/string.c":263:9 75 {*movsi_internal}
     (nil))
(insn 8 7 20 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 cs+0 S4 A32])) "lib/string.c":263:9 75 {*movsi_internal}
     (nil))
(insn 20 8 9 2 (set (reg:SI 86 [ __res ])
        (reg:SI 87)) "lib/string.c":263:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(insn 9 20 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
	movl %4,%%edi
	repne
	scasb
	notl %%ecx
	decl %%ecx
	movl %%ecx,%%edx
1:	movl %4,%%edi
	movl %%esi,%%eax
	movl %%edx,%%ecx
	repe
	cmpsb
	je 2f
	xchgl %%eax,%%esi
	incl %%esi
	cmpb $0,-1(%%eax)
	jne 1b
	xorl %%eax,%%eax
	2:") ("=a") 0 [
                        (reg:SI 86 [ __res ])
                        (reg:SI 88)
                        (reg/f:SI 89)
                        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [1 ct+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("0") lib/string.c:263)
                        (asm_input:SI ("c") lib/string.c:263)
                        (asm_input:SI ("S") lib/string.c:263)
                        (asm_input:SI ("g") lib/string.c:263)
                    ]
                     [] lib/string.c:263))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":263:9 -1
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_DEAD (reg:SI 88)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 5 9 10 2 (set (reg/v/f:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":263:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 10 5 13 2 (set (reg/f:SI 84 [ _4 ])
        (reg/v/f:SI 83 [ __res ])) "lib/string.c":284:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 83 [ __res ])
        (nil)))
(insn 13 10 17 2 (set (reg/f:SI 85 [ <retval> ])
        (reg/f:SI 84 [ _4 ])) "lib/string.c":284:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 85 [ <retval> ])) "lib/string.c":285:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":285:1 -1
     (nil))

;; Function strtok (strtok, funcdef_no=15, decl_uid=1105, cgraph_uid=16, symbol_order=16)

scanning new insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best BREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a4(r88,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:19000
  a5(r87,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 9(l0): point = 12
   Insn 21(l0): point = 14
   Insn 20(l0): point = 16
   Insn 8(l0): point = 18
   Insn 5(l0): point = 20
   Insn 22(l0): point = 22
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r84): [7..10]
 a3(r82): [9..22]
 a4(r88): [9..14]
 a5(r87): [11..16]
 a6(r89): [15..18]
 a7(r83): [17..20]
Compressing live ranges: from 25 to 12 - 48%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r84): [4..5]
 a3(r82): [4..11]
 a4(r88): [4..7]
 a5(r87): [6..9]
 a6(r89): [8..11]
 a7(r83): [10..11]
  pref0:a4(r88)<-hr4@2000
  pref1:a5(r87)<-hr3@2000
  pref2:a0(r86)<-hr0@1500
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    3:r82  l0     2    7:r83  l0     1    2:r84  l0     3    1:r85  l0     0
    0:r86  l0     0    5:r87  l0     1    4:r88  l0     0    6:r89  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


strtok

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,3u} r17={2d} r19={1d,2u} r82={1d,2u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={2d,2u} r88={2d,2u} r89={1d,1u} 
;;    total ref usage 42{20d,22u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 22 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg/f:SI 83 [ ___strtok.0_1 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("___strtok") [flags 0x2]  <var_decl 0x742a84098b40 ___strtok>)
                        ] UNSPEC_GOTOFF))) [1 ___strtok+0 S4 A32])) "lib/string.c":291:9 75 {*movsi_internal}
     (nil))
(insn 8 5 20 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 s+0 S4 A32])) "lib/string.c":291:9 75 {*movsi_internal}
     (nil))
(insn 20 8 21 2 (set (reg:SI 87 [ __res ])
        (reg/f:SI 83 [ ___strtok.0_1 ])) "lib/string.c":291:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ ___strtok.0_1 ])
        (nil)))
(insn 21 20 9 2 (set (reg:SI 88)
        (reg/f:SI 89)) "lib/string.c":291:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 9 21 6 2 (parallel [
            (set (reg:SI 87 [ __res ])
                (asm_operands:SI ("testl %1,%1
	jne 1f
	testl %0,%0
	je 8f
	movl %0,%1
1:	xorl %0,%0
	movl $-1,%%ecx
	xorl %%eax,%%eax
	cld
	movl %4,%%edi
	repne
	scasb
	notl %%ecx
	decl %%ecx
	je 7f
	movl %%ecx,%%edx
2:	lodsb
	testb %%al,%%al
	je 7f
	movl %4,%%edi
	movl %%edx,%%ecx
	repne
	scasb
	je 2b
	decl %1
	cmpb $0,(%1)
	je 7f
	movl %1,%0
3:	lodsb
	testb %%al,%%al
	je 5f
	movl %4,%%edi
	movl %%edx,%%ecx
	repne
	scasb
	jne 3b
	decl %1
	cmpb $0,(%1)
	je 5f
	movb $0,(%1)
	incl %1
	jmp 6f
5:	xorl %1,%1
6:	cmpb $0,(%0)
	jne 7f
	xorl %0,%0
7:	testl %0,%0
	jne 8f
	movl %0,%1
8:") ("=b") 0 [
                        (reg:SI 87 [ __res ])
                        (reg:SI 88)
                        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [1 ct+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("0") lib/string.c:291)
                        (asm_input:SI ("1") lib/string.c:291)
                        (asm_input:SI ("g") lib/string.c:291)
                    ]
                     [] lib/string.c:291))
            (set (reg:SI 88)
                (asm_operands:SI ("testl %1,%1
	jne 1f
	testl %0,%0
	je 8f
	movl %0,%1
1:	xorl %0,%0
	movl $-1,%%ecx
	xorl %%eax,%%eax
	cld
	movl %4,%%edi
	repne
	scasb
	notl %%ecx
	decl %%ecx
	je 7f
	movl %%ecx,%%edx
2:	lodsb
	testb %%al,%%al
	je 7f
	movl %4,%%edi
	movl %%edx,%%ecx
	repne
	scasb
	je 2b
	decl %1
	cmpb $0,(%1)
	je 7f
	movl %1,%0
3:	lodsb
	testb %%al,%%al
	je 5f
	movl %4,%%edi
	movl %%edx,%%ecx
	repne
	scasb
	jne 3b
	decl %1
	cmpb $0,(%1)
	je 5f
	movb $0,(%1)
	incl %1
	jmp 6f
5:	xorl %1,%1
6:	cmpb $0,(%0)
	jne 7f
	xorl %0,%0
7:	testl %0,%0
	jne 8f
	movl %0,%1
8:") ("=S") 1 [
                        (reg:SI 87 [ __res ])
                        (reg:SI 88)
                        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [1 ct+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("0") lib/string.c:291)
                        (asm_input:SI ("1") lib/string.c:291)
                        (asm_input:SI ("g") lib/string.c:291)
                    ]
                     [] lib/string.c:291))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":291:9 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 9 7 2 (set (reg/v/f:SI 84 [ __res ])
        (reg:SI 87 [ __res ])) "lib/string.c":291:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ __res ])
        (nil)))
(insn 7 6 10 2 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("___strtok") [flags 0x2]  <var_decl 0x742a84098b40 ___strtok>)
                        ] UNSPEC_GOTOFF))) [1 ___strtok+0 S4 A32])
        (reg:SI 88)) "lib/string.c":291:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_DEAD (reg:SI 82)
            (nil))))
(insn 10 7 13 2 (set (reg/f:SI 85 [ _7 ])
        (reg/v/f:SI 84 [ __res ])) "lib/string.c":344:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 84 [ __res ])
        (nil)))
(insn 13 10 17 2 (set (reg/f:SI 86 [ <retval> ])
        (reg/f:SI 85 [ _7 ])) "lib/string.c":344:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _7 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg/f:SI 86 [ <retval> ])) "lib/string.c":345:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":345:1 -1
     (nil))

;; Function memmove (memmove, funcdef_no=16, decl_uid=1111, cgraph_uid=17, symbol_order=17)

scanning new insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best CREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r92,l0) best CREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a10(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a12(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a13(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a14(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 32(l0): point = 4
   Insn 29(l0): point = 6
   Insn 26(l0): point = 9
   Insn 25(l0): point = 11
   Insn 24(l0): point = 13
   Insn 23(l0): point = 15
   Insn 22(l0): point = 17
   Insn 21(l0): point = 19
   Insn 20(l0): point = 21
   Insn 19(l0): point = 23
   Insn 18(l0): point = 25
   Insn 17(l0): point = 27
   Insn 39(l0): point = 30
   Insn 12(l0): point = 32
   Insn 11(l0): point = 34
   Insn 10(l0): point = 36
   Insn 9(l0): point = 38
   Insn 7(l0): point = 41
   Insn 6(l0): point = 43
   Insn 5(l0): point = 45
   Insn 41(l0): point = 47
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r97): [10..11]
 a3(r85): [10..21]
 a4(r88): [10..13]
 a5(r96): [14..15]
 a6(r87): [14..17]
 a7(r86): [18..19]
 a8(r95): [22..23]
 a9(r84): [22..25]
 a10(r83): [26..27]
 a11(r92): [33..38]
 a12(r93): [33..36]
 a13(r94): [33..34]
 a14(r91): [44..45]
 a15(r82): [47..47]
Compressing live ranges: from 50 to 19 - 38%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r97): [4..5]
 a3(r85): [4..9]
 a4(r88): [4..5]
 a5(r96): [6..7]
 a6(r87): [6..7]
 a7(r86): [8..9]
 a8(r95): [10..11]
 a9(r84): [10..11]
 a10(r83): [12..13]
 a11(r92): [14..15]
 a12(r93): [14..15]
 a13(r94): [14..15]
 a14(r91): [16..17]
 a15(r82): [18..18]
  pref0:a2(r97)<-hr2@1000
  pref1:a13(r94)<-hr5@1000
  pref2:a12(r93)<-hr4@1000
  pref3:a11(r92)<-hr2@1000
  pref4:a0(r90)<-hr0@1500
  pref5:a4(r88)<-hr5@1000
  pref6:a3(r85)<-hr4@1000
  regions=1, blocks=6, points=19
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   15:r82  l0     0   10:r83  l0     0    9:r84  l0     1    3:r85  l0     1
    7:r86  l0     0    6:r87  l0     2    4:r88  l0     3    1:r89  l0     0
    0:r90  l0     0   14:r91  l0     0   11:r92  l0     0   12:r93  l0     1
   13:r94  l0     3    8:r95  l0     0    5:r96  l0     0    2:r97  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


memmove

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,5u} r7={1d,5u} r16={1d,15u,2e} r17={8d,1u} r19={1d,5u} r82={1d} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 84{32d,48u,4e} in 23{23 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 41 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 41 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 41 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 dest+0 S4 A32])) "lib/string.c":350:12 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CC 17 flags)
        (compare:CC (reg/f:SI 91)
            (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [3 src+0 S4 A32]))) "lib/string.c":350:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "lib/string.c":350:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 15)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 92)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 n+0 S4 A32])) "lib/string.c":351:17 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [3 src+0 S4 A32])) "lib/string.c":351:17 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 dest+0 S4 A32])) "lib/string.c":351:17 75 {*movsi_internal}
     (nil))
(insn 12 11 39 3 (parallel [
            (asm_operands/v ("cld
	rep
	movsb") ("") 0 [
                    (reg:SI 92)
                    (reg/f:SI 93)
                    (reg/f:SI 94)
                ]
                 [
                    (asm_input:SI ("c") lib/string.c:351)
                    (asm_input:SI ("S") lib/string.c:351)
                    (asm_input:SI ("D") lib/string.c:351)
                ]
                 [] lib/string.c:351)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":351:17 -1
     (expr_list:REG_DEAD (reg/f:SI 94)
        (expr_list:REG_DEAD (reg/f:SI 93)
            (expr_list:REG_DEAD (reg:SI 92)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(jump_insn 39 12 40 3 (set (pc)
        (label_ref 27)) 807 {jump}
     (nil)
 -> 27)
(barrier 40 39 15)
(code_label 15 40 16 4 34 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 83 [ n.1_1 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 n+0 S4 A32])) "lib/string.c":360:45 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 84 [ _2 ])
                (plus:SI (reg:SI 83 [ n.1_1 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":360:45 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ n.1_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [3 src+0 S4 A32])) "lib/string.c":360:45 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg:SI 84 [ _2 ])
                    (reg/f:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":360:45 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [3 src+0 S4 A32])
                        (reg:SI 84 [ _2 ]))
                    (nil))))))
(insn 21 20 22 4 (set (reg:SI 86 [ n.2_4 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 n+0 S4 A32])) "lib/string.c":360:60 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 87 [ _5 ])
                (plus:SI (reg:SI 86 [ n.2_4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":360:60 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ n.2_4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 4 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 dest+0 S4 A32])) "lib/string.c":360:60 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 88 [ _6 ])
                (plus:SI (reg:SI 87 [ _5 ])
                    (reg/f:SI 96)))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":360:60 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [3 dest+0 S4 A32])
                        (reg:SI 87 [ _5 ]))
                    (nil))))))
(insn 25 24 26 4 (set (reg:SI 97)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 n+0 S4 A32])) "lib/string.c":357:17 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (parallel [
            (asm_operands/v ("std
	rep
	movsb") ("") 0 [
                    (reg:SI 97)
                    (reg/f:SI 85 [ _3 ])
                    (reg/f:SI 88 [ _6 ])
                ]
                 [
                    (asm_input:SI ("c") lib/string.c:357)
                    (asm_input:SI ("S") lib/string.c:357)
                    (asm_input:SI ("D") lib/string.c:357)
                ]
                 [] lib/string.c:357)
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":357:17 -1
     (expr_list:REG_DEAD (reg:SI 97)
        (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
            (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(code_label 27 26 28 5 35 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 32 5 (set (reg/f:SI 89 [ _10 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [3 dest+0 S4 A32])) "lib/string.c":362:16 75 {*movsi_internal}
     (nil))
(insn 32 29 36 5 (set (reg/f:SI 90 [ <retval> ])
        (reg/f:SI 89 [ _10 ])) "lib/string.c":362:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _10 ])
        (nil)))
(insn 36 32 37 5 (set (reg/i:SI 0 ax)
        (reg/f:SI 90 [ <retval> ])) "lib/string.c":363:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ <retval> ])
        (nil)))
(insn 37 36 0 5 (use (reg/i:SI 0 ax)) "lib/string.c":363:1 -1
     (nil))

;; Function memcmp (memcmp, funcdef_no=17, decl_uid=1116, cgraph_uid=18, symbol_order=18)

scanning new insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best CREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a4(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a6(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a8(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 5(l0): point = 8
   Insn 10(l0): point = 10
   Insn 21(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 22(l0): point = 22
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..12]
 a4(r88): [11..18]
 a5(r89): [11..16]
 a6(r90): [11..14]
 a7(r87): [13..20]
 a8(r82): [22..22]
Compressing live ranges: from 25 to 11 - 44%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r88): [6..9]
 a5(r89): [6..9]
 a6(r90): [6..9]
 a7(r87): [8..9]
 a8(r82): [10..10]
  pref0:a6(r90)<-hr2@1000
  pref1:a5(r89)<-hr4@1000
  pref2:a4(r88)<-hr5@1000
  pref3:a3(r86)<-hr0@2000
  pref4:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    7:r87  l0     0    4:r88  l0     1    5:r89  l0     3
    6:r90  l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


memcmp

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 41{20d,21u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 22 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 87)
        (const_int 0 [0])) "lib/string.c":368:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 88)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 cs+0 S4 A32])) "lib/string.c":368:9 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [3 ct+0 S4 A32])) "lib/string.c":368:9 75 {*movsi_internal}
     (nil))
(insn 9 8 21 2 (set (reg:SI 90)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 count+0 S4 A32])) "lib/string.c":368:9 75 {*movsi_internal}
     (nil))
(insn 21 9 10 2 (set (reg:SI 86 [ __res ])
        (reg:SI 87)) "lib/string.c":368:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(insn 10 21 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands:SI ("cld
	repe
	cmpsb
	je 1f
	movl $1,%%eax
	jl 1f
	negl %%eax
1:") ("=a") 0 [
                        (reg:SI 86 [ __res ])
                        (reg/f:SI 88)
                        (reg/f:SI 89)
                        (reg:SI 90)
                    ]
                     [
                        (asm_input:SI ("0") lib/string.c:368)
                        (asm_input:SI ("D") lib/string.c:368)
                        (asm_input:SI ("S") lib/string.c:368)
                        (asm_input:SI ("c") lib/string.c:368)
                    ]
                     [] lib/string.c:368))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":368:9 -1
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_DEAD (reg/f:SI 89)
            (expr_list:REG_DEAD (reg/f:SI 88)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 5 10 11 2 (set (reg/v:SI 83 [ __res ])
        (reg:SI 86 [ __res ])) "lib/string.c":368:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 11 5 14 2 (set (reg:SI 84 [ _5 ])
        (reg/v:SI 83 [ __res ])) "lib/string.c":378:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ __res ])
        (nil)))
(insn 14 11 18 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _5 ])) "lib/string.c":378:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _5 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "lib/string.c":379:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:SI 0 ax)) "lib/string.c":379:1 -1
     (nil))

;; Function memchr (memchr, funcdef_no=18, decl_uid=1122, cgraph_uid=19, symbol_order=19)

scanning new insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best CREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a3(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r89,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a5(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a6(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 7
   Insn 16(l0): point = 9
   Insn 20(l0): point = 11
   Insn 19(l0): point = 13
   Insn 18(l0): point = 15
   Insn 17(l0): point = 17
   Insn 31(l0): point = 20
   Insn 11(l0): point = 22
   Insn 9(l0): point = 25
   Insn 8(l0): point = 27
   Insn 4(l0): point = 29
   Insn 3(l0): point = 31
   Insn 2(l0): point = 33
   Insn 33(l0): point = 35
 a0(r85): [3..4]
 a1(r83): [20..22] [5..7]
 a2(r84): [8..9]
 a3(r88): [10..11]
 a4(r89): [12..17]
 a5(r90): [12..15]
 a6(r91): [12..13]
 a7(r87): [30..31]
 a8(r86): [32..33]
 a9(r82): [35..35]
Compressing live ranges: from 38 to 17 - 44%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r83): [10..11] [2..3]
 a2(r84): [4..5]
 a3(r88): [6..7]
 a4(r89): [8..9]
 a5(r90): [8..9]
 a6(r91): [8..9]
 a7(r87): [12..13]
 a8(r86): [14..15]
 a9(r82): [16..16]
  pref0:a6(r91)<-hr2@1000
  pref1:a5(r90)<-hr5@1000
  pref2:a4(r89)<-hr0@2000
  pref3:a3(r88)<-hr5@1000
  pref4:a0(r85)<-hr0@1500
  regions=1, blocks=6, points=17
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    9:r82  l0     0    1:r83  l0     0    2:r84  l0     3    0:r85  l0     0
    8:r86  l0     0    7:r87  l0     0    3:r88  l0     0    4:r89  l0     0
    5:r90  l0     1    6:r91  l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


memchr

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,5u} r7={1d,5u} r16={1d,8u} r17={3d,1u} r19={1d,7u} r82={1d} r83={2d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 59{22d,37u,0e} in 17{17 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 33 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 33 3 2 (set (reg:SI 86)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 c+0 S4 A32])) "lib/string.c":382:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 87)
        (subreg:QI (reg:SI 86) 0)) "lib/string.c":382:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])
        (reg:QI 87)) "lib/string.c":382:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [2 count+0 S4 A32])
            (const_int 0 [0]))) "lib/string.c":384:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "lib/string.c":384:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 31 3 (set (reg/f:SI 83 [ _1 ])
        (const_int 0 [0])) "lib/string.c":385:24 75 {*movsi_internal}
     (nil))
(jump_insn 31 11 32 3 (set (pc)
        (label_ref 22)) "lib/string.c":385:24 807 {jump}
     (nil)
 -> 22)
(barrier 32 31 14)
(code_label 14 32 15 4 40 (nil) [1 uses])
(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 15 18 4 (set (reg:QI 89)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 c+0 S1 A32])) "lib/string.c":386:9 77 {*movqi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 cs+0 S4 A32])) "lib/string.c":386:9 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:SI 91)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 count+0 S4 A32])) "lib/string.c":386:9 75 {*movsi_internal}
     (nil))
(insn 20 19 16 4 (parallel [
            (set (reg:SI 88 [ __res ])
                (asm_operands:SI ("cld
	repne
	scasb
	je 1f
	movl $1,%0
1:	decl %0") ("=D") 0 [
                        (reg:QI 89)
                        (reg/f:SI 90)
                        (reg:SI 91)
                    ]
                     [
                        (asm_input:QI ("a") lib/string.c:386)
                        (asm_input:SI ("D") lib/string.c:386)
                        (asm_input:SI ("c") lib/string.c:386)
                    ]
                     [] lib/string.c:386))
            (clobber (reg:CC 17 flags))
        ]) "lib/string.c":386:9 -1
     (expr_list:REG_DEAD (reg:SI 91)
        (expr_list:REG_DEAD (reg/f:SI 90)
            (expr_list:REG_DEAD (reg:QI 89)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 16 20 21 4 (set (reg/v/f:SI 84 [ __res ])
        (reg:SI 88 [ __res ])) "lib/string.c":386:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ __res ])
        (nil)))
(insn 21 16 22 4 (set (reg/f:SI 83 [ _1 ])
        (reg/v/f:SI 84 [ __res ])) "lib/string.c":394:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 84 [ __res ])
        (nil)))
(code_label 22 21 23 5 41 (nil) [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 5 (set (reg/f:SI 85 [ <retval> ])
        (reg/f:SI 83 [ _1 ])) "lib/string.c":395:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(insn 28 24 29 5 (set (reg/i:SI 0 ax)
        (reg/f:SI 85 [ <retval> ])) "lib/string.c":395:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ <retval> ])
        (nil)))
(insn 29 28 0 5 (use (reg/i:SI 0 ax)) "lib/string.c":395:1 -1
     (nil))
