
;; Function waitpid (waitpid, funcdef_no=0, decl_uid=1192, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r90,l0) best DREG, allocno GENERAL_REGS
    r89: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best BREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r83,l0) best CREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r87,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:19000
  a7(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a8(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a9(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a10(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 28(l0): point = 4
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 23(l0): point = 11
   Insn 22(l0): point = 13
   Insn 21(l0): point = 15
   Insn 35(l0): point = 18
   Insn 16(l0): point = 20
   Insn 14(l0): point = 23
   Insn 13(l0): point = 25
   Insn 6(l0): point = 27
   Insn 10(l0): point = 29
   Insn 37(l0): point = 31
   Insn 9(l0): point = 33
   Insn 8(l0): point = 35
   Insn 7(l0): point = 37
   Insn 5(l0): point = 39
   Insn 38(l0): point = 41
 a0(r86): [3..4]
 a1(r85): [18..20] [5..7]
 a2(r92): [10..11]
 a3(r84): [10..13]
 a4(r82): [23..41] [12..17]
 a5(r91): [14..15]
 a6(r87): [28..31]
 a7(r89): [30..35]
 a8(r83): [30..39]
 a9(r90): [30..33]
 a10(r88): [32..37]
Compressing live ranges: from 44 to 16 - 36%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [10..11] [2..3]
 a2(r92): [4..5]
 a3(r84): [4..7]
 a4(r82): [12..15] [6..9]
 a5(r91): [8..9]
 a6(r87): [12..13]
 a7(r89): [12..15]
 a8(r83): [12..15]
 a9(r90): [12..15]
 a10(r88): [14..15]
  pref0:a9(r90)<-hr1@1000
  pref1:a7(r89)<-hr3@1000
  pref2:a6(r87)<-hr0@2000
  pref3:a0(r86)<-hr0@1500
  pref4:a8(r83)<-hr2@1000
  regions=1, blocks=6, points=16
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
    4:r82  l0     4    8:r83  l0     2    3:r84  l0     1    1:r85  l0     0
    0:r86  l0     0    6:r87  l0     0   10:r88  l0     0    7:r89  l0     3
    9:r90  l0     1    5:r91  l0     0    2:r92  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


waitpid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,5u} r7={1d,5u} r16={1d,7u} r17={4d,1u} r19={1d,9u,1e} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={2d,1u} r86={1d,1u} r87={2d,2u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 67{25d,41u,1e} in 20{20 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 38 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 38 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 7 2 (set (reg:SI 83 [ wait_stat.0_1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [3 wait_stat+0 S4 A32])) "lib/wait.c":11:1 75 {*movsi_internal}
     (nil))
(insn 7 5 8 2 (set (reg:SI 88)
        (const_int 7 [0x7])) "lib/wait.c":11:1 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 89)
        (mem/c:SI (reg/f:SI 16 argp) [2 pid+0 S4 A32])) "lib/wait.c":11:1 75 {*movsi_internal}
     (nil))
(insn 9 8 37 2 (set (reg:SI 90)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 options+0 S4 A32])) "lib/wait.c":11:1 75 {*movsi_internal}
     (nil))
(insn 37 9 10 2 (set (reg:SI 87 [ __res ])
        (reg:SI 88)) "lib/wait.c":11:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 10 37 6 2 (parallel [
            (set (reg:SI 87 [ __res ])
                (asm_operands/v:SI ("int $0x80") ("=a") 0 [
                        (reg:SI 87 [ __res ])
                        (reg:SI 89)
                        (reg:SI 83 [ wait_stat.0_1 ])
                        (reg:SI 90)
                    ]
                     [
                        (asm_input:SI ("0") lib/wait.c:11)
                        (asm_input:SI ("b") lib/wait.c:11)
                        (asm_input:SI ("c") lib/wait.c:11)
                        (asm_input:SI ("d") lib/wait.c:11)
                    ]
                     [] lib/wait.c:11))
            (clobber (reg:CC 17 flags))
        ]) "lib/wait.c":11:1 -1
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_DEAD (reg:SI 89)
            (expr_list:REG_DEAD (reg:SI 83 [ wait_stat.0_1 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 6 10 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])
        (reg:SI 87 [ __res ])) "lib/wait.c":11:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ __res ])
        (nil)))
(insn 13 6 14 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])
            (const_int 0 [0]))) "lib/wait.c":11:1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "lib/wait.c":11:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 19)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 35 3 (set (reg:SI 85 [ _3 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])) "lib/wait.c":11:1 75 {*movsi_internal}
     (nil))
(jump_insn 35 16 36 3 (set (pc)
        (label_ref 26)) "lib/wait.c":11:1 807 {jump}
     (nil)
 -> 26)
(barrier 36 35 19)
(code_label 19 36 20 4 2 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 91)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])) "lib/wait.c":11:1 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 84 [ _2 ])
                (neg:SI (reg:SI 91)))
            (clobber (reg:CC 17 flags))
        ]) "lib/wait.c":11:1 575 {*negsi_1}
     (expr_list:REG_DEAD (reg:SI 91)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32]))
                (nil)))))
(insn 23 22 24 4 (set (reg/f:SI 92)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("errno") [flags 0x40]  <var_decl 0x73dcb997ab40 errno>)
                        ] UNSPEC_GOT))) [4  S4 A8])) "lib/wait.c":11:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 24 23 25 4 (set (mem/c:SI (reg/f:SI 92) [2 errno+0 S4 A32])
        (reg:SI 84 [ _2 ])) "lib/wait.c":11:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (nil))))
(insn 25 24 26 4 (set (reg:SI 85 [ _3 ])
        (const_int -1 [0xffffffffffffffff])) "lib/wait.c":11:1 75 {*movsi_internal}
     (nil))
(code_label 26 25 27 5 3 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 32 5 (set (reg:SI 86 [ <retval> ])
        (reg:SI 85 [ _3 ])) "lib/wait.c":11:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(insn 32 28 33 5 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) "lib/wait.c":11:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ <retval> ])
        (nil)))
(insn 33 32 0 5 (use (reg/i:SI 0 ax)) "lib/wait.c":11:1 -1
     (nil))

;; Function wait (wait, funcdef_no=1, decl_uid=1194, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 5(l0): point = 16
   Insn 20(l0): point = 18
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [18..18]
Compressing live ranges: from 21 to 5 - 23%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  pref1:a1(r83)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


wait

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={5d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={3d} r18={1d} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 105{86d,19u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 0 [0])) "lib/wait.c":15:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [3 wait_stat+0 S4 A32])) "lib/wait.c":15:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int -1 [0xffffffffffffffff])) "lib/wait.c":15:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("waitpid") [flags 0x3]  <function_decl 0x73dcb8112e00 waitpid>) [0 waitpid S1 A8])
            (const_int 12 [0xc]))) "lib/wait.c":15:12 823 {*call_value}
     (nil)
    (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "lib/wait.c":15:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 13 2 (set (reg:SI 83 [ _4 ])
        (reg:SI 0 ax)) "lib/wait.c":15:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 13 10 17 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _4 ])) "lib/wait.c":15:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "lib/wait.c":16:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) "lib/wait.c":16:1 -1
     (nil))
