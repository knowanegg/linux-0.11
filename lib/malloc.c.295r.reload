
;; Function init_bucket_desc (init_bucket_desc, funcdef_no=0, decl_uid=1027, cgraph_uid=1, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 27:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6 7 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 50: point = 0, n_alt = -1
  BB 7
   Insn 44: point = 0, n_alt = 1
   Insn 43: point = 1, n_alt = 0
   Insn 42: point = 2, n_alt = 1
   Insn 41: point = 3, n_alt = 0
   Insn 40: point = 4, n_alt = 0
  BB 6
   Insn 38: point = 6, n_alt = -1
   Insn 37: point = 6, n_alt = 0
  BB 4
   Insn 47: point = 7, n_alt = -1
   Insn 22: point = 7, n_alt = 1
  BB 3
   Insn 19: point = 8, n_alt = 0
   Insn 18: point = 8, n_alt = 0
   Insn 17: point = 8, n_alt = -2
   Insn 16: point = 8, n_alt = 0
   Insn 15: point = 9, n_alt = 0
   Insn 14: point = 10, n_alt = 0
  BB 2
   Insn 12: point = 11, n_alt = -1
   Insn 11: point = 11, n_alt = 1
   Insn 10: point = 11, n_alt = 1
   Insn 9: point = 12, n_alt = 0
   Insn 8: point = 13, n_alt = 1
   Insn 7: point = 14, n_alt = -2
   Insn 6: point = 15, n_alt = 0
   Insn 5: point = 15, n_alt = -2
   Insn 51: point = 15, n_alt = 0
  BB 5
   Insn 31: point = 16, n_alt = 0
   Insn 30: point = 16, n_alt = 0
   Insn 29: point = 16, n_alt = 1
   Insn 28: point = 17, n_alt = 0
   Insn 27: point = 18, n_alt = 3
   Insn 26: point = 20, n_alt = 0
 r82: [0..21]
 r83: [13..14]
 r84: [16..18]
 r85: [2..4]
 r86: [11..12]
 r87: [8..9]
 r88: [19..20]
 r89: [16..17]
 r90: [2..3]
 r91: [0..1]
Compressing live ranges: from 22 to 14 - 63%
Ranges after the compression:
 r82: [0..13]
 r83: [8..9]
 r84: [10..11]
 r85: [2..3]
 r86: [6..7]
 r87: [4..5]
 r88: [12..13]
 r89: [10..11]
 r90: [2..3]
 r91: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 51
changing reg in insn 44
changing reg in insn 40
changing reg in insn 17
changing reg in insn 15
changing reg in insn 5
changing reg in insn 7
changing reg in insn 8
changing reg in insn 27
changing reg in insn 29
changing reg in insn 40
changing reg in insn 42
changing reg in insn 9
changing reg in insn 10
changing reg in insn 15
changing reg in insn 16
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
deleting insn with uid = 5.
deleting insn with uid = 7.
deleting insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 18.


init_bucket_desc

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,7u} r1={5d,2u} r2={3d} r3={1d,5u} r7={4d,29u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={10d,2u} r18={2d} r19={1e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 208{162d,45u,1e} in 28{26 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 51 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 51 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 51 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 2 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x7c386e4d2b00 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "lib/malloc.c":104:41 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 8 6 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bdesc+0 S4 A32])
        (reg:SI 0 ax [orig:83 _1 ] [83])) "lib/malloc.c":104:16 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":104:8 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 first+0 S4 A32])
        (reg/f:SI 0 ax [86])) "lib/malloc.c":104:8 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":105:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "lib/malloc.c":105:5 806 {*jcc}
     (nil)
 -> 20)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":106:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 15 14 16 3 (set (reg/f:SI 0 ax [87])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7c386e4fbcf0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":106:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7c386e4fbcf0 *.LC0>)
        (nil)))
(insn 16 15 18 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [87])) "lib/malloc.c":106:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 18 16 19 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7c386e4d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":106:3 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":106:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 20 19 21 4 2 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 47 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 i+0 S4 A32])
        (const_int 256 [0x100])) "lib/malloc.c":107:9 75 {*movsi_internal}
     (nil))
(jump_insn 47 22 48 4 (set (pc)
        (label_ref 32)) "lib/malloc.c":107:2 807 {jump}
     (nil)
 -> 32)
(barrier 48 47 34)
(code_label 34 48 25 5 4 (nil) [1 uses])
(note 25 34 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":108:23 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 1 dx [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [88])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":108:23 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 28 27 29 5 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":108:15 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [89])
                (const_int 4 [0x4])) [1 bdesc_4->next+0 S4 A32])
        (reg/f:SI 1 dx [orig:84 _2 ] [84])) "lib/malloc.c":108:15 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [1 bdesc+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [1 bdesc+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":109:8 209 {*addsi_1}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [6 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":107:59 209 {*addsi_1}
     (nil))
(code_label 32 31 33 6 3 (nil) [1 uses])
(note 33 32 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 33 38 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 i+0 S4 A32])
            (const_int 1 [0x1]))) "lib/malloc.c":107:53 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "lib/malloc.c":107:53 806 {*jcc}
     (nil)
 -> 34)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:SI 1 dx [orig:85 free_bucket_desc.1_3 ] [85])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x7c386fe6ef30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":115:14 75 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":115:14 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [90])
                (const_int 4 [0x4])) [1 bdesc_4->next+0 S4 A32])
        (reg/f:SI 1 dx [orig:85 free_bucket_desc.1_3 ] [85])) "lib/malloc.c":115:14 75 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 first+0 S4 A32])) "lib/malloc.c":116:19 75 {*movsi_internal}
     (nil))
(insn 44 43 49 7 (set (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x7c386fe6ef30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])
        (reg/f:SI 0 ax [91])) "lib/malloc.c":116:19 75 {*movsi_internal}
     (nil))
(note 49 44 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 52 8 (const_int 0 [0]) "lib/malloc.c":117:1 843 {nop}
     (nil))
(note 52 50 0 NOTE_INSN_DELETED)

;; Function malloc (malloc, funcdef_no=1, decl_uid=1037, cgraph_uid=2, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 97:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 112:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 117:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 123:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
      Creating newreg=148 from oldreg=129, assigning class DREG to r148
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 139:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 149:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 167:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 168:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 170:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 22
EBB 23
EBB 6 7
EBB 8
EBB 9 10
EBB 11 24
EBB 25
EBB 12 13 14
EBB 15 16
EBB 17
EBB 18
EBB 19 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
   Insn 180: point = 0, n_alt = -1
   Insn 179: point = 0, n_alt = -2
   Insn 175: point = 1, n_alt = -2
   Insn 172: point = 3, n_alt = 0
   Insn 171: point = 4, n_alt = -1
   Insn 170: point = 4, n_alt = 3
   Insn 169: point = 5, n_alt = 0
   Insn 168: point = 6, n_alt = 3
   Insn 167: point = 8, n_alt = 2
   Insn 166: point = 10, n_alt = 0
   Insn 165: point = 11, n_alt = 1
   Insn 164: point = 12, n_alt = 0
   Insn 163: point = 13, n_alt = 0
   Insn 162: point = 15, n_alt = 0
   Insn 161: point = 16, n_alt = 1
   Insn 160: point = 17, n_alt = 0
   Insn 159: point = 19, n_alt = 0
  BB 20
   Insn 156: point = 20, n_alt = 1
   Insn 155: point = 21, n_alt = 0
   Insn 154: point = 22, n_alt = 0
   Insn 153: point = 23, n_alt = 1
   Insn 152: point = 24, n_alt = 0
   Insn 151: point = 25, n_alt = 0
   Insn 150: point = 27, n_alt = 0
   Insn 149: point = 28, n_alt = 1
   Insn 148: point = 29, n_alt = 0
  BB 19
   Insn 146: point = 30, n_alt = -1
   Insn 145: point = 30, n_alt = 0
  BB 17
   Insn 186: point = 30, n_alt = -1
   Insn 124: point = 30, n_alt = 1
   Insn 123: point = 31, n_alt = 0
   Insn 122: point = 33, n_alt = 0
   Insn 121: point = 34, n_alt = 0
   Insn 120: point = 36, n_alt = 0
  BB 16
   Insn 117: point = 37, n_alt = 0
   Insn 116: point = 37, n_alt = 0
   Insn 115: point = 37, n_alt = -2
   Insn 114: point = 38, n_alt = 0
   Insn 113: point = 39, n_alt = 0
   Insn 112: point = 40, n_alt = 0
  BB 15
   Insn 110: point = 41, n_alt = -1
   Insn 109: point = 41, n_alt = 1
   Insn 108: point = 41, n_alt = 1
   Insn 107: point = 42, n_alt = 0
   Insn 106: point = 43, n_alt = 0
   Insn 105: point = 45, n_alt = 0
   Insn 104: point = 46, n_alt = 1
   Insn 103: point = 47, n_alt = 0
   Insn 102: point = 48, n_alt = 0
   Insn 101: point = 49, n_alt = 1
   Insn 100: point = 50, n_alt = -2
   Insn 99: point = 51, n_alt = 0
   Insn 98: point = 51, n_alt = -2
   Insn 97: point = 51, n_alt = 3
   Insn 96: point = 52, n_alt = 0
   Insn 95: point = 53, n_alt = 0
   Insn 94: point = 55, n_alt = 0
   Insn 93: point = 57, n_alt = 0
   Insn 92: point = 58, n_alt = 3
   Insn 91: point = 59, n_alt = 0
   Insn 90: point = 60, n_alt = 1
   Insn 89: point = 61, n_alt = 0
   Insn 88: point = 63, n_alt = 0
   Insn 87: point = 64, n_alt = 1
   Insn 86: point = 65, n_alt = 0
  BB 14
   Insn 83: point = 67, n_alt = 0
  BB 13
   Insn 81: point = 68, n_alt = -1
   Insn 80: point = 68, n_alt = 0
   Insn 79: point = 69, n_alt = 0
  BB 18
   Insn 139: point = 71, n_alt = 0
   Insn 138: point = 71, n_alt = 0
   Insn 137: point = 72, n_alt = -2
   Insn 136: point = 74, n_alt = 0
   Insn 135: point = 76, n_alt = 0
   Insn 134: point = 77, n_alt = 1
   Insn 133: point = 78, n_alt = 0
   Insn 132: point = 79, n_alt = 0
   Insn 131: point = 81, n_alt = 0
   Insn 130: point = 82, n_alt = -2
   Insn 129: point = 84, n_alt = 0
   Insn 128: point = 86, n_alt = 0
  BB 12
   Insn 77: point = 87, n_alt = -1
   Insn 76: point = 87, n_alt = 1
  BB 24
   Insn 195: point = 88, n_alt = -1
  BB 25
   Insn 199: point = 89, n_alt = -1
  BB 9
   Insn 60: point = 90, n_alt = -1
   Insn 59: point = 90, n_alt = 0
   Insn 58: point = 91, n_alt = 0
   Insn 57: point = 93, n_alt = 0
  BB 11
   Insn 73: point = 95, n_alt = -1
   Insn 72: point = 95, n_alt = 1
  BB 8
   Insn 184: point = 96, n_alt = -1
   Insn 53: point = 96, n_alt = 1
   Insn 52: point = 97, n_alt = 0
   Insn 51: point = 99, n_alt = 0
   Insn 50: point = 100, n_alt = -1
  BB 7
   Insn 47: point = 101, n_alt = 0
   Insn 46: point = 101, n_alt = 0
   Insn 45: point = 101, n_alt = -2
   Insn 44: point = 101, n_alt = 0
   Insn 43: point = 102, n_alt = 0
   Insn 42: point = 103, n_alt = 0
   Insn 41: point = 103, n_alt = 0
   Insn 40: point = 103, n_alt = 0
   Insn 39: point = 103, n_alt = -2
   Insn 38: point = 103, n_alt = 0
   Insn 37: point = 104, n_alt = 0
   Insn 36: point = 105, n_alt = 0
   Insn 35: point = 105, n_alt = 0
  BB 6
   Insn 33: point = 106, n_alt = -1
   Insn 32: point = 106, n_alt = 0
   Insn 31: point = 107, n_alt = 0
   Insn 30: point = 109, n_alt = 0
  BB 22
   Insn 189: point = 111, n_alt = -1
  BB 23
   Insn 193: point = 112, n_alt = -1
  BB 3
   Insn 14: point = 113, n_alt = -1
   Insn 13: point = 113, n_alt = 0
   Insn 12: point = 114, n_alt = -2
   Insn 11: point = 116, n_alt = 0
   Insn 10: point = 118, n_alt = 0
  BB 5
   Insn 27: point = 120, n_alt = -1
   Insn 26: point = 120, n_alt = 0
   Insn 24: point = 121, n_alt = 0
   Insn 23: point = 123, n_alt = 0
  BB 2
   Insn 182: point = 125, n_alt = -1
   Insn 6: point = 125, n_alt = 1
   Insn 5: point = 126, n_alt = 0
   Insn 200: point = 127, n_alt = 0
  BB 4
   Insn 20: point = 128, n_alt = 0
  BB 10
   Insn 68: point = 129, n_alt = 1
   Insn 67: point = 130, n_alt = 0
   Insn 66: point = 132, n_alt = 0
 r82: [87..133] [37..70]
 r83: [115..116]
 r84: [113..114]
 r85: [120..121]
 r86: [106..107]
 r87: [90..91]
 r88: [68..69]
 r89: [60..61]
 r90: [54..55]
 r91: [51..53]
 r92: [49..50]
 r93: [41..43]
 r94: [32..34]
 r95: [83..84]
 r96: [80..82]
 r97: [77..79]
 r98: [73..74]
 r99: [71..72]
 r100: [23..25]
 r101: [11..13]
 r102: [7..8]
 r103: [4..6]
 r104: [2..3]
 r105: [0..1]
 r106: [125..126]
 r107: [117..118]
 r108: [122..123]
 r109: [108..109]
 r110: [103..104]
 r111: [101..102]
 r112: [98..99]
 r113: [96..97]
 r114: [92..93]
 r115: [131..132]
 r116: [129..130]
 r117: [64..65]
 r118: [62..63]
 r119: [58..59]
 r120: [56..57]
 r121: [51..52]
 r122: [46..48]
 r123: [46..47]
 r124: [44..45]
 r125: [41..42]
 r126: [38..39]
 r127: [35..36]
 r128: [30..31]
 r130: [32..33]
 r131: [85..86]
 r132: [80..81]
 r133: [77..78]
 r134: [75..76]
 r135: [28..29]
 r136: [26..27]
 r137: [23..24]
 r138: [20..22]
 r139: [20..21]
 r140: [18..19]
 r141: [16..17]
 r142: [14..15]
 r143: [11..12]
 r144: [9..10]
 r145: [4..5]
 r148: [31..32]
Compressing live ranges: from 134 to 104 - 77%
Ranges after the compression:
 r82: [72..103] [32..57]
 r83: [90..91]
 r84: [88..89]
 r85: [94..95]
 r86: [84..85]
 r87: [72..73]
 r88: [56..57]
 r89: [50..51]
 r90: [44..45]
 r91: [42..43]
 r92: [40..41]
 r93: [34..35]
 r94: [28..29]
 r95: [68..69]
 r96: [66..67]
 r97: [64..65]
 r98: [60..61]
 r99: [58..59]
 r100: [20..21]
 r101: [10..11]
 r102: [6..7]
 r103: [4..5]
 r104: [2..3]
 r105: [0..1]
 r106: [98..99]
 r107: [92..93]
 r108: [96..97]
 r109: [86..87]
 r110: [82..83]
 r111: [80..81]
 r112: [78..79]
 r113: [76..77]
 r114: [74..75]
 r115: [102..103]
 r116: [100..101]
 r117: [54..55]
 r118: [52..53]
 r119: [48..49]
 r120: [46..47]
 r121: [42..43]
 r122: [38..39]
 r123: [38..39]
 r124: [36..37]
 r125: [34..35]
 r126: [32..33]
 r127: [30..31]
 r128: [26..27]
 r130: [28..29]
 r131: [70..71]
 r132: [66..67]
 r133: [64..65]
 r134: [62..63]
 r135: [24..25]
 r136: [22..23]
 r137: [20..21]
 r138: [18..19]
 r139: [18..19]
 r140: [16..17]
 r141: [14..15]
 r142: [12..13]
 r143: [10..11]
 r144: [8..9]
 r145: [4..5]
 r148: [27..28]

********** Assignment #1: **********

	 Assigning to 148 (cl=DREG, orig=129, freq=1000, tfirst=148, tfreq=1000)...
	 Trying 1: spill 94(freq=2000)	 Now best 1(cost=1000, bad_spills=0, insn_pseudos=1)

      Spill r94(hr=1, freq=2000) for r148
	   Assign 1 to reload r148 (freq=1000)
  Reassigning non-reload pseudos
	   Assign 2 to r94 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 200
changing reg in insn 115
changing reg in insn 113
changing reg in insn 98
changing reg in insn 90
changing reg in insn 86
changing reg in insn 79
changing reg in insn 45
changing reg in insn 43
changing reg in insn 39
changing reg in insn 37
changing reg in insn 5
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 24
changing reg in insn 26
changing reg in insn 31
changing reg in insn 32
changing reg in insn 58
changing reg in insn 59
changing reg in insn 79
changing reg in insn 80
changing reg in insn 89
changing reg in insn 90
changing reg in insn 94
changing reg in insn 95
changing reg in insn 97
changing reg in insn 100
changing reg in insn 101
changing reg in insn 106
changing reg in insn 108
changing reg in insn 121
changing reg in insn 123
changing reg in insn 123
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 132
changing reg in insn 132
changing reg in insn 132
changing reg in insn 134
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 138
changing reg in insn 151
changing reg in insn 153
changing reg in insn 163
changing reg in insn 165
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 170
changing reg in insn 172
changing reg in insn 175
changing reg in insn 175
changing reg in insn 179
changing reg in insn 5
changing reg in insn 6
changing reg in insn 10
changing reg in insn 11
changing reg in insn 23
changing reg in insn 24
changing reg in insn 30
changing reg in insn 31
changing reg in insn 37
changing reg in insn 38
changing reg in insn 43
changing reg in insn 44
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 57
changing reg in insn 58
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 96
changing reg in insn 97
changing reg in insn 102
changing reg in insn 104
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 113
changing reg in insn 114
changing reg in insn 120
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 128
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 155
changing reg in insn 156
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
deleting insn with uid = 12.
deleting insn with uid = 39.
deleting insn with uid = 45.
deleting insn with uid = 98.
deleting insn with uid = 100.
deleting insn with uid = 115.
deleting insn with uid = 137.
deleting insn with uid = 175.
deleting insn with uid = 179.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 116.


malloc

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={54d,51u} r1={16d,9u,1e} r2={7d,2u} r3={1d,11u} r7={11d,95u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={29d,9u} r18={5d} r19={1e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 622{443d,177u,2e} in 123{118 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 200 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 200 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 200 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [106])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x7c386fe6ed80 bucket_dir>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":129:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x7c386fe6ed80 bucket_dir>)
        (nil)))
(insn 6 5 182 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])
        (reg/f:SI 0 ax [106])) "lib/malloc.c":129:12 75 {*movsi_internal}
     (nil))
(jump_insn 182 6 183 2 (set (pc)
        (label_ref 21)) "lib/malloc.c":129:2 807 {jump}
     (nil)
 -> 21)
(barrier 183 182 25)
(code_label 25 183 9 3 9 (nil) [1 uses])
(note 9 25 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":130:11 75 {*movsi_internal}
     (nil))
(insn 11 10 13 3 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (mem:SI (reg/f:SI 0 ax [107]) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":130:11 75 {*movsi_internal}
     (nil))
(insn 13 11 14 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 48 [0x30])) [6 len+0 S4 A32])
            (reg:SI 0 ax [orig:84 _2 ] [84]))) "lib/malloc.c":130:6 11 {*cmpsi_1}
     (nil))
(jump_insn 14 13 19 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 192)
            (pc))) "lib/malloc.c":130:6 806 {*jcc}
     (nil)
 -> 192)
(note 19 14 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [8 bdir+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [8 bdir+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":129:43 209 {*addsi_1}
     (nil))
(code_label 21 20 22 5 6 (nil) [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":129:31 75 {*movsi_internal}
     (nil))
(insn 24 23 26 5 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (mem:SI (reg/f:SI 0 ax [108]) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":129:31 75 {*movsi_internal}
     (nil))
(insn 26 24 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 0 [0]))) "lib/malloc.c":129:27 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 27 26 188 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "lib/malloc.c":129:27 806 {*jcc}
     (nil)
 -> 25)
(note 188 27 189 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 189 188 190 22 (set (pc)
        (label_ref 28)) 807 {jump}
     (nil)
 -> 28)
(barrier 190 189 192)
(code_label 192 190 191 23 21 (nil) [1 uses])
(note 191 192 193 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 193 191 28 23 (const_int 0 [0]) "lib/malloc.c":131:4 843 {nop}
     (nil))
(code_label 28 193 29 6 8 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":132:11 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (mem:SI (reg/f:SI 0 ax [109]) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":132:11 75 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _4 ] [86])
            (const_int 0 [0]))) "lib/malloc.c":132:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "lib/malloc.c":132:5 806 {*jcc}
     (nil)
 -> 48)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":133:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 36 35 37 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 len+0 S4 A32])) "lib/malloc.c":133:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 37 36 38 7 (set (reg/f:SI 0 ax [110])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7c386e4fbf30 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":133:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7c386e4fbf30 *.LC1>)
        (nil)))
(insn 38 37 40 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [110])) "lib/malloc.c":133:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 40 38 41 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7c386e4d2700 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "lib/malloc.c":133:3 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 41 40 42 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":133:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 42 41 43 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":135:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 43 42 44 7 (set (reg/f:SI 0 ax [111])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7c386e4fbd80 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":135:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7c386e4fbd80 *.LC2>)
        (nil)))
(insn 44 43 46 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [111])) "lib/malloc.c":135:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 46 44 47 7 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7c386e4d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":135:3 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 47 46 48 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":135:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 48 47 49 8 10 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] lib/malloc.c:140)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":140:2 -1
     (nil))
(insn 51 50 52 8 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":141:13 75 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg/f:SI 0 ax [113])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 4 [0x4])) [1 bdir_23->chain+0 S4 A32])) "lib/malloc.c":141:13 75 {*movsi_internal}
     (nil))
(insn 53 52 184 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])
        (reg/f:SI 0 ax [113])) "lib/malloc.c":141:13 75 {*movsi_internal}
     (nil))
(jump_insn 184 53 185 8 (set (pc)
        (label_ref 69)) "lib/malloc.c":141:2 807 {jump}
     (nil)
 -> 69)
(barrier 185 184 71)
(code_label 71 185 56 9 14 (nil) [1 uses])
(note 56 71 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":142:12 75 {*movsi_internal}
     (nil))
(insn 58 57 59 9 (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 8 [0x8])) [3 bdesc_24->freeptr+0 S4 A32])) "lib/malloc.c":142:12 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "lib/malloc.c":142:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 60 59 65 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 198)
            (pc))) "lib/malloc.c":142:6 806 {*jcc}
     (nil)
 -> 198)
(note 65 60 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 10 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":141:41 75 {*movsi_internal}
     (nil))
(insn 67 66 68 10 (set (reg/f:SI 0 ax [116])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])) "lib/malloc.c":141:41 75 {*movsi_internal}
     (nil))
(insn 68 67 69 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])
        (reg/f:SI 0 ax [116])) "lib/malloc.c":141:41 75 {*movsi_internal}
     (nil))
(code_label 69 68 70 11 11 (nil) [1 uses])
(note 70 69 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 70 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":141:28 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 194 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "lib/malloc.c":141:28 806 {*jcc}
     (nil)
 -> 71)
(note 194 73 195 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 194 196 24 (set (pc)
        (label_ref 74)) 807 {jump}
     (nil)
 -> 74)
(barrier 196 195 198)
(code_label 198 196 197 25 22 (nil) [1 uses])
(note 197 198 199 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 199 197 74 25 (const_int 0 [0]) "lib/malloc.c":143:4 843 {nop}
     (nil))
(code_label 74 199 75 12 13 (nil) [1 uses])
(note 75 74 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":148:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 77 76 78 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) "lib/malloc.c":148:5 806 {*jcc}
     (nil)
 -> 157)
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg/f:SI 0 ax [orig:88 free_bucket_desc.0_6 ] [88])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x7c386fe6ef30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":152:7 75 {*movsi_internal}
     (nil))
(insn 80 79 81 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:88 free_bucket_desc.0_6 ] [88])
            (const_int 0 [0]))) "lib/malloc.c":152:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 81 80 82 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "lib/malloc.c":152:6 806 {*jcc}
     (nil)
 -> 84)
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 83 82 84 14 (call (mem:QI (symbol_ref:SI ("init_bucket_desc") [flags 0x3]  <function_decl 0x7c386e4f9000 init_bucket_desc>) [0 init_bucket_desc S1 A8])
        (const_int 0 [0])) "lib/malloc.c":153:4 812 {*call}
     (nil)
    (nil))
(code_label 84 83 85 15 16 (nil) [1 uses])
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x7c386fe6ef30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":154:9 75 {*movsi_internal}
     (nil))
(insn 87 86 88 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])
        (reg/f:SI 0 ax [117])) "lib/malloc.c":154:9 75 {*movsi_internal}
     (nil))
(insn 88 87 89 15 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":155:27 75 {*movsi_internal}
     (nil))
(insn 89 88 90 15 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 4 [0x4])) [1 bdesc_42->next+0 S4 A32])) "lib/malloc.c":155:27 75 {*movsi_internal}
     (nil))
(insn 90 89 91 15 (set (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x7c386fe6ef30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])
        (reg/f:SI 0 ax [orig:89 _7 ] [89])) "lib/malloc.c":155:20 75 {*movsi_internal}
     (nil))
(insn 91 90 92 15 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":156:17 75 {*movsi_internal}
     (nil))
(insn 92 91 93 15 (set (mem:HI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 12 [0xc])) [4 bdesc_42->refcnt+0 S2 A32])
        (const_int 0 [0])) "lib/malloc.c":156:17 76 {*movhi_internal}
     (nil))
(insn 93 92 94 15 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":157:28 75 {*movsi_internal}
     (nil))
(insn 94 93 95 15 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (mem:SI (reg/f:SI 0 ax [120]) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":157:28 75 {*movsi_internal}
     (nil))
(insn 95 94 96 15 (set (reg:HI 1 dx [orig:91 _9 ] [91])
        (reg:HI 0 ax [orig:90 _8 ] [90])) "lib/malloc.c":157:22 76 {*movhi_internal}
     (nil))
(insn 96 95 97 15 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":157:22 75 {*movsi_internal}
     (nil))
(insn 97 96 99 15 (set (mem:HI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 14 [0xe])) [4 bdesc_42->bucket_size+0 S2 A16])
        (reg:HI 1 dx [orig:91 _9 ] [91])) "lib/malloc.c":157:22 76 {*movhi_internal}
     (nil))
(call_insn 99 97 101 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x7c386e4d2b00 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "lib/malloc.c":158:57 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 101 99 102 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 cp+0 S4 A32])
        (reg:SI 0 ax [orig:92 _10 ] [92])) "lib/malloc.c":158:46 75 {*movsi_internal}
     (nil))
(insn 102 101 103 15 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":158:32 75 {*movsi_internal}
     (nil))
(insn 103 102 104 15 (set (reg/f:SI 1 dx [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 cp+0 S4 A32])) "lib/malloc.c":158:32 75 {*movsi_internal}
     (nil))
(insn 104 103 105 15 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [122])
                (const_int 8 [0x8])) [3 bdesc_42->freeptr+0 S4 A32])
        (reg/f:SI 1 dx [123])) "lib/malloc.c":158:32 75 {*movsi_internal}
     (nil))
(insn 105 104 106 15 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":158:22 75 {*movsi_internal}
     (nil))
(insn 106 105 107 15 (set (reg/f:SI 1 dx [orig:93 _11 ] [93])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [124])
                (const_int 8 [0x8])) [3 bdesc_42->freeptr+0 S4 A32])) "lib/malloc.c":158:22 75 {*movsi_internal}
     (nil))
(insn 107 106 108 15 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":158:15 75 {*movsi_internal}
     (nil))
(insn 108 107 109 15 (set (mem/f:SI (reg/f:SI 0 ax [125]) [3 bdesc_42->page+0 S4 A32])
        (reg/f:SI 1 dx [orig:93 _11 ] [93])) "lib/malloc.c":158:15 75 {*movsi_internal}
     (nil))
(insn 109 108 110 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [7 cp+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":159:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 110 109 111 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "lib/malloc.c":159:6 806 {*jcc}
     (nil)
 -> 118)
(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":160:4 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 113 112 114 16 (set (reg/f:SI 0 ax [126])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7c386e52c000 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":160:4 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7c386e52c000 *.LC3>)
        (nil)))
(insn 114 113 116 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [126])) "lib/malloc.c":160:4 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 116 114 117 16 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7c386e4d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":160:4 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 117 116 118 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":160:4 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 118 117 119 17 17 (nil) [1 uses])
(note 119 118 120 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 17 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":162:28 75 {*movsi_internal}
     (nil))
(insn 121 120 122 17 (set (reg:SI 2 cx [orig:94 _12 ] [94])
        (mem:SI (reg/f:SI 0 ax [127]) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":162:28 75 {*movsi_internal}
     (nil))
(insn 122 121 123 17 (set (reg:SI 0 ax [130])
        (const_int 4096 [0x1000])) "lib/malloc.c":162:10 75 {*movsi_internal}
     (nil))
(insn 123 122 124 17 (parallel [
            (set (reg:SI 0 ax [128])
                (div:SI (reg:SI 0 ax [130])
                    (reg:SI 2 cx [orig:94 _12 ] [94])))
            (set (reg:SI 1 dx [129])
                (mod:SI (reg:SI 0 ax [130])
                    (reg:SI 2 cx [orig:94 _12 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":162:10 446 {*divmodsi4}
     (nil))
(insn 124 123 186 17 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 i+0 S4 A32])
        (reg:SI 0 ax [128])) "lib/malloc.c":162:10 75 {*movsi_internal}
     (nil))
(jump_insn 186 124 187 17 (set (pc)
        (label_ref 140)) "lib/malloc.c":162:3 807 {jump}
     (nil)
 -> 140)
(barrier 187 186 142)
(code_label 142 187 127 18 19 (nil) [1 uses])
(note 127 142 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 18 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":163:31 75 {*movsi_internal}
     (nil))
(insn 129 128 130 18 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (mem:SI (reg/f:SI 0 ax [131]) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":163:31 75 {*movsi_internal}
     (nil))
(insn 130 129 131 18 (set (reg:SI 1 dx [orig:96 _14 ] [96])
        (reg:SI 0 ax [orig:95 _13 ] [95])) "lib/malloc.c":163:31 75 {*movsi_internal}
     (nil))
(insn 131 130 132 18 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 cp+0 S4 A32])) "lib/malloc.c":163:25 75 {*movsi_internal}
     (nil))
(insn 132 131 133 18 (parallel [
            (set (reg/f:SI 1 dx [orig:97 _15 ] [97])
                (plus:SI (reg:SI 1 dx [orig:96 _14 ] [96])
                    (reg/f:SI 0 ax [132])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":163:25 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])
            (reg:SI 1 dx [orig:96 _14 ] [96]))
        (nil)))
(insn 133 132 134 18 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 cp+0 S4 A32])) "lib/malloc.c":163:20 75 {*movsi_internal}
     (nil))
(insn 134 133 135 18 (set (mem/f:SI (reg/f:SI 0 ax [133]) [7 MEM[(char * *)cp_26]+0 S4 A32])
        (reg/f:SI 1 dx [orig:97 _15 ] [97])) "lib/malloc.c":163:20 75 {*movsi_internal}
     (nil))
(insn 135 134 136 18 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":164:14 75 {*movsi_internal}
     (nil))
(insn 136 135 138 18 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (mem:SI (reg/f:SI 0 ax [134]) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":164:14 75 {*movsi_internal}
     (nil))
(insn 138 136 139 18 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 20 [0x14])) [7 cp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [7 cp+0 S4 A32])
                    (reg:SI 0 ax [orig:99 _17 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":164:7 209 {*addsi_1}
     (nil))
(insn 139 138 140 18 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 16 [0x10])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 16 [0x10])) [6 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":162:44 209 {*addsi_1}
     (nil))
(code_label 140 139 141 19 18 (nil) [1 uses])
(note 141 140 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 141 146 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [6 i+0 S4 A32])
            (const_int 1 [0x1]))) "lib/malloc.c":162:38 11 {*cmpsi_1}
     (nil))
(jump_insn 146 145 147 19 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "lib/malloc.c":162:38 806 {*jcc}
     (nil)
 -> 142)
(note 147 146 148 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 20 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 cp+0 S4 A32])) "lib/malloc.c":166:19 75 {*movsi_internal}
     (nil))
(insn 149 148 150 20 (set (mem/f:SI (reg/f:SI 0 ax [135]) [7 MEM[(char * *)cp_26]+0 S4 A32])
        (const_int 0 [0])) "lib/malloc.c":166:19 75 {*movsi_internal}
     (nil))
(insn 150 149 151 20 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":167:21 75 {*movsi_internal}
     (nil))
(insn 151 150 152 20 (set (reg/f:SI 1 dx [orig:100 _18 ] [100])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [136])
                (const_int 4 [0x4])) [1 bdir_23->chain+0 S4 A32])) "lib/malloc.c":167:21 75 {*movsi_internal}
     (nil))
(insn 152 151 153 20 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":167:15 75 {*movsi_internal}
     (nil))
(insn 153 152 154 20 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [137])
                (const_int 4 [0x4])) [1 bdesc_42->next+0 S4 A32])
        (reg/f:SI 1 dx [orig:100 _18 ] [100])) "lib/malloc.c":167:15 75 {*movsi_internal}
     (nil))
(insn 154 153 155 20 (set (reg/f:SI 0 ax [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 bdir+0 S4 A32])) "lib/malloc.c":168:15 75 {*movsi_internal}
     (nil))
(insn 155 154 156 20 (set (reg/f:SI 1 dx [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":168:15 75 {*movsi_internal}
     (nil))
(insn 156 155 157 20 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [138])
                (const_int 4 [0x4])) [1 bdir_23->chain+0 S4 A32])
        (reg/f:SI 1 dx [139])) "lib/malloc.c":168:15 75 {*movsi_internal}
     (nil))
(code_label 157 156 158 21 15 (nil) [1 uses])
(note 158 157 159 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 21 (set (reg/f:SI 0 ax [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":170:9 75 {*movsi_internal}
     (nil))
(insn 160 159 161 21 (set (reg/f:SI 0 ax [141])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [140])
                (const_int 8 [0x8])) [3 bdesc_25->freeptr+0 S4 A32])) "lib/malloc.c":170:9 75 {*movsi_internal}
     (nil))
(insn 161 160 162 21 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 retval+0 S4 A32])
        (reg/f:SI 0 ax [141])) "lib/malloc.c":170:9 75 {*movsi_internal}
     (nil))
(insn 162 161 163 21 (set (reg/f:SI 0 ax [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 retval+0 S4 A32])) "lib/malloc.c":171:19 75 {*movsi_internal}
     (nil))
(insn 163 162 164 21 (set (reg/f:SI 1 dx [orig:101 _19 ] [101])
        (mem/f:SI (reg/f:SI 0 ax [142]) [3 MEM[(void * *)retval_58]+0 S4 A32])) "lib/malloc.c":171:19 75 {*movsi_internal}
     (nil))
(insn 164 163 165 21 (set (reg/f:SI 0 ax [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":171:17 75 {*movsi_internal}
     (nil))
(insn 165 164 166 21 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [143])
                (const_int 8 [0x8])) [3 bdesc_25->freeptr+0 S4 A32])
        (reg/f:SI 1 dx [orig:101 _19 ] [101])) "lib/malloc.c":171:17 75 {*movsi_internal}
     (nil))
(insn 166 165 167 21 (set (reg/f:SI 0 ax [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":172:7 75 {*movsi_internal}
     (nil))
(insn 167 166 168 21 (set (reg:HI 0 ax [orig:102 _20 ] [102])
        (mem:HI (plus:SI (reg/f:SI 0 ax [144])
                (const_int 12 [0xc])) [4 bdesc_25->refcnt+0 S2 A32])) "lib/malloc.c":172:7 76 {*movhi_internal}
     (nil))
(insn 168 167 169 21 (parallel [
            (set (reg:HI 1 dx [orig:103 _22 ] [103])
                (plus:HI (reg:HI 0 ax [orig:102 _20 ] [102])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":172:15 212 {*addhi_1}
     (nil))
(insn 169 168 170 21 (set (reg/f:SI 0 ax [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bdesc+0 S4 A32])) "lib/malloc.c":172:15 75 {*movsi_internal}
     (nil))
(insn 170 169 171 21 (set (mem:HI (plus:SI (reg/f:SI 0 ax [145])
                (const_int 12 [0xc])) [4 bdesc_25->refcnt+0 S2 A32])
        (reg:HI 1 dx [orig:103 _22 ] [103])) "lib/malloc.c":172:15 76 {*movhi_internal}
     (nil))
(insn 171 170 172 21 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] lib/malloc.c:173)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":173:2 -1
     (nil))
(insn 172 171 180 21 (set (reg/f:SI 0 ax [orig:104 _61 ] [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 retval+0 S4 A32])) "lib/malloc.c":174:9 75 {*movsi_internal}
     (nil))
(insn 180 172 201 21 (use (reg/i:SI 0 ax)) "lib/malloc.c":175:1 -1
     (nil))
(note 201 180 0 NOTE_INSN_DELETED)

;; Function free_s (free_s, funcdef_no=2, decl_uid=1011, cgraph_uid=3, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 79:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 80:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 84:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) r {*cmphi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 123:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 147:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 152:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 164:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 168:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 7 27
EBB 28
EBB 8
EBB 9 10
EBB 29
EBB 11 12 13
EBB 14 15
EBB 16
EBB 17 18
EBB 19 30
EBB 31
EBB 20 21
EBB 22 23
EBB 24
EBB 25
EBB 26

********** Pseudo live ranges #1: **********

  BB 26
   Insn 181: point = 0, n_alt = -1
   Insn 176: point = 0, n_alt = -1
  BB 25
   Insn 173: point = 0, n_alt = 1
   Insn 172: point = 1, n_alt = 0
   Insn 171: point = 2, n_alt = 1
   Insn 170: point = 3, n_alt = 0
   Insn 169: point = 4, n_alt = 0
   Insn 168: point = 5, n_alt = 0
   Insn 167: point = 5, n_alt = 0
   Insn 166: point = 5, n_alt = -2
   Insn 165: point = 5, n_alt = 0
   Insn 164: point = 6, n_alt = 0
   Insn 163: point = 6, n_alt = -2
   Insn 162: point = 8, n_alt = 0
   Insn 161: point = 10, n_alt = 0
  BB 21
   Insn 188: point = 12, n_alt = -1
   Insn 137: point = 12, n_alt = 1
   Insn 136: point = 13, n_alt = 0
   Insn 135: point = 14, n_alt = 0
   Insn 134: point = 16, n_alt = 0
  BB 24
   Insn 158: point = 18, n_alt = 1
   Insn 157: point = 19, n_alt = 0
   Insn 156: point = 20, n_alt = 0
   Insn 155: point = 22, n_alt = 0
  BB 23
   Insn 152: point = 24, n_alt = 0
   Insn 151: point = 24, n_alt = 0
   Insn 150: point = 24, n_alt = -2
   Insn 149: point = 24, n_alt = 0
   Insn 148: point = 25, n_alt = 0
   Insn 147: point = 26, n_alt = 0
  BB 22
   Insn 145: point = 27, n_alt = -1
   Insn 144: point = 27, n_alt = 0
   Insn 143: point = 28, n_alt = 0
   Insn 142: point = 30, n_alt = 0
  BB 20
   Insn 132: point = 32, n_alt = -1
   Insn 131: point = 32, n_alt = 1
  BB 30
   Insn 202: point = 33, n_alt = -1
  BB 31
   Insn 206: point = 34, n_alt = -1
  BB 17
   Insn 115: point = 35, n_alt = -1
   Insn 114: point = 35, n_alt = 0
   Insn 113: point = 36, n_alt = 0
   Insn 112: point = 38, n_alt = 0
  BB 19
   Insn 128: point = 40, n_alt = -1
   Insn 127: point = 40, n_alt = 1
  BB 16
   Insn 186: point = 41, n_alt = -1
   Insn 108: point = 41, n_alt = 1
   Insn 107: point = 42, n_alt = 0
   Insn 106: point = 44, n_alt = 0
  BB 18
   Insn 123: point = 46, n_alt = 1
   Insn 122: point = 47, n_alt = 0
   Insn 121: point = 49, n_alt = 0
  BB 15
   Insn 103: point = 51, n_alt = -1
   Insn 102: point = 51, n_alt = 0
   Insn 101: point = 52, n_alt = 0
   Insn 100: point = 54, n_alt = 0
  BB 14
   Insn 98: point = 56, n_alt = -1
   Insn 97: point = 56, n_alt = 1
  BB 13
   Insn 94: point = 57, n_alt = -1
   Insn 93: point = 57, n_alt = 0
   Insn 92: point = 58, n_alt = 0
   Insn 91: point = 60, n_alt = 0
  BB 12
   Insn 89: point = 62, n_alt = -1
   Insn 88: point = 62, n_alt = 1
  BB 11
   Insn 86: point = 63, n_alt = -1
   Insn 85: point = 63, n_alt = 0
   Insn 84: point = 64, n_alt = 2
   Insn 83: point = 66, n_alt = 0
   Insn 82: point = 67, n_alt = 3
   Insn 81: point = 68, n_alt = 0
   Insn 80: point = 69, n_alt = 3
   Insn 79: point = 71, n_alt = 2
   Insn 78: point = 73, n_alt = 0
   Insn 77: point = 74, n_alt = 1
   Insn 76: point = 75, n_alt = 0
   Insn 75: point = 76, n_alt = 0
   Insn 74: point = 77, n_alt = 1
   Insn 73: point = 78, n_alt = 0
   Insn 72: point = 79, n_alt = 0
   Insn 71: point = 81, n_alt = 0
   Insn 70: point = 82, n_alt = -1
  BB 10
   Insn 196: point = 83, n_alt = -1
   Insn 67: point = 83, n_alt = 0
   Insn 66: point = 83, n_alt = 0
   Insn 65: point = 83, n_alt = -2
   Insn 64: point = 83, n_alt = 0
   Insn 63: point = 84, n_alt = 0
   Insn 62: point = 85, n_alt = 0
  BB 29
   Insn 200: point = 86, n_alt = -1
  BB 5
   Insn 35: point = 87, n_alt = -1
   Insn 34: point = 87, n_alt = 0
   Insn 33: point = 88, n_alt = 0
   Insn 32: point = 90, n_alt = 0
  BB 7
   Insn 50: point = 92, n_alt = -1
   Insn 49: point = 92, n_alt = 1
  BB 4
   Insn 184: point = 93, n_alt = -1
   Insn 28: point = 93, n_alt = 1
   Insn 27: point = 94, n_alt = 0
   Insn 26: point = 96, n_alt = 0
  BB 3
   Insn 20: point = 98, n_alt = -1
   Insn 19: point = 98, n_alt = 0
   Insn 18: point = 99, n_alt = 0
   Insn 17: point = 101, n_alt = 0
   Insn 16: point = 102, n_alt = 1
  BB 9
   Insn 60: point = 103, n_alt = -1
   Insn 59: point = 103, n_alt = 0
   Insn 57: point = 104, n_alt = 0
   Insn 56: point = 106, n_alt = 0
  BB 2
   Insn 182: point = 108, n_alt = -1
   Insn 12: point = 108, n_alt = 1
   Insn 11: point = 109, n_alt = 0
   Insn 10: point = 110, n_alt = 1
   Insn 9: point = 111, n_alt = 0
   Insn 8: point = 113, n_alt = 0
   Insn 7: point = 114, n_alt = 1
   Insn 6: point = 115, n_alt = 0
   Insn 5: point = 116, n_alt = 1
   Insn 207: point = 116, n_alt = 0
  BB 8
   Insn 53: point = 117, n_alt = 0
  BB 27
   Insn 191: point = 118, n_alt = -1
  BB 28
   Insn 195: point = 119, n_alt = -1
  BB 6
   Insn 45: point = 120, n_alt = 1
   Insn 44: point = 121, n_alt = 0
   Insn 43: point = 123, n_alt = 0
   Insn 42: point = 124, n_alt = 1
   Insn 41: point = 125, n_alt = 0
 r82: [0..126]
 r83: [112..113]
 r84: [110..111]
 r85: [98..99]
 r86: [87..88]
 r87: [103..104]
 r88: [77..79]
 r89: [70..71]
 r90: [67..69]
 r91: [63..64]
 r92: [57..58]
 r93: [51..52]
 r94: [35..36]
 r95: [12..14]
 r96: [27..28]
 r97: [18..20]
 r98: [7..8]
 r99: [5..6]
 r100: [2..4]
 r101: [114..115]
 r102: [108..109]
 r103: [100..101]
 r104: [95..96]
 r105: [93..94]
 r106: [89..90]
 r107: [124..125]
 r108: [122..123]
 r109: [120..121]
 r110: [105..106]
 r111: [83..84]
 r112: [80..81]
 r113: [77..78]
 r114: [74..76]
 r115: [74..75]
 r116: [72..73]
 r117: [67..68]
 r118: [65..66]
 r119: [59..60]
 r120: [53..54]
 r121: [43..44]
 r122: [41..42]
 r123: [37..38]
 r124: [48..49]
 r125: [46..47]
 r126: [15..16]
 r127: [12..13]
 r128: [29..30]
 r129: [24..25]
 r130: [21..22]
 r131: [18..19]
 r132: [9..10]
 r133: [2..3]
 r134: [0..1]
Compressing live ranges: from 127 to 92 - 72%
Ranges after the compression:
 r82: [0..91]
 r83: [82..83]
 r84: [80..81]
 r85: [70..71]
 r86: [62..63]
 r87: [74..75]
 r88: [56..57]
 r89: [50..51]
 r90: [48..49]
 r91: [44..45]
 r92: [40..41]
 r93: [36..37]
 r94: [24..25]
 r95: [10..11]
 r96: [20..21]
 r97: [14..15]
 r98: [6..7]
 r99: [4..5]
 r100: [2..3]
 r101: [84..85]
 r102: [78..79]
 r103: [72..73]
 r104: [68..69]
 r105: [66..67]
 r106: [64..65]
 r107: [90..91]
 r108: [88..89]
 r109: [86..87]
 r110: [76..77]
 r111: [60..61]
 r112: [58..59]
 r113: [56..57]
 r114: [54..55]
 r115: [54..55]
 r116: [52..53]
 r117: [48..49]
 r118: [46..47]
 r119: [42..43]
 r120: [38..39]
 r121: [30..31]
 r122: [28..29]
 r123: [26..27]
 r124: [34..35]
 r125: [32..33]
 r126: [12..13]
 r127: [10..11]
 r128: [22..23]
 r129: [18..19]
 r130: [16..17]
 r131: [14..15]
 r132: [8..9]
 r133: [2..3]
 r134: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 207
changing reg in insn 173
changing reg in insn 169
changing reg in insn 166
changing reg in insn 150
changing reg in insn 148
changing reg in insn 65
changing reg in insn 63
changing reg in insn 11
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 33
changing reg in insn 34
changing reg in insn 57
changing reg in insn 59
changing reg in insn 72
changing reg in insn 74
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 93
changing reg in insn 101
changing reg in insn 102
changing reg in insn 113
changing reg in insn 114
changing reg in insn 135
changing reg in insn 137
changing reg in insn 143
changing reg in insn 144
changing reg in insn 156
changing reg in insn 158
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 165
changing reg in insn 169
changing reg in insn 171
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 17
changing reg in insn 18
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 56
changing reg in insn 57
changing reg in insn 63
changing reg in insn 64
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 91
changing reg in insn 92
changing reg in insn 100
changing reg in insn 101
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 108
changing reg in insn 112
changing reg in insn 113
changing reg in insn 121
changing reg in insn 122
changing reg in insn 122
changing reg in insn 123
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 142
changing reg in insn 143
changing reg in insn 148
changing reg in insn 149
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 161
changing reg in insn 162
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
deleting insn with uid = 65.
deleting insn with uid = 150.
deleting insn with uid = 163.
deleting insn with uid = 166.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 151.
verify found no changes in insn with uid = 167.


free_s

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={49d,45u} r1={10d,6u} r2={4d} r3={1d,8u} r7={10d,100u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={28d,13u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 469{297d,172u,0e} in 121{118 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 207 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 207 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 207 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])
        (const_int 0 [0])) "lib/malloc.c":189:15 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])) "lib/malloc.c":189:8 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 0 ax [101])) "lib/malloc.c":189:8 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:83 obj.2_1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [3 obj+0 S4 A32])) "lib/malloc.c":191:18 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (and:SI (reg:SI 0 ax [orig:83 obj.2_1 ] [83])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":191:38 490 {*andsi_1}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:SI (reg/f:SI 7 sp) [3 page+0 S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "lib/malloc.c":191:7 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 0 ax [102])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x7c386fe6ed80 bucket_dir>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":193:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x7c386fe6ed80 bucket_dir>)
        (nil)))
(insn 12 11 182 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])
        (reg/f:SI 0 ax [102])) "lib/malloc.c":193:12 75 {*movsi_internal}
     (nil))
(jump_insn 182 12 183 2 (set (pc)
        (label_ref 54)) "lib/malloc.c":193:2 807 {jump}
     (nil)
 -> 54)
(barrier 183 182 58)
(code_label 58 183 15 3 31 (nil) [1 uses])
(note 15 58 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])
        (const_int 0 [0])) "lib/malloc.c":194:8 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])) "lib/malloc.c":196:11 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (mem:SI (reg/f:SI 0 ax [103]) [6 bdir_20->size+0 S4 A32])) "lib/malloc.c":196:11 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [6 size+0 S4 A32])
            (reg:SI 0 ax [orig:85 _3 ] [85]))) "lib/malloc.c":196:6 11 {*cmpsi_1}
     (nil))
(jump_insn 20 19 25 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 194)
            (pc))) "lib/malloc.c":196:6 806 {*jcc}
     (nil)
 -> 194)
(note 25 20 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])) "lib/malloc.c":198:14 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg/f:SI 0 ax [105])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [104])
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":198:14 75 {*movsi_internal}
     (nil))
(insn 28 27 184 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 0 ax [105])) "lib/malloc.c":198:14 75 {*movsi_internal}
     (nil))
(jump_insn 184 28 185 4 (set (pc)
        (label_ref 46)) "lib/malloc.c":198:3 807 {jump}
     (nil)
 -> 46)
(barrier 185 184 48)
(code_label 48 185 31 5 30 (nil) [1 uses])
(note 31 48 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":199:13 75 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f:SI (reg/f:SI 0 ax [106]) [3 bdesc_21->page+0 S4 A32])) "lib/malloc.c":199:13 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 7 sp) [3 page+0 S4 A32])
            (reg/f:SI 0 ax [orig:86 _4 ] [86]))) "lib/malloc.c":199:7 11 {*cmpsi_1}
     (nil))
(jump_insn 35 34 40 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 199)
            (pc))) "lib/malloc.c":199:7 806 {*jcc}
     (nil)
 -> 199)
(note 40 35 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":201:9 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])
        (reg/f:SI 0 ax [107])) "lib/malloc.c":201:9 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":198:42 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg/f:SI 0 ax [109])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 4 [0x4])) [1 bdesc_21->next+0 S4 A32])) "lib/malloc.c":198:42 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 0 ax [109])) "lib/malloc.c":198:42 75 {*movsi_internal}
     (nil))
(code_label 46 45 47 7 27 (nil) [1 uses])
(note 47 46 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 47 50 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":198:29 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 190 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "lib/malloc.c":198:29 806 {*jcc}
     (nil)
 -> 48)
(note 190 50 191 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn 191 190 192 27 (set (pc)
        (label_ref 51)) 807 {jump}
     (nil)
 -> 51)
(barrier 192 191 194)
(code_label 194 192 193 28 43 (nil) [1 uses])
(note 193 194 195 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 195 193 51 28 (const_int 0 [0]) "lib/malloc.c":197:4 843 {nop}
     (nil))
(code_label 51 195 52 8 26 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [8 bdir+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [8 bdir+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":193:43 209 {*addsi_1}
     (nil))
(code_label 54 53 55 9 24 (nil) [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])) "lib/malloc.c":193:31 75 {*movsi_internal}
     (nil))
(insn 57 56 59 9 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (mem:SI (reg/f:SI 0 ax [110]) [6 bdir_20->size+0 S4 A32])) "lib/malloc.c":193:31 75 {*movsi_internal}
     (nil))
(insn 59 57 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "lib/malloc.c":193:27 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "lib/malloc.c":193:27 806 {*jcc}
     (nil)
 -> 58)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":204:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 63 62 64 10 (set (reg/f:SI 0 ax [111])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7c386e52c1b0 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":204:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7c386e52c1b0 *.LC4>)
        (nil)))
(insn 64 63 66 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [111])) "lib/malloc.c":204:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 66 64 67 10 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7c386e4d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":204:2 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 67 66 196 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":204:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 196 67 197 10 (set (pc)
        (label_ref 68)) 807 {jump}
     (nil)
 -> 68)
(barrier 197 196 199)
(code_label 199 197 198 29 44 (nil) [1 uses])
(note 198 199 200 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 200 198 68 29 (const_int 0 [0]) "lib/malloc.c":200:5 843 {nop}
     (nil))
(code_label 68 200 69 11 29 ("found") [1 uses])
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] lib/malloc.c:206)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":206:2 -1
     (nil))
(insn 71 70 72 11 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":207:25 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (reg/f:SI 1 dx [orig:88 _6 ] [88])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 8 [0x8])) [3 bdesc_24->freeptr+0 S4 A32])) "lib/malloc.c":207:25 75 {*movsi_internal}
     (nil))
(insn 73 72 74 11 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [3 obj+0 S4 A32])) "lib/malloc.c":207:18 75 {*movsi_internal}
     (nil))
(insn 74 73 75 11 (set (mem/f:SI (reg/f:SI 0 ax [113]) [3 MEM[(void * *)obj_37(D)]+0 S4 A32])
        (reg/f:SI 1 dx [orig:88 _6 ] [88])) "lib/malloc.c":207:18 75 {*movsi_internal}
     (nil))
(insn 75 74 76 11 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":208:17 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg/f:SI 1 dx [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [3 obj+0 S4 A32])) "lib/malloc.c":208:17 75 {*movsi_internal}
     (nil))
(insn 77 76 78 11 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 8 [0x8])) [3 bdesc_24->freeptr+0 S4 A32])
        (reg/f:SI 1 dx [115])) "lib/malloc.c":208:17 75 {*movsi_internal}
     (nil))
(insn 78 77 79 11 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":209:7 75 {*movsi_internal}
     (nil))
(insn 79 78 80 11 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 12 [0xc])) [4 bdesc_24->refcnt+0 S2 A32])) "lib/malloc.c":209:7 76 {*movhi_internal}
     (nil))
(insn 80 79 81 11 (parallel [
            (set (reg:HI 1 dx [orig:90 _9 ] [90])
                (plus:HI (reg:HI 0 ax [orig:89 _7 ] [89])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":209:15 212 {*addhi_1}
     (nil))
(insn 81 80 82 11 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":209:15 75 {*movsi_internal}
     (nil))
(insn 82 81 83 11 (set (mem:HI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 12 [0xc])) [4 bdesc_24->refcnt+0 S2 A32])
        (reg:HI 1 dx [orig:90 _9 ] [90])) "lib/malloc.c":209:15 76 {*movhi_internal}
     (nil))
(insn 83 82 84 11 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":210:11 75 {*movsi_internal}
     (nil))
(insn 84 83 85 11 (set (reg:HI 0 ax [orig:91 _10 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 12 [0xc])) [4 bdesc_24->refcnt+0 S2 A32])) "lib/malloc.c":210:11 76 {*movhi_internal}
     (nil))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:91 _10 ] [91])
            (const_int 0 [0]))) "lib/malloc.c":210:5 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "lib/malloc.c":210:5 806 {*jcc}
     (nil)
 -> 174)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":215:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "lib/malloc.c":215:6 806 {*jcc}
     (nil)
 -> 95)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])) "lib/malloc.c":215:21 75 {*movsi_internal}
     (nil))
(insn 92 91 93 13 (set (reg/f:SI 0 ax [orig:92 _11 ] [92])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 4 [0x4])) [1 prev_28->next+0 S4 A32])) "lib/malloc.c":215:21 75 {*movsi_internal}
     (nil))
(insn 93 92 94 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 0 ax [orig:92 _11 ] [92]))) "lib/malloc.c":215:13 11 {*cmpsi_1}
     (nil))
(jump_insn 94 93 95 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "lib/malloc.c":215:13 806 {*jcc}
     (nil)
 -> 104)
(code_label 95 94 96 14 33 (nil) [1 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":215:39 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 98 97 99 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "lib/malloc.c":215:39 806 {*jcc}
     (nil)
 -> 129)
(note 99 98 100 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 15 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])) "lib/malloc.c":216:19 75 {*movsi_internal}
     (nil))
(insn 101 100 102 15 (set (reg/f:SI 0 ax [orig:93 _12 ] [93])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":216:19 75 {*movsi_internal}
     (nil))
(insn 102 101 103 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 0 ax [orig:93 _12 ] [93]))) "lib/malloc.c":216:11 11 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "lib/malloc.c":216:11 806 {*jcc}
     (nil)
 -> 129)
(code_label 104 103 105 16 34 (nil) [1 uses])
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 16 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])) "lib/malloc.c":217:14 75 {*movsi_internal}
     (nil))
(insn 107 106 108 16 (set (reg/f:SI 0 ax [122])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":217:14 75 {*movsi_internal}
     (nil))
(insn 108 107 186 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])
        (reg/f:SI 0 ax [122])) "lib/malloc.c":217:14 75 {*movsi_internal}
     (nil))
(jump_insn 186 108 187 16 (set (pc)
        (label_ref 124)) "lib/malloc.c":217:4 807 {jump}
     (nil)
 -> 124)
(barrier 187 186 126)
(code_label 126 187 111 17 38 (nil) [1 uses])
(note 111 126 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 17 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])) "lib/malloc.c":218:13 75 {*movsi_internal}
     (nil))
(insn 113 112 114 17 (set (reg/f:SI 0 ax [orig:94 _13 ] [94])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 4 [0x4])) [1 prev_29->next+0 S4 A32])) "lib/malloc.c":218:13 75 {*movsi_internal}
     (nil))
(insn 114 113 115 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 0 ax [orig:94 _13 ] [94]))) "lib/malloc.c":218:8 11 {*cmpsi_1}
     (nil))
(jump_insn 115 114 120 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 205)
            (pc))) "lib/malloc.c":218:8 806 {*jcc}
     (nil)
 -> 205)
(note 120 115 121 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 18 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])) "lib/malloc.c":217:40 75 {*movsi_internal}
     (nil))
(insn 122 121 123 18 (set (reg/f:SI 0 ax [125])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [124])
                (const_int 4 [0x4])) [1 prev_29->next+0 S4 A32])) "lib/malloc.c":217:40 75 {*movsi_internal}
     (nil))
(insn 123 122 124 18 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])
        (reg/f:SI 0 ax [125])) "lib/malloc.c":217:40 75 {*movsi_internal}
     (nil))
(code_label 124 123 125 19 36 (nil) [1 uses])
(note 125 124 127 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 127 125 128 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":217:29 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 128 127 201 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "lib/malloc.c":217:29 806 {*jcc}
     (nil)
 -> 126)
(note 201 128 202 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 202 201 203 30 (set (pc)
        (label_ref 129)) 807 {jump}
     (nil)
 -> 129)
(barrier 203 202 205)
(code_label 205 203 204 31 45 (nil) [1 uses])
(note 204 205 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 206 204 129 31 (const_int 0 [0]) "lib/malloc.c":219:6 843 {nop}
     (nil))
(code_label 129 206 130 20 35 (nil) [3 uses])
(note 130 129 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":220:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 132 131 133 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) "lib/malloc.c":220:6 806 {*jcc}
     (nil)
 -> 140)
(note 133 132 134 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 21 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":221:22 75 {*movsi_internal}
     (nil))
(insn 135 134 136 21 (set (reg/f:SI 1 dx [orig:95 _14 ] [95])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [126])
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])) "lib/malloc.c":221:22 75 {*movsi_internal}
     (nil))
(insn 136 135 137 21 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 prev+0 S4 A32])) "lib/malloc.c":221:15 75 {*movsi_internal}
     (nil))
(insn 137 136 188 21 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 4 [0x4])) [1 prev_30->next+0 S4 A32])
        (reg/f:SI 1 dx [orig:95 _14 ] [95])) "lib/malloc.c":221:15 75 {*movsi_internal}
     (nil))
(jump_insn 188 137 189 21 (set (pc)
        (label_ref 159)) 807 {jump}
     (nil)
 -> 159)
(barrier 189 188 140)
(code_label 140 189 141 22 39 (nil) [1 uses])
(note 141 140 142 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 22 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])) "lib/malloc.c":223:12 75 {*movsi_internal}
     (nil))
(insn 143 142 144 22 (set (reg/f:SI 0 ax [orig:96 _15 ] [96])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [128])
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":223:12 75 {*movsi_internal}
     (nil))
(insn 144 143 145 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 0 ax [orig:96 _15 ] [96]))) "lib/malloc.c":223:7 11 {*cmpsi_1}
     (nil))
(jump_insn 145 144 146 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) "lib/malloc.c":223:7 806 {*jcc}
     (nil)
 -> 153)
(note 146 145 147 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":224:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 148 147 149 23 (set (reg/f:SI 0 ax [129])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7c386e52c240 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":224:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7c386e52c240 *.LC5>)
        (nil)))
(insn 149 148 151 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [129])) "lib/malloc.c":224:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 151 149 152 23 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7c386e4d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":224:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 152 151 153 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":224:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 153 152 154 24 41 (nil) [1 uses])
(note 154 153 155 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 24 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":225:23 75 {*movsi_internal}
     (nil))
(insn 156 155 157 24 (set (reg/f:SI 1 dx [orig:97 _16 ] [97])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [130])
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])) "lib/malloc.c":225:23 75 {*movsi_internal}
     (nil))
(insn 157 156 158 24 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 bdir+0 S4 A32])) "lib/malloc.c":225:16 75 {*movsi_internal}
     (nil))
(insn 158 157 159 24 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])
        (reg/f:SI 1 dx [orig:97 _16 ] [97])) "lib/malloc.c":225:16 75 {*movsi_internal}
     (nil))
(code_label 159 158 160 25 40 (nil) [1 uses])
(note 160 159 161 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 25 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":227:34 75 {*movsi_internal}
     (nil))
(insn 162 161 164 25 (set (reg/f:SI 0 ax [orig:98 _17 ] [98])
        (mem/f:SI (reg/f:SI 0 ax [132]) [3 bdesc_24->page+0 S4 A32])) "lib/malloc.c":227:34 75 {*movsi_internal}
     (nil))
(insn 164 162 165 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":227:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 165 164 167 25 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:99 _18 ] [99])) "lib/malloc.c":227:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 167 165 168 25 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x7c386e4d2a00 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":227:3 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 168 167 169 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":227:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 169 168 170 25 (set (reg/f:SI 1 dx [orig:100 free_bucket_desc.3_19 ] [100])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x7c386fe6ef30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":228:15 75 {*movsi_internal}
     (nil))
(insn 170 169 171 25 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":228:15 75 {*movsi_internal}
     (nil))
(insn 171 170 172 25 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [133])
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])
        (reg/f:SI 1 dx [orig:100 free_bucket_desc.3_19 ] [100])) "lib/malloc.c":228:15 75 {*movsi_internal}
     (nil))
(insn 172 171 173 25 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":229:20 75 {*movsi_internal}
     (nil))
(insn 173 172 174 25 (set (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x7c386fe6ef30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])
        (reg/f:SI 0 ax [134])) "lib/malloc.c":229:20 75 {*movsi_internal}
     (nil))
(code_label 174 173 175 26 32 (nil) [1 uses])
(note 175 174 176 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 181 26 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] lib/malloc.c:231)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":231:2 -1
     (nil))
(insn 181 176 208 26 (const_int 0 [0]) "lib/malloc.c":232:2 843 {nop}
     (nil))
(note 208 181 0 NOTE_INSN_DELETED)
