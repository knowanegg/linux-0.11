
;; Function execve (execve, funcdef_no=0, decl_uid=1072, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =a  (1) 0  (2) b  (3) c  (4) d
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 22:  (0) =rm  (1) 0 {*negsi_1}
      Creating newreg=95 from oldreg=91, assigning class GENERAL_REGS to r95
   22: {r95:SI=-r95:SI;clobber flags:CC;}
      REG_DEAD r91:SI
      REG_UNUSED flags:CC
      REG_EQUAL -[frame:SI-0x4]
    Inserting insn reload before:
   40: r95:SI=r91:SI
    Inserting insn reload after:
   41: r86:SI=r95:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 33: point = 0, n_alt = -1
   Insn 32: point = 0, n_alt = -2
   Insn 28: point = 1, n_alt = -2
  BB 3
   Insn 35: point = 4, n_alt = -1
   Insn 16: point = 4, n_alt = 0
  BB 4
   Insn 25: point = 5, n_alt = 0
   Insn 24: point = 6, n_alt = 1
   Insn 23: point = 7, n_alt = 0
   Insn 41: point = 9, n_alt = -2
	Hard reg 1 is preferable by r95 with profit 1000
   Insn 22: point = 11, n_alt = 0
   Insn 40: point = 12, n_alt = -2
	Hard reg 1 is preferable by r95 with profit 1000
	Hard reg 0 is preferable by r95 with profit 1000
   Insn 21: point = 14, n_alt = 0
  BB 2
   Insn 14: point = 16, n_alt = -1
   Insn 13: point = 16, n_alt = 1
   Insn 8: point = 16, n_alt = 1
   Insn 10: point = 17, n_alt = 0
   Insn 37: point = 19, n_alt = -2
   Insn 9: point = 21, n_alt = 0
   Insn 7: point = 22, n_alt = 0
   Insn 6: point = 23, n_alt = 0
   Insn 5: point = 24, n_alt = 0
   Insn 38: point = 25, n_alt = 0
 r82: [8..25]
 r83: [18..24]
 r84: [18..23]
 r85: [18..22]
 r86: [6..9]
 r87: [2..5]
 r88: [0..1]
 r89: [16..19]
 r90: [20..21]
 r91: [13..14]
 r92: [6..7]
 r95: [10..12]
Compressing live ranges: from 26 to 16 - 61%
Ranges after the compression:
 r82: [6..15]
 r83: [12..15]
 r84: [12..15]
 r85: [12..15]
 r86: [4..7]
 r87: [2..3]
 r88: [0..1]
 r89: [12..13]
 r90: [14..15]
 r91: [10..11]
 r92: [4..5]
 r95: [8..9]

********** Assignment #1: **********

	 Assigning to 95 (cl=GENERAL_REGS, orig=91, freq=3000, tfirst=95, tfreq=3000)...
	   Assign 0 to reload r95 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=28)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 38
changing reg in insn 23
changing reg in insn 5
changing reg in insn 10
changing reg in insn 6
changing reg in insn 10
changing reg in insn 7
changing reg in insn 10
changing reg in insn 24
changing reg in insn 25
changing reg in insn 16
changing reg in insn 28
changing reg in insn 28
changing reg in insn 32
changing reg in insn 37
changing reg in insn 10
changing reg in insn 10
changing reg in insn 8
changing reg in insn 9
changing reg in insn 37
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
deleting insn with uid = 37.
deleting insn with uid = 40.
deleting insn with uid = 28.
deleting insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns


execve

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;;  ref usage 	r0={8d,7u} r1={3d,2u} r2={2d,1u} r3={1d,1u} r4={1d,1u} r7={1d,12u} r17={4d,1u} r19={1e} 
;;    total ref usage 46{20d,25u,1e} in 18{18 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 38 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 38 3 2 2 (parallel [
            (set (reg:SI 4 si [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 38 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 bx [orig:83 file.0_1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 file+0 S4 A32])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 2 cx [orig:84 argv.1_2 ] [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [3 argv+0 S4 A32])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 7 6 9 2 (set (reg:SI 1 dx [orig:85 envp.2_3 ] [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [3 envp+0 S4 A32])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 9 7 10 2 (set (reg:SI 0 ax [90])
        (const_int 11 [0xb])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 10 9 8 2 (parallel [
            (set (reg:SI 0 ax [orig:89 __res ] [89])
                (asm_operands/v:SI ("int $0x80") ("=a") 0 [
                        (reg:SI 0 ax [orig:89 __res ] [89])
                        (reg:SI 3 bx [orig:83 file.0_1 ] [83])
                        (reg:SI 2 cx [orig:84 argv.1_2 ] [84])
                        (reg:SI 1 dx [orig:85 envp.2_3 ] [85])
                    ]
                     [
                        (asm_input:SI ("0") lib/execve.c:9)
                        (asm_input:SI ("b") lib/execve.c:9)
                        (asm_input:SI ("c") lib/execve.c:9)
                        (asm_input:SI ("d") lib/execve.c:9)
                    ]
                     [] lib/execve.c:9))
            (clobber (reg:CC 17 flags))
        ]) "lib/execve.c":9:1 -1
     (nil))
(insn 8 10 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __res+0 S4 A32])
        (reg:SI 0 ax [orig:89 __res ] [89])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 13 8 14 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 __res+0 S4 A32])
            (const_int 0 [0]))) "lib/execve.c":9:1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "lib/execve.c":9:1 806 {*jcc}
     (nil)
 -> 19)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 35 3 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __res+0 S4 A32])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(jump_insn 35 16 36 3 (set (pc)
        (label_ref 26)) "lib/execve.c":9:1 807 {jump}
     (nil)
 -> 26)
(barrier 36 35 19)
(code_label 19 36 20 4 2 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 0 ax [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __res+0 S4 A32])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 22 21 41 4 (parallel [
            (set (reg:SI 0 ax [91])
                (neg:SI (reg:SI 0 ax [91])))
            (clobber (reg:CC 17 flags))
        ]) "lib/execve.c":9:1 575 {*negsi_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32]))
        (nil)))
(insn 41 22 23 4 (set (reg:SI 1 dx [orig:86 _4 ] [86])
        (reg:SI 0 ax [91])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 23 41 24 4 (set (reg/f:SI 0 ax [92])
        (mem/u/c:SI (plus:SI (reg:SI 4 si [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("errno") [flags 0x40]  <var_decl 0x7a2cd731eb40 errno>)
                        ] UNSPEC_GOT))) [5  S4 A8])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (reg/f:SI 0 ax [92]) [4 errno+0 S4 A32])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (const_int -1 [0xffffffffffffffff])) "lib/execve.c":9:1 75 {*movsi_internal}
     (nil))
(code_label 26 25 27 5 3 (nil) [1 uses])
(note 27 26 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 27 39 5 (use (reg/i:SI 0 ax)) "lib/execve.c":9:1 -1
     (nil))
(note 39 33 0 NOTE_INSN_DELETED)
