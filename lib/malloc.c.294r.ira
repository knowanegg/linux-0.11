
;; Function init_bucket_desc (init_bucket_desc, funcdef_no=0, decl_uid=1027, cgraph_uid=1, symbol_order=2)

scanning new insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 11 (  1.2)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:36000
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 50(l0): point = 0
   Insn 44(l0): point = 3
   Insn 43(l0): point = 5
   Insn 42(l0): point = 7
   Insn 41(l0): point = 9
   Insn 40(l0): point = 11
   Insn 31(l0): point = 14
   Insn 30(l0): point = 16
   Insn 29(l0): point = 18
   Insn 28(l0): point = 20
   Insn 27(l0): point = 22
   Insn 26(l0): point = 24
   Insn 38(l0): point = 27
   Insn 37(l0): point = 29
   Insn 47(l0): point = 32
   Insn 22(l0): point = 34
   Insn 19(l0): point = 37
   Insn 18(l0): point = 39
   Insn 17(l0): point = 41
   Insn 16(l0): point = 43
   Insn 15(l0): point = 45
   Insn 14(l0): point = 47
   Insn 12(l0): point = 50
   Insn 11(l0): point = 52
   Insn 10(l0): point = 54
   Insn 9(l0): point = 56
   Insn 8(l0): point = 58
   Insn 7(l0): point = 60
   Insn 6(l0): point = 62
   Insn 5(l0): point = 64
   Insn 51(l0): point = 66
 a0(r82): [4..66]
 a1(r91): [4..5]
 a2(r90): [8..9]
 a3(r85): [8..11]
 a4(r89): [19..20]
 a5(r84): [19..22]
 a6(r88): [23..24]
 a7(r87): [44..45]
 a8(r86): [55..56]
 a9(r83): [59..60]
Compressing live ranges: from 69 to 14 - 20%
Ranges after the compression:
 a0(r82): [0..13]
 a1(r91): [0..1]
 a2(r90): [2..3]
 a3(r85): [2..3]
 a4(r89): [4..5]
 a5(r84): [4..5]
 a6(r88): [6..7]
 a7(r87): [8..9]
 a8(r86): [10..11]
 a9(r83): [12..13]
  pref0:a9(r83)<-hr0@1500
  regions=1, blocks=9, points=14
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    0:r82  l0     3    9:r83  l0     0    5:r84  l0     1    3:r85  l0     1
    8:r86  l0     0    7:r87  l0     0    6:r88  l0     0    4:r89  l0     0
    2:r90  l0     0    1:r91  l0     0
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


init_bucket_desc

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={3d} r2={3d} r3={2d,2u} r6={1d,8u} r7={4d,15u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u} r17={10d,2u} r18={2d} r19={1d,22u,1e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 240{168d,71u,1e} in 31{29 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 51 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 51 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 51 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":104:41 75 {*movsi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x72d5cb6d2b00 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "lib/malloc.c":104:41 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 83 [ _1 ])
        (reg:SI 0 ax)) "lib/malloc.c":104:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])
        (reg:SI 83 [ _1 ])) "lib/malloc.c":104:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":104:8 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 first+0 S4 A32])
        (reg/f:SI 86)) "lib/malloc.c":104:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":105:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "lib/malloc.c":105:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":106:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 15 14 16 3 (set (reg/f:SI 87)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x72d5cb6fbcf0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":106:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x72d5cb6fbcf0 *.LC0>)
        (nil)))
(insn 16 15 17 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 87)) "lib/malloc.c":106:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 17 16 18 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":106:3 75 {*movsi_internal}
     (nil))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x72d5cb6d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":106:3 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":106:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 20 19 21 4 2 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 47 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
        (const_int 256 [0x100])) "lib/malloc.c":107:9 75 {*movsi_internal}
     (nil))
(jump_insn 47 22 48 4 (set (pc)
        (label_ref 32)) "lib/malloc.c":107:2 807 {jump}
     (nil)
 -> 32)
(barrier 48 47 34)
(code_label 34 48 25 5 4 (nil) [1 uses])
(note 25 34 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":108:23 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 88)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":108:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 28 27 29 5 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":108:15 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (mem/f:SI (plus:SI (reg/f:SI 89)
                (const_int 4 [0x4])) [1 bdesc_4->next+0 S4 A32])
        (reg/f:SI 84 [ _2 ])) "lib/malloc.c":108:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (nil))))
(insn 30 29 31 5 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":109:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":107:59 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 32 31 33 6 3 (nil) [1 uses])
(note 33 32 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 33 38 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
            (const_int 1 [0x1]))) "lib/malloc.c":107:53 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "lib/malloc.c":107:53 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:SI 85 [ free_bucket_desc.1_3 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x72d5cd093f30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":115:14 75 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bdesc+0 S4 A32])) "lib/malloc.c":115:14 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (mem/f:SI (plus:SI (reg/f:SI 90)
                (const_int 4 [0x4])) [1 bdesc_4->next+0 S4 A32])
        (reg/f:SI 85 [ free_bucket_desc.1_3 ])) "lib/malloc.c":115:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (expr_list:REG_DEAD (reg/f:SI 85 [ free_bucket_desc.1_3 ])
            (nil))))
(insn 43 42 44 7 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 first+0 S4 A32])) "lib/malloc.c":116:19 75 {*movsi_internal}
     (nil))
(insn 44 43 49 7 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x72d5cd093f30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])
        (reg/f:SI 91)) "lib/malloc.c":116:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (expr_list:REG_DEAD (reg:SI 82)
            (nil))))
(note 49 44 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 0 8 (const_int 0 [0]) "lib/malloc.c":117:1 843 {nop}
     (nil))

;; Function malloc (malloc, funcdef_no=1, decl_uid=1037, cgraph_uid=2, symbol_order=3)

scanning new insn with uid = 200.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 26 n_edges 34 count 30 (  1.2)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 22 23 6 7 8 9 10 11 24 25 12 13 14 15 16 17 18 19 20 21
;;
;; Loop 3
;;  header 19, latch 18
;;  depth 1, outer 0
;;  nodes: 19 18
;;
;; Loop 2
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 23 4 }
;; 4 succs { 5 }
;; 5 succs { 3 22 }
;; 22 succs { 6 }
;; 23 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 11 }
;; 9 succs { 25 10 }
;; 10 succs { 11 }
;; 11 succs { 9 24 }
;; 24 succs { 12 }
;; 25 succs { 12 }
;; 12 succs { 13 21 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 18 20 }
;; 20 succs { 21 }
;; 21 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r130,l0) best AREG, allocno GENERAL_REGS
    r129: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r129,l0) best DREG, allocno GENERAL_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a23(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a24(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r128,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a27(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r130,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a29(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:6000
  a30(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r82,l0) costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 CLOBBERED_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 TLS_GOTBASE_REGS:8000 GENERAL_REGS:8000 MEM:72000
  a32(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a39(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a41(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a59(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a61(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a62(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 180(l0): point = 0
   Insn 179(l0): point = 2
   Insn 175(l0): point = 4
   Insn 172(l0): point = 6
   Insn 171(l0): point = 8
   Insn 170(l0): point = 10
   Insn 169(l0): point = 12
   Insn 168(l0): point = 14
   Insn 167(l0): point = 16
   Insn 166(l0): point = 18
   Insn 165(l0): point = 20
   Insn 164(l0): point = 22
   Insn 163(l0): point = 24
   Insn 162(l0): point = 26
   Insn 161(l0): point = 28
   Insn 160(l0): point = 30
   Insn 159(l0): point = 32
   Insn 156(l0): point = 35
   Insn 155(l0): point = 37
   Insn 154(l0): point = 39
   Insn 153(l0): point = 41
   Insn 152(l0): point = 43
   Insn 151(l0): point = 45
   Insn 150(l0): point = 47
   Insn 149(l0): point = 49
   Insn 148(l0): point = 51
   Insn 139(l0): point = 54
   Insn 138(l0): point = 56
   Insn 137(l0): point = 58
   Insn 136(l0): point = 60
   Insn 135(l0): point = 62
   Insn 134(l0): point = 64
   Insn 133(l0): point = 66
   Insn 132(l0): point = 68
   Insn 131(l0): point = 70
   Insn 130(l0): point = 72
   Insn 129(l0): point = 74
   Insn 128(l0): point = 76
   Insn 146(l0): point = 79
   Insn 145(l0): point = 81
   Insn 186(l0): point = 84
   Insn 124(l0): point = 86
   Insn 123(l0): point = 88
   Insn 122(l0): point = 91
   Insn 121(l0): point = 93
   Insn 120(l0): point = 95
   Insn 117(l0): point = 98
   Insn 116(l0): point = 100
   Insn 115(l0): point = 102
   Insn 114(l0): point = 104
   Insn 113(l0): point = 106
   Insn 112(l0): point = 108
   Insn 110(l0): point = 111
   Insn 109(l0): point = 113
   Insn 108(l0): point = 115
   Insn 107(l0): point = 117
   Insn 106(l0): point = 119
   Insn 105(l0): point = 121
   Insn 104(l0): point = 123
   Insn 103(l0): point = 125
   Insn 102(l0): point = 127
   Insn 101(l0): point = 129
   Insn 100(l0): point = 131
   Insn 99(l0): point = 133
   Insn 98(l0): point = 135
   Insn 97(l0): point = 137
   Insn 96(l0): point = 139
   Insn 95(l0): point = 141
   Insn 94(l0): point = 143
   Insn 93(l0): point = 145
   Insn 92(l0): point = 147
   Insn 91(l0): point = 149
   Insn 90(l0): point = 151
   Insn 89(l0): point = 153
   Insn 88(l0): point = 155
   Insn 87(l0): point = 157
   Insn 86(l0): point = 159
   Insn 83(l0): point = 162
   Insn 81(l0): point = 165
   Insn 80(l0): point = 167
   Insn 79(l0): point = 169
   Insn 77(l0): point = 172
   Insn 76(l0): point = 174
   Insn 199(l0): point = 177
   Insn 195(l0): point = 180
   Insn 60(l0): point = 183
   Insn 59(l0): point = 185
   Insn 58(l0): point = 187
   Insn 57(l0): point = 189
   Insn 73(l0): point = 192
   Insn 72(l0): point = 194
   Insn 68(l0): point = 197
   Insn 67(l0): point = 199
   Insn 66(l0): point = 201
   Insn 184(l0): point = 204
   Insn 53(l0): point = 206
   Insn 52(l0): point = 208
   Insn 51(l0): point = 210
   Insn 50(l0): point = 212
   Insn 47(l0): point = 215
   Insn 46(l0): point = 217
   Insn 45(l0): point = 219
   Insn 44(l0): point = 221
   Insn 43(l0): point = 223
   Insn 42(l0): point = 225
   Insn 41(l0): point = 227
   Insn 40(l0): point = 229
   Insn 39(l0): point = 231
   Insn 38(l0): point = 233
   Insn 37(l0): point = 235
   Insn 36(l0): point = 237
   Insn 35(l0): point = 239
   Insn 33(l0): point = 242
   Insn 32(l0): point = 244
   Insn 31(l0): point = 246
   Insn 30(l0): point = 248
   Insn 193(l0): point = 251
   Insn 189(l0): point = 254
   Insn 14(l0): point = 257
   Insn 13(l0): point = 259
   Insn 12(l0): point = 261
   Insn 11(l0): point = 263
   Insn 10(l0): point = 265
   Insn 27(l0): point = 268
   Insn 26(l0): point = 270
   Insn 24(l0): point = 272
   Insn 23(l0): point = 274
   Insn 20(l0): point = 277
   Insn 182(l0): point = 280
   Insn 6(l0): point = 282
   Insn 5(l0): point = 284
   Insn 200(l0): point = 286
 a0(r105): [3..4]
 a1(r104): [5..6]
 a2(r145): [11..12]
 a3(r103): [11..14]
 a4(r102): [15..16]
 a5(r144): [17..18]
 a6(r143): [21..22]
 a7(r101): [21..24]
 a8(r142): [25..26]
 a9(r141): [29..30]
 a10(r140): [31..32]
 a11(r138): [36..39]
 a12(r139): [36..37]
 a13(r137): [42..43]
 a14(r100): [42..45]
 a15(r136): [46..47]
 a16(r135): [50..51]
 a17(r99): [57..58]
 a18(r98): [59..60]
 a19(r134): [61..62]
 a20(r133): [65..66]
 a21(r97): [65..68]
 a22(r132): [69..70]
 a23(r96): [69..72]
 a24(r95): [73..74]
 a25(r131): [75..76]
 a26(r128): [87..88]
 a27(r94): [89..93]
 a28(r130): [90..91]
 a29(r129): [88..89]
 a30(r127): [94..95]
 a31(r82): [103..286]
 a32(r126): [105..106]
 a33(r125): [116..117]
 a34(r93): [116..119]
 a35(r124): [120..121]
 a36(r122): [124..127]
 a37(r123): [124..125]
 a38(r92): [130..131]
 a39(r121): [138..139]
 a40(r91): [138..141]
 a41(r90): [142..143]
 a42(r120): [144..145]
 a43(r119): [148..149]
 a44(r89): [152..153]
 a45(r118): [154..155]
 a46(r117): [158..159]
 a47(r88): [168..169]
 a48(r116): [198..199]
 a49(r115): [200..201]
 a50(r87): [186..187]
 a51(r114): [188..189]
 a52(r113): [207..208]
 a53(r112): [209..210]
 a54(r111): [222..223]
 a55(r110): [234..235]
 a56(r86): [245..246]
 a57(r109): [247..248]
 a58(r85): [271..272]
 a59(r108): [273..274]
 a60(r84): [260..261]
 a61(r83): [262..263]
 a62(r107): [264..265]
 a63(r106): [283..284]
Compressing live ranges: from 289 to 105 - 36%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r104): [2..3]
 a2(r145): [4..5]
 a3(r103): [4..5]
 a4(r102): [6..7]
 a5(r144): [8..9]
 a6(r143): [10..11]
 a7(r101): [10..11]
 a8(r142): [12..13]
 a9(r141): [14..15]
 a10(r140): [16..17]
 a11(r138): [18..19]
 a12(r139): [18..19]
 a13(r137): [20..21]
 a14(r100): [20..21]
 a15(r136): [22..23]
 a16(r135): [24..25]
 a17(r99): [26..27]
 a18(r98): [28..29]
 a19(r134): [30..31]
 a20(r133): [32..33]
 a21(r97): [32..33]
 a22(r132): [34..35]
 a23(r96): [34..35]
 a24(r95): [36..37]
 a25(r131): [38..39]
 a26(r128): [40..41]
 a27(r94): [42..44]
 a28(r130): [43..44]
 a29(r129): [41..42]
 a30(r127): [45..46]
 a31(r82): [47..104]
 a32(r126): [47..48]
 a33(r125): [49..50]
 a34(r93): [49..50]
 a35(r124): [51..52]
 a36(r122): [53..54]
 a37(r123): [53..54]
 a38(r92): [55..56]
 a39(r121): [57..58]
 a40(r91): [57..58]
 a41(r90): [59..60]
 a42(r120): [61..62]
 a43(r119): [63..64]
 a44(r89): [65..66]
 a45(r118): [67..68]
 a46(r117): [69..70]
 a47(r88): [71..72]
 a48(r116): [77..78]
 a49(r115): [79..80]
 a50(r87): [73..74]
 a51(r114): [75..76]
 a52(r113): [81..82]
 a53(r112): [83..84]
 a54(r111): [85..86]
 a55(r110): [87..88]
 a56(r86): [89..90]
 a57(r109): [91..92]
 a58(r85): [99..100]
 a59(r108): [101..102]
 a60(r84): [93..94]
 a61(r83): [95..96]
 a62(r107): [97..98]
 a63(r106): [103..104]
  pref0:a28(r130)<-hr0@1000
  pref1:a29(r129)<-hr1@1000
  pref2:a26(r128)<-hr0@1000
  pref3:a0(r105)<-hr0@1500
  pref4:a38(r92)<-hr0@1500
  pref5:a31(r82)<-hr3@1500
  regions=1, blocks=26, points=105
    allocnos=64 (big 0), copies=0, conflicts=0, ranges=64
Disposition:
   31:r82  l0     3   61:r83  l0     0   60:r84  l0     0   58:r85  l0     0
   56:r86  l0     0   50:r87  l0     0   47:r88  l0     0   44:r89  l0     0
   41:r90  l0     0   40:r91  l0     1   38:r92  l0     0   34:r93  l0     1
   27:r94  l0     1   24:r95  l0     0   23:r96  l0     1   21:r97  l0     1
   18:r98  l0     0   17:r99  l0     0   14:r100 l0     1    7:r101 l0     1
    4:r102 l0     0    3:r103 l0     1    1:r104 l0     0    0:r105 l0     0
   63:r106 l0     0   62:r107 l0     0   59:r108 l0     0   57:r109 l0     0
   55:r110 l0     0   54:r111 l0     0   53:r112 l0     0   52:r113 l0     0
   51:r114 l0     0   49:r115 l0     0   48:r116 l0     0   46:r117 l0     0
   45:r118 l0     0   43:r119 l0     0   42:r120 l0     0   39:r121 l0     0
   36:r122 l0     0   37:r123 l0     1   35:r124 l0     0   33:r125 l0     0
   32:r126 l0     0   30:r127 l0     0   26:r128 l0     0   29:r129 l0     2
   28:r130 l0     0   25:r131 l0     0   22:r132 l0     0   20:r133 l0     0
   19:r134 l0     0   16:r135 l0     0   15:r136 l0     0   13:r137 l0     0
   11:r138 l0     0   12:r139 l0     1   10:r140 l0     0    9:r141 l0     0
    8:r142 l0     0    6:r143 l0     0    5:r144 l0     0    2:r145 l0     0
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


malloc

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,3u} r1={6d} r2={6d} r3={4d,4u} r6={1d,25u} r7={11d,46u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,26u} r17={29d,9u} r18={5d} r19={1d,72u,1e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,11u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,2u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d} r130={1d,2u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 717{455d,260u,2e} in 132{127 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 200 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 200 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 200 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 106)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x72d5cd093d80 bucket_dir>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":129:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x72d5cd093d80 bucket_dir>)
        (nil)))
(insn 6 5 182 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])
        (reg/f:SI 106)) "lib/malloc.c":129:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(jump_insn 182 6 183 2 (set (pc)
        (label_ref 21)) "lib/malloc.c":129:2 807 {jump}
     (nil)
 -> 21)
(barrier 183 182 25)
(code_label 25 183 9 3 9 (nil) [1 uses])
(note 9 25 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":130:11 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 83 [ _1 ])
        (mem:SI (reg/f:SI 107) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":130:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 12 11 13 3 (set (reg:SI 84 [ _2 ])
        (reg:SI 83 [ _1 ])) "lib/malloc.c":130:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 13 12 14 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [6 len+0 S4 A32])
            (reg:SI 84 [ _2 ]))) "lib/malloc.c":130:6 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 14 13 19 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 192)
            (pc))) "lib/malloc.c":130:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 192)
(note 19 14 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":129:43 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 21 20 22 5 6 (nil) [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":129:31 75 {*movsi_internal}
     (nil))
(insn 24 23 26 5 (set (reg:SI 85 [ _3 ])
        (mem:SI (reg/f:SI 108) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":129:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 26 24 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (const_int 0 [0]))) "lib/malloc.c":129:27 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 27 26 188 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "lib/malloc.c":129:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
(note 188 27 189 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 189 188 190 22 (set (pc)
        (label_ref 28)) 807 {jump}
     (nil)
 -> 28)
(barrier 190 189 192)
(code_label 192 190 191 23 21 (nil) [1 uses])
(note 191 192 193 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 193 191 28 23 (const_int 0 [0]) "lib/malloc.c":131:4 843 {nop}
     (nil))
(code_label 28 193 29 6 8 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":132:11 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:SI 86 [ _4 ])
        (mem:SI (reg/f:SI 109) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":132:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _4 ])
            (const_int 0 [0]))) "lib/malloc.c":132:5 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "lib/malloc.c":132:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":133:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 36 35 37 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [6 len+0 S4 A32])) "lib/malloc.c":133:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 37 36 38 7 (set (reg/f:SI 110)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x72d5cb6fbf30 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":133:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x72d5cb6fbf30 *.LC1>)
        (nil)))
(insn 38 37 39 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 110)) "lib/malloc.c":133:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 39 38 40 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":133:3 75 {*movsi_internal}
     (nil))
(call_insn 40 39 41 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x72d5cb6d2700 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "lib/malloc.c":133:3 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 41 40 42 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":133:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 42 41 43 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":135:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 43 42 44 7 (set (reg/f:SI 111)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x72d5cb6fbd80 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":135:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x72d5cb6fbd80 *.LC2>)
        (nil)))
(insn 44 43 45 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 111)) "lib/malloc.c":135:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 45 44 46 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":135:3 75 {*movsi_internal}
     (nil))
(call_insn 46 45 47 7 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x72d5cb6d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":135:3 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 47 46 48 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":135:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 48 47 49 8 10 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] lib/malloc.c:140)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":140:2 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 8 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":141:13 75 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg/f:SI 113)
        (mem/f:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [1 bdir_23->chain+0 S4 A32])) "lib/malloc.c":141:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 53 52 184 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 113)) "lib/malloc.c":141:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(jump_insn 184 53 185 8 (set (pc)
        (label_ref 69)) "lib/malloc.c":141:2 807 {jump}
     (nil)
 -> 69)
(barrier 185 184 71)
(code_label 71 185 56 9 14 (nil) [1 uses])
(note 56 71 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 9 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":142:12 75 {*movsi_internal}
     (nil))
(insn 58 57 59 9 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 8 [0x8])) [3 bdesc_24->freeptr+0 S4 A32])) "lib/malloc.c":142:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ _5 ])
            (const_int 0 [0]))) "lib/malloc.c":142:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (nil)))
(jump_insn 60 59 65 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 198)
            (pc))) "lib/malloc.c":142:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 198)
(note 65 60 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 10 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":141:41 75 {*movsi_internal}
     (nil))
(insn 67 66 68 10 (set (reg/f:SI 116)
        (mem/f:SI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])) "lib/malloc.c":141:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 68 67 69 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 116)) "lib/malloc.c":141:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(code_label 69 68 70 11 11 (nil) [1 uses])
(note 70 69 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 70 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":141:28 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 194 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "lib/malloc.c":141:28 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 71)
(note 194 73 195 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 194 196 24 (set (pc)
        (label_ref 74)) 807 {jump}
     (nil)
 -> 74)
(barrier 196 195 198)
(code_label 198 196 197 25 22 (nil) [1 uses])
(note 197 198 199 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 199 197 74 25 (const_int 0 [0]) "lib/malloc.c":143:4 843 {nop}
     (nil))
(code_label 74 199 75 12 13 (nil) [1 uses])
(note 75 74 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":148:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 77 76 78 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) "lib/malloc.c":148:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 157)
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg/f:SI 88 [ free_bucket_desc.0_6 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x72d5cd093f30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":152:7 75 {*movsi_internal}
     (nil))
(insn 80 79 81 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ free_bucket_desc.0_6 ])
            (const_int 0 [0]))) "lib/malloc.c":152:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 88 [ free_bucket_desc.0_6 ])
        (nil)))
(jump_insn 81 80 82 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "lib/malloc.c":152:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 83 82 84 14 (call (mem:QI (symbol_ref:SI ("init_bucket_desc") [flags 0x3]  <function_decl 0x72d5cb6f9000 init_bucket_desc>) [0 init_bucket_desc S1 A8])
        (const_int 0 [0])) "lib/malloc.c":153:4 812 {*call}
     (nil)
    (nil))
(code_label 84 83 85 15 16 (nil) [1 uses])
(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 15 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x72d5cd093f30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":154:9 75 {*movsi_internal}
     (nil))
(insn 87 86 88 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 117)) "lib/malloc.c":154:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 88 87 89 15 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":155:27 75 {*movsi_internal}
     (nil))
(insn 89 88 90 15 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [1 bdesc_42->next+0 S4 A32])) "lib/malloc.c":155:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 90 89 91 15 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x72d5cd093f30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])
        (reg/f:SI 89 [ _7 ])) "lib/malloc.c":155:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(insn 91 90 92 15 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":156:17 75 {*movsi_internal}
     (nil))
(insn 92 91 93 15 (set (mem:HI (plus:SI (reg/f:SI 119)
                (const_int 12 [0xc])) [4 bdesc_42->refcnt+0 S2 A32])
        (const_int 0 [0])) "lib/malloc.c":156:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 93 92 94 15 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":157:28 75 {*movsi_internal}
     (nil))
(insn 94 93 95 15 (set (reg:SI 90 [ _8 ])
        (mem:SI (reg/f:SI 120) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":157:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 95 94 96 15 (set (reg:HI 91 [ _9 ])
        (subreg:HI (reg:SI 90 [ _8 ]) 0)) "lib/malloc.c":157:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(insn 96 95 97 15 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":157:22 75 {*movsi_internal}
     (nil))
(insn 97 96 98 15 (set (mem:HI (plus:SI (reg/f:SI 121)
                (const_int 14 [0xe])) [4 bdesc_42->bucket_size+0 S2 A16])
        (reg:HI 91 [ _9 ])) "lib/malloc.c":157:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
            (nil))))
(insn 98 97 99 15 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":158:57 75 {*movsi_internal}
     (nil))
(call_insn 99 98 100 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x72d5cb6d2b00 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "lib/malloc.c":158:57 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 100 99 101 15 (set (reg:SI 92 [ _10 ])
        (reg:SI 0 ax)) "lib/malloc.c":158:57 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 101 100 102 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])
        (reg:SI 92 [ _10 ])) "lib/malloc.c":158:46 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(insn 102 101 103 15 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":158:32 75 {*movsi_internal}
     (nil))
(insn 103 102 104 15 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])) "lib/malloc.c":158:32 75 {*movsi_internal}
     (nil))
(insn 104 103 105 15 (set (mem/f:SI (plus:SI (reg/f:SI 122)
                (const_int 8 [0x8])) [3 bdesc_42->freeptr+0 S4 A32])
        (reg/f:SI 123)) "lib/malloc.c":158:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_DEAD (reg/f:SI 122)
            (nil))))
(insn 105 104 106 15 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":158:22 75 {*movsi_internal}
     (nil))
(insn 106 105 107 15 (set (reg/f:SI 93 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 124)
                (const_int 8 [0x8])) [3 bdesc_42->freeptr+0 S4 A32])) "lib/malloc.c":158:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 107 106 108 15 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":158:15 75 {*movsi_internal}
     (nil))
(insn 108 107 109 15 (set (mem/f:SI (reg/f:SI 125) [3 bdesc_42->page+0 S4 A32])
        (reg/f:SI 93 [ _11 ])) "lib/malloc.c":158:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
            (nil))))
(insn 109 108 110 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":159:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 110 109 111 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "lib/malloc.c":159:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 118)
(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":160:4 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 113 112 114 16 (set (reg/f:SI 126)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x72d5cb72c000 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":160:4 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x72d5cb72c000 *.LC3>)
        (nil)))
(insn 114 113 115 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 126)) "lib/malloc.c":160:4 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 115 114 116 16 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":160:4 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 116 115 117 16 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x72d5cb6d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":160:4 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 117 116 118 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":160:4 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 118 117 119 17 17 (nil) [1 uses])
(note 119 118 120 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 17 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":162:28 75 {*movsi_internal}
     (nil))
(insn 121 120 122 17 (set (reg:SI 94 [ _12 ])
        (mem:SI (reg/f:SI 127) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":162:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 122 121 123 17 (set (reg:SI 130)
        (const_int 4096 [0x1000])) "lib/malloc.c":162:10 75 {*movsi_internal}
     (nil))
(insn 123 122 124 17 (parallel [
            (set (reg:SI 128)
                (div:SI (reg:SI 130)
                    (reg:SI 94 [ _12 ])))
            (set (reg:SI 129)
                (mod:SI (reg:SI 130)
                    (reg:SI 94 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":162:10 446 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
            (expr_list:REG_UNUSED (reg:SI 129)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 124 123 186 17 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A32])
        (reg:SI 128)) "lib/malloc.c":162:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(jump_insn 186 124 187 17 (set (pc)
        (label_ref 140)) "lib/malloc.c":162:3 807 {jump}
     (nil)
 -> 140)
(barrier 187 186 142)
(code_label 142 187 127 18 19 (nil) [1 uses])
(note 127 142 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 18 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":163:31 75 {*movsi_internal}
     (nil))
(insn 129 128 130 18 (set (reg:SI 95 [ _13 ])
        (mem:SI (reg/f:SI 131) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":163:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 130 129 131 18 (set (reg:SI 96 [ _14 ])
        (reg:SI 95 [ _13 ])) "lib/malloc.c":163:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (nil)))
(insn 131 130 132 18 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])) "lib/malloc.c":163:25 75 {*movsi_internal}
     (nil))
(insn 132 131 133 18 (parallel [
            (set (reg/f:SI 97 [ _15 ])
                (plus:SI (reg:SI 96 [ _14 ])
                    (reg/f:SI 132)))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":163:25 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])
                        (reg:SI 96 [ _14 ]))
                    (nil))))))
(insn 133 132 134 18 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])) "lib/malloc.c":163:20 75 {*movsi_internal}
     (nil))
(insn 134 133 135 18 (set (mem/f:SI (reg/f:SI 133) [7 MEM[(char * *)cp_26]+0 S4 A32])
        (reg/f:SI 97 [ _15 ])) "lib/malloc.c":163:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
            (nil))))
(insn 135 134 136 18 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":164:14 75 {*movsi_internal}
     (nil))
(insn 136 135 137 18 (set (reg:SI 98 [ _16 ])
        (mem:SI (reg/f:SI 134) [6 bdir_23->size+0 S4 A32])) "lib/malloc.c":164:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 137 136 138 18 (set (reg:SI 99 [ _17 ])
        (reg:SI 98 [ _16 ])) "lib/malloc.c":164:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (nil)))
(insn 138 137 139 18 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])
                    (reg:SI 99 [ _17 ])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":164:7 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 18 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":162:44 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 140 139 141 19 18 (nil) [1 uses])
(note 141 140 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 141 146 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [6 i+0 S4 A32])
            (const_int 1 [0x1]))) "lib/malloc.c":162:38 11 {*cmpsi_1}
     (nil))
(jump_insn 146 145 147 19 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "lib/malloc.c":162:38 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 142)
(note 147 146 148 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 20 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 cp+0 S4 A32])) "lib/malloc.c":166:19 75 {*movsi_internal}
     (nil))
(insn 149 148 150 20 (set (mem/f:SI (reg/f:SI 135) [7 MEM[(char * *)cp_26]+0 S4 A32])
        (const_int 0 [0])) "lib/malloc.c":166:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))
(insn 150 149 151 20 (set (reg/f:SI 136)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":167:21 75 {*movsi_internal}
     (nil))
(insn 151 150 152 20 (set (reg/f:SI 100 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 136)
                (const_int 4 [0x4])) [1 bdir_23->chain+0 S4 A32])) "lib/malloc.c":167:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))
(insn 152 151 153 20 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":167:15 75 {*movsi_internal}
     (nil))
(insn 153 152 154 20 (set (mem/f:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [1 bdesc_42->next+0 S4 A32])
        (reg/f:SI 100 [ _18 ])) "lib/malloc.c":167:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_DEAD (reg/f:SI 100 [ _18 ])
            (nil))))
(insn 154 153 155 20 (set (reg/f:SI 138)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":168:15 75 {*movsi_internal}
     (nil))
(insn 155 154 156 20 (set (reg/f:SI 139)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":168:15 75 {*movsi_internal}
     (nil))
(insn 156 155 157 20 (set (mem/f:SI (plus:SI (reg/f:SI 138)
                (const_int 4 [0x4])) [1 bdir_23->chain+0 S4 A32])
        (reg/f:SI 139)) "lib/malloc.c":168:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg/f:SI 138)
            (nil))))
(code_label 157 156 158 21 15 (nil) [1 uses])
(note 158 157 159 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 21 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":170:9 75 {*movsi_internal}
     (nil))
(insn 160 159 161 21 (set (reg/f:SI 141)
        (mem/f:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [3 bdesc_25->freeptr+0 S4 A32])) "lib/malloc.c":170:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (nil)))
(insn 161 160 162 21 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 retval+0 S4 A32])
        (reg/f:SI 141)) "lib/malloc.c":170:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))
(insn 162 161 163 21 (set (reg/f:SI 142)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 retval+0 S4 A32])) "lib/malloc.c":171:19 75 {*movsi_internal}
     (nil))
(insn 163 162 164 21 (set (reg/f:SI 101 [ _19 ])
        (mem/f:SI (reg/f:SI 142) [3 MEM[(void * *)retval_58]+0 S4 A32])) "lib/malloc.c":171:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))
(insn 164 163 165 21 (set (reg/f:SI 143)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":171:17 75 {*movsi_internal}
     (nil))
(insn 165 164 166 21 (set (mem/f:SI (plus:SI (reg/f:SI 143)
                (const_int 8 [0x8])) [3 bdesc_25->freeptr+0 S4 A32])
        (reg/f:SI 101 [ _19 ])) "lib/malloc.c":171:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
            (nil))))
(insn 166 165 167 21 (set (reg/f:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":172:7 75 {*movsi_internal}
     (nil))
(insn 167 166 168 21 (set (reg:HI 102 [ _20 ])
        (mem:HI (plus:SI (reg/f:SI 144)
                (const_int 12 [0xc])) [4 bdesc_25->refcnt+0 S2 A32])) "lib/malloc.c":172:7 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 144)
        (nil)))
(insn 168 167 169 21 (parallel [
            (set (reg:HI 103 [ _22 ])
                (plus:HI (reg:HI 102 [ _20 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":172:15 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 102 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 169 168 170 21 (set (reg/f:SI 145)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":172:15 75 {*movsi_internal}
     (nil))
(insn 170 169 171 21 (set (mem:HI (plus:SI (reg/f:SI 145)
                (const_int 12 [0xc])) [4 bdesc_25->refcnt+0 S2 A32])
        (reg:HI 103 [ _22 ])) "lib/malloc.c":172:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_DEAD (reg:HI 103 [ _22 ])
            (nil))))
(insn 171 170 172 21 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] lib/malloc.c:173)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":173:2 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 172 171 175 21 (set (reg/f:SI 104 [ _61 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 retval+0 S4 A32])) "lib/malloc.c":174:9 75 {*movsi_internal}
     (nil))
(insn 175 172 179 21 (set (reg/f:SI 105 [ <retval> ])
        (reg/f:SI 104 [ _61 ])) "lib/malloc.c":174:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ _61 ])
        (nil)))
(insn 179 175 180 21 (set (reg/i:SI 0 ax)
        (reg/f:SI 105 [ <retval> ])) "lib/malloc.c":175:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105 [ <retval> ])
        (nil)))
(insn 180 179 0 21 (use (reg/i:SI 0 ax)) "lib/malloc.c":175:1 -1
     (nil))

;; Function free_s (free_s, funcdef_no=2, decl_uid=1011, cgraph_uid=3, symbol_order=4)

scanning new insn with uid = 207.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 32 n_edges 44 count 41 (  1.3)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 27 28 8 9 10 29 11 12 13 14 15 16 17 18 19 30 31 20 21 22 23 24 25 26
;;
;; Loop 3
;;  header 19, latch 18
;;  depth 1, outer 0
;;  nodes: 19 18 17
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 28 27 7 6 4 3 5
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 2, outer 1
;;  nodes: 7 6 5
;; 2 succs { 9 }
;; 3 succs { 28 4 }
;; 4 succs { 7 }
;; 5 succs { 29 6 }
;; 6 succs { 7 }
;; 7 succs { 5 27 }
;; 27 succs { 8 }
;; 28 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 3 10 }
;; 10 succs { 11 }
;; 29 succs { 11 }
;; 11 succs { 12 26 }
;; 12 succs { 13 14 }
;; 13 succs { 16 14 }
;; 14 succs { 15 20 }
;; 15 succs { 16 20 }
;; 16 succs { 19 }
;; 17 succs { 31 18 }
;; 18 succs { 19 }
;; 19 succs { 17 30 }
;; 30 succs { 20 }
;; 31 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 25 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:54000
  a1(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a5(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 181(l0): point = 0
   Insn 176(l0): point = 2
   Insn 173(l0): point = 5
   Insn 172(l0): point = 7
   Insn 171(l0): point = 9
   Insn 170(l0): point = 11
   Insn 169(l0): point = 13
   Insn 168(l0): point = 15
   Insn 167(l0): point = 17
   Insn 166(l0): point = 19
   Insn 165(l0): point = 21
   Insn 164(l0): point = 23
   Insn 163(l0): point = 25
   Insn 162(l0): point = 27
   Insn 161(l0): point = 29
   Insn 158(l0): point = 32
   Insn 157(l0): point = 34
   Insn 156(l0): point = 36
   Insn 155(l0): point = 38
   Insn 152(l0): point = 41
   Insn 151(l0): point = 43
   Insn 150(l0): point = 45
   Insn 149(l0): point = 47
   Insn 148(l0): point = 49
   Insn 147(l0): point = 51
   Insn 145(l0): point = 54
   Insn 144(l0): point = 56
   Insn 143(l0): point = 58
   Insn 142(l0): point = 60
   Insn 188(l0): point = 63
   Insn 137(l0): point = 65
   Insn 136(l0): point = 67
   Insn 135(l0): point = 69
   Insn 134(l0): point = 71
   Insn 132(l0): point = 74
   Insn 131(l0): point = 76
   Insn 206(l0): point = 79
   Insn 202(l0): point = 82
   Insn 115(l0): point = 85
   Insn 114(l0): point = 87
   Insn 113(l0): point = 89
   Insn 112(l0): point = 91
   Insn 128(l0): point = 94
   Insn 127(l0): point = 96
   Insn 123(l0): point = 99
   Insn 122(l0): point = 101
   Insn 121(l0): point = 103
   Insn 186(l0): point = 106
   Insn 108(l0): point = 108
   Insn 107(l0): point = 110
   Insn 106(l0): point = 112
   Insn 103(l0): point = 115
   Insn 102(l0): point = 117
   Insn 101(l0): point = 119
   Insn 100(l0): point = 121
   Insn 98(l0): point = 124
   Insn 97(l0): point = 126
   Insn 94(l0): point = 129
   Insn 93(l0): point = 131
   Insn 92(l0): point = 133
   Insn 91(l0): point = 135
   Insn 89(l0): point = 138
   Insn 88(l0): point = 140
   Insn 86(l0): point = 143
   Insn 85(l0): point = 145
   Insn 84(l0): point = 147
   Insn 83(l0): point = 149
   Insn 82(l0): point = 151
   Insn 81(l0): point = 153
   Insn 80(l0): point = 155
   Insn 79(l0): point = 157
   Insn 78(l0): point = 159
   Insn 77(l0): point = 161
   Insn 76(l0): point = 163
   Insn 75(l0): point = 165
   Insn 74(l0): point = 167
   Insn 73(l0): point = 169
   Insn 72(l0): point = 171
   Insn 71(l0): point = 173
   Insn 70(l0): point = 175
   Insn 200(l0): point = 178
   Insn 196(l0): point = 181
   Insn 67(l0): point = 183
   Insn 66(l0): point = 185
   Insn 65(l0): point = 187
   Insn 64(l0): point = 189
   Insn 63(l0): point = 191
   Insn 62(l0): point = 193
   Insn 20(l0): point = 196
   Insn 19(l0): point = 198
   Insn 18(l0): point = 200
   Insn 17(l0): point = 202
   Insn 16(l0): point = 204
   Insn 60(l0): point = 207
   Insn 59(l0): point = 209
   Insn 57(l0): point = 211
   Insn 56(l0): point = 213
   Insn 53(l0): point = 216
   Insn 195(l0): point = 219
   Insn 191(l0): point = 222
   Insn 50(l0): point = 225
   Insn 49(l0): point = 227
   Insn 45(l0): point = 230
   Insn 44(l0): point = 232
   Insn 43(l0): point = 234
   Insn 42(l0): point = 236
   Insn 41(l0): point = 238
   Insn 35(l0): point = 241
   Insn 34(l0): point = 243
   Insn 33(l0): point = 245
   Insn 32(l0): point = 247
   Insn 184(l0): point = 250
   Insn 28(l0): point = 252
   Insn 27(l0): point = 254
   Insn 26(l0): point = 256
   Insn 182(l0): point = 259
   Insn 12(l0): point = 261
   Insn 11(l0): point = 263
   Insn 10(l0): point = 265
   Insn 9(l0): point = 267
   Insn 8(l0): point = 269
   Insn 7(l0): point = 271
   Insn 6(l0): point = 273
   Insn 5(l0): point = 275
   Insn 207(l0): point = 277
 a0(r82): [6..277]
 a1(r134): [6..7]
 a2(r133): [10..11]
 a3(r100): [10..13]
 a4(r99): [22..25]
 a5(r98): [26..27]
 a6(r132): [28..29]
 a7(r131): [33..34]
 a8(r97): [33..36]
 a9(r130): [37..38]
 a10(r129): [48..49]
 a11(r96): [57..58]
 a12(r128): [59..60]
 a13(r127): [66..67]
 a14(r95): [66..69]
 a15(r126): [70..71]
 a16(r125): [100..101]
 a17(r124): [102..103]
 a18(r94): [88..89]
 a19(r123): [90..91]
 a20(r122): [109..110]
 a21(r121): [111..112]
 a22(r93): [118..119]
 a23(r120): [120..121]
 a24(r92): [132..133]
 a25(r119): [134..135]
 a26(r91): [146..147]
 a27(r118): [148..149]
 a28(r117): [152..153]
 a29(r90): [152..155]
 a30(r89): [156..157]
 a31(r116): [158..159]
 a32(r114): [162..165]
 a33(r115): [162..163]
 a34(r113): [168..169]
 a35(r88): [168..171]
 a36(r112): [172..173]
 a37(r111): [190..191]
 a38(r87): [210..211]
 a39(r110): [212..213]
 a40(r109): [231..232]
 a41(r108): [233..234]
 a42(r107): [237..238]
 a43(r86): [244..245]
 a44(r106): [246..247]
 a45(r105): [253..254]
 a46(r104): [255..256]
 a47(r85): [199..200]
 a48(r103): [201..202]
 a49(r102): [262..263]
 a50(r84): [266..267]
 a51(r83): [268..269]
 a52(r101): [272..273]
Compressing live ranges: from 280 to 92 - 32%
Ranges after the compression:
 a0(r82): [0..91]
 a1(r134): [0..1]
 a2(r133): [2..3]
 a3(r100): [2..3]
 a4(r99): [4..5]
 a5(r98): [6..7]
 a6(r132): [8..9]
 a7(r131): [10..11]
 a8(r97): [10..11]
 a9(r130): [12..13]
 a10(r129): [14..15]
 a11(r96): [16..17]
 a12(r128): [18..19]
 a13(r127): [20..21]
 a14(r95): [20..21]
 a15(r126): [22..23]
 a16(r125): [28..29]
 a17(r124): [30..31]
 a18(r94): [24..25]
 a19(r123): [26..27]
 a20(r122): [32..33]
 a21(r121): [34..35]
 a22(r93): [36..37]
 a23(r120): [38..39]
 a24(r92): [40..41]
 a25(r119): [42..43]
 a26(r91): [44..45]
 a27(r118): [46..47]
 a28(r117): [48..49]
 a29(r90): [48..49]
 a30(r89): [50..51]
 a31(r116): [52..53]
 a32(r114): [54..55]
 a33(r115): [54..55]
 a34(r113): [56..57]
 a35(r88): [56..57]
 a36(r112): [58..59]
 a37(r111): [60..61]
 a38(r87): [66..67]
 a39(r110): [68..69]
 a40(r109): [70..71]
 a41(r108): [72..73]
 a42(r107): [74..75]
 a43(r86): [76..77]
 a44(r106): [78..79]
 a45(r105): [80..81]
 a46(r104): [82..83]
 a47(r85): [62..63]
 a48(r103): [64..65]
 a49(r102): [84..85]
 a50(r84): [86..87]
 a51(r83): [88..89]
 a52(r101): [90..91]
  regions=1, blocks=32, points=92
    allocnos=53 (big 0), copies=0, conflicts=0, ranges=53
Disposition:
    0:r82  l0     3   51:r83  l0     0   50:r84  l0     0   47:r85  l0     0
   43:r86  l0     0   38:r87  l0     0   35:r88  l0     1   30:r89  l0     0
   29:r90  l0     1   26:r91  l0     0   24:r92  l0     0   22:r93  l0     0
   18:r94  l0     0   14:r95  l0     1   11:r96  l0     0    8:r97  l0     1
    5:r98  l0     0    4:r99  l0     0    3:r100 l0     1   52:r101 l0     0
   49:r102 l0     0   48:r103 l0     0   46:r104 l0     0   45:r105 l0     0
   44:r106 l0     0   42:r107 l0     0   41:r108 l0     0   40:r109 l0     0
   39:r110 l0     0   37:r111 l0     0   36:r112 l0     0   34:r113 l0     0
   32:r114 l0     0   33:r115 l0     1   31:r116 l0     0   28:r117 l0     0
   27:r118 l0     0   25:r119 l0     0   23:r120 l0     0   21:r121 l0     0
   20:r122 l0     0   19:r123 l0     0   17:r124 l0     0   16:r125 l0     0
   15:r126 l0     0   13:r127 l0     0   12:r128 l0     0   10:r129 l0     0
    9:r130 l0     0    7:r131 l0     0    6:r132 l0     0    2:r133 l0     0
    1:r134 l0     0
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


free_s

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r3={3d,3u} r6={1d,31u} r7={10d,49u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,34u} r17={28d,13u} r18={3d} r19={1d,78u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,8u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 572{304d,268u,0e} in 125{122 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 207 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 207 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 207 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
        (const_int 0 [0])) "lib/malloc.c":189:15 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])) "lib/malloc.c":189:8 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 101)) "lib/malloc.c":189:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 83 [ obj.2_1 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [3 obj+0 S4 A32])) "lib/malloc.c":191:18 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (and:SI (reg:SI 83 [ obj.2_1 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":191:38 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ obj.2_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 page+0 S4 A32])
        (reg:SI 84 [ _2 ])) "lib/malloc.c":191:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:SI 102)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x72d5cd093d80 bucket_dir>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":193:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("bucket_dir") [flags 0x2]  <var_decl 0x72d5cd093d80 bucket_dir>)
        (nil)))
(insn 12 11 182 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])
        (reg/f:SI 102)) "lib/malloc.c":193:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(jump_insn 182 12 183 2 (set (pc)
        (label_ref 54)) "lib/malloc.c":193:2 807 {jump}
     (nil)
 -> 54)
(barrier 183 182 58)
(code_label 58 183 15 3 31 (nil) [1 uses])
(note 15 58 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
        (const_int 0 [0])) "lib/malloc.c":194:8 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":196:11 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 85 [ _3 ])
        (mem:SI (reg/f:SI 103) [6 bdir_20->size+0 S4 A32])) "lib/malloc.c":196:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 19 18 20 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [6 size+0 S4 A32])
            (reg:SI 85 [ _3 ]))) "lib/malloc.c":196:6 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 20 19 25 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 194)
            (pc))) "lib/malloc.c":196:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 194)
(note 25 20 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":198:14 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg/f:SI 105)
        (mem/f:SI (plus:SI (reg/f:SI 104)
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":198:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 28 27 184 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 105)) "lib/malloc.c":198:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(jump_insn 184 28 185 4 (set (pc)
        (label_ref 46)) "lib/malloc.c":198:3 807 {jump}
     (nil)
 -> 46)
(barrier 185 184 48)
(code_label 48 185 31 5 30 (nil) [1 uses])
(note 31 48 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":199:13 75 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (reg/f:SI 106) [3 bdesc_21->page+0 S4 A32])) "lib/malloc.c":199:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [3 page+0 S4 A32])
            (reg/f:SI 86 [ _4 ]))) "lib/malloc.c":199:7 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(jump_insn 35 34 40 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 199)
            (pc))) "lib/malloc.c":199:7 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 199)
(note 40 35 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":201:9 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
        (reg/f:SI 107)) "lib/malloc.c":201:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 43 42 44 6 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":198:42 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg/f:SI 109)
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 4 [0x4])) [1 bdesc_21->next+0 S4 A32])) "lib/malloc.c":198:42 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 45 44 46 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
        (reg/f:SI 109)) "lib/malloc.c":198:42 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(code_label 46 45 47 7 27 (nil) [1 uses])
(note 47 46 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 47 50 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":198:29 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 190 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "lib/malloc.c":198:29 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
(note 190 50 191 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn 191 190 192 27 (set (pc)
        (label_ref 51)) 807 {jump}
     (nil)
 -> 51)
(barrier 192 191 194)
(code_label 194 192 193 28 43 (nil) [1 uses])
(note 193 194 195 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 195 193 51 28 (const_int 0 [0]) "lib/malloc.c":197:4 843 {nop}
     (nil))
(code_label 51 195 52 8 26 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":193:43 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 54 53 55 9 24 (nil) [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":193:31 75 {*movsi_internal}
     (nil))
(insn 57 56 59 9 (set (reg:SI 87 [ _5 ])
        (mem:SI (reg/f:SI 110) [6 bdir_20->size+0 S4 A32])) "lib/malloc.c":193:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 59 57 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _5 ])
            (const_int 0 [0]))) "lib/malloc.c":193:27 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "lib/malloc.c":193:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 58)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":204:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 63 62 64 10 (set (reg/f:SI 111)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x72d5cb72c1b0 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":204:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x72d5cb72c1b0 *.LC4>)
        (nil)))
(insn 64 63 65 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 111)) "lib/malloc.c":204:2 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 65 64 66 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":204:2 75 {*movsi_internal}
     (nil))
(call_insn 66 65 67 10 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x72d5cb6d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":204:2 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 67 66 196 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":204:2 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 196 67 197 10 (set (pc)
        (label_ref 68)) 807 {jump}
     (nil)
 -> 68)
(barrier 197 196 199)
(code_label 199 197 198 29 44 (nil) [1 uses])
(note 198 199 200 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 200 198 68 29 (const_int 0 [0]) "lib/malloc.c":200:5 843 {nop}
     (nil))
(code_label 68 200 69 11 29 ("found") [1 uses])
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] lib/malloc.c:206)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":206:2 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 11 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":207:25 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (reg/f:SI 112)
                (const_int 8 [0x8])) [3 bdesc_24->freeptr+0 S4 A32])) "lib/malloc.c":207:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 73 72 74 11 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 obj+0 S4 A32])) "lib/malloc.c":207:18 75 {*movsi_internal}
     (nil))
(insn 74 73 75 11 (set (mem/f:SI (reg/f:SI 113) [3 MEM[(void * *)obj_37(D)]+0 S4 A32])
        (reg/f:SI 88 [ _6 ])) "lib/malloc.c":207:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
            (nil))))
(insn 75 74 76 11 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":208:17 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [3 obj+0 S4 A32])) "lib/malloc.c":208:17 75 {*movsi_internal}
     (nil))
(insn 77 76 78 11 (set (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 8 [0x8])) [3 bdesc_24->freeptr+0 S4 A32])
        (reg/f:SI 115)) "lib/malloc.c":208:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (expr_list:REG_DEAD (reg/f:SI 114)
            (nil))))
(insn 78 77 79 11 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":209:7 75 {*movsi_internal}
     (nil))
(insn 79 78 80 11 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 12 [0xc])) [4 bdesc_24->refcnt+0 S2 A32])) "lib/malloc.c":209:7 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 80 79 81 11 (parallel [
            (set (reg:HI 90 [ _9 ])
                (plus:HI (reg:HI 89 [ _7 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":209:15 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 81 80 82 11 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":209:15 75 {*movsi_internal}
     (nil))
(insn 82 81 83 11 (set (mem:HI (plus:SI (reg/f:SI 117)
                (const_int 12 [0xc])) [4 bdesc_24->refcnt+0 S2 A32])
        (reg:HI 90 [ _9 ])) "lib/malloc.c":209:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (expr_list:REG_DEAD (reg:HI 90 [ _9 ])
            (nil))))
(insn 83 82 84 11 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":210:11 75 {*movsi_internal}
     (nil))
(insn 84 83 85 11 (set (reg:HI 91 [ _10 ])
        (mem:HI (plus:SI (reg/f:SI 118)
                (const_int 12 [0xc])) [4 bdesc_24->refcnt+0 S2 A32])) "lib/malloc.c":210:11 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 91 [ _10 ])
            (const_int 0 [0]))) "lib/malloc.c":210:5 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 91 [ _10 ])
        (nil)))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "lib/malloc.c":210:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 174)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":215:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "lib/malloc.c":215:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])) "lib/malloc.c":215:21 75 {*movsi_internal}
     (nil))
(insn 92 91 93 13 (set (reg/f:SI 92 [ _11 ])
        (mem/f:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [1 prev_28->next+0 S4 A32])) "lib/malloc.c":215:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 93 92 94 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 92 [ _11 ]))) "lib/malloc.c":215:13 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _11 ])
        (nil)))
(jump_insn 94 93 95 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "lib/malloc.c":215:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 104)
(code_label 95 94 96 14 33 (nil) [1 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":215:39 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 98 97 99 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "lib/malloc.c":215:39 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 129)
(note 99 98 100 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 15 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":216:19 75 {*movsi_internal}
     (nil))
(insn 101 100 102 15 (set (reg/f:SI 93 [ _12 ])
        (mem/f:SI (plus:SI (reg/f:SI 120)
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":216:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 102 101 103 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 93 [ _12 ]))) "lib/malloc.c":216:11 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _12 ])
        (nil)))
(jump_insn 103 102 104 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "lib/malloc.c":216:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 129)
(code_label 104 103 105 16 34 (nil) [1 uses])
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 16 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":217:14 75 {*movsi_internal}
     (nil))
(insn 107 106 108 16 (set (reg/f:SI 122)
        (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":217:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 108 107 186 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
        (reg/f:SI 122)) "lib/malloc.c":217:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(jump_insn 186 108 187 16 (set (pc)
        (label_ref 124)) "lib/malloc.c":217:4 807 {jump}
     (nil)
 -> 124)
(barrier 187 186 126)
(code_label 126 187 111 17 38 (nil) [1 uses])
(note 111 126 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 17 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])) "lib/malloc.c":218:13 75 {*movsi_internal}
     (nil))
(insn 113 112 114 17 (set (reg/f:SI 94 [ _13 ])
        (mem/f:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [1 prev_29->next+0 S4 A32])) "lib/malloc.c":218:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 114 113 115 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 94 [ _13 ]))) "lib/malloc.c":218:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _13 ])
        (nil)))
(jump_insn 115 114 120 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 205)
            (pc))) "lib/malloc.c":218:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 205)
(note 120 115 121 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 18 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])) "lib/malloc.c":217:40 75 {*movsi_internal}
     (nil))
(insn 122 121 123 18 (set (reg/f:SI 125)
        (mem/f:SI (plus:SI (reg/f:SI 124)
                (const_int 4 [0x4])) [1 prev_29->next+0 S4 A32])) "lib/malloc.c":217:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 123 122 124 18 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
        (reg/f:SI 125)) "lib/malloc.c":217:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(code_label 124 123 125 19 36 (nil) [1 uses])
(note 125 124 127 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 127 125 128 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":217:29 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 128 127 201 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "lib/malloc.c":217:29 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 126)
(note 201 128 202 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 202 201 203 30 (set (pc)
        (label_ref 129)) 807 {jump}
     (nil)
 -> 129)
(barrier 203 202 205)
(code_label 205 203 204 31 45 (nil) [1 uses])
(note 204 205 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 206 204 129 31 (const_int 0 [0]) "lib/malloc.c":219:6 843 {nop}
     (nil))
(code_label 129 206 130 20 35 (nil) [3 uses])
(note 130 129 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])
            (const_int 0 [0]))) "lib/malloc.c":220:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 132 131 133 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) "lib/malloc.c":220:6 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 140)
(note 133 132 134 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 21 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":221:22 75 {*movsi_internal}
     (nil))
(insn 135 134 136 21 (set (reg/f:SI 95 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 126)
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])) "lib/malloc.c":221:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 136 135 137 21 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 prev+0 S4 A32])) "lib/malloc.c":221:15 75 {*movsi_internal}
     (nil))
(insn 137 136 188 21 (set (mem/f:SI (plus:SI (reg/f:SI 127)
                (const_int 4 [0x4])) [1 prev_30->next+0 S4 A32])
        (reg/f:SI 95 [ _14 ])) "lib/malloc.c":221:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (expr_list:REG_DEAD (reg/f:SI 95 [ _14 ])
            (nil))))
(jump_insn 188 137 189 21 (set (pc)
        (label_ref 159)) 807 {jump}
     (nil)
 -> 159)
(barrier 189 188 140)
(code_label 140 189 141 22 39 (nil) [1 uses])
(note 141 140 142 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 22 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":223:12 75 {*movsi_internal}
     (nil))
(insn 143 142 144 22 (set (reg/f:SI 96 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 128)
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])) "lib/malloc.c":223:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))
(insn 144 143 145 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])
            (reg/f:SI 96 [ _15 ]))) "lib/malloc.c":223:7 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _15 ])
        (nil)))
(jump_insn 145 144 146 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) "lib/malloc.c":223:7 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 153)
(note 146 145 147 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":224:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 148 147 149 23 (set (reg/f:SI 129)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x72d5cb72c240 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "lib/malloc.c":224:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x72d5cb72c240 *.LC5>)
        (nil)))
(insn 149 148 150 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 129)) "lib/malloc.c":224:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 150 149 151 23 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":224:5 75 {*movsi_internal}
     (nil))
(call_insn 151 150 152 23 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x72d5cb6d2900 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":224:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 152 151 153 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":224:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 153 152 154 24 41 (nil) [1 uses])
(note 154 153 155 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 24 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":225:23 75 {*movsi_internal}
     (nil))
(insn 156 155 157 24 (set (reg/f:SI 97 [ _16 ])
        (mem/f:SI (plus:SI (reg/f:SI 130)
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])) "lib/malloc.c":225:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 157 156 158 24 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 bdir+0 S4 A32])) "lib/malloc.c":225:16 75 {*movsi_internal}
     (nil))
(insn 158 157 159 24 (set (mem/f:SI (plus:SI (reg/f:SI 131)
                (const_int 4 [0x4])) [1 bdir_20->chain+0 S4 A32])
        (reg/f:SI 97 [ _16 ])) "lib/malloc.c":225:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (expr_list:REG_DEAD (reg/f:SI 97 [ _16 ])
            (nil))))
(code_label 159 158 160 25 40 (nil) [1 uses])
(note 160 159 161 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 25 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":227:34 75 {*movsi_internal}
     (nil))
(insn 162 161 163 25 (set (reg/f:SI 98 [ _17 ])
        (mem/f:SI (reg/f:SI 132) [3 bdesc_24->page+0 S4 A32])) "lib/malloc.c":227:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 163 162 164 25 (set (reg:SI 99 [ _18 ])
        (reg/f:SI 98 [ _17 ])) "lib/malloc.c":227:3 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98 [ _17 ])
        (nil)))
(insn 164 163 165 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":227:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 165 164 166 25 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 99 [ _18 ])) "lib/malloc.c":227:3 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 99 [ _18 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 166 165 167 25 (set (reg:SI 3 bx)
        (reg:SI 82)) "lib/malloc.c":227:3 75 {*movsi_internal}
     (nil))
(call_insn 167 166 168 25 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x72d5cb6d2a00 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "lib/malloc.c":227:3 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 168 167 169 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":227:3 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 169 168 170 25 (set (reg/f:SI 100 [ free_bucket_desc.3_19 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x72d5cd093f30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])) "lib/malloc.c":228:15 75 {*movsi_internal}
     (nil))
(insn 170 169 171 25 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":228:15 75 {*movsi_internal}
     (nil))
(insn 171 170 172 25 (set (mem/f:SI (plus:SI (reg/f:SI 133)
                (const_int 4 [0x4])) [1 bdesc_24->next+0 S4 A32])
        (reg/f:SI 100 [ free_bucket_desc.3_19 ])) "lib/malloc.c":228:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (expr_list:REG_DEAD (reg/f:SI 100 [ free_bucket_desc.3_19 ])
            (nil))))
(insn 172 171 173 25 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bdesc+0 S4 A32])) "lib/malloc.c":229:20 75 {*movsi_internal}
     (nil))
(insn 173 172 174 25 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_bucket_desc") [flags 0x2]  <var_decl 0x72d5cd093f30 free_bucket_desc>)
                        ] UNSPEC_GOTOFF))) [1 free_bucket_desc+0 S4 A32])
        (reg/f:SI 134)) "lib/malloc.c":229:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg:SI 82)
            (nil))))
(code_label 174 173 175 26 32 (nil) [1 uses])
(note 175 174 176 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 181 26 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] lib/malloc.c:231)
            (clobber (reg:CC 17 flags))
        ]) "lib/malloc.c":231:2 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 181 176 0 26 (const_int 0 [0]) "lib/malloc.c":232:2 843 {nop}
     (nil))
