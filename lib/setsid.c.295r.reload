
;; Function setsid (setsid, funcdef_no=0, decl_uid=1207, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =a  (1) 0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 19:  (0) =rm  (1) 0 {*negsi_1}
      Creating newreg=92 from oldreg=88, assigning class GENERAL_REGS to r92
   19: {r92:SI=-r92:SI;clobber flags:CC;}
      REG_DEAD r88:SI
      REG_UNUSED flags:CC
      REG_EQUAL -[frame:SI-0x4]
    Inserting insn reload before:
   37: r92:SI=r88:SI
    Inserting insn reload after:
   38: r83:SI=r92:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 30: point = 0, n_alt = -1
   Insn 29: point = 0, n_alt = -2
   Insn 25: point = 1, n_alt = -2
  BB 3
   Insn 32: point = 4, n_alt = -1
   Insn 13: point = 4, n_alt = 0
  BB 4
   Insn 22: point = 5, n_alt = 0
   Insn 21: point = 6, n_alt = 1
   Insn 20: point = 7, n_alt = 0
   Insn 38: point = 9, n_alt = -2
	Hard reg 2 is preferable by r92 with profit 1000
   Insn 19: point = 11, n_alt = 0
   Insn 37: point = 12, n_alt = -2
	Hard reg 2 is preferable by r92 with profit 1000
	Hard reg 0 is preferable by r92 with profit 1000
   Insn 18: point = 14, n_alt = 0
  BB 2
   Insn 11: point = 16, n_alt = -1
   Insn 10: point = 16, n_alt = 1
   Insn 5: point = 16, n_alt = 1
   Insn 7: point = 17, n_alt = 0
   Insn 34: point = 18, n_alt = -2
   Insn 6: point = 20, n_alt = 0
   Insn 35: point = 21, n_alt = 0
 r82: [8..21]
 r83: [6..9]
 r84: [2..5]
 r85: [0..1]
 r86: [16..18]
 r87: [19..20]
 r88: [13..14]
 r89: [6..7]
 r92: [10..12]
Compressing live ranges: from 22 to 16 - 72%
Ranges after the compression:
 r82: [6..15]
 r83: [4..7]
 r84: [2..3]
 r85: [0..1]
 r86: [12..13]
 r87: [14..15]
 r88: [10..11]
 r89: [4..5]
 r92: [8..9]

********** Assignment #1: **********

	 Assigning to 92 (cl=GENERAL_REGS, orig=88, freq=3000, tfirst=92, tfreq=3000)...
	   Assign 0 to reload r92 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 35
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 13
changing reg in insn 25
changing reg in insn 25
changing reg in insn 29
changing reg in insn 34
changing reg in insn 7
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 34
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
deleting insn with uid = 34.
deleting insn with uid = 37.
deleting insn with uid = 25.
deleting insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns


setsid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={8d,7u} r1={2d,1u} r2={2d,1u} r7={1d,9u} r17={4d,1u} r19={1e} 
;;    total ref usage 37{17d,19u,1e} in 15{15 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 35 3 2 2 (parallel [
            (set (reg:SI 1 dx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 35 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 0 ax [87])
        (const_int 66 [0x42])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 0 ax [orig:86 __res ] [86])
                (asm_operands/v:SI ("int $0x80") ("=a") 0 [
                        (reg:SI 0 ax [orig:86 __res ] [86])
                    ]
                     [
                        (asm_input:SI ("0") lib/setsid.c:10)
                    ]
                     [] lib/setsid.c:10))
            (clobber (reg:CC 17 flags))
        ]) "lib/setsid.c":10:1 -1
     (nil))
(insn 5 7 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __res+0 S4 A32])
        (reg:SI 0 ax [orig:86 __res ] [86])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(insn 10 5 11 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 __res+0 S4 A32])
            (const_int 0 [0]))) "lib/setsid.c":10:1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "lib/setsid.c":10:1 806 {*jcc}
     (nil)
 -> 16)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 32 3 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __res+0 S4 A32])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(jump_insn 32 13 33 3 (set (pc)
        (label_ref 23)) "lib/setsid.c":10:1 807 {jump}
     (nil)
 -> 23)
(barrier 33 32 16)
(code_label 16 33 17 4 2 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 0 ax [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __res+0 S4 A32])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(insn 19 18 38 4 (parallel [
            (set (reg:SI 0 ax [88])
                (neg:SI (reg:SI 0 ax [88])))
            (clobber (reg:CC 17 flags))
        ]) "lib/setsid.c":10:1 575 {*negsi_1}
     (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32]))
        (nil)))
(insn 38 19 20 4 (set (reg:SI 2 cx [orig:83 _1 ] [83])
        (reg:SI 0 ax [88])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(insn 20 38 21 4 (set (reg/f:SI 0 ax [89])
        (mem/u/c:SI (plus:SI (reg:SI 1 dx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("errno") [flags 0x40]  <var_decl 0x706d635e4b40 errno>)
                        ] UNSPEC_GOT))) [3  S4 A8])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (mem/c:SI (reg/f:SI 0 ax [89]) [2 errno+0 S4 A32])
        (reg:SI 2 cx [orig:83 _1 ] [83])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (const_int -1 [0xffffffffffffffff])) "lib/setsid.c":10:1 75 {*movsi_internal}
     (nil))
(code_label 23 22 24 5 3 (nil) [1 uses])
(note 24 23 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 24 36 5 (use (reg/i:SI 0 ax)) "lib/setsid.c":10:1 -1
     (nil))
(note 36 30 0 NOTE_INSN_DELETED)
