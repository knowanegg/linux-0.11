
;; Function dup (dup, funcdef_no=0, decl_uid=1068, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best BREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r86,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:19000
  a7(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 31(l0): point = 0
   Insn 30(l0): point = 2
   Insn 26(l0): point = 4
   Insn 23(l0): point = 7
   Insn 22(l0): point = 9
   Insn 21(l0): point = 11
   Insn 20(l0): point = 13
   Insn 19(l0): point = 15
   Insn 33(l0): point = 18
   Insn 14(l0): point = 20
   Insn 12(l0): point = 23
   Insn 11(l0): point = 25
   Insn 5(l0): point = 27
   Insn 8(l0): point = 29
   Insn 35(l0): point = 31
   Insn 7(l0): point = 33
   Insn 6(l0): point = 35
   Insn 36(l0): point = 37
 a0(r85): [3..4]
 a1(r84): [18..20] [5..7]
 a2(r90): [10..11]
 a3(r83): [10..13]
 a4(r82): [23..37] [12..17]
 a5(r89): [14..15]
 a6(r86): [28..31]
 a7(r88): [30..33]
 a8(r87): [32..35]
Compressing live ranges: from 40 to 16 - 40%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [10..11] [2..3]
 a2(r90): [4..5]
 a3(r83): [4..7]
 a4(r82): [12..15] [6..9]
 a5(r89): [8..9]
 a6(r86): [12..13]
 a7(r88): [12..15]
 a8(r87): [14..15]
  pref0:a7(r88)<-hr3@1000
  pref1:a6(r86)<-hr0@2000
  pref2:a0(r85)<-hr0@1500
  regions=1, blocks=6, points=16
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    4:r82  l0     1    3:r83  l0     2    1:r84  l0     0    0:r85  l0     0
    6:r86  l0     0    8:r87  l0     0    7:r88  l0     2    5:r89  l0     0
    2:r90  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dup

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,5u} r7={1d,5u} r16={1d,5u} r17={4d,1u} r19={1d,9u,1e} r82={1d,1u} r83={1d,1u} r84={2d,1u} r85={1d,1u} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 61{23d,37u,1e} in 18{18 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 36 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 36 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 87)
        (const_int 41 [0x29])) "lib/dup.c":10:1 75 {*movsi_internal}
     (nil))
(insn 7 6 35 2 (set (reg:SI 88)
        (mem/c:SI (reg/f:SI 16 argp) [2 fd+0 S4 A32])) "lib/dup.c":10:1 75 {*movsi_internal}
     (nil))
(insn 35 7 8 2 (set (reg:SI 86 [ __res ])
        (reg:SI 87)) "lib/dup.c":10:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(insn 8 35 5 2 (parallel [
            (set (reg:SI 86 [ __res ])
                (asm_operands/v:SI ("int $0x80") ("=a") 0 [
                        (reg:SI 86 [ __res ])
                        (reg:SI 88)
                    ]
                     [
                        (asm_input:SI ("0") lib/dup.c:10)
                        (asm_input:SI ("b") lib/dup.c:10)
                    ]
                     [] lib/dup.c:10))
            (clobber (reg:CC 17 flags))
        ]) "lib/dup.c":10:1 -1
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 8 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])
        (reg:SI 86 [ __res ])) "lib/dup.c":10:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ __res ])
        (nil)))
(insn 11 5 12 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])
            (const_int 0 [0]))) "lib/dup.c":10:1 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "lib/dup.c":10:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 17)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 33 3 (set (reg:SI 84 [ _2 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])) "lib/dup.c":10:1 75 {*movsi_internal}
     (nil))
(jump_insn 33 14 34 3 (set (pc)
        (label_ref 24)) "lib/dup.c":10:1 807 {jump}
     (nil)
 -> 24)
(barrier 34 33 17)
(code_label 17 34 18 4 2 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 89)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32])) "lib/dup.c":10:1 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:SI 83 [ _1 ])
                (neg:SI (reg:SI 89)))
            (clobber (reg:CC 17 flags))
        ]) "lib/dup.c":10:1 575 {*negsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (neg:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 __res+0 S4 A32]))
                (nil)))))
(insn 21 20 22 4 (set (reg/f:SI 90)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("errno") [flags 0x40]  <var_decl 0x730a52085b40 errno>)
                        ] UNSPEC_GOT))) [3  S4 A8])) "lib/dup.c":10:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 22 21 23 4 (set (mem/c:SI (reg/f:SI 90) [2 errno+0 S4 A32])
        (reg:SI 83 [ _1 ])) "lib/dup.c":10:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
            (nil))))
(insn 23 22 24 4 (set (reg:SI 84 [ _2 ])
        (const_int -1 [0xffffffffffffffff])) "lib/dup.c":10:1 75 {*movsi_internal}
     (nil))
(code_label 24 23 25 5 3 (nil) [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 30 5 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _2 ])) "lib/dup.c":10:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 30 26 31 5 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "lib/dup.c":10:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 31 30 0 5 (use (reg/i:SI 0 ax)) "lib/dup.c":10:1 -1
     (nil))
