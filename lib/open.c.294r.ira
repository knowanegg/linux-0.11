
;; Function open (open, funcdef_no=0, decl_uid=1130, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best BREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r83,l0) best CREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a6(r93,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a7(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a8(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a9(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a11(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 33(l0): point = 4
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 27(l0): point = 13
   Insn 40(l0): point = 16
   Insn 22(l0): point = 18
   Insn 20(l0): point = 21
   Insn 19(l0): point = 23
   Insn 13(l0): point = 25
   Insn 16(l0): point = 27
   Insn 42(l0): point = 29
   Insn 15(l0): point = 31
   Insn 14(l0): point = 33
   Insn 12(l0): point = 35
   Insn 11(l0): point = 37
   Insn 10(l0): point = 39
   Insn 9(l0): point = 41
   Insn 8(l0): point = 43
   Insn 7(l0): point = 45
   Insn 6(l0): point = 47
   Insn 5(l0): point = 49
   Insn 43(l0): point = 51
 a0(r89): [3..4]
 a1(r87): [16..18] [5..7]
 a2(r96): [10..11]
 a3(r86): [10..13]
 a4(r82): [21..51] [12..15]
 a5(r88): [19..25] [14..15]
 a6(r93): [26..29]
 a7(r95): [28..31]
 a8(r83): [28..43]
 a9(r85): [28..35]
 a10(r94): [30..33]
 a11(r84): [36..37]
 a12(r92): [38..39]
 a13(r91): [46..47]
 a14(r90): [48..49]
Compressing live ranges: from 54 to 26 - 48%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [10..11] [2..3]
 a2(r96): [4..5]
 a3(r86): [4..7]
 a4(r82): [12..25] [6..9]
 a5(r88): [12..13] [8..9]
 a6(r93): [14..15]
 a7(r95): [14..17]
 a8(r83): [14..21]
 a9(r85): [14..17]
 a10(r94): [16..17]
 a11(r84): [18..19]
 a12(r92): [20..21]
 a13(r91): [22..23]
 a14(r90): [24..25]
  pref0:a7(r95)<-hr3@1000
  pref1:a6(r93)<-hr0@2000
  pref2:a0(r89)<-hr0@1500
  pref3:a9(r85)<-hr1@1000
  pref4:a8(r83)<-hr2@1000
  regions=1, blocks=6, points=26
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
    4:r82  l0     4    8:r83  l0     2   11:r84  l0     0    9:r85  l0     1
    3:r86  l0     1    1:r87  l0     0    5:r88  l0     3    0:r89  l0     0
   14:r90  l0     0   13:r91  l0     0   12:r92  l0     0    6:r93  l0     0
   10:r94  l0     0    7:r95  l0     3    2:r96  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


open

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,5u} r7={1d,5u} r16={1d,7u} r17={8d,1u} r19={1d,9u,1e} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={2d,1u} r88={1d,3u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={2d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 81{33d,47u,1e} in 25{25 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 43 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 43 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 43 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg:SI 90)
                (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/open.c":16:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 91)
                (plus:SI (reg:SI 90)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/open.c":16:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
        (reg:SI 91)) "lib/open.c":16:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 83 [ flag.0_1 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 flag+0 S4 A32])) "lib/open.c":17:5 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "lib/open.c":20:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])) "lib/open.c":20:20 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 92)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "lib/open.c":20:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 arg+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 12 11 14 2 (set (reg:SI 85 [ _3 ])
        (mem:SI (reg/f:SI 84 [ _2 ]) [2 MEM[(int *)_2]+0 S4 A32])) "lib/open.c":20:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 14 12 15 2 (set (reg:SI 94)
        (const_int 5 [0x5])) "lib/open.c":17:5 75 {*movsi_internal}
     (nil))
(insn 15 14 42 2 (set (reg/f:SI 95)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 filename+0 S4 A32])) "lib/open.c":17:5 75 {*movsi_internal}
     (nil))
(insn 42 15 16 2 (set (reg:SI 93 [ res ])
        (reg:SI 94)) "lib/open.c":17:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 16 42 13 2 (parallel [
            (set (reg:SI 93 [ res ])
                (asm_operands:SI ("int $0x80") ("=a") 0 [
                        (reg:SI 93 [ res ])
                        (reg/f:SI 95)
                        (reg:SI 83 [ flag.0_1 ])
                        (reg:SI 85 [ _3 ])
                    ]
                     [
                        (asm_input:SI ("0") lib/open.c:17)
                        (asm_input:SI ("b") lib/open.c:17)
                        (asm_input:SI ("c") lib/open.c:17)
                        (asm_input:SI ("d") lib/open.c:17)
                    ]
                     [] lib/open.c:17))
            (clobber (reg:CC 17 flags))
        ]) "lib/open.c":17:5 -1
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
            (expr_list:REG_DEAD (reg:SI 83 [ flag.0_1 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 13 16 19 2 (set (reg/v:SI 88 [ res ])
        (reg:SI 93 [ res ])) "lib/open.c":17:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ res ])
        (nil)))
(insn 19 13 20 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 88 [ res ])
            (const_int 0 [0]))) "lib/open.c":21:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "lib/open.c":21:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 25)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 40 3 (set (reg:SI 87 [ _5 ])
        (reg/v:SI 88 [ res ])) "lib/open.c":22:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 88 [ res ])
        (nil)))
(jump_insn 40 22 41 3 (set (pc)
        (label_ref 31)) "lib/open.c":22:16 807 {jump}
     (nil)
 -> 31)
(barrier 41 40 25)
(code_label 25 41 26 4 2 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (parallel [
            (set (reg:SI 86 [ _4 ])
                (neg:SI (reg/v:SI 88 [ res ])))
            (clobber (reg:CC 17 flags))
        ]) "lib/open.c":23:13 575 {*negsi_1}
     (expr_list:REG_DEAD (reg/v:SI 88 [ res ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg/f:SI 96)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("errno") [flags 0x40]  <var_decl 0x75617109bb40 errno>)
                        ] UNSPEC_GOT))) [3  S4 A8])) "lib/open.c":23:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 29 28 30 4 (set (mem/c:SI (reg/f:SI 96) [2 errno+0 S4 A32])
        (reg:SI 86 [ _4 ])) "lib/open.c":23:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
            (nil))))
(insn 30 29 31 4 (set (reg:SI 87 [ _5 ])
        (const_int -1 [0xffffffffffffffff])) "lib/open.c":24:12 75 {*movsi_internal}
     (nil))
(code_label 31 30 32 5 3 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 37 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 87 [ _5 ])) "lib/open.c":25:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(insn 37 33 38 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) "lib/open.c":25:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 38 37 0 5 (use (reg/i:SI 0 ax)) "lib/open.c":25:1 -1
     (nil))
