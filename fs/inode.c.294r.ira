
;; Function wait_on_inode (wait_on_inode, funcdef_no=1, decl_uid=1397, cgraph_uid=2, symbol_order=2)

scanning new insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 8 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 30(l0): point = 0
   Insn 24(l0): point = 3
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 22(l0): point = 21
   Insn 21(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 27(l0): point = 30
   Insn 5(l0): point = 32
   Insn 31(l0): point = 34
 a0(r84): [24..25]
 a1(r86): [26..27]
 a2(r82): [6..34]
 a3(r83): [13..16]
 a4(r85): [17..18]
Compressing live ranges: from 37 to 8 - 21%
Ranges after the compression:
 a0(r84): [4..5]
 a1(r86): [6..7]
 a2(r82): [0..7]
 a3(r83): [0..1]
 a4(r85): [2..3]
  regions=1, blocks=7, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r82  l0     3    3:r83  l0     0    0:r84  l0     0    4:r85  l0     0
    1:r86  l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


wait_on_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,6u} r7={4d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u,1e} r17={8d,1u} r18={1d} r19={1d,6u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 131{92d,38u,1e} in 16{15 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 27 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/inode.c:21)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":21:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 27 5 28 2 (set (pc)
        (label_ref 16)) "fs/inode.c":22:11 807 {jump}
     (nil)
 -> 16)
(barrier 28 27 20)
(code_label 20 28 8 3 3 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":23:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":23:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":23:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/inode.c":23:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 13 12 14 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":23:9 75 {*movsi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7341ee515b00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":23:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":23:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 16 15 17 4 2 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":22:17 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 86)
                (const_int 50 [0x32])) [0 inode_5(D)->i_lock+0 S1 A16])) "fs/inode.c":22:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/inode.c":22:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/inode.c":22:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 29 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/inode.c:24)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":24:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 29 24 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 0 6 (const_int 0 [0]) "fs/inode.c":25:1 843 {nop}
     (nil))

;; Function lock_inode (lock_inode, funcdef_no=2, decl_uid=1403, cgraph_uid=3, symbol_order=3)

scanning new insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 8 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a1 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 32(l0): point = 0
   Insn 26(l0): point = 3
   Insn 25(l0): point = 5
   Insn 24(l0): point = 7
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 22(l0): point = 25
   Insn 21(l0): point = 27
   Insn 19(l0): point = 29
   Insn 18(l0): point = 31
   Insn 29(l0): point = 34
   Insn 5(l0): point = 36
   Insn 33(l0): point = 38
 a0(r87): [6..7]
 a1(r84): [28..29]
 a2(r86): [30..31]
 a3(r82): [10..38]
 a4(r83): [17..20]
 a5(r85): [21..22]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r84): [6..7]
 a2(r86): [8..9]
 a3(r82): [2..9]
 a4(r83): [2..3]
 a5(r85): [4..5]
  regions=1, blocks=7, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r82  l0     3    4:r83  l0     0    1:r84  l0     0    5:r85  l0     0
    2:r86  l0     0    0:r87  l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


lock_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,6u} r7={4d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,8u,1e} r17={8d,1u} r18={1d} r19={1d,6u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 134{93d,40u,1e} in 18{17 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 33 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 33 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 29 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/inode.c:29)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":29:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 29 5 30 2 (set (pc)
        (label_ref 16)) "fs/inode.c":30:11 807 {jump}
     (nil)
 -> 16)
(barrier 30 29 20)
(code_label 20 30 8 3 6 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":31:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":31:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":31:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/inode.c":31:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 13 12 14 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":31:9 75 {*movsi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7341ee515b00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":31:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":31:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 16 15 17 4 5 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":30:17 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 86)
                (const_int 50 [0x32])) [0 inode_5(D)->i_lock+0 S1 A16])) "fs/inode.c":30:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/inode.c":30:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/inode.c":30:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":32:19 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (mem:QI (plus:SI (reg/f:SI 87)
                (const_int 50 [0x32])) [0 inode_5(D)->i_lock+0 S1 A16])
        (const_int 1 [0x1])) "fs/inode.c":32:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 26 25 31 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/inode.c:33)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":33:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 31 26 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 0 6 (const_int 0 [0]) "fs/inode.c":34:1 843 {nop}
     (nil))

;; Function unlock_inode (unlock_inode, funcdef_no=3, decl_uid=1409, cgraph_uid=4, symbol_order=4)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 17(l0): point = 0
   Insn 13(l0): point = 3
   Insn 12(l0): point = 5
   Insn 11(l0): point = 7
   Insn 10(l0): point = 9
   Insn 9(l0): point = 11
   Insn 8(l0): point = 13
   Insn 7(l0): point = 15
   Insn 6(l0): point = 17
   Insn 5(l0): point = 19
   Insn 18(l0): point = 21
 a0(r82): [8..21]
 a1(r83): [10..13]
 a2(r85): [14..15]
 a3(r84): [18..19]
Compressing live ranges: from 24 to 6 - 25%
Ranges after the compression:
 a0(r82): [0..5]
 a1(r83): [0..1]
 a2(r85): [2..3]
 a3(r84): [4..5]
  pref0:a0(r82)<-hr3@1500
  regions=1, blocks=4, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    0:r82  l0     0    1:r83  l0     1    3:r84  l0     1    2:r85  l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


unlock_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,3u} r7={4d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u,1e} r17={5d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 113{88d,24u,1e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 18 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 84)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":38:19 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem:QI (plus:SI (reg/f:SI 84)
                (const_int 50 [0x32])) [0 inode_3(D)->i_lock+0 S1 A16])
        (const_int 0 [0])) "fs/inode.c":38:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84)
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":39:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":39:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":39:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 10 9 11 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/inode.c":39:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 11 10 12 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":39:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7341ee515f00 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":39:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 13 12 16 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":39:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 16 13 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 0 3 (const_int 0 [0]) "fs/inode.c":40:1 843 {nop}
     (nil))

;; Function invalidate_inodes (invalidate_inodes, funcdef_no=4, decl_uid=1137, cgraph_uid=5, symbol_order=5)

scanning new insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 14 count 17 (  1.4)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 10 9 11
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 3 6 4 5
;; 2 succs { 8 }
;; 3 succs { 4 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 3 10 }
;; 10 succs { 9 }
;; 9 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:24000
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 57(l0): point = 0
   Insn 55(l0): point = 4
   Insn 19(l0): point = 7
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 16(l0): point = 13
   Insn 15(l0): point = 15
   Insn 14(l0): point = 17
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 11(l0): point = 23
   Insn 48(l0): point = 26
   Insn 47(l0): point = 28
   Insn 41(l0): point = 31
   Insn 40(l0): point = 33
   Insn 37(l0): point = 36
   Insn 36(l0): point = 38
   Insn 35(l0): point = 40
   Insn 34(l0): point = 42
   Insn 24(l0): point = 45
   Insn 23(l0): point = 47
   Insn 22(l0): point = 49
   Insn 21(l0): point = 51
   Insn 31(l0): point = 54
   Insn 30(l0): point = 56
   Insn 29(l0): point = 58
   Insn 28(l0): point = 60
   Insn 27(l0): point = 62
   Insn 26(l0): point = 64
   Insn 52(l0): point = 67
   Insn 7(l0): point = 69
   Insn 6(l0): point = 71
   Insn 5(l0): point = 73
   Insn 58(l0): point = 75
 a0(r82): [7..75]
 a1(r91): [37..38]
 a2(r90): [41..42]
 a3(r89): [61..62]
 a4(r85): [48..49]
 a5(r88): [50..51]
 a6(r84): [10..11]
 a7(r83): [12..13]
 a8(r87): [14..15]
 a9(r86): [72..73]
Compressing live ranges: from 78 to 18 - 23%
Ranges after the compression:
 a0(r82): [0..17]
 a1(r91): [6..7]
 a2(r90): [8..9]
 a3(r89): [14..15]
 a4(r85): [10..11]
 a5(r88): [12..13]
 a6(r84): [0..1]
 a7(r83): [2..3]
 a8(r87): [4..5]
 a9(r86): [16..17]
  regions=1, blocks=12, points=18
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    0:r82  l0     3    7:r83  l0     0    6:r84  l0     0    4:r85  l0     0
    9:r86  l0     0    8:r87  l0     0    5:r88  l0     0    3:r89  l0     0
    2:r90  l0     0    1:r91  l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


invalidate_inodes

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={1d,1u} r6={1d,11u} r7={7d,23u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,11u} r17={12d,3u} r18={2d} r19={1d,23u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 256{172d,84u,0e} in 34{32 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 58 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 86)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":47:11 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])
        (reg/f:SI 86)) "fs/inode.c":47:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 7 6 52 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":48:12 75 {*movsi_internal}
     (nil))
(jump_insn 52 7 53 2 (set (pc)
        (label_ref 42)) "fs/inode.c":48:5 807 {jump}
     (nil)
 -> 42)
(barrier 53 52 44)
(code_label 44 53 10 3 12 (nil) [1 uses])
(note 10 44 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":49:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":49:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":49:9 812 {*call}
     (nil)
    (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":49:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 15 14 16 3 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":50:18 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 87)
                (const_int 44 [0x2c])) [2 inode_5->i_dev+0 S2 A32])) "fs/inode.c":50:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 17 16 18 3 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/inode.c":50:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (reg:SI 84 [ _2 ]))) "fs/inode.c":50:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fs/inode.c":50:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":51:22 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 88)
                (const_int 48 [0x30])) [2 inode_5->i_count+0 S2 A32])) "fs/inode.c":51:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (nil)))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 85 [ _3 ])
            (const_int 0 [0]))) "fs/inode.c":51:16 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "fs/inode.c":51:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":52:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 27 26 28 5 (set (reg/f:SI 89)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7341ee5b71b0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":52:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7341ee5b71b0 *.LC0>)
        (nil)))
(insn 28 27 29 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 89)) "fs/inode.c":52:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 29 28 30 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":52:17 75 {*movsi_internal}
     (nil))
(call_insn 30 29 31 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7341ee538f00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":52:17 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":52:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 32 31 33 6 11 (nil) [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":53:42 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (mem:QI (plus:SI (reg/f:SI 90)
                (const_int 51 [0x33])) [0 inode_5->i_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/inode.c":53:42 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 36 35 37 6 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":53:26 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (mem:HI (plus:SI (reg/f:SI 91)
                (const_int 44 [0x2c])) [2 inode_5->i_dev+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":53:26 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(code_label 38 37 39 7 10 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":48:32 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":48:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 42 41 43 8 9 (nil) [1 uses])
(note 43 42 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 43 48 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/inode.c":48:19 11 {*cmpsi_1}
     (nil))
(jump_insn 48 47 54 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/inode.c":48:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 44)
(note 54 48 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 49 10 (const_int 0 [0]) "fs/inode.c":56:1 843 {nop}
     (nil))
(note 49 55 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 56 49 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 0 11 (const_int 0 [0]) "fs/inode.c":56:1 843 {nop}
     (nil))

;; Function iput (iput, funcdef_no=5, decl_uid=1108, cgraph_uid=6, symbol_order=6)

scanning new insn with uid = 195.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 24 n_edges 32 count 27 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 23 12 13 14 15 16 17 18 19 21 22 20
;;
;; Loop 1
;;  header 13, latch 18
;;  depth 1, outer 0
;;  nodes: 13 18 17 15
;; 2 succs { 21 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 8 }
;; 6 succs { 22 7 }
;; 7 succs { 20 }
;; 8 succs { 9 10 }
;; 9 succs { 20 }
;; 10 succs { 11 23 }
;; 11 succs { 12 }
;; 23 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 20 }
;; 15 succs { 16 17 }
;; 16 succs { 20 }
;; 17 succs { 18 19 }
;; 18 succs { 13 }
;; 19 succs { 20 }
;; 21 succs { 20 }
;; 22 succs { 20 }
;; 20 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r102,l0) best Q_REGS, allocno Q_REGS
    r101: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r101,l0) best Q_REGS, allocno Q_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a41 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r82,l0) costs: AREG:12000 DREG:12000 CREG:12000 BREG:12000 SIREG:12000 DIREG:12000 AD_REGS:12000 CLOBBERED_REGS:12000 Q_REGS:12000 NON_Q_REGS:12000 TLS_GOTBASE_REGS:12000 GENERAL_REGS:12000 MEM:48000
  a5(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a6(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a8(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a19(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a42(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 189(l0): point = 1
   Insn 185(l0): point = 4
   Insn 184(l0): point = 6
   Insn 180(l0): point = 9
   Insn 165(l0): point = 11
   Insn 164(l0): point = 13
   Insn 163(l0): point = 15
   Insn 162(l0): point = 17
   Insn 161(l0): point = 19
   Insn 176(l0): point = 22
   Insn 138(l0): point = 24
   Insn 137(l0): point = 26
   Insn 136(l0): point = 28
   Insn 135(l0): point = 30
   Insn 134(l0): point = 32
   Insn 133(l0): point = 34
   Insn 132(l0): point = 36
   Insn 131(l0): point = 38
   Insn 130(l0): point = 40
   Insn 129(l0): point = 42
   Insn 174(l0): point = 45
   Insn 119(l0): point = 47
   Insn 118(l0): point = 49
   Insn 117(l0): point = 51
   Insn 116(l0): point = 53
   Insn 115(l0): point = 55
   Insn 113(l0): point = 58
   Insn 112(l0): point = 60
   Insn 109(l0): point = 62
   Insn 108(l0): point = 64
   Insn 178(l0): point = 67
   Insn 155(l0): point = 69
   Insn 154(l0): point = 71
   Insn 153(l0): point = 73
   Insn 152(l0): point = 75
   Insn 151(l0): point = 77
   Insn 150(l0): point = 79
   Insn 149(l0): point = 81
   Insn 148(l0): point = 83
   Insn 146(l0): point = 86
   Insn 145(l0): point = 88
   Insn 144(l0): point = 90
   Insn 143(l0): point = 92
   Insn 127(l0): point = 95
   Insn 126(l0): point = 97
   Insn 125(l0): point = 99
   Insn 124(l0): point = 101
   Insn 194(l0): point = 105
   Insn 190(l0): point = 108
   Insn 104(l0): point = 110
   Insn 103(l0): point = 112
   Insn 102(l0): point = 114
   Insn 101(l0): point = 116
   Insn 100(l0): point = 118
   Insn 99(l0): point = 120
   Insn 98(l0): point = 122
   Insn 97(l0): point = 124
   Insn 96(l0): point = 126
   Insn 95(l0): point = 128
   Insn 94(l0): point = 130
   Insn 93(l0): point = 132
   Insn 91(l0): point = 135
   Insn 90(l0): point = 137
   Insn 89(l0): point = 139
   Insn 88(l0): point = 141
   Insn 87(l0): point = 143
   Insn 86(l0): point = 145
   Insn 172(l0): point = 148
   Insn 81(l0): point = 150
   Insn 80(l0): point = 152
   Insn 79(l0): point = 154
   Insn 78(l0): point = 156
   Insn 77(l0): point = 158
   Insn 75(l0): point = 161
   Insn 74(l0): point = 163
   Insn 73(l0): point = 165
   Insn 72(l0): point = 167
   Insn 170(l0): point = 170
   Insn 67(l0): point = 172
   Insn 66(l0): point = 174
   Insn 65(l0): point = 176
   Insn 64(l0): point = 178
   Insn 63(l0): point = 180
   Insn 62(l0): point = 182
   Insn 61(l0): point = 184
   Insn 60(l0): point = 186
   Insn 59(l0): point = 188
   Insn 58(l0): point = 190
   Insn 57(l0): point = 192
   Insn 56(l0): point = 194
   Insn 55(l0): point = 196
   Insn 49(l0): point = 199
   Insn 48(l0): point = 201
   Insn 47(l0): point = 203
   Insn 46(l0): point = 205
   Insn 45(l0): point = 207
   Insn 44(l0): point = 209
   Insn 43(l0): point = 211
   Insn 42(l0): point = 213
   Insn 41(l0): point = 215
   Insn 40(l0): point = 217
   Insn 39(l0): point = 219
   Insn 38(l0): point = 221
   Insn 37(l0): point = 223
   Insn 36(l0): point = 225
   Insn 35(l0): point = 227
   Insn 34(l0): point = 229
   Insn 32(l0): point = 232
   Insn 31(l0): point = 234
   Insn 30(l0): point = 236
   Insn 29(l0): point = 238
   Insn 26(l0): point = 241
   Insn 25(l0): point = 243
   Insn 24(l0): point = 245
   Insn 23(l0): point = 247
   Insn 22(l0): point = 249
   Insn 21(l0): point = 251
   Insn 19(l0): point = 254
   Insn 18(l0): point = 256
   Insn 17(l0): point = 258
   Insn 16(l0): point = 260
   Insn 15(l0): point = 262
   Insn 14(l0): point = 264
   Insn 13(l0): point = 266
   Insn 12(l0): point = 268
   Insn 6(l0): point = 271
   Insn 5(l0): point = 273
   Insn 195(l0): point = 275
 a0(r127): [12..13]
 a1(r104): [12..15]
 a2(r103): [16..17]
 a3(r126): [18..19]
 a4(r82): [189..275] [161..169] [58..147] [29..44]
 a5(r102): [89..90]
 a6(r125): [91..92]
 a7(r101): [98..99]
 a8(r124): [100..101]
 a9(r123): [48..49]
 a10(r100): [48..51]
 a11(r99): [52..53]
 a12(r122): [54..55]
 a13(r98): [61..62]
 a14(r121): [63..64]
 a15(r97): [125..128]
 a16(r96): [129..130]
 a17(r120): [131..132]
 a18(r95): [138..139]
 a19(r94): [140..141]
 a20(r93): [142..143]
 a21(r119): [144..145]
 a22(r118): [151..152]
 a23(r92): [151..154]
 a24(r91): [155..156]
 a25(r117): [157..158]
 a26(r90): [164..165]
 a27(r116): [166..167]
 a28(r115): [173..174]
 a29(r114): [177..178]
 a30(r113): [181..182]
 a31(r89): [191..194]
 a32(r112): [195..196]
 a33(r88): [202..203]
 a34(r111): [204..205]
 a35(r110): [208..209]
 a36(r87): [208..211]
 a37(r86): [212..213]
 a38(r109): [214..215]
 a39(r85): [224..227]
 a40(r108): [228..229]
 a41(r84): [235..236]
 a42(r107): [237..238]
 a43(r106): [248..249]
 a44(r83): [257..258]
 a45(r105): [259..260]
Compressing live ranges: from 278 to 84 - 30%
Ranges after the compression:
 a0(r127): [0..1]
 a1(r104): [0..1]
 a2(r103): [2..3]
 a3(r126): [4..5]
 a4(r82): [56..83] [46..49] [14..39] [6..7]
 a5(r102): [18..19]
 a6(r125): [20..21]
 a7(r101): [22..23]
 a8(r124): [24..25]
 a9(r123): [8..9]
 a10(r100): [8..9]
 a11(r99): [10..11]
 a12(r122): [12..13]
 a13(r98): [14..15]
 a14(r121): [16..17]
 a15(r97): [26..27]
 a16(r96): [28..29]
 a17(r120): [30..31]
 a18(r95): [32..33]
 a19(r94): [34..35]
 a20(r93): [36..37]
 a21(r119): [38..39]
 a22(r118): [40..41]
 a23(r92): [40..41]
 a24(r91): [42..43]
 a25(r117): [44..45]
 a26(r90): [46..47]
 a27(r116): [48..49]
 a28(r115): [50..51]
 a29(r114): [52..53]
 a30(r113): [54..55]
 a31(r89): [56..57]
 a32(r112): [58..59]
 a33(r88): [60..61]
 a34(r111): [62..63]
 a35(r110): [64..65]
 a36(r87): [64..65]
 a37(r86): [66..67]
 a38(r109): [68..69]
 a39(r85): [70..71]
 a40(r108): [72..73]
 a41(r84): [74..75]
 a42(r107): [76..77]
 a43(r106): [78..79]
 a44(r83): [80..81]
 a45(r105): [82..83]
  pref0:a4(r82)<-hr3@3000
  regions=1, blocks=24, points=84
    allocnos=46 (big 0), copies=0, conflicts=0, ranges=49
Disposition:
    4:r82  l0     3   44:r83  l0     0   41:r84  l0     0   39:r85  l0     0
   37:r86  l0     0   36:r87  l0     1   33:r88  l0     0   31:r89  l0     0
   26:r90  l0     0   24:r91  l0     0   23:r92  l0     1   20:r93  l0     0
   19:r94  l0     0   18:r95  l0     0   16:r96  l0     0   15:r97  l0     0
   13:r98  l0     0   11:r99  l0     0   10:r100 l0     1    7:r101 l0     0
    5:r102 l0     0    2:r103 l0     0    1:r104 l0     1   45:r105 l0     0
   43:r106 l0     0   42:r107 l0     0   40:r108 l0     0   38:r109 l0     0
   35:r110 l0     0   34:r111 l0     0   32:r112 l0     0   30:r113 l0     0
   29:r114 l0     0   28:r115 l0     0   27:r116 l0     0   25:r117 l0     0
   22:r118 l0     0   21:r119 l0     0   17:r120 l0     0   14:r121 l0     0
   12:r122 l0     0    9:r123 l0     0    8:r124 l0     0    6:r125 l0     0
    3:r126 l0     0    0:r127 l0     0
+++Costs: overall 6000, reg 6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


iput

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d} r1={11d} r2={11d} r3={6d,6u} r6={1d,23u} r7={31d,83u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,51u,1e} r17={46d,9u} r18={10d} r19={1d,23u} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} 
;;    total ref usage 1063{815d,247u,1e} in 128{118 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 195 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 195 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 195 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":60:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 183)
            (pc))) "fs/inode.c":60:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 183)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":62:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 13 12 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":62:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":62:5 812 {*call}
     (nil)
    (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":62:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 16 15 17 3 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":63:15 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 105)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":63:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 83 [ _1 ])
            (const_int 0 [0]))) "fs/inode.c":63:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/inode.c":63:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":64:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 22 21 23 4 (set (reg/f:SI 106)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7341ee5b7360 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":64:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7341ee5b7360 *.LC1>)
        (nil)))
(insn 23 22 24 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 106)) "fs/inode.c":64:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 24 23 25 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":64:9 75 {*movsi_internal}
     (nil))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":64:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":64:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 27 26 28 5 16 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":65:14 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 107)
                (const_int 52 [0x34])) [0 inode_29(D)->i_pipe+0 S1 A32])) "fs/inode.c":65:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/inode.c":65:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/inode.c":65:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 70)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":66:8 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg/f:SI 108)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":66:8 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 36 35 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":66:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 37 36 38 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 85 [ _3 ])) "fs/inode.c":66:8 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 38 37 39 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":66:8 75 {*movsi_internal}
     (nil))
(call_insn 39 38 40 6 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7341ee515f00 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":66:8 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":66:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 41 40 42 6 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":67:19 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:HI 86 [ _4 ])
        (mem:HI (plus:SI (reg/f:SI 109)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":67:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 43 42 44 6 (parallel [
            (set (reg:HI 87 [ _5 ])
                (plus:HI (reg:HI 86 [ _4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":67:12 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 6 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":67:11 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (mem:HI (plus:SI (reg/f:SI 110)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 87 [ _5 ])) "fs/inode.c":67:11 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
            (nil))))
(insn 46 45 47 6 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":67:19 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (reg/f:SI 111)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":67:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 88 [ _6 ])
            (const_int 0 [0]))) "fs/inode.c":67:11 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(jump_insn 49 48 54 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 188)
            (pc))) "fs/inode.c":67:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 188)
(note 54 49 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":69:8 75 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (reg:SI 89 [ _7 ])
        (mem:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [3 inode_29(D)->i_size+0 S4 A32])) "fs/inode.c":69:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 57 56 58 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":69:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 58 57 59 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 89 [ _7 ])) "fs/inode.c":69:8 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 59 58 60 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":69:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 60 59 61 7 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x7341ee538800 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":69:8 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 61 60 62 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":69:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 62 61 63 7 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":70:23 75 {*movsi_internal}
     (nil))
(insn 63 62 64 7 (set (mem:HI (plus:SI (reg/f:SI 113)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":70:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 64 63 65 7 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":71:23 75 {*movsi_internal}
     (nil))
(insn 65 64 66 7 (set (mem:QI (plus:SI (reg/f:SI 114)
                (const_int 51 [0x33])) [0 inode_29(D)->i_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/inode.c":71:23 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 66 65 67 7 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":72:23 75 {*movsi_internal}
     (nil))
(insn 67 66 170 7 (set (mem:QI (plus:SI (reg/f:SI 115)
                (const_int 52 [0x34])) [0 inode_29(D)->i_pipe+0 S1 A32])
        (const_int 0 [0])) "fs/inode.c":72:23 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(jump_insn 170 67 171 7 (set (pc)
        (label_ref 168)) "fs/inode.c":73:8 807 {jump}
     (nil)
 -> 168)
(barrier 171 170 70)
(code_label 70 171 71 8 17 (nil) [1 uses])
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":75:15 75 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 44 [0x2c])) [2 inode_29(D)->i_dev+0 S2 A32])) "fs/inode.c":75:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 74 73 75 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 90 [ _8 ])
            (const_int 0 [0]))) "fs/inode.c":75:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(jump_insn 75 74 76 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "fs/inode.c":75:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":76:14 75 {*movsi_internal}
     (nil))
(insn 78 77 79 9 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 117)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":76:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 79 78 80 9 (parallel [
            (set (reg:HI 92 [ _11 ])
                (plus:HI (reg:HI 91 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":76:23 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 80 79 81 9 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":76:23 75 {*movsi_internal}
     (nil))
(insn 81 80 172 9 (set (mem:HI (plus:SI (reg/f:SI 118)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 92 [ _11 ])) "fs/inode.c":76:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (expr_list:REG_DEAD (reg:HI 92 [ _11 ])
            (nil))))
(jump_insn 172 81 173 9 (set (pc)
        (label_ref 168)) "fs/inode.c":77:9 807 {jump}
     (nil)
 -> 168)
(barrier 173 172 84)
(code_label 84 173 85 10 19 (nil) [1 uses])
(note 85 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 10 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":79:9 75 {*movsi_internal}
     (nil))
(insn 87 86 88 10 (set (reg:HI 93 [ _12 ])
        (mem:HI (reg/f:SI 119) [2 inode_29(D)->i_mode+0 S2 A32])) "fs/inode.c":79:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 88 87 89 10 (set (reg:SI 94 [ _13 ])
        (zero_extend:SI (reg:HI 93 [ _12 ]))) "fs/inode.c":79:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 93 [ _12 ])
        (nil)))
(insn 89 88 90 10 (parallel [
            (set (reg:SI 95 [ _14 ])
                (and:SI (reg:SI 94 [ _13 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":79:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _14 ])
            (const_int 24576 [0x6000]))) "fs/inode.c":79:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _14 ])
        (nil)))
(jump_insn 91 90 92 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 193)
            (pc))) "fs/inode.c":79:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 193)
(note 92 91 93 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 11 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":80:31 75 {*movsi_internal}
     (nil))
(insn 94 93 95 11 (set (reg:HI 96 [ _15 ])
        (mem:HI (plus:SI (reg/f:SI 120)
                (const_int 14 [0xe])) [2 inode_29(D)->i_zone[0]+0 S2 A16])) "fs/inode.c":80:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 95 94 96 11 (set (reg:SI 97 [ _16 ])
        (zero_extend:SI (reg:HI 96 [ _15 ]))) "fs/inode.c":80:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 96 [ _15 ])
        (nil)))
(insn 96 95 97 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":80:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 97 96 98 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 97 [ _16 ])) "fs/inode.c":80:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 97 [ _16 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 98 97 99 11 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":80:9 75 {*movsi_internal}
     (nil))
(call_insn 99 98 100 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sync_dev") [flags 0x41]  <function_decl 0x7341ee4d2f00 sync_dev>) [0 sync_dev S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":80:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 100 99 101 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":80:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 101 100 102 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":81:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 102 101 103 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":81:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 103 102 104 11 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":81:9 812 {*call}
     (nil)
    (nil))
(insn 104 103 190 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":81:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 190 104 191 11 (set (pc)
        (label_ref 105)) 807 {jump}
     (nil)
 -> 105)
(barrier 191 190 193)
(code_label 193 191 192 23 27 (nil) [1 uses])
(note 192 193 194 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 194 192 105 23 (const_int 0 [0]) "fs/inode.c":83:1 843 {nop}
     (nil))
(code_label 105 194 106 12 20 ("repeat") [1 uses])
(note 106 105 156 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 156 106 107 13 24 (nil) [1 uses])
(note 107 156 108 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 13 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":84:14 75 {*movsi_internal}
     (nil))
(insn 109 108 112 13 (set (reg:HI 98 [ _17 ])
        (mem:HI (plus:SI (reg/f:SI 121)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":84:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 112 109 113 13 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 98 [ _17 ])
            (const_int 1 [0x1]))) "fs/inode.c":84:8 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 98 [ _17 ])
        (nil)))
(jump_insn 113 112 114 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "fs/inode.c":84:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 122)
(note 114 113 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 14 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":85:14 75 {*movsi_internal}
     (nil))
(insn 116 115 117 14 (set (reg:HI 99 [ _18 ])
        (mem:HI (plus:SI (reg/f:SI 122)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":85:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 117 116 118 14 (parallel [
            (set (reg:HI 100 [ _20 ])
                (plus:HI (reg:HI 99 [ _18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":85:23 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 99 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 118 117 119 14 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":85:23 75 {*movsi_internal}
     (nil))
(insn 119 118 174 14 (set (mem:HI (plus:SI (reg/f:SI 123)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 100 [ _20 ])) "fs/inode.c":85:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_DEAD (reg:HI 100 [ _20 ])
            (nil))))
(jump_insn 174 119 175 14 (set (pc)
        (label_ref 168)) "fs/inode.c":86:9 807 {jump}
     (nil)
 -> 168)
(barrier 175 174 122)
(code_label 122 175 123 15 21 (nil) [1 uses])
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 15 (set (reg/f:SI 124)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":88:15 75 {*movsi_internal}
     (nil))
(insn 125 124 126 15 (set (reg:QI 101 [ _21 ])
        (mem:QI (plus:SI (reg/f:SI 124)
                (const_int 13 [0xd])) [0 inode_29(D)->i_nlinks+0 S1 A8])) "fs/inode.c":88:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 126 125 127 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ _21 ])
            (const_int 0 [0]))) "fs/inode.c":88:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 101 [ _21 ])
        (nil)))
(jump_insn 127 126 128 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) "fs/inode.c":88:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 141)
(note 128 127 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":89:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 130 129 131 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":89:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 131 130 132 16 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":89:9 75 {*movsi_internal}
     (nil))
(call_insn 132 131 133 16 (call (mem:QI (symbol_ref:SI ("truncate") [flags 0x41]  <function_decl 0x7341ee4d2600 truncate>) [0 truncate S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":89:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 133 132 134 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":89:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 134 133 135 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":90:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 135 134 136 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":90:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 136 135 137 16 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":90:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 137 136 138 16 (call (mem:QI (symbol_ref:SI ("free_inode") [flags 0x41]  <function_decl 0x7341ee4d2800 free_inode>) [0 free_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":90:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 138 137 176 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":90:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 176 138 177 16 (set (pc)
        (label_ref 168)) "fs/inode.c":91:9 807 {jump}
     (nil)
 -> 168)
(barrier 177 176 141)
(code_label 141 177 142 17 22 (nil) [1 uses])
(note 142 141 143 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 17 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":93:14 75 {*movsi_internal}
     (nil))
(insn 144 143 145 17 (set (reg:QI 102 [ _22 ])
        (mem:QI (plus:SI (reg/f:SI 125)
                (const_int 51 [0x33])) [0 inode_29(D)->i_dirt+0 S1 A8])) "fs/inode.c":93:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 145 144 146 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _22 ])
            (const_int 0 [0]))) "fs/inode.c":93:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 102 [ _22 ])
        (nil)))
(jump_insn 146 145 147 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) "fs/inode.c":93:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 159)
(note 147 146 148 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":94:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 149 148 150 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":94:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 150 149 151 18 (call (mem:QI (symbol_ref:SI ("write_inode") [flags 0x3]  <function_decl 0x7341ee540c00 write_inode>) [0 write_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":94:9 812 {*call}
     (nil)
    (nil))
(insn 151 150 152 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":94:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 152 151 153 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":95:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 153 152 154 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":95:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 154 153 155 18 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":95:9 812 {*call}
     (nil)
    (nil))
(insn 155 154 178 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":95:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 178 155 179 18 (set (pc)
        (label_ref 156)) "fs/inode.c":96:9 807 {jump}
     (nil)
 -> 156)
(barrier 179 178 159)
(code_label 159 179 160 19 23 (nil) [1 uses])
(note 160 159 161 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 19 (set (reg/f:SI 126)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":98:10 75 {*movsi_internal}
     (nil))
(insn 162 161 163 19 (set (reg:HI 103 [ _23 ])
        (mem:HI (plus:SI (reg/f:SI 126)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":98:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 163 162 164 19 (parallel [
            (set (reg:HI 104 [ _25 ])
                (plus:HI (reg:HI 103 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":98:19 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 103 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 19 (set (reg/f:SI 127)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":98:19 75 {*movsi_internal}
     (nil))
(insn 165 164 180 19 (set (mem:HI (plus:SI (reg/f:SI 127)
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 104 [ _25 ])) "fs/inode.c":98:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (expr_list:REG_DEAD (reg:HI 104 [ _25 ])
            (nil))))
(jump_insn 180 165 181 19 (set (pc)
        (label_ref 168)) "fs/inode.c":99:5 807 {jump}
     (nil)
 -> 168)
(barrier 181 180 183)
(code_label 183 181 182 21 25 (nil) [1 uses])
(note 182 183 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 184 182 185 21 (const_int 0 [0]) "fs/inode.c":61:9 843 {nop}
     (nil))
(jump_insn 185 184 186 21 (set (pc)
        (label_ref 168)) 807 {jump}
     (nil)
 -> 168)
(barrier 186 185 188)
(code_label 188 186 187 22 26 (nil) [1 uses])
(note 187 188 189 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 189 187 168 22 (const_int 0 [0]) "fs/inode.c":68:12 843 {nop}
     (nil))
(code_label 168 189 169 20 13 (nil) [6 uses])
(note 169 168 0 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

;; Function write_inode (write_inode, funcdef_no=6, decl_uid=1395, cgraph_uid=7, symbol_order=7)

scanning new insn with uid = 134.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 14 count 11 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a50 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 MEM:48000
  a1(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:53000
  a4(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:54000
  a6(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a14(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a15(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a16(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a17(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a18(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a24(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a29(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a30(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a31(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a32(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a36(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a37(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a38(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a45(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a51(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 127(l0): point = 1
   Insn 126(l0): point = 3
   Insn 125(l0): point = 5
   Insn 124(l0): point = 7
   Insn 123(l0): point = 9
   Insn 122(l0): point = 11
   Insn 121(l0): point = 13
   Insn 120(l0): point = 15
   Insn 119(l0): point = 17
   Insn 118(l0): point = 19
   Insn 117(l0): point = 21
   Insn 116(l0): point = 23
   Insn 115(l0): point = 25
   Insn 114(l0): point = 27
   Insn 113(l0): point = 29
   Insn 112(l0): point = 31
   Insn 111(l0): point = 33
   Insn 110(l0): point = 35
   Insn 109(l0): point = 37
   Insn 108(l0): point = 39
   Insn 107(l0): point = 41
   Insn 106(l0): point = 43
   Insn 105(l0): point = 45
   Insn 104(l0): point = 47
   Insn 103(l0): point = 49
   Insn 102(l0): point = 51
   Insn 101(l0): point = 53
   Insn 100(l0): point = 55
   Insn 99(l0): point = 57
   Insn 98(l0): point = 59
   Insn 97(l0): point = 61
   Insn 96(l0): point = 63
   Insn 95(l0): point = 65
   Insn 94(l0): point = 67
   Insn 93(l0): point = 69
   Insn 92(l0): point = 71
   Insn 91(l0): point = 73
   Insn 90(l0): point = 75
   Insn 89(l0): point = 77
   Insn 88(l0): point = 79
   Insn 85(l0): point = 82
   Insn 84(l0): point = 84
   Insn 83(l0): point = 86
   Insn 82(l0): point = 88
   Insn 81(l0): point = 90
   Insn 80(l0): point = 92
   Insn 78(l0): point = 95
   Insn 77(l0): point = 97
   Insn 76(l0): point = 99
   Insn 75(l0): point = 101
   Insn 74(l0): point = 103
   Insn 73(l0): point = 105
   Insn 72(l0): point = 107
   Insn 71(l0): point = 109
   Insn 70(l0): point = 111
   Insn 69(l0): point = 113
   Insn 68(l0): point = 115
   Insn 67(l0): point = 117
   Insn 66(l0): point = 119
   Insn 65(l0): point = 121
   Insn 64(l0): point = 123
   Insn 63(l0): point = 125
   Insn 62(l0): point = 127
   Insn 61(l0): point = 129
   Insn 60(l0): point = 131
   Insn 59(l0): point = 133
   Insn 58(l0): point = 135
   Insn 57(l0): point = 137
   Insn 56(l0): point = 139
   Insn 55(l0): point = 141
   Insn 54(l0): point = 143
   Insn 53(l0): point = 145
   Insn 52(l0): point = 147
   Insn 51(l0): point = 149
   Insn 50(l0): point = 151
   Insn 49(l0): point = 153
   Insn 46(l0): point = 156
   Insn 45(l0): point = 158
   Insn 44(l0): point = 160
   Insn 43(l0): point = 162
   Insn 42(l0): point = 164
   Insn 41(l0): point = 166
   Insn 39(l0): point = 169
   Insn 38(l0): point = 171
   Insn 37(l0): point = 173
   Insn 36(l0): point = 175
   Insn 35(l0): point = 177
   Insn 34(l0): point = 179
   Insn 33(l0): point = 181
   Insn 32(l0): point = 183
   Insn 31(l0): point = 185
   Insn 30(l0): point = 187
   Insn 29(l0): point = 189
   Insn 28(l0): point = 191
   Insn 132(l0): point = 194
   Insn 23(l0): point = 196
   Insn 22(l0): point = 198
   Insn 21(l0): point = 200
   Insn 20(l0): point = 202
   Insn 17(l0): point = 205
   Insn 16(l0): point = 207
   Insn 15(l0): point = 209
   Insn 14(l0): point = 211
   Insn 12(l0): point = 214
   Insn 11(l0): point = 216
   Insn 10(l0): point = 218
   Insn 9(l0): point = 220
   Insn 8(l0): point = 222
   Insn 7(l0): point = 224
   Insn 6(l0): point = 226
   Insn 5(l0): point = 228
   Insn 134(l0): point = 230
 a0(r82): [205..230] [14..193]
 a1(r133): [20..21]
 a2(r132): [24..25]
 a3(r109): [28..61]
 a4(r131): [28..29]
 a5(r123): [30..59]
 a6(r130): [32..33]
 a7(r129): [36..37]
 a8(r128): [40..41]
 a9(r127): [44..45]
 a10(r126): [48..49]
 a11(r125): [52..53]
 a12(r124): [56..57]
 a13(r108): [62..63]
 a14(r102): [62..77]
 a15(r107): [64..65]
 a16(r106): [66..67]
 a17(r105): [68..69]
 a18(r104): [70..71]
 a19(r103): [72..73]
 a20(r122): [74..75]
 a21(r121): [78..79]
 a22(r120): [89..90]
 a23(r119): [100..101]
 a24(r101): [110..115]
 a25(r100): [116..117]
 a26(r118): [118..119]
 a27(r99): [122..123]
 a28(r98): [124..125]
 a29(r93): [124..137]
 a30(r97): [126..127]
 a31(r96): [128..129]
 a32(r95): [130..131]
 a33(r94): [132..133]
 a34(r117): [134..135]
 a35(r92): [138..139]
 a36(r91): [140..141]
 a37(r89): [140..147]
 a38(r90): [142..143]
 a39(r116): [144..145]
 a40(r88): [148..149]
 a41(r87): [150..151]
 a42(r115): [152..153]
 a43(r114): [163..164]
 a44(r113): [174..175]
 a45(r86): [184..187]
 a46(r85): [188..189]
 a47(r112): [190..191]
 a48(r84): [208..209]
 a49(r111): [210..211]
 a50(r83): [217..218]
 a51(r110): [219..220]
Compressing live ranges: from 233 to 92 - 39%
Ranges after the compression:
 a0(r82): [0..91]
 a1(r133): [0..1]
 a2(r132): [2..3]
 a3(r109): [4..19]
 a4(r131): [4..5]
 a5(r123): [6..19]
 a6(r130): [6..7]
 a7(r129): [8..9]
 a8(r128): [10..11]
 a9(r127): [12..13]
 a10(r126): [14..15]
 a11(r125): [16..17]
 a12(r124): [18..19]
 a13(r108): [20..21]
 a14(r102): [20..33]
 a15(r107): [22..23]
 a16(r106): [24..25]
 a17(r105): [26..27]
 a18(r104): [28..29]
 a19(r103): [30..31]
 a20(r122): [32..33]
 a21(r121): [34..35]
 a22(r120): [36..37]
 a23(r119): [38..39]
 a24(r101): [40..41]
 a25(r100): [42..43]
 a26(r118): [44..45]
 a27(r99): [46..47]
 a28(r98): [48..49]
 a29(r93): [48..59]
 a30(r97): [50..51]
 a31(r96): [52..53]
 a32(r95): [54..55]
 a33(r94): [56..57]
 a34(r117): [58..59]
 a35(r92): [60..61]
 a36(r91): [62..63]
 a37(r89): [62..67]
 a38(r90): [64..65]
 a39(r116): [66..67]
 a40(r88): [68..69]
 a41(r87): [70..71]
 a42(r115): [72..73]
 a43(r114): [74..75]
 a44(r113): [76..77]
 a45(r86): [78..79]
 a46(r85): [80..81]
 a47(r112): [82..83]
 a48(r84): [84..85]
 a49(r111): [86..87]
 a50(r83): [88..89]
 a51(r110): [90..91]
  pref0:a23(r119)<-hr0@1500
  pref1:a44(r113)<-hr0@1500
  pref2:a0(r82)<-hr3@1500
  regions=1, blocks=11, points=92
    allocnos=52 (big 0), copies=0, conflicts=0, ranges=52
Disposition:
    0:r82  l0     3   50:r83  l0     0   48:r84  l0     0   46:r85  l0     0
   45:r86  l0     0   41:r87  l0     0   40:r88  l0     0   37:r89  l0     1
   38:r90  l0     0   36:r91  l0     0   35:r92  l0     0   29:r93  l0     1
   33:r94  l0     0   32:r95  l0     0   31:r96  l0     0   30:r97  l0     0
   28:r98  l0     0   27:r99  l0     0   25:r100 l0     0   24:r101 l0     0
   14:r102 l0     1   19:r103 l0     0   18:r104 l0     0   17:r105 l0     0
   16:r106 l0     0   15:r107 l0     0   13:r108 l0     0    3:r109 l0     1
   51:r110 l0     0   49:r111 l0     0   47:r112 l0     0   44:r113 l0     0
   43:r114 l0     0   42:r115 l0     0   39:r116 l0     0   34:r117 l0     0
   26:r118 l0     0   23:r119 l0     0   22:r120 l0     0   21:r121 l0     0
   20:r122 l0     0    5:r123 l0     0   12:r124 l0     2   11:r125 l0     2
   10:r126 l0     2    9:r127 l0     2    8:r128 l0     2    7:r129 l0     2
    6:r130 l0     2    4:r131 l0     0    2:r132 l0     0    1:r133 l0     0
+++Costs: overall 5000, reg 5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


write_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,2u} r1={9d} r2={9d} r3={5d,5u} r6={1d,10u} r7={26d,59u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,20u} r17={38d,4u} r18={8d} r19={1d,21u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u,1e} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,8u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,8u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} 
;;    total ref usage 865{671d,193u,1e} in 112{104 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 134 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 134 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 134 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":108:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":108:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:SI ("lock_inode") [flags 0x3]  <function_decl 0x7341ee540f00 lock_inode>) [0 lock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":108:5 812 {*call}
     (nil)
    (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":108:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 9 8 10 2 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":109:15 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:QI 83 [ _1 ])
        (mem:QI (plus:SI (reg/f:SI 110)
                (const_int 51 [0x33])) [0 inode_32(D)->i_dirt+0 S1 A8])) "fs/inode.c":109:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _1 ])
            (const_int 0 [0]))) "fs/inode.c":109:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (nil)))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/inode.c":109:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":109:33 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 111)
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/inode.c":109:33 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 84 [ _2 ])
            (const_int 0 [0]))) "fs/inode.c":109:24 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "fs/inode.c":109:24 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 26)
(code_label 18 17 19 4 29 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":110:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":110:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:SI ("unlock_inode") [flags 0x3]  <function_decl 0x7341ee540100 unlock_inode>) [0 unlock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":110:9 812 {*call}
     (nil)
    (nil))
(insn 23 22 132 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":110:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 132 23 133 4 (set (pc)
        (label_ref 130)) "fs/inode.c":111:9 807 {jump}
     (nil)
 -> 130)
(barrier 133 132 26)
(code_label 26 133 27 5 30 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":113:31 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 112)
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/inode.c":113:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 30 29 31 5 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/inode.c":113:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":113:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 32 31 33 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 86 [ _4 ])) "fs/inode.c":113:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 33 32 34 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":113:16 75 {*movsi_internal}
     (nil))
(call_insn 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7341ee510000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":113:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":113:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 37 5 (set (reg:SI 113)
        (reg:SI 0 ax)) "fs/inode.c":113:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 37 36 38 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])
        (reg:SI 113)) "fs/inode.c":113:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":113:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "fs/inode.c":113:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":114:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 42 41 43 6 (set (reg/f:SI 114)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7341ee5b7510 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":114:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7341ee5b7510 *.LC2>)
        (nil)))
(insn 43 42 44 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 114)) "fs/inode.c":114:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 44 43 45 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":114:9 75 {*movsi_internal}
     (nil))
(call_insn 45 44 46 6 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":114:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":114:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 47 46 48 7 32 (nil) [1 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])) "fs/inode.c":115:19 75 {*movsi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 115)
                (const_int 4 [0x4])) [2 sb_35->s_imap_blocks+0 S2 A32])) "fs/inode.c":115:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 51 50 52 7 (set (reg:SI 88 [ _6 ])
        (zero_extend:SI (reg:HI 87 [ _5 ]))) "fs/inode.c":115:19 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(insn 52 51 53 7 (parallel [
            (set (reg:SI 89 [ _7 ])
                (plus:SI (reg:SI 88 [ _6 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":115:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 7 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])) "fs/inode.c":115:39 75 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 6 [0x6])) [2 sb_35->s_zmap_blocks+0 S2 A16])) "fs/inode.c":115:39 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 55 54 56 7 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:HI 90 [ _8 ]))) "fs/inode.c":115:39 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 56 55 57 7 (parallel [
            (set (reg:SI 92 [ _10 ])
                (plus:SI (reg:SI 89 [ _7 ])
                    (reg:SI 91 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":115:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 57 56 58 7 (set (reg:SI 93 [ _11 ])
        (reg:SI 92 [ _10 ])) "fs/inode.c":115:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(insn 58 57 59 7 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":116:18 75 {*movsi_internal}
     (nil))
(insn 59 58 60 7 (set (reg:HI 94 [ _12 ])
        (mem:HI (plus:SI (reg/f:SI 117)
                (const_int 46 [0x2e])) [2 inode_32(D)->i_num+0 S2 A16])) "fs/inode.c":116:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 60 59 61 7 (set (reg:SI 95 [ _13 ])
        (zero_extend:SI (reg:HI 94 [ _12 ]))) "fs/inode.c":116:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
        (nil)))
(insn 61 60 62 7 (parallel [
            (set (reg:SI 96 [ _14 ])
                (plus:SI (reg:SI 95 [ _13 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":116:26 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 7 (set (reg:SI 97 [ _15 ])
        (reg:SI 96 [ _14 ])) "fs/inode.c":116:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(insn 63 62 64 7 (parallel [
            (set (reg:SI 98 [ _16 ])
                (lshiftrt:SI (reg:SI 97 [ _15 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":116:31 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 97 [ _15 ])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 64 63 65 7 (parallel [
            (set (reg:SI 99 [ _17 ])
                (plus:SI (reg:SI 93 [ _11 ])
                    (reg:SI 98 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":115:55 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 65 64 66 7 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 block+0 S4 A32])
        (reg:SI 99 [ _17 ])) "fs/inode.c":115:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (nil)))
(insn 66 65 67 7 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":117:27 75 {*movsi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:HI 100 [ _18 ])
        (mem:HI (plus:SI (reg/f:SI 118)
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/inode.c":117:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 68 67 69 7 (set (reg:SI 101 [ _19 ])
        (zero_extend:SI (reg:HI 100 [ _18 ]))) "fs/inode.c":117:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
        (nil)))
(insn 69 68 70 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":117:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 70 69 71 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 block+0 S4 A32])) "fs/inode.c":117:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 71 70 72 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 101 [ _19 ])) "fs/inode.c":117:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 72 71 73 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":117:16 75 {*movsi_internal}
     (nil))
(call_insn 73 72 74 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":117:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 74 73 75 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":117:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 75 74 76 7 (set (reg:SI 119)
        (reg:SI 0 ax)) "fs/inode.c":117:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 76 75 77 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])
        (reg:SI 119)) "fs/inode.c":117:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 77 76 78 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":117:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 78 77 79 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "fs/inode.c":117:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 86)
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":118:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 81 80 82 8 (set (reg/f:SI 120)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7341ee5b75a0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":118:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7341ee5b75a0 *.LC3>)
        (nil)))
(insn 82 81 83 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 120)) "fs/inode.c":118:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 83 82 84 8 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":118:9 75 {*movsi_internal}
     (nil))
(call_insn 84 83 85 8 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":118:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 85 84 86 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":118:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 86 85 87 9 33 (nil) [1 uses])
(note 87 86 88 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 9 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])) "fs/inode.c":119:26 75 {*movsi_internal}
     (nil))
(insn 89 88 90 9 (set (reg/f:SI 102 [ _20 ])
        (mem/f:SI (reg/f:SI 121) [10 bh_39->b_data+0 S4 A32])) "fs/inode.c":119:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 90 89 91 9 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":120:21 75 {*movsi_internal}
     (nil))
(insn 91 90 92 9 (set (reg:HI 103 [ _21 ])
        (mem:HI (plus:SI (reg/f:SI 122)
                (const_int 46 [0x2e])) [2 inode_32(D)->i_num+0 S2 A16])) "fs/inode.c":120:21 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 92 91 93 9 (set (reg:SI 104 [ _22 ])
        (zero_extend:SI (reg:HI 103 [ _21 ]))) "fs/inode.c":120:21 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 103 [ _21 ])
        (nil)))
(insn 93 92 94 9 (parallel [
            (set (reg:SI 105 [ _23 ])
                (plus:SI (reg:SI 104 [ _22 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:29 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 94 93 95 9 (set (reg:SI 106 [ _24 ])
        (reg:SI 105 [ _23 ])) "fs/inode.c":120:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
        (nil)))
(insn 95 94 96 9 (parallel [
            (set (reg:SI 107 [ _25 ])
                (and:SI (reg:SI 106 [ _24 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:34 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 96 95 97 9 (parallel [
            (set (reg:SI 108 [ _26 ])
                (ashift:SI (reg:SI 107 [ _25 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:14 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 107 [ _25 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 9 (parallel [
            (set (reg/f:SI 109 [ _27 ])
                (plus:SI (reg/f:SI 102 [ _20 ])
                    (reg:SI 108 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ _26 ])
        (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 98 97 99 9 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 99 98 100 9 (set (reg:SI 124)
        (mem:SI (reg/f:SI 123) [13 MEM[(struct d_inode *)inode_32(D)]+0 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 100 99 101 9 (set (mem:SI (reg/f:SI 109 [ _27 ]) [13 *_27+0 S4 A32])
        (reg:SI 124)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 101 100 102 9 (set (reg:SI 125)
        (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 4 [0x4])) [13 MEM[(struct d_inode *)inode_32(D)]+4 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 102 101 103 9 (set (mem:SI (plus:SI (reg/f:SI 109 [ _27 ])
                (const_int 4 [0x4])) [13 *_27+4 S4 A32])
        (reg:SI 125)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 103 102 104 9 (set (reg:SI 126)
        (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 8 [0x8])) [13 MEM[(struct d_inode *)inode_32(D)]+8 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 104 103 105 9 (set (mem:SI (plus:SI (reg/f:SI 109 [ _27 ])
                (const_int 8 [0x8])) [13 *_27+8 S4 A32])
        (reg:SI 126)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 105 104 106 9 (set (reg:SI 127)
        (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 12 [0xc])) [13 MEM[(struct d_inode *)inode_32(D)]+12 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 106 105 107 9 (set (mem:SI (plus:SI (reg/f:SI 109 [ _27 ])
                (const_int 12 [0xc])) [13 *_27+12 S4 A32])
        (reg:SI 127)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127)
        (nil)))
(insn 107 106 108 9 (set (reg:SI 128)
        (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 16 [0x10])) [13 MEM[(struct d_inode *)inode_32(D)]+16 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 108 107 109 9 (set (mem:SI (plus:SI (reg/f:SI 109 [ _27 ])
                (const_int 16 [0x10])) [13 *_27+16 S4 A32])
        (reg:SI 128)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 109 108 110 9 (set (reg:SI 129)
        (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 20 [0x14])) [13 MEM[(struct d_inode *)inode_32(D)]+20 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 110 109 111 9 (set (mem:SI (plus:SI (reg/f:SI 109 [ _27 ])
                (const_int 20 [0x14])) [13 *_27+20 S4 A32])
        (reg:SI 129)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 111 110 112 9 (set (reg:SI 130)
        (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 24 [0x18])) [13 MEM[(struct d_inode *)inode_32(D)]+24 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 112 111 113 9 (set (mem:SI (plus:SI (reg/f:SI 109 [ _27 ])
                (const_int 24 [0x18])) [13 *_27+24 S4 A32])
        (reg:SI 130)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (nil)))
(insn 113 112 114 9 (set (reg:SI 131)
        (mem:SI (plus:SI (reg/f:SI 123)
                (const_int 28 [0x1c])) [13 MEM[(struct d_inode *)inode_32(D)]+28 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 114 113 115 9 (set (mem:SI (plus:SI (reg/f:SI 109 [ _27 ])
                (const_int 28 [0x1c])) [13 *_27+28 S4 A32])
        (reg:SI 131)) "fs/inode.c":120:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg/f:SI 109 [ _27 ])
            (nil))))
(insn 115 114 116 9 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])) "fs/inode.c":122:16 75 {*movsi_internal}
     (nil))
(insn 116 115 117 9 (set (mem:QI (plus:SI (reg/f:SI 132)
                (const_int 11 [0xb])) [0 bh_39->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":122:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 117 116 118 9 (set (reg/f:SI 133)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":123:19 75 {*movsi_internal}
     (nil))
(insn 118 117 119 9 (set (mem:QI (plus:SI (reg/f:SI 133)
                (const_int 51 [0x33])) [0 inode_32(D)->i_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/inode.c":123:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 119 118 120 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":124:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 120 119 121 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])) "fs/inode.c":124:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 121 120 122 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":124:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 122 121 123 9 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":124:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 123 122 124 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":124:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 124 123 125 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":125:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 125 124 126 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":125:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 126 125 127 9 (call (mem:QI (symbol_ref:SI ("unlock_inode") [flags 0x3]  <function_decl 0x7341ee540100 unlock_inode>) [0 unlock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":125:5 812 {*call}
     (nil)
    (nil))
(insn 127 126 130 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":125:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 130 127 131 10 28 (nil) [1 uses])
(note 131 130 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

;; Function sync_inodes (sync_inodes, funcdef_no=7, decl_uid=1110, cgraph_uid=8, symbol_order=8)

scanning new insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 13 count 11 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8 10
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4 5
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 9 }
;; 9 succs { 8 }
;; 8 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 48(l0): point = 0
   Insn 46(l0): point = 4
   Insn 18(l0): point = 7
   Insn 17(l0): point = 9
   Insn 16(l0): point = 11
   Insn 15(l0): point = 13
   Insn 14(l0): point = 15
   Insn 13(l0): point = 17
   Insn 12(l0): point = 19
   Insn 11(l0): point = 21
   Insn 39(l0): point = 24
   Insn 38(l0): point = 26
   Insn 32(l0): point = 29
   Insn 31(l0): point = 31
   Insn 23(l0): point = 34
   Insn 22(l0): point = 36
   Insn 21(l0): point = 38
   Insn 20(l0): point = 40
   Insn 28(l0): point = 43
   Insn 27(l0): point = 45
   Insn 26(l0): point = 47
   Insn 25(l0): point = 49
   Insn 43(l0): point = 52
   Insn 7(l0): point = 54
   Insn 6(l0): point = 56
   Insn 5(l0): point = 58
   Insn 49(l0): point = 60
 a0(r84): [37..38]
 a1(r87): [39..40]
 a2(r83): [10..11]
 a3(r86): [12..13]
 a4(r85): [57..58]
 a5(r82): [59..60]
Compressing live ranges: from 63 to 12 - 19%
Ranges after the compression:
 a0(r84): [4..5]
 a1(r87): [6..7]
 a2(r83): [0..1]
 a3(r86): [2..3]
 a4(r85): [8..9]
 a5(r82): [10..11]
  regions=1, blocks=11, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    2:r83  l0     0    0:r84  l0     0    4:r85  l0     0
    3:r86  l0     0    1:r87  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sync_inodes

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r6={1d,10u} r7={7d,22u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,9u} r17={12d,3u} r18={2d} r19={1d,21u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 238{167d,71u,0e} in 27{25 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 49 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 49 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 85)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":133:11 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 82)
        (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
            (nil))))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])
        (reg/f:SI 85)) "fs/inode.c":133:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (nil)))
(insn 7 6 43 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":134:12 75 {*movsi_internal}
     (nil))
(jump_insn 43 7 44 2 (set (pc)
        (label_ref 33)) "fs/inode.c":134:5 807 {jump}
     (nil)
 -> 33)
(barrier 44 43 35)
(code_label 35 44 10 3 37 (nil) [1 uses])
(note 10 35 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":135:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":135:8 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":135:8 812 {*call}
     (nil)
    (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":135:8 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 15 14 16 3 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":136:17 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:QI 83 [ _1 ])
        (mem:QI (plus:SI (reg/f:SI 86)
                (const_int 51 [0x33])) [0 inode_4->i_dirt+0 S1 A8])) "fs/inode.c":136:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _1 ])
            (const_int 0 [0]))) "fs/inode.c":136:11 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (nil)))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/inode.c":136:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":136:35 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 87)
                (const_int 52 [0x34])) [0 inode_4->i_pipe+0 S1 A32])) "fs/inode.c":136:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/inode.c":136:26 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/inode.c":136:26 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":137:11 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 26 25 27 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])) "fs/inode.c":137:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 27 26 28 5 (call (mem:QI (symbol_ref:SI ("write_inode") [flags 0x3]  <function_decl 0x7341ee540c00 write_inode>) [0 write_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":137:11 812 {*call}
     (nil)
    (nil))
(insn 28 27 29 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":137:11 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 29 28 30 6 36 (nil) [2 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":134:32 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":134:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 33 32 34 7 35 (nil) [1 uses])
(note 34 33 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 34 39 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/inode.c":134:19 11 {*cmpsi_1}
     (nil))
(jump_insn 39 38 45 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/inode.c":134:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 35)
(note 45 39 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 40 9 (const_int 0 [0]) "fs/inode.c":139:1 843 {nop}
     (nil))
(note 40 46 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 47 40 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 0 10 (const_int 0 [0]) "fs/inode.c":139:1 843 {nop}
     (nil))

;; Function get_empty_inode (get_empty_inode, funcdef_no=8, decl_uid=1172, cgraph_uid=9, symbol_order=9)

scanning new insn with uid = 157.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 23 n_edges 31 count 31 (  1.3)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 21 22 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 3, latch 19
;;  depth 1, outer 0
;;  nodes: 3 19 18 17 16 11 15 14 13 12 22 21 10 9 6 7 8 4 5
;;
;; Loop 4
;;  header 18, latch 17
;;  depth 2, outer 1
;;  nodes: 18 17
;;
;; Loop 3
;;  header 14, latch 13
;;  depth 2, outer 1
;;  nodes: 14 13
;;
;; Loop 2
;;  header 10, latch 9
;;  depth 2, outer 1
;;  nodes: 10 9 6 7 8 4 5
;; 2 succs { 3 }
;; 3 succs { 10 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 22 9 }
;; 9 succs { 10 }
;; 10 succs { 4 21 }
;; 21 succs { 11 }
;; 22 succs { 11 }
;; 11 succs { 12 16 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 13 15 }
;; 15 succs { 16 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 17 19 }
;; 19 succs { 3 20 }
;; 20 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a6 (r95,l0) best Q_REGS, allocno Q_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a24 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a26 (r89,l0) best Q_REGS, allocno Q_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:96000
  a4(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a7(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a15(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a16(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a21(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a22(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a23(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a25(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a27(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 143(l0): point = 0
   Insn 142(l0): point = 2
   Insn 138(l0): point = 4
   Insn 135(l0): point = 6
   Insn 134(l0): point = 8
   Insn 133(l0): point = 10
   Insn 132(l0): point = 12
   Insn 131(l0): point = 14
   Insn 130(l0): point = 16
   Insn 129(l0): point = 18
   Insn 128(l0): point = 20
   Insn 127(l0): point = 22
   Insn 126(l0): point = 24
   Insn 145(l0): point = 27
   Insn 6(l0): point = 29
   Insn 5(l0): point = 31
   Insn 124(l0): point = 34
   Insn 123(l0): point = 36
   Insn 121(l0): point = 38
   Insn 120(l0): point = 40
   Insn 118(l0): point = 43
   Insn 117(l0): point = 45
   Insn 115(l0): point = 47
   Insn 114(l0): point = 49
   Insn 111(l0): point = 52
   Insn 110(l0): point = 54
   Insn 109(l0): point = 56
   Insn 108(l0): point = 58
   Insn 107(l0): point = 60
   Insn 106(l0): point = 62
   Insn 105(l0): point = 64
   Insn 104(l0): point = 66
   Insn 149(l0): point = 69
   Insn 100(l0): point = 71
   Insn 99(l0): point = 73
   Insn 98(l0): point = 75
   Insn 97(l0): point = 77
   Insn 52(l0): point = 80
   Insn 51(l0): point = 82
   Insn 156(l0): point = 85
   Insn 152(l0): point = 88
   Insn 48(l0): point = 91
   Insn 47(l0): point = 93
   Insn 43(l0): point = 96
   Insn 25(l0): point = 99
   Insn 24(l0): point = 101
   Insn 23(l0): point = 103
   Insn 22(l0): point = 105
   Insn 16(l0): point = 108
   Insn 15(l0): point = 110
   Insn 14(l0): point = 112
   Insn 13(l0): point = 114
   Insn 12(l0): point = 116
   Insn 11(l0): point = 118
   Insn 10(l0): point = 120
   Insn 19(l0): point = 123
   Insn 18(l0): point = 125
   Insn 32(l0): point = 128
   Insn 31(l0): point = 130
   Insn 30(l0): point = 132
   Insn 29(l0): point = 134
   Insn 28(l0): point = 136
   Insn 27(l0): point = 138
   Insn 37(l0): point = 141
   Insn 36(l0): point = 143
   Insn 35(l0): point = 145
   Insn 34(l0): point = 147
   Insn 94(l0): point = 150
   Insn 93(l0): point = 152
   Insn 92(l0): point = 154
   Insn 91(l0): point = 156
   Insn 90(l0): point = 158
   Insn 89(l0): point = 160
   Insn 87(l0): point = 163
   Insn 86(l0): point = 165
   Insn 80(l0): point = 168
   Insn 79(l0): point = 170
   Insn 78(l0): point = 172
   Insn 77(l0): point = 174
   Insn 76(l0): point = 176
   Insn 75(l0): point = 178
   Insn 74(l0): point = 180
   Insn 73(l0): point = 182
   Insn 72(l0): point = 184
   Insn 71(l0): point = 186
   Insn 70(l0): point = 188
   Insn 69(l0): point = 190
   Insn 68(l0): point = 192
   Insn 67(l0): point = 194
   Insn 66(l0): point = 196
   Insn 65(l0): point = 198
   Insn 64(l0): point = 200
   Insn 63(l0): point = 202
   Insn 62(l0): point = 204
   Insn 61(l0): point = 206
   Insn 60(l0): point = 208
   Insn 59(l0): point = 210
   Insn 58(l0): point = 212
   Insn 147(l0): point = 215
   Insn 54(l0): point = 217
   Insn 157(l0): point = 220
 a0(r98): [3..4]
 a1(r97): [5..6]
 a2(r117): [9..10]
 a3(r82): [17..220]
 a4(r96): [37..38]
 a5(r116): [39..40]
 a6(r95): [46..47]
 a7(r115): [48..49]
 a8(r114): [157..158]
 a9(r113): [177..178]
 a10(r94): [181..186]
 a11(r92): [183..200]
 a12(r93): [187..188]
 a13(r112): [189..190]
 a14(r111): [191..192]
 a15(r109): [193..196]
 a16(r110): [193..194]
 a17(r108): [195..198]
 a18(r91): [201..202]
 a19(r107): [203..204]
 a20(r106): [205..206]
 a21(r104): [207..210]
 a22(r105): [207..208]
 a23(r103): [209..212]
 a24(r90): [144..145]
 a25(r102): [146..147]
 a26(r89): [131..132]
 a27(r101): [133..134]
 a28(r100): [137..138]
 a29(r88): [102..103]
 a30(r87): [104..105]
 a31(r99): [124..125]
 a32(r86): [111..112]
 a33(r85): [111..114]
 a34(r84): [117..118]
 a35(r83): [119..120]
Compressing live ranges: from 223 to 62 - 27%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r97): [2..3]
 a2(r117): [4..5]
 a3(r82): [6..61]
 a4(r96): [6..7]
 a5(r116): [8..9]
 a6(r95): [10..11]
 a7(r115): [12..13]
 a8(r114): [36..37]
 a9(r113): [38..39]
 a10(r94): [40..41]
 a11(r92): [40..51]
 a12(r93): [42..43]
 a13(r112): [44..45]
 a14(r111): [46..47]
 a15(r109): [48..51]
 a16(r110): [48..49]
 a17(r108): [50..51]
 a18(r91): [52..53]
 a19(r107): [54..55]
 a20(r106): [56..57]
 a21(r104): [58..61]
 a22(r105): [58..59]
 a23(r103): [60..61]
 a24(r90): [32..33]
 a25(r102): [34..35]
 a26(r89): [26..27]
 a27(r101): [28..29]
 a28(r100): [30..31]
 a29(r88): [14..15]
 a30(r87): [16..17]
 a31(r99): [24..25]
 a32(r86): [18..19]
 a33(r85): [18..19]
 a34(r84): [20..21]
 a35(r83): [22..23]
  pref0:a0(r98)<-hr0@1500
  pref1:a3(r82)<-hr3@1500
  regions=1, blocks=23, points=62
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
    3:r82  l0     3   35:r83  l0     0   34:r84  l0     0   33:r85  l0     1
   32:r86  l0     0   30:r87  l0     0   29:r88  l0     0   26:r89  l0     0
   24:r90  l0     0   18:r91  l0     0   11:r92  l0     1   12:r93  l0     0
   10:r94  l0     0    6:r95  l0     0    4:r96  l0     0    1:r97  l0     0
    0:r98  l0     0   31:r99  l0     0   28:r100 l0     0   27:r101 l0     0
   25:r102 l0     0   23:r103 l0     0   21:r104 l0     1   22:r105 l0     0
   20:r106 l0     0   19:r107 l0     0   17:r108 l0     0   15:r109 l0     2
   16:r110 l0     0   14:r111 l0     0   13:r112 l0     0    9:r113 l0     0
    8:r114 l0     0    7:r115 l0     0    5:r116 l0     0    2:r117 l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_empty_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,2u} r1={7d} r2={7d} r3={3d,3u} r6={1d,22u} r7={23d,62u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,21u} r17={37d,9u} r18={6d} r19={1d,45u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,15u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 728{514d,214u,0e} in 101{95 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 157 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 157 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 157 122 2 NOTE_INSN_FUNCTION_BEG)
(code_label 122 2 4 3 49 (nil) [1 uses])
(note 4 122 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":148:15 75 {*movsi_internal}
     (nil))
(insn 6 5 145 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 32 [0x20])) "fs/inode.c":149:16 75 {*movsi_internal}
     (nil))
(jump_insn 145 6 146 3 (set (pc)
        (label_ref 44)) "fs/inode.c":149:9 807 {jump}
     (nil)
 -> 44)
(barrier 146 145 46)
(code_label 46 146 9 4 43 (nil) [1 uses])
(note 9 46 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:SI 83 [ last_inode.0_1 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":150:17 75 {*movsi_internal}
     (nil))
(insn 11 10 12 4 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 83 [ last_inode.0_1 ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":150:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ last_inode.0_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 4 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])
        (reg/f:SI 84 [ _2 ])) "fs/inode.c":150:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(insn 13 12 14 4 (set (reg/f:SI 85 [ last_inode.1_3 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":150:17 75 {*movsi_internal}
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 86 [ _4 ])
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 1792 [0x700]))))) "fs/inode.c":150:45 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                (const_int 1792 [0x700])))
        (nil)))
(insn 15 14 16 4 (set (reg:CC 17 flags)
        (compare:CC (reg/f:SI 85 [ last_inode.1_3 ])
            (reg/f:SI 86 [ _4 ]))) "fs/inode.c":150:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (expr_list:REG_DEAD (reg/f:SI 85 [ last_inode.1_3 ])
            (nil))))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/inode.c":150:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 20)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 99)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":151:28 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 19 18 20 5 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])
        (reg/f:SI 99)) "fs/inode.c":151:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(code_label 20 19 21 6 40 (nil) [1 uses])
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:SI 87 [ last_inode.2_5 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":152:28 75 {*movsi_internal}
     (nil))
(insn 23 22 24 6 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (reg/f:SI 87 [ last_inode.2_5 ])
                (const_int 48 [0x30])) [2 last_inode.2_5->i_count+0 S2 A32])) "fs/inode.c":152:28 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ last_inode.2_5 ])
        (nil)))
(insn 24 23 25 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 88 [ _6 ])
            (const_int 0 [0]))) "fs/inode.c":152:16 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(jump_insn 25 24 26 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "fs/inode.c":152:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":153:23 75 {*movsi_internal}
     (nil))
(insn 28 27 29 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg/f:SI 100)) "fs/inode.c":153:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 29 28 30 7 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":154:27 75 {*movsi_internal}
     (nil))
(insn 30 29 31 7 (set (reg:QI 89 [ _7 ])
        (mem:QI (plus:SI (reg/f:SI 101)
                (const_int 51 [0x33])) [0 inode_32->i_dirt+0 S1 A8])) "fs/inode.c":154:27 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 31 30 32 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ _7 ])
            (const_int 0 [0]))) "fs/inode.c":154:20 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ _7 ])
        (nil)))
(jump_insn 32 31 33 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "fs/inode.c":154:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
(note 33 32 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":154:45 75 {*movsi_internal}
     (nil))
(insn 35 34 36 8 (set (reg:QI 90 [ _8 ])
        (mem:QI (plus:SI (reg/f:SI 102)
                (const_int 50 [0x32])) [0 inode_32->i_lock+0 S1 A16])) "fs/inode.c":154:45 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 36 35 37 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _8 ])
            (const_int 0 [0]))) "fs/inode.c":154:36 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ _8 ])
        (nil)))
(jump_insn 37 36 41 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 155)
            (pc))) "fs/inode.c":154:36 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 155)
(code_label 41 37 42 9 41 (nil) [2 uses])
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":149:32 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 44 43 45 10 39 (nil) [1 uses])
(note 45 44 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 45 48 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":149:28 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 151 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "fs/inode.c":149:28 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 46)
(note 151 48 152 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 152 151 153 21 (set (pc)
        (label_ref 49)) 807 {jump}
     (nil)
 -> 49)
(barrier 153 152 155)
(code_label 155 153 154 22 51 (nil) [1 uses])
(note 154 155 156 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 156 154 49 22 (const_int 0 [0]) "fs/inode.c":155:21 843 {nop}
     (nil))
(code_label 49 156 50 11 42 (nil) [1 uses])
(note 50 49 51 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":158:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "fs/inode.c":158:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 95)
(note 53 52 54 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 147 12 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":159:20 75 {*movsi_internal}
     (nil))
(jump_insn 147 54 148 12 (set (pc)
        (label_ref 81)) "fs/inode.c":159:13 807 {jump}
     (nil)
 -> 81)
(barrier 148 147 83)
(code_label 83 148 57 13 46 (nil) [1 uses])
(note 57 83 58 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 13 (set (reg:SI 103)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/inode.c":161:38 75 {*movsi_internal}
     (nil))
(insn 59 58 60 13 (set (reg:SI 104)
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 14 [0xe]))))) "fs/inode.c":161:38 205 {*leasi}
     (nil))
(insn 60 59 61 13 (parallel [
            (set (reg:SI 105)
                (mult:SI (reg:SI 103)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":161:38 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 13 (parallel [
            (set (reg:SI 106)
                (plus:SI (reg:SI 105)
                    (reg:SI 104)))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":161:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105)
        (expr_list:REG_DEAD (reg:SI 104)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 62 61 63 13 (parallel [
            (set (reg/f:SI 107)
                (plus:SI (reg:SI 106)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":161:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 63 62 64 13 (set (reg:HI 91 [ _9 ])
        (mem:HI (reg/f:SI 107) [2 inode_table[i_19].i_num+0 S2 A16])) "fs/inode.c":161:38 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 64 63 65 13 (set (reg:SI 92 [ _10 ])
        (zero_extend:SI (reg:HI 91 [ _9 ]))) "fs/inode.c":160:17 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (nil)))
(insn 65 64 66 13 (set (reg:SI 108)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/inode.c":160:52 75 {*movsi_internal}
     (nil))
(insn 66 65 67 13 (set (reg:SI 109)
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 12 [0xc]))))) "fs/inode.c":160:52 205 {*leasi}
     (nil))
(insn 67 66 68 13 (parallel [
            (set (reg:SI 110)
                (mult:SI (reg:SI 108)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:52 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 69 13 (parallel [
            (set (reg:SI 111)
                (plus:SI (reg:SI 110)
                    (reg:SI 109)))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:52 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_DEAD (reg:SI 109)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 69 68 70 13 (parallel [
            (set (reg/f:SI 112)
                (plus:SI (reg:SI 111)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:52 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 13 (set (reg:HI 93 [ _11 ])
        (mem:HI (reg/f:SI 112) [2 inode_table[i_19].i_dev+0 S2 A32])) "fs/inode.c":160:52 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 71 70 72 13 (set (reg:SI 94 [ _12 ])
        (zero_extend:SI (reg:HI 93 [ _11 ]))) "fs/inode.c":160:17 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
        (nil)))
(insn 72 71 73 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 73 72 74 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 92 [ _10 ])) "fs/inode.c":160:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 74 73 75 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 94 [ _12 ])) "fs/inode.c":160:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 75 74 76 13 (set (reg/f:SI 113)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7341ee5b76c0 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":160:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7341ee5b76c0 *.LC4>)
        (nil)))
(insn 76 75 77 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 113)) "fs/inode.c":160:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 77 76 78 13 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":160:17 75 {*movsi_internal}
     (nil))
(call_insn 78 77 79 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7341ee538f00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":160:17 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 79 78 80 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 80 79 81 13 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":159:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 81 80 82 14 45 (nil) [1 uses])
(note 82 81 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 82 87 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/inode.c":159:27 11 {*cmpsi_1}
     (nil))
(jump_insn 87 86 88 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "fs/inode.c":159:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 83)
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":162:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 90 89 91 15 (set (reg/f:SI 114)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7341ee5b7750 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":162:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7341ee5b7750 *.LC5>)
        (nil)))
(insn 91 90 92 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 114)) "fs/inode.c":162:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 92 91 93 15 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":162:17 75 {*movsi_internal}
     (nil))
(call_insn 93 92 94 15 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":162:17 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 94 93 95 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":162:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 95 94 96 16 44 (nil) [1 uses])
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":164:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 98 97 99 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":164:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 99 98 100 16 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":164:9 812 {*call}
     (nil)
    (nil))
(insn 100 99 149 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":164:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 149 100 150 16 (set (pc)
        (label_ref 112)) "fs/inode.c":165:15 807 {jump}
     (nil)
 -> 112)
(barrier 150 149 116)
(code_label 116 150 103 17 48 (nil) [1 uses])
(note 103 116 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":166:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 105 104 106 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":166:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 106 105 107 17 (call (mem:QI (symbol_ref:SI ("write_inode") [flags 0x3]  <function_decl 0x7341ee540c00 write_inode>) [0 write_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":166:13 812 {*call}
     (nil)
    (nil))
(insn 107 106 108 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":166:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 108 107 109 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":167:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 109 108 110 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":167:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 110 109 111 17 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":167:13 812 {*call}
     (nil)
    (nil))
(insn 111 110 112 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":167:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 112 111 113 18 47 (nil) [1 uses])
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":165:21 75 {*movsi_internal}
     (nil))
(insn 115 114 117 18 (set (reg:QI 95 [ _13 ])
        (mem:QI (plus:SI (reg/f:SI 115)
                (const_int 51 [0x33])) [0 inode_17->i_dirt+0 S1 A8])) "fs/inode.c":165:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 117 115 118 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ _13 ])
            (const_int 0 [0]))) "fs/inode.c":165:16 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 95 [ _13 ])
        (nil)))
(jump_insn 118 117 119 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/inode.c":165:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 116)
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 19 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":169:19 75 {*movsi_internal}
     (nil))
(insn 121 120 123 19 (set (reg:HI 96 [ _14 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 48 [0x30])) [2 inode_17->i_count+0 S2 A32])) "fs/inode.c":169:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 123 121 124 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 96 [ _14 ])
            (const_int 0 [0]))) "fs/inode.c":169:14 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 96 [ _14 ])
        (nil)))
(jump_insn 124 123 125 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "fs/inode.c":169:14 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 122)
(note 125 124 126 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":170:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 127 126 128 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 56 [0x38])) "fs/inode.c":170:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 128 127 129 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/inode.c":170:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 129 128 130 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":170:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 130 129 131 20 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":170:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 131 130 132 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x7341ee540a00 memset>) [0 memset S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":170:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 132 131 133 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":170:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 133 132 134 20 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":171:20 75 {*movsi_internal}
     (nil))
(insn 134 133 135 20 (set (mem:HI (plus:SI (reg/f:SI 117)
                (const_int 48 [0x30])) [2 inode_17->i_count+0 S2 A32])
        (const_int 1 [0x1])) "fs/inode.c":171:20 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 135 134 138 20 (set (reg/f:SI 97 [ _41 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":172:12 75 {*movsi_internal}
     (nil))
(insn 138 135 142 20 (set (reg/f:SI 98 [ <retval> ])
        (reg/f:SI 97 [ _41 ])) "fs/inode.c":172:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _41 ])
        (nil)))
(insn 142 138 143 20 (set (reg/i:SI 0 ax)
        (reg/f:SI 98 [ <retval> ])) "fs/inode.c":173:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98 [ <retval> ])
        (nil)))
(insn 143 142 0 20 (use (reg/i:SI 0 ax)) "fs/inode.c":173:1 -1
     (nil))

;; Function read_inode (read_inode, funcdef_no=9, decl_uid=1460, cgraph_uid=10, symbol_order=10)

scanning new insn with uid = 109.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 MEM:48000
  a1(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:54000
  a2(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:53000
  a4(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a12(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a14(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a16(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a22(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a27(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a28(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a29(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a30(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a34(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a35(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a36(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a43(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 108(l0): point = 0
   Insn 104(l0): point = 3
   Insn 103(l0): point = 5
   Insn 102(l0): point = 7
   Insn 101(l0): point = 9
   Insn 100(l0): point = 11
   Insn 99(l0): point = 13
   Insn 98(l0): point = 15
   Insn 97(l0): point = 17
   Insn 96(l0): point = 19
   Insn 95(l0): point = 21
   Insn 94(l0): point = 23
   Insn 93(l0): point = 25
   Insn 92(l0): point = 27
   Insn 91(l0): point = 29
   Insn 90(l0): point = 31
   Insn 89(l0): point = 33
   Insn 88(l0): point = 35
   Insn 87(l0): point = 37
   Insn 86(l0): point = 39
   Insn 85(l0): point = 41
   Insn 84(l0): point = 43
   Insn 83(l0): point = 45
   Insn 82(l0): point = 47
   Insn 81(l0): point = 49
   Insn 80(l0): point = 51
   Insn 79(l0): point = 53
   Insn 78(l0): point = 55
   Insn 77(l0): point = 57
   Insn 76(l0): point = 59
   Insn 75(l0): point = 61
   Insn 74(l0): point = 63
   Insn 73(l0): point = 65
   Insn 72(l0): point = 67
   Insn 71(l0): point = 69
   Insn 70(l0): point = 71
   Insn 69(l0): point = 73
   Insn 66(l0): point = 76
   Insn 65(l0): point = 78
   Insn 64(l0): point = 80
   Insn 63(l0): point = 82
   Insn 62(l0): point = 84
   Insn 61(l0): point = 86
   Insn 59(l0): point = 89
   Insn 58(l0): point = 91
   Insn 57(l0): point = 93
   Insn 56(l0): point = 95
   Insn 55(l0): point = 97
   Insn 54(l0): point = 99
   Insn 53(l0): point = 101
   Insn 52(l0): point = 103
   Insn 51(l0): point = 105
   Insn 50(l0): point = 107
   Insn 49(l0): point = 109
   Insn 48(l0): point = 111
   Insn 47(l0): point = 113
   Insn 46(l0): point = 115
   Insn 45(l0): point = 117
   Insn 44(l0): point = 119
   Insn 43(l0): point = 121
   Insn 42(l0): point = 123
   Insn 41(l0): point = 125
   Insn 40(l0): point = 127
   Insn 39(l0): point = 129
   Insn 38(l0): point = 131
   Insn 37(l0): point = 133
   Insn 36(l0): point = 135
   Insn 35(l0): point = 137
   Insn 34(l0): point = 139
   Insn 33(l0): point = 141
   Insn 32(l0): point = 143
   Insn 31(l0): point = 145
   Insn 30(l0): point = 147
   Insn 27(l0): point = 150
   Insn 26(l0): point = 152
   Insn 25(l0): point = 154
   Insn 24(l0): point = 156
   Insn 23(l0): point = 158
   Insn 22(l0): point = 160
   Insn 20(l0): point = 163
   Insn 19(l0): point = 165
   Insn 18(l0): point = 167
   Insn 17(l0): point = 169
   Insn 16(l0): point = 171
   Insn 15(l0): point = 173
   Insn 14(l0): point = 175
   Insn 13(l0): point = 177
   Insn 12(l0): point = 179
   Insn 11(l0): point = 181
   Insn 10(l0): point = 183
   Insn 9(l0): point = 185
   Insn 8(l0): point = 187
   Insn 7(l0): point = 189
   Insn 6(l0): point = 191
   Insn 5(l0): point = 193
   Insn 109(l0): point = 195
 a0(r82): [16..195]
 a1(r119): [22..53]
 a2(r127): [22..23]
 a3(r107): [24..55]
 a4(r126): [26..27]
 a5(r125): [30..31]
 a6(r124): [34..35]
 a7(r123): [38..39]
 a8(r122): [42..43]
 a9(r121): [46..47]
 a10(r120): [50..51]
 a11(r106): [56..57]
 a12(r100): [56..71]
 a13(r105): [58..59]
 a14(r104): [60..61]
 a15(r103): [62..63]
 a16(r102): [64..65]
 a17(r101): [66..67]
 a18(r118): [68..69]
 a19(r117): [72..73]
 a20(r116): [83..84]
 a21(r115): [94..95]
 a22(r99): [104..109]
 a23(r98): [110..111]
 a24(r114): [112..113]
 a25(r97): [116..117]
 a26(r96): [118..119]
 a27(r91): [118..131]
 a28(r95): [120..121]
 a29(r94): [122..123]
 a30(r93): [124..125]
 a31(r92): [126..127]
 a32(r113): [128..129]
 a33(r90): [132..133]
 a34(r89): [134..135]
 a35(r87): [134..141]
 a36(r88): [136..137]
 a37(r112): [138..139]
 a38(r86): [142..143]
 a39(r85): [144..145]
 a40(r111): [146..147]
 a41(r110): [157..158]
 a42(r109): [168..169]
 a43(r84): [178..181]
 a44(r83): [182..183]
 a45(r108): [184..185]
Compressing live ranges: from 198 to 80 - 40%
Ranges after the compression:
 a0(r82): [0..79]
 a1(r119): [0..15]
 a2(r127): [0..1]
 a3(r107): [2..15]
 a4(r126): [2..3]
 a5(r125): [4..5]
 a6(r124): [6..7]
 a7(r123): [8..9]
 a8(r122): [10..11]
 a9(r121): [12..13]
 a10(r120): [14..15]
 a11(r106): [16..17]
 a12(r100): [16..29]
 a13(r105): [18..19]
 a14(r104): [20..21]
 a15(r103): [22..23]
 a16(r102): [24..25]
 a17(r101): [26..27]
 a18(r118): [28..29]
 a19(r117): [30..31]
 a20(r116): [32..33]
 a21(r115): [34..35]
 a22(r99): [36..37]
 a23(r98): [38..39]
 a24(r114): [40..41]
 a25(r97): [42..43]
 a26(r96): [44..45]
 a27(r91): [44..55]
 a28(r95): [46..47]
 a29(r94): [48..49]
 a30(r93): [50..51]
 a31(r92): [52..53]
 a32(r113): [54..55]
 a33(r90): [56..57]
 a34(r89): [58..59]
 a35(r87): [58..63]
 a36(r88): [60..61]
 a37(r112): [62..63]
 a38(r86): [64..65]
 a39(r85): [66..67]
 a40(r111): [68..69]
 a41(r110): [70..71]
 a42(r109): [72..73]
 a43(r84): [74..75]
 a44(r83): [76..77]
 a45(r108): [78..79]
  pref0:a21(r115)<-hr0@1500
  pref1:a42(r109)<-hr0@1500
  pref2:a0(r82)<-hr3@1500
  regions=1, blocks=8, points=80
    allocnos=46 (big 0), copies=0, conflicts=0, ranges=46
Disposition:
    0:r82  l0     3   44:r83  l0     0   43:r84  l0     0   39:r85  l0     0
   38:r86  l0     0   35:r87  l0     1   36:r88  l0     0   34:r89  l0     0
   33:r90  l0     0   27:r91  l0     1   31:r92  l0     0   30:r93  l0     0
   29:r94  l0     0   28:r95  l0     0   26:r96  l0     0   25:r97  l0     0
   23:r98  l0     0   22:r99  l0     0   12:r100 l0     1   17:r101 l0     0
   16:r102 l0     0   15:r103 l0     0   14:r104 l0     0   13:r105 l0     0
   11:r106 l0     0    3:r107 l0     1   45:r108 l0     0   42:r109 l0     0
   41:r110 l0     0   40:r111 l0     0   37:r112 l0     0   32:r113 l0     0
   24:r114 l0     0   21:r115 l0     0   20:r116 l0     0   19:r117 l0     0
   18:r118 l0     0    1:r119 l0     0   10:r120 l0     2    9:r121 l0     2
    8:r122 l0     2    7:r123 l0     2    6:r124 l0     2    5:r125 l0     2
    4:r126 l0     2    2:r127 l0     1
+++Costs: overall 5000, reg 5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


read_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,2u} r1={8d} r2={8d} r3={5d,5u} r6={1d,7u} r7={23d,50u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,13u} r17={33d,2u} r18={7d} r19={1d,17u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,8u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,8u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} 
;;    total ref usage 752{589d,162u,1e} in 96{89 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 109 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 109 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 109 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":181:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":181:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:SI ("lock_inode") [flags 0x3]  <function_decl 0x7341ee540f00 lock_inode>) [0 lock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":181:5 812 {*call}
     (nil)
    (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":181:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 9 8 10 2 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":182:31 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 108)
                (const_int 44 [0x2c])) [2 inode_29(D)->i_dev+0 S2 A32])) "fs/inode.c":182:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/inode.c":182:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":182:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 13 12 14 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 84 [ _2 ])) "fs/inode.c":182:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 14 13 15 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":182:16 75 {*movsi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7341ee510000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":182:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":182:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 17 16 18 2 (set (reg:SI 109)
        (reg:SI 0 ax)) "fs/inode.c":182:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])
        (reg:SI 109)) "fs/inode.c":182:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":182:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/inode.c":182:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":183:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 23 22 24 3 (set (reg/f:SI 110)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7341ee5b7870 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":183:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7341ee5b7870 *.LC6>)
        (nil)))
(insn 24 23 25 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 110)) "fs/inode.c":183:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 25 24 26 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":183:9 75 {*movsi_internal}
     (nil))
(call_insn 26 25 27 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":183:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":183:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 28 27 29 4 53 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])) "fs/inode.c":184:19 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 111)
                (const_int 4 [0x4])) [2 sb_32->s_imap_blocks+0 S2 A32])) "fs/inode.c":184:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 32 31 33 4 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/inode.c":184:19 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 87 [ _5 ])
                (plus:SI (reg:SI 86 [ _4 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":184:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 4 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 sb+0 S4 A32])) "fs/inode.c":184:39 75 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (reg/f:SI 112)
                (const_int 6 [0x6])) [2 sb_32->s_zmap_blocks+0 S2 A16])) "fs/inode.c":184:39 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 36 35 37 4 (set (reg:SI 89 [ _7 ])
        (zero_extend:SI (reg:HI 88 [ _6 ]))) "fs/inode.c":184:39 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(insn 37 36 38 4 (parallel [
            (set (reg:SI 90 [ _8 ])
                (plus:SI (reg:SI 87 [ _5 ])
                    (reg:SI 89 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":184:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 4 (set (reg:SI 91 [ _9 ])
        (reg:SI 90 [ _8 ])) "fs/inode.c":184:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(insn 39 38 40 4 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":185:19 75 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:HI 92 [ _10 ])
        (mem:HI (plus:SI (reg/f:SI 113)
                (const_int 46 [0x2e])) [2 inode_29(D)->i_num+0 S2 A16])) "fs/inode.c":185:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 41 40 42 4 (set (reg:SI 93 [ _11 ])
        (zero_extend:SI (reg:HI 92 [ _10 ]))) "fs/inode.c":185:19 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (nil)))
(insn 42 41 43 4 (parallel [
            (set (reg:SI 94 [ _12 ])
                (plus:SI (reg:SI 93 [ _11 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":185:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 4 (set (reg:SI 95 [ _13 ])
        (reg:SI 94 [ _12 ])) "fs/inode.c":185:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (nil)))
(insn 44 43 45 4 (parallel [
            (set (reg:SI 96 [ _14 ])
                (lshiftrt:SI (reg:SI 95 [ _13 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":185:32 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 95 [ _13 ])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 45 44 46 4 (parallel [
            (set (reg:SI 97 [ _15 ])
                (plus:SI (reg:SI 91 [ _9 ])
                    (reg:SI 96 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":184:55 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 46 45 47 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 block+0 S4 A32])
        (reg:SI 97 [ _15 ])) "fs/inode.c":184:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (nil)))
(insn 47 46 48 4 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":186:27 75 {*movsi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:HI 98 [ _16 ])
        (mem:HI (plus:SI (reg/f:SI 114)
                (const_int 44 [0x2c])) [2 inode_29(D)->i_dev+0 S2 A32])) "fs/inode.c":186:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 49 48 50 4 (set (reg:SI 99 [ _17 ])
        (zero_extend:SI (reg:HI 98 [ _16 ]))) "fs/inode.c":186:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 98 [ _16 ])
        (nil)))
(insn 50 49 51 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":186:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 51 50 52 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 block+0 S4 A32])) "fs/inode.c":186:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 52 51 53 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 99 [ _17 ])) "fs/inode.c":186:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 53 52 54 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":186:16 75 {*movsi_internal}
     (nil))
(call_insn 54 53 55 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":186:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 55 54 56 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":186:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 56 55 57 4 (set (reg:SI 115)
        (reg:SI 0 ax)) "fs/inode.c":186:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 57 56 58 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])
        (reg:SI 115)) "fs/inode.c":186:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 58 57 59 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":186:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 60 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/inode.c":186:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 67)
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":187:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 62 61 63 5 (set (reg/f:SI 116)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7341ee5b7900 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":187:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7341ee5b7900 *.LC7>)
        (nil)))
(insn 63 62 64 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 116)) "fs/inode.c":187:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 64 63 65 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":187:9 75 {*movsi_internal}
     (nil))
(call_insn 65 64 66 5 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":187:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 66 65 67 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":187:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 67 66 68 6 54 (nil) [1 uses])
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])) "fs/inode.c":189:30 75 {*movsi_internal}
     (nil))
(insn 70 69 71 6 (set (reg/f:SI 100 [ _18 ])
        (mem/f:SI (reg/f:SI 117) [10 bh_36->b_data+0 S4 A32])) "fs/inode.c":189:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 71 70 72 6 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":190:20 75 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (reg:HI 101 [ _19 ])
        (mem:HI (plus:SI (reg/f:SI 118)
                (const_int 46 [0x2e])) [2 inode_29(D)->i_num+0 S2 A16])) "fs/inode.c":190:20 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 73 72 74 6 (set (reg:SI 102 [ _20 ])
        (zero_extend:SI (reg:HI 101 [ _19 ]))) "fs/inode.c":190:20 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 101 [ _19 ])
        (nil)))
(insn 74 73 75 6 (parallel [
            (set (reg:SI 103 [ _21 ])
                (plus:SI (reg:SI 102 [ _20 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:28 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 6 (set (reg:SI 104 [ _22 ])
        (reg:SI 103 [ _21 ])) "fs/inode.c":190:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103 [ _21 ])
        (nil)))
(insn 76 75 77 6 (parallel [
            (set (reg:SI 105 [ _23 ])
                (and:SI (reg:SI 104 [ _22 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:33 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 6 (parallel [
            (set (reg:SI 106 [ _24 ])
                (ashift:SI (reg:SI 105 [ _23 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:13 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 6 (parallel [
            (set (reg/f:SI 107 [ _25 ])
                (plus:SI (reg/f:SI 100 [ _18 ])
                    (reg:SI 106 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
        (expr_list:REG_DEAD (reg/f:SI 100 [ _18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 79 78 80 6 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 80 79 81 6 (set (reg:SI 120)
        (mem:SI (reg/f:SI 107 [ _25 ]) [13 *_25+0 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 81 80 82 6 (set (mem:SI (reg/f:SI 119) [13 MEM[(struct d_inode *)inode_29(D)]+0 S4 A32])
        (reg:SI 120)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(insn 82 81 83 6 (set (reg:SI 121)
        (mem:SI (plus:SI (reg/f:SI 107 [ _25 ])
                (const_int 4 [0x4])) [13 *_25+4 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 83 82 84 6 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 4 [0x4])) [13 MEM[(struct d_inode *)inode_29(D)]+4 S4 A32])
        (reg:SI 121)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 84 83 85 6 (set (reg:SI 122)
        (mem:SI (plus:SI (reg/f:SI 107 [ _25 ])
                (const_int 8 [0x8])) [13 *_25+8 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 85 84 86 6 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 8 [0x8])) [13 MEM[(struct d_inode *)inode_29(D)]+8 S4 A32])
        (reg:SI 122)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 86 85 87 6 (set (reg:SI 123)
        (mem:SI (plus:SI (reg/f:SI 107 [ _25 ])
                (const_int 12 [0xc])) [13 *_25+12 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 87 86 88 6 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 12 [0xc])) [13 MEM[(struct d_inode *)inode_29(D)]+12 S4 A32])
        (reg:SI 123)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 88 87 89 6 (set (reg:SI 124)
        (mem:SI (plus:SI (reg/f:SI 107 [ _25 ])
                (const_int 16 [0x10])) [13 *_25+16 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 89 88 90 6 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 16 [0x10])) [13 MEM[(struct d_inode *)inode_29(D)]+16 S4 A32])
        (reg:SI 124)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 90 89 91 6 (set (reg:SI 125)
        (mem:SI (plus:SI (reg/f:SI 107 [ _25 ])
                (const_int 20 [0x14])) [13 *_25+20 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 91 90 92 6 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 20 [0x14])) [13 MEM[(struct d_inode *)inode_29(D)]+20 S4 A32])
        (reg:SI 125)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 92 91 93 6 (set (reg:SI 126)
        (mem:SI (plus:SI (reg/f:SI 107 [ _25 ])
                (const_int 24 [0x18])) [13 *_25+24 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 93 92 94 6 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 24 [0x18])) [13 MEM[(struct d_inode *)inode_29(D)]+24 S4 A32])
        (reg:SI 126)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 94 93 95 6 (set (reg:SI 127)
        (mem:SI (plus:SI (reg/f:SI 107 [ _25 ])
                (const_int 28 [0x1c])) [13 *_25+28 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107 [ _25 ])
        (nil)))
(insn 95 94 96 6 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 28 [0x1c])) [13 MEM[(struct d_inode *)inode_29(D)]+28 S4 A32])
        (reg:SI 127)) "fs/inode.c":188:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127)
        (expr_list:REG_DEAD (reg/f:SI 119)
            (nil))))
(insn 96 95 97 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":191:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 97 96 98 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 bh+0 S4 A32])) "fs/inode.c":191:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 98 97 99 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":191:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 99 98 100 6 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":191:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 100 99 101 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":191:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 101 100 102 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":192:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 102 101 103 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":192:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 103 102 104 6 (call (mem:QI (symbol_ref:SI ("unlock_inode") [flags 0x3]  <function_decl 0x7341ee540100 unlock_inode>) [0 unlock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":192:5 812 {*call}
     (nil)
    (nil))
(insn 104 103 107 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":192:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 107 104 108 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 0 7 (const_int 0 [0]) "fs/inode.c":193:1 843 {nop}
     (nil))

;; Function iget (iget, funcdef_no=10, decl_uid=1142, cgraph_uid=11, symbol_order=11)

scanning new insn with uid = 219.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 31 n_edges 43 count 33 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 29 30 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 24, multiple latches: 10 7 20
;;  depth 1, outer 0
;;  nodes: 24 10 7 20 16 30 29 15 14 12 11 9 8 6 5 13
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 2, outer 1
;;  nodes: 15 14 13
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 24 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 24 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 24 }
;; 11 succs { 12 21 }
;; 12 succs { 15 }
;; 13 succs { 30 14 }
;; 14 succs { 15 }
;; 15 succs { 13 29 }
;; 29 succs { 16 }
;; 30 succs { 16 }
;; 16 succs { 17 20 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 28 }
;; 20 succs { 24 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 28 }
;; 24 succs { 5 25 }
;; 25 succs { 26 27 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a26 (r93,l0) best Q_REGS, allocno Q_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:24000
  a2(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:66000
  a11(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a16(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a23(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a24(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a25(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a27(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a47(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 195(l0): point = 0
   Insn 194(l0): point = 2
   Insn 190(l0): point = 4
   Insn 187(l0): point = 7
   Insn 186(l0): point = 9
   Insn 185(l0): point = 11
   Insn 184(l0): point = 13
   Insn 183(l0): point = 15
   Insn 182(l0): point = 17
   Insn 181(l0): point = 19
   Insn 180(l0): point = 21
   Insn 179(l0): point = 23
   Insn 178(l0): point = 25
   Insn 177(l0): point = 27
   Insn 176(l0): point = 29
   Insn 175(l0): point = 31
   Insn 174(l0): point = 33
   Insn 173(l0): point = 35
   Insn 211(l0): point = 38
   Insn 168(l0): point = 40
   Insn 166(l0): point = 43
   Insn 165(l0): point = 45
   Insn 209(l0): point = 48
   Insn 155(l0): point = 50
   Insn 152(l0): point = 53
   Insn 151(l0): point = 55
   Insn 150(l0): point = 57
   Insn 149(l0): point = 59
   Insn 147(l0): point = 62
   Insn 146(l0): point = 64
   Insn 205(l0): point = 67
   Insn 122(l0): point = 69
   Insn 119(l0): point = 72
   Insn 118(l0): point = 74
   Insn 117(l0): point = 76
   Insn 116(l0): point = 78
   Insn 114(l0): point = 81
   Insn 113(l0): point = 83
   Insn 112(l0): point = 85
   Insn 111(l0): point = 87
   Insn 110(l0): point = 89
   Insn 109(l0): point = 91
   Insn 108(l0): point = 93
   Insn 107(l0): point = 95
   Insn 28(l0): point = 98
   Insn 27(l0): point = 100
   Insn 26(l0): point = 102
   Insn 25(l0): point = 104
   Insn 24(l0): point = 106
   Insn 163(l0): point = 109
   Insn 162(l0): point = 111
   Insn 160(l0): point = 113
   Insn 201(l0): point = 116
   Insn 60(l0): point = 118
   Insn 59(l0): point = 120
   Insn 199(l0): point = 123
   Insn 37(l0): point = 125
   Insn 207(l0): point = 128
   Insn 141(l0): point = 130
   Insn 140(l0): point = 132
   Insn 139(l0): point = 134
   Insn 138(l0): point = 136
   Insn 137(l0): point = 138
   Insn 136(l0): point = 140
   Insn 135(l0): point = 142
   Insn 134(l0): point = 144
   Insn 133(l0): point = 146
   Insn 132(l0): point = 148
   Insn 131(l0): point = 150
   Insn 130(l0): point = 152
   Insn 129(l0): point = 154
   Insn 128(l0): point = 156
   Insn 127(l0): point = 158
   Insn 105(l0): point = 161
   Insn 104(l0): point = 163
   Insn 218(l0): point = 166
   Insn 214(l0): point = 169
   Insn 99(l0): point = 172
   Insn 98(l0): point = 174
   Insn 92(l0): point = 177
   Insn 86(l0): point = 180
   Insn 85(l0): point = 182
   Insn 84(l0): point = 184
   Insn 83(l0): point = 186
   Insn 82(l0): point = 188
   Insn 81(l0): point = 190
   Insn 80(l0): point = 192
   Insn 79(l0): point = 194
   Insn 203(l0): point = 197
   Insn 75(l0): point = 199
   Insn 73(l0): point = 202
   Insn 72(l0): point = 204
   Insn 71(l0): point = 206
   Insn 70(l0): point = 208
   Insn 69(l0): point = 210
   Insn 68(l0): point = 212
   Insn 67(l0): point = 214
   Insn 66(l0): point = 216
   Insn 65(l0): point = 218
   Insn 56(l0): point = 221
   Insn 55(l0): point = 223
   Insn 54(l0): point = 225
   Insn 53(l0): point = 227
   Insn 52(l0): point = 229
   Insn 50(l0): point = 232
   Insn 49(l0): point = 234
   Insn 48(l0): point = 236
   Insn 47(l0): point = 238
   Insn 46(l0): point = 240
   Insn 45(l0): point = 242
   Insn 44(l0): point = 244
   Insn 43(l0): point = 246
   Insn 42(l0): point = 248
   Insn 34(l0): point = 251
   Insn 33(l0): point = 253
   Insn 32(l0): point = 255
   Insn 31(l0): point = 257
   Insn 30(l0): point = 259
   Insn 197(l0): point = 262
   Insn 20(l0): point = 264
   Insn 19(l0): point = 266
   Insn 18(l0): point = 268
   Insn 17(l0): point = 270
   Insn 16(l0): point = 272
   Insn 13(l0): point = 275
   Insn 12(l0): point = 277
   Insn 11(l0): point = 279
   Insn 10(l0): point = 281
   Insn 9(l0): point = 283
   Insn 8(l0): point = 285
   Insn 6(l0): point = 288
   Insn 5(l0): point = 290
   Insn 219(l0): point = 292
 a0(r100): [3..4]
 a1(r99): [67..69] [48..50] [38..40] [5..7]
 a2(r129): [18..19]
 a3(r98): [18..21]
 a4(r128): [22..23]
 a5(r127): [26..27]
 a6(r97): [26..29]
 a7(r126): [30..31]
 a8(r125): [34..35]
 a9(r96): [112..113]
 a10(r82): [90..292]
 a11(r124): [131..132]
 a12(r123): [137..138]
 a13(r95): [139..140]
 a14(r122): [141..142]
 a15(r121): [143..144]
 a16(r120): [145..146]
 a17(r118): [145..150]
 a18(r119): [147..148]
 a19(r117): [92..93]
 a20(r94): [183..184]
 a21(r116): [185..186]
 a22(r115): [187..188]
 a23(r114): [189..190]
 a24(r112): [189..194]
 a25(r113): [191..192]
 a26(r93): [205..206]
 a27(r111): [207..208]
 a28(r110): [211..212]
 a29(r92): [211..214]
 a30(r91): [215..216]
 a31(r109): [217..218]
 a32(r108): [119..120]
 a33(r90): [224..225]
 a34(r89): [226..227]
 a35(r107): [228..229]
 a36(r88): [235..236]
 a37(r87): [237..238]
 a38(r106): [239..240]
 a39(r86): [254..255]
 a40(r85): [256..257]
 a41(r105): [258..259]
 a42(r84): [101..102]
 a43(r83): [103..104]
 a44(r104): [105..106]
 a45(r103): [265..266]
 a46(r102): [269..270]
 a47(r101): [282..283]
Compressing live ranges: from 295 to 90 - 30%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r99): [14..19] [2..3]
 a2(r129): [4..5]
 a3(r98): [4..5]
 a4(r128): [6..7]
 a5(r127): [8..9]
 a6(r97): [8..9]
 a7(r126): [10..11]
 a8(r125): [12..13]
 a9(r96): [28..29]
 a10(r82): [20..89]
 a11(r124): [32..33]
 a12(r123): [34..35]
 a13(r95): [36..37]
 a14(r122): [38..39]
 a15(r121): [40..41]
 a16(r120): [42..43]
 a17(r118): [42..45]
 a18(r119): [44..45]
 a19(r117): [20..21]
 a20(r94): [46..47]
 a21(r116): [48..49]
 a22(r115): [50..51]
 a23(r114): [52..53]
 a24(r112): [52..55]
 a25(r113): [54..55]
 a26(r93): [56..57]
 a27(r111): [58..59]
 a28(r110): [60..61]
 a29(r92): [60..61]
 a30(r91): [62..63]
 a31(r109): [64..65]
 a32(r108): [30..31]
 a33(r90): [66..67]
 a34(r89): [68..69]
 a35(r107): [70..71]
 a36(r88): [72..73]
 a37(r87): [74..75]
 a38(r106): [76..77]
 a39(r86): [78..79]
 a40(r85): [80..81]
 a41(r105): [82..83]
 a42(r84): [22..23]
 a43(r83): [24..25]
 a44(r104): [26..27]
 a45(r103): [84..85]
 a46(r102): [86..87]
 a47(r101): [88..89]
  pref0:a46(r102)<-hr0@1500
  pref1:a0(r100)<-hr0@1500
  pref2:a10(r82)<-hr3@1500
  regions=1, blocks=31, points=90
    allocnos=48 (big 0), copies=0, conflicts=0, ranges=49
Disposition:
   10:r82  l0     3   43:r83  l0     0   42:r84  l0     0   40:r85  l0     0
   39:r86  l0     0   37:r87  l0     0   36:r88  l0     0   34:r89  l0     0
   33:r90  l0     0   30:r91  l0     0   29:r92  l0     1   26:r93  l0     0
   20:r94  l0     0   13:r95  l0     0    9:r96  l0     0    6:r97  l0     1
    3:r98  l0     1    1:r99  l0     0    0:r100 l0     0   47:r101 l0     0
   46:r102 l0     0   45:r103 l0     0   44:r104 l0     0   41:r105 l0     0
   38:r106 l0     0   35:r107 l0     0   32:r108 l0     0   31:r109 l0     0
   28:r110 l0     0   27:r111 l0     0   24:r112 l0     1   25:r113 l0     0
   23:r114 l0     0   22:r115 l0     0   21:r116 l0     0   19:r117 l0     0
   17:r118 l0     1   18:r119 l0     0   16:r120 l0     0   15:r121 l0     0
   14:r122 l0     0   12:r123 l0     0   11:r124 l0     0    8:r125 l0     0
    7:r126 l0     0    5:r127 l0     0    4:r128 l0     0    2:r129 l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


iget

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,3u} r1={9d} r2={9d} r3={2d,2u} r6={1d,30u} r7={22d,73u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,38u} r17={45d,13u} r18={8d} r19={1d,67u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,10u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={4d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} 
;;    total ref usage 954{671d,283u,0e} in 133{125 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 219 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 219 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 219 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":199:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "fs/inode.c":199:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 14)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":200:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 9 8 10 3 (set (reg/f:SI 101)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7341ee5b7ab0 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":200:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7341ee5b7ab0 *.LC8>)
        (nil)))
(insn 10 9 11 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 101)) "fs/inode.c":200:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 11 10 12 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":200:9 75 {*movsi_internal}
     (nil))
(call_insn 12 11 13 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":200:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 13 12 14 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":200:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 14 13 15 4 56 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 16 15 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_empty_inode") [flags 0x3]  <function_decl 0x7341ee515300 get_empty_inode>) [0 get_empty_inode S1 A8])
            (const_int 0 [0]))) "fs/inode.c":201:13 823 {*call_value}
     (nil)
    (nil))
(insn 17 16 18 4 (set (reg:SI 102)
        (reg:SI 0 ax)) "fs/inode.c":201:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 18 17 19 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 empty+0 S4 A32])
        (reg:SI 102)) "fs/inode.c":201:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 103)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":202:11 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 20 19 197 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg/f:SI 103)) "fs/inode.c":202:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(jump_insn 197 20 198 4 (set (pc)
        (label_ref 158)) "fs/inode.c":203:11 807 {jump}
     (nil)
 -> 158)
(barrier 198 197 161)
(code_label 161 198 23 5 71 (nil) [1 uses])
(note 23 161 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":204:18 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 104)
                (const_int 44 [0x2c])) [2 inode_20->i_dev+0 S2 A32])) "fs/inode.c":204:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 26 25 27 5 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/inode.c":204:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (reg:SI 84 [ _2 ]))) "fs/inode.c":204:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/inode.c":204:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":204:41 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 105)
                (const_int 46 [0x2e])) [2 inode_20->i_num+0 S2 A16])) "fs/inode.c":204:41 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 32 31 33 6 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/inode.c":204:41 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 nr+0 S4 A32])
            (reg:SI 86 [ _4 ]))) "fs/inode.c":204:33 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/inode.c":204:33 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
(code_label 35 34 36 7 58 (nil) [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 199 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":205:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 199 37 200 7 (set (pc)
        (label_ref 158)) "fs/inode.c":206:13 807 {jump}
     (nil)
 -> 158)
(barrier 200 199 40)
(code_label 40 200 41 8 59 (nil) [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":208:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 43 42 44 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":208:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 44 43 45 8 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":208:9 812 {*call}
     (nil)
    (nil))
(insn 45 44 46 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":208:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 46 45 47 8 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":209:18 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 106)
                (const_int 44 [0x2c])) [2 inode_20->i_dev+0 S2 A32])) "fs/inode.c":209:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 48 47 49 8 (set (reg:SI 88 [ _6 ])
        (zero_extend:SI (reg:HI 87 [ _5 ]))) "fs/inode.c":209:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (reg:SI 88 [ _6 ]))) "fs/inode.c":209:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (nil)))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/inode.c":209:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":209:41 75 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 107)
                (const_int 46 [0x2e])) [2 inode_20->i_num+0 S2 A16])) "fs/inode.c":209:41 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 54 53 55 9 (set (reg:SI 90 [ _8 ])
        (zero_extend:SI (reg:HI 89 [ _7 ]))) "fs/inode.c":209:41 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (nil)))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 nr+0 S4 A32])
            (reg:SI 90 [ _8 ]))) "fs/inode.c":209:33 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "fs/inode.c":209:33 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
(code_label 57 56 58 10 60 (nil) [1 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg/f:SI 108)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":210:19 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 60 59 201 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg/f:SI 108)) "fs/inode.c":210:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(jump_insn 201 60 202 10 (set (pc)
        (label_ref 158)) "fs/inode.c":211:13 807 {jump}
     (nil)
 -> 158)
(barrier 202 201 63)
(code_label 63 202 64 11 61 (nil) [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":213:14 75 {*movsi_internal}
     (nil))
(insn 66 65 67 11 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 109)
                (const_int 48 [0x30])) [2 inode_20->i_count+0 S2 A32])) "fs/inode.c":213:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 67 66 68 11 (parallel [
            (set (reg:HI 92 [ _11 ])
                (plus:HI (reg:HI 91 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":213:23 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 69 11 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":213:23 75 {*movsi_internal}
     (nil))
(insn 69 68 70 11 (set (mem:HI (plus:SI (reg/f:SI 110)
                (const_int 48 [0x30])) [2 inode_20->i_count+0 S2 A32])
        (reg:HI 92 [ _11 ])) "fs/inode.c":213:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_DEAD (reg:HI 92 [ _11 ])
            (nil))))
(insn 70 69 71 11 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":214:18 75 {*movsi_internal}
     (nil))
(insn 71 70 72 11 (set (reg:QI 93 [ _12 ])
        (mem:QI (plus:SI (reg/f:SI 111)
                (const_int 53 [0x35])) [0 inode_20->i_mount+0 S1 A8])) "fs/inode.c":214:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 72 71 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ _12 ])
            (const_int 0 [0]))) "fs/inode.c":214:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 93 [ _12 ])
        (nil)))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/inode.c":214:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 144)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 203 12 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":217:20 75 {*movsi_internal}
     (nil))
(jump_insn 203 75 204 12 (set (pc)
        (label_ref 93)) "fs/inode.c":217:13 807 {jump}
     (nil)
 -> 93)
(barrier 204 203 95)
(code_label 95 204 78 13 66 (nil) [1 uses])
(note 78 95 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg/f:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x7341ef90ae10 super_block>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":218:35 75 {*movsi_internal}
     (nil))
(insn 80 79 81 13 (set (reg:SI 113)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/inode.c":218:35 75 {*movsi_internal}
     (nil))
(insn 81 80 82 13 (parallel [
            (set (reg:SI 114)
                (mult:SI (reg:SI 113)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":218:35 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 13 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg/f:SI 112)
                    (reg:SI 114)))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":218:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_DEAD (reg/f:SI 112)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 83 82 84 13 (parallel [
            (set (reg/f:SI 116)
                (plus:SI (reg:SI 115)
                    (const_int 92 [0x5c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":218:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 83 85 13 (set (reg/f:SI 94 [ _13 ])
        (mem/f:SI (reg/f:SI 116) [5 super_block[i_21].s_imount+0 S4 A32])) "fs/inode.c":218:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 85 84 86 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
            (reg/f:SI 94 [ _13 ]))) "fs/inode.c":218:20 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _13 ])
        (nil)))
(jump_insn 86 85 91 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 217)
            (pc))) "fs/inode.c":218:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 217)
(note 91 86 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":217:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 93 92 94 15 63 (nil) [1 uses])
(note 94 93 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 94 99 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/inode.c":217:27 11 {*cmpsi_1}
     (nil))
(jump_insn 99 98 213 15 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "fs/inode.c":217:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 95)
(note 213 99 214 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(jump_insn 214 213 215 29 (set (pc)
        (label_ref 100)) 807 {jump}
     (nil)
 -> 100)
(barrier 215 214 217)
(code_label 217 215 216 30 73 (nil) [1 uses])
(note 216 217 218 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 218 216 100 30 (const_int 0 [0]) "fs/inode.c":219:21 843 {nop}
     (nil))
(code_label 100 218 101 16 65 (nil) [1 uses])
(note 101 100 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 101 105 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/inode.c":220:16 11 {*cmpsi_1}
     (nil))
(jump_insn 105 104 106 16 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "fs/inode.c":220:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 125)
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":221:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 108 107 109 17 (set (reg/f:SI 117)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7341ee5b7b40 *.LC9>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":221:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7341ee5b7b40 *.LC9>)
        (nil)))
(insn 109 108 110 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 117)) "fs/inode.c":221:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 110 109 111 17 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":221:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 111 110 112 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7341ee538f00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":221:17 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 112 111 113 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":221:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 113 112 114 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 empty+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":222:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 114 113 115 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "fs/inode.c":222:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 120)
(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":223:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 117 116 118 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 empty+0 S4 A32])) "fs/inode.c":223:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 118 117 119 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x3]  <function_decl 0x7341ee4d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":223:21 812 {*call}
     (nil)
    (nil))
(insn 119 118 120 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":223:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 120 119 121 19 68 (nil) [1 uses])
(note 121 120 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 205 19 (set (reg/f:SI 99 [ _22 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":224:24 75 {*movsi_internal}
     (nil))
(jump_insn 205 122 206 19 (set (pc)
        (label_ref 188)) "fs/inode.c":224:24 807 {jump}
     (nil)
 -> 188)
(barrier 206 205 125)
(code_label 125 206 126 20 67 (nil) [1 uses])
(note 126 125 127 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":226:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 128 127 129 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":226:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 129 128 130 20 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x3]  <function_decl 0x7341ee4d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":226:13 812 {*call}
     (nil)
    (nil))
(insn 130 129 131 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":226:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 131 130 132 20 (set (reg/f:SI 118)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x7341ef90ae10 super_block>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":227:33 75 {*movsi_internal}
     (nil))
(insn 132 131 133 20 (set (reg:SI 119)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/inode.c":227:33 75 {*movsi_internal}
     (nil))
(insn 133 132 134 20 (parallel [
            (set (reg:SI 120)
                (mult:SI (reg:SI 119)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":227:33 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 20 (parallel [
            (set (reg:SI 121)
                (plus:SI (reg/f:SI 118)
                    (reg:SI 120)))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":227:33 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg/f:SI 118)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 135 134 136 20 (parallel [
            (set (reg/f:SI 122)
                (plus:SI (reg:SI 121)
                    (const_int 84 [0x54])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":227:33 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 121)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 20 (set (reg:HI 95 [ _14 ])
        (mem:HI (reg/f:SI 122) [2 super_block[i_21].s_dev+0 S2 A32])) "fs/inode.c":227:33 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 137 136 138 20 (set (reg:SI 123)
        (zero_extend:SI (reg:HI 95 [ _14 ]))) "fs/inode.c":227:17 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 95 [ _14 ])
        (nil)))
(insn 138 137 139 20 (set (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
        (reg:SI 123)) "fs/inode.c":227:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 139 138 140 20 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 nr+0 S4 A32])
        (const_int 1 [0x1])) "fs/inode.c":228:16 75 {*movsi_internal}
     (nil))
(insn 140 139 141 20 (set (reg/f:SI 124)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":229:19 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 141 140 207 20 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg/f:SI 124)) "fs/inode.c":229:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(jump_insn 207 141 208 20 (set (pc)
        (label_ref 158)) "fs/inode.c":230:13 807 {jump}
     (nil)
 -> 158)
(barrier 208 207 144)
(code_label 144 208 145 21 62 (nil) [1 uses])
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 empty+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":232:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 147 146 148 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) "fs/inode.c":232:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 153)
(note 148 147 149 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":233:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 150 149 151 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 empty+0 S4 A32])) "fs/inode.c":233:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 151 150 152 22 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x3]  <function_decl 0x7341ee4d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":233:13 812 {*call}
     (nil)
    (nil))
(insn 152 151 153 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":233:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 153 152 154 23 70 (nil) [1 uses])
(note 154 153 155 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 209 23 (set (reg/f:SI 99 [ _22 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":234:16 75 {*movsi_internal}
     (nil))
(jump_insn 209 155 210 23 (set (pc)
        (label_ref 188)) "fs/inode.c":234:16 807 {jump}
     (nil)
 -> 188)
(barrier 210 209 158)
(code_label 158 210 159 24 57 (nil) [4 uses])
(note 159 158 160 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 162 24 (set (reg/f:SI 96 [ _15 ])
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 1792 [0x700]))))) "fs/inode.c":203:29 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                (const_int 1792 [0x700])))
        (nil)))
(insn 162 160 163 24 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
            (reg/f:SI 96 [ _15 ]))) "fs/inode.c":203:18 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _15 ])
        (nil)))
(jump_insn 163 162 164 24 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) "fs/inode.c":203:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 161)
(note 164 163 165 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 empty+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":236:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 166 165 167 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) "fs/inode.c":236:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 171)
(note 167 166 168 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 211 26 (set (reg/f:SI 99 [ _22 ])
        (const_int 0 [0])) "fs/inode.c":237:16 75 {*movsi_internal}
     (nil))
(jump_insn 211 168 212 26 (set (pc)
        (label_ref 188)) "fs/inode.c":237:16 807 {jump}
     (nil)
 -> 188)
(barrier 212 211 171)
(code_label 171 212 172 27 72 (nil) [1 uses])
(note 172 171 173 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 27 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 empty+0 S4 A32])) "fs/inode.c":238:11 75 {*movsi_internal}
     (nil))
(insn 174 173 175 27 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg/f:SI 125)) "fs/inode.c":238:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 175 174 176 27 (set (reg:SI 126)
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/inode.c":239:18 75 {*movsi_internal}
     (nil))
(insn 176 175 177 27 (set (reg:HI 97 [ _16 ])
        (subreg:HI (reg:SI 126) 0)) "fs/inode.c":239:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 177 176 178 27 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":239:18 75 {*movsi_internal}
     (nil))
(insn 178 177 179 27 (set (mem:HI (plus:SI (reg/f:SI 127)
                (const_int 44 [0x2c])) [2 inode_35->i_dev+0 S2 A32])
        (reg:HI 97 [ _16 ])) "fs/inode.c":239:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (expr_list:REG_DEAD (reg:HI 97 [ _16 ])
            (nil))))
(insn 179 178 180 27 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 nr+0 S4 A32])) "fs/inode.c":240:18 75 {*movsi_internal}
     (nil))
(insn 180 179 181 27 (set (reg:HI 98 [ _17 ])
        (subreg:HI (reg:SI 128) 0)) "fs/inode.c":240:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 181 180 182 27 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":240:18 75 {*movsi_internal}
     (nil))
(insn 182 181 183 27 (set (mem:HI (plus:SI (reg/f:SI 129)
                (const_int 46 [0x2e])) [2 inode_35->i_num+0 S2 A16])
        (reg:HI 98 [ _17 ])) "fs/inode.c":240:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_DEAD (reg:HI 98 [ _17 ])
            (nil))))
(insn 183 182 184 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":241:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 184 183 185 27 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":241:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 185 184 186 27 (call (mem:QI (symbol_ref:SI ("read_inode") [flags 0x3]  <function_decl 0x7341ee548b00 read_inode>) [0 read_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":241:5 812 {*call}
     (nil)
    (nil))
(insn 186 185 187 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":241:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 187 186 188 27 (set (reg/f:SI 99 [ _22 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":242:12 75 {*movsi_internal}
     (nil))
(code_label 188 187 189 28 69 (nil) [3 uses])
(note 189 188 190 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 194 28 (set (reg/f:SI 100 [ <retval> ])
        (reg/f:SI 99 [ _22 ])) "fs/inode.c":243:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ _22 ])
        (nil)))
(insn 194 190 195 28 (set (reg/i:SI 0 ax)
        (reg/f:SI 100 [ <retval> ])) "fs/inode.c":243:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100 [ <retval> ])
        (nil)))
(insn 195 194 0 28 (use (reg/i:SI 0 ax)) "fs/inode.c":243:1 -1
     (nil))

;; Function _bmap (_bmap, funcdef_no=11, decl_uid=1482, cgraph_uid=12, symbol_order=12)

scanning new insn with uid = 440.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 48 n_edges 75 count 48 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 12 }
;; 7 succs { 8 11 }
;; 8 succs { 9 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 47 }
;; 12 succs { 13 26 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 47 }
;; 19 succs { 20 21 }
;; 20 succs { 47 }
;; 21 succs { 22 25 }
;; 22 succs { 23 25 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 47 }
;; 26 succs { 27 30 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 47 }
;; 32 succs { 33 34 }
;; 33 succs { 47 }
;; 34 succs { 35 38 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 47 }
;; 40 succs { 41 42 }
;; 41 succs { 47 }
;; 42 succs { 43 46 }
;; 43 succs { 44 46 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 1 }
Removing SCRATCH to p248 in insn #67 (nop 3)
rescanning insn with uid = 67.
Removing SCRATCH to p249 in insn #125 (nop 3)
rescanning insn with uid = 125.
Removing SCRATCH to p250 in insn #249 (nop 3)
rescanning insn with uid = 249.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 48 n_edges 75 count 48 (    1)

Pass 0 for finding pseudo/allocno costs

    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r243,l0) best AREG, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r239,l0) best AREG, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r233,l0) best AREG, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r219,l0) best DREG, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r209,l0) best AREG, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r205,l0) best AREG, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r196,l0) best DREG, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a149 (r181,l0) best DREG, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r170,l0) best AREG, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r126,l0) best AREG, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a159 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r170,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:29000
  a2(r82,l0) costs: AREG:28000 DREG:28000 CREG:28000 BREG:28000 SIREG:28000 DIREG:28000 AD_REGS:28000 CLOBBERED_REGS:28000 Q_REGS:28000 NON_Q_REGS:28000 TLS_GOTBASE_REGS:28000 GENERAL_REGS:28000 MEM:138000
  a3(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a8(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a10(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r243,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a13(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a20(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a21(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a22(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r239,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a25(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a31(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a33(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a34(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a35(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a36(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r233,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a39(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a46(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a47(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a48(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a49(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a50(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r228,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a52(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a55(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a57(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a59(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a62(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a63(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a64(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a65(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a66(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a67(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a68(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:18000
  a69(r219,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a70(r220,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a71(r250,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a72(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a73(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a74(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a75(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a76(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a78(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a79(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a80(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a81(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a82(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a83(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a84(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a85(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a86(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a87(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a88(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a89(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a90(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a91(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a92(r209,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a93(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a94(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a95(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a96(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a97(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a98(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a99(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a100(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a101(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a102(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a103(r205,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a104(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a105(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a106(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a107(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a108(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a109(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a110(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a111(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a112(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a113(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a114(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a115(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a116(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a117(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a118(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a119(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a120(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:18000
  a121(r196,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a122(r197,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a123(r249,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a124(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a125(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a126(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a127(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a128(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a129(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a130(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a131(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a132(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a133(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a134(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a135(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a136(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a137(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a138(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a139(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a140(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a141(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a142(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a143(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a144(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a145(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a146(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a147(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a148(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:18000
  a149(r181,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a150(r182,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a151(r248,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a152(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a153(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a154(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a155(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a156(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a157(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a158(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a159(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a160(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a161(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a162(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a163(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a164(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a165(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a166(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a167(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 422(l0): point = 0
   Insn 421(l0): point = 2
   Insn 417(l0): point = 4
   Insn 414(l0): point = 7
   Insn 413(l0): point = 9
   Insn 412(l0): point = 11
   Insn 411(l0): point = 13
   Insn 410(l0): point = 15
   Insn 409(l0): point = 17
   Insn 406(l0): point = 20
   Insn 405(l0): point = 22
   Insn 404(l0): point = 24
   Insn 403(l0): point = 26
   Insn 402(l0): point = 28
   Insn 401(l0): point = 30
   Insn 400(l0): point = 32
   Insn 399(l0): point = 34
   Insn 398(l0): point = 36
   Insn 397(l0): point = 38
   Insn 396(l0): point = 40
   Insn 394(l0): point = 43
   Insn 393(l0): point = 45
   Insn 392(l0): point = 47
   Insn 391(l0): point = 49
   Insn 390(l0): point = 51
   Insn 389(l0): point = 53
   Insn 388(l0): point = 55
   Insn 387(l0): point = 57
   Insn 386(l0): point = 59
   Insn 385(l0): point = 61
   Insn 384(l0): point = 63
   Insn 383(l0): point = 65
   Insn 381(l0): point = 68
   Insn 380(l0): point = 70
   Insn 378(l0): point = 73
   Insn 377(l0): point = 75
   Insn 376(l0): point = 77
   Insn 375(l0): point = 79
   Insn 374(l0): point = 81
   Insn 373(l0): point = 83
   Insn 372(l0): point = 85
   Insn 371(l0): point = 87
   Insn 370(l0): point = 89
   Insn 369(l0): point = 91
   Insn 368(l0): point = 93
   Insn 438(l0): point = 96
   Insn 363(l0): point = 98
   Insn 361(l0): point = 101
   Insn 360(l0): point = 103
   Insn 359(l0): point = 105
   Insn 358(l0): point = 107
   Insn 357(l0): point = 109
   Insn 356(l0): point = 111
   Insn 355(l0): point = 113
   Insn 354(l0): point = 115
   Insn 353(l0): point = 117
   Insn 352(l0): point = 119
   Insn 351(l0): point = 121
   Insn 350(l0): point = 123
   Insn 349(l0): point = 125
   Insn 436(l0): point = 128
   Insn 344(l0): point = 130
   Insn 342(l0): point = 133
   Insn 341(l0): point = 135
   Insn 340(l0): point = 137
   Insn 339(l0): point = 139
   Insn 338(l0): point = 141
   Insn 337(l0): point = 143
   Insn 336(l0): point = 145
   Insn 333(l0): point = 148
   Insn 332(l0): point = 150
   Insn 331(l0): point = 152
   Insn 330(l0): point = 154
   Insn 329(l0): point = 156
   Insn 328(l0): point = 158
   Insn 327(l0): point = 160
   Insn 326(l0): point = 162
   Insn 325(l0): point = 164
   Insn 324(l0): point = 166
   Insn 323(l0): point = 168
   Insn 322(l0): point = 170
   Insn 320(l0): point = 173
   Insn 319(l0): point = 175
   Insn 318(l0): point = 177
   Insn 317(l0): point = 179
   Insn 316(l0): point = 181
   Insn 315(l0): point = 183
   Insn 314(l0): point = 185
   Insn 313(l0): point = 187
   Insn 312(l0): point = 189
   Insn 311(l0): point = 191
   Insn 310(l0): point = 193
   Insn 309(l0): point = 195
   Insn 307(l0): point = 198
   Insn 306(l0): point = 200
   Insn 304(l0): point = 203
   Insn 303(l0): point = 205
   Insn 302(l0): point = 207
   Insn 301(l0): point = 209
   Insn 300(l0): point = 211
   Insn 299(l0): point = 213
   Insn 298(l0): point = 215
   Insn 297(l0): point = 217
   Insn 296(l0): point = 219
   Insn 295(l0): point = 221
   Insn 294(l0): point = 223
   Insn 293(l0): point = 225
   Insn 434(l0): point = 228
   Insn 288(l0): point = 230
   Insn 286(l0): point = 233
   Insn 285(l0): point = 235
   Insn 284(l0): point = 237
   Insn 283(l0): point = 239
   Insn 282(l0): point = 241
   Insn 281(l0): point = 243
   Insn 280(l0): point = 245
   Insn 279(l0): point = 247
   Insn 278(l0): point = 249
   Insn 277(l0): point = 251
   Insn 276(l0): point = 253
   Insn 275(l0): point = 255
   Insn 274(l0): point = 257
   Insn 273(l0): point = 259
   Insn 272(l0): point = 261
   Insn 271(l0): point = 263
   Insn 432(l0): point = 266
   Insn 266(l0): point = 268
   Insn 264(l0): point = 271
   Insn 263(l0): point = 273
   Insn 262(l0): point = 275
   Insn 261(l0): point = 277
   Insn 258(l0): point = 280
   Insn 257(l0): point = 282
   Insn 256(l0): point = 284
   Insn 255(l0): point = 286
   Insn 254(l0): point = 288
   Insn 253(l0): point = 290
   Insn 252(l0): point = 292
   Insn 251(l0): point = 295
   Insn 250(l0): point = 297
   Insn 249(l0): point = 299
   Insn 248(l0): point = 301
   Insn 247(l0): point = 303
   Insn 246(l0): point = 305
   Insn 245(l0): point = 307
   Insn 244(l0): point = 309
   Insn 242(l0): point = 312
   Insn 241(l0): point = 314
   Insn 240(l0): point = 316
   Insn 239(l0): point = 318
   Insn 238(l0): point = 320
   Insn 237(l0): point = 322
   Insn 236(l0): point = 324
   Insn 235(l0): point = 326
   Insn 234(l0): point = 328
   Insn 233(l0): point = 330
   Insn 232(l0): point = 332
   Insn 231(l0): point = 334
   Insn 230(l0): point = 336
   Insn 229(l0): point = 338
   Insn 228(l0): point = 340
   Insn 227(l0): point = 342
   Insn 225(l0): point = 345
   Insn 224(l0): point = 347
   Insn 223(l0): point = 349
   Insn 222(l0): point = 351
   Insn 220(l0): point = 354
   Insn 219(l0): point = 356
   Insn 218(l0): point = 358
   Insn 430(l0): point = 361
   Insn 213(l0): point = 363
   Insn 212(l0): point = 365
   Insn 211(l0): point = 367
   Insn 210(l0): point = 369
   Insn 209(l0): point = 371
   Insn 208(l0): point = 373
   Insn 205(l0): point = 376
   Insn 204(l0): point = 378
   Insn 203(l0): point = 380
   Insn 202(l0): point = 382
   Insn 201(l0): point = 384
   Insn 200(l0): point = 386
   Insn 199(l0): point = 388
   Insn 198(l0): point = 390
   Insn 197(l0): point = 392
   Insn 196(l0): point = 394
   Insn 194(l0): point = 397
   Insn 193(l0): point = 399
   Insn 192(l0): point = 401
   Insn 191(l0): point = 403
   Insn 190(l0): point = 405
   Insn 189(l0): point = 407
   Insn 188(l0): point = 409
   Insn 187(l0): point = 411
   Insn 186(l0): point = 413
   Insn 185(l0): point = 415
   Insn 184(l0): point = 417
   Insn 183(l0): point = 419
   Insn 181(l0): point = 422
   Insn 180(l0): point = 424
   Insn 178(l0): point = 427
   Insn 177(l0): point = 429
   Insn 176(l0): point = 431
   Insn 175(l0): point = 433
   Insn 174(l0): point = 435
   Insn 173(l0): point = 437
   Insn 172(l0): point = 439
   Insn 171(l0): point = 441
   Insn 170(l0): point = 443
   Insn 169(l0): point = 445
   Insn 428(l0): point = 448
   Insn 164(l0): point = 450
   Insn 162(l0): point = 453
   Insn 161(l0): point = 455
   Insn 160(l0): point = 457
   Insn 159(l0): point = 459
   Insn 158(l0): point = 461
   Insn 157(l0): point = 463
   Insn 156(l0): point = 465
   Insn 155(l0): point = 467
   Insn 154(l0): point = 469
   Insn 153(l0): point = 471
   Insn 152(l0): point = 473
   Insn 151(l0): point = 475
   Insn 150(l0): point = 477
   Insn 149(l0): point = 479
   Insn 148(l0): point = 481
   Insn 147(l0): point = 483
   Insn 426(l0): point = 486
   Insn 142(l0): point = 488
   Insn 140(l0): point = 491
   Insn 139(l0): point = 493
   Insn 138(l0): point = 495
   Insn 137(l0): point = 497
   Insn 134(l0): point = 500
   Insn 133(l0): point = 502
   Insn 132(l0): point = 504
   Insn 131(l0): point = 506
   Insn 130(l0): point = 508
   Insn 129(l0): point = 510
   Insn 128(l0): point = 512
   Insn 127(l0): point = 515
   Insn 126(l0): point = 517
   Insn 125(l0): point = 519
   Insn 124(l0): point = 521
   Insn 123(l0): point = 523
   Insn 122(l0): point = 525
   Insn 121(l0): point = 527
   Insn 120(l0): point = 529
   Insn 118(l0): point = 532
   Insn 117(l0): point = 534
   Insn 116(l0): point = 536
   Insn 115(l0): point = 538
   Insn 114(l0): point = 540
   Insn 113(l0): point = 542
   Insn 112(l0): point = 544
   Insn 111(l0): point = 546
   Insn 110(l0): point = 548
   Insn 109(l0): point = 550
   Insn 108(l0): point = 552
   Insn 107(l0): point = 554
   Insn 106(l0): point = 556
   Insn 105(l0): point = 558
   Insn 104(l0): point = 560
   Insn 103(l0): point = 562
   Insn 101(l0): point = 565
   Insn 100(l0): point = 567
   Insn 99(l0): point = 569
   Insn 98(l0): point = 571
   Insn 96(l0): point = 574
   Insn 95(l0): point = 576
   Insn 93(l0): point = 579
   Insn 92(l0): point = 581
   Insn 89(l0): point = 583
   Insn 424(l0): point = 586
   Insn 84(l0): point = 588
   Insn 83(l0): point = 590
   Insn 82(l0): point = 592
   Insn 81(l0): point = 594
   Insn 78(l0): point = 597
   Insn 77(l0): point = 599
   Insn 76(l0): point = 601
   Insn 75(l0): point = 603
   Insn 74(l0): point = 605
   Insn 73(l0): point = 607
   Insn 72(l0): point = 609
   Insn 71(l0): point = 611
   Insn 70(l0): point = 613
   Insn 69(l0): point = 616
   Insn 68(l0): point = 618
   Insn 67(l0): point = 620
   Insn 66(l0): point = 622
   Insn 65(l0): point = 624
   Insn 64(l0): point = 626
   Insn 62(l0): point = 629
   Insn 61(l0): point = 631
   Insn 60(l0): point = 633
   Insn 59(l0): point = 635
   Insn 58(l0): point = 637
   Insn 57(l0): point = 639
   Insn 56(l0): point = 641
   Insn 55(l0): point = 643
   Insn 54(l0): point = 645
   Insn 53(l0): point = 647
   Insn 52(l0): point = 649
   Insn 51(l0): point = 651
   Insn 50(l0): point = 653
   Insn 49(l0): point = 655
   Insn 48(l0): point = 657
   Insn 47(l0): point = 659
   Insn 46(l0): point = 661
   Insn 45(l0): point = 663
   Insn 43(l0): point = 666
   Insn 42(l0): point = 668
   Insn 41(l0): point = 670
   Insn 40(l0): point = 672
   Insn 39(l0): point = 674
   Insn 37(l0): point = 677
   Insn 36(l0): point = 679
   Insn 34(l0): point = 682
   Insn 33(l0): point = 684
   Insn 28(l0): point = 687
   Insn 27(l0): point = 689
   Insn 26(l0): point = 691
   Insn 25(l0): point = 693
   Insn 24(l0): point = 695
   Insn 23(l0): point = 697
   Insn 21(l0): point = 700
   Insn 20(l0): point = 702
   Insn 15(l0): point = 705
   Insn 14(l0): point = 707
   Insn 13(l0): point = 709
   Insn 12(l0): point = 711
   Insn 11(l0): point = 713
   Insn 10(l0): point = 715
   Insn 8(l0): point = 718
   Insn 7(l0): point = 720
   Insn 440(l0): point = 722
 a0(r170): [3..4]
 a1(r169): [586..588] [486..488] [448..450] [361..363] [266..268] [228..230] [128..130] [96..98] [5..7]
 a2(r82): [612..722] [491..585] [453..485] [370..447] [271..360] [233..265] [133..227] [101..127] [14..95]
 a3(r246): [21..22]
 a4(r167): [25..30]
 a5(r168): [25..26]
 a6(r245): [27..28]
 a7(r166): [31..32]
 a8(r163): [31..38]
 a9(r165): [33..34]
 a10(r164): [35..36]
 a11(r244): [39..40]
 a12(r243): [48..49]
 a13(r162): [58..61]
 a14(r161): [62..63]
 a15(r242): [64..65]
 a16(r241): [78..79]
 a17(r160): [80..81]
 a18(r159): [82..83]
 a19(r158): [84..85]
 a20(r155): [84..91]
 a21(r157): [86..87]
 a22(r156): [88..89]
 a23(r240): [92..93]
 a24(r239): [106..107]
 a25(r154): [116..121]
 a26(r153): [122..123]
 a27(r238): [124..125]
 a28(r237): [149..150]
 a29(r151): [153..158]
 a30(r152): [153..154]
 a31(r236): [155..156]
 a32(r150): [159..160]
 a33(r147): [159..168]
 a34(r149): [161..162]
 a35(r148): [163..164]
 a36(r235): [165..166]
 a37(r234): [169..170]
 a38(r233): [178..179]
 a39(r146): [188..191]
 a40(r145): [192..193]
 a41(r232): [194..195]
 a42(r231): [208..209]
 a43(r144): [210..211]
 a44(r143): [212..213]
 a45(r142): [214..215]
 a46(r139): [214..223]
 a47(r141): [216..217]
 a48(r140): [218..219]
 a49(r230): [220..221]
 a50(r229): [224..225]
 a51(r228): [238..239]
 a52(r138): [248..253]
 a53(r136): [250..259]
 a54(r137): [254..255]
 a55(r227): [256..257]
 a56(r135): [260..261]
 a57(r226): [262..263]
 a58(r134): [274..275]
 a59(r225): [276..277]
 a60(r224): [281..282]
 a61(r133): [281..284]
 a62(r132): [285..286]
 a63(r131): [287..288]
 a64(r130): [287..293]
 a65(r223): [289..290]
 a66(r222): [293..295]
 a67(r221): [294..297]
 a68(r129): [296..303]
 a69(r219): [298..299]
 a70(r220): [300..301]
 a71(r250): [299..299]
 a72(r218): [304..305]
 a73(r217): [308..309]
 a74(r128): [315..316]
 a75(r216): [317..318]
 a76(r215): [321..322]
 a77(r127): [321..324]
 a78(r126): [325..326]
 a79(r125): [335..338]
 a80(r124): [339..340]
 a81(r214): [341..342]
 a82(r123): [348..349]
 a83(r213): [350..351]
 a84(r212): [377..378]
 a85(r121): [381..386]
 a86(r122): [381..382]
 a87(r211): [383..384]
 a88(r120): [387..388]
 a89(r118): [387..392]
 a90(r119): [389..390]
 a91(r210): [393..394]
 a92(r209): [402..403]
 a93(r117): [412..415]
 a94(r116): [416..417]
 a95(r208): [418..419]
 a96(r207): [432..433]
 a97(r115): [434..435]
 a98(r114): [436..437]
 a99(r113): [438..439]
 a100(r111): [438..443]
 a101(r112): [440..441]
 a102(r206): [444..445]
 a103(r205): [458..459]
 a104(r110): [468..473]
 a105(r108): [470..479]
 a106(r109): [474..475]
 a107(r204): [476..477]
 a108(r107): [480..481]
 a109(r203): [482..483]
 a110(r106): [494..495]
 a111(r202): [496..497]
 a112(r201): [501..502]
 a113(r105): [501..504]
 a114(r104): [505..506]
 a115(r103): [507..508]
 a116(r102): [507..513]
 a117(r200): [509..510]
 a118(r199): [513..515]
 a119(r198): [514..517]
 a120(r101): [516..523]
 a121(r196): [518..519]
 a122(r197): [520..521]
 a123(r249): [519..519]
 a124(r195): [524..525]
 a125(r194): [528..529]
 a126(r100): [535..536]
 a127(r193): [537..538]
 a128(r192): [541..542]
 a129(r99): [541..544]
 a130(r98): [545..546]
 a131(r97): [555..558]
 a132(r96): [559..560]
 a133(r191): [561..562]
 a134(r95): [568..569]
 a135(r190): [570..571]
 a136(r94): [589..590]
 a137(r188): [591..594]
 a138(r189): [591..592]
 a139(r187): [598..599]
 a140(r186): [602..603]
 a141(r93): [602..605]
 a142(r92): [606..607]
 a143(r91): [608..609]
 a144(r90): [608..614]
 a145(r185): [610..611]
 a146(r184): [614..616]
 a147(r183): [615..618]
 a148(r89): [617..624]
 a149(r181): [619..620]
 a150(r182): [621..622]
 a151(r248): [620..620]
 a152(r180): [625..626]
 a153(r88): [632..633]
 a154(r178): [634..637]
 a155(r179): [634..635]
 a156(r176): [640..643]
 a157(r177): [640..641]
 a158(r87): [640..645]
 a159(r86): [646..647]
 a160(r85): [656..659]
 a161(r84): [660..661]
 a162(r175): [662..663]
 a163(r83): [669..670]
 a164(r173): [671..674]
 a165(r174): [671..672]
 a166(r172): [694..695]
 a167(r171): [712..713]
Compressing live ranges: from 725 to 294 - 40%
Ranges after the compression:
 a0(r170): [0..1]
 a1(r169): [244..245] [199..200] [185..186] [151..152] [106..107] [92..93] [50..51] [40..41] [2..3]
 a2(r82): [260..293] [201..243] [187..198] [153..184] [108..150] [94..105] [52..91] [42..49] [4..39]
 a3(r246): [4..5]
 a4(r167): [6..9]
 a5(r168): [6..7]
 a6(r245): [8..9]
 a7(r166): [10..11]
 a8(r163): [10..15]
 a9(r165): [12..13]
 a10(r164): [14..15]
 a11(r244): [16..17]
 a12(r243): [18..19]
 a13(r162): [20..21]
 a14(r161): [22..23]
 a15(r242): [24..25]
 a16(r241): [26..27]
 a17(r160): [28..29]
 a18(r159): [30..31]
 a19(r158): [32..33]
 a20(r155): [32..37]
 a21(r157): [34..35]
 a22(r156): [36..37]
 a23(r240): [38..39]
 a24(r239): [42..43]
 a25(r154): [44..45]
 a26(r153): [46..47]
 a27(r238): [48..49]
 a28(r237): [52..53]
 a29(r151): [54..57]
 a30(r152): [54..55]
 a31(r236): [56..57]
 a32(r150): [58..59]
 a33(r147): [58..65]
 a34(r149): [60..61]
 a35(r148): [62..63]
 a36(r235): [64..65]
 a37(r234): [66..67]
 a38(r233): [68..69]
 a39(r146): [70..71]
 a40(r145): [72..73]
 a41(r232): [74..75]
 a42(r231): [76..77]
 a43(r144): [78..79]
 a44(r143): [80..81]
 a45(r142): [82..83]
 a46(r139): [82..89]
 a47(r141): [84..85]
 a48(r140): [86..87]
 a49(r230): [88..89]
 a50(r229): [90..91]
 a51(r228): [94..95]
 a52(r138): [96..97]
 a53(r136): [96..101]
 a54(r137): [98..99]
 a55(r227): [100..101]
 a56(r135): [102..103]
 a57(r226): [104..105]
 a58(r134): [108..109]
 a59(r225): [110..111]
 a60(r224): [112..113]
 a61(r133): [112..113]
 a62(r132): [114..115]
 a63(r131): [116..117]
 a64(r130): [116..120]
 a65(r223): [118..119]
 a66(r222): [120..122]
 a67(r221): [121..124]
 a68(r129): [123..128]
 a69(r219): [125..126]
 a70(r220): [127..128]
 a71(r250): [126..126]
 a72(r218): [129..130]
 a73(r217): [131..132]
 a74(r128): [133..134]
 a75(r216): [135..136]
 a76(r215): [137..138]
 a77(r127): [137..138]
 a78(r126): [139..140]
 a79(r125): [141..142]
 a80(r124): [143..144]
 a81(r214): [145..146]
 a82(r123): [147..148]
 a83(r213): [149..150]
 a84(r212): [153..154]
 a85(r121): [155..158]
 a86(r122): [155..156]
 a87(r211): [157..158]
 a88(r120): [159..160]
 a89(r118): [159..162]
 a90(r119): [161..162]
 a91(r210): [163..164]
 a92(r209): [165..166]
 a93(r117): [167..168]
 a94(r116): [169..170]
 a95(r208): [171..172]
 a96(r207): [173..174]
 a97(r115): [175..176]
 a98(r114): [177..178]
 a99(r113): [179..180]
 a100(r111): [179..182]
 a101(r112): [181..182]
 a102(r206): [183..184]
 a103(r205): [187..188]
 a104(r110): [189..190]
 a105(r108): [189..194]
 a106(r109): [191..192]
 a107(r204): [193..194]
 a108(r107): [195..196]
 a109(r203): [197..198]
 a110(r106): [201..202]
 a111(r202): [203..204]
 a112(r201): [205..206]
 a113(r105): [205..206]
 a114(r104): [207..208]
 a115(r103): [209..210]
 a116(r102): [209..213]
 a117(r200): [211..212]
 a118(r199): [213..215]
 a119(r198): [214..217]
 a120(r101): [216..221]
 a121(r196): [218..219]
 a122(r197): [220..221]
 a123(r249): [219..219]
 a124(r195): [222..223]
 a125(r194): [224..225]
 a126(r100): [226..227]
 a127(r193): [228..229]
 a128(r192): [230..231]
 a129(r99): [230..231]
 a130(r98): [232..233]
 a131(r97): [234..235]
 a132(r96): [236..237]
 a133(r191): [238..239]
 a134(r95): [240..241]
 a135(r190): [242..243]
 a136(r94): [246..247]
 a137(r188): [248..249]
 a138(r189): [248..249]
 a139(r187): [250..251]
 a140(r186): [252..253]
 a141(r93): [252..253]
 a142(r92): [254..255]
 a143(r91): [256..257]
 a144(r90): [256..261]
 a145(r185): [258..259]
 a146(r184): [261..263]
 a147(r183): [262..265]
 a148(r89): [264..269]
 a149(r181): [266..267]
 a150(r182): [268..269]
 a151(r248): [267..267]
 a152(r180): [270..271]
 a153(r88): [272..273]
 a154(r178): [274..275]
 a155(r179): [274..275]
 a156(r176): [276..277]
 a157(r177): [276..277]
 a158(r87): [276..277]
 a159(r86): [278..279]
 a160(r85): [280..281]
 a161(r84): [282..283]
 a162(r175): [284..285]
 a163(r83): [286..287]
 a164(r173): [288..289]
 a165(r174): [288..289]
 a166(r172): [290..291]
 a167(r171): [292..293]
  pref0:a12(r243)<-hr0@1500
  pref1:a24(r239)<-hr0@1500
  pref2:a38(r233)<-hr0@1500
  pref3:a51(r228)<-hr0@1500
  pref4:a69(r219)<-hr1@1000
  pref5:a92(r209)<-hr0@1500
  pref6:a103(r205)<-hr0@1500
  pref7:a121(r196)<-hr1@1000
  pref8:a149(r181)<-hr1@1000
  pref9:a0(r170)<-hr0@1500
  pref10:a78(r126)<-hr0@1500
  pref11:a130(r98)<-hr0@1500
  pref12:a159(r86)<-hr0@1500
  pref13:a2(r82)<-hr3@3000
  regions=1, blocks=48, points=294
    allocnos=168 (big 0), copies=0, conflicts=0, ranges=184
Disposition:
    2:r82  l0     3  163:r83  l0     0  161:r84  l0     0  160:r85  l0     0
  159:r86  l0     0  158:r87  l0     2  153:r88  l0     0  148:r89  l0     2
  144:r90  l0     1  143:r91  l0     0  142:r92  l0     0  141:r93  l0     1
  136:r94  l0     0  134:r95  l0     0  132:r96  l0     0  131:r97  l0     0
  130:r98  l0     0  129:r99  l0     1  126:r100 l0     0  120:r101 l0     2
  116:r102 l0     1  115:r103 l0     0  114:r104 l0     0  113:r105 l0     1
  110:r106 l0     0  108:r107 l0     0  105:r108 l0     1  106:r109 l0     0
  104:r110 l0     0  100:r111 l0     1  101:r112 l0     0   99:r113 l0     0
   98:r114 l0     0   97:r115 l0     0   94:r116 l0     0   93:r117 l0     0
   89:r118 l0     1   90:r119 l0     0   88:r120 l0     0   85:r121 l0     0
   86:r122 l0     1   82:r123 l0     0   80:r124 l0     0   79:r125 l0     0
   78:r126 l0     0   77:r127 l0     1   74:r128 l0     0   68:r129 l0     2
   64:r130 l0     1   63:r131 l0     0   62:r132 l0     0   61:r133 l0     1
   58:r134 l0     0   56:r135 l0     0   53:r136 l0     1   54:r137 l0     0
   52:r138 l0     0   46:r139 l0     1   48:r140 l0     0   47:r141 l0     0
   45:r142 l0     0   44:r143 l0     0   43:r144 l0     0   40:r145 l0     0
   39:r146 l0     0   33:r147 l0     1   35:r148 l0     0   34:r149 l0     0
   32:r150 l0     0   29:r151 l0     0   30:r152 l0     1   26:r153 l0     0
   25:r154 l0     0   20:r155 l0     1   22:r156 l0     0   21:r157 l0     0
   19:r158 l0     0   18:r159 l0     0   17:r160 l0     0   14:r161 l0     0
   13:r162 l0     0    8:r163 l0     1   10:r164 l0     0    9:r165 l0     0
    7:r166 l0     0    4:r167 l0     0    5:r168 l0     1    1:r169 l0     0
    0:r170 l0     0  167:r171 l0     0  166:r172 l0     0  164:r173 l0     0
  165:r174 l0     1  162:r175 l0     0  156:r176 l0     0  157:r177 l0     1
  154:r178 l0     0  155:r179 l0     1  152:r180 l0     0  149:r181 l0     1
  150:r182 l0     1  147:r183 l0     0  146:r184 l0     2  145:r185 l0     0
  140:r186 l0     0  139:r187 l0     0  137:r188 l0     0  138:r189 l0     1
  135:r190 l0     0  133:r191 l0     0  128:r192 l0     0  127:r193 l0     0
  125:r194 l0     0  124:r195 l0     0  121:r196 l0     1  122:r197 l0     1
  119:r198 l0     0  118:r199 l0     2  117:r200 l0     0  112:r201 l0     0
  111:r202 l0     0  109:r203 l0     0  107:r204 l0     0  103:r205 l0     0
  102:r206 l0     0   96:r207 l0     0   95:r208 l0     0   92:r209 l0     0
   91:r210 l0     0   87:r211 l0     1   84:r212 l0     0   83:r213 l0     0
   81:r214 l0     0   76:r215 l0     0   75:r216 l0     0   73:r217 l0     0
   72:r218 l0     0   69:r219 l0     1   70:r220 l0     1   67:r221 l0     0
   66:r222 l0     2   65:r223 l0     0   60:r224 l0     0   59:r225 l0     0
   57:r226 l0     0   55:r227 l0     0   51:r228 l0     0   50:r229 l0     0
   49:r230 l0     0   42:r231 l0     0   41:r232 l0     0   38:r233 l0     0
   37:r234 l0     0   36:r235 l0     0   31:r236 l0     1   28:r237 l0     0
   27:r238 l0     0   24:r239 l0     0   23:r240 l0     0   16:r241 l0     0
   15:r242 l0     0   12:r243 l0     0   11:r244 l0     0    6:r245 l0     1
    3:r246 l0     0  151:r248 l0     0  123:r249 l0     0   71:r250 l0     0
+++Costs: overall 36000, reg 36000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_bmap

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,11u} r1={15d} r2={15d} r3={14d,14u} r6={1d,47u} r7={46d,134u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,99u,2e} r17={104d,28u} r18={14d} r19={1d,84u} r20={14d} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r82={1d,22u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,2u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,2u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={9d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d} r249={1d} r250={1d} 
;;    total ref usage 1907{1299d,606u,2e} in 338{324 regular + 14 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 440 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 440 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 440 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 block+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":250:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "fs/inode.c":250:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 16)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":251:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 11 10 12 3 (set (reg/f:SI 171)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7341ee5b7cf0 *.LC10>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":251:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7341ee5b7cf0 *.LC10>)
        (nil)))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 171)) "fs/inode.c":251:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 13 12 14 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":251:9 75 {*movsi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":251:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":251:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 16 15 17 4 75 (nil) [1 uses])
(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 17 21 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 block+0 S4 A32])
            (const_int 262662 [0x40206]))) "fs/inode.c":252:8 11 {*cmpsi_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/inode.c":252:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 29)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":253:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 24 23 25 5 (set (reg/f:SI 172)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x7341ee5b7d80 *.LC11>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":253:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x7341ee5b7d80 *.LC11>)
        (nil)))
(insn 25 24 26 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 172)) "fs/inode.c":253:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 26 25 27 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":253:9 75 {*movsi_internal}
     (nil))
(call_insn 27 26 28 5 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":253:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 28 27 29 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":253:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 29 28 30 6 76 (nil) [1 uses])
(note 30 29 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 30 34 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 block+0 S4 A32])
            (const_int 6 [0x6]))) "fs/inode.c":254:8 11 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "fs/inode.c":254:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 87)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":255:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/inode.c":255:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:SI 173)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":255:37 75 {*movsi_internal}
     (nil))
(insn 40 39 41 8 (set (reg:SI 174)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":255:37 75 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 174)
                        (const_int 2 [0x2]))
                    (reg/f:SI 173))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])) "fs/inode.c":255:37 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg/f:SI 173)
            (nil))))
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 83 [ _1 ])
            (const_int 0 [0]))) "fs/inode.c":255:20 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/inode.c":255:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:SI 175)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":256:56 75 {*movsi_internal}
     (nil))
(insn 46 45 47 9 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 175)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":256:56 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 175)
        (nil)))
(insn 47 46 48 9 (set (reg:SI 85 [ _3 ])
        (zero_extend:SI (reg:HI 84 [ _2 ]))) "fs/inode.c":256:41 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(insn 48 47 49 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":256:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 49 48 50 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 85 [ _3 ])) "fs/inode.c":256:41 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 50 49 51 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":256:41 75 {*movsi_internal}
     (nil))
(call_insn 51 50 52 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":256:41 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 52 51 53 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":256:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 53 52 54 9 (set (reg:SI 86 [ _4 ])
        (reg:SI 0 ax)) "fs/inode.c":256:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 54 53 55 9 (set (reg:HI 87 [ _5 ])
        (subreg:HI (reg:SI 86 [ _4 ]) 0)) "fs/inode.c":256:39 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 55 54 56 9 (set (reg/f:SI 176)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":256:39 75 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:SI 177)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":256:39 75 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 177)
                        (const_int 2 [0x2]))
                    (reg/f:SI 176))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])
        (reg:HI 87 [ _5 ])) "fs/inode.c":256:39 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_DEAD (reg/f:SI 176)
            (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
                (nil)))))
(insn 58 57 59 9 (set (reg/f:SI 178)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":256:31 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:SI 179)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":256:31 75 {*movsi_internal}
     (nil))
(insn 60 59 61 9 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 179)
                        (const_int 2 [0x2]))
                    (reg/f:SI 178))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])) "fs/inode.c":256:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_DEAD (reg/f:SI 178)
            (nil))))
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 88 [ _6 ])
            (const_int 0 [0]))) "fs/inode.c":256:16 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/inode.c":256:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 79)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:SI 180)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7341ee52e360 jiffies>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 65 64 66 10 (set (reg:SI 89 [ jiffies.3_7 ])
        (mem/v/c:SI (reg/f:SI 180) [3 jiffies+0 S4 A32])) "fs/inode.c":257:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (nil)))
(insn 66 65 67 10 (set (reg:SI 182)
        (const_int 1374389535 [0x51eb851f])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 67 66 68 10 (parallel [
            (set (reg:SI 181)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 89 [ jiffies.3_7 ]))
                            (sign_extend:DI (reg:SI 182)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 248))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 435 {*smulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_UNUSED (reg:SI 248)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 68 67 69 10 (parallel [
            (set (reg:SI 183)
                (ashiftrt:SI (reg:SI 181)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 10 (parallel [
            (set (reg:SI 184)
                (ashiftrt:SI (reg:SI 89 [ jiffies.3_7 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 694 {ashrsi3_cvt}
     (expr_list:REG_DEAD (reg:SI 89 [ jiffies.3_7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 10 (parallel [
            (set (reg:SI 90 [ _8 ])
                (minus:SI (reg:SI 183)
                    (reg:SI 184)))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_DEAD (reg:SI 183)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 71 70 72 10 (set (reg/f:SI 185)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7341ee52e3f0 startup_time>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":257:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 72 71 73 10 (set (reg:SI 91 [ startup_time.4_9 ])
        (mem/c:SI (reg/f:SI 185) [3 startup_time+0 S4 A32])) "fs/inode.c":257:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 185)
        (nil)))
(insn 73 72 74 10 (parallel [
            (set (reg:SI 92 [ _10 ])
                (plus:SI (reg:SI 90 [ _8 ])
                    (reg:SI 91 [ startup_time.4_9 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ startup_time.4_9 ])
        (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 74 73 75 10 (set (reg:SI 93 [ _11 ])
        (reg:SI 92 [ _10 ])) "fs/inode.c":257:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(insn 75 74 76 10 (set (reg/f:SI 186)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":257:32 75 {*movsi_internal}
     (nil))
(insn 76 75 77 10 (set (mem:SI (plus:SI (reg/f:SI 186)
                (const_int 40 [0x28])) [3 inode_107(D)->i_ctime+0 S4 A32])
        (reg:SI 93 [ _11 ])) "fs/inode.c":257:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 186)
        (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
            (nil))))
(insn 77 76 78 10 (set (reg/f:SI 187)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":258:31 75 {*movsi_internal}
     (nil))
(insn 78 77 79 10 (set (mem:QI (plus:SI (reg/f:SI 187)
                (const_int 51 [0x33])) [0 inode_107(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":258:31 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 187)
        (nil)))
(code_label 79 78 80 11 78 (nil) [3 uses])
(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 11 (set (reg/f:SI 188)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":260:29 75 {*movsi_internal}
     (nil))
(insn 82 81 83 11 (set (reg:SI 189)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":260:29 75 {*movsi_internal}
     (nil))
(insn 83 82 84 11 (set (reg:HI 94 [ _12 ])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 189)
                        (const_int 2 [0x2]))
                    (reg/f:SI 188))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])) "fs/inode.c":260:29 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_DEAD (reg/f:SI 188)
            (nil))))
(insn 84 83 424 11 (set (reg:SI 169 [ _90 ])
        (zero_extend:SI (reg:HI 94 [ _12 ]))) "fs/inode.c":260:29 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
        (nil)))
(jump_insn 424 84 425 11 (set (pc)
        (label_ref 415)) "fs/inode.c":260:29 807 {jump}
     (nil)
 -> 415)
(barrier 425 424 87)
(code_label 87 425 88 12 77 (nil) [1 uses])
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 92 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [9 block+0 S4 A32])
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":262:11 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 92 89 93 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 block+0 S4 A32])
            (const_int 511 [0x1ff]))) "fs/inode.c":263:8 11 {*cmpsi_1}
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) "fs/inode.c":263:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 216)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":264:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 96 95 97 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/inode.c":264:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 135)
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:SI 190)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":264:37 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 95 [ _13 ])
        (mem:HI (plus:SI (reg/f:SI 190)
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":264:37 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 190)
        (nil)))
(insn 100 99 101 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 95 [ _13 ])
            (const_int 0 [0]))) "fs/inode.c":264:20 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
        (nil)))
(jump_insn 101 100 102 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/inode.c":264:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 135)
(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 15 (set (reg/f:SI 191)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":265:52 75 {*movsi_internal}
     (nil))
(insn 104 103 105 15 (set (reg:HI 96 [ _14 ])
        (mem:HI (plus:SI (reg/f:SI 191)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":265:52 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 191)
        (nil)))
(insn 105 104 106 15 (set (reg:SI 97 [ _15 ])
        (zero_extend:SI (reg:HI 96 [ _14 ]))) "fs/inode.c":265:37 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 96 [ _14 ])
        (nil)))
(insn 106 105 107 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":265:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 107 106 108 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 97 [ _15 ])) "fs/inode.c":265:37 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 108 107 109 15 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":265:37 75 {*movsi_internal}
     (nil))
(call_insn 109 108 110 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":265:37 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 110 109 111 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":265:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 111 110 112 15 (set (reg:SI 98 [ _16 ])
        (reg:SI 0 ax)) "fs/inode.c":265:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 112 111 113 15 (set (reg:HI 99 [ _17 ])
        (subreg:HI (reg:SI 98 [ _16 ]) 0)) "fs/inode.c":265:35 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (nil)))
(insn 113 112 114 15 (set (reg/f:SI 192)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":265:35 75 {*movsi_internal}
     (nil))
(insn 114 113 115 15 (set (mem:HI (plus:SI (reg/f:SI 192)
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])
        (reg:HI 99 [ _17 ])) "fs/inode.c":265:35 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 192)
        (expr_list:REG_DEAD (reg:HI 99 [ _17 ])
            (nil))))
(insn 115 114 116 15 (set (reg/f:SI 193)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":265:31 75 {*movsi_internal}
     (nil))
(insn 116 115 117 15 (set (reg:HI 100 [ _18 ])
        (mem:HI (plus:SI (reg/f:SI 193)
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":265:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 193)
        (nil)))
(insn 117 116 118 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 100 [ _18 ])
            (const_int 0 [0]))) "fs/inode.c":265:16 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
        (nil)))
(jump_insn 118 117 119 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/inode.c":265:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 135)
(note 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 16 (set (reg/f:SI 194)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":266:31 75 {*movsi_internal}
     (nil))
(insn 121 120 122 16 (set (mem:QI (plus:SI (reg/f:SI 194)
                (const_int 51 [0x33])) [0 inode_107(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":266:31 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 194)
        (nil)))
(insn 122 121 123 16 (set (reg/f:SI 195)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7341ee52e360 jiffies>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 123 122 124 16 (set (reg:SI 101 [ jiffies.5_19 ])
        (mem/v/c:SI (reg/f:SI 195) [3 jiffies+0 S4 A32])) "fs/inode.c":267:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 195)
        (nil)))
(insn 124 123 125 16 (set (reg:SI 197)
        (const_int 1374389535 [0x51eb851f])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 125 124 126 16 (parallel [
            (set (reg:SI 196)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 101 [ jiffies.5_19 ]))
                            (sign_extend:DI (reg:SI 197)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 249))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 435 {*smulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_UNUSED (reg:SI 249)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 126 125 127 16 (parallel [
            (set (reg:SI 198)
                (ashiftrt:SI (reg:SI 196)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 16 (parallel [
            (set (reg:SI 199)
                (ashiftrt:SI (reg:SI 101 [ jiffies.5_19 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 694 {ashrsi3_cvt}
     (expr_list:REG_DEAD (reg:SI 101 [ jiffies.5_19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 16 (parallel [
            (set (reg:SI 102 [ _20 ])
                (minus:SI (reg:SI 198)
                    (reg:SI 199)))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg:SI 198)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 129 128 130 16 (set (reg/f:SI 200)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7341ee52e3f0 startup_time>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 130 129 131 16 (set (reg:SI 103 [ startup_time.6_21 ])
        (mem/c:SI (reg/f:SI 200) [3 startup_time+0 S4 A32])) "fs/inode.c":267:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 200)
        (nil)))
(insn 131 130 132 16 (parallel [
            (set (reg:SI 104 [ _22 ])
                (plus:SI (reg:SI 102 [ _20 ])
                    (reg:SI 103 [ startup_time.6_21 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ startup_time.6_21 ])
        (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 132 131 133 16 (set (reg:SI 105 [ _23 ])
        (reg:SI 104 [ _22 ])) "fs/inode.c":267:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
        (nil)))
(insn 133 132 134 16 (set (reg/f:SI 201)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":267:32 75 {*movsi_internal}
     (nil))
(insn 134 133 135 16 (set (mem:SI (plus:SI (reg/f:SI 201)
                (const_int 40 [0x28])) [3 inode_107(D)->i_ctime+0 S4 A32])
        (reg:SI 105 [ _23 ])) "fs/inode.c":267:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
            (nil))))
(code_label 135 134 136 17 81 (nil) [3 uses])
(note 136 135 137 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 17 (set (reg/f:SI 202)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":269:27 75 {*movsi_internal}
     (nil))
(insn 138 137 139 17 (set (reg:HI 106 [ _24 ])
        (mem:HI (plus:SI (reg/f:SI 202)
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":269:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 202)
        (nil)))
(insn 139 138 140 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 106 [ _24 ])
            (const_int 0 [0]))) "fs/inode.c":269:12 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 106 [ _24 ])
        (nil)))
(jump_insn 140 139 141 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "fs/inode.c":269:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 145)
(note 141 140 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 426 18 (set (reg:SI 169 [ _90 ])
        (const_int 0 [0])) "fs/inode.c":270:20 75 {*movsi_internal}
     (nil))
(jump_insn 426 142 427 18 (set (pc)
        (label_ref 415)) "fs/inode.c":270:20 807 {jump}
     (nil)
 -> 415)
(barrier 427 426 145)
(code_label 145 427 146 19 82 (nil) [1 uses])
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 19 (set (reg/f:SI 203)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":271:53 75 {*movsi_internal}
     (nil))
(insn 148 147 149 19 (set (reg:HI 107 [ _25 ])
        (mem:HI (plus:SI (reg/f:SI 203)
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":271:53 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 203)
        (nil)))
(insn 149 148 150 19 (set (reg:SI 108 [ _26 ])
        (zero_extend:SI (reg:HI 107 [ _25 ]))) "fs/inode.c":271:20 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 107 [ _25 ])
        (nil)))
(insn 150 149 151 19 (set (reg/f:SI 204)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":271:31 75 {*movsi_internal}
     (nil))
(insn 151 150 152 19 (set (reg:HI 109 [ _27 ])
        (mem:HI (plus:SI (reg/f:SI 204)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":271:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 204)
        (nil)))
(insn 152 151 153 19 (set (reg:SI 110 [ _28 ])
        (zero_extend:SI (reg:HI 109 [ _27 ]))) "fs/inode.c":271:20 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 109 [ _27 ])
        (nil)))
(insn 153 152 154 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":271:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 154 153 155 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 108 [ _26 ])) "fs/inode.c":271:20 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 108 [ _26 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 155 154 156 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 110 [ _28 ])) "fs/inode.c":271:20 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 110 [ _28 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 156 155 157 19 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":271:20 75 {*movsi_internal}
     (nil))
(call_insn 157 156 158 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":271:20 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 158 157 159 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":271:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 159 158 160 19 (set (reg:SI 205)
        (reg:SI 0 ax)) "fs/inode.c":271:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 160 159 161 19 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])
        (reg:SI 205)) "fs/inode.c":271:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 205)
        (nil)))
(insn 161 160 162 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":271:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 162 161 163 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "fs/inode.c":271:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 167)
(note 163 162 164 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 428 20 (set (reg:SI 169 [ _90 ])
        (const_int 0 [0])) "fs/inode.c":272:20 75 {*movsi_internal}
     (nil))
(jump_insn 428 164 429 20 (set (pc)
        (label_ref 415)) "fs/inode.c":272:20 807 {jump}
     (nil)
 -> 415)
(barrier 429 428 167)
(code_label 167 429 168 21 83 (nil) [1 uses])
(note 168 167 169 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 21 (set (reg/f:SI 206)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":273:35 75 {*movsi_internal}
     (nil))
(insn 170 169 171 21 (set (reg/f:SI 111 [ _29 ])
        (mem/f:SI (reg/f:SI 206) [10 bh_138->b_data+0 S4 A32])) "fs/inode.c":273:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 206)
        (nil)))
(insn 171 170 172 21 (set (reg:SI 112 [ block.7_30 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":273:45 75 {*movsi_internal}
     (nil))
(insn 172 171 173 21 (parallel [
            (set (reg:SI 113 [ _31 ])
                (ashift:SI (reg:SI 112 [ block.7_30 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":273:45 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 112 [ block.7_30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 21 (parallel [
            (set (reg/f:SI 114 [ _32 ])
                (plus:SI (reg/f:SI 111 [ _29 ])
                    (reg:SI 113 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":273:45 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 113 [ _31 ])
        (expr_list:REG_DEAD (reg/f:SI 111 [ _29 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 174 173 175 21 (set (reg:HI 115 [ _33 ])
        (mem:HI (reg/f:SI 114 [ _32 ]) [2 *_32+0 S2 A16])) "fs/inode.c":273:45 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _32 ])
        (nil)))
(insn 175 174 176 21 (set (reg:SI 207)
        (zero_extend:SI (reg:HI 115 [ _33 ]))) "fs/inode.c":273:11 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 115 [ _33 ])
        (nil)))
(insn 176 175 177 21 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 207)) "fs/inode.c":273:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 207)
        (nil)))
(insn 177 176 178 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":274:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 178 177 179 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/inode.c":274:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 206)
(note 179 178 180 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":274:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 181 180 182 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/inode.c":274:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 206)
(note 182 181 183 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 23 (set (reg/f:SI 208)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":275:37 75 {*movsi_internal}
     (nil))
(insn 184 183 185 23 (set (reg:HI 116 [ _34 ])
        (mem:HI (plus:SI (reg/f:SI 208)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":275:37 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 208)
        (nil)))
(insn 185 184 186 23 (set (reg:SI 117 [ _35 ])
        (zero_extend:SI (reg:HI 116 [ _34 ]))) "fs/inode.c":275:22 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 116 [ _34 ])
        (nil)))
(insn 186 185 187 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":275:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 187 186 188 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 117 [ _35 ])) "fs/inode.c":275:22 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 117 [ _35 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 188 187 189 23 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":275:22 75 {*movsi_internal}
     (nil))
(call_insn 189 188 190 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":275:22 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 190 189 191 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":275:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 191 190 192 23 (set (reg:SI 209)
        (reg:SI 0 ax)) "fs/inode.c":275:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 192 191 193 23 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 209)) "fs/inode.c":275:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 209)
        (nil)))
(insn 193 192 194 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":275:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 194 193 195 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/inode.c":275:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 206)
(note 195 194 196 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 24 (set (reg/f:SI 210)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":276:39 75 {*movsi_internal}
     (nil))
(insn 197 196 198 24 (set (reg/f:SI 118 [ _36 ])
        (mem/f:SI (reg/f:SI 210) [10 bh_138->b_data+0 S4 A32])) "fs/inode.c":276:39 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 210)
        (nil)))
(insn 198 197 199 24 (set (reg:SI 119 [ block.8_37 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":276:49 75 {*movsi_internal}
     (nil))
(insn 199 198 200 24 (parallel [
            (set (reg:SI 120 [ _38 ])
                (ashift:SI (reg:SI 119 [ block.8_37 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":276:49 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 119 [ block.8_37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 24 (parallel [
            (set (reg/f:SI 121 [ _39 ])
                (plus:SI (reg/f:SI 118 [ _36 ])
                    (reg:SI 120 [ _38 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":276:49 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 120 [ _38 ])
        (expr_list:REG_DEAD (reg/f:SI 118 [ _36 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 201 200 202 24 (set (reg:SI 211)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/inode.c":276:57 75 {*movsi_internal}
     (nil))
(insn 202 201 203 24 (set (reg:HI 122 [ _40 ])
        (subreg:HI (reg:SI 211) 0)) "fs/inode.c":276:57 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 211)
        (nil)))
(insn 203 202 204 24 (set (mem:HI (reg/f:SI 121 [ _39 ]) [2 *_39+0 S2 A16])
        (reg:HI 122 [ _40 ])) "fs/inode.c":276:57 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 122 [ _40 ])
        (expr_list:REG_DEAD (reg/f:SI 121 [ _39 ])
            (nil))))
(insn 204 203 205 24 (set (reg/f:SI 212)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":277:28 75 {*movsi_internal}
     (nil))
(insn 205 204 206 24 (set (mem:QI (plus:SI (reg/f:SI 212)
                (const_int 11 [0xb])) [0 bh_138->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":277:28 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 212)
        (nil)))
(code_label 206 205 207 25 84 (nil) [3 uses])
(note 207 206 208 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":279:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 209 208 210 25 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":279:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 210 209 211 25 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":279:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 211 210 212 25 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":279:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 212 211 213 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":279:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 213 212 430 25 (set (reg:SI 169 [ _90 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/inode.c":280:16 75 {*movsi_internal}
     (nil))
(jump_insn 430 213 431 25 (set (pc)
        (label_ref 415)) "fs/inode.c":280:16 807 {jump}
     (nil)
 -> 415)
(barrier 431 430 216)
(code_label 216 431 217 26 80 (nil) [1 uses])
(note 217 216 218 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 26 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [9 block+0 S4 A32])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":282:11 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 219 218 220 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":283:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 220 219 221 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "fs/inode.c":283:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 259)
(note 221 220 222 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 27 (set (reg/f:SI 213)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":283:33 75 {*movsi_internal}
     (nil))
(insn 223 222 224 27 (set (reg:HI 123 [ _41 ])
        (mem:HI (plus:SI (reg/f:SI 213)
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":283:33 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 213)
        (nil)))
(insn 224 223 225 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 123 [ _41 ])
            (const_int 0 [0]))) "fs/inode.c":283:16 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 123 [ _41 ])
        (nil)))
(jump_insn 225 224 226 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "fs/inode.c":283:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 259)
(note 226 225 227 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 28 (set (reg/f:SI 214)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":284:48 75 {*movsi_internal}
     (nil))
(insn 228 227 229 28 (set (reg:HI 124 [ _42 ])
        (mem:HI (plus:SI (reg/f:SI 214)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":284:48 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 214)
        (nil)))
(insn 229 228 230 28 (set (reg:SI 125 [ _43 ])
        (zero_extend:SI (reg:HI 124 [ _42 ]))) "fs/inode.c":284:33 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 124 [ _42 ])
        (nil)))
(insn 230 229 231 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":284:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 231 230 232 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 125 [ _43 ])) "fs/inode.c":284:33 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 125 [ _43 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 232 231 233 28 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":284:33 75 {*movsi_internal}
     (nil))
(call_insn 233 232 234 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":284:33 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 234 233 235 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":284:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 235 234 236 28 (set (reg:SI 126 [ _44 ])
        (reg:SI 0 ax)) "fs/inode.c":284:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 236 235 237 28 (set (reg:HI 127 [ _45 ])
        (subreg:HI (reg:SI 126 [ _44 ]) 0)) "fs/inode.c":284:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 126 [ _44 ])
        (nil)))
(insn 237 236 238 28 (set (reg/f:SI 215)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":284:31 75 {*movsi_internal}
     (nil))
(insn 238 237 239 28 (set (mem:HI (plus:SI (reg/f:SI 215)
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])
        (reg:HI 127 [ _45 ])) "fs/inode.c":284:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 215)
        (expr_list:REG_DEAD (reg:HI 127 [ _45 ])
            (nil))))
(insn 239 238 240 28 (set (reg/f:SI 216)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":284:27 75 {*movsi_internal}
     (nil))
(insn 240 239 241 28 (set (reg:HI 128 [ _46 ])
        (mem:HI (plus:SI (reg/f:SI 216)
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":284:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 216)
        (nil)))
(insn 241 240 242 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 128 [ _46 ])
            (const_int 0 [0]))) "fs/inode.c":284:12 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 128 [ _46 ])
        (nil)))
(jump_insn 242 241 243 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "fs/inode.c":284:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 259)
(note 243 242 244 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 29 (set (reg/f:SI 217)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":285:27 75 {*movsi_internal}
     (nil))
(insn 245 244 246 29 (set (mem:QI (plus:SI (reg/f:SI 217)
                (const_int 51 [0x33])) [0 inode_107(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":285:27 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 217)
        (nil)))
(insn 246 245 247 29 (set (reg/f:SI 218)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7341ee52e360 jiffies>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 247 246 248 29 (set (reg:SI 129 [ jiffies.9_47 ])
        (mem/v/c:SI (reg/f:SI 218) [3 jiffies+0 S4 A32])) "fs/inode.c":286:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 218)
        (nil)))
(insn 248 247 249 29 (set (reg:SI 220)
        (const_int 1374389535 [0x51eb851f])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 249 248 250 29 (parallel [
            (set (reg:SI 219)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 129 [ jiffies.9_47 ]))
                            (sign_extend:DI (reg:SI 220)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 250))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 435 {*smulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_UNUSED (reg:SI 250)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 250 249 251 29 (parallel [
            (set (reg:SI 221)
                (ashiftrt:SI (reg:SI 219)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 29 (parallel [
            (set (reg:SI 222)
                (ashiftrt:SI (reg:SI 129 [ jiffies.9_47 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 694 {ashrsi3_cvt}
     (expr_list:REG_DEAD (reg:SI 129 [ jiffies.9_47 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 252 251 253 29 (parallel [
            (set (reg:SI 130 [ _48 ])
                (minus:SI (reg:SI 221)
                    (reg:SI 222)))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_DEAD (reg:SI 221)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 253 252 254 29 (set (reg/f:SI 223)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7341ee52e3f0 startup_time>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 254 253 255 29 (set (reg:SI 131 [ startup_time.10_49 ])
        (mem/c:SI (reg/f:SI 223) [3 startup_time+0 S4 A32])) "fs/inode.c":286:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 223)
        (nil)))
(insn 255 254 256 29 (parallel [
            (set (reg:SI 132 [ _50 ])
                (plus:SI (reg:SI 130 [ _48 ])
                    (reg:SI 131 [ startup_time.10_49 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 131 [ startup_time.10_49 ])
        (expr_list:REG_DEAD (reg:SI 130 [ _48 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 256 255 257 29 (set (reg:SI 133 [ _51 ])
        (reg:SI 132 [ _50 ])) "fs/inode.c":286:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132 [ _50 ])
        (nil)))
(insn 257 256 258 29 (set (reg/f:SI 224)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":286:28 75 {*movsi_internal}
     (nil))
(insn 258 257 259 29 (set (mem:SI (plus:SI (reg/f:SI 224)
                (const_int 40 [0x28])) [3 inode_107(D)->i_ctime+0 S4 A32])
        (reg:SI 133 [ _51 ])) "fs/inode.c":286:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 224)
        (expr_list:REG_DEAD (reg:SI 133 [ _51 ])
            (nil))))
(code_label 259 258 260 30 85 (nil) [3 uses])
(note 260 259 261 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 30 (set (reg/f:SI 225)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":288:23 75 {*movsi_internal}
     (nil))
(insn 262 261 263 30 (set (reg:HI 134 [ _52 ])
        (mem:HI (plus:SI (reg/f:SI 225)
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":288:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 225)
        (nil)))
(insn 263 262 264 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 134 [ _52 ])
            (const_int 0 [0]))) "fs/inode.c":288:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 134 [ _52 ])
        (nil)))
(jump_insn 264 263 265 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) "fs/inode.c":288:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 269)
(note 265 264 266 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 432 31 (set (reg:SI 169 [ _90 ])
        (const_int 0 [0])) "fs/inode.c":289:16 75 {*movsi_internal}
     (nil))
(jump_insn 432 266 433 31 (set (pc)
        (label_ref 415)) "fs/inode.c":289:16 807 {jump}
     (nil)
 -> 415)
(barrier 433 432 269)
(code_label 269 433 270 32 86 (nil) [1 uses])
(note 270 269 271 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 32 (set (reg/f:SI 226)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":290:49 75 {*movsi_internal}
     (nil))
(insn 272 271 273 32 (set (reg:HI 135 [ _53 ])
        (mem:HI (plus:SI (reg/f:SI 226)
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":290:49 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 226)
        (nil)))
(insn 273 272 274 32 (set (reg:SI 136 [ _54 ])
        (zero_extend:SI (reg:HI 135 [ _53 ]))) "fs/inode.c":290:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 135 [ _53 ])
        (nil)))
(insn 274 273 275 32 (set (reg/f:SI 227)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":290:27 75 {*movsi_internal}
     (nil))
(insn 275 274 276 32 (set (reg:HI 137 [ _55 ])
        (mem:HI (plus:SI (reg/f:SI 227)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":290:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 227)
        (nil)))
(insn 276 275 277 32 (set (reg:SI 138 [ _56 ])
        (zero_extend:SI (reg:HI 137 [ _55 ]))) "fs/inode.c":290:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 137 [ _55 ])
        (nil)))
(insn 277 276 278 32 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":290:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 278 277 279 32 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 136 [ _54 ])) "fs/inode.c":290:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 136 [ _54 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 279 278 280 32 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 138 [ _56 ])) "fs/inode.c":290:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 138 [ _56 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 280 279 281 32 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":290:16 75 {*movsi_internal}
     (nil))
(call_insn 281 280 282 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":290:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 282 281 283 32 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":290:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 283 282 284 32 (set (reg:SI 228)
        (reg:SI 0 ax)) "fs/inode.c":290:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 284 283 285 32 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])
        (reg:SI 228)) "fs/inode.c":290:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 228)
        (nil)))
(insn 285 284 286 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":290:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 286 285 287 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "fs/inode.c":290:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 291)
(note 287 286 288 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 434 33 (set (reg:SI 169 [ _90 ])
        (const_int 0 [0])) "fs/inode.c":291:16 75 {*movsi_internal}
     (nil))
(jump_insn 434 288 435 33 (set (pc)
        (label_ref 415)) "fs/inode.c":291:16 807 {jump}
     (nil)
 -> 415)
(barrier 435 434 291)
(code_label 291 435 292 34 87 (nil) [1 uses])
(note 292 291 293 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 34 (set (reg/f:SI 229)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":292:30 75 {*movsi_internal}
     (nil))
(insn 294 293 295 34 (set (reg/f:SI 139 [ _57 ])
        (mem/f:SI (reg/f:SI 229) [10 bh_113->b_data+0 S4 A32])) "fs/inode.c":292:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 229)
        (nil)))
(insn 295 294 296 34 (set (reg:SI 230)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":292:46 75 {*movsi_internal}
     (nil))
(insn 296 295 297 34 (parallel [
            (set (reg:SI 140 [ _58 ])
                (ashiftrt:SI (reg:SI 230)
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":292:46 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [9 block+0 S4 A32])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 297 296 298 34 (set (reg:SI 141 [ _59 ])
        (reg:SI 140 [ _58 ])) "fs/inode.c":292:46 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 140 [ _58 ])
        (nil)))
(insn 298 297 299 34 (parallel [
            (set (reg:SI 142 [ _60 ])
                (ashift:SI (reg:SI 141 [ _59 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":292:39 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 141 [ _59 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 299 298 300 34 (parallel [
            (set (reg/f:SI 143 [ _61 ])
                (plus:SI (reg/f:SI 139 [ _57 ])
                    (reg:SI 142 [ _60 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":292:39 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 142 [ _60 ])
        (expr_list:REG_DEAD (reg/f:SI 139 [ _57 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 300 299 301 34 (set (reg:HI 144 [ _62 ])
        (mem:HI (reg/f:SI 143 [ _61 ]) [2 *_61+0 S2 A16])) "fs/inode.c":292:39 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 143 [ _61 ])
        (nil)))
(insn 301 300 302 34 (set (reg:SI 231)
        (zero_extend:SI (reg:HI 144 [ _62 ]))) "fs/inode.c":292:7 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 144 [ _62 ])
        (nil)))
(insn 302 301 303 34 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 231)) "fs/inode.c":292:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 231)
        (nil)))
(insn 303 302 304 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":293:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 304 303 305 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "fs/inode.c":293:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 334)
(note 305 304 306 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":293:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 307 306 308 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "fs/inode.c":293:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 334)
(note 308 307 309 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 36 (set (reg/f:SI 232)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":294:33 75 {*movsi_internal}
     (nil))
(insn 310 309 311 36 (set (reg:HI 145 [ _63 ])
        (mem:HI (plus:SI (reg/f:SI 232)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":294:33 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 232)
        (nil)))
(insn 311 310 312 36 (set (reg:SI 146 [ _64 ])
        (zero_extend:SI (reg:HI 145 [ _63 ]))) "fs/inode.c":294:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 145 [ _63 ])
        (nil)))
(insn 312 311 313 36 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":294:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 313 312 314 36 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 146 [ _64 ])) "fs/inode.c":294:18 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 146 [ _64 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 314 313 315 36 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":294:18 75 {*movsi_internal}
     (nil))
(call_insn 315 314 316 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":294:18 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 316 315 317 36 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":294:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 317 316 318 36 (set (reg:SI 233)
        (reg:SI 0 ax)) "fs/inode.c":294:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 318 317 319 36 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 233)) "fs/inode.c":294:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 233)
        (nil)))
(insn 319 318 320 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":294:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 320 319 321 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "fs/inode.c":294:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 334)
(note 321 320 322 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 37 (set (reg/f:SI 234)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":295:35 75 {*movsi_internal}
     (nil))
(insn 323 322 324 37 (set (reg/f:SI 147 [ _65 ])
        (mem/f:SI (reg/f:SI 234) [10 bh_113->b_data+0 S4 A32])) "fs/inode.c":295:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 234)
        (nil)))
(insn 324 323 325 37 (set (reg:SI 235)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":295:52 75 {*movsi_internal}
     (nil))
(insn 325 324 326 37 (parallel [
            (set (reg:SI 148 [ _66 ])
                (ashiftrt:SI (reg:SI 235)
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":295:52 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 235)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [9 block+0 S4 A32])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 326 325 327 37 (set (reg:SI 149 [ _67 ])
        (reg:SI 148 [ _66 ])) "fs/inode.c":295:52 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148 [ _66 ])
        (nil)))
(insn 327 326 328 37 (parallel [
            (set (reg:SI 150 [ _68 ])
                (ashift:SI (reg:SI 149 [ _67 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":295:45 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 149 [ _67 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 328 327 329 37 (parallel [
            (set (reg/f:SI 151 [ _69 ])
                (plus:SI (reg/f:SI 147 [ _65 ])
                    (reg:SI 150 [ _68 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":295:45 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 150 [ _68 ])
        (expr_list:REG_DEAD (reg/f:SI 147 [ _65 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 329 328 330 37 (set (reg:SI 236)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/inode.c":295:58 75 {*movsi_internal}
     (nil))
(insn 330 329 331 37 (set (reg:HI 152 [ _70 ])
        (subreg:HI (reg:SI 236) 0)) "fs/inode.c":295:58 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 236)
        (nil)))
(insn 331 330 332 37 (set (mem:HI (reg/f:SI 151 [ _69 ]) [2 *_69+0 S2 A16])
        (reg:HI 152 [ _70 ])) "fs/inode.c":295:58 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 152 [ _70 ])
        (expr_list:REG_DEAD (reg/f:SI 151 [ _69 ])
            (nil))))
(insn 332 331 333 37 (set (reg/f:SI 237)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":296:24 75 {*movsi_internal}
     (nil))
(insn 333 332 334 37 (set (mem:QI (plus:SI (reg/f:SI 237)
                (const_int 11 [0xb])) [0 bh_113->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":296:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 237)
        (nil)))
(code_label 334 333 335 38 88 (nil) [3 uses])
(note 335 334 336 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 38 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":298:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 337 336 338 38 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":298:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 338 337 339 38 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":298:5 75 {*movsi_internal}
     (nil))
(call_insn 339 338 340 38 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":298:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 340 339 341 38 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":298:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 341 340 342 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":299:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 342 341 343 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 347)
            (pc))) "fs/inode.c":299:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 347)
(note 343 342 344 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 436 39 (set (reg:SI 169 [ _90 ])
        (const_int 0 [0])) "fs/inode.c":300:16 75 {*movsi_internal}
     (nil))
(jump_insn 436 344 437 39 (set (pc)
        (label_ref 415)) "fs/inode.c":300:16 807 {jump}
     (nil)
 -> 415)
(barrier 437 436 347)
(code_label 347 437 348 40 89 (nil) [1 uses])
(note 348 347 349 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 40 (set (reg/f:SI 238)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":301:27 75 {*movsi_internal}
     (nil))
(insn 350 349 351 40 (set (reg:HI 153 [ _71 ])
        (mem:HI (plus:SI (reg/f:SI 238)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":301:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 238)
        (nil)))
(insn 351 350 352 40 (set (reg:SI 154 [ _72 ])
        (zero_extend:SI (reg:HI 153 [ _71 ]))) "fs/inode.c":301:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 153 [ _71 ])
        (nil)))
(insn 352 351 353 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":301:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 353 352 354 40 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/inode.c":301:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 354 353 355 40 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 154 [ _72 ])) "fs/inode.c":301:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 154 [ _72 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 355 354 356 40 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":301:16 75 {*movsi_internal}
     (nil))
(call_insn 356 355 357 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":301:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 357 356 358 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":301:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 358 357 359 40 (set (reg:SI 239)
        (reg:SI 0 ax)) "fs/inode.c":301:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 359 358 360 40 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])
        (reg:SI 239)) "fs/inode.c":301:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 239)
        (nil)))
(insn 360 359 361 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":301:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 361 360 362 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 366)
            (pc))) "fs/inode.c":301:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 366)
(note 362 361 363 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 438 41 (set (reg:SI 169 [ _90 ])
        (const_int 0 [0])) "fs/inode.c":302:16 75 {*movsi_internal}
     (nil))
(jump_insn 438 363 439 41 (set (pc)
        (label_ref 415)) "fs/inode.c":302:16 807 {jump}
     (nil)
 -> 415)
(barrier 439 438 366)
(code_label 366 439 367 42 90 (nil) [1 uses])
(note 367 366 368 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 42 (set (reg/f:SI 240)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":303:30 75 {*movsi_internal}
     (nil))
(insn 369 368 370 42 (set (reg/f:SI 155 [ _73 ])
        (mem/f:SI (reg/f:SI 240) [10 bh_121->b_data+0 S4 A32])) "fs/inode.c":303:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 240)
        (nil)))
(insn 370 369 371 42 (set (reg:SI 156 [ block.11_74 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":303:46 75 {*movsi_internal}
     (nil))
(insn 371 370 372 42 (parallel [
            (set (reg:SI 157 [ _75 ])
                (and:SI (reg:SI 156 [ block.11_74 ])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":303:46 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 156 [ block.11_74 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 372 371 373 42 (parallel [
            (set (reg:SI 158 [ _76 ])
                (ashift:SI (reg:SI 157 [ _75 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":303:39 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 157 [ _75 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 373 372 374 42 (parallel [
            (set (reg/f:SI 159 [ _77 ])
                (plus:SI (reg/f:SI 155 [ _73 ])
                    (reg:SI 158 [ _76 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":303:39 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 158 [ _76 ])
        (expr_list:REG_DEAD (reg/f:SI 155 [ _73 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 374 373 375 42 (set (reg:HI 160 [ _78 ])
        (mem:HI (reg/f:SI 159 [ _77 ]) [2 *_77+0 S2 A16])) "fs/inode.c":303:39 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 159 [ _77 ])
        (nil)))
(insn 375 374 376 42 (set (reg:SI 241)
        (zero_extend:SI (reg:HI 160 [ _78 ]))) "fs/inode.c":303:7 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 160 [ _78 ])
        (nil)))
(insn 376 375 377 42 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 241)) "fs/inode.c":303:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 241)
        (nil)))
(insn 377 376 378 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":304:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 378 377 379 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "fs/inode.c":304:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 407)
(note 379 378 380 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":304:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 381 380 382 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "fs/inode.c":304:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 407)
(note 382 381 383 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 44 (set (reg/f:SI 242)
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":305:33 75 {*movsi_internal}
     (nil))
(insn 384 383 385 44 (set (reg:HI 161 [ _79 ])
        (mem:HI (plus:SI (reg/f:SI 242)
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":305:33 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 242)
        (nil)))
(insn 385 384 386 44 (set (reg:SI 162 [ _80 ])
        (zero_extend:SI (reg:HI 161 [ _79 ]))) "fs/inode.c":305:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 161 [ _79 ])
        (nil)))
(insn 386 385 387 44 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":305:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 387 386 388 44 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 162 [ _80 ])) "fs/inode.c":305:18 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 162 [ _80 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 388 387 389 44 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":305:18 75 {*movsi_internal}
     (nil))
(call_insn 389 388 390 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":305:18 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 390 389 391 44 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":305:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 391 390 392 44 (set (reg:SI 243)
        (reg:SI 0 ax)) "fs/inode.c":305:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 392 391 393 44 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 243)) "fs/inode.c":305:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 243)
        (nil)))
(insn 393 392 394 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":305:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 394 393 395 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "fs/inode.c":305:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 407)
(note 395 394 396 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 45 (set (reg/f:SI 244)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":306:35 75 {*movsi_internal}
     (nil))
(insn 397 396 398 45 (set (reg/f:SI 163 [ _81 ])
        (mem/f:SI (reg/f:SI 244) [10 bh_121->b_data+0 S4 A32])) "fs/inode.c":306:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 244)
        (nil)))
(insn 398 397 399 45 (set (reg:SI 164 [ block.12_82 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":306:52 75 {*movsi_internal}
     (nil))
(insn 399 398 400 45 (parallel [
            (set (reg:SI 165 [ _83 ])
                (and:SI (reg:SI 164 [ block.12_82 ])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":306:52 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 164 [ block.12_82 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 400 399 401 45 (parallel [
            (set (reg:SI 166 [ _84 ])
                (ashift:SI (reg:SI 165 [ _83 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":306:45 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 165 [ _83 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 401 400 402 45 (parallel [
            (set (reg/f:SI 167 [ _85 ])
                (plus:SI (reg/f:SI 163 [ _81 ])
                    (reg:SI 166 [ _84 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":306:45 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 166 [ _84 ])
        (expr_list:REG_DEAD (reg/f:SI 163 [ _81 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 402 401 403 45 (set (reg:SI 245)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/inode.c":306:59 75 {*movsi_internal}
     (nil))
(insn 403 402 404 45 (set (reg:HI 168 [ _86 ])
        (subreg:HI (reg:SI 245) 0)) "fs/inode.c":306:59 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 404 403 405 45 (set (mem:HI (reg/f:SI 167 [ _85 ]) [2 *_85+0 S2 A16])
        (reg:HI 168 [ _86 ])) "fs/inode.c":306:59 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 168 [ _86 ])
        (expr_list:REG_DEAD (reg/f:SI 167 [ _85 ])
            (nil))))
(insn 405 404 406 45 (set (reg/f:SI 246)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":307:24 75 {*movsi_internal}
     (nil))
(insn 406 405 407 45 (set (mem:QI (plus:SI (reg/f:SI 246)
                (const_int 11 [0xb])) [0 bh_121->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":307:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 246)
        (nil)))
(code_label 407 406 408 46 91 (nil) [3 uses])
(note 408 407 409 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 46 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":309:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 410 409 411 46 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [7 bh+0 S4 A32])) "fs/inode.c":309:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 411 410 412 46 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":309:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 412 411 413 46 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":309:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 413 412 414 46 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":309:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 414 413 415 46 (set (reg:SI 169 [ _90 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/inode.c":310:12 75 {*movsi_internal}
     (nil))
(code_label 415 414 416 47 79 (nil) [8 uses])
(note 416 415 417 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 421 47 (set (reg:SI 170 [ <retval> ])
        (reg:SI 169 [ _90 ])) "fs/inode.c":311:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169 [ _90 ])
        (nil)))
(insn 421 417 422 47 (set (reg/i:SI 0 ax)
        (reg:SI 170 [ <retval> ])) "fs/inode.c":311:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 170 [ <retval> ])
        (nil)))
(insn 422 421 0 47 (use (reg/i:SI 0 ax)) "fs/inode.c":311:1 -1
     (nil))

;; Function bmap (bmap, funcdef_no=12, decl_uid=1151, cgraph_uid=13, symbol_order=13)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 5(l0): point = 18
   Insn 21(l0): point = 20
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [20..20]
Compressing live ranges: from 23 to 5 - 21%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  pref1:a1(r83)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bmap

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={6d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={4d} r18={1d} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 110{88d,22u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":315:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/inode.c":315:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":315:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":315:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_bmap") [flags 0x3]  <function_decl 0x7341ee548f00 _bmap>) [0 _bmap S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":315:12 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":315:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 14 2 (set (reg:SI 83 [ _5 ])
        (reg:SI 0 ax)) "fs/inode.c":315:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 11 18 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _5 ])) "fs/inode.c":315:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _5 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/inode.c":316:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:SI 0 ax)) "fs/inode.c":316:1 -1
     (nil))

;; Function create_block (create_block, funcdef_no=13, decl_uid=1154, cgraph_uid=14, symbol_order=14)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 5(l0): point = 18
   Insn 21(l0): point = 20
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [20..20]
Compressing live ranges: from 23 to 5 - 21%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  pref1:a1(r83)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


create_block

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={6d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={4d} r18={1d} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 110{88d,22u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":320:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/inode.c":320:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])) "fs/inode.c":320:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])) "fs/inode.c":320:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_bmap") [flags 0x3]  <function_decl 0x7341ee548f00 _bmap>) [0 _bmap S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":320:12 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":320:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 14 2 (set (reg:SI 83 [ _5 ])
        (reg:SI 0 ax)) "fs/inode.c":320:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 11 18 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _5 ])) "fs/inode.c":320:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _5 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/inode.c":321:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:SI 0 ax)) "fs/inode.c":321:1 -1
     (nil))

;; Function get_pipe_inode (get_pipe_inode, funcdef_no=14, decl_uid=1181, cgraph_uid=15, symbol_order=15)

scanning new insn with uid = 57.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:13000
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a13(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a14(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 51(l0): point = 0
   Insn 50(l0): point = 2
   Insn 46(l0): point = 4
   Insn 43(l0): point = 7
   Insn 42(l0): point = 9
   Insn 41(l0): point = 11
   Insn 40(l0): point = 13
   Insn 39(l0): point = 15
   Insn 38(l0): point = 17
   Insn 37(l0): point = 19
   Insn 36(l0): point = 21
   Insn 35(l0): point = 23
   Insn 34(l0): point = 25
   Insn 33(l0): point = 27
   Insn 55(l0): point = 30
   Insn 28(l0): point = 32
   Insn 27(l0): point = 34
   Insn 26(l0): point = 36
   Insn 24(l0): point = 39
   Insn 23(l0): point = 41
   Insn 22(l0): point = 43
   Insn 21(l0): point = 45
   Insn 20(l0): point = 47
   Insn 19(l0): point = 49
   Insn 18(l0): point = 51
   Insn 17(l0): point = 53
   Insn 16(l0): point = 55
   Insn 53(l0): point = 58
   Insn 11(l0): point = 60
   Insn 9(l0): point = 63
   Insn 8(l0): point = 65
   Insn 7(l0): point = 67
   Insn 6(l0): point = 69
   Insn 5(l0): point = 71
   Insn 57(l0): point = 73
 a0(r87): [3..4]
 a1(r86): [58..60] [30..32] [5..7]
 a2(r96): [10..11]
 a3(r95): [14..15]
 a4(r85): [14..17]
 a5(r94): [18..19]
 a6(r93): [22..23]
 a7(r92): [26..27]
 a8(r91): [35..36]
 a9(r84): [42..43]
 a10(r90): [44..45]
 a11(r89): [48..49]
 a12(r83): [48..51]
 a13(r82): [63..73] [56..57]
 a14(r88): [68..69]
Compressing live ranges: from 76 to 30 - 39%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [26..27] [14..15] [2..3]
 a2(r96): [4..5]
 a3(r95): [6..7]
 a4(r85): [6..7]
 a5(r94): [8..9]
 a6(r93): [10..11]
 a7(r92): [12..13]
 a8(r91): [16..17]
 a9(r84): [18..19]
 a10(r90): [20..21]
 a11(r89): [22..23]
 a12(r83): [22..23]
 a13(r82): [28..29] [24..25]
 a14(r88): [28..29]
  pref0:a14(r88)<-hr0@1500
  pref1:a0(r87)<-hr0@1500
  pref2:a12(r83)<-hr0@1500
  pref3:a13(r82)<-hr3@1500
  regions=1, blocks=8, points=30
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
   13:r82  l0     3   12:r83  l0     0    9:r84  l0     0    4:r85  l0     1
    1:r86  l0     0    0:r87  l0     0   14:r88  l0     0   11:r89  l0     1
   10:r90  l0     0    8:r91  l0     0    7:r92  l0     0    6:r93  l0     0
    5:r94  l0     0    3:r95  l0     0    2:r96  l0     0
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_pipe_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r3={1d,1u} r6={1d,7u} r7={1d,9u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,6u} r17={5d,2u} r18={2d} r19={1d,18u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={3d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 229{167d,62u,0e} in 35{33 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 57 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 57 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 57 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_empty_inode") [flags 0x3]  <function_decl 0x7341ee515300 get_empty_inode>) [0 get_empty_inode S1 A8])
            (const_int 0 [0]))) "fs/inode.c":327:19 823 {*call_value}
     (nil)
    (nil))
(insn 6 5 7 2 (set (reg:SI 88)
        (reg:SI 0 ax)) "fs/inode.c":327:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg:SI 88)) "fs/inode.c":327:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":327:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "fs/inode.c":327:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 53 3 (set (reg/f:SI 86 [ _4 ])
        (const_int 0 [0])) "fs/inode.c":328:16 75 {*movsi_internal}
     (nil))
(jump_insn 53 11 54 3 (set (pc)
        (label_ref 44)) "fs/inode.c":328:16 807 {jump}
     (nil)
 -> 44)
(barrier 54 53 14)
(code_label 14 54 15 4 97 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/inode.c":329:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x7341ee538900 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "fs/inode.c":329:27 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 18 17 19 4 (set (reg:SI 83 [ _1 ])
        (reg:SI 0 ax)) "fs/inode.c":329:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":329:25 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (mem:SI (plus:SI (reg/f:SI 89)
                (const_int 4 [0x4])) [3 inode_8->i_size+0 S4 A32])
        (reg:SI 83 [ _1 ])) "fs/inode.c":329:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
            (nil))))
(insn 21 20 22 4 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":329:16 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 90)
                (const_int 4 [0x4])) [3 inode_8->i_size+0 S4 A32])) "fs/inode.c":329:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _2 ])
            (const_int 0 [0]))) "fs/inode.c":329:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/inode.c":329:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 31)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":330:24 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (mem:HI (plus:SI (reg/f:SI 91)
                (const_int 48 [0x30])) [2 inode_8->i_count+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":330:24 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 28 27 55 5 (set (reg/f:SI 86 [ _4 ])
        (const_int 0 [0])) "fs/inode.c":331:16 75 {*movsi_internal}
     (nil))
(jump_insn 55 28 56 5 (set (pc)
        (label_ref 44)) "fs/inode.c":331:16 807 {jump}
     (nil)
 -> 44)
(barrier 56 55 31)
(code_label 31 56 32 6 99 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":333:20 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (mem:HI (plus:SI (reg/f:SI 92)
                (const_int 48 [0x30])) [2 inode_8->i_count+0 S2 A32])
        (const_int 2 [0x2])) "fs/inode.c":333:20 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 35 34 36 6 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":334:43 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (mem:HI (plus:SI (reg/f:SI 93)
                (const_int 16 [0x10])) [2 inode_8->i_zone[1]+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":334:43 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 37 36 38 6 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":334:25 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 94)
                (const_int 16 [0x10])) [2 inode_8->i_zone[1]+0 S2 A32])) "fs/inode.c":334:25 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 39 38 40 6 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":334:23 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (set (mem:HI (plus:SI (reg/f:SI 95)
                (const_int 14 [0xe])) [2 inode_8->i_zone[0]+0 S2 A16])
        (reg:HI 85 [ _3 ])) "fs/inode.c":334:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
            (nil))))
(insn 41 40 42 6 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":335:19 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (mem:QI (plus:SI (reg/f:SI 96)
                (const_int 52 [0x34])) [0 inode_8->i_pipe+0 S1 A32])
        (const_int 1 [0x1])) "fs/inode.c":335:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 43 42 44 6 (set (reg/f:SI 86 [ _4 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/inode.c":336:12 75 {*movsi_internal}
     (nil))
(code_label 44 43 45 7 98 (nil) [2 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 50 7 (set (reg/f:SI 87 [ <retval> ])
        (reg/f:SI 86 [ _4 ])) "fs/inode.c":337:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(insn 50 46 51 7 (set (reg/i:SI 0 ax)
        (reg/f:SI 87 [ <retval> ])) "fs/inode.c":337:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ <retval> ])
        (nil)))
(insn 51 50 0 7 (use (reg/i:SI 0 ax)) "fs/inode.c":337:1 -1
     (nil))
