
;; Function wait_on_super (wait_on_super, funcdef_no=1, decl_uid=1355, cgraph_uid=2, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) q {*cmpqi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 30: point = 0, n_alt = -1
  BB 5
   Insn 24: point = 0, n_alt = -1
  BB 4
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = 0
   Insn 19: point = 1, n_alt = 4
   Insn 18: point = 3, n_alt = 0
  BB 2
   Insn 27: point = 5, n_alt = -1
   Insn 5: point = 5, n_alt = -1
   Insn 31: point = 5, n_alt = 0
  BB 3
   Insn 15: point = 6, n_alt = 0
   Insn 14: point = 6, n_alt = 0
   Insn 13: point = 6, n_alt = -2
   Insn 12: point = 6, n_alt = 0
   Insn 11: point = 7, n_alt = 0
   Insn 10: point = 7, n_alt = 0
   Insn 9: point = 9, n_alt = 0
 r82: [0..10]
 r83: [6..7]
 r84: [0..1]
 r85: [8..9]
 r86: [2..3]
Compressing live ranges: from 11 to 8 - 72%
Ranges after the compression:
 r82: [0..7]
 r83: [4..5]
 r84: [0..1]
 r85: [6..7]
 r86: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 31
changing reg in insn 13
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 21
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.


wait_on_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={2d} r2={2d} r3={1d,1u} r7={4d,14u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={8d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 109{88d,20u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 27 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/super.c:35)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":35:5 -1
     (nil))
(jump_insn 27 5 28 2 (set (pc)
        (label_ref 16)) "fs/super.c":36:11 807 {jump}
     (nil)
 -> 16)
(barrier 28 27 20)
(code_label 20 28 8 3 3 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [19 sb+0 S4 A32])) "fs/super.c":37:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [85])
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":37:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])
            (const_int 100 [0x64]))
        (nil)))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":37:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/super.c":37:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x77d7fb110f00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/super.c":37:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":37:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 2 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [19 sb+0 S4 A32])) "fs/super.c":36:14 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 104 [0x68])) [0 sb_5(D)->s_lock+0 S1 A32])) "fs/super.c":36:14 77 {*movqi_internal}
     (nil))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/super.c":36:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/super.c":36:12 806 {*jcc}
     (nil)
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 29 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/super.c:38)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":38:5 -1
     (nil))
(note 29 24 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 6 (const_int 0 [0]) "fs/super.c":39:1 843 {nop}
     (nil))
(note 32 30 0 NOTE_INSN_DELETED)

;; Function get_super (get_super, funcdef_no=2, decl_uid=1111, cgraph_uid=3, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 19:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6 7
EBB 8
EBB 9
EBB 10 11
EBB 12

********** Pseudo live ranges #1: **********

  BB 12
   Insn 61: point = 0, n_alt = -1
   Insn 60: point = 0, n_alt = -2
   Insn 56: point = 1, n_alt = -2
  BB 7
   Insn 67: point = 4, n_alt = -1
   Insn 34: point = 4, n_alt = 0
  BB 3
   Insn 63: point = 5, n_alt = -1
   Insn 8: point = 5, n_alt = 0
  BB 11
   Insn 53: point = 6, n_alt = 0
  BB 10
   Insn 51: point = 7, n_alt = -1
   Insn 50: point = 7, n_alt = 0
   Insn 48: point = 8, n_alt = 0
  BB 8
   Insn 69: point = 10, n_alt = -1
   Insn 40: point = 10, n_alt = 1
   Insn 39: point = 11, n_alt = 0
  BB 6
   Insn 32: point = 13, n_alt = -1
   Insn 31: point = 13, n_alt = 0
   Insn 30: point = 14, n_alt = 0
   Insn 29: point = 16, n_alt = 2
   Insn 28: point = 18, n_alt = 0
   Insn 27: point = 19, n_alt = 0
   Insn 26: point = 19, n_alt = 0
   Insn 25: point = 19, n_alt = 0
   Insn 24: point = 19, n_alt = 0
  BB 4
   Insn 65: point = 20, n_alt = -1
   Insn 14: point = 20, n_alt = 1
   Insn 13: point = 21, n_alt = 0
  BB 2
   Insn 6: point = 23, n_alt = -1
   Insn 5: point = 23, n_alt = 1
   Insn 71: point = 23, n_alt = 0
  BB 9
   Insn 45: point = 24, n_alt = 0
  BB 5
   Insn 22: point = 25, n_alt = -1
   Insn 21: point = 25, n_alt = 0
   Insn 20: point = 26, n_alt = 0
   Insn 19: point = 28, n_alt = 2
   Insn 18: point = 30, n_alt = 0
 r82: [7..31]
 r83: [27..28]
 r84: [25..26]
 r85: [15..16]
 r86: [13..14]
 r87: [7..8]
 r88: [2..6]
 r89: [0..1]
 r90: [20..21]
 r91: [29..30]
 r92: [17..18]
 r93: [10..11]
Compressing live ranges: from 32 to 22 - 68%
Ranges after the compression:
 r82: [4..21]
 r83: [18..19]
 r84: [16..17]
 r85: [10..11]
 r86: [8..9]
 r87: [4..5]
 r88: [2..3]
 r89: [0..1]
 r90: [14..15]
 r91: [20..21]
 r92: [12..13]
 r93: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 71
changing reg in insn 48
changing reg in insn 39
changing reg in insn 13
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 48
changing reg in insn 50
changing reg in insn 53
changing reg in insn 34
changing reg in insn 8
changing reg in insn 56
changing reg in insn 56
changing reg in insn 60
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 28
changing reg in insn 29
changing reg in insn 39
changing reg in insn 40
deleting insn with uid = 56.
deleting insn with uid = 60.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.


get_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,11u} r1={2d} r2={2d} r3={1d,3u} r7={4d,30u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={9d,4u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 145{97d,48u,0e} in 33{32 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 71 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 71 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 71 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":45:7 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "fs/super.c":45:7 806 {*jcc}
     (nil)
 -> 11)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 63 3 (set (reg/f:SI 0 ax [orig:88 _7 ] [88])
        (const_int 0 [0])) "fs/super.c":46:15 75 {*movsi_internal}
     (nil))
(jump_insn 63 8 64 3 (set (pc)
        (label_ref 54)) "fs/super.c":46:15 807 {jump}
     (nil)
 -> 54)
(barrier 64 63 11)
(code_label 11 64 12 4 5 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:SI 0 ax [90])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":48:6 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
        (nil)))
(insn 14 13 65 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])
        (reg/f:SI 0 ax [90])) "fs/super.c":48:6 75 {*movsi_internal}
     (nil))
(jump_insn 65 14 66 4 (set (pc)
        (label_ref 46)) "fs/super.c":49:10 807 {jump}
     (nil)
 -> 46)
(barrier 66 65 49)
(code_label 49 66 17 5 10 (nil) [1 uses])
(note 17 49 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":50:13 75 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [91])
                (const_int 84 [0x54])) [2 s_6->s_dev+0 S2 A32])) "fs/super.c":50:13 76 {*movhi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/super.c":50:13 144 {*zero_extendhisi2}
     (nil))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:84 _2 ] [84]))) "fs/super.c":50:11 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/super.c":50:11 806 {*jcc}
     (nil)
 -> 43)
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":51:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 25 24 26 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [19 s+0 S4 A32])) "fs/super.c":51:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 25 27 6 (call (mem:QI (symbol_ref:SI ("wait_on_super") [flags 0x3]  <function_decl 0x77d7fb137f00 wait_on_super>) [0 wait_on_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":51:12 812 {*call}
     (nil)
    (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":51:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 27 29 6 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":52:17 75 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [92])
                (const_int 84 [0x54])) [2 s_6->s_dev+0 S2 A32])) "fs/super.c":52:17 76 {*movhi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/super.c":52:17 144 {*zero_extendhisi2}
     (nil))
(insn 31 30 32 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:86 _4 ] [86]))) "fs/super.c":52:15 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 33 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "fs/super.c":52:15 806 {*jcc}
     (nil)
 -> 37)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 67 7 (set (reg/f:SI 0 ax [orig:88 _7 ] [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":53:23 75 {*movsi_internal}
     (nil))
(jump_insn 67 34 68 7 (set (pc)
        (label_ref 54)) "fs/super.c":53:23 807 {jump}
     (nil)
 -> 54)
(barrier 68 67 37)
(code_label 37 68 38 8 9 (nil) [1 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:SI 0 ax [93])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":54:14 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
        (nil)))
(insn 40 39 69 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])
        (reg/f:SI 0 ax [93])) "fs/super.c":54:14 75 {*movsi_internal}
     (nil))
(jump_insn 69 40 70 8 (set (pc)
        (label_ref 46)) 807 {jump}
     (nil)
 -> 46)
(barrier 70 69 43)
(code_label 43 70 44 9 8 (nil) [1 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [19 s+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [19 s+0 S4 A32])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":56:13 209 {*addsi_1}
     (nil))
(code_label 46 45 47 10 7 (nil) [2 uses])
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 50 10 (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                        ] UNSPEC_GOTOFF)
                    (const_int 864 [0x360]))))) "fs/super.c":49:24 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                (const_int 864 [0x360])))
        (nil)))
(insn 50 48 51 10 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [19 s+0 S4 A32])
            (reg/f:SI 0 ax [orig:87 _5 ] [87]))) "fs/super.c":49:13 11 {*cmpsi_1}
     (nil))
(jump_insn 51 50 52 10 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "fs/super.c":49:13 806 {*jcc}
     (nil)
 -> 49)
(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 11 (set (reg/f:SI 0 ax [orig:88 _7 ] [88])
        (const_int 0 [0])) "fs/super.c":57:12 75 {*movsi_internal}
     (nil))
(code_label 54 53 55 12 6 (nil) [2 uses])
(note 55 54 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 55 72 12 (use (reg/i:SI 0 ax)) "fs/super.c":58:1 -1
     (nil))
(note 72 61 0 NOTE_INSN_DELETED)

;; Function lock_super (lock_super, funcdef_no=3, decl_uid=1368, cgraph_uid=4, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) qn {*movqi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 32: point = 0, n_alt = -1
  BB 5
   Insn 26: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 8
   Insn 24: point = 1, n_alt = 0
  BB 4
   Insn 22: point = 2, n_alt = -1
   Insn 21: point = 2, n_alt = 0
   Insn 19: point = 3, n_alt = 4
   Insn 18: point = 5, n_alt = 0
  BB 2
   Insn 29: point = 7, n_alt = -1
   Insn 5: point = 7, n_alt = -1
   Insn 33: point = 7, n_alt = 0
  BB 3
   Insn 15: point = 8, n_alt = 0
   Insn 14: point = 8, n_alt = 0
   Insn 13: point = 8, n_alt = -2
   Insn 12: point = 8, n_alt = 0
   Insn 11: point = 9, n_alt = 0
   Insn 10: point = 9, n_alt = 0
   Insn 9: point = 11, n_alt = 0
 r82: [2..12]
 r83: [8..9]
 r84: [2..3]
 r85: [10..11]
 r86: [4..5]
 r87: [0..1]
Compressing live ranges: from 13 to 10 - 76%
Ranges after the compression:
 r82: [2..9]
 r83: [6..7]
 r84: [2..3]
 r85: [8..9]
 r86: [4..5]
 r87: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 33
changing reg in insn 13
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 21
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.


lock_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={2d} r2={2d} r3={1d,1u} r7={4d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={8d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 112{89d,22u,1e} in 17{16 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 33 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 33 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 29 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/super.c:62)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":62:5 -1
     (nil))
(jump_insn 29 5 30 2 (set (pc)
        (label_ref 16)) "fs/super.c":63:11 807 {jump}
     (nil)
 -> 16)
(barrier 30 29 20)
(code_label 20 30 8 3 13 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [19 sb+0 S4 A32])) "fs/super.c":64:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [85])
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":64:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])
            (const_int 100 [0x64]))
        (nil)))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":64:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/super.c":64:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x77d7fb110f00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/super.c":64:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":64:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 12 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [19 sb+0 S4 A32])) "fs/super.c":63:14 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 104 [0x68])) [0 sb_5(D)->s_lock+0 S1 A32])) "fs/super.c":63:14 77 {*movqi_internal}
     (nil))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/super.c":63:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/super.c":63:12 806 {*jcc}
     (nil)
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [19 sb+0 S4 A32])) "fs/super.c":65:16 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (mem:QI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 104 [0x68])) [0 sb_5(D)->s_lock+0 S1 A32])
        (const_int 1 [0x1])) "fs/super.c":65:16 77 {*movqi_internal}
     (nil))
(insn 26 25 31 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/super.c:66)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":66:5 -1
     (nil))
(note 31 26 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 34 6 (const_int 0 [0]) "fs/super.c":67:1 843 {nop}
     (nil))
(note 34 32 0 NOTE_INSN_DELETED)

;; Function free_super (free_super, funcdef_no=4, decl_uid=1374, cgraph_uid=5, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 7:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 19: point = 0, n_alt = -1
  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = 0
   Insn 13: point = 0, n_alt = 0
   Insn 12: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = 0
   Insn 10: point = 2, n_alt = 0
   Insn 9: point = 2, n_alt = 0
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 5, n_alt = 8
   Insn 6: point = 6, n_alt = 0
   Insn 5: point = 7, n_alt = -1
   Insn 20: point = 7, n_alt = 0
 r82: [0..7]
 r83: [1..2]
 r84: [5..6]
 r85: [3..4]
Compressing live ranges: from 8 to 6 - 75%
Ranges after the compression:
 r82: [0..5]
 r83: [0..1]
 r84: [4..5]
 r85: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 20
changing reg in insn 12
changing reg in insn 9
changing reg in insn 11
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.


free_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={5d,3u} r2={2d} r3={1d,1u} r7={4d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={7d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 104{87d,16u,1e} in 13{12 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/super.c:71)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":71:5 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [19 sb+0 S4 A32])) "fs/super.c":72:16 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem:QI (plus:SI (reg/f:SI 1 dx [84])
                (const_int 104 [0x68])) [0 sb_3(D)->s_lock+0 S1 A32])
        (const_int 0 [0])) "fs/super.c":72:16 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 1 dx [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [19 sb+0 S4 A32])) "fs/super.c":73:5 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 1 dx [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 1 dx [85])
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":73:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])
            (const_int 100 [0x64]))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":73:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 11 10 12 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 1 dx [orig:83 _1 ] [83])) "fs/super.c":73:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "fs/super.c":73:5 75 {*movsi_internal}
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x77d7fb137300 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/super.c":73:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":73:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 15 14 18 2 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/super.c:74)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":74:5 -1
     (nil))
(note 18 15 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 21 3 (const_int 0 [0]) "fs/super.c":75:1 843 {nop}
     (nil))
(note 21 19 0 NOTE_INSN_DELETED)

;; Function read_super (read_super, funcdef_no=5, decl_uid=1377, cgraph_uid=6, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 45:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 70:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 72:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 73:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 82:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 89:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 112:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 118:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 123:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 128:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 129:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 132:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 146:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 161:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 163:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 177:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 182:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 190:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 195:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 204:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 208:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 219:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 224:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 228:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 229:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 232:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 237:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 246:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 250:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 258:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 260:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 262:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 264
	 Choosing alt 0 in insn 264:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 268:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 274:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 276:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 280:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 281:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 296:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 298:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 302:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 303:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 313:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 314:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 315:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 317:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 326:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 330:  (0) =qm  (1) %0  (2) qn {*iorqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 331:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 335:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 339:  (0) =qm  (1) %0  (2) qn {*iorqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 340:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 341:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 344:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8
EBB 9 10
EBB 42
EBB 11 12
EBB 13 14 15
EBB 16
EBB 17
EBB 18 19
EBB 20
EBB 21 22
EBB 23 24 25
EBB 26 43
EBB 44
EBB 27
EBB 28 29 30
EBB 31 45
EBB 46
EBB 32 33
EBB 34
EBB 35 36
EBB 37
EBB 38 39
EBB 40
EBB 41

********** Pseudo live ranges #1: **********

  BB 41
   Insn 353: point = 0, n_alt = -1
   Insn 352: point = 0, n_alt = -2
   Insn 348: point = 1, n_alt = -2
  BB 39
   Insn 380: point = 4, n_alt = -1
   Insn 318: point = 4, n_alt = 0
   Insn 317: point = 5, n_alt = 0
   Insn 316: point = 5, n_alt = 0
   Insn 315: point = 5, n_alt = 0
   Insn 314: point = 5, n_alt = 0
   Insn 313: point = 5, n_alt = 3
   Insn 312: point = 6, n_alt = 0
  BB 38
   Insn 310: point = 7, n_alt = -1
   Insn 309: point = 7, n_alt = 0
  BB 36
   Insn 378: point = 8, n_alt = -1
   Insn 290: point = 8, n_alt = 1
  BB 35
   Insn 288: point = 9, n_alt = -1
   Insn 287: point = 9, n_alt = 0
  BB 33
   Insn 376: point = 10, n_alt = -1
   Insn 268: point = 10, n_alt = 1
  BB 34
   Insn 281: point = 11, n_alt = 0
   Insn 280: point = 11, n_alt = 0
   Insn 279: point = 11, n_alt = 0
   Insn 278: point = 11, n_alt = -2
   Insn 277: point = 11, n_alt = 0
   Insn 276: point = 12, n_alt = 0
   Insn 275: point = 12, n_alt = 0
   Insn 274: point = 14, n_alt = 0
   Insn 273: point = 16, n_alt = 0
   Insn 272: point = 17, n_alt = 0
  BB 37
   Insn 303: point = 19, n_alt = 0
   Insn 302: point = 19, n_alt = 0
   Insn 301: point = 19, n_alt = 0
   Insn 300: point = 19, n_alt = -2
   Insn 299: point = 19, n_alt = 0
   Insn 298: point = 20, n_alt = 0
   Insn 297: point = 20, n_alt = 0
   Insn 296: point = 22, n_alt = 0
   Insn 295: point = 24, n_alt = 0
   Insn 294: point = 25, n_alt = 0
  BB 15
   Insn 366: point = 27, n_alt = -1
   Insn 133: point = 27, n_alt = 0
   Insn 132: point = 28, n_alt = 0
   Insn 131: point = 28, n_alt = 0
   Insn 130: point = 28, n_alt = 0
   Insn 129: point = 28, n_alt = 0
   Insn 128: point = 28, n_alt = 3
   Insn 127: point = 29, n_alt = 0
  BB 12
   Insn 364: point = 30, n_alt = -1
   Insn 94: point = 30, n_alt = 0
   Insn 93: point = 31, n_alt = 0
   Insn 92: point = 31, n_alt = 0
   Insn 91: point = 31, n_alt = 0
   Insn 90: point = 31, n_alt = 0
   Insn 89: point = 31, n_alt = 3
   Insn 88: point = 32, n_alt = 0
  BB 8
   Insn 359: point = 33, n_alt = -1
   Insn 39: point = 33, n_alt = 0
  BB 5
   Insn 357: point = 34, n_alt = -1
   Insn 27: point = 34, n_alt = 0
  BB 3
   Insn 355: point = 35, n_alt = -1
   Insn 8: point = 35, n_alt = 0
  BB 40
   Insn 345: point = 36, n_alt = 0
   Insn 344: point = 37, n_alt = 0
   Insn 343: point = 37, n_alt = 0
   Insn 342: point = 37, n_alt = 0
   Insn 341: point = 37, n_alt = 0
   Insn 340: point = 37, n_alt = 8
   Insn 339: point = 38, n_alt = 0
   Insn 338: point = 40, n_alt = 0
   Insn 337: point = 42, n_alt = 0
   Insn 336: point = 44, n_alt = 0
   Insn 335: point = 45, n_alt = 4
   Insn 334: point = 47, n_alt = 0
   Insn 333: point = 49, n_alt = 0
   Insn 332: point = 51, n_alt = 0
   Insn 331: point = 52, n_alt = 8
   Insn 330: point = 53, n_alt = 0
   Insn 329: point = 55, n_alt = 0
   Insn 328: point = 57, n_alt = 0
   Insn 327: point = 59, n_alt = 0
   Insn 326: point = 60, n_alt = 4
   Insn 325: point = 62, n_alt = 0
   Insn 324: point = 64, n_alt = 0
   Insn 323: point = 66, n_alt = 0
  BB 32
   Insn 266: point = 67, n_alt = -1
   Insn 265: point = 67, n_alt = 0
   Insn 264: point = 68, n_alt = 0
   Insn 263: point = 70, n_alt = 0
   Insn 262: point = 72, n_alt = 2
   Insn 261: point = 74, n_alt = 0
   Insn 260: point = 75, n_alt = 3
   Insn 259: point = 77, n_alt = 0
   Insn 258: point = 79, n_alt = 2
   Insn 257: point = 81, n_alt = 0
  BB 45
   Insn 392: point = 83, n_alt = -1
  BB 46
   Insn 396: point = 84, n_alt = -1
  BB 28
   Insn 235: point = 85, n_alt = -1
   Insn 234: point = 85, n_alt = 0
   Insn 233: point = 86, n_alt = 0
   Insn 232: point = 88, n_alt = 0
   Insn 231: point = 90, n_alt = 0
   Insn 230: point = 91, n_alt = 0
   Insn 229: point = 92, n_alt = 1
   Insn 228: point = 93, n_alt = 0
   Insn 227: point = 95, n_alt = 0
   Insn 226: point = 96, n_alt = 0
   Insn 225: point = 97, n_alt = -2
   Insn 224: point = 98, n_alt = 0
   Insn 223: point = 98, n_alt = 0
   Insn 222: point = 98, n_alt = -2
   Insn 221: point = 98, n_alt = 0
   Insn 220: point = 98, n_alt = 0
   Insn 219: point = 98, n_alt = 0
  BB 31
   Insn 254: point = 99, n_alt = -1
   Insn 253: point = 99, n_alt = 0
   Insn 251: point = 100, n_alt = 0
   Insn 250: point = 102, n_alt = 2
   Insn 249: point = 104, n_alt = 0
  BB 27
   Insn 374: point = 106, n_alt = -1
   Insn 215: point = 106, n_alt = 1
  BB 43
   Insn 386: point = 107, n_alt = -1
  BB 44
   Insn 390: point = 108, n_alt = -1
  BB 23
   Insn 193: point = 109, n_alt = -1
   Insn 192: point = 109, n_alt = 0
   Insn 191: point = 110, n_alt = 0
   Insn 190: point = 112, n_alt = 0
   Insn 189: point = 114, n_alt = 0
   Insn 188: point = 115, n_alt = 0
   Insn 187: point = 116, n_alt = 1
   Insn 186: point = 117, n_alt = 0
   Insn 185: point = 119, n_alt = 0
   Insn 184: point = 120, n_alt = 0
   Insn 183: point = 121, n_alt = -2
   Insn 182: point = 122, n_alt = 0
   Insn 181: point = 122, n_alt = 0
   Insn 180: point = 122, n_alt = -2
   Insn 179: point = 122, n_alt = 0
   Insn 178: point = 122, n_alt = 0
   Insn 177: point = 122, n_alt = 0
  BB 26
   Insn 212: point = 123, n_alt = -1
   Insn 211: point = 123, n_alt = 0
   Insn 209: point = 124, n_alt = 0
   Insn 208: point = 126, n_alt = 2
   Insn 207: point = 128, n_alt = 0
  BB 22
   Insn 372: point = 130, n_alt = -1
   Insn 173: point = 130, n_alt = 1
   Insn 172: point = 130, n_alt = 1
  BB 21
   Insn 170: point = 131, n_alt = -1
   Insn 169: point = 131, n_alt = 0
  BB 19
   Insn 370: point = 132, n_alt = -1
   Insn 155: point = 132, n_alt = 1
  BB 18
   Insn 153: point = 133, n_alt = -1
   Insn 152: point = 133, n_alt = 0
  BB 16
   Insn 368: point = 134, n_alt = -1
   Insn 138: point = 134, n_alt = 1
  BB 14
   Insn 125: point = 135, n_alt = -1
   Insn 124: point = 135, n_alt = 0
   Insn 123: point = 136, n_alt = 2
   Insn 122: point = 138, n_alt = 0
  BB 13
   Insn 120: point = 140, n_alt = -1
   Insn 119: point = 140, n_alt = 0
   Insn 118: point = 141, n_alt = 2
   Insn 117: point = 143, n_alt = 0
   Insn 116: point = 144, n_alt = 0
   Insn 115: point = 144, n_alt = 0
   Insn 114: point = 144, n_alt = -2
   Insn 113: point = 144, n_alt = 0
   Insn 112: point = 144, n_alt = 0
   Insn 111: point = 144, n_alt = 1
   Insn 110: point = 145, n_alt = 0
   Insn 109: point = 147, n_alt = 1
   Insn 108: point = 148, n_alt = 0
   Insn 107: point = 149, n_alt = 1
   Insn 106: point = 150, n_alt = 0
   Insn 105: point = 151, n_alt = 1
   Insn 104: point = 152, n_alt = 0
   Insn 103: point = 153, n_alt = 1
   Insn 102: point = 154, n_alt = 0
   Insn 101: point = 155, n_alt = 0
   Insn 100: point = 156, n_alt = 0
   Insn 99: point = 158, n_alt = 0
  BB 11
   Insn 86: point = 160, n_alt = -1
   Insn 85: point = 160, n_alt = 1
   Insn 84: point = 160, n_alt = 1
   Insn 83: point = 161, n_alt = -2
   Insn 82: point = 162, n_alt = 0
   Insn 81: point = 162, n_alt = 0
   Insn 80: point = 162, n_alt = -2
   Insn 79: point = 162, n_alt = 0
   Insn 78: point = 162, n_alt = 0
   Insn 77: point = 162, n_alt = 0
   Insn 76: point = 162, n_alt = 0
   Insn 75: point = 162, n_alt = 0
   Insn 74: point = 162, n_alt = 0
   Insn 73: point = 162, n_alt = 0
   Insn 72: point = 162, n_alt = 8
   Insn 71: point = 163, n_alt = 0
   Insn 70: point = 164, n_alt = 8
   Insn 69: point = 165, n_alt = 0
   Insn 68: point = 166, n_alt = 1
   Insn 67: point = 167, n_alt = 0
   Insn 66: point = 168, n_alt = 1
   Insn 65: point = 169, n_alt = 0
   Insn 64: point = 170, n_alt = 1
   Insn 63: point = 171, n_alt = 0
   Insn 62: point = 172, n_alt = 3
   Insn 61: point = 173, n_alt = 0
   Insn 60: point = 174, n_alt = 0
   Insn 59: point = 176, n_alt = 0
  BB 42
   Insn 384: point = 178, n_alt = -1
  BB 9
   Insn 47: point = 179, n_alt = -1
   Insn 46: point = 179, n_alt = 0
   Insn 45: point = 180, n_alt = 2
   Insn 44: point = 182, n_alt = 0
  BB 7
   Insn 37: point = 184, n_alt = -1
   Insn 36: point = 184, n_alt = 0
   Insn 35: point = 185, n_alt = 0
  BB 10
   Insn 362: point = 187, n_alt = -1
   Insn 53: point = 187, n_alt = 0
  BB 6
   Insn 33: point = 188, n_alt = 1
   Insn 32: point = 189, n_alt = 0
  BB 4
   Insn 25: point = 191, n_alt = -1
   Insn 24: point = 191, n_alt = 1
   Insn 23: point = 191, n_alt = 1
   Insn 22: point = 192, n_alt = -2
   Insn 21: point = 193, n_alt = 0
   Insn 20: point = 193, n_alt = 0
   Insn 19: point = 193, n_alt = 0
   Insn 18: point = 193, n_alt = 0
   Insn 17: point = 193, n_alt = 0
   Insn 16: point = 193, n_alt = 0
   Insn 15: point = 193, n_alt = -2
   Insn 14: point = 193, n_alt = 0
   Insn 13: point = 193, n_alt = 0
  BB 2
   Insn 6: point = 194, n_alt = -1
   Insn 5: point = 194, n_alt = 1
   Insn 397: point = 194, n_alt = 0
  BB 17
   Insn 146: point = 195, n_alt = 0
   Insn 145: point = 195, n_alt = 1
   Insn 144: point = 196, n_alt = 0
   Insn 143: point = 198, n_alt = 0
   Insn 142: point = 199, n_alt = 0
  BB 20
   Insn 163: point = 201, n_alt = 0
   Insn 162: point = 201, n_alt = 1
   Insn 161: point = 202, n_alt = 0
   Insn 160: point = 204, n_alt = 0
   Insn 159: point = 205, n_alt = 0
  BB 25
   Insn 204: point = 207, n_alt = 0
  BB 24
   Insn 195: point = 208, n_alt = 0
  BB 30
   Insn 246: point = 209, n_alt = 0
  BB 29
   Insn 237: point = 210, n_alt = 0
 r82: [67..210] [7..26]
 r83: [184..185]
 r84: [179..180]
 r85: [172..174]
 r86: [146..156]
 r87: [140..141]
 r88: [135..136]
 r89: [116..121]
 r90: [109..110]
 r91: [125..126]
 r92: [123..124]
 r93: [92..97]
 r94: [85..86]
 r95: [101..102]
 r96: [99..100]
 r97: [78..79]
 r98: [76..77]
 r99: [69..75]
 r100: [71..72]
 r101: [69..70]
 r102: [67..68]
 r103: [11..12]
 r104: [19..20]
 r105: [63..64]
 r106: [61..62]
 r107: [54..60]
 r108: [56..57]
 r109: [52..55]
 r110: [52..53]
 r111: [48..49]
 r112: [46..47]
 r113: [39..45]
 r114: [41..42]
 r115: [37..40]
 r116: [37..38]
 r117: [33..36] [30..30] [27..27] [2..4]
 r118: [0..1]
 r119: [191..192]
 r120: [188..189]
 r121: [181..182]
 r122: [175..176]
 r123: [172..173]
 r124: [170..171]
 r125: [168..169]
 r126: [166..167]
 r127: [164..165]
 r128: [162..163]
 r129: [160..161]
 r130: [31..32]
 r131: [157..158]
 r132: [144..155]
 r133: [153..154]
 r134: [151..152]
 r135: [149..150]
 r136: [147..148]
 r137: [144..145]
 r138: [142..143]
 r139: [137..138]
 r140: [28..29]
 r141: [195..199]
 r142: [195..196]
 r143: [197..198]
 r144: [201..205]
 r145: [201..202]
 r146: [203..204]
 r147: [116..120]
 r148: [116..117]
 r149: [118..119]
 r150: [111..115]
 r151: [111..112]
 r152: [113..114]
 r153: [127..128]
 r154: [92..96]
 r155: [92..93]
 r156: [94..95]
 r157: [87..91]
 r158: [87..88]
 r159: [89..90]
 r160: [103..104]
 r161: [80..81]
 r162: [73..74]
 r163: [13..17]
 r164: [13..14]
 r165: [15..16]
 r166: [21..25]
 r167: [21..22]
 r168: [23..24]
 r169: [5..6]
 r170: [65..66]
 r171: [58..59]
 r172: [50..51]
 r173: [43..44]
Compressing live ranges: from 211 to 154 - 72%
Ranges after the compression:
 r82: [54..153] [6..17]
 r83: [140..141]
 r84: [136..137]
 r85: [132..133]
 r86: [110..117]
 r87: [104..105]
 r88: [100..101]
 r89: [90..93]
 r90: [84..85]
 r91: [96..97]
 r92: [94..95]
 r93: [74..77]
 r94: [68..69]
 r95: [80..81]
 r96: [78..79]
 r97: [64..65]
 r98: [62..63]
 r99: [56..61]
 r100: [58..59]
 r101: [56..57]
 r102: [54..55]
 r103: [6..7]
 r104: [12..13]
 r105: [50..51]
 r106: [48..49]
 r107: [42..47]
 r108: [44..45]
 r109: [40..43]
 r110: [40..41]
 r111: [36..37]
 r112: [34..35]
 r113: [28..33]
 r114: [30..31]
 r115: [26..29]
 r116: [26..27]
 r117: [24..25] [21..21] [18..18] [2..3]
 r118: [0..1]
 r119: [144..145]
 r120: [142..143]
 r121: [138..139]
 r122: [134..135]
 r123: [132..133]
 r124: [130..131]
 r125: [128..129]
 r126: [126..127]
 r127: [124..125]
 r128: [122..123]
 r129: [120..121]
 r130: [22..23]
 r131: [118..119]
 r132: [108..117]
 r133: [116..117]
 r134: [114..115]
 r135: [112..113]
 r136: [110..111]
 r137: [108..109]
 r138: [106..107]
 r139: [102..103]
 r140: [19..20]
 r141: [146..149]
 r142: [146..147]
 r143: [148..149]
 r144: [150..153]
 r145: [150..151]
 r146: [152..153]
 r147: [90..93]
 r148: [90..91]
 r149: [92..93]
 r150: [86..89]
 r151: [86..87]
 r152: [88..89]
 r153: [98..99]
 r154: [74..77]
 r155: [74..75]
 r156: [76..77]
 r157: [70..73]
 r158: [70..71]
 r159: [72..73]
 r160: [82..83]
 r161: [66..67]
 r162: [60..61]
 r163: [8..11]
 r164: [8..9]
 r165: [10..11]
 r166: [14..17]
 r167: [14..15]
 r168: [16..17]
 r169: [4..5]
 r170: [52..53]
 r171: [46..47]
 r172: [38..39]
 r173: [32..33]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 397
changing reg in insn 300
changing reg in insn 278
changing reg in insn 222
changing reg in insn 180
changing reg in insn 114
changing reg in insn 80
changing reg in insn 35
changing reg in insn 32
changing reg in insn 15
changing reg in insn 35
changing reg in insn 36
changing reg in insn 45
changing reg in insn 46
changing reg in insn 60
changing reg in insn 62
changing reg in insn 100
changing reg in insn 110
changing reg in insn 108
changing reg in insn 106
changing reg in insn 104
changing reg in insn 102
changing reg in insn 118
changing reg in insn 119
changing reg in insn 123
changing reg in insn 124
changing reg in insn 183
changing reg in insn 187
changing reg in insn 191
changing reg in insn 192
changing reg in insn 208
changing reg in insn 209
changing reg in insn 209
changing reg in insn 211
changing reg in insn 225
changing reg in insn 229
changing reg in insn 233
changing reg in insn 234
changing reg in insn 250
changing reg in insn 251
changing reg in insn 251
changing reg in insn 253
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 262
changing reg in insn 263
changing reg in insn 263
changing reg in insn 264
changing reg in insn 265
changing reg in insn 275
changing reg in insn 277
changing reg in insn 297
changing reg in insn 299
changing reg in insn 324
changing reg in insn 325
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 330
changing reg in insn 328
changing reg in insn 329
changing reg in insn 329
changing reg in insn 331
changing reg in insn 330
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 334
changing reg in insn 335
changing reg in insn 335
changing reg in insn 339
changing reg in insn 337
changing reg in insn 338
changing reg in insn 338
changing reg in insn 340
changing reg in insn 339
changing reg in insn 340
changing reg in insn 345
changing reg in insn 318
changing reg in insn 133
changing reg in insn 94
changing reg in insn 39
changing reg in insn 27
changing reg in insn 8
changing reg in insn 348
changing reg in insn 348
changing reg in insn 352
changing reg in insn 22
changing reg in insn 23
changing reg in insn 32
changing reg in insn 33
changing reg in insn 44
changing reg in insn 45
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 83
changing reg in insn 84
changing reg in insn 88
changing reg in insn 89
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 111
changing reg in insn 109
changing reg in insn 107
changing reg in insn 105
changing reg in insn 103
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 117
changing reg in insn 118
changing reg in insn 122
changing reg in insn 123
changing reg in insn 127
changing reg in insn 128
changing reg in insn 142
changing reg in insn 145
changing reg in insn 144
changing reg in insn 145
changing reg in insn 143
changing reg in insn 144
changing reg in insn 159
changing reg in insn 162
changing reg in insn 161
changing reg in insn 162
changing reg in insn 160
changing reg in insn 161
changing reg in insn 184
changing reg in insn 187
changing reg in insn 186
changing reg in insn 187
changing reg in insn 185
changing reg in insn 186
changing reg in insn 188
changing reg in insn 191
changing reg in insn 190
changing reg in insn 191
changing reg in insn 189
changing reg in insn 190
changing reg in insn 207
changing reg in insn 208
changing reg in insn 226
changing reg in insn 229
changing reg in insn 228
changing reg in insn 229
changing reg in insn 227
changing reg in insn 228
changing reg in insn 230
changing reg in insn 233
changing reg in insn 232
changing reg in insn 233
changing reg in insn 231
changing reg in insn 232
changing reg in insn 249
changing reg in insn 250
changing reg in insn 257
changing reg in insn 258
changing reg in insn 261
changing reg in insn 262
changing reg in insn 272
changing reg in insn 275
changing reg in insn 274
changing reg in insn 275
changing reg in insn 273
changing reg in insn 274
changing reg in insn 294
changing reg in insn 297
changing reg in insn 296
changing reg in insn 297
changing reg in insn 295
changing reg in insn 296
changing reg in insn 312
changing reg in insn 313
changing reg in insn 323
changing reg in insn 324
changing reg in insn 327
changing reg in insn 328
changing reg in insn 332
changing reg in insn 333
changing reg in insn 336
changing reg in insn 337
deleting insn with uid = 15.
deleting insn with uid = 22.
deleting insn with uid = 80.
deleting insn with uid = 83.
deleting insn with uid = 114.
deleting insn with uid = 180.
deleting insn with uid = 183.
deleting insn with uid = 222.
deleting insn with uid = 225.
deleting insn with uid = 278.
deleting insn with uid = 300.
deleting insn with uid = 348.
deleting insn with uid = 352.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 131.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 279.
verify found no changes in insn with uid = 301.
verify found no changes in insn with uid = 316.
verify found no changes in insn with uid = 343.


read_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={76d,65u} r1={36d,26u} r2={22d,8u} r3={1d,9u} r7={43d,220u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r17={77d,16u} r18={13d} r19={8e} r20={13d} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={13d} r38={13d} r39={13d} r40={13d} r41={13d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} 
;;    total ref usage 1452{1100d,344u,8e} in 238{225 regular + 13 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 397 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 397 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 397 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":83:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "fs/super.c":83:8 806 {*jcc}
     (nil)
 -> 11)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 355 3 (set (reg/f:SI 0 ax [orig:117 _44 ] [117])
        (const_int 0 [0])) "fs/super.c":84:16 75 {*movsi_internal}
     (nil))
(jump_insn 355 8 356 3 (set (pc)
        (label_ref 346)) "fs/super.c":84:16 807 {jump}
     (nil)
 -> 346)
(barrier 356 355 11)
(code_label 11 356 12 4 16 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":85:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 14 13 16 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [9 dev+0 S4 A32])) "fs/super.c":85:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 16 14 17 4 (call (mem:QI (symbol_ref:SI ("check_disk_change") [flags 0x41]  <function_decl 0x77d7fb10ea00 check_disk_change>) [0 check_disk_change S1 A8])
        (const_int 16 [0x10])) "fs/super.c":85:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 17 16 18 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":85:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":86:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 19 18 20 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [9 dev+0 S4 A32])) "fs/super.c":86:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 20 19 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x3]  <function_decl 0x77d7fb10e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":86:14 823 {*call_value}
     (nil)
    (nil))
(insn 21 20 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":86:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 23 21 24 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])
        (reg:SI 0 ax [119])) "fs/super.c":86:14 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [19 s+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":86:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "fs/super.c":86:8 806 {*jcc}
     (nil)
 -> 30)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 357 5 (set (reg/f:SI 0 ax [orig:117 _44 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":87:16 75 {*movsi_internal}
     (nil))
(jump_insn 357 27 358 5 (set (pc)
        (label_ref 346)) "fs/super.c":87:16 807 {jump}
     (nil)
 -> 346)
(barrier 358 357 30)
(code_label 30 358 31 6 18 (nil) [1 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:SI 0 ax [120])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":89:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
        (nil)))
(insn 33 32 54 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])
        (reg/f:SI 0 ax [120])) "fs/super.c":89:12 75 {*movsi_internal}
     (nil))
(code_label 54 33 34 7 22 (nil) [1 uses])
(note 34 54 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                        ] UNSPEC_GOTOFF)
                    (const_int 864 [0x360]))))) "fs/super.c":90:27 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                (const_int 864 [0x360])))
        (nil)))
(insn 36 35 37 7 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [19 s+0 S4 A32])
            (reg/f:SI 0 ax [orig:83 _1 ] [83]))) "fs/super.c":90:12 11 {*cmpsi_1}
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/super.c":90:12 806 {*jcc}
     (nil)
 -> 42)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 359 8 (set (reg/f:SI 0 ax [orig:117 _44 ] [117])
        (const_int 0 [0])) "fs/super.c":91:20 75 {*movsi_internal}
     (nil))
(jump_insn 359 39 360 8 (set (pc)
        (label_ref 346)) "fs/super.c":91:20 807 {jump}
     (nil)
 -> 346)
(barrier 360 359 42)
(code_label 42 360 43 9 19 (nil) [1 uses])
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":92:15 75 {*movsi_internal}
     (nil))
(insn 45 44 46 9 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])) "fs/super.c":92:15 76 {*movhi_internal}
     (nil))
(insn 46 45 47 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/super.c":92:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 47 46 52 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 383)
            (pc))) "fs/super.c":92:12 806 {*jcc}
     (nil)
 -> 383)
(note 52 47 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 362 10 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [19 s+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [19 s+0 S4 A32])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":89:33 209 {*addsi_1}
     (nil))
(jump_insn 362 53 363 10 (set (pc)
        (label_ref 54)) "fs/super.c":90:12 807 {jump}
     (nil)
 -> 54)
(barrier 363 362 383)
(code_label 383 363 382 42 45 (nil) [1 uses])
(note 382 383 384 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 384 382 361 42 (const_int 0 [0]) "fs/super.c":93:13 843 {nop}
     (nil))
(code_label 361 384 58 11 44 (nil) [0 uses])
(note 58 361 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [9 dev+0 S4 A32])) "fs/super.c":95:14 75 {*movsi_internal}
     (nil))
(insn 60 59 61 11 (set (reg:HI 1 dx [orig:85 _3 ] [85])
        (reg:HI 0 ax [122])) "fs/super.c":95:14 76 {*movhi_internal}
     (nil))
(insn 61 60 62 11 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":95:14 75 {*movsi_internal}
     (nil))
(insn 62 61 63 11 (set (mem:HI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (reg:HI 1 dx [orig:85 _3 ] [85])) "fs/super.c":95:14 76 {*movhi_internal}
     (nil))
(insn 63 62 64 11 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":96:15 75 {*movsi_internal}
     (nil))
(insn 64 63 65 11 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [124])
                (const_int 88 [0x58])) [5 s_35->s_isup+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":96:15 75 {*movsi_internal}
     (nil))
(insn 65 64 66 11 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":97:17 75 {*movsi_internal}
     (nil))
(insn 66 65 67 11 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [125])
                (const_int 92 [0x5c])) [5 s_35->s_imount+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":97:17 75 {*movsi_internal}
     (nil))
(insn 67 66 68 11 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":98:15 75 {*movsi_internal}
     (nil))
(insn 68 67 69 11 (set (mem:SI (plus:SI (reg/f:SI 0 ax [126])
                (const_int 96 [0x60])) [3 s_35->s_time+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":98:15 75 {*movsi_internal}
     (nil))
(insn 69 68 70 11 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":99:18 75 {*movsi_internal}
     (nil))
(insn 70 69 71 11 (set (mem:QI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 105 [0x69])) [0 s_35->s_rd_only+0 S1 A8])
        (const_int 0 [0])) "fs/super.c":99:18 77 {*movqi_internal}
     (nil))
(insn 71 70 72 11 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":100:15 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (mem:QI (plus:SI (reg/f:SI 0 ax [128])
                (const_int 106 [0x6a])) [0 s_35->s_dirt+0 S1 A16])
        (const_int 0 [0])) "fs/super.c":100:15 77 {*movqi_internal}
     (nil))
(insn 73 72 74 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":101:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 74 73 75 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [19 s+0 S4 A32])) "fs/super.c":101:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 75 74 76 11 (call (mem:QI (symbol_ref:SI ("lock_super") [flags 0x3]  <function_decl 0x77d7fb137d00 lock_super>) [0 lock_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":101:5 812 {*call}
     (nil)
    (nil))
(insn 76 75 77 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":101:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 77 76 78 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":102:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 78 77 79 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/super.c":102:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 79 78 81 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [9 dev+0 S4 A32])) "fs/super.c":102:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 81 79 82 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x77d7fb10e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":102:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 82 81 84 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":102:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 84 82 85 11 (set (mem/f/c:SI (reg/f:SI 7 sp) [4 bh+0 S4 A32])
        (reg:SI 0 ax [129])) "fs/super.c":102:16 75 {*movsi_internal}
     (nil))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 7 sp) [4 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":102:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "fs/super.c":102:8 806 {*jcc}
     (nil)
 -> 97)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":103:18 75 {*movsi_internal}
     (nil))
(insn 89 88 90 12 (set (mem:HI (plus:SI (reg/f:SI 0 ax [130])
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":103:18 76 {*movhi_internal}
     (nil))
(insn 90 89 91 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":104:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 91 90 92 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [19 s+0 S4 A32])) "fs/super.c":104:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 92 91 93 12 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x77d7fb145100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":104:9 812 {*call}
     (nil)
    (nil))
(insn 93 92 94 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":104:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 94 93 364 12 (set (reg/f:SI 0 ax [orig:117 _44 ] [117])
        (const_int 0 [0])) "fs/super.c":105:16 75 {*movsi_internal}
     (nil))
(jump_insn 364 94 365 12 (set (pc)
        (label_ref 346)) "fs/super.c":105:16 807 {jump}
     (nil)
 -> 346)
(barrier 365 364 97)
(code_label 97 365 98 13 23 (nil) [1 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (reg/f:SI 7 sp) [4 bh+0 S4 A32])) "fs/super.c":108:43 75 {*movsi_internal}
     (nil))
(insn 100 99 101 13 (set (reg/f:SI 1 dx [orig:86 _4 ] [86])
        (mem/f:SI (reg/f:SI 0 ax [131]) [8 bh_69->b_data+0 S4 A32])) "fs/super.c":108:43 75 {*movsi_internal}
     (nil))
(insn 101 100 102 13 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 102 101 103 13 (set (reg:SI 2 cx [133])
        (mem:SI (reg/f:SI 1 dx [orig:86 _4 ] [86]) [21 MEM[(struct d_super_block *)_4]+0 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 103 102 104 13 (set (mem:SI (reg/f:SI 0 ax [132]) [21 MEM[(struct d_super_block *)s_35]+0 S4 A32])
        (reg:SI 2 cx [133])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 104 103 105 13 (set (reg:SI 2 cx [134])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:86 _4 ] [86])
                (const_int 4 [0x4])) [21 MEM[(struct d_super_block *)_4]+4 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 105 104 106 13 (set (mem:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 4 [0x4])) [21 MEM[(struct d_super_block *)s_35]+4 S4 A32])
        (reg:SI 2 cx [134])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 106 105 107 13 (set (reg:SI 2 cx [135])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:86 _4 ] [86])
                (const_int 8 [0x8])) [21 MEM[(struct d_super_block *)_4]+8 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 107 106 108 13 (set (mem:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 8 [0x8])) [21 MEM[(struct d_super_block *)s_35]+8 S4 A32])
        (reg:SI 2 cx [135])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 108 107 109 13 (set (reg:SI 2 cx [136])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:86 _4 ] [86])
                (const_int 12 [0xc])) [21 MEM[(struct d_super_block *)_4]+12 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 109 108 110 13 (set (mem:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 12 [0xc])) [21 MEM[(struct d_super_block *)s_35]+12 S4 A32])
        (reg:SI 2 cx [136])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 110 109 111 13 (set (reg:SI 1 dx [137])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:86 _4 ] [86])
                (const_int 16 [0x10])) [21 MEM[(struct d_super_block *)_4]+16 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 111 110 112 13 (set (mem:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 16 [0x10])) [21 MEM[(struct d_super_block *)s_35]+16 S4 A32])
        (reg:SI 1 dx [137])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 112 111 113 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":109:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 113 112 115 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [4 bh+0 S4 A32])) "fs/super.c":109:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 115 113 116 13 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x77d7fb10e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":109:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 116 115 117 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":109:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 117 116 118 13 (set (reg/f:SI 0 ax [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":110:10 75 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [138])
                (const_int 16 [0x10])) [2 s_35->s_magic+0 S2 A32])) "fs/super.c":110:10 76 {*movhi_internal}
     (nil))
(insn 119 118 120 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:87 _5 ] [87])
            (const_int 4991 [0x137f]))) "fs/super.c":110:8 10 {*cmphi_1}
     (nil))
(jump_insn 120 119 121 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "fs/super.c":110:8 806 {*jcc}
     (nil)
 -> 136)
(note 121 120 122 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 14 (set (reg/f:SI 0 ax [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":111:10 75 {*movsi_internal}
     (nil))
(insn 123 122 124 14 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [139])
                (const_int 16 [0x10])) [2 s_35->s_magic+0 S2 A32])) "fs/super.c":111:10 76 {*movhi_internal}
     (nil))
(insn 124 123 125 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:88 _6 ] [88])
            (const_int 5007 [0x138f]))) "fs/super.c":110:41 10 {*cmphi_1}
     (nil))
(jump_insn 125 124 126 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "fs/super.c":110:41 806 {*jcc}
     (nil)
 -> 136)
(note 126 125 127 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 15 (set (reg/f:SI 0 ax [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":112:18 75 {*movsi_internal}
     (nil))
(insn 128 127 129 15 (set (mem:HI (plus:SI (reg/f:SI 0 ax [140])
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":112:18 76 {*movhi_internal}
     (nil))
(insn 129 128 130 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":113:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 130 129 131 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [19 s+0 S4 A32])) "fs/super.c":113:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 131 130 132 15 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x77d7fb145100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":113:9 812 {*call}
     (nil)
    (nil))
(insn 132 131 133 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":113:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 133 132 366 15 (set (reg/f:SI 0 ax [orig:117 _44 ] [117])
        (const_int 0 [0])) "fs/super.c":114:16 75 {*movsi_internal}
     (nil))
(jump_insn 366 133 367 15 (set (pc)
        (label_ref 346)) "fs/super.c":114:16 807 {jump}
     (nil)
 -> 346)
(barrier 367 366 136)
(code_label 136 367 137 16 24 (nil) [2 uses])
(note 137 136 138 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 368 16 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":116:12 75 {*movsi_internal}
     (nil))
(jump_insn 368 138 369 16 (set (pc)
        (label_ref 147)) "fs/super.c":116:5 807 {jump}
     (nil)
 -> 147)
(barrier 369 368 149)
(code_label 149 369 141 17 26 (nil) [1 uses])
(note 141 149 142 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 17 (set (reg/f:SI 0 ax [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":117:22 75 {*movsi_internal}
     (nil))
(insn 143 142 144 17 (set (reg:SI 1 dx [143])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":117:22 75 {*movsi_internal}
     (nil))
(insn 144 143 145 17 (parallel [
            (set (reg:SI 1 dx [142])
                (plus:SI (reg:SI 1 dx [143])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":117:22 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 145 144 146 17 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [142])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [141]))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_36]+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":117:22 75 {*movsi_internal}
     (nil))
(insn 146 145 147 17 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":116:35 209 {*addsi_1}
     (nil))
(code_label 147 146 148 18 25 (nil) [1 uses])
(note 148 147 152 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 152 148 153 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":116:19 11 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 18 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) "fs/super.c":116:19 806 {*jcc}
     (nil)
 -> 149)
(note 154 153 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 370 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":118:12 75 {*movsi_internal}
     (nil))
(jump_insn 370 155 371 19 (set (pc)
        (label_ref 164)) "fs/super.c":118:5 807 {jump}
     (nil)
 -> 164)
(barrier 371 370 166)
(code_label 166 371 158 20 28 (nil) [1 uses])
(note 158 166 159 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 20 (set (reg/f:SI 0 ax [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":119:22 75 {*movsi_internal}
     (nil))
(insn 160 159 161 20 (set (reg:SI 1 dx [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":119:22 75 {*movsi_internal}
     (nil))
(insn 161 160 162 20 (parallel [
            (set (reg:SI 1 dx [145])
                (plus:SI (reg:SI 1 dx [146])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":119:22 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 162 161 163 20 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [145])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [144]))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_37]+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":119:22 75 {*movsi_internal}
     (nil))
(insn 163 162 164 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":118:35 209 {*addsi_1}
     (nil))
(code_label 164 163 165 21 27 (nil) [1 uses])
(note 165 164 169 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 169 165 170 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":118:19 11 {*cmpsi_1}
     (nil))
(jump_insn 170 169 171 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "fs/super.c":118:19 806 {*jcc}
     (nil)
 -> 166)
(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 22 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 block+0 S4 A32])
        (const_int 2 [0x2])) "fs/super.c":120:11 75 {*movsi_internal}
     (nil))
(insn 173 172 372 22 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":121:12 75 {*movsi_internal}
     (nil))
(jump_insn 372 173 373 22 (set (pc)
        (label_ref 205)) "fs/super.c":121:5 807 {jump}
     (nil)
 -> 205)
(barrier 373 372 210)
(code_label 210 373 176 23 33 (nil) [1 uses])
(note 176 210 177 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:29 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 178 177 179 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 block+0 S4 A32])) "fs/super.c":122:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 179 178 181 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [9 dev+0 S4 A32])) "fs/super.c":122:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 181 179 182 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x77d7fb10e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":122:29 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 182 181 184 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:29 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 184 182 185 23 (set (reg/f:SI 1 dx [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":122:27 75 {*movsi_internal}
     (nil))
(insn 185 184 186 23 (set (reg:SI 2 cx [149])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":122:27 75 {*movsi_internal}
     (nil))
(insn 186 185 187 23 (parallel [
            (set (reg:SI 2 cx [148])
                (plus:SI (reg:SI 2 cx [149])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 187 186 188 23 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 2 cx [148])
                        (const_int 4 [0x4]))
                    (reg/f:SI 1 dx [147]))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_38]+0 S4 A32])
        (reg/f:SI 0 ax [orig:89 _7 ] [89])) "fs/super.c":122:27 75 {*movsi_internal}
     (nil))
(insn 188 187 189 23 (set (reg/f:SI 0 ax [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":122:23 75 {*movsi_internal}
     (nil))
(insn 189 188 190 23 (set (reg:SI 1 dx [152])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":122:23 75 {*movsi_internal}
     (nil))
(insn 190 189 191 23 (parallel [
            (set (reg:SI 1 dx [151])
                (plus:SI (reg:SI 1 dx [152])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:23 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 191 190 192 23 (set (reg/f:SI 0 ax [orig:90 _8 ] [90])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [151])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [150]))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_38]+0 S4 A32])) "fs/super.c":122:23 75 {*movsi_internal}
     (nil))
(insn 192 191 193 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "fs/super.c":122:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 193 192 194 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 389)
            (pc))) "fs/super.c":122:12 806 {*jcc}
     (nil)
 -> 389)
(note 194 193 195 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 203 24 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [9 block+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":123:18 209 {*addsi_1}
     (nil))
(note 203 195 204 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 25 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":121:40 209 {*addsi_1}
     (nil))
(code_label 205 204 206 26 29 (nil) [1 uses])
(note 206 205 207 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 26 (set (reg/f:SI 0 ax [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":121:22 75 {*movsi_internal}
     (nil))
(insn 208 207 209 26 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [153])
                (const_int 4 [0x4])) [2 s_35->s_imap_blocks+0 S2 A32])) "fs/super.c":121:22 76 {*movhi_internal}
     (nil))
(insn 209 208 211 26 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (zero_extend:SI (reg:HI 0 ax [orig:91 _9 ] [91]))) "fs/super.c":121:22 144 {*zero_extendhisi2}
     (nil))
(insn 211 209 212 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (reg:SI 0 ax [orig:92 _10 ] [92]))) "fs/super.c":121:19 11 {*cmpsi_1}
     (nil))
(jump_insn 212 211 385 26 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) "fs/super.c":121:19 806 {*jcc}
     (nil)
 -> 210)
(note 385 212 386 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(jump_insn 386 385 387 43 (set (pc)
        (label_ref 213)) 807 {jump}
     (nil)
 -> 213)
(barrier 387 386 389)
(code_label 389 387 388 44 46 (nil) [1 uses])
(note 388 389 390 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 390 388 213 44 (const_int 0 [0]) "fs/super.c":125:13 843 {nop}
     (nil))
(code_label 213 390 214 27 32 (nil) [1 uses])
(note 214 213 215 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 374 27 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":126:12 75 {*movsi_internal}
     (nil))
(jump_insn 374 215 375 27 (set (pc)
        (label_ref 247)) "fs/super.c":126:5 807 {jump}
     (nil)
 -> 247)
(barrier 375 374 252)
(code_label 252 375 218 28 38 (nil) [1 uses])
(note 218 252 219 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:29 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 220 219 221 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 block+0 S4 A32])) "fs/super.c":127:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 221 220 223 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [9 dev+0 S4 A32])) "fs/super.c":127:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 223 221 224 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x77d7fb10e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":127:29 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 224 223 226 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:29 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 226 224 227 28 (set (reg/f:SI 1 dx [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":127:27 75 {*movsi_internal}
     (nil))
(insn 227 226 228 28 (set (reg:SI 2 cx [156])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":127:27 75 {*movsi_internal}
     (nil))
(insn 228 227 229 28 (parallel [
            (set (reg:SI 2 cx [155])
                (plus:SI (reg:SI 2 cx [156])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 229 228 230 28 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 2 cx [155])
                        (const_int 4 [0x4]))
                    (reg/f:SI 1 dx [154]))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_39]+0 S4 A32])
        (reg/f:SI 0 ax [orig:93 _11 ] [93])) "fs/super.c":127:27 75 {*movsi_internal}
     (nil))
(insn 230 229 231 28 (set (reg/f:SI 0 ax [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":127:23 75 {*movsi_internal}
     (nil))
(insn 231 230 232 28 (set (reg:SI 1 dx [159])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":127:23 75 {*movsi_internal}
     (nil))
(insn 232 231 233 28 (parallel [
            (set (reg:SI 1 dx [158])
                (plus:SI (reg:SI 1 dx [159])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:23 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 233 232 234 28 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [158])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [157]))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_39]+0 S4 A32])) "fs/super.c":127:23 75 {*movsi_internal}
     (nil))
(insn 234 233 235 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:94 _12 ] [94])
            (const_int 0 [0]))) "fs/super.c":127:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 235 234 236 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 395)
            (pc))) "fs/super.c":127:12 806 {*jcc}
     (nil)
 -> 395)
(note 236 235 237 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 245 29 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [9 block+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":128:18 209 {*addsi_1}
     (nil))
(note 245 237 246 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 30 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":126:40 209 {*addsi_1}
     (nil))
(code_label 247 246 248 31 34 (nil) [1 uses])
(note 248 247 249 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 31 (set (reg/f:SI 0 ax [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":126:22 75 {*movsi_internal}
     (nil))
(insn 250 249 251 31 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (plus:SI (reg/f:SI 0 ax [160])
                (const_int 6 [0x6])) [2 s_35->s_zmap_blocks+0 S2 A16])) "fs/super.c":126:22 76 {*movhi_internal}
     (nil))
(insn 251 250 253 31 (set (reg:SI 0 ax [orig:96 _14 ] [96])
        (zero_extend:SI (reg:HI 0 ax [orig:95 _13 ] [95]))) "fs/super.c":126:22 144 {*zero_extendhisi2}
     (nil))
(insn 253 251 254 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (reg:SI 0 ax [orig:96 _14 ] [96]))) "fs/super.c":126:19 11 {*cmpsi_1}
     (nil))
(jump_insn 254 253 391 31 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) "fs/super.c":126:19 806 {*jcc}
     (nil)
 -> 252)
(note 391 254 392 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(jump_insn 392 391 393 45 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 393 392 395)
(code_label 395 393 394 46 47 (nil) [1 uses])
(note 394 395 396 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 396 394 255 46 (const_int 0 [0]) "fs/super.c":130:13 843 {nop}
     (nil))
(code_label 255 396 256 32 37 (nil) [1 uses])
(note 256 255 257 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 32 (set (reg/f:SI 0 ax [161])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":131:23 75 {*movsi_internal}
     (nil))
(insn 258 257 259 32 (set (reg:HI 0 ax [orig:97 _15 ] [97])
        (mem:HI (plus:SI (reg/f:SI 0 ax [161])
                (const_int 4 [0x4])) [2 s_35->s_imap_blocks+0 S2 A32])) "fs/super.c":131:23 76 {*movhi_internal}
     (nil))
(insn 259 258 260 32 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (zero_extend:SI (reg:HI 0 ax [orig:97 _15 ] [97]))) "fs/super.c":131:23 144 {*zero_extendhisi2}
     (nil))
(insn 260 259 261 32 (parallel [
            (set (reg:SI 1 dx [orig:99 _17 ] [99])
                (plus:SI (reg:SI 0 ax [orig:98 _16 ] [98])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":131:20 209 {*addsi_1}
     (nil))
(insn 261 260 262 32 (set (reg/f:SI 0 ax [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":131:42 75 {*movsi_internal}
     (nil))
(insn 262 261 263 32 (set (reg:HI 0 ax [orig:100 _18 ] [100])
        (mem:HI (plus:SI (reg/f:SI 0 ax [162])
                (const_int 6 [0x6])) [2 s_35->s_zmap_blocks+0 S2 A16])) "fs/super.c":131:42 76 {*movhi_internal}
     (nil))
(insn 263 262 264 32 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (zero_extend:SI (reg:HI 0 ax [orig:100 _18 ] [100]))) "fs/super.c":131:42 144 {*zero_extendhisi2}
     (nil))
(insn 264 263 265 32 (parallel [
            (set (reg:SI 0 ax [orig:102 _20 ] [102])
                (plus:SI (reg:SI 0 ax [orig:101 _19 ] [101])
                    (reg:SI 1 dx [orig:99 _17 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":131:39 209 {*addsi_1}
     (nil))
(insn 265 264 266 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [9 block+0 S4 A32])
            (reg:SI 0 ax [orig:102 _20 ] [102]))) "fs/super.c":131:8 11 {*cmpsi_1}
     (nil))
(jump_insn 266 265 267 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) "fs/super.c":131:8 806 {*jcc}
     (nil)
 -> 321)
(note 267 266 268 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 376 33 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":132:16 75 {*movsi_internal}
     (nil))
(jump_insn 376 268 377 33 (set (pc)
        (label_ref 282)) "fs/super.c":132:9 807 {jump}
     (nil)
 -> 282)
(barrier 377 376 284)
(code_label 284 377 271 34 41 (nil) [1 uses])
(note 271 284 272 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 34 (set (reg/f:SI 0 ax [163])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":133:13 75 {*movsi_internal}
     (nil))
(insn 273 272 274 34 (set (reg:SI 1 dx [165])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":133:13 75 {*movsi_internal}
     (nil))
(insn 274 273 275 34 (parallel [
            (set (reg:SI 1 dx [164])
                (plus:SI (reg:SI 1 dx [165])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":133:13 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 275 274 276 34 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [164])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [163]))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_40]+0 S4 A32])) "fs/super.c":133:13 75 {*movsi_internal}
     (nil))
(insn 276 275 277 34 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":133:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 277 276 279 34 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 0 ax [orig:103 _21 ] [103])) "fs/super.c":133:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 279 277 280 34 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x77d7fb10e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":133:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 280 279 281 34 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":133:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 281 280 282 34 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":132:39 209 {*addsi_1}
     (nil))
(code_label 282 281 283 35 40 (nil) [1 uses])
(note 283 282 287 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 287 283 288 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":132:23 11 {*cmpsi_1}
     (nil))
(jump_insn 288 287 289 35 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) "fs/super.c":132:23 806 {*jcc}
     (nil)
 -> 284)
(note 289 288 290 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 378 36 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":134:16 75 {*movsi_internal}
     (nil))
(jump_insn 378 290 379 36 (set (pc)
        (label_ref 304)) "fs/super.c":134:9 807 {jump}
     (nil)
 -> 304)
(barrier 379 378 306)
(code_label 306 379 293 37 43 (nil) [1 uses])
(note 293 306 294 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 294 293 295 37 (set (reg/f:SI 0 ax [166])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":135:13 75 {*movsi_internal}
     (nil))
(insn 295 294 296 37 (set (reg:SI 1 dx [168])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/super.c":135:13 75 {*movsi_internal}
     (nil))
(insn 296 295 297 37 (parallel [
            (set (reg:SI 1 dx [167])
                (plus:SI (reg:SI 1 dx [168])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":135:13 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 297 296 298 37 (set (reg/f:SI 0 ax [orig:104 _22 ] [104])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [167])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [166]))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_41]+0 S4 A32])) "fs/super.c":135:13 75 {*movsi_internal}
     (nil))
(insn 298 297 299 37 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":135:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 299 298 301 37 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 0 ax [orig:104 _22 ] [104])) "fs/super.c":135:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 301 299 302 37 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x77d7fb10e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":135:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 302 301 303 37 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":135:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 303 302 304 37 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":134:39 209 {*addsi_1}
     (nil))
(code_label 304 303 305 38 42 (nil) [1 uses])
(note 305 304 309 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 309 305 310 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":134:23 11 {*cmpsi_1}
     (nil))
(jump_insn 310 309 311 38 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) "fs/super.c":134:23 806 {*jcc}
     (nil)
 -> 306)
(note 311 310 312 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 39 (set (reg/f:SI 0 ax [169])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":136:18 75 {*movsi_internal}
     (nil))
(insn 313 312 314 39 (set (mem:HI (plus:SI (reg/f:SI 0 ax [169])
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":136:18 76 {*movhi_internal}
     (nil))
(insn 314 313 315 39 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":137:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 315 314 316 39 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [19 s+0 S4 A32])) "fs/super.c":137:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 316 315 317 39 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x77d7fb145100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":137:9 812 {*call}
     (nil)
    (nil))
(insn 317 316 318 39 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":137:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 318 317 380 39 (set (reg/f:SI 0 ax [orig:117 _44 ] [117])
        (const_int 0 [0])) "fs/super.c":138:16 75 {*movsi_internal}
     (nil))
(jump_insn 380 318 381 39 (set (pc)
        (label_ref 346)) "fs/super.c":138:16 807 {jump}
     (nil)
 -> 346)
(barrier 381 380 321)
(code_label 321 381 322 40 39 (nil) [1 uses])
(note 322 321 323 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 40 (set (reg/f:SI 0 ax [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (nil))
(insn 324 323 325 40 (set (reg/f:SI 0 ax [orig:105 _23 ] [105])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [170])
                (const_int 20 [0x14])) [4 s_35->s_imap[0]+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (nil))
(insn 325 324 326 40 (set (reg/f:SI 0 ax [orig:106 _24 ] [106])
        (mem/f:SI (reg/f:SI 0 ax [orig:105 _23 ] [105]) [8 _23->b_data+0 S4 A32])) "fs/super.c":140:17 75 {*movsi_internal}
     (nil))
(insn 326 325 327 40 (set (reg:QI 1 dx [orig:107 _25 ] [107])
        (mem:QI (reg/f:SI 0 ax [orig:106 _24 ] [106]) [0 *_24+0 S1 A8])) "fs/super.c":140:29 77 {*movqi_internal}
     (nil))
(insn 327 326 328 40 (set (reg/f:SI 0 ax [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (nil))
(insn 328 327 329 40 (set (reg/f:SI 0 ax [orig:108 _26 ] [108])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [171])
                (const_int 20 [0x14])) [4 s_35->s_imap[0]+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (nil))
(insn 329 328 330 40 (set (reg/f:SI 0 ax [orig:109 _27 ] [109])
        (mem/f:SI (reg/f:SI 0 ax [orig:108 _26 ] [108]) [8 _26->b_data+0 S4 A32])) "fs/super.c":140:17 75 {*movsi_internal}
     (nil))
(insn 330 329 331 40 (parallel [
            (set (reg:QI 1 dx [orig:110 _28 ] [110])
                (ior:QI (reg:QI 1 dx [orig:107 _25 ] [107])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":140:29 530 {*iorqi_1}
     (nil))
(insn 331 330 332 40 (set (mem:QI (reg/f:SI 0 ax [orig:109 _27 ] [109]) [0 *_27+0 S1 A8])
        (reg:QI 1 dx [orig:110 _28 ] [110])) "fs/super.c":140:29 77 {*movqi_internal}
     (nil))
(insn 332 331 333 40 (set (reg/f:SI 0 ax [172])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (nil))
(insn 333 332 334 40 (set (reg/f:SI 0 ax [orig:111 _29 ] [111])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [172])
                (const_int 52 [0x34])) [4 s_35->s_zmap[0]+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (nil))
(insn 334 333 335 40 (set (reg/f:SI 0 ax [orig:112 _30 ] [112])
        (mem/f:SI (reg/f:SI 0 ax [orig:111 _29 ] [111]) [8 _29->b_data+0 S4 A32])) "fs/super.c":141:17 75 {*movsi_internal}
     (nil))
(insn 335 334 336 40 (set (reg:QI 1 dx [orig:113 _31 ] [113])
        (mem:QI (reg/f:SI 0 ax [orig:112 _30 ] [112]) [0 *_30+0 S1 A8])) "fs/super.c":141:29 77 {*movqi_internal}
     (nil))
(insn 336 335 337 40 (set (reg/f:SI 0 ax [173])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (nil))
(insn 337 336 338 40 (set (reg/f:SI 0 ax [orig:114 _32 ] [114])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [173])
                (const_int 52 [0x34])) [4 s_35->s_zmap[0]+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (nil))
(insn 338 337 339 40 (set (reg/f:SI 0 ax [orig:115 _33 ] [115])
        (mem/f:SI (reg/f:SI 0 ax [orig:114 _32 ] [114]) [8 _32->b_data+0 S4 A32])) "fs/super.c":141:17 75 {*movsi_internal}
     (nil))
(insn 339 338 340 40 (parallel [
            (set (reg:QI 1 dx [orig:116 _34 ] [116])
                (ior:QI (reg:QI 1 dx [orig:113 _31 ] [113])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":141:29 530 {*iorqi_1}
     (nil))
(insn 340 339 341 40 (set (mem:QI (reg/f:SI 0 ax [orig:115 _33 ] [115]) [0 *_33+0 S1 A8])
        (reg:QI 1 dx [orig:116 _34 ] [116])) "fs/super.c":141:29 77 {*movqi_internal}
     (nil))
(insn 341 340 342 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":142:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 342 341 343 40 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [19 s+0 S4 A32])) "fs/super.c":142:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 343 342 344 40 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x77d7fb145100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":142:5 812 {*call}
     (nil)
    (nil))
(insn 344 343 345 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":142:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 345 344 346 40 (set (reg/f:SI 0 ax [orig:117 _44 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 s+0 S4 A32])) "fs/super.c":143:12 75 {*movsi_internal}
     (nil))
(code_label 346 345 347 41 17 (nil) [6 uses])
(note 347 346 353 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 353 347 398 41 (use (reg/i:SI 0 ax)) "fs/super.c":144:1 -1
     (nil))
(note 398 353 0 NOTE_INSN_DELETED)

;; Function mount_root (mount_root, funcdef_no=6, decl_uid=1139, cgraph_uid=7, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 13
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 49:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 79:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 95:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 99:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 100:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 102:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 118:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 120:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 122:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 127:  (0) =rm  (1) %0  (2) re {*andsi_1}
      Creating newreg=158 from oldreg=139, assigning class GENERAL_REGS to r158
  127: {r158:SI=r158:SI&0x1fff;clobber flags:CC;}
      REG_DEAD r139:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:SI-0x4]&0x1fff
    Inserting insn reload before:
  221: r158:SI=r139:SI
    Inserting insn reload after:
  222: r94:SI=r158:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 129:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=159 from oldreg=140, assigning class GENERAL_REGS to r159
  129: {r159:SI=r159:SI>>0xd;clobber flags:CC;}
      REG_DEAD r140:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:SI-0x4]>>0xd
    Inserting insn reload before:
  223: r159:SI=r140:SI
    Inserting insn reload after:
  224: r95:SI=r159:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 131:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =a  (1) a  (2) r  (3) m
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 141:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 152:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 154:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 161:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 164:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 166:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 172:  (0) =rm  (1) %0  (2) re {*andsi_1}
      Creating newreg=160 from oldreg=149, assigning class GENERAL_REGS to r160
  172: {r160:SI=r160:SI&0x1fff;clobber flags:CC;}
      REG_DEAD r149:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:SI-0x4]&0x1fff
    Inserting insn reload before:
  225: r160:SI=r149:SI
    Inserting insn reload after:
  226: r102:SI=r160:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 174:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=161 from oldreg=150, assigning class GENERAL_REGS to r161
  174: {r161:SI=r161:SI>>0xd;clobber flags:CC;}
      REG_DEAD r150:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:SI-0x4]>>0xd
    Inserting insn reload before:
  227: r161:SI=r150:SI
    Inserting insn reload after:
  228: r103:SI=r161:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 176:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =a  (1) a  (2) r  (3) m
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 189:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 193:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 197:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 199:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 206:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6
EBB 7
EBB 8
EBB 9 10 11
EBB 12 13
EBB 14
EBB 15 16
EBB 17 18
EBB 19 20
EBB 21 22 23

********** Pseudo live ranges #1: **********

  BB 23
   Insn 218: point = 0, n_alt = -1
  BB 22
   Insn 206: point = 0, n_alt = 0
   Insn 205: point = 0, n_alt = 0
   Insn 204: point = 0, n_alt = -2
   Insn 203: point = 1, n_alt = 0
   Insn 202: point = 2, n_alt = 0
   Insn 201: point = 3, n_alt = 0
   Insn 200: point = 3, n_alt = 0
   Insn 199: point = 4, n_alt = 0
   Insn 198: point = 4, n_alt = 0
   Insn 197: point = 6, n_alt = 2
   Insn 196: point = 8, n_alt = 0
  BB 21
   Insn 194: point = 10, n_alt = -1
   Insn 193: point = 10, n_alt = 1
   Insn 189: point = 10, n_alt = 0
  BB 18
   Insn 215: point = 11, n_alt = -1
   Insn 167: point = 11, n_alt = 1
   Insn 166: point = 12, n_alt = 0
   Insn 165: point = 14, n_alt = 0
   Insn 164: point = 16, n_alt = 2
   Insn 163: point = 18, n_alt = 0
   Insn 162: point = 19, n_alt = 1
   Insn 161: point = 19, n_alt = 0
   Insn 160: point = 19, n_alt = 0
   Insn 159: point = 19, n_alt = -2
   Insn 158: point = 19, n_alt = 0
   Insn 157: point = 20, n_alt = 0
   Insn 156: point = 21, n_alt = 0
   Insn 155: point = 21, n_alt = 0
   Insn 154: point = 22, n_alt = 0
   Insn 153: point = 22, n_alt = 0
   Insn 152: point = 24, n_alt = 2
   Insn 151: point = 26, n_alt = 0
  BB 17
   Insn 149: point = 28, n_alt = -1
   Insn 148: point = 28, n_alt = 1
   Insn 144: point = 28, n_alt = 0
  BB 14
   Insn 213: point = 29, n_alt = -1
   Insn 122: point = 29, n_alt = 1
   Insn 121: point = 30, n_alt = 0
   Insn 120: point = 32, n_alt = 2
   Insn 119: point = 34, n_alt = 0
   Insn 118: point = 35, n_alt = 1
   Insn 117: point = 35, n_alt = 1
   Insn 116: point = 36, n_alt = 0
   Insn 115: point = 37, n_alt = 0
   Insn 114: point = 39, n_alt = 0
   Insn 113: point = 40, n_alt = 1
   Insn 112: point = 41, n_alt = 0
   Insn 111: point = 42, n_alt = 0
   Insn 110: point = 44, n_alt = 0
   Insn 109: point = 45, n_alt = 1
   Insn 108: point = 46, n_alt = 0
   Insn 107: point = 47, n_alt = 0
   Insn 106: point = 49, n_alt = 0
   Insn 105: point = 50, n_alt = 1
   Insn 104: point = 51, n_alt = 0
   Insn 103: point = 52, n_alt = 0
   Insn 102: point = 53, n_alt = 3
   Insn 101: point = 54, n_alt = 0
   Insn 100: point = 55, n_alt = 3
   Insn 99: point = 57, n_alt = 2
   Insn 98: point = 59, n_alt = 0
  BB 13
   Insn 95: point = 61, n_alt = 0
   Insn 94: point = 61, n_alt = 0
   Insn 93: point = 61, n_alt = -2
   Insn 92: point = 61, n_alt = 0
   Insn 91: point = 62, n_alt = 0
   Insn 90: point = 63, n_alt = 0
  BB 12
   Insn 88: point = 64, n_alt = -1
   Insn 87: point = 64, n_alt = 1
   Insn 86: point = 64, n_alt = 1
   Insn 85: point = 65, n_alt = -2
   Insn 84: point = 66, n_alt = 0
   Insn 83: point = 66, n_alt = 0
   Insn 82: point = 66, n_alt = -2
   Insn 81: point = 66, n_alt = 0
   Insn 80: point = 67, n_alt = 0
   Insn 79: point = 67, n_alt = 0
   Insn 78: point = 67, n_alt = 0
  BB 11
   Insn 75: point = 69, n_alt = 0
   Insn 74: point = 69, n_alt = 0
   Insn 73: point = 69, n_alt = -2
   Insn 72: point = 69, n_alt = 0
   Insn 71: point = 70, n_alt = 0
   Insn 70: point = 71, n_alt = 0
  BB 10
   Insn 68: point = 72, n_alt = -1
   Insn 67: point = 72, n_alt = 1
   Insn 66: point = 72, n_alt = 1
   Insn 65: point = 73, n_alt = -2
   Insn 64: point = 74, n_alt = 0
   Insn 63: point = 74, n_alt = 0
   Insn 62: point = 74, n_alt = 0
   Insn 61: point = 75, n_alt = 0
   Insn 60: point = 75, n_alt = 0
  BB 9
   Insn 58: point = 77, n_alt = -1
   Insn 57: point = 77, n_alt = 0
   Insn 56: point = 78, n_alt = 0
  BB 7
   Insn 211: point = 80, n_alt = -1
   Insn 42: point = 80, n_alt = 1
   Insn 41: point = 81, n_alt = 0
  BB 6
   Insn 38: point = 83, n_alt = 0
   Insn 37: point = 83, n_alt = -2
   Insn 36: point = 83, n_alt = 0
   Insn 35: point = 83, n_alt = 0
   Insn 34: point = 83, n_alt = -2
   Insn 33: point = 83, n_alt = 0
   Insn 32: point = 84, n_alt = 0
   Insn 31: point = 85, n_alt = 0
  BB 5
   Insn 29: point = 86, n_alt = -1
   Insn 28: point = 86, n_alt = 0
   Insn 27: point = 87, n_alt = 0
   Insn 26: point = 89, n_alt = -2
   Insn 25: point = 91, n_alt = 0
  BB 4
   Insn 23: point = 93, n_alt = -1
   Insn 22: point = 93, n_alt = 0
  BB 2
   Insn 209: point = 94, n_alt = -1
   Insn 6: point = 94, n_alt = 1
   Insn 219: point = 94, n_alt = 0
  BB 3
   Insn 16: point = 95, n_alt = 0
   Insn 15: point = 95, n_alt = 3
   Insn 14: point = 96, n_alt = 0
   Insn 13: point = 98, n_alt = 0
   Insn 12: point = 100, n_alt = 0
   Insn 11: point = 102, n_alt = 0
   Insn 10: point = 103, n_alt = 0
  BB 8
   Insn 52: point = 105, n_alt = 0
   Insn 51: point = 105, n_alt = 1
   Insn 50: point = 106, n_alt = 0
   Insn 49: point = 107, n_alt = 8
   Insn 48: point = 108, n_alt = 0
   Insn 47: point = 109, n_alt = 3
   Insn 46: point = 110, n_alt = 0
  BB 16
   Insn 141: point = 112, n_alt = 0
  BB 15
   Insn 139: point = 113, n_alt = -1
   Insn 138: point = 113, n_alt = 0
   Insn 137: point = 114, n_alt = -2
   Insn 134: point = 116, n_alt = -2
   Insn 136: point = 118, n_alt = 0
   Insn 135: point = 120, n_alt = 0
   Insn 133: point = 121, n_alt = 0
   Insn 132: point = 123, n_alt = 0
   Insn 131: point = 125, n_alt = 0
   Insn 130: point = 127, n_alt = 0
   Insn 224: point = 128, n_alt = -2
	Hard reg 1 is preferable by r159 with profit 1000
   Insn 129: point = 130, n_alt = 0
   Insn 223: point = 131, n_alt = -2
	Hard reg 1 is preferable by r159 with profit 1000
	Hard reg 0 is preferable by r159 with profit 1000
   Insn 128: point = 133, n_alt = 0
   Insn 222: point = 134, n_alt = -2
	Hard reg 2 is preferable by r158 with profit 1000
   Insn 127: point = 136, n_alt = 0
   Insn 221: point = 137, n_alt = -2
	Hard reg 2 is preferable by r158 with profit 1000
	Hard reg 0 is preferable by r158 with profit 1000
   Insn 126: point = 139, n_alt = 0
  BB 20
   Insn 186: point = 141, n_alt = 0
  BB 19
   Insn 184: point = 142, n_alt = -1
   Insn 183: point = 142, n_alt = 0
   Insn 182: point = 143, n_alt = -2
   Insn 179: point = 145, n_alt = -2
   Insn 181: point = 147, n_alt = 0
   Insn 180: point = 149, n_alt = 0
   Insn 178: point = 150, n_alt = 0
   Insn 177: point = 152, n_alt = 0
   Insn 176: point = 154, n_alt = 0
   Insn 175: point = 156, n_alt = 0
   Insn 228: point = 157, n_alt = -2
	Hard reg 1 is preferable by r161 with profit 1000
   Insn 174: point = 159, n_alt = 0
   Insn 227: point = 160, n_alt = -2
	Hard reg 1 is preferable by r161 with profit 1000
	Hard reg 0 is preferable by r161 with profit 1000
   Insn 173: point = 162, n_alt = 0
   Insn 226: point = 163, n_alt = -2
	Hard reg 2 is preferable by r160 with profit 1000
   Insn 172: point = 165, n_alt = 0
   Insn 225: point = 166, n_alt = -2
	Hard reg 2 is preferable by r160 with profit 1000
	Hard reg 0 is preferable by r160 with profit 1000
   Insn 171: point = 168, n_alt = 0
 r82: [0..169]
 r83: [90..91]
 r84: [88..89]
 r85: [86..87]
 r86: [74..75]
 r87: [66..67]
 r88: [56..57]
 r89: [53..55]
 r90: [45..47]
 r91: [40..42]
 r92: [35..37]
 r93: [31..32]
 r94: [119..134]
 r95: [126..128]
 r96: [122..123]
 r97: [119..121]
 r98: [23..24]
 r99: [21..22]
 r100: [15..16]
 r101: [13..14]
 r102: [148..163]
 r103: [155..157]
 r104: [151..152]
 r105: [148..150]
 r106: [5..6]
 r107: [3..4]
 r108: [144..145]
 r109: [142..143]
 r110: [115..116]
 r111: [113..114]
 r112: [99..103]
 r113: [101..102]
 r114: [99..100]
 r115: [97..98]
 r116: [95..96]
 r117: [83..84]
 r118: [80..81]
 r119: [109..110]
 r120: [107..108]
 r121: [105..106]
 r122: [77..78]
 r123: [72..73]
 r124: [69..70]
 r125: [64..65]
 r126: [61..62]
 r127: [58..59]
 r128: [53..54]
 r129: [50..52]
 r130: [50..51]
 r131: [48..49]
 r132: [45..46]
 r133: [43..44]
 r134: [40..41]
 r135: [38..39]
 r136: [35..36]
 r137: [33..34]
 r138: [29..30]
 r139: [138..139]
 r140: [132..133]
 r141: [124..127]
 r142: [124..125]
 r143: [117..118]
 r144: [119..120]
 r145: [25..26]
 r146: [19..20]
 r147: [17..18]
 r148: [11..12]
 r149: [167..168]
 r150: [161..162]
 r151: [153..156]
 r152: [153..154]
 r153: [146..147]
 r154: [148..149]
 r155: [7..8]
 r156: [1..2]
 r158: [135..137]
 r159: [129..131]
 r160: [164..166]
 r161: [158..160]
Compressing live ranges: from 170 to 132 - 77%
Ranges after the compression:
 r82: [0..131]
 r83: [72..73]
 r84: [70..71]
 r85: [68..69]
 r86: [60..61]
 r87: [54..55]
 r88: [46..47]
 r89: [44..45]
 r90: [38..39]
 r91: [34..35]
 r92: [30..31]
 r93: [26..27]
 r94: [94..105]
 r95: [100..101]
 r96: [96..97]
 r97: [94..95]
 r98: [20..21]
 r99: [18..19]
 r100: [12..13]
 r101: [10..11]
 r102: [116..127]
 r103: [122..123]
 r104: [118..119]
 r105: [116..117]
 r106: [4..5]
 r107: [2..3]
 r108: [112..113]
 r109: [110..111]
 r110: [90..91]
 r111: [88..89]
 r112: [78..81]
 r113: [80..81]
 r114: [78..79]
 r115: [76..77]
 r116: [74..75]
 r117: [66..67]
 r118: [64..65]
 r119: [86..87]
 r120: [84..85]
 r121: [82..83]
 r122: [62..63]
 r123: [58..59]
 r124: [56..57]
 r125: [52..53]
 r126: [50..51]
 r127: [48..49]
 r128: [44..45]
 r129: [42..43]
 r130: [42..43]
 r131: [40..41]
 r132: [38..39]
 r133: [36..37]
 r134: [34..35]
 r135: [32..33]
 r136: [30..31]
 r137: [28..29]
 r138: [24..25]
 r139: [108..109]
 r140: [104..105]
 r141: [98..101]
 r142: [98..99]
 r143: [92..93]
 r144: [94..95]
 r145: [22..23]
 r146: [16..17]
 r147: [14..15]
 r148: [8..9]
 r149: [130..131]
 r150: [126..127]
 r151: [120..123]
 r152: [120..121]
 r153: [114..115]
 r154: [116..117]
 r155: [6..7]
 r156: [0..1]
 r158: [106..107]
 r159: [102..103]
 r160: [128..129]
 r161: [124..125]

********** Assignment #1: **********

	 Assigning to 158 (cl=GENERAL_REGS, orig=139, freq=3000, tfirst=158, tfreq=3000)...
	   Assign 0 to reload r158 (freq=3000)
	 Assigning to 159 (cl=GENERAL_REGS, orig=140, freq=3000, tfirst=159, tfreq=3000)...
	   Assign 0 to reload r159 (freq=3000)
	 Assigning to 160 (cl=GENERAL_REGS, orig=149, freq=3000, tfirst=160, tfreq=3000)...
	   Assign 0 to reload r160 (freq=3000)
	 Assigning to 161 (cl=GENERAL_REGS, orig=150, freq=3000, tfirst=161, tfreq=3000)...
	   Assign 0 to reload r161 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 219
changing reg in insn 204
changing reg in insn 202
changing reg in insn 159
changing reg in insn 157
changing reg in insn 114
changing reg in insn 110
changing reg in insn 93
changing reg in insn 91
changing reg in insn 82
changing reg in insn 78
changing reg in insn 73
changing reg in insn 71
changing reg in insn 60
changing reg in insn 56
changing reg in insn 41
changing reg in insn 37
changing reg in insn 34
changing reg in insn 32
changing reg in insn 25
changing reg in insn 10
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 60
changing reg in insn 62
changing reg in insn 78
changing reg in insn 81
changing reg in insn 99
changing reg in insn 100
changing reg in insn 100
changing reg in insn 102
changing reg in insn 107
changing reg in insn 109
changing reg in insn 111
changing reg in insn 113
changing reg in insn 115
changing reg in insn 117
changing reg in insn 120
changing reg in insn 121
changing reg in insn 136
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 133
changing reg in insn 136
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 166
changing reg in insn 181
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 181
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 200
changing reg in insn 179
changing reg in insn 182
changing reg in insn 182
changing reg in insn 183
changing reg in insn 134
changing reg in insn 137
changing reg in insn 137
changing reg in insn 138
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 32
changing reg in insn 33
changing reg in insn 41
changing reg in insn 42
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 56
changing reg in insn 57
changing reg in insn 65
changing reg in insn 66
changing reg in insn 71
changing reg in insn 72
changing reg in insn 85
changing reg in insn 86
changing reg in insn 91
changing reg in insn 92
changing reg in insn 98
changing reg in insn 99
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 105
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 122
changing reg in insn 126
changing reg in insn 128
changing reg in insn 130
changing reg in insn 132
changing reg in insn 131
changing reg in insn 132
changing reg in insn 136
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 151
changing reg in insn 152
changing reg in insn 157
changing reg in insn 158
changing reg in insn 163
changing reg in insn 164
changing reg in insn 166
changing reg in insn 167
changing reg in insn 171
changing reg in insn 173
changing reg in insn 175
changing reg in insn 177
changing reg in insn 176
changing reg in insn 177
changing reg in insn 181
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 196
changing reg in insn 197
changing reg in insn 202
changing reg in insn 203
deleting insn with uid = 26.
deleting insn with uid = 34.
deleting insn with uid = 37.
deleting insn with uid = 65.
deleting insn with uid = 73.
deleting insn with uid = 82.
deleting insn with uid = 85.
deleting insn with uid = 93.
deleting insn with uid = 221.
deleting insn with uid = 223.
deleting insn with uid = 159.
deleting insn with uid = 225.
deleting insn with uid = 227.
deleting insn with uid = 204.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 160.
verify found no changes in insn with uid = 205.


mount_root

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={68d,61u} r1={21d,12u} r2={11d,2u} r3={1d,20u} r4={2d,2u} r7={27d,121u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={52d,9u} r18={8d} r19={4e} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 933{702d,227u,4e} in 156{148 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 219 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 219 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 219 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 209 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":154:12 75 {*movsi_internal}
     (nil))
(jump_insn 209 6 210 2 (set (pc)
        (label_ref 17)) "fs/super.c":154:5 807 {jump}
     (nil)
 -> 17)
(barrier 210 209 19)
(code_label 19 210 9 3 50 (nil) [1 uses])
(note 9 19 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 1 dx [112])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x77d7fc948bd0 file_table>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":155:31 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/super.c":155:31 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 0 ax [114])
                (ashift:SI (reg:SI 0 ax [113])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":155:31 655 {*ashlsi3_1}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 0 ax [115])
                (plus:SI (reg:SI 0 ax [114])
                    (reg/f:SI 1 dx [112])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":155:31 209 {*addsi_1}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 0 ax [116])
                (plus:SI (reg:SI 0 ax [115])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":155:31 209 {*addsi_1}
     (nil))
(insn 15 14 16 3 (set (mem:HI (reg/f:SI 0 ax [116]) [2 file_table[i_26].f_count+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":155:31 76 {*movhi_internal}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":154:31 209 {*addsi_1}
     (nil))
(code_label 17 16 18 4 49 (nil) [1 uses])
(note 18 17 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 18 23 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/super.c":154:19 11 {*cmpsi_1}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "fs/super.c":154:19 806 {*jcc}
     (nil)
 -> 19)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 27 5 (set (reg:SI 0 ax [orig:83 ROOT_DEV.0_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x77d7fc948b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":156:9 75 {*movsi_internal}
     (nil))
(insn 27 25 28 5 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (lshiftrt:SI (reg:SI 0 ax [orig:84 ROOT_DEV.1_2 ] [84])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":156:9 701 {*lshrsi3_1}
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 2 [0x2]))) "fs/super.c":156:8 11 {*cmpsi_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/super.c":156:8 806 {*jcc}
     (nil)
 -> 39)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":157:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 33 6 (set (reg/f:SI 0 ax [117])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x77d7fb17dc60 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":157:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x77d7fb17dc60 *.LC0>)
        (nil)))
(insn 33 32 35 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [117])) "fs/super.c":157:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 35 33 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x77d7fb110900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":157:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 36 35 38 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":157:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(call_insn 38 36 39 6 (call (mem:QI (symbol_ref:SI ("wait_for_keypress") [flags 0x41]  <function_decl 0x77d7fb137e00 wait_for_keypress>) [0 wait_for_keypress S1 A8])
        (const_int 0 [0])) "fs/super.c":158:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(code_label 39 38 40 7 51 (nil) [1 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:SI 0 ax [118])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":160:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
        (nil)))
(insn 42 41 211 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])
        (reg/f:SI 0 ax [118])) "fs/super.c":160:12 75 {*movsi_internal}
     (nil))
(jump_insn 211 42 212 7 (set (pc)
        (label_ref 53)) "fs/super.c":160:5 807 {jump}
     (nil)
 -> 53)
(barrier 212 211 55)
(code_label 55 212 45 8 53 (nil) [1 uses])
(note 45 55 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":161:18 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (set (mem:HI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 84 [0x54])) [2 p_31->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":161:18 76 {*movhi_internal}
     (nil))
(insn 48 47 49 8 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":162:19 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (set (mem:QI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 104 [0x68])) [0 p_31->s_lock+0 S1 A32])
        (const_int 0 [0])) "fs/super.c":162:19 77 {*movqi_internal}
     (nil))
(insn 50 49 51 8 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":163:19 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 100 [0x64])) [6 p_31->s_wait+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":163:19 75 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [19 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [19 p+0 S4 A32])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":160:60 209 {*addsi_1}
     (nil))
(code_label 53 52 54 9 52 (nil) [1 uses])
(note 54 53 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 57 9 (set (reg:SI 0 ax [122])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                        ] UNSPEC_GOTOFF)
                    (const_int 864 [0x360]))))) "fs/super.c":160:33 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x77d7fc948c60 super_block>)
                (const_int 864 [0x360])))
        (nil)))
(insn 57 56 58 9 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [19 p+0 S4 A32])
            (reg:SI 0 ax [122]))) "fs/super.c":160:33 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 59 9 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/super.c":160:33 806 {*jcc}
     (nil)
 -> 55)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:SI 0 ax [orig:86 ROOT_DEV.2_4 ] [86])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x77d7fc948b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":165:15 75 {*movsi_internal}
     (nil))
(insn 61 60 62 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":165:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 63 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:86 ROOT_DEV.2_4 ] [86])) "fs/super.c":165:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 63 62 64 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("read_super") [flags 0x3]  <function_decl 0x77d7fb145300 read_super>) [0 read_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":165:15 823 {*call_value}
     (nil)
    (nil))
(insn 64 63 66 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":165:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 66 64 67 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])
        (reg:SI 0 ax [123])) "fs/super.c":165:15 75 {*movsi_internal}
     (nil))
(insn 67 66 68 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [19 p+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":165:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 68 67 69 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "fs/super.c":165:8 806 {*jcc}
     (nil)
 -> 76)
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":166:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 71 70 72 11 (set (reg/f:SI 0 ax [124])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x77d7fb17dcf0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":166:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x77d7fb17dcf0 *.LC1>)
        (nil)))
(insn 72 71 74 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [124])) "fs/super.c":166:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 74 72 75 11 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x77d7fb110b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/super.c":166:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 75 74 76 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":166:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 76 75 77 12 54 (nil) [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 12 (set (reg:SI 0 ax [orig:87 ROOT_DEV.3_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x77d7fc948b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":167:16 75 {*movsi_internal}
     (nil))
(insn 79 78 80 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":167:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 80 79 81 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/super.c":167:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 81 80 83 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:87 ROOT_DEV.3_5 ] [87])) "fs/super.c":167:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 83 81 84 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("iget") [flags 0x41]  <function_decl 0x77d7fb10e900 iget>) [0 iget S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":167:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 84 83 86 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":167:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 86 84 87 12 (set (mem/f/c:SI (reg/f:SI 7 sp) [5 mi+0 S4 A32])
        (reg:SI 0 ax [125])) "fs/super.c":167:16 75 {*movsi_internal}
     (nil))
(insn 87 86 88 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 7 sp) [5 mi+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":167:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 88 87 89 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "fs/super.c":167:8 806 {*jcc}
     (nil)
 -> 96)
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":168:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 91 90 92 13 (set (reg/f:SI 0 ax [126])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x77d7fb17dd80 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":168:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x77d7fb17dd80 *.LC2>)
        (nil)))
(insn 92 91 94 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [126])) "fs/super.c":168:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 94 92 95 13 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x77d7fb110b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/super.c":168:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 95 94 96 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":168:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 96 95 97 14 55 (nil) [1 uses])
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (reg/f:SI 7 sp) [5 mi+0 S4 A32])) "fs/super.c":169:17 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 48 [0x30])) [2 mi_46->i_count+0 S2 A32])) "fs/super.c":169:17 76 {*movhi_internal}
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg:HI 1 dx [orig:89 _7 ] [89])
                (plus:HI (reg:HI 0 ax [orig:88 _6 ] [88])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":169:17 212 {*addhi_1}
     (nil))
(insn 101 100 102 14 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (reg/f:SI 7 sp) [5 mi+0 S4 A32])) "fs/super.c":169:17 75 {*movsi_internal}
     (nil))
(insn 102 101 103 14 (set (mem:HI (plus:SI (reg/f:SI 0 ax [128])
                (const_int 48 [0x30])) [2 mi_46->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:89 _7 ] [89])) "fs/super.c":169:17 76 {*movhi_internal}
     (nil))
(insn 103 102 104 14 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":170:29 75 {*movsi_internal}
     (nil))
(insn 104 103 105 14 (set (reg/f:SI 1 dx [130])
        (mem/f/c:SI (reg/f:SI 7 sp) [5 mi+0 S4 A32])) "fs/super.c":170:29 75 {*movsi_internal}
     (nil))
(insn 105 104 106 14 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [129])
                (const_int 92 [0x5c])) [5 p_43->s_imount+0 S4 A32])
        (reg/f:SI 1 dx [130])) "fs/super.c":170:29 75 {*movsi_internal}
     (nil))
(insn 106 105 107 14 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":170:18 75 {*movsi_internal}
     (nil))
(insn 107 106 108 14 (set (reg/f:SI 1 dx [orig:90 _8 ] [90])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 92 [0x5c])) [5 p_43->s_imount+0 S4 A32])) "fs/super.c":170:18 75 {*movsi_internal}
     (nil))
(insn 108 107 109 14 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":170:15 75 {*movsi_internal}
     (nil))
(insn 109 108 110 14 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 88 [0x58])) [5 p_43->s_isup+0 S4 A32])
        (reg/f:SI 1 dx [orig:90 _8 ] [90])) "fs/super.c":170:15 75 {*movsi_internal}
     (nil))
(insn 110 109 111 14 (set (reg/f:SI 0 ax [133])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x77d7fb12f120 current>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":171:12 75 {*movsi_internal}
     (nil))
(insn 111 110 112 14 (set (reg/f:SI 0 ax [orig:91 current.4_9 ] [91])
        (mem/f/c:SI (reg/f:SI 0 ax [133]) [6 current+0 S4 A32])) "fs/super.c":171:12 75 {*movsi_internal}
     (nil))
(insn 112 111 113 14 (set (reg/f:SI 1 dx [134])
        (mem/f/c:SI (reg/f:SI 7 sp) [5 mi+0 S4 A32])) "fs/super.c":171:18 75 {*movsi_internal}
     (nil))
(insn 113 112 114 14 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:91 current.4_9 ] [91])
                (const_int 624 [0x270])) [5 current.4_9->pwd+0 S4 A32])
        (reg/f:SI 1 dx [134])) "fs/super.c":171:18 75 {*movsi_internal}
     (nil))
(insn 114 113 115 14 (set (reg/f:SI 0 ax [135])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x77d7fb12f120 current>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":172:12 75 {*movsi_internal}
     (nil))
(insn 115 114 116 14 (set (reg/f:SI 0 ax [orig:92 current.5_10 ] [92])
        (mem/f/c:SI (reg/f:SI 0 ax [135]) [6 current+0 S4 A32])) "fs/super.c":172:12 75 {*movsi_internal}
     (nil))
(insn 116 115 117 14 (set (reg/f:SI 1 dx [136])
        (mem/f/c:SI (reg/f:SI 7 sp) [5 mi+0 S4 A32])) "fs/super.c":172:19 75 {*movsi_internal}
     (nil))
(insn 117 116 118 14 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:92 current.5_10 ] [92])
                (const_int 628 [0x274])) [5 current.5_10->root+0 S4 A32])
        (reg/f:SI 1 dx [136])) "fs/super.c":172:19 75 {*movsi_internal}
     (nil))
(insn 118 117 119 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 free+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":173:10 75 {*movsi_internal}
     (nil))
(insn 119 118 120 14 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":174:10 75 {*movsi_internal}
     (nil))
(insn 120 119 121 14 (set (reg:HI 0 ax [orig:93 _11 ] [93])
        (mem:HI (plus:SI (reg/f:SI 0 ax [137])
                (const_int 2 [0x2])) [2 p_43->s_nzones+0 S2 A16])) "fs/super.c":174:10 76 {*movhi_internal}
     (nil))
(insn 121 120 122 14 (set (reg:SI 0 ax [138])
        (zero_extend:SI (reg:HI 0 ax [orig:93 _11 ] [93]))) "fs/super.c":174:7 144 {*zero_extendhisi2}
     (nil))
(insn 122 121 213 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [138])) "fs/super.c":174:7 75 {*movsi_internal}
     (nil))
(jump_insn 213 122 214 14 (set (pc)
        (label_ref 142)) "fs/super.c":175:11 807 {jump}
     (nil)
 -> 142)
(barrier 214 213 145)
(code_label 145 214 125 15 57 (nil) [1 uses])
(note 125 145 126 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 15 (set (reg:SI 0 ax [139])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 127 126 222 15 (parallel [
            (set (reg:SI 0 ax [139])
                (and:SI (reg:SI 0 ax [139])
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 8191 [0x1fff]))
        (nil)))
(insn 222 127 128 15 (set (reg:SI 2 cx [orig:94 _12 ] [94])
        (reg:SI 0 ax [139])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 128 222 129 15 (set (reg:SI 0 ax [140])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 129 128 224 15 (parallel [
            (set (reg:SI 0 ax [140])
                (ashiftrt:SI (reg:SI 0 ax [140])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 702 {*ashrsi3_1}
     (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 13 [0xd]))
        (nil)))
(insn 224 129 130 15 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (reg:SI 0 ax [140])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 130 224 131 15 (set (reg/f:SI 0 ax [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 131 130 132 15 (parallel [
            (set (reg:SI 1 dx [142])
                (plus:SI (reg:SI 1 dx [orig:95 _13 ] [95])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 209 {*addsi_1}
     (nil))
(insn 132 131 133 15 (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [142])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [141]))
                (const_int 4 [0x4])) [4 p_43->s_zmap[_13]+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 133 132 135 15 (set (reg/f:SI 1 dx [orig:97 _15 ] [97])
        (mem/f:SI (reg/f:SI 0 ax [orig:96 _14 ] [96]) [8 _14->b_data+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 135 133 136 15 (set (reg:SI 0 ax [144])
        (const_int 0 [0])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 136 135 134 15 (parallel [
            (set (reg:SI 0 ax [orig:143 __res ] [143])
                (asm_operands:SI ("bt %2, %3; setb %%al") ("=a") 0 [
                        (reg:SI 0 ax [144])
                        (reg:SI 2 cx [orig:94 _12 ] [94])
                        (mem:QI (reg/f:SI 1 dx [orig:97 _15 ] [97]) [0 *_15+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("a") fs/super.c:176)
                        (asm_input:SI ("r") fs/super.c:176)
                        (asm_input:QI ("m") fs/super.c:176)
                    ]
                     [] fs/super.c:176))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 -1
     (nil))
(insn 134 136 137 15 (set (reg/v:SI 4 si [orig:110 __res ] [110])
        (reg:SI 0 ax [orig:143 __res ] [143])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 137 134 138 15 (set (reg:SI 0 ax [orig:111 _65 ] [111])
        (reg/v:SI 4 si [orig:110 __res ] [110])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 138 137 139 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:111 _65 ] [111])
            (const_int 0 [0]))) "fs/super.c":176:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 139 138 140 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "fs/super.c":176:12 806 {*jcc}
     (nil)
 -> 142)
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 free+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 free+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":177:17 209 {*addsi_1}
     (nil))
(code_label 142 141 143 17 56 (nil) [2 uses])
(note 143 142 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 148 17 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":175:16 209 {*addsi_1}
     (nil))
(insn 148 144 149 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":175:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 149 148 150 17 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "fs/super.c":175:16 806 {*jcc}
     (nil)
 -> 145)
(note 150 149 151 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 18 (set (reg/f:SI 0 ax [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":178:44 75 {*movsi_internal}
     (nil))
(insn 152 151 153 18 (set (reg:HI 0 ax [orig:98 _16 ] [98])
        (mem:HI (plus:SI (reg/f:SI 0 ax [145])
                (const_int 2 [0x2])) [2 p_43->s_nzones+0 S2 A16])) "fs/super.c":178:44 76 {*movhi_internal}
     (nil))
(insn 153 152 154 18 (set (reg:SI 0 ax [orig:99 _17 ] [99])
        (zero_extend:SI (reg:HI 0 ax [orig:98 _16 ] [98]))) "fs/super.c":178:5 144 {*zero_extendhisi2}
     (nil))
(insn 154 153 155 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":178:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 155 154 156 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:99 _17 ] [99])) "fs/super.c":178:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 156 155 157 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 free+0 S4 A32])) "fs/super.c":178:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 157 156 158 18 (set (reg/f:SI 0 ax [146])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x77d7fb17dea0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":178:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x77d7fb17dea0 *.LC3>)
        (nil)))
(insn 158 157 160 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [146])) "fs/super.c":178:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 160 158 161 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x77d7fb110900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":178:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 161 160 162 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":178:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 162 161 163 18 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 free+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":179:10 75 {*movsi_internal}
     (nil))
(insn 163 162 164 18 (set (reg/f:SI 0 ax [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":180:10 75 {*movsi_internal}
     (nil))
(insn 164 163 165 18 (set (reg:HI 0 ax [orig:100 _18 ] [100])
        (mem:HI (reg/f:SI 0 ax [147]) [2 p_43->s_ninodes+0 S2 A32])) "fs/super.c":180:10 76 {*movhi_internal}
     (nil))
(insn 165 164 166 18 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (zero_extend:SI (reg:HI 0 ax [orig:100 _18 ] [100]))) "fs/super.c":180:10 144 {*zero_extendhisi2}
     (nil))
(insn 166 165 167 18 (parallel [
            (set (reg:SI 0 ax [148])
                (plus:SI (reg:SI 0 ax [orig:101 _19 ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":180:7 209 {*addsi_1}
     (nil))
(insn 167 166 215 18 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [148])) "fs/super.c":180:7 75 {*movsi_internal}
     (nil))
(jump_insn 215 167 216 18 (set (pc)
        (label_ref 187)) "fs/super.c":181:11 807 {jump}
     (nil)
 -> 187)
(barrier 216 215 190)
(code_label 190 216 170 19 59 (nil) [1 uses])
(note 170 190 171 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 19 (set (reg:SI 0 ax [149])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 172 171 226 19 (parallel [
            (set (reg:SI 0 ax [149])
                (and:SI (reg:SI 0 ax [149])
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 8191 [0x1fff]))
        (nil)))
(insn 226 172 173 19 (set (reg:SI 2 cx [orig:102 _20 ] [102])
        (reg:SI 0 ax [149])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 173 226 174 19 (set (reg:SI 0 ax [150])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 174 173 228 19 (parallel [
            (set (reg:SI 0 ax [150])
                (ashiftrt:SI (reg:SI 0 ax [150])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 702 {*ashrsi3_1}
     (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 13 [0xd]))
        (nil)))
(insn 228 174 175 19 (set (reg:SI 1 dx [orig:103 _21 ] [103])
        (reg:SI 0 ax [150])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 175 228 176 19 (set (reg/f:SI 0 ax [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 176 175 177 19 (parallel [
            (set (reg:SI 1 dx [152])
                (plus:SI (reg:SI 1 dx [orig:103 _21 ] [103])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 209 {*addsi_1}
     (nil))
(insn 177 176 178 19 (set (reg/f:SI 0 ax [orig:104 _22 ] [104])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [152])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [151]))
                (const_int 4 [0x4])) [4 p_43->s_imap[_21]+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 178 177 180 19 (set (reg/f:SI 1 dx [orig:105 _23 ] [105])
        (mem/f:SI (reg/f:SI 0 ax [orig:104 _22 ] [104]) [8 _22->b_data+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 180 178 181 19 (set (reg:SI 0 ax [154])
        (const_int 0 [0])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 181 180 179 19 (parallel [
            (set (reg:SI 0 ax [orig:153 __res ] [153])
                (asm_operands:SI ("bt %2, %3; setb %%al") ("=a") 0 [
                        (reg:SI 0 ax [154])
                        (reg:SI 2 cx [orig:102 _20 ] [102])
                        (mem:QI (reg/f:SI 1 dx [orig:105 _23 ] [105]) [0 *_23+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("a") fs/super.c:182)
                        (asm_input:SI ("r") fs/super.c:182)
                        (asm_input:QI ("m") fs/super.c:182)
                    ]
                     [] fs/super.c:182))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 -1
     (nil))
(insn 179 181 182 19 (set (reg/v:SI 4 si [orig:108 __res ] [108])
        (reg:SI 0 ax [orig:153 __res ] [153])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 182 179 183 19 (set (reg:SI 0 ax [orig:109 _62 ] [109])
        (reg/v:SI 4 si [orig:108 __res ] [108])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 183 182 184 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:109 _62 ] [109])
            (const_int 0 [0]))) "fs/super.c":182:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 184 183 185 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) "fs/super.c":182:12 806 {*jcc}
     (nil)
 -> 187)
(note 185 184 186 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 free+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 free+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":183:17 209 {*addsi_1}
     (nil))
(code_label 187 186 188 21 58 (nil) [2 uses])
(note 188 187 189 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 193 21 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":181:16 209 {*addsi_1}
     (nil))
(insn 193 189 194 21 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":181:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 194 193 195 21 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "fs/super.c":181:16 806 {*jcc}
     (nil)
 -> 190)
(note 195 194 196 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 22 (set (reg/f:SI 0 ax [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 p+0 S4 A32])) "fs/super.c":184:44 75 {*movsi_internal}
     (nil))
(insn 197 196 198 22 (set (reg:HI 0 ax [orig:106 _24 ] [106])
        (mem:HI (reg/f:SI 0 ax [155]) [2 p_43->s_ninodes+0 S2 A32])) "fs/super.c":184:44 76 {*movhi_internal}
     (nil))
(insn 198 197 199 22 (set (reg:SI 0 ax [orig:107 _25 ] [107])
        (zero_extend:SI (reg:HI 0 ax [orig:106 _24 ] [106]))) "fs/super.c":184:5 144 {*zero_extendhisi2}
     (nil))
(insn 199 198 200 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":184:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 200 199 201 22 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:107 _25 ] [107])) "fs/super.c":184:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 201 200 202 22 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 free+0 S4 A32])) "fs/super.c":184:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 202 201 203 22 (set (reg/f:SI 0 ax [156])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x77d7fb17d5a0 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":184:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x77d7fb17d5a0 *.LC4>)
        (nil)))
(insn 203 202 205 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [156])) "fs/super.c":184:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 205 203 206 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x77d7fb110900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":184:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 206 205 217 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":184:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 217 206 218 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 220 23 (const_int 0 [0]) "fs/super.c":185:1 843 {nop}
     (nil))
(note 220 218 0 NOTE_INSN_DELETED)

;; Function put_super (put_super, funcdef_no=7, decl_uid=1436, cgraph_uid=8, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 88:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 100:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6
EBB 7
EBB 8
EBB 9 10
EBB 11
EBB 12 13
EBB 15
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
  BB 13
   Insn 113: point = 0, n_alt = -1
   Insn 100: point = 0, n_alt = 0
   Insn 99: point = 0, n_alt = 0
   Insn 98: point = 0, n_alt = 0
   Insn 97: point = 0, n_alt = 0
  BB 12
   Insn 95: point = 0, n_alt = -1
   Insn 94: point = 0, n_alt = 0
  BB 10
   Insn 111: point = 1, n_alt = -1
   Insn 75: point = 1, n_alt = 1
  BB 9
   Insn 73: point = 2, n_alt = -1
   Insn 72: point = 2, n_alt = 0
  BB 7
   Insn 109: point = 3, n_alt = -1
   Insn 53: point = 3, n_alt = 1
   Insn 52: point = 3, n_alt = 3
   Insn 51: point = 4, n_alt = 0
   Insn 50: point = 5, n_alt = 0
   Insn 49: point = 5, n_alt = 0
   Insn 48: point = 5, n_alt = 0
   Insn 47: point = 5, n_alt = 0
  BB 8
   Insn 66: point = 6, n_alt = 0
   Insn 65: point = 6, n_alt = 0
   Insn 64: point = 6, n_alt = 0
   Insn 63: point = 6, n_alt = -2
   Insn 62: point = 6, n_alt = 0
   Insn 61: point = 7, n_alt = 0
   Insn 60: point = 7, n_alt = 0
   Insn 59: point = 9, n_alt = 0
   Insn 58: point = 11, n_alt = 0
   Insn 57: point = 12, n_alt = 0
  BB 11
   Insn 88: point = 14, n_alt = 0
   Insn 87: point = 14, n_alt = 0
   Insn 86: point = 14, n_alt = 0
   Insn 85: point = 14, n_alt = -2
   Insn 84: point = 14, n_alt = 0
   Insn 83: point = 15, n_alt = 0
   Insn 82: point = 15, n_alt = 0
   Insn 81: point = 17, n_alt = 0
   Insn 80: point = 19, n_alt = 0
   Insn 79: point = 20, n_alt = 0
  BB 15
   Insn 117: point = 22, n_alt = -1
  BB 3
   Insn 105: point = 22, n_alt = -1
   Insn 14: point = 22, n_alt = 0
   Insn 13: point = 22, n_alt = 0
   Insn 12: point = 22, n_alt = -2
   Insn 11: point = 23, n_alt = 0
   Insn 10: point = 24, n_alt = 0
   Insn 9: point = 25, n_alt = 0
  BB 6
   Insn 107: point = 26, n_alt = -1
   Insn 42: point = 26, n_alt = 0
   Insn 41: point = 26, n_alt = 0
   Insn 40: point = 26, n_alt = -2
   Insn 39: point = 27, n_alt = 0
   Insn 38: point = 28, n_alt = 0
   Insn 37: point = 29, n_alt = 0
  BB 5
   Insn 35: point = 30, n_alt = -1
   Insn 34: point = 30, n_alt = 0
   Insn 33: point = 31, n_alt = 0
   Insn 32: point = 33, n_alt = 0
  BB 4
   Insn 26: point = 35, n_alt = -1
   Insn 25: point = 35, n_alt = 1
   Insn 24: point = 35, n_alt = 1
   Insn 23: point = 36, n_alt = -2
   Insn 22: point = 37, n_alt = 0
   Insn 21: point = 37, n_alt = 0
   Insn 20: point = 37, n_alt = 0
   Insn 19: point = 37, n_alt = 0
  BB 2
   Insn 7: point = 38, n_alt = -1
   Insn 6: point = 38, n_alt = 0
   Insn 5: point = 39, n_alt = 0
   Insn 118: point = 40, n_alt = 0
 r82: [0..40]
 r83: [38..39]
 r84: [30..31]
 r85: [6..7]
 r86: [14..15]
 r87: [23..24]
 r88: [35..36]
 r89: [32..33]
 r90: [27..28]
 r91: [3..4]
 r92: [8..12]
 r93: [8..9]
 r94: [10..11]
 r95: [16..20]
 r96: [16..17]
 r97: [18..19]
Compressing live ranges: from 41 to 26 - 63%
Ranges after the compression:
 r82: [0..25]
 r83: [24..25]
 r84: [18..19]
 r85: [2..3]
 r86: [8..9]
 r87: [14..15]
 r88: [22..23]
 r89: [20..21]
 r90: [16..17]
 r91: [0..1]
 r92: [4..7]
 r93: [4..5]
 r94: [6..7]
 r95: [10..13]
 r96: [10..11]
 r97: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 118
changing reg in insn 85
changing reg in insn 63
changing reg in insn 40
changing reg in insn 38
changing reg in insn 12
changing reg in insn 10
changing reg in insn 5
changing reg in insn 5
changing reg in insn 6
changing reg in insn 33
changing reg in insn 34
changing reg in insn 60
changing reg in insn 62
changing reg in insn 82
changing reg in insn 84
changing reg in insn 10
changing reg in insn 11
changing reg in insn 23
changing reg in insn 24
changing reg in insn 32
changing reg in insn 33
changing reg in insn 38
changing reg in insn 39
changing reg in insn 51
changing reg in insn 52
changing reg in insn 57
changing reg in insn 60
changing reg in insn 59
changing reg in insn 60
changing reg in insn 58
changing reg in insn 59
changing reg in insn 79
changing reg in insn 82
changing reg in insn 81
changing reg in insn 82
changing reg in insn 80
changing reg in insn 81
deleting insn with uid = 12.
deleting insn with uid = 23.
deleting insn with uid = 40.
deleting insn with uid = 63.
deleting insn with uid = 85.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 99.


put_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={18d,11u} r1={12d,4u} r2={8d} r3={1d,7u} r7={22d,77u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={31d,5u} r18={7d} r19={2e} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 653{547d,104u,2e} in 65{58 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 118 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 118 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 118 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [orig:83 ROOT_DEV.6_1 ] [83])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x77d7fc948b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":193:13 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:83 ROOT_DEV.6_1 ] [83]))) "fs/super.c":193:8 11 {*cmpsi_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/super.c":193:8 806 {*jcc}
     (nil)
 -> 17)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":194:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 10 9 11 3 (set (reg/f:SI 0 ax [87])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x77d7fb17dbd0 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":194:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x77d7fb17dbd0 *.LC5>)
        (nil)))
(insn 11 10 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [87])) "fs/super.c":194:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 13 11 14 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x77d7fb110900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":194:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 14 13 105 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":194:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 105 14 106 3 (set (pc)
        (label_ref 103)) "fs/super.c":195:9 807 {jump}
     (nil)
 -> 103)
(barrier 106 105 17)
(code_label 17 106 18 4 61 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":197:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 20 19 21 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [9 dev+0 S4 A32])) "fs/super.c":197:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 21 20 22 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x3]  <function_decl 0x77d7fb10e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":197:16 823 {*call_value}
     (nil)
    (nil))
(insn 22 21 24 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":197:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 24 22 25 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 sb+0 S4 A32])
        (reg:SI 0 ax [88])) "fs/super.c":197:16 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":197:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 31 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 116)
            (pc))) "fs/super.c":197:8 806 {*jcc}
     (nil)
 -> 116)
(note 31 26 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 sb+0 S4 A32])) "fs/super.c":199:11 75 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [89])
                (const_int 92 [0x5c])) [5 sb_13->s_imount+0 S4 A32])) "fs/super.c":199:11 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/super.c":199:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "fs/super.c":199:8 806 {*jcc}
     (nil)
 -> 45)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":200:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 38 37 39 6 (set (reg/f:SI 0 ax [90])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x77d7fb17dab0 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":200:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x77d7fb17dab0 *.LC6>)
        (nil)))
(insn 39 38 41 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [90])) "fs/super.c":200:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 39 42 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x77d7fb110900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":200:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 42 41 107 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":200:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 107 42 108 6 (set (pc)
        (label_ref 103)) "fs/super.c":201:9 807 {jump}
     (nil)
 -> 103)
(barrier 108 107 45)
(code_label 45 108 46 7 64 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":203:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 48 47 49 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [19 sb+0 S4 A32])) "fs/super.c":203:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 49 48 50 7 (call (mem:QI (symbol_ref:SI ("lock_super") [flags 0x3]  <function_decl 0x77d7fb137d00 lock_super>) [0 lock_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":203:5 812 {*call}
     (nil)
    (nil))
(insn 50 49 51 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":203:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 51 50 52 7 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 sb+0 S4 A32])) "fs/super.c":204:15 75 {*movsi_internal}
     (nil))
(insn 52 51 53 7 (set (mem:HI (plus:SI (reg/f:SI 0 ax [91])
                (const_int 84 [0x54])) [2 sb_13->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":204:15 76 {*movhi_internal}
     (nil))
(insn 53 52 109 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":205:12 75 {*movsi_internal}
     (nil))
(jump_insn 109 53 110 7 (set (pc)
        (label_ref 67)) "fs/super.c":205:5 807 {jump}
     (nil)
 -> 67)
(barrier 110 109 69)
(code_label 69 110 56 8 66 (nil) [1 uses])
(note 56 69 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 8 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 sb+0 S4 A32])) "fs/super.c":206:9 75 {*movsi_internal}
     (nil))
(insn 58 57 59 8 (set (reg:SI 1 dx [94])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/super.c":206:9 75 {*movsi_internal}
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg:SI 1 dx [93])
                (plus:SI (reg:SI 1 dx [94])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":206:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 60 59 61 8 (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [93])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [92]))
                (const_int 4 [0x4])) [4 sb_13->s_imap[i_5]+0 S4 A32])) "fs/super.c":206:9 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":206:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 64 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/super.c":206:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 64 62 65 8 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x77d7fb10e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":206:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 65 64 66 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":206:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 66 65 67 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":205:35 209 {*addsi_1}
     (nil))
(code_label 67 66 68 9 65 (nil) [1 uses])
(note 68 67 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 68 73 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":205:19 11 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/super.c":205:19 806 {*jcc}
     (nil)
 -> 69)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 111 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":207:12 75 {*movsi_internal}
     (nil))
(jump_insn 111 75 112 10 (set (pc)
        (label_ref 89)) "fs/super.c":207:5 807 {jump}
     (nil)
 -> 89)
(barrier 112 111 91)
(code_label 91 112 78 11 68 (nil) [1 uses])
(note 78 91 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 sb+0 S4 A32])) "fs/super.c":208:9 75 {*movsi_internal}
     (nil))
(insn 80 79 81 11 (set (reg:SI 1 dx [97])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/super.c":208:9 75 {*movsi_internal}
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg:SI 1 dx [96])
                (plus:SI (reg:SI 1 dx [97])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":208:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 82 81 83 11 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [96])
                        (const_int 4 [0x4]))
                    (reg/f:SI 0 ax [95]))
                (const_int 4 [0x4])) [4 sb_13->s_zmap[i_6]+0 S4 A32])) "fs/super.c":208:9 75 {*movsi_internal}
     (nil))
(insn 83 82 84 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":208:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 84 83 86 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 0 ax [orig:86 _4 ] [86])) "fs/super.c":208:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 86 84 87 11 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x77d7fb10e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":208:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 87 86 88 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":208:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 88 87 89 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":207:35 209 {*addsi_1}
     (nil))
(code_label 89 88 90 12 67 (nil) [1 uses])
(note 90 89 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 94 90 95 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":207:19 11 {*cmpsi_1}
     (nil))
(jump_insn 95 94 96 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "fs/super.c":207:19 806 {*jcc}
     (nil)
 -> 91)
(note 96 95 97 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":209:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 98 97 99 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [19 sb+0 S4 A32])) "fs/super.c":209:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 99 98 100 13 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x77d7fb145100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":209:5 812 {*call}
     (nil)
    (nil))
(insn 100 99 113 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":209:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 113 100 114 13 (set (pc)
        (label_ref 103)) "fs/super.c":210:5 807 {jump}
     (nil)
 -> 103)
(barrier 114 113 116)
(code_label 116 114 115 15 69 (nil) [1 uses])
(note 115 116 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 103 15 (const_int 0 [0]) "fs/super.c":198:9 843 {nop}
     (nil))
(code_label 103 117 104 14 60 (nil) [3 uses])
(note 104 103 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 119 104 0 NOTE_INSN_DELETED)

;; Function sys_mount (sys_mount, funcdef_no=8, decl_uid=1451, cgraph_uid=9, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 21:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 62:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 67:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 83:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 85:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 99:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 112:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 123:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 127:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 134:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 142:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 150:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 152:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 154:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11 12
EBB 13 14
EBB 15 16
EBB 17 18
EBB 19
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
   Insn 163: point = 0, n_alt = -1
   Insn 162: point = 0, n_alt = -2
   Insn 158: point = 1, n_alt = -2
  BB 18
   Insn 179: point = 4, n_alt = -1
   Insn 143: point = 4, n_alt = 0
   Insn 142: point = 5, n_alt = 0
   Insn 141: point = 5, n_alt = 0
   Insn 140: point = 5, n_alt = -2
   Insn 139: point = 6, n_alt = 0
   Insn 138: point = 6, n_alt = 0
  BB 16
   Insn 177: point = 7, n_alt = -1
   Insn 128: point = 7, n_alt = 0
   Insn 127: point = 8, n_alt = 0
   Insn 126: point = 8, n_alt = 0
   Insn 125: point = 8, n_alt = -2
   Insn 124: point = 9, n_alt = 0
   Insn 123: point = 9, n_alt = 0
  BB 14
   Insn 175: point = 10, n_alt = -1
   Insn 113: point = 10, n_alt = 0
   Insn 112: point = 11, n_alt = 0
   Insn 111: point = 11, n_alt = 0
   Insn 110: point = 11, n_alt = -2
   Insn 109: point = 12, n_alt = 0
   Insn 108: point = 12, n_alt = 0
  BB 12
   Insn 173: point = 13, n_alt = -1
   Insn 94: point = 13, n_alt = 0
   Insn 93: point = 14, n_alt = 0
   Insn 92: point = 14, n_alt = 0
   Insn 91: point = 14, n_alt = -2
   Insn 90: point = 15, n_alt = 0
   Insn 89: point = 15, n_alt = 0
  BB 10
   Insn 171: point = 16, n_alt = -1
   Insn 77: point = 16, n_alt = 0
   Insn 76: point = 17, n_alt = 0
   Insn 75: point = 17, n_alt = 0
   Insn 74: point = 17, n_alt = -2
   Insn 73: point = 18, n_alt = 0
   Insn 72: point = 18, n_alt = 0
  BB 7
   Insn 169: point = 19, n_alt = -1
   Insn 56: point = 19, n_alt = 0
  BB 5
   Insn 167: point = 20, n_alt = -1
   Insn 36: point = 20, n_alt = 0
   Insn 35: point = 21, n_alt = 0
   Insn 34: point = 21, n_alt = 0
   Insn 33: point = 21, n_alt = -2
   Insn 32: point = 22, n_alt = 0
   Insn 31: point = 22, n_alt = 0
  BB 3
   Insn 165: point = 23, n_alt = -1
   Insn 15: point = 23, n_alt = 0
  BB 19
   Insn 155: point = 24, n_alt = 0
   Insn 154: point = 25, n_alt = 8
   Insn 153: point = 26, n_alt = 0
   Insn 152: point = 27, n_alt = 8
   Insn 151: point = 28, n_alt = 0
   Insn 150: point = 29, n_alt = 1
   Insn 149: point = 30, n_alt = 0
   Insn 148: point = 31, n_alt = 0
  BB 17
   Insn 136: point = 32, n_alt = -1
   Insn 135: point = 32, n_alt = 0
   Insn 134: point = 33, n_alt = 4
   Insn 133: point = 35, n_alt = 0
  BB 15
   Insn 121: point = 37, n_alt = -1
   Insn 120: point = 37, n_alt = 0
   Insn 119: point = 38, n_alt = 0
   Insn 118: point = 40, n_alt = 0
  BB 13
   Insn 106: point = 42, n_alt = -1
   Insn 105: point = 42, n_alt = 1
   Insn 104: point = 42, n_alt = 1
   Insn 103: point = 43, n_alt = -2
   Insn 102: point = 44, n_alt = 0
   Insn 101: point = 44, n_alt = 0
   Insn 100: point = 44, n_alt = 0
   Insn 99: point = 44, n_alt = 0
  BB 11
   Insn 87: point = 45, n_alt = -1
   Insn 86: point = 45, n_alt = 0
   Insn 85: point = 46, n_alt = 0
   Insn 84: point = 48, n_alt = 0
   Insn 83: point = 50, n_alt = 2
   Insn 82: point = 52, n_alt = 0
  BB 9
   Insn 69: point = 54, n_alt = -1
   Insn 68: point = 54, n_alt = 0
   Insn 67: point = 55, n_alt = 2
   Insn 66: point = 57, n_alt = 0
  BB 8
   Insn 64: point = 59, n_alt = -1
   Insn 63: point = 59, n_alt = 0
   Insn 62: point = 60, n_alt = 2
   Insn 61: point = 62, n_alt = 0
  BB 6
   Insn 54: point = 64, n_alt = -1
   Insn 53: point = 64, n_alt = 1
   Insn 52: point = 64, n_alt = 1
   Insn 51: point = 65, n_alt = -2
   Insn 50: point = 66, n_alt = 0
   Insn 49: point = 66, n_alt = 0
   Insn 48: point = 66, n_alt = -2
   Insn 47: point = 66, n_alt = 0
   Insn 46: point = 66, n_alt = 0
   Insn 45: point = 66, n_alt = 0
   Insn 44: point = 66, n_alt = 0
   Insn 43: point = 66, n_alt = -2
   Insn 42: point = 66, n_alt = 0
   Insn 41: point = 66, n_alt = 0
  BB 4
   Insn 29: point = 67, n_alt = -1
   Insn 28: point = 67, n_alt = 0
   Insn 27: point = 68, n_alt = 0
   Insn 26: point = 70, n_alt = 0
   Insn 25: point = 72, n_alt = 2
   Insn 24: point = 74, n_alt = 0
   Insn 23: point = 75, n_alt = 1
   Insn 22: point = 76, n_alt = 0
   Insn 21: point = 78, n_alt = 2
   Insn 20: point = 80, n_alt = 0
  BB 2
   Insn 13: point = 82, n_alt = -1
   Insn 12: point = 82, n_alt = 1
   Insn 11: point = 82, n_alt = 1
   Insn 10: point = 83, n_alt = -2
   Insn 9: point = 84, n_alt = 0
   Insn 8: point = 84, n_alt = 0
   Insn 7: point = 84, n_alt = -2
   Insn 6: point = 84, n_alt = 0
   Insn 5: point = 84, n_alt = 0
   Insn 181: point = 84, n_alt = 0
 r82: [32..84] [21..22] [17..18] [14..15] [11..12] [8..9] [5..6]
 r83: [77..78]
 r84: [71..72]
 r85: [69..70]
 r86: [67..68]
 r87: [59..60]
 r88: [54..55]
 r89: [49..50]
 r90: [47..48]
 r91: [45..46]
 r92: [37..38]
 r93: [32..33]
 r94: [23..24] [19..20] [16..16] [13..13] [10..10] [7..7] [2..4]
 r95: [0..1]
 r96: [82..83]
 r97: [79..80]
 r98: [75..76]
 r99: [73..74]
 r100: [64..65]
 r101: [61..62]
 r102: [56..57]
 r103: [51..52]
 r104: [42..43]
 r105: [39..40]
 r106: [34..35]
 r107: [29..31]
 r108: [29..30]
 r109: [27..28]
 r110: [25..26]
Compressing live ranges: from 85 to 74 - 87%
Ranges after the compression:
 r82: [30..73] [20..21] [16..17] [13..14] [10..11] [7..8] [4..5]
 r83: [68..69]
 r84: [62..63]
 r85: [60..61]
 r86: [58..59]
 r87: [52..53]
 r88: [48..49]
 r89: [44..45]
 r90: [42..43]
 r91: [40..41]
 r92: [34..35]
 r93: [30..31]
 r94: [22..23] [18..19] [15..15] [12..12] [9..9] [6..6] [2..3]
 r95: [0..1]
 r96: [72..73]
 r97: [70..71]
 r98: [66..67]
 r99: [64..65]
 r100: [56..57]
 r101: [54..55]
 r102: [50..51]
 r103: [46..47]
 r104: [38..39]
 r105: [36..37]
 r106: [32..33]
 r107: [28..29]
 r108: [28..29]
 r109: [26..27]
 r110: [24..25]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 181
changing reg in insn 140
changing reg in insn 125
changing reg in insn 110
changing reg in insn 91
changing reg in insn 74
changing reg in insn 48
changing reg in insn 43
changing reg in insn 33
changing reg in insn 7
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 86
changing reg in insn 119
changing reg in insn 120
changing reg in insn 134
changing reg in insn 135
changing reg in insn 155
changing reg in insn 143
changing reg in insn 128
changing reg in insn 113
changing reg in insn 94
changing reg in insn 77
changing reg in insn 56
changing reg in insn 36
changing reg in insn 15
changing reg in insn 158
changing reg in insn 158
changing reg in insn 162
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 51
changing reg in insn 52
changing reg in insn 61
changing reg in insn 62
changing reg in insn 66
changing reg in insn 67
changing reg in insn 82
changing reg in insn 83
changing reg in insn 103
changing reg in insn 104
changing reg in insn 118
changing reg in insn 119
changing reg in insn 133
changing reg in insn 134
changing reg in insn 148
changing reg in insn 150
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 33.
deleting insn with uid = 43.
deleting insn with uid = 48.
deleting insn with uid = 51.
deleting insn with uid = 74.
deleting insn with uid = 91.
deleting insn with uid = 103.
deleting insn with uid = 110.
deleting insn with uid = 125.
deleting insn with uid = 140.
deleting insn with uid = 158.
deleting insn with uid = 162.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 141.


sys_mount

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={42d,27u} r1={12d,1u} r2={11d} r3={1d,9u} r7={31d,108u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={42d,9u} r18={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 943{789d,154u,0e} in 107{97 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 181 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 181 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 181 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":219:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [8 dev_name+0 S4 A32])) "fs/super.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 6 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x77d7fb110500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":219:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":219:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 dev_i+0 S4 A32])
        (reg:SI 0 ax [96])) "fs/super.c":219:19 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 dev_i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":219:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/super.c":219:8 806 {*jcc}
     (nil)
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 165 3 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":220:16 75 {*movsi_internal}
     (nil))
(jump_insn 165 15 166 3 (set (pc)
        (label_ref 156)) "fs/super.c":220:16 807 {jump}
     (nil)
 -> 156)
(barrier 166 165 18)
(code_label 18 166 19 4 71 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 dev_i+0 S4 A32])) "fs/super.c":221:24 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [97])
                (const_int 14 [0xe])) [2 dev_i_17->i_zone[0]+0 S2 A16])) "fs/super.c":221:24 76 {*movhi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 ax [98])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/super.c":221:9 144 {*zero_extendhisi2}
     (nil))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 dev+0 S4 A32])
        (reg:SI 0 ax [98])) "fs/super.c":221:9 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 0 ax [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 dev_i+0 S4 A32])) "fs/super.c":222:10 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (reg/f:SI 0 ax [99]) [2 dev_i_17->i_mode+0 S2 A32])) "fs/super.c":222:10 76 {*movhi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/super.c":222:10 144 {*zero_extendhisi2}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 0 ax [orig:86 _4 ] [86])
                (and:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":222:10 490 {*andsi_1}
     (nil))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _4 ] [86])
            (const_int 24576 [0x6000]))) "fs/super.c":222:8 11 {*cmpsi_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/super.c":222:8 806 {*jcc}
     (nil)
 -> 39)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":223:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 dev_i+0 S4 A32])) "fs/super.c":223:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 32 35 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":223:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":223:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 36 35 167 5 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -1 [0xffffffffffffffff])) "fs/super.c":224:16 75 {*movsi_internal}
     (nil))
(jump_insn 167 36 168 5 (set (pc)
        (label_ref 156)) "fs/super.c":224:16 807 {jump}
     (nil)
 -> 156)
(barrier 168 167 39)
(code_label 39 168 40 6 73 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":226:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 42 41 44 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 dev_i+0 S4 A32])) "fs/super.c":226:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 44 42 45 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":226:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 45 44 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":226:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":227:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 47 46 49 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [8 dir_name+0 S4 A32])) "fs/super.c":227:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 49 47 50 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x77d7fb110500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":227:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 50 49 52 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":227:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 52 50 53 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])
        (reg:SI 0 ax [100])) "fs/super.c":227:19 75 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 dir_i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":227:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "fs/super.c":227:8 806 {*jcc}
     (nil)
 -> 59)
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 169 7 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":228:16 75 {*movsi_internal}
     (nil))
(jump_insn 169 56 170 7 (set (pc)
        (label_ref 156)) "fs/super.c":228:16 807 {jump}
     (nil)
 -> 156)
(barrier 170 169 59)
(code_label 59 170 60 8 74 (nil) [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])) "fs/super.c":229:14 75 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [101])
                (const_int 48 [0x30])) [2 dir_i_22->i_count+0 S2 A32])) "fs/super.c":229:14 76 {*movhi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:87 _5 ] [87])
            (const_int 1 [0x1]))) "fs/super.c":229:8 10 {*cmphi_1}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/super.c":229:8 806 {*jcc}
     (nil)
 -> 70)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])) "fs/super.c":229:37 75 {*movsi_internal}
     (nil))
(insn 67 66 68 9 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [102])
                (const_int 46 [0x2e])) [2 dir_i_22->i_num+0 S2 A16])) "fs/super.c":229:37 76 {*movhi_internal}
     (nil))
(insn 68 67 69 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:88 _6 ] [88])
            (const_int 1 [0x1]))) "fs/super.c":229:29 10 {*cmphi_1}
     (nil))
(jump_insn 69 68 70 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/super.c":229:29 806 {*jcc}
     (nil)
 -> 80)
(code_label 70 69 71 10 75 (nil) [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":230:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 73 72 75 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 dir_i+0 S4 A32])) "fs/super.c":230:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 75 73 76 10 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":230:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 76 75 77 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":230:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 77 76 171 10 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":231:16 75 {*movsi_internal}
     (nil))
(jump_insn 171 77 172 10 (set (pc)
        (label_ref 156)) "fs/super.c":231:16 807 {jump}
     (nil)
 -> 156)
(barrier 172 171 80)
(code_label 80 172 81 11 76 (nil) [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])) "fs/super.c":233:10 75 {*movsi_internal}
     (nil))
(insn 83 82 84 11 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (reg/f:SI 0 ax [103]) [2 dir_i_22->i_mode+0 S2 A32])) "fs/super.c":233:10 76 {*movhi_internal}
     (nil))
(insn 84 83 85 11 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (zero_extend:SI (reg:HI 0 ax [orig:89 _7 ] [89]))) "fs/super.c":233:10 144 {*zero_extendhisi2}
     (nil))
(insn 85 84 86 11 (parallel [
            (set (reg:SI 0 ax [orig:91 _9 ] [91])
                (and:SI (reg:SI 0 ax [orig:90 _8 ] [90])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":233:10 490 {*andsi_1}
     (nil))
(insn 86 85 87 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:91 _9 ] [91])
            (const_int 16384 [0x4000]))) "fs/super.c":233:8 11 {*cmpsi_1}
     (nil))
(jump_insn 87 86 88 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "fs/super.c":233:8 806 {*jcc}
     (nil)
 -> 97)
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":234:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 90 89 92 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 dir_i+0 S4 A32])) "fs/super.c":234:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 92 90 93 12 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":234:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 93 92 94 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":234:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 94 93 173 12 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -1 [0xffffffffffffffff])) "fs/super.c":235:16 75 {*movsi_internal}
     (nil))
(jump_insn 173 94 174 12 (set (pc)
        (label_ref 156)) "fs/super.c":235:16 807 {jump}
     (nil)
 -> 156)
(barrier 174 173 97)
(code_label 97 174 98 13 77 (nil) [1 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":237:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 100 99 101 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 dev+0 S4 A32])) "fs/super.c":237:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 101 100 102 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("read_super") [flags 0x3]  <function_decl 0x77d7fb145300 read_super>) [0 read_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":237:16 823 {*call_value}
     (nil)
    (nil))
(insn 102 101 104 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":237:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 104 102 105 13 (set (mem/f/c:SI (reg/f:SI 7 sp) [19 sb+0 S4 A32])
        (reg:SI 0 ax [104])) "fs/super.c":237:16 75 {*movsi_internal}
     (nil))
(insn 105 104 106 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 7 sp) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":237:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 106 105 107 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/super.c":237:8 806 {*jcc}
     (nil)
 -> 116)
(note 107 106 108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":238:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 109 108 111 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 dir_i+0 S4 A32])) "fs/super.c":238:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 111 109 112 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":238:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 112 111 113 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":238:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 113 112 175 14 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":239:16 75 {*movsi_internal}
     (nil))
(jump_insn 175 113 176 14 (set (pc)
        (label_ref 156)) "fs/super.c":239:16 807 {jump}
     (nil)
 -> 156)
(barrier 176 175 116)
(code_label 116 176 117 15 78 (nil) [1 uses])
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 15 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (reg/f:SI 7 sp) [19 sb+0 S4 A32])) "fs/super.c":241:11 75 {*movsi_internal}
     (nil))
(insn 119 118 120 15 (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [105])
                (const_int 92 [0x5c])) [5 sb_24->s_imount+0 S4 A32])) "fs/super.c":241:11 75 {*movsi_internal}
     (nil))
(insn 120 119 121 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:92 _10 ] [92])
            (const_int 0 [0]))) "fs/super.c":241:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 121 120 122 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "fs/super.c":241:8 806 {*jcc}
     (nil)
 -> 131)
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":242:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 124 123 126 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 dir_i+0 S4 A32])) "fs/super.c":242:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 126 124 127 16 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":242:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 127 126 128 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":242:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 128 127 177 16 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":243:16 75 {*movsi_internal}
     (nil))
(jump_insn 177 128 178 16 (set (pc)
        (label_ref 156)) "fs/super.c":243:16 807 {jump}
     (nil)
 -> 156)
(barrier 178 177 131)
(code_label 131 178 132 17 79 (nil) [1 uses])
(note 132 131 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 17 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])) "fs/super.c":245:14 75 {*movsi_internal}
     (nil))
(insn 134 133 135 17 (set (reg:QI 0 ax [orig:93 _11 ] [93])
        (mem:QI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 53 [0x35])) [0 dir_i_22->i_mount+0 S1 A8])) "fs/super.c":245:14 77 {*movqi_internal}
     (nil))
(insn 135 134 136 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:93 _11 ] [93])
            (const_int 0 [0]))) "fs/super.c":245:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 136 135 137 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "fs/super.c":245:8 806 {*jcc}
     (nil)
 -> 146)
(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":246:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 139 138 141 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 dir_i+0 S4 A32])) "fs/super.c":246:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 141 139 142 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":246:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 142 141 143 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":246:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 143 142 179 18 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int -1 [0xffffffffffffffff])) "fs/super.c":247:16 75 {*movsi_internal}
     (nil))
(jump_insn 179 143 180 18 (set (pc)
        (label_ref 156)) "fs/super.c":247:16 807 {jump}
     (nil)
 -> 156)
(barrier 180 179 146)
(code_label 146 180 147 19 80 (nil) [1 uses])
(note 147 146 148 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 19 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (reg/f:SI 7 sp) [19 sb+0 S4 A32])) "fs/super.c":249:18 75 {*movsi_internal}
     (nil))
(insn 149 148 150 19 (set (reg/f:SI 1 dx [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])) "fs/super.c":249:18 75 {*movsi_internal}
     (nil))
(insn 150 149 151 19 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 92 [0x5c])) [5 sb_24->s_imount+0 S4 A32])
        (reg/f:SI 1 dx [108])) "fs/super.c":249:18 75 {*movsi_internal}
     (nil))
(insn 151 150 152 19 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])) "fs/super.c":250:20 75 {*movsi_internal}
     (nil))
(insn 152 151 153 19 (set (mem:QI (plus:SI (reg/f:SI 0 ax [109])
                (const_int 53 [0x35])) [0 dir_i_22->i_mount+0 S1 A8])
        (const_int 1 [0x1])) "fs/super.c":250:20 77 {*movqi_internal}
     (nil))
(insn 153 152 154 19 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 dir_i+0 S4 A32])) "fs/super.c":251:19 75 {*movsi_internal}
     (nil))
(insn 154 153 155 19 (set (mem:QI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 51 [0x33])) [0 dir_i_22->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/super.c":251:19 77 {*movqi_internal}
     (nil))
(insn 155 154 156 19 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (const_int 0 [0])) "fs/super.c":252:12 75 {*movsi_internal}
     (nil))
(code_label 156 155 157 20 72 (nil) [8 uses])
(note 157 156 163 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 163 157 182 20 (use (reg/i:SI 0 ax)) "fs/super.c":253:1 -1
     (nil))
(note 182 163 0 NOTE_INSN_DELETED)

;; Function sys_umount (sys_umount, funcdef_no=9, decl_uid=1458, cgraph_uid=10, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 21:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 58:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 77:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 86:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 96:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 102:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 111:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 122:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 125:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 129:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 134:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 141:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 145:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11 12
EBB 13
EBB 14 15 16
EBB 17
EBB 18 19
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
   Insn 158: point = 0, n_alt = -1
   Insn 157: point = 0, n_alt = -2
   Insn 153: point = 1, n_alt = -2
  BB 16
   Insn 170: point = 4, n_alt = -1
   Insn 106: point = 4, n_alt = 0
  BB 10
   Insn 166: point = 5, n_alt = -1
   Insn 70: point = 5, n_alt = 0
  BB 7
   Insn 164: point = 6, n_alt = -1
   Insn 50: point = 6, n_alt = 0
  BB 5
   Insn 162: point = 7, n_alt = -1
   Insn 36: point = 7, n_alt = 0
   Insn 35: point = 8, n_alt = 0
   Insn 34: point = 8, n_alt = 0
   Insn 33: point = 8, n_alt = -2
   Insn 32: point = 9, n_alt = 0
   Insn 31: point = 9, n_alt = 0
  BB 3
   Insn 160: point = 10, n_alt = -1
   Insn 15: point = 10, n_alt = 0
  BB 19
   Insn 150: point = 11, n_alt = 0
   Insn 149: point = 12, n_alt = 0
   Insn 148: point = 12, n_alt = 0
   Insn 147: point = 12, n_alt = -2
   Insn 146: point = 13, n_alt = 0
   Insn 145: point = 13, n_alt = 0
   Insn 144: point = 13, n_alt = 0
   Insn 143: point = 13, n_alt = 0
   Insn 142: point = 13, n_alt = 0
   Insn 141: point = 13, n_alt = 0
   Insn 140: point = 13, n_alt = 1
   Insn 139: point = 14, n_alt = 0
   Insn 138: point = 15, n_alt = 0
   Insn 137: point = 15, n_alt = 0
   Insn 136: point = 15, n_alt = -2
   Insn 135: point = 15, n_alt = 0
   Insn 134: point = 16, n_alt = 0
   Insn 133: point = 16, n_alt = 0
   Insn 132: point = 18, n_alt = 0
   Insn 131: point = 19, n_alt = 1
   Insn 130: point = 20, n_alt = 0
   Insn 129: point = 21, n_alt = 0
   Insn 128: point = 21, n_alt = 0
   Insn 127: point = 21, n_alt = -2
   Insn 126: point = 21, n_alt = 0
   Insn 125: point = 22, n_alt = 0
   Insn 124: point = 22, n_alt = 0
   Insn 123: point = 24, n_alt = 0
   Insn 122: point = 25, n_alt = 8
   Insn 121: point = 26, n_alt = 0
   Insn 120: point = 28, n_alt = 0
  BB 18
   Insn 118: point = 30, n_alt = -1
   Insn 117: point = 30, n_alt = 0
   Insn 115: point = 31, n_alt = 0
   Insn 114: point = 33, n_alt = 0
  BB 13
   Insn 168: point = 35, n_alt = -1
   Insn 91: point = 35, n_alt = 1
   Insn 90: point = 36, n_alt = -2
   Insn 89: point = 38, n_alt = 0
  BB 12
   Insn 86: point = 40, n_alt = 0
   Insn 85: point = 40, n_alt = 0
   Insn 84: point = 40, n_alt = -2
   Insn 83: point = 40, n_alt = 0
   Insn 82: point = 41, n_alt = 0
   Insn 81: point = 42, n_alt = 0
  BB 11
   Insn 79: point = 43, n_alt = -1
   Insn 78: point = 43, n_alt = 0
   Insn 77: point = 44, n_alt = 4
   Insn 76: point = 46, n_alt = 0
   Insn 75: point = 48, n_alt = 0
  BB 9
   Insn 67: point = 50, n_alt = -1
   Insn 66: point = 50, n_alt = 0
   Insn 65: point = 51, n_alt = 0
   Insn 64: point = 53, n_alt = 0
  BB 8
   Insn 62: point = 55, n_alt = -1
   Insn 61: point = 55, n_alt = 1
   Insn 60: point = 55, n_alt = 1
   Insn 59: point = 56, n_alt = -2
   Insn 58: point = 57, n_alt = 0
   Insn 57: point = 57, n_alt = 0
   Insn 56: point = 57, n_alt = 0
   Insn 55: point = 57, n_alt = 0
  BB 6
   Insn 48: point = 58, n_alt = -1
   Insn 47: point = 58, n_alt = 0
   Insn 46: point = 59, n_alt = 0
   Insn 45: point = 60, n_alt = 0
   Insn 44: point = 60, n_alt = 0
   Insn 43: point = 60, n_alt = -2
   Insn 42: point = 60, n_alt = 0
   Insn 41: point = 60, n_alt = 0
  BB 4
   Insn 29: point = 61, n_alt = -1
   Insn 28: point = 61, n_alt = 0
   Insn 27: point = 62, n_alt = 0
   Insn 26: point = 64, n_alt = 0
   Insn 25: point = 66, n_alt = 2
   Insn 24: point = 68, n_alt = 0
   Insn 23: point = 69, n_alt = 1
   Insn 22: point = 70, n_alt = 0
   Insn 21: point = 72, n_alt = 2
   Insn 20: point = 74, n_alt = 0
  BB 2
   Insn 13: point = 76, n_alt = -1
   Insn 12: point = 76, n_alt = 1
   Insn 11: point = 76, n_alt = 1
   Insn 10: point = 77, n_alt = -2
   Insn 9: point = 78, n_alt = 0
   Insn 8: point = 78, n_alt = 0
   Insn 7: point = 78, n_alt = -2
   Insn 6: point = 78, n_alt = 0
   Insn 5: point = 78, n_alt = 0
   Insn 172: point = 78, n_alt = 0
  BB 17
   Insn 111: point = 79, n_alt = 0
  BB 15
   Insn 104: point = 80, n_alt = -1
   Insn 103: point = 80, n_alt = 0
   Insn 102: point = 81, n_alt = 2
   Insn 101: point = 83, n_alt = 0
  BB 14
   Insn 99: point = 85, n_alt = -1
   Insn 98: point = 85, n_alt = 0
   Insn 97: point = 86, n_alt = 0
   Insn 96: point = 88, n_alt = 2
   Insn 95: point = 90, n_alt = 0
 r82: [12..91] [8..9]
 r83: [71..72]
 r84: [65..66]
 r85: [63..64]
 r86: [61..62]
 r87: [58..59]
 r88: [50..51]
 r89: [45..46]
 r90: [43..44]
 r91: [87..88]
 r92: [85..86]
 r93: [80..81]
 r94: [30..31]
 r95: [25..26]
 r96: [21..22]
 r97: [15..16]
 r98: [10..11] [2..7]
 r99: [0..1]
 r100: [76..77]
 r101: [73..74]
 r102: [69..70]
 r103: [67..68]
 r104: [55..56]
 r105: [52..53]
 r106: [47..48]
 r107: [40..41]
 r108: [35..36]
 r109: [37..38]
 r110: [89..90]
 r111: [82..83]
 r112: [32..33]
 r113: [27..28]
 r114: [23..24]
 r115: [19..20]
 r116: [17..18]
 r117: [13..14]
Compressing live ranges: from 92 to 74 - 80%
Ranges after the compression:
 r82: [8..73] [4..5]
 r83: [58..59]
 r84: [52..53]
 r85: [50..51]
 r86: [48..49]
 r87: [46..47]
 r88: [40..41]
 r89: [36..37]
 r90: [34..35]
 r91: [70..71]
 r92: [68..69]
 r93: [64..65]
 r94: [24..25]
 r95: [20..21]
 r96: [16..17]
 r97: [10..11]
 r98: [6..7] [2..3]
 r99: [0..1]
 r100: [62..63]
 r101: [60..61]
 r102: [56..57]
 r103: [54..55]
 r104: [44..45]
 r105: [42..43]
 r106: [38..39]
 r107: [32..33]
 r108: [28..29]
 r109: [30..31]
 r110: [72..73]
 r111: [66..67]
 r112: [26..27]
 r113: [22..23]
 r114: [18..19]
 r115: [14..15]
 r116: [12..13]
 r117: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 172
changing reg in insn 147
changing reg in insn 136
changing reg in insn 127
changing reg in insn 114
changing reg in insn 89
changing reg in insn 84
changing reg in insn 82
changing reg in insn 46
changing reg in insn 43
changing reg in insn 33
changing reg in insn 7
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 46
changing reg in insn 47
changing reg in insn 65
changing reg in insn 66
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 102
changing reg in insn 103
changing reg in insn 115
changing reg in insn 117
changing reg in insn 121
changing reg in insn 122
changing reg in insn 124
changing reg in insn 126
changing reg in insn 133
changing reg in insn 135
changing reg in insn 150
changing reg in insn 106
changing reg in insn 70
changing reg in insn 50
changing reg in insn 36
changing reg in insn 15
changing reg in insn 153
changing reg in insn 153
changing reg in insn 157
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 59
changing reg in insn 60
changing reg in insn 64
changing reg in insn 65
changing reg in insn 75
changing reg in insn 76
changing reg in insn 82
changing reg in insn 83
changing reg in insn 90
changing reg in insn 91
changing reg in insn 89
changing reg in insn 90
changing reg in insn 95
changing reg in insn 96
changing reg in insn 101
changing reg in insn 102
changing reg in insn 114
changing reg in insn 115
changing reg in insn 120
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 139
changing reg in insn 140
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 33.
deleting insn with uid = 43.
deleting insn with uid = 59.
deleting insn with uid = 84.
deleting insn with uid = 90.
deleting insn with uid = 127.
deleting insn with uid = 136.
deleting insn with uid = 147.
deleting insn with uid = 153.
deleting insn with uid = 157.
starting the processing of deferred insns
ending the processing of deferred insns


sys_umount

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={46d,34u} r1={10d} r2={10d} r3={1d,11u} r7={28d,102u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r17={39d,9u} r18={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} 
;;    total ref usage 875{719d,156u,0e} in 106{97 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 172 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 172 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 172 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":261:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [8 dev_name+0 S4 A32])) "fs/super.c":261:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 6 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x77d7fb110500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":261:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":261:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg:SI 0 ax [100])) "fs/super.c":261:19 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":261:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/super.c":261:8 806 {*jcc}
     (nil)
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 160 3 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":262:16 75 {*movsi_internal}
     (nil))
(jump_insn 160 15 161 3 (set (pc)
        (label_ref 151)) "fs/super.c":262:16 807 {jump}
     (nil)
 -> 151)
(barrier 161 160 18)
(code_label 18 161 19 4 82 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/super.c":263:24 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [101])
                (const_int 14 [0xe])) [2 inode_23->i_zone[0]+0 S2 A16])) "fs/super.c":263:24 76 {*movhi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 ax [102])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/super.c":263:9 144 {*zero_extendhisi2}
     (nil))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 dev+0 S4 A32])
        (reg:SI 0 ax [102])) "fs/super.c":263:9 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/super.c":264:10 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (reg/f:SI 0 ax [103]) [2 inode_23->i_mode+0 S2 A32])) "fs/super.c":264:10 76 {*movhi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/super.c":264:10 144 {*zero_extendhisi2}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 0 ax [orig:86 _4 ] [86])
                (and:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":264:10 490 {*andsi_1}
     (nil))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _4 ] [86])
            (const_int 24576 [0x6000]))) "fs/super.c":264:8 11 {*cmpsi_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/super.c":264:8 806 {*jcc}
     (nil)
 -> 39)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":265:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/super.c":265:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 32 35 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":265:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":265:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 36 35 162 5 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int -15 [0xfffffffffffffff1])) "fs/super.c":266:16 75 {*movsi_internal}
     (nil))
(jump_insn 162 36 163 5 (set (pc)
        (label_ref 151)) "fs/super.c":266:16 807 {jump}
     (nil)
 -> 151)
(barrier 163 162 39)
(code_label 39 163 40 6 84 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":268:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 42 41 44 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/super.c":268:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 44 42 45 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":268:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 45 44 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":268:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 46 45 47 6 (set (reg:SI 0 ax [orig:87 ROOT_DEV.7_5 ] [87])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x77d7fc948b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":269:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:87 ROOT_DEV.7_5 ] [87]))) "fs/super.c":269:8 11 {*cmpsi_1}
     (nil))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "fs/super.c":269:8 806 {*jcc}
     (nil)
 -> 53)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 164 7 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":270:16 75 {*movsi_internal}
     (nil))
(jump_insn 164 50 165 7 (set (pc)
        (label_ref 151)) "fs/super.c":270:16 807 {jump}
     (nil)
 -> 151)
(barrier 165 164 53)
(code_label 53 165 54 8 85 (nil) [1 uses])
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":271:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 56 55 57 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 dev+0 S4 A32])) "fs/super.c":271:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 57 56 58 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x3]  <function_decl 0x77d7fb10e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":271:16 823 {*call_value}
     (nil)
    (nil))
(insn 58 57 60 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":271:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 60 58 61 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])
        (reg:SI 0 ax [104])) "fs/super.c":271:16 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":271:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "fs/super.c":271:8 806 {*jcc}
     (nil)
 -> 68)
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])) "fs/super.c":271:39 75 {*movsi_internal}
     (nil))
(insn 65 64 66 9 (set (reg/f:SI 0 ax [orig:88 _6 ] [88])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [105])
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":271:39 75 {*movsi_internal}
     (nil))
(insn 66 65 67 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:88 _6 ] [88])
            (const_int 0 [0]))) "fs/super.c":271:32 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 67 66 68 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "fs/super.c":271:32 806 {*jcc}
     (nil)
 -> 73)
(code_label 68 67 69 10 86 (nil) [1 uses])
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 166 10 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":272:16 75 {*movsi_internal}
     (nil))
(jump_insn 166 70 167 10 (set (pc)
        (label_ref 151)) "fs/super.c":272:16 807 {jump}
     (nil)
 -> 151)
(barrier 167 166 73)
(code_label 73 167 74 11 87 (nil) [1 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])) "fs/super.c":273:12 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":273:12 75 {*movsi_internal}
     (nil))
(insn 77 76 78 11 (set (reg:QI 0 ax [orig:90 _8 ] [90])
        (mem:QI (plus:SI (reg/f:SI 0 ax [orig:89 _7 ] [89])
                (const_int 53 [0x35])) [0 _7->i_mount+0 S1 A8])) "fs/super.c":273:22 77 {*movqi_internal}
     (nil))
(insn 78 77 79 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "fs/super.c":273:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "fs/super.c":273:8 806 {*jcc}
     (nil)
 -> 87)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":274:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 82 81 83 12 (set (reg/f:SI 0 ax [107])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x77d7fb17db40 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":274:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x77d7fb17db40 *.LC7>)
        (nil)))
(insn 83 82 85 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [107])) "fs/super.c":274:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 85 83 86 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x77d7fb110900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":274:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 86 85 87 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":274:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 87 86 88 13 88 (nil) [1 uses])
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 91 13 (set (reg:SI 0 ax [109])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x40]  <var_decl 0x77d7fc948cf0 inode_table>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":275:16 75 {*movsi_internal}
     (nil))
(insn 91 89 168 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [108])) "fs/super.c":275:16 75 {*movsi_internal}
     (nil))
(jump_insn 168 91 169 13 (set (pc)
        (label_ref 112)) "fs/super.c":275:5 807 {jump}
     (nil)
 -> 112)
(barrier 169 168 116)
(code_label 116 169 94 14 91 (nil) [1 uses])
(note 94 116 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/super.c":276:18 75 {*movsi_internal}
     (nil))
(insn 96 95 97 14 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 44 [0x2c])) [2 inode_16->i_dev+0 S2 A32])) "fs/super.c":276:18 76 {*movhi_internal}
     (nil))
(insn 97 96 98 14 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (zero_extend:SI (reg:HI 0 ax [orig:91 _9 ] [91]))) "fs/super.c":276:18 144 {*zero_extendhisi2}
     (nil))
(insn 98 97 99 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:92 _10 ] [92]))) "fs/super.c":276:12 11 {*cmpsi_1}
     (nil))
(jump_insn 99 98 100 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "fs/super.c":276:12 806 {*jcc}
     (nil)
 -> 109)
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 15 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/super.c":276:41 75 {*movsi_internal}
     (nil))
(insn 102 101 103 15 (set (reg:HI 0 ax [orig:93 _11 ] [93])
        (mem:HI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 48 [0x30])) [2 inode_16->i_count+0 S2 A32])) "fs/super.c":276:41 76 {*movhi_internal}
     (nil))
(insn 103 102 104 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:93 _11 ] [93])
            (const_int 0 [0]))) "fs/super.c":276:33 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 104 103 105 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "fs/super.c":276:33 806 {*jcc}
     (nil)
 -> 109)
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 170 16 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":277:20 75 {*movsi_internal}
     (nil))
(jump_insn 170 106 171 16 (set (pc)
        (label_ref 151)) "fs/super.c":277:20 807 {jump}
     (nil)
 -> 151)
(barrier 171 170 109)
(code_label 109 171 110 17 90 (nil) [2 uses])
(note 110 109 111 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 17 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":275:72 209 {*addsi_1}
     (nil))
(code_label 112 111 113 18 89 (nil) [1 uses])
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (set (reg:SI 0 ax [112])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x40]  <var_decl 0x77d7fc948cf0 inode_table>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":275:55 75 {*movsi_internal}
     (nil))
(insn 115 114 117 18 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (plus:SI (reg:SI 0 ax [112])
            (const_int 1792 [0x700]))) "fs/super.c":275:55 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("inode_table") [flags 0x40]  <var_decl 0x77d7fc948cf0 inode_table>)
                (const_int 1792 [0x700])))
        (nil)))
(insn 117 115 118 18 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 inode+0 S4 A32])
            (reg/f:SI 0 ax [orig:94 _12 ] [94]))) "fs/super.c":275:41 11 {*cmpsi_1}
     (nil))
(jump_insn 118 117 119 18 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/super.c":275:41 806 {*jcc}
     (nil)
 -> 116)
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 19 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])) "fs/super.c":278:7 75 {*movsi_internal}
     (nil))
(insn 121 120 122 19 (set (reg/f:SI 0 ax [orig:95 _13 ] [95])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":278:7 75 {*movsi_internal}
     (nil))
(insn 122 121 123 19 (set (mem:QI (plus:SI (reg/f:SI 0 ax [orig:95 _13 ] [95])
                (const_int 53 [0x35])) [0 _13->i_mount+0 S1 A8])
        (const_int 0 [0])) "fs/super.c":278:27 77 {*movqi_internal}
     (nil))
(insn 123 122 124 19 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])) "fs/super.c":279:5 75 {*movsi_internal}
     (nil))
(insn 124 123 125 19 (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":279:5 75 {*movsi_internal}
     (nil))
(insn 125 124 126 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":279:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 126 125 128 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg/f:SI 0 ax [orig:96 _14 ] [96])) "fs/super.c":279:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 128 126 129 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":279:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 129 128 130 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":279:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 130 129 131 19 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])) "fs/super.c":280:18 75 {*movsi_internal}
     (nil))
(insn 131 130 132 19 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":280:18 75 {*movsi_internal}
     (nil))
(insn 132 131 133 19 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])) "fs/super.c":281:5 75 {*movsi_internal}
     (nil))
(insn 133 132 134 19 (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 88 [0x58])) [5 sb_27->s_isup+0 S4 A32])) "fs/super.c":281:5 75 {*movsi_internal}
     (nil))
(insn 134 133 135 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":281:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 135 134 137 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg/f:SI 0 ax [orig:97 _15 ] [97])) "fs/super.c":281:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 137 135 138 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x77d7fb0d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":281:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 138 137 139 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":281:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 139 138 140 19 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sb+0 S4 A32])) "fs/super.c":282:16 75 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 88 [0x58])) [5 sb_27->s_isup+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":282:16 75 {*movsi_internal}
     (nil))
(insn 141 140 142 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":283:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 142 141 143 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 dev+0 S4 A32])) "fs/super.c":283:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 143 142 144 19 (call (mem:QI (symbol_ref:SI ("put_super") [flags 0x3]  <function_decl 0x77d7fb145700 put_super>) [0 put_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":283:5 812 {*call}
     (nil)
    (nil))
(insn 144 143 145 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":283:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 145 144 146 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":284:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 146 145 148 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 dev+0 S4 A32])) "fs/super.c":284:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 148 146 149 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sync_dev") [flags 0x41]  <function_decl 0x77d7fb0d2f00 sync_dev>) [0 sync_dev S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":284:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 149 148 150 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":284:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 150 149 151 19 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int 0 [0])) "fs/super.c":285:12 75 {*movsi_internal}
     (nil))
(code_label 151 150 152 20 83 (nil) [5 uses])
(note 152 151 158 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 158 152 173 20 (use (reg/i:SI 0 ax)) "fs/super.c":286:1 -1
     (nil))
(note 173 158 0 NOTE_INSN_DELETED)
