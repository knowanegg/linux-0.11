
;; Function wait_on_buffer (wait_on_buffer, funcdef_no=5, decl_uid=1395, cgraph_uid=6, symbol_order=11)

scanning new insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 8 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 30(l0): point = 0
   Insn 24(l0): point = 3
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 22(l0): point = 21
   Insn 21(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 27(l0): point = 30
   Insn 5(l0): point = 32
   Insn 31(l0): point = 34
 a0(r84): [24..25]
 a1(r86): [26..27]
 a2(r82): [6..34]
 a3(r83): [13..16]
 a4(r85): [17..18]
Compressing live ranges: from 37 to 8 - 21%
Ranges after the compression:
 a0(r84): [4..5]
 a1(r86): [6..7]
 a2(r82): [0..7]
 a3(r83): [0..1]
 a4(r85): [2..3]
  regions=1, blocks=7, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r82  l0     3    3:r83  l0     0    0:r84  l0     0    4:r85  l0     0
    1:r86  l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


wait_on_buffer

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,6u} r7={4d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u,1e} r17={8d,1u} r18={1d} r19={1d,6u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 131{92d,38u,1e} in 16{15 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 27 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/buffer.c:43)
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":43:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 27 5 28 2 (set (pc)
        (label_ref 16)) "fs/buffer.c":44:11 807 {jump}
     (nil)
 -> 16)
(barrier 28 27 20)
(code_label 20 28 8 3 3 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":45:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":45:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":45:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/buffer.c":45:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 13 12 14 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":45:9 75 {*movsi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x752d7c117e00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":45:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":45:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 16 15 17 4 2 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":44:14 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 86)
                (const_int 13 [0xd])) [0 bh_5(D)->b_lock+0 S1 A8])) "fs/buffer.c":44:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/buffer.c":44:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/buffer.c":44:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 29 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/buffer.c:46)
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":46:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 29 24 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 0 6 (const_int 0 [0]) "fs/buffer.c":47:1 843 {nop}
     (nil))

;; Function brelse (brelse, funcdef_no=6, decl_uid=1154, cgraph_uid=7, symbol_order=12)

scanning new insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 7 6
;; 2 succs { 7 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 7 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:30000
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:17000
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:13000
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 46(l0): point = 1
   Insn 42(l0): point = 4
   Insn 37(l0): point = 6
   Insn 36(l0): point = 8
   Insn 35(l0): point = 10
   Insn 34(l0): point = 12
   Insn 33(l0): point = 14
   Insn 32(l0): point = 16
   Insn 29(l0): point = 19
   Insn 28(l0): point = 21
   Insn 27(l0): point = 23
   Insn 26(l0): point = 25
   Insn 25(l0): point = 27
   Insn 24(l0): point = 29
   Insn 22(l0): point = 32
   Insn 21(l0): point = 34
   Insn 20(l0): point = 36
   Insn 19(l0): point = 38
   Insn 18(l0): point = 40
   Insn 17(l0): point = 42
   Insn 16(l0): point = 44
   Insn 15(l0): point = 46
   Insn 14(l0): point = 48
   Insn 13(l0): point = 50
   Insn 12(l0): point = 52
   Insn 6(l0): point = 55
   Insn 5(l0): point = 57
   Insn 47(l0): point = 59
 a0(r82): [11..59]
 a1(r88): [13..14]
 a2(r87): [26..27]
 a3(r83): [35..42]
 a4(r86): [37..38]
 a5(r84): [37..40]
 a6(r85): [43..44]
Compressing live ranges: from 62 to 8 - 12%
Ranges after the compression:
 a0(r82): [0..7]
 a1(r88): [0..1]
 a2(r87): [2..3]
 a3(r83): [4..5]
 a4(r86): [4..5]
 a5(r84): [4..5]
 a6(r85): [6..7]
  pref0:a0(r82)<-hr3@1500
  regions=1, blocks=8, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    0:r82  l0     3    3:r83  l0     0    5:r84  l0     1    6:r85  l0     0
    4:r86  l0     2    2:r87  l0     0    1:r88  l0     0
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


brelse

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r3={2d,2u} r6={1d,7u} r7={10d,25u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,10u} r17={13d,2u} r18={3d} r19={1d,7u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,4u} r83={1d,2u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 306{242d,64u,0e} in 28{25 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 47 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 47 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":51:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 45)
            (pc))) "fs/buffer.c":51:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":54:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 13 12 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":54:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":54:5 812 {*call}
     (nil)
    (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":54:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 16 15 17 3 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":55:13 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:QI 83 [ _1 ])
        (mem:QI (plus:SI (reg/f:SI 85)
                (const_int 12 [0xc])) [0 bh_6(D)->b_count+0 S1 A32])) "fs/buffer.c":55:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (nil)))
(insn 18 17 19 3 (parallel [
            (set (reg:QI 84 [ _3 ])
                (plus:QI (reg:QI 83 [ _1 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":55:22 213 {*addqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 3 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":55:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (mem:QI (plus:SI (reg/f:SI 86)
                (const_int 12 [0xc])) [0 bh_6(D)->b_count+0 S1 A32])
        (reg:QI 84 [ _3 ])) "fs/buffer.c":55:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_DEAD (reg:QI 84 [ _3 ])
            (nil))))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _1 ])
            (const_int 0 [0]))) "fs/buffer.c":55:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (nil)))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "fs/buffer.c":55:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":56:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 25 24 26 4 (set (reg/f:SI 87)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x752d7c1b4090 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":56:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x752d7c1b4090 *.LC0>)
        (nil)))
(insn 26 25 27 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 87)) "fs/buffer.c":56:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 27 26 28 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":56:9 75 {*movsi_internal}
     (nil))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":56:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":56:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 30 29 31 5 7 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":57:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 33 32 34 5 (set (reg/f:SI 88)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":57:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
        (nil)))
(insn 34 33 35 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 88)) "fs/buffer.c":57:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 35 34 36 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":57:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 36 35 37 5 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x752d7c140200 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":57:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 37 36 42 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":57:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 42 37 43 5 (set (pc)
        (label_ref 40)) 807 {jump}
     (nil)
 -> 40)
(barrier 43 42 45)
(code_label 45 43 44 7 8 (nil) [1 uses])
(note 44 45 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 44 40 7 (const_int 0 [0]) "fs/buffer.c":52:9 843 {nop}
     (nil))
(code_label 40 46 41 6 4 (nil) [1 uses])
(note 41 40 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

;; Function bread (bread, funcdef_no=7, decl_uid=1152, cgraph_uid=8, symbol_order=13)

scanning new insn with uid = 71.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:24000
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 65(l0): point = 0
   Insn 64(l0): point = 2
   Insn 60(l0): point = 4
   Insn 57(l0): point = 7
   Insn 56(l0): point = 9
   Insn 55(l0): point = 11
   Insn 54(l0): point = 13
   Insn 53(l0): point = 15
   Insn 69(l0): point = 18
   Insn 48(l0): point = 20
   Insn 46(l0): point = 23
   Insn 45(l0): point = 25
   Insn 44(l0): point = 27
   Insn 43(l0): point = 29
   Insn 42(l0): point = 31
   Insn 41(l0): point = 33
   Insn 40(l0): point = 35
   Insn 39(l0): point = 37
   Insn 38(l0): point = 39
   Insn 37(l0): point = 41
   Insn 36(l0): point = 43
   Insn 35(l0): point = 45
   Insn 34(l0): point = 47
   Insn 33(l0): point = 49
   Insn 67(l0): point = 52
   Insn 28(l0): point = 54
   Insn 26(l0): point = 57
   Insn 25(l0): point = 59
   Insn 24(l0): point = 61
   Insn 23(l0): point = 63
   Insn 20(l0): point = 66
   Insn 19(l0): point = 68
   Insn 18(l0): point = 70
   Insn 17(l0): point = 72
   Insn 16(l0): point = 74
   Insn 15(l0): point = 76
   Insn 13(l0): point = 79
   Insn 12(l0): point = 81
   Insn 11(l0): point = 83
   Insn 10(l0): point = 85
   Insn 9(l0): point = 87
   Insn 8(l0): point = 89
   Insn 7(l0): point = 91
   Insn 6(l0): point = 93
   Insn 5(l0): point = 95
   Insn 71(l0): point = 97
 a0(r86): [3..4]
 a1(r85): [52..54] [18..20] [5..7]
 a2(r84): [26..27]
 a3(r90): [28..29]
 a4(r82): [57..97] [44..51]
 a5(r83): [60..61]
 a6(r89): [62..63]
 a7(r88): [73..74]
 a8(r87): [84..85]
Compressing live ranges: from 100 to 22 - 22%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [12..13] [2..5]
 a2(r84): [6..7]
 a3(r90): [8..9]
 a4(r82): [14..21] [10..11]
 a5(r83): [14..15]
 a6(r89): [16..17]
 a7(r88): [18..19]
 a8(r87): [20..21]
  pref0:a8(r87)<-hr0@1500
  pref1:a0(r86)<-hr0@1500
  pref2:a4(r82)<-hr3@1500
  regions=1, blocks=10, points=22
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    4:r82  l0     3    5:r83  l0     0    2:r84  l0     0    1:r85  l0     0
    0:r86  l0     0    8:r87  l0     0    7:r88  l0     0    6:r89  l0     0
    3:r90  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bread

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,3u} r1={6d} r2={6d} r3={2d,2u} r6={1d,9u} r7={18d,41u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,10u} r17={19d,3u} r18={5d} r19={1d,18u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={3d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 494{397d,97u,0e} in 46{41 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 71 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 71 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 71 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":68:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 block+0 S4 A32])) "fs/buffer.c":68:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":68:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":68:16 823 {*call_value}
     (nil)
    (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":68:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 87)
        (reg:SI 0 ax)) "fs/buffer.c":68:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])
        (reg:SI 87)) "fs/buffer.c":68:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":68:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "fs/buffer.c":68:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":69:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 16 15 17 3 (set (reg/f:SI 88)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x752d7c1b41b0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":69:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x752d7c1b41b0 *.LC1>)
        (nil)))
(insn 17 16 18 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 88)) "fs/buffer.c":69:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 18 17 19 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":69:9 75 {*movsi_internal}
     (nil))
(call_insn 19 18 20 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":69:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":69:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 21 20 22 4 10 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":71:11 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:QI 83 [ _1 ])
        (mem:QI (plus:SI (reg/f:SI 89)
                (const_int 10 [0xa])) [0 bh_10->b_uptodate+0 S1 A16])) "fs/buffer.c":71:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _1 ])
            (const_int 0 [0]))) "fs/buffer.c":71:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (nil)))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/buffer.c":71:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 31)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 67 5 (set (reg/f:SI 85 [ _3 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":72:16 75 {*movsi_internal}
     (nil))
(jump_insn 67 28 68 5 (set (pc)
        (label_ref 58)) "fs/buffer.c":72:16 807 {jump}
     (nil)
 -> 58)
(barrier 68 67 31)
(code_label 31 68 32 6 11 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":74:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 34 33 35 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 35 34 36 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 0 [0])) "fs/buffer.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 36 35 37 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":74:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 37 36 38 6 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":74:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 38 37 39 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":74:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 39 38 40 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":75:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 40 39 41 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":75:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 40 42 6 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":75:5 812 {*call}
     (nil)
    (nil))
(insn 42 41 43 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":75:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 43 42 44 6 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":76:11 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 90)
                (const_int 10 [0xa])) [0 bh_10->b_uptodate+0 S1 A16])) "fs/buffer.c":76:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/buffer.c":76:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "fs/buffer.c":76:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 51)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 69 7 (set (reg/f:SI 85 [ _3 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":77:16 75 {*movsi_internal}
     (nil))
(jump_insn 69 48 70 7 (set (pc)
        (label_ref 58)) "fs/buffer.c":77:16 807 {jump}
     (nil)
 -> 58)
(barrier 70 69 51)
(code_label 51 70 52 8 13 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":79:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 54 53 55 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":79:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 55 54 56 8 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x3]  <function_decl 0x752d7c0f2f00 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":79:5 812 {*call}
     (nil)
    (nil))
(insn 56 55 57 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":79:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 57 56 58 8 (set (reg/f:SI 85 [ _3 ])
        (const_int 0 [0])) "fs/buffer.c":80:12 75 {*movsi_internal}
     (nil))
(code_label 58 57 59 9 12 (nil) [2 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 64 9 (set (reg/f:SI 86 [ <retval> ])
        (reg/f:SI 85 [ _3 ])) "fs/buffer.c":81:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (nil)))
(insn 64 60 65 9 (set (reg/i:SI 0 ax)
        (reg/f:SI 86 [ <retval> ])) "fs/buffer.c":81:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ <retval> ])
        (nil)))
(insn 65 64 0 9 (use (reg/i:SI 0 ax)) "fs/buffer.c":81:1 -1
     (nil))

;; Function buffer_init (buffer_init, funcdef_no=8, decl_uid=1133, cgraph_uid=9, symbol_order=14)

scanning new insn with uid = 104.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 18 count 18 (  1.2)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 13 12 14
;;
;; Loop 2
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10
;;
;; Loop 1
;;  header 8, multiple latches: 7 6
;;  depth 1, outer 0
;;  nodes: 8 7 6
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 6 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 10 13 }
;; 13 succs { 12 }
;; 12 succs { 14 }
;; 14 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:66000
  a1(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 103(l0): point = 0
   Insn 101(l0): point = 4
   Insn 83(l0): point = 7
   Insn 82(l0): point = 9
   Insn 81(l0): point = 11
   Insn 90(l0): point = 14
   Insn 89(l0): point = 16
   Insn 98(l0): point = 19
   Insn 77(l0): point = 21
   Insn 76(l0): point = 23
   Insn 75(l0): point = 25
   Insn 74(l0): point = 27
   Insn 73(l0): point = 29
   Insn 72(l0): point = 31
   Insn 71(l0): point = 33
   Insn 70(l0): point = 35
   Insn 69(l0): point = 37
   Insn 68(l0): point = 39
   Insn 67(l0): point = 41
   Insn 66(l0): point = 43
   Insn 54(l0): point = 46
   Insn 53(l0): point = 48
   Insn 52(l0): point = 50
   Insn 51(l0): point = 52
   Insn 50(l0): point = 54
   Insn 49(l0): point = 56
   Insn 48(l0): point = 58
   Insn 47(l0): point = 60
   Insn 46(l0): point = 62
   Insn 45(l0): point = 64
   Insn 44(l0): point = 66
   Insn 43(l0): point = 68
   Insn 42(l0): point = 70
   Insn 41(l0): point = 72
   Insn 40(l0): point = 74
   Insn 39(l0): point = 76
   Insn 38(l0): point = 78
   Insn 37(l0): point = 80
   Insn 36(l0): point = 82
   Insn 35(l0): point = 84
   Insn 34(l0): point = 86
   Insn 33(l0): point = 88
   Insn 32(l0): point = 90
   Insn 31(l0): point = 92
   Insn 30(l0): point = 94
   Insn 29(l0): point = 96
   Insn 28(l0): point = 98
   Insn 27(l0): point = 100
   Insn 26(l0): point = 102
   Insn 25(l0): point = 104
   Insn 24(l0): point = 106
   Insn 23(l0): point = 108
   Insn 22(l0): point = 110
   Insn 64(l0): point = 113
   Insn 63(l0): point = 115
   Insn 61(l0): point = 117
   Insn 60(l0): point = 119
   Insn 59(l0): point = 121
   Insn 56(l0): point = 124
   Insn 96(l0): point = 127
   Insn 16(l0): point = 130
   Insn 15(l0): point = 132
   Insn 94(l0): point = 135
   Insn 10(l0): point = 137
   Insn 8(l0): point = 140
   Insn 7(l0): point = 142
   Insn 6(l0): point = 144
   Insn 5(l0): point = 146
   Insn 104(l0): point = 148
 a0(r82): [7..148]
 a1(r111): [10..11]
 a2(r91): [24..25]
 a3(r110): [28..29]
 a4(r90): [28..31]
 a5(r89): [34..37]
 a6(r109): [34..35]
 a7(r88): [40..41]
 a8(r87): [116..117]
 a9(r108): [118..119]
 a10(r86): [51..52]
 a11(r85): [53..54]
 a12(r107): [59..60]
 a13(r84): [59..62]
 a14(r106): [63..64]
 a15(r105): [67..68]
 a16(r83): [67..70]
 a17(r104): [71..72]
 a18(r102): [75..78]
 a19(r103): [75..76]
 a20(r101): [81..82]
 a21(r100): [85..86]
 a22(r99): [89..90]
 a23(r98): [93..94]
 a24(r97): [97..98]
 a25(r96): [101..102]
 a26(r95): [105..106]
 a27(r94): [109..110]
 a28(r93): [131..132]
 a29(r92): [145..146]
Compressing live ranges: from 151 to 48 - 31%
Ranges after the compression:
 a0(r82): [0..47]
 a1(r111): [0..1]
 a2(r91): [2..3]
 a3(r110): [4..5]
 a4(r90): [4..5]
 a5(r89): [6..7]
 a6(r109): [6..7]
 a7(r88): [8..9]
 a8(r87): [40..41]
 a9(r108): [42..43]
 a10(r86): [10..11]
 a11(r85): [12..13]
 a12(r107): [14..15]
 a13(r84): [14..15]
 a14(r106): [16..17]
 a15(r105): [18..19]
 a16(r83): [18..19]
 a17(r104): [20..21]
 a18(r102): [22..23]
 a19(r103): [22..23]
 a20(r101): [24..25]
 a21(r100): [26..27]
 a22(r99): [28..29]
 a23(r98): [30..31]
 a24(r97): [32..33]
 a25(r96): [34..35]
 a26(r95): [36..37]
 a27(r94): [38..39]
 a28(r93): [44..45]
 a29(r92): [46..47]
  regions=1, blocks=15, points=48
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=30
Disposition:
    0:r82  l0     0   16:r83  l0     2   13:r84  l0     2   11:r85  l0     1
   10:r86  l0     1    8:r87  l0     1    7:r88  l0     1    5:r89  l0     1
    4:r90  l0     2    2:r91  l0     1   29:r92  l0     1   28:r93  l0     1
   27:r94  l0     1   26:r95  l0     1   25:r96  l0     1   24:r97  l0     1
   23:r98  l0     1   22:r99  l0     1   21:r100 l0     1   20:r101 l0     1
   18:r102 l0     1   19:r103 l0     2   17:r104 l0     1   15:r105 l0     1
   14:r106 l0     1   12:r107 l0     1    9:r108 l0     1    6:r109 l0     2
    3:r110 l0     1    1:r111 l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


buffer_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,14u} r7={1d,14u} r16={1d,15u} r17={13d,4u} r19={1d,48u,3e} r82={1d,10u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} 
;;    total ref usage 187{50d,134u,3e} in 69{69 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 104 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 104 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 104 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":88:25 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
        (reg/f:SI 92)) "fs/buffer.c":88:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [4 buffer_end+0 S4 A32])
            (const_int 1048576 [0x100000]))) "fs/buffer.c":93:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "fs/buffer.c":93:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 13)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 94 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])
        (const_int 655360 [0xa0000])) "fs/buffer.c":95:11 75 {*movsi_internal}
     (nil))
(jump_insn 94 10 95 3 (set (pc)
        (label_ref 17)) 807 {jump}
     (nil)
 -> 17)
(barrier 95 94 13)
(code_label 13 95 14 4 15 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 93)
        (mem/c:SI (reg/f:SI 16 argp) [4 buffer_end+0 S4 A32])) "fs/buffer.c":112:11 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])
        (reg:SI 93)) "fs/buffer.c":112:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(code_label 17 16 18 5 16 (nil) [1 uses])
(note 18 17 96 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 96 18 97 5 (set (pc)
        (label_ref 57)) "fs/buffer.c":115:11 807 {jump}
     (nil)
 -> 57)
(barrier 97 96 62)
(code_label 62 97 21 6 18 (nil) [1 uses])
(note 21 62 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":116:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 6 (set (mem:HI (plus:SI (reg/f:SI 94)
                (const_int 8 [0x8])) [5 h_10->b_dev+0 S2 A32])
        (const_int 0 [0])) "fs/buffer.c":116:21 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 24 23 25 6 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":117:21 75 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (set (mem:QI (plus:SI (reg/f:SI 95)
                (const_int 11 [0xb])) [0 h_10->b_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":117:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 26 25 27 6 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":118:21 75 {*movsi_internal}
     (nil))
(insn 27 26 28 6 (set (mem:QI (plus:SI (reg/f:SI 96)
                (const_int 12 [0xc])) [0 h_10->b_count+0 S1 A32])
        (const_int 0 [0])) "fs/buffer.c":118:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 28 27 29 6 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":119:21 75 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (set (mem:QI (plus:SI (reg/f:SI 97)
                (const_int 13 [0xd])) [0 h_10->b_lock+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":119:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 30 29 31 6 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":120:23 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (mem:QI (plus:SI (reg/f:SI 98)
                (const_int 10 [0xa])) [0 h_10->b_uptodate+0 S1 A16])
        (const_int 0 [0])) "fs/buffer.c":120:23 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 32 31 33 6 (set (reg/f:SI 99)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":121:19 75 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (mem/f:SI (plus:SI (reg/f:SI 99)
                (const_int 16 [0x10])) [6 h_10->b_wait+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":121:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 34 33 35 6 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":122:19 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (mem/f:SI (plus:SI (reg/f:SI 100)
                (const_int 24 [0x18])) [1 h_10->b_next+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":122:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 36 35 37 6 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":123:19 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (mem/f:SI (plus:SI (reg/f:SI 101)
                (const_int 20 [0x14])) [1 h_10->b_prev+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":123:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 38 37 39 6 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":124:19 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])) "fs/buffer.c":124:19 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (set (mem/f:SI (reg/f:SI 102) [3 h_10->b_data+0 S4 A32])
        (reg/f:SI 103)) "fs/buffer.c":124:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (expr_list:REG_DEAD (reg/f:SI 102)
            (nil))))
(insn 41 40 42 6 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":125:28 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 104)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":125:28 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
                    (const_int -36 [0xffffffffffffffdc]))
                (nil)))))
(insn 43 42 44 6 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":125:24 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 28 [0x1c])) [1 h_10->b_prev_free+0 S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/buffer.c":125:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
            (nil))))
(insn 45 44 46 6 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":126:28 75 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 106)
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":126:28 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
                    (const_int 36 [0x24]))
                (nil)))))
(insn 47 46 48 6 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":126:24 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 32 [0x20])) [1 h_10->b_next_free+0 S4 A32])
        (reg/f:SI 84 [ _2 ])) "fs/buffer.c":126:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (nil))))
(insn 49 48 50 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":127:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 6 (set (reg:SI 85 [ nr_buffers.0_3 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":128:19 75 {*movsi_internal}
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:SI 86 [ _4 ])
                (plus:SI (reg:SI 85 [ nr_buffers.0_3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":128:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ nr_buffers.0_3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 6 (set (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])
        (reg:SI 86 [ _4 ])) "fs/buffer.c":128:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])
            (const_int 1048576 [0x100000]))) "fs/buffer.c":129:12 11 {*cmpsi_1}
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/buffer.c":129:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])
        (const_int 655360 [0xa0000])) "fs/buffer.c":130:15 75 {*movsi_internal}
     (nil))
(code_label 57 56 58 8 17 (nil) [2 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":115:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 8 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":115:45 75 {*movsi_internal}
     (nil))
(insn 61 60 63 8 (parallel [
            (set (reg/f:SI 87 [ _5 ])
                (plus:SI (reg/f:SI 108)
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":115:45 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
                    (const_int 36 [0x24]))
                (nil)))))
(insn 63 61 64 8 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 b+0 S4 A32])
            (reg/f:SI 87 [ _5 ]))) "fs/buffer.c":115:30 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (nil)))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "fs/buffer.c":115:30 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 62)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":132:6 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 67 66 68 9 (set (reg/f:SI 88 [ start_buffer.1_6 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":133:15 75 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])
        (reg/f:SI 88 [ start_buffer.1_6 ])) "fs/buffer.c":133:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ start_buffer.1_6 ])
        (nil)))
(insn 69 68 70 9 (set (reg/f:SI 89 [ free_list.2_7 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":134:14 75 {*movsi_internal}
     (nil))
(insn 70 69 71 9 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":134:28 75 {*movsi_internal}
     (nil))
(insn 71 70 72 9 (set (mem/f:SI (plus:SI (reg/f:SI 89 [ free_list.2_7 ])
                (const_int 28 [0x1c])) [1 free_list.2_7->b_prev_free+0 S4 A32])
        (reg/f:SI 109)) "fs/buffer.c":134:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (expr_list:REG_DEAD (reg/f:SI 89 [ free_list.2_7 ])
            (nil))))
(insn 72 71 73 9 (set (reg/f:SI 90 [ free_list.3_8 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":135:20 75 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])) "fs/buffer.c":135:20 75 {*movsi_internal}
     (nil))
(insn 74 73 75 9 (set (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 32 [0x20])) [1 h_22->b_next_free+0 S4 A32])
        (reg/f:SI 90 [ free_list.3_8 ])) "fs/buffer.c":135:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_DEAD (reg/f:SI 90 [ free_list.3_8 ])
            (nil))))
(insn 75 74 76 9 (set (reg/f:SI 91 [ free_list.4_9 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":137:20 75 {*movsi_internal}
     (nil))
(insn 76 75 77 9 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list_head") [flags 0x2]  <var_decl 0x752d7c11cab0 free_list_head>)
                        ] UNSPEC_GOTOFF))) [1 free_list_head+0 S4 A32])
        (reg/f:SI 91 [ free_list.4_9 ])) "fs/buffer.c":137:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ free_list.4_9 ])
        (nil)))
(insn 77 76 98 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":139:12 75 {*movsi_internal}
     (nil))
(jump_insn 98 77 99 9 (set (pc)
        (label_ref 84)) "fs/buffer.c":139:5 807 {jump}
     (nil)
 -> 84)
(barrier 99 98 86)
(code_label 86 99 80 10 20 (nil) [1 uses])
(note 80 86 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [7 i+0 S4 A32])) "fs/buffer.c":141:23 75 {*movsi_internal}
     (nil))
(insn 82 81 83 10 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 111)
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[i_13]+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":141:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 83 82 84 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":139:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 84 83 85 11 19 (nil) [1 uses])
(note 85 84 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 85 90 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [7 i+0 S4 A32])
            (const_int 306 [0x132]))) "fs/buffer.c":139:19 11 {*cmpsi_1}
     (nil))
(jump_insn 90 89 100 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "fs/buffer.c":139:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 86)
(note 100 90 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 91 13 (const_int 0 [0]) "fs/buffer.c":142:1 843 {nop}
     (nil))
(note 91 101 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 102 91 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 0 14 (const_int 0 [0]) "fs/buffer.c":142:1 843 {nop}
     (nil))

;; Function sync_dev (sync_dev, funcdef_no=9, decl_uid=1143, cgraph_uid=10, symbol_order=15)

scanning new insn with uid = 127.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 26 count 19 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 17 7 8 9 10 11 12 13 18 14 15 16
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14 18 11 12 13 10
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 17 4 5 6 3
;; 2 succs { 8 }
;; 3 succs { 17 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 17 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 15 }
;; 10 succs { 18 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 18 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 10 16 }
;; 16 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r93,l0) best Q_REGS, allocno Q_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a14 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:48000
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a5(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a15(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 111(l0): point = 0
   Insn 110(l0): point = 2
   Insn 106(l0): point = 4
   Insn 103(l0): point = 6
   Insn 65(l0): point = 9
   Insn 64(l0): point = 11
   Insn 63(l0): point = 13
   Insn 62(l0): point = 15
   Insn 61(l0): point = 17
   Insn 101(l0): point = 20
   Insn 100(l0): point = 22
   Insn 98(l0): point = 24
   Insn 95(l0): point = 27
   Insn 94(l0): point = 29
   Insn 126(l0): point = 32
   Insn 79(l0): point = 35
   Insn 78(l0): point = 37
   Insn 77(l0): point = 39
   Insn 76(l0): point = 41
   Insn 75(l0): point = 43
   Insn 74(l0): point = 45
   Insn 73(l0): point = 47
   Insn 72(l0): point = 49
   Insn 71(l0): point = 51
   Insn 84(l0): point = 54
   Insn 83(l0): point = 56
   Insn 82(l0): point = 58
   Insn 81(l0): point = 60
   Insn 122(l0): point = 63
   Insn 91(l0): point = 65
   Insn 90(l0): point = 67
   Insn 89(l0): point = 69
   Insn 88(l0): point = 71
   Insn 87(l0): point = 73
   Insn 86(l0): point = 75
   Insn 115(l0): point = 78
   Insn 57(l0): point = 80
   Insn 56(l0): point = 82
   Insn 55(l0): point = 84
   Insn 54(l0): point = 86
   Insn 53(l0): point = 88
   Insn 15(l0): point = 91
   Insn 14(l0): point = 93
   Insn 13(l0): point = 95
   Insn 12(l0): point = 97
   Insn 11(l0): point = 99
   Insn 51(l0): point = 102
   Insn 50(l0): point = 104
   Insn 48(l0): point = 106
   Insn 45(l0): point = 109
   Insn 44(l0): point = 111
   Insn 121(l0): point = 114
   Insn 29(l0): point = 117
   Insn 28(l0): point = 119
   Insn 27(l0): point = 121
   Insn 26(l0): point = 123
   Insn 25(l0): point = 125
   Insn 24(l0): point = 127
   Insn 23(l0): point = 129
   Insn 22(l0): point = 131
   Insn 21(l0): point = 133
   Insn 34(l0): point = 136
   Insn 33(l0): point = 138
   Insn 32(l0): point = 140
   Insn 31(l0): point = 142
   Insn 117(l0): point = 145
   Insn 41(l0): point = 147
   Insn 40(l0): point = 149
   Insn 39(l0): point = 151
   Insn 38(l0): point = 153
   Insn 37(l0): point = 155
   Insn 36(l0): point = 157
   Insn 113(l0): point = 160
   Insn 7(l0): point = 162
   Insn 6(l0): point = 164
   Insn 5(l0): point = 166
   Insn 127(l0): point = 168
 a0(r96): [3..4]
 a1(r95): [5..6]
 a2(r94): [23..24]
 a3(r82): [9..168]
 a4(r93): [57..58]
 a5(r104): [59..60]
 a6(r92): [38..39]
 a7(r91): [40..41]
 a8(r103): [42..43]
 a9(r90): [12..13]
 a10(r89): [14..15]
 a11(r102): [16..17]
 a12(r101): [83..84]
 a13(r88): [105..106]
 a14(r87): [139..140]
 a15(r100): [141..142]
 a16(r86): [120..121]
 a17(r85): [122..123]
 a18(r99): [124..125]
 a19(r84): [94..95]
 a20(r83): [96..97]
 a21(r98): [98..99]
 a22(r97): [165..166]
Compressing live ranges: from 171 to 44 - 25%
Ranges after the compression:
 a0(r96): [0..1]
 a1(r95): [2..3]
 a2(r94): [10..11]
 a3(r82): [4..43]
 a4(r93): [18..19]
 a5(r104): [20..21]
 a6(r92): [12..13]
 a7(r91): [14..15]
 a8(r103): [16..17]
 a9(r90): [4..5]
 a10(r89): [6..7]
 a11(r102): [8..9]
 a12(r101): [22..23]
 a13(r88): [30..31]
 a14(r87): [38..39]
 a15(r100): [40..41]
 a16(r86): [32..33]
 a17(r85): [34..35]
 a18(r99): [36..37]
 a19(r84): [24..25]
 a20(r83): [26..27]
 a21(r98): [28..29]
 a22(r97): [42..43]
  pref0:a0(r96)<-hr0@1500
  regions=1, blocks=19, points=44
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=23
Disposition:
    3:r82  l0     3   20:r83  l0     0   19:r84  l0     0   17:r85  l0     0
   16:r86  l0     0   14:r87  l0     0   13:r88  l0     0   10:r89  l0     0
    9:r90  l0     0    7:r91  l0     0    6:r92  l0     0    4:r93  l0     0
    2:r94  l0     0    1:r95  l0     0    0:r96  l0     0   22:r97  l0     0
   21:r98  l0     0   18:r99  l0     0   15:r100 l0     0   12:r101 l0     0
   11:r102 l0     0    8:r103 l0     0    5:r104 l0     0
+++Costs: overall 5000, reg 5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sync_dev

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,2u} r1={6d} r2={6d} r3={3d,3u} r6={1d,18u} r7={15d,45u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,21u} r17={26d,8u} r18={5d} r19={1d,42u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} 
;;    total ref usage 582{414d,168u,0e} in 77{72 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 127 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 127 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 127 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":149:8 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
        (reg/f:SI 97)) "fs/buffer.c":149:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 7 6 113 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":150:12 75 {*movsi_internal}
     (nil))
(jump_insn 113 7 114 2 (set (pc)
        (label_ref 46)) "fs/buffer.c":150:5 807 {jump}
     (nil)
 -> 46)
(barrier 114 113 49)
(code_label 49 114 10 3 25 (nil) [1 uses])
(note 10 49 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":151:15 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 98)
                (const_int 8 [0x8])) [5 bh_15->b_dev+0 S2 A32])) "fs/buffer.c":151:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 13 12 14 3 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/buffer.c":151:15 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 84 [ _2 ]))) "fs/buffer.c":151:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 15 14 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 120)
            (pc))) "fs/buffer.c":151:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 120)
(note 20 15 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":153:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 22 21 23 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":153:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":153:9 812 {*call}
     (nil)
    (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":153:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 25 24 26 4 (set (reg/f:SI 99)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":154:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 99)
                (const_int 8 [0x8])) [5 bh_15->b_dev+0 S2 A32])) "fs/buffer.c":154:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 27 26 28 4 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/buffer.c":154:15 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 86 [ _4 ]))) "fs/buffer.c":154:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/buffer.c":154:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":154:35 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:QI 87 [ _5 ])
        (mem:QI (plus:SI (reg/f:SI 100)
                (const_int 11 [0xb])) [0 bh_15->b_dirt+0 S1 A8])) "fs/buffer.c":154:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _5 ])
            (const_int 0 [0]))) "fs/buffer.c":154:30 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (nil)))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/buffer.c":154:30 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":155:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 37 36 38 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":155:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 38 37 39 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 1 [0x1])) "fs/buffer.c":155:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 39 38 40 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":155:13 75 {*movsi_internal}
     (nil))
(call_insn 40 39 41 6 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":155:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 41 40 117 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":155:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 117 41 118 6 (set (pc)
        (label_ref 42)) 807 {jump}
     (nil)
 -> 42)
(barrier 118 117 120)
(code_label 120 118 119 17 31 (nil) [1 uses])
(note 119 120 121 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 121 119 42 17 (const_int 0 [0]) "fs/buffer.c":152:13 843 {nop}
     (nil))
(code_label 42 121 43 7 24 (nil) [3 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":150:34 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 45 44 46 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":150:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 46 45 47 8 22 (nil) [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 50 8 (set (reg:SI 88 [ nr_buffers.5_6 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":150:19 75 {*movsi_internal}
     (nil))
(insn 50 48 51 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
            (reg:SI 88 [ nr_buffers.5_6 ]))) "fs/buffer.c":150:19 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ nr_buffers.5_6 ])
        (nil)))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "fs/buffer.c":150:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 49)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":157:5 75 {*movsi_internal}
     (nil))
(call_insn 54 53 55 9 (call (mem:QI (symbol_ref:SI ("sync_inodes") [flags 0x41]  <function_decl 0x752d7c0f2900 sync_inodes>) [0 sync_inodes S1 A8])
        (const_int 0 [0])) "fs/buffer.c":157:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 55 54 56 9 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":158:8 75 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
        (reg/f:SI 101)) "fs/buffer.c":158:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 57 56 115 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":159:12 75 {*movsi_internal}
     (nil))
(jump_insn 115 57 116 9 (set (pc)
        (label_ref 96)) "fs/buffer.c":159:5 807 {jump}
     (nil)
 -> 96)
(barrier 116 115 99)
(code_label 99 116 60 10 29 (nil) [1 uses])
(note 60 99 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 10 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":160:15 75 {*movsi_internal}
     (nil))
(insn 62 61 63 10 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 102)
                (const_int 8 [0x8])) [5 bh_16->b_dev+0 S2 A32])) "fs/buffer.c":160:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 63 62 64 10 (set (reg:SI 90 [ _8 ])
        (zero_extend:SI (reg:HI 89 [ _7 ]))) "fs/buffer.c":160:15 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (nil)))
(insn 64 63 65 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 90 [ _8 ]))) "fs/buffer.c":160:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(jump_insn 65 64 70 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 125)
            (pc))) "fs/buffer.c":160:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 125)
(note 70 65 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":162:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 72 71 73 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":162:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 73 72 74 11 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":162:9 812 {*call}
     (nil)
    (nil))
(insn 74 73 75 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":162:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 75 74 76 11 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":163:15 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 103)
                (const_int 8 [0x8])) [5 bh_16->b_dev+0 S2 A32])) "fs/buffer.c":163:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 77 76 78 11 (set (reg:SI 92 [ _10 ])
        (zero_extend:SI (reg:HI 91 [ _9 ]))) "fs/buffer.c":163:15 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (nil)))
(insn 78 77 79 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 92 [ _10 ]))) "fs/buffer.c":163:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "fs/buffer.c":163:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 92)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 12 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":163:35 75 {*movsi_internal}
     (nil))
(insn 82 81 83 12 (set (reg:QI 93 [ _11 ])
        (mem:QI (plus:SI (reg/f:SI 104)
                (const_int 11 [0xb])) [0 bh_16->b_dirt+0 S1 A8])) "fs/buffer.c":163:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 83 82 84 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ _11 ])
            (const_int 0 [0]))) "fs/buffer.c":163:30 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 93 [ _11 ])
        (nil)))
(jump_insn 84 83 85 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "fs/buffer.c":163:30 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 92)
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":164:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 87 86 88 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":164:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 88 87 89 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 1 [0x1])) "fs/buffer.c":164:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 89 88 90 13 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":164:13 75 {*movsi_internal}
     (nil))
(call_insn 90 89 91 13 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":164:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 91 90 122 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":164:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 122 91 123 13 (set (pc)
        (label_ref 92)) 807 {jump}
     (nil)
 -> 92)
(barrier 123 122 125)
(code_label 125 123 124 18 32 (nil) [1 uses])
(note 124 125 126 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 126 124 92 18 (const_int 0 [0]) "fs/buffer.c":161:13 843 {nop}
     (nil))
(code_label 92 126 93 14 28 (nil) [3 uses])
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":159:34 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 95 94 96 14 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":159:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 96 95 97 15 26 (nil) [1 uses])
(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 100 15 (set (reg:SI 94 [ nr_buffers.6_12 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":159:19 75 {*movsi_internal}
     (nil))
(insn 100 98 101 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
            (reg:SI 94 [ nr_buffers.6_12 ]))) "fs/buffer.c":159:19 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ nr_buffers.6_12 ])
        (nil)))
(jump_insn 101 100 102 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) "fs/buffer.c":159:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 99)
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 106 16 (set (reg:SI 95 [ _27 ])
        (const_int 0 [0])) "fs/buffer.c":166:12 75 {*movsi_internal}
     (nil))
(insn 106 103 110 16 (set (reg:SI 96 [ <retval> ])
        (reg:SI 95 [ _27 ])) "fs/buffer.c":166:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ _27 ])
        (nil)))
(insn 110 106 111 16 (set (reg/i:SI 0 ax)
        (reg:SI 96 [ <retval> ])) "fs/buffer.c":167:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ <retval> ])
        (nil)))
(insn 111 110 0 16 (use (reg/i:SI 0 ax)) "fs/buffer.c":167:1 -1
     (nil))

;; Function find_buffer (find_buffer, funcdef_no=10, decl_uid=1436, cgraph_uid=11, symbol_order=16)

scanning new insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 3 4
;; 2 succs { 7 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Removing SCRATCH to p102 in insn #9 (nop 3)
rescanning insn with uid = 9.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)

Pass 0 for finding pseudo/allocno costs

    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:21000
  a13(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a14(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:13000
  a15(r93,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a16(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a17(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a18(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 52(l0): point = 0
   Insn 51(l0): point = 2
   Insn 47(l0): point = 4
   Insn 44(l0): point = 7
   Insn 56(l0): point = 10
   Insn 30(l0): point = 12
   Insn 22(l0): point = 15
   Insn 21(l0): point = 17
   Insn 20(l0): point = 19
   Insn 19(l0): point = 21
   Insn 18(l0): point = 23
   Insn 42(l0): point = 26
   Insn 41(l0): point = 28
   Insn 37(l0): point = 31
   Insn 36(l0): point = 33
   Insn 35(l0): point = 35
   Insn 28(l0): point = 38
   Insn 27(l0): point = 40
   Insn 26(l0): point = 42
   Insn 25(l0): point = 44
   Insn 24(l0): point = 46
   Insn 54(l0): point = 49
   Insn 14(l0): point = 51
   Insn 13(l0): point = 53
   Insn 12(l0): point = 55
   Insn 11(l0): point = 58
   Insn 10(l0): point = 60
   Insn 9(l0): point = 62
   Insn 8(l0): point = 64
   Insn 7(l0): point = 66
   Insn 6(l0): point = 68
   Insn 5(l0): point = 70
   Insn 58(l0): point = 72
 a0(r91): [3..4]
 a1(r90): [10..12] [5..7]
 a2(r100): [32..33]
 a3(r99): [34..35]
 a4(r89): [41..42]
 a5(r88): [41..44]
 a6(r98): [45..46]
 a7(r87): [18..19]
 a8(r86): [20..21]
 a9(r97): [22..23]
 a10(r96): [52..53]
 a11(r82): [54..72]
 a12(r85): [59..60] [54..56]
 a13(r95): [56..58]
 a14(r84): [57..66]
 a15(r93): [61..62]
 a16(r94): [63..64]
 a17(r102): [62..62]
 a18(r83): [67..68]
 a19(r92): [69..70]
Compressing live ranges: from 75 to 36 - 48%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..5]
 a2(r100): [12..13]
 a3(r99): [14..15]
 a4(r89): [16..17]
 a5(r88): [16..17]
 a6(r98): [18..19]
 a7(r87): [6..7]
 a8(r86): [8..9]
 a9(r97): [10..11]
 a10(r96): [20..21]
 a11(r82): [22..35]
 a12(r85): [26..27] [22..23]
 a13(r95): [23..25]
 a14(r84): [24..31]
 a15(r93): [28..29]
 a16(r94): [30..31]
 a17(r102): [29..29]
 a18(r83): [32..33]
 a19(r92): [34..35]
  pref0:a15(r93)<-hr1@1000
  pref1:a0(r91)<-hr0@1500
  regions=1, blocks=10, points=36
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=21
Disposition:
   11:r82  l0     2   18:r83  l0     0   14:r84  l0     3   12:r85  l0     0
    8:r86  l0     0    7:r87  l0     0    5:r88  l0     1    4:r89  l0     0
    1:r90  l0     0    0:r91  l0     0   19:r92  l0     0   15:r93  l0     1
   16:r94  l0     1   13:r95  l0     1   10:r96  l0     0    9:r97  l0     0
    6:r98  l0     0    3:r99  l0     0    2:r100 l0     0   17:r102 l0     0
+++Costs: overall 7000, reg 7000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


find_buffer

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,9u} r7={1d,9u} r16={1d,12u,2e} r17={9d,3u} r19={1d,16u} r82={1d,1u} r83={1d,1u} r84={1d,2u,1e} r85={2d,2u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={2d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r102={1d} 
;;    total ref usage 114{39d,72u,3e} in 33{33 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 58 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 83 [ _1 ])
                (xor:SI (reg:SI 92)
                    (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [7 block+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 521 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:SI (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
                    (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [7 block+0 S4 A32]))
                (nil)))))
(insn 7 6 8 2 (set (reg:SI 84 [ _2 ])
        (reg:SI 83 [ _1 ])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 94)
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 93)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 84 [ _2 ]))
                            (zero_extend:DI (reg:SI 94)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 102))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 436 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_UNUSED (reg:SI 102)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 85 [ _3 ])
                (lshiftrt:SI (reg:SI 93)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 84 [ _2 ])
                    (const_int 307 [0x133]))
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 95)
                (mult:SI (reg:SI 85 [ _3 ])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 85 [ _3 ])
                (minus:SI (reg:SI 84 [ _2 ])
                    (reg:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (set (reg/f:SI 96)
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 85 [ _3 ])
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_3]+0 S4 A32])) "fs/buffer.c":173:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_DEAD (reg:SI 82)
            (nil))))
(insn 14 13 54 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
        (reg/f:SI 96)) "fs/buffer.c":173:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(jump_insn 54 14 55 2 (set (pc)
        (label_ref 38)) "fs/buffer.c":173:5 807 {jump}
     (nil)
 -> 38)
(barrier 55 54 40)
(code_label 40 55 17 3 37 (nil) [1 uses])
(note 17 40 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":174:16 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:HI 86 [ _4 ])
        (mem:HI (plus:SI (reg/f:SI 97)
                (const_int 8 [0x8])) [5 tmp_8->b_dev+0 S2 A32])) "fs/buffer.c":174:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 20 19 21 3 (set (reg:SI 87 [ _5 ])
        (zero_extend:SI (reg:HI 86 [ _4 ]))) "fs/buffer.c":174:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 86 [ _4 ])
        (nil)))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 87 [ _5 ]))) "fs/buffer.c":174:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/buffer.c":174:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":174:37 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:SI 88 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 98)
                (const_int 4 [0x4])) [4 tmp_8->b_blocknr+0 S4 A32])) "fs/buffer.c":174:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 26 25 27 4 (set (reg:SI 89 [ block.7_7 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 block+0 S4 A32])) "fs/buffer.c":174:49 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _6 ])
            (reg:SI 89 [ block.7_7 ]))) "fs/buffer.c":174:31 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ block.7_7 ])
        (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
            (nil))))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/buffer.c":174:31 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 56 5 (set (reg/f:SI 90 [ _9 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":175:20 75 {*movsi_internal}
     (nil))
(jump_insn 56 30 57 5 (set (pc)
        (label_ref 45)) "fs/buffer.c":175:20 807 {jump}
     (nil)
 -> 45)
(barrier 57 56 33)
(code_label 33 57 34 6 35 (nil) [2 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:SI 99)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":173:51 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 100)
        (mem/f:SI (plus:SI (reg/f:SI 99)
                (const_int 24 [0x18])) [1 tmp_8->b_next+0 S4 A32])) "fs/buffer.c":173:51 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 37 36 38 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
        (reg/f:SI 100)) "fs/buffer.c":173:51 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(code_label 38 37 39 7 34 (nil) [1 uses])
(note 39 38 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 39 42 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":173:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/buffer.c":173:38 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg/f:SI 90 [ _9 ])
        (const_int 0 [0])) "fs/buffer.c":176:12 75 {*movsi_internal}
     (nil))
(code_label 45 44 46 9 36 (nil) [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 51 9 (set (reg/f:SI 91 [ <retval> ])
        (reg/f:SI 90 [ _9 ])) "fs/buffer.c":177:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _9 ])
        (nil)))
(insn 51 47 52 9 (set (reg/i:SI 0 ax)
        (reg/f:SI 91 [ <retval> ])) "fs/buffer.c":177:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ <retval> ])
        (nil)))
(insn 52 51 0 9 (use (reg/i:SI 0 ax)) "fs/buffer.c":177:1 -1
     (nil))

;; Function get_hash_table (get_hash_table, funcdef_no=11, decl_uid=1160, cgraph_uid=12, symbol_order=17)

scanning new insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 5 6
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 9 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 3 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r89,l0) best Q_REGS, allocno Q_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a13 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a14 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a5(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a14(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a17(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 60(l0): point = 0
   Insn 59(l0): point = 2
   Insn 55(l0): point = 4
   Insn 64(l0): point = 7
   Insn 40(l0): point = 9
   Insn 62(l0): point = 12
   Insn 14(l0): point = 14
   Insn 12(l0): point = 17
   Insn 11(l0): point = 19
   Insn 10(l0): point = 21
   Insn 9(l0): point = 23
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 6(l0): point = 29
   Insn 5(l0): point = 31
   Insn 66(l0): point = 34
   Insn 49(l0): point = 36
   Insn 48(l0): point = 38
   Insn 47(l0): point = 40
   Insn 46(l0): point = 42
   Insn 45(l0): point = 44
   Insn 32(l0): point = 47
   Insn 31(l0): point = 49
   Insn 30(l0): point = 51
   Insn 29(l0): point = 53
   Insn 28(l0): point = 55
   Insn 27(l0): point = 57
   Insn 26(l0): point = 59
   Insn 25(l0): point = 61
   Insn 24(l0): point = 63
   Insn 23(l0): point = 65
   Insn 22(l0): point = 67
   Insn 21(l0): point = 69
   Insn 20(l0): point = 71
   Insn 19(l0): point = 73
   Insn 38(l0): point = 76
   Insn 37(l0): point = 78
   Insn 36(l0): point = 80
   Insn 35(l0): point = 82
   Insn 34(l0): point = 84
   Insn 68(l0): point = 87
 a0(r92): [3..4]
 a1(r91): [12..14] [5..9]
 a2(r99): [37..38]
 a3(r90): [37..40]
 a4(r89): [41..42]
 a5(r98): [43..44]
 a6(r88): [79..80]
 a7(r87): [79..82]
 a8(r97): [83..84]
 a9(r86): [50..51]
 a10(r85): [52..53]
 a11(r96): [54..55]
 a12(r95): [66..67]
 a13(r84): [66..69]
 a14(r83): [70..71]
 a15(r94): [72..73]
 a16(r93): [22..23]
 a17(r82): [87..87]
Compressing live ranges: from 90 to 31 - 34%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..5]
 a2(r99): [8..9]
 a3(r90): [8..9]
 a4(r89): [10..11]
 a5(r98): [12..13]
 a6(r88): [26..27]
 a7(r87): [26..27]
 a8(r97): [28..29]
 a9(r86): [14..15]
 a10(r85): [16..17]
 a11(r96): [18..19]
 a12(r95): [20..21]
 a13(r84): [20..21]
 a14(r83): [22..23]
 a15(r94): [24..25]
 a16(r93): [6..7]
 a17(r82): [30..30]
  pref0:a16(r93)<-hr0@1500
  pref1:a0(r92)<-hr0@1500
  regions=1, blocks=10, points=31
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
   17:r82  l0     0   14:r83  l0     0   13:r84  l0     1   10:r85  l0     0
    9:r86  l0     0    7:r87  l0     1    6:r88  l0     0    4:r89  l0     0
    3:r90  l0     1    1:r91  l0     0    0:r92  l0     0   16:r93  l0     0
   15:r94  l0     0   12:r95  l0     0   11:r96  l0     0    8:r97  l0     0
    5:r98  l0     0    2:r99  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_hash_table

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r6={1d,9u} r7={7d,20u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,12u} r17={11d,3u} r18={2d} r19={1d,19u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={2d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 263{180d,83u,0e} in 41{39 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 68 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 68 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 68 50 2 NOTE_INSN_FUNCTION_BEG)
(code_label 50 2 4 3 42 (nil) [1 uses])
(note 4 50 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 block+0 S4 A32])) "fs/buffer.c":191:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":191:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 7 6 8 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_buffer") [flags 0x3]  <function_decl 0x752d7c146900 find_buffer>) [0 find_buffer S1 A8])
            (const_int 8 [0x8]))) "fs/buffer.c":191:20 823 {*call_value}
     (nil)
    (nil))
(insn 8 7 9 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":191:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 9 8 10 3 (set (reg:SI 93)
        (reg:SI 0 ax)) "fs/buffer.c":191:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 10 9 11 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])
        (reg:SI 93)) "fs/buffer.c":191:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":191:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/buffer.c":191:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 17)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 62 4 (set (reg/f:SI 91 [ _11 ])
        (const_int 0 [0])) "fs/buffer.c":192:20 75 {*movsi_internal}
     (nil))
(jump_insn 62 14 63 4 (set (pc)
        (label_ref 53)) "fs/buffer.c":192:20 807 {jump}
     (nil)
 -> 53)
(barrier 63 62 17)
(code_label 17 63 18 5 39 (nil) [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":193:11 75 {*movsi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:QI 83 [ _1 ])
        (mem:QI (plus:SI (reg/f:SI 94)
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])) "fs/buffer.c":193:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 21 20 22 5 (parallel [
            (set (reg:QI 84 [ _3 ])
                (plus:QI (reg:QI 83 [ _1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":193:20 213 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 5 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":193:20 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (mem:QI (plus:SI (reg/f:SI 95)
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])
        (reg:QI 84 [ _3 ])) "fs/buffer.c":193:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg:QI 84 [ _3 ])
            (nil))))
(insn 24 23 25 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":194:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 25 24 26 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":194:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 25 27 5 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":194:9 812 {*call}
     (nil)
    (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":194:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 28 27 29 5 (set (reg/f:SI 96)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":195:15 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:HI 85 [ _4 ])
        (mem:HI (plus:SI (reg/f:SI 96)
                (const_int 8 [0x8])) [5 bh_18->b_dev+0 S2 A32])) "fs/buffer.c":195:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 30 29 31 5 (set (reg:SI 86 [ _5 ])
        (zero_extend:SI (reg:HI 85 [ _4 ]))) "fs/buffer.c":195:15 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _4 ])
        (nil)))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 86 [ _5 ]))) "fs/buffer.c":195:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/buffer.c":195:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":195:35 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SI 87 [ _6 ])
        (mem:SI (plus:SI (reg/f:SI 97)
                (const_int 4 [0x4])) [4 bh_18->b_blocknr+0 S4 A32])) "fs/buffer.c":195:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 36 35 37 6 (set (reg:SI 88 [ block.8_7 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 block+0 S4 A32])) "fs/buffer.c":195:47 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _6 ])
            (reg:SI 88 [ block.8_7 ]))) "fs/buffer.c":195:30 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ block.8_7 ])
        (expr_list:REG_DEAD (reg:SI 87 [ _6 ])
            (nil))))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/buffer.c":195:30 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 64 7 (set (reg/f:SI 91 [ _11 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":196:20 75 {*movsi_internal}
     (nil))
(jump_insn 64 40 65 7 (set (pc)
        (label_ref 53)) "fs/buffer.c":196:20 807 {jump}
     (nil)
 -> 53)
(barrier 65 64 43)
(code_label 43 65 44 8 41 (nil) [2 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":197:11 75 {*movsi_internal}
     (nil))
(insn 46 45 47 8 (set (reg:QI 89 [ _8 ])
        (mem:QI (plus:SI (reg/f:SI 98)
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])) "fs/buffer.c":197:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 47 46 48 8 (parallel [
            (set (reg:QI 90 [ _10 ])
                (plus:QI (reg:QI 89 [ _8 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":197:20 213 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 89 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 8 (set (reg/f:SI 99)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 bh+0 S4 A32])) "fs/buffer.c":197:20 75 {*movsi_internal}
     (nil))
(insn 49 48 66 8 (set (mem:QI (plus:SI (reg/f:SI 99)
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])
        (reg:QI 90 [ _10 ])) "fs/buffer.c":197:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (expr_list:REG_DEAD (reg:QI 90 [ _10 ])
            (nil))))
(jump_insn 66 49 67 8 (set (pc)
        (label_ref 50)) "fs/buffer.c":191:12 807 {jump}
     (nil)
 -> 50)
(barrier 67 66 53)
(code_label 53 67 54 9 40 (nil) [2 uses])
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 9 (set (reg/f:SI 92 [ <retval> ])
        (reg/f:SI 91 [ _11 ])) "fs/buffer.c":199:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _11 ])
        (nil)))
(insn 59 55 60 9 (set (reg/i:SI 0 ax)
        (reg/f:SI 92 [ <retval> ])) "fs/buffer.c":199:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ <retval> ])
        (nil)))
(insn 60 59 0 9 (use (reg/i:SI 0 ax)) "fs/buffer.c":199:1 -1
     (nil))

;; Function insert_into_queues (insert_into_queues, funcdef_no=12, decl_uid=1452, cgraph_uid=13, symbol_order=18)

scanning new insn with uid = 72.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 5 succs { 4 }
;; 4 succs { 1 }
Removing SCRATCH to p123 in insn #39 (nop 3)
rescanning insn with uid = 39.
Removing SCRATCH to p124 in insn #53 (nop 3)
rescanning insn with uid = 53.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)

Pass 0 for finding pseudo/allocno costs

    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r117,l0) best DREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r111,l0) best DREG, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:42000
  a4(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:21000
  a5(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:17000
  a8(r117,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a9(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a10(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a11(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:21000
  a19(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a20(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:17000
  a21(r111,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a22(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a23(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a24(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a25(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a26(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 71(l0): point = 1
   Insn 67(l0): point = 4
   Insn 62(l0): point = 6
   Insn 61(l0): point = 8
   Insn 60(l0): point = 10
   Insn 59(l0): point = 12
   Insn 58(l0): point = 14
   Insn 57(l0): point = 16
   Insn 56(l0): point = 18
   Insn 55(l0): point = 21
   Insn 54(l0): point = 23
   Insn 53(l0): point = 25
   Insn 52(l0): point = 27
   Insn 51(l0): point = 29
   Insn 50(l0): point = 31
   Insn 49(l0): point = 33
   Insn 48(l0): point = 35
   Insn 47(l0): point = 37
   Insn 46(l0): point = 39
   Insn 45(l0): point = 41
   Insn 44(l0): point = 43
   Insn 43(l0): point = 45
   Insn 42(l0): point = 47
   Insn 41(l0): point = 50
   Insn 40(l0): point = 52
   Insn 39(l0): point = 54
   Insn 38(l0): point = 56
   Insn 37(l0): point = 58
   Insn 36(l0): point = 60
   Insn 35(l0): point = 62
   Insn 34(l0): point = 64
   Insn 33(l0): point = 66
   Insn 32(l0): point = 68
   Insn 26(l0): point = 71
   Insn 25(l0): point = 73
   Insn 24(l0): point = 75
   Insn 23(l0): point = 77
   Insn 22(l0): point = 79
   Insn 21(l0): point = 81
   Insn 20(l0): point = 83
   Insn 19(l0): point = 85
   Insn 18(l0): point = 87
   Insn 17(l0): point = 89
   Insn 16(l0): point = 91
   Insn 15(l0): point = 93
   Insn 14(l0): point = 95
   Insn 13(l0): point = 97
   Insn 12(l0): point = 99
   Insn 11(l0): point = 101
   Insn 10(l0): point = 103
   Insn 9(l0): point = 105
   Insn 8(l0): point = 107
   Insn 7(l0): point = 109
   Insn 6(l0): point = 111
   Insn 5(l0): point = 113
   Insn 72(l0): point = 115
 a0(r101): [7..10]
 a1(r122): [7..8]
 a2(r121): [11..12]
 a3(r82): [15..115]
 a4(r100): [22..23] [15..19]
 a5(r120): [15..16]
 a6(r119): [19..21]
 a7(r99): [20..29]
 a8(r117): [24..25]
 a9(r118): [26..27]
 a10(r124): [25..25]
 a11(r98): [30..31]
 a12(r97): [30..35]
 a13(r116): [32..33]
 a14(r96): [36..37]
 a15(r115): [38..39]
 a16(r114): [42..43]
 a17(r95): [42..45]
 a18(r94): [51..52] [46..48]
 a19(r113): [48..50]
 a20(r93): [49..58]
 a21(r111): [53..54]
 a22(r112): [55..56]
 a23(r123): [54..54]
 a24(r92): [59..60]
 a25(r91): [59..64]
 a26(r110): [61..62]
 a27(r90): [65..66]
 a28(r109): [67..68]
 a29(r89): [74..75]
 a30(r108): [76..77]
 a31(r107): [80..81]
 a32(r106): [84..85]
 a33(r88): [88..91]
 a34(r105): [88..89]
 a35(r87): [94..97]
 a36(r104): [94..95]
 a37(r86): [98..99]
 a38(r103): [102..103]
 a39(r85): [102..105]
 a40(r84): [106..107]
 a41(r102): [110..111]
 a42(r83): [110..113]
Compressing live ranges: from 118 to 63 - 53%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r122): [0..1]
 a2(r121): [2..3]
 a3(r82): [4..62]
 a4(r100): [9..10] [4..6]
 a5(r120): [4..5]
 a6(r119): [6..8]
 a7(r99): [7..14]
 a8(r117): [11..12]
 a9(r118): [13..14]
 a10(r124): [12..12]
 a11(r98): [15..16]
 a12(r97): [15..18]
 a13(r116): [17..18]
 a14(r96): [19..20]
 a15(r115): [21..22]
 a16(r114): [23..24]
 a17(r95): [23..24]
 a18(r94): [29..30] [25..26]
 a19(r113): [26..28]
 a20(r93): [27..34]
 a21(r111): [31..32]
 a22(r112): [33..34]
 a23(r123): [32..32]
 a24(r92): [35..36]
 a25(r91): [35..38]
 a26(r110): [37..38]
 a27(r90): [39..40]
 a28(r109): [41..42]
 a29(r89): [43..44]
 a30(r108): [45..46]
 a31(r107): [47..48]
 a32(r106): [49..50]
 a33(r88): [51..52]
 a34(r105): [51..52]
 a35(r87): [53..54]
 a36(r104): [53..54]
 a37(r86): [55..56]
 a38(r103): [57..58]
 a39(r85): [57..58]
 a40(r84): [59..60]
 a41(r102): [61..62]
 a42(r83): [61..62]
  pref0:a8(r117)<-hr1@1000
  pref1:a21(r111)<-hr1@1000
  regions=1, blocks=6, points=63
    allocnos=43 (big 0), copies=0, conflicts=0, ranges=45
Disposition:
    3:r82  l0     2   42:r83  l0     1   40:r84  l0     0   39:r85  l0     1
   37:r86  l0     0   35:r87  l0     0   33:r88  l0     0   29:r89  l0     0
   27:r90  l0     0   25:r91  l0     1   24:r92  l0     0   20:r93  l0     3
   18:r94  l0     0   17:r95  l0     1   14:r96  l0     0   12:r97  l0     1
   11:r98  l0     0    7:r99  l0     3    4:r100 l0     0    0:r101 l0     0
   41:r102 l0     0   38:r103 l0     0   36:r104 l0     1   34:r105 l0     1
   32:r106 l0     0   31:r107 l0     0   30:r108 l0     0   28:r109 l0     0
   26:r110 l0     0   21:r111 l0     1   22:r112 l0     1   19:r113 l0     1
   16:r114 l0     0   15:r115 l0     0   13:r116 l0     0    8:r117 l0     1
    9:r118 l0     1    6:r119 l0     1    5:r120 l0     1    2:r121 l0     0
    1:r122 l0     1   23:r123 l0     0   10:r124 l0     0
+++Costs: overall 16000, reg 16000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


insert_into_queues

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,5u} r7={1d,5u} r16={1d,19u} r17={12d,1u} r19={1d,5u} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,2u,1e} r94={2d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,2u,1e} r100={2d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d} r124={1d} 
;;    total ref usage 151{64d,85u,2e} in 56{56 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 72 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 72 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 72 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 83 [ free_list.12_1 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":204:21 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 102)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":204:21 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f:SI (plus:SI (reg/f:SI 102)
                (const_int 32 [0x20])) [1 bh_22(D)->b_next_free+0 S4 A32])
        (reg/f:SI 83 [ free_list.12_1 ])) "fs/buffer.c":204:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_DEAD (reg/f:SI 83 [ free_list.12_1 ])
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 84 [ free_list.13_2 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":205:32 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 85 [ _3 ])
        (mem/f:SI (plus:SI (reg/f:SI 84 [ free_list.13_2 ])
                (const_int 28 [0x1c])) [1 free_list.13_2->b_prev_free+0 S4 A32])) "fs/buffer.c":205:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ free_list.13_2 ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":205:21 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f:SI (plus:SI (reg/f:SI 103)
                (const_int 28 [0x1c])) [1 bh_22(D)->b_prev_free+0 S4 A32])
        (reg/f:SI 85 [ _3 ])) "fs/buffer.c":205:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 86 [ free_list.14_4 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":206:14 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (plus:SI (reg/f:SI 86 [ free_list.14_4 ])
                (const_int 28 [0x1c])) [1 free_list.14_4->b_prev_free+0 S4 A32])) "fs/buffer.c":206:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ free_list.14_4 ])
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 104)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":206:41 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f:SI (plus:SI (reg/f:SI 87 [ _5 ])
                (const_int 32 [0x20])) [1 _5->b_next_free+0 S4 A32])
        (reg/f:SI 104)) "fs/buffer.c":206:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
            (nil))))
(insn 16 15 17 2 (set (reg/f:SI 88 [ free_list.15_6 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":207:14 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":207:28 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f:SI (plus:SI (reg/f:SI 88 [ free_list.15_6 ])
                (const_int 28 [0x1c])) [1 free_list.15_6->b_prev_free+0 S4 A32])
        (reg/f:SI 105)) "fs/buffer.c":207:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (expr_list:REG_DEAD (reg/f:SI 88 [ free_list.15_6 ])
            (nil))))
(insn 19 18 20 2 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":209:16 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 20 [0x14])) [1 bh_22(D)->b_prev+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":209:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 21 20 22 2 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":210:16 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 24 [0x18])) [1 bh_22(D)->b_next+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":210:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 23 22 24 2 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":211:12 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 108)
                (const_int 8 [0x8])) [5 bh_22(D)->b_dev+0 S2 A32])) "fs/buffer.c":211:12 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ _7 ])
            (const_int 0 [0]))) "fs/buffer.c":211:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (nil)))
(jump_insn 26 25 31 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 70)
            (pc))) "fs/buffer.c":211:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 70)
(note 31 26 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 3 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 109)
                (const_int 8 [0x8])) [5 bh_22(D)->b_dev+0 S2 A32])) "fs/buffer.c":213:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 34 33 35 3 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:HI 90 [ _8 ]))) "fs/buffer.c":213:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 35 34 36 3 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:SI 92 [ _10 ])
        (mem:SI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [4 bh_22(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 37 36 38 3 (parallel [
            (set (reg:SI 93 [ _11 ])
                (xor:SI (reg:SI 91 [ _9 ])
                    (reg:SI 92 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 521 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 3 (set (reg:SI 112)
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 39 38 40 3 (parallel [
            (set (reg:SI 111)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 93 [ _11 ]))
                            (zero_extend:DI (reg:SI 112)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 123))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 436 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:SI 123)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 40 39 41 3 (parallel [
            (set (reg:SI 94 [ _12 ])
                (lshiftrt:SI (reg:SI 111)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 93 [ _11 ])
                    (const_int 307 [0x133]))
                (nil)))))
(insn 41 40 42 3 (parallel [
            (set (reg:SI 113)
                (mult:SI (reg:SI 94 [ _12 ])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 3 (parallel [
            (set (reg:SI 94 [ _12 ])
                (minus:SI (reg:SI 93 [ _11 ])
                    (reg:SI 113)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 43 42 44 3 (set (reg/f:SI 95 [ _13 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 94 [ _12 ])
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_12]+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (nil)))
(insn 44 43 45 3 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":213:16 75 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 24 [0x18])) [1 bh_22(D)->b_next+0 S4 A32])
        (reg/f:SI 95 [ _13 ])) "fs/buffer.c":213:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
            (nil))))
(insn 46 45 47 3 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (reg:HI 96 [ _14 ])
        (mem:HI (plus:SI (reg/f:SI 115)
                (const_int 8 [0x8])) [5 bh_22(D)->b_dev+0 S2 A32])) "fs/buffer.c":214:5 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 48 47 49 3 (set (reg:SI 97 [ _15 ])
        (zero_extend:SI (reg:HI 96 [ _14 ]))) "fs/buffer.c":214:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 96 [ _14 ])
        (nil)))
(insn 49 48 50 3 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 50 49 51 3 (set (reg:SI 98 [ _16 ])
        (mem:SI (plus:SI (reg/f:SI 116)
                (const_int 4 [0x4])) [4 bh_22(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 51 50 52 3 (parallel [
            (set (reg:SI 99 [ _17 ])
                (xor:SI (reg:SI 97 [ _15 ])
                    (reg:SI 98 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 521 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 52 51 53 3 (set (reg:SI 118)
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 53 52 54 3 (parallel [
            (set (reg:SI 117)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 99 [ _17 ]))
                            (zero_extend:DI (reg:SI 118)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 124))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 436 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_UNUSED (reg:SI 124)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 54 53 55 3 (parallel [
            (set (reg:SI 100 [ _18 ])
                (lshiftrt:SI (reg:SI 117)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 99 [ _17 ])
                    (const_int 307 [0x133]))
                (nil)))))
(insn 55 54 56 3 (parallel [
            (set (reg:SI 119)
                (mult:SI (reg:SI 100 [ _18 ])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 3 (parallel [
            (set (reg:SI 100 [ _18 ])
                (minus:SI (reg:SI 99 [ _17 ])
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 57 56 58 3 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":214:36 75 {*movsi_internal}
     (nil))
(insn 58 57 59 3 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 100 [ _18 ])
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_18]+0 S4 A32])
        (reg/f:SI 120)) "fs/buffer.c":214:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
            (expr_list:REG_DEAD (reg:SI 82)
                (nil)))))
(insn 59 58 60 3 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":215:7 75 {*movsi_internal}
     (nil))
(insn 60 59 61 3 (set (reg/f:SI 101 [ _19 ])
        (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 24 [0x18])) [1 bh_22(D)->b_next+0 S4 A32])) "fs/buffer.c":215:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 61 60 62 3 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":215:24 75 {*movsi_internal}
     (nil))
(insn 62 61 67 3 (set (mem/f:SI (plus:SI (reg/f:SI 101 [ _19 ])
                (const_int 20 [0x14])) [1 _19->b_prev+0 S4 A32])
        (reg/f:SI 122)) "fs/buffer.c":215:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
            (nil))))
(jump_insn 67 62 68 3 (set (pc)
        (label_ref 65)) 807 {jump}
     (nil)
 -> 65)
(barrier 68 67 70)
(code_label 70 68 69 5 46 (nil) [1 uses])
(note 69 70 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 71 69 65 5 (const_int 0 [0]) "fs/buffer.c":212:9 843 {nop}
     (nil))
(code_label 65 71 66 4 43 (nil) [1 uses])
(note 66 65 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

;; Function remove_from_queues (remove_from_queues, funcdef_no=13, decl_uid=1455, cgraph_uid=14, symbol_order=19)

scanning new insn with uid = 105.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 20 count 15 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 14 13
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 14 }
;; 14 succs { 13 }
;; 13 succs { 1 }
Removing SCRATCH to p134 in insn #36 (nop 3)
rescanning insn with uid = 36.
Removing SCRATCH to p135 in insn #51 (nop 3)
rescanning insn with uid = 51.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 20 count 15 (    1)

Pass 0 for finding pseudo/allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r122,l0) best DREG, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r117,l0) best DREG, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:42000
  a1(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:21000
  a18(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a21(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:17000
  a22(r122,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a23(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a24(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a25(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a26(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a27(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a29(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:21000
  a32(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a33(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:17000
  a34(r117,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a35(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a36(r134,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a37(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a38(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a39(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 104(l0): point = 1
   Insn 95(l0): point = 4
   Insn 94(l0): point = 6
   Insn 93(l0): point = 8
   Insn 91(l0): point = 11
   Insn 90(l0): point = 13
   Insn 89(l0): point = 15
   Insn 88(l0): point = 17
   Insn 87(l0): point = 19
   Insn 86(l0): point = 21
   Insn 85(l0): point = 23
   Insn 84(l0): point = 25
   Insn 83(l0): point = 27
   Insn 82(l0): point = 29
   Insn 81(l0): point = 31
   Insn 80(l0): point = 33
   Insn 79(l0): point = 35
   Insn 76(l0): point = 38
   Insn 75(l0): point = 40
   Insn 74(l0): point = 42
   Insn 73(l0): point = 44
   Insn 72(l0): point = 46
   Insn 71(l0): point = 48
   Insn 68(l0): point = 51
   Insn 67(l0): point = 53
   Insn 66(l0): point = 55
   Insn 65(l0): point = 57
   Insn 63(l0): point = 60
   Insn 62(l0): point = 62
   Insn 61(l0): point = 64
   Insn 60(l0): point = 66
   Insn 57(l0): point = 69
   Insn 56(l0): point = 71
   Insn 55(l0): point = 73
   Insn 54(l0): point = 75
   Insn 53(l0): point = 78
   Insn 52(l0): point = 80
   Insn 51(l0): point = 82
   Insn 50(l0): point = 84
   Insn 49(l0): point = 86
   Insn 48(l0): point = 88
   Insn 47(l0): point = 90
   Insn 46(l0): point = 92
   Insn 45(l0): point = 94
   Insn 44(l0): point = 96
   Insn 42(l0): point = 99
   Insn 41(l0): point = 101
   Insn 40(l0): point = 103
   Insn 39(l0): point = 105
   Insn 38(l0): point = 108
   Insn 37(l0): point = 110
   Insn 36(l0): point = 112
   Insn 35(l0): point = 114
   Insn 34(l0): point = 116
   Insn 33(l0): point = 118
   Insn 32(l0): point = 120
   Insn 31(l0): point = 122
   Insn 30(l0): point = 124
   Insn 29(l0): point = 126
   Insn 26(l0): point = 129
   Insn 25(l0): point = 131
   Insn 24(l0): point = 133
   Insn 23(l0): point = 135
   Insn 22(l0): point = 137
   Insn 20(l0): point = 140
   Insn 19(l0): point = 142
   Insn 18(l0): point = 144
   Insn 17(l0): point = 146
   Insn 14(l0): point = 149
   Insn 13(l0): point = 151
   Insn 12(l0): point = 153
   Insn 11(l0): point = 155
   Insn 10(l0): point = 157
   Insn 8(l0): point = 160
   Insn 7(l0): point = 162
   Insn 6(l0): point = 164
   Insn 5(l0): point = 166
   Insn 105(l0): point = 168
 a0(r82): [5..168]
 a1(r108): [5..6]
 a2(r133): [7..8]
 a3(r107): [14..15]
 a4(r105): [18..23]
 a5(r106): [18..19]
 a6(r132): [20..21]
 a7(r131): [24..25]
 a8(r103): [28..33]
 a9(r104): [28..29]
 a10(r130): [30..31]
 a11(r129): [34..35]
 a12(r128): [45..46]
 a13(r102): [54..55]
 a14(r127): [56..57]
 a15(r101): [63..64]
 a16(r126): [65..66]
 a17(r99): [79..80] [70..76]
 a18(r100): [70..71]
 a19(r125): [72..73]
 a20(r124): [76..78]
 a21(r98): [77..86]
 a22(r122): [81..82]
 a23(r123): [83..84]
 a24(r135): [82..82]
 a25(r97): [87..88]
 a26(r96): [87..92]
 a27(r121): [89..90]
 a28(r95): [93..94]
 a29(r120): [95..96]
 a30(r94): [102..103]
 a31(r93): [109..110] [104..106]
 a32(r119): [106..108]
 a33(r92): [107..116]
 a34(r117): [111..112]
 a35(r118): [113..114]
 a36(r134): [112..112]
 a37(r91): [117..118]
 a38(r90): [117..122]
 a39(r116): [119..120]
 a40(r89): [123..124]
 a41(r115): [125..126]
 a42(r87): [130..135]
 a43(r88): [130..131]
 a44(r114): [132..133]
 a45(r113): [136..137]
 a46(r86): [143..144]
 a47(r112): [145..146]
 a48(r84): [150..155]
 a49(r85): [150..151]
 a50(r111): [152..153]
 a51(r110): [156..157]
 a52(r83): [163..164]
 a53(r109): [165..166]
Compressing live ranges: from 171 to 89 - 52%
Ranges after the compression:
 a0(r82): [0..88]
 a1(r108): [0..1]
 a2(r133): [2..3]
 a3(r107): [4..5]
 a4(r105): [6..9]
 a5(r106): [6..7]
 a6(r132): [8..9]
 a7(r131): [10..11]
 a8(r103): [12..15]
 a9(r104): [12..13]
 a10(r130): [14..15]
 a11(r129): [16..17]
 a12(r128): [18..19]
 a13(r102): [20..21]
 a14(r127): [22..23]
 a15(r101): [24..25]
 a16(r126): [26..27]
 a17(r99): [35..36] [28..32]
 a18(r100): [28..29]
 a19(r125): [30..31]
 a20(r124): [32..34]
 a21(r98): [33..40]
 a22(r122): [37..38]
 a23(r123): [39..40]
 a24(r135): [38..38]
 a25(r97): [41..42]
 a26(r96): [41..44]
 a27(r121): [43..44]
 a28(r95): [45..46]
 a29(r120): [47..48]
 a30(r94): [49..50]
 a31(r93): [55..56] [51..52]
 a32(r119): [52..54]
 a33(r92): [53..60]
 a34(r117): [57..58]
 a35(r118): [59..60]
 a36(r134): [58..58]
 a37(r91): [61..62]
 a38(r90): [61..64]
 a39(r116): [63..64]
 a40(r89): [65..66]
 a41(r115): [67..68]
 a42(r87): [69..72]
 a43(r88): [69..70]
 a44(r114): [71..72]
 a45(r113): [73..74]
 a46(r86): [75..76]
 a47(r112): [77..78]
 a48(r84): [79..82]
 a49(r85): [79..80]
 a50(r111): [81..82]
 a51(r110): [83..84]
 a52(r83): [85..86]
 a53(r109): [87..88]
  pref0:a22(r122)<-hr1@1000
  pref1:a34(r117)<-hr1@1000
  regions=1, blocks=15, points=89
    allocnos=54 (big 0), copies=0, conflicts=0, ranges=56
Disposition:
    0:r82  l0     3   52:r83  l0     0   48:r84  l0     0   49:r85  l0     1
   46:r86  l0     0   42:r87  l0     0   43:r88  l0     1   40:r89  l0     0
   38:r90  l0     1   37:r91  l0     0   33:r92  l0     2   31:r93  l0     0
   30:r94  l0     0   28:r95  l0     0   26:r96  l0     1   25:r97  l0     0
   21:r98  l0     2   17:r99  l0     0   18:r100 l0     1   15:r101 l0     0
   13:r102 l0     0    8:r103 l0     0    9:r104 l0     1    4:r105 l0     0
    5:r106 l0     1    3:r107 l0     0    1:r108 l0     0   53:r109 l0     0
   51:r110 l0     0   50:r111 l0     1   47:r112 l0     0   45:r113 l0     0
   44:r114 l0     1   41:r115 l0     0   39:r116 l0     0   34:r117 l0     1
   35:r118 l0     1   32:r119 l0     1   29:r120 l0     0   27:r121 l0     0
   22:r122 l0     1   23:r123 l0     1   20:r124 l0     1   19:r125 l0     1
   16:r126 l0     0   14:r127 l0     0   12:r128 l0     0   11:r129 l0     0
   10:r130 l0     1    7:r131 l0     0    6:r132 l0     1    2:r133 l0     0
   36:r134 l0     0   24:r135 l0     0
+++Costs: overall 18000, reg 18000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


remove_from_queues

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,14u} r7={4d,20u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,33u} r17={20d,6u} r18={1d} r19={1d,14u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,6u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,2u,1e} r93={2d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,2u,1e} r99={2d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d} r135={1d} 
;;    total ref usage 306{155d,149u,2e} in 78{77 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 105 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 105 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 105 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":221:11 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":221:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ _1 ])
            (const_int 0 [0]))) "fs/buffer.c":221:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "fs/buffer.c":221:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 15)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":222:11 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":222:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 12 11 13 3 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":222:32 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 85 [ _3 ])
        (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 20 [0x14])) [1 bh_33(D)->b_prev+0 S4 A32])) "fs/buffer.c":222:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 14 13 15 3 (set (mem/f:SI (plus:SI (reg/f:SI 84 [ _2 ])
                (const_int 20 [0x14])) [1 _2->b_prev+0 S4 A32])
        (reg/f:SI 85 [ _3 ])) "fs/buffer.c":222:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (nil))))
(code_label 15 14 16 4 48 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":223:11 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (plus:SI (reg/f:SI 112)
                (const_int 20 [0x14])) [1 bh_33(D)->b_prev+0 S4 A32])) "fs/buffer.c":223:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 86 [ _4 ])
            (const_int 0 [0]))) "fs/buffer.c":223:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/buffer.c":223:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":224:11 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 20 [0x14])) [1 bh_33(D)->b_prev+0 S4 A32])) "fs/buffer.c":224:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 24 23 25 5 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":224:32 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":224:32 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 26 25 27 5 (set (mem/f:SI (plus:SI (reg/f:SI 87 [ _5 ])
                (const_int 24 [0x18])) [1 _5->b_next+0 S4 A32])
        (reg/f:SI 88 [ _6 ])) "fs/buffer.c":224:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
            (nil))))
(code_label 27 26 28 6 49 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 115)
                (const_int 8 [0x8])) [5 bh_33(D)->b_dev+0 S2 A32])) "fs/buffer.c":225:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 31 30 32 6 (set (reg:SI 90 [ _8 ])
        (zero_extend:SI (reg:HI 89 [ _7 ]))) "fs/buffer.c":225:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (nil)))
(insn 32 31 33 6 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (reg:SI 91 [ _9 ])
        (mem:SI (plus:SI (reg/f:SI 116)
                (const_int 4 [0x4])) [4 bh_33(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 34 33 35 6 (parallel [
            (set (reg:SI 92 [ _10 ])
                (xor:SI (reg:SI 90 [ _8 ])
                    (reg:SI 91 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 521 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 35 34 36 6 (set (reg:SI 118)
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (parallel [
            (set (reg:SI 117)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 92 [ _10 ]))
                            (zero_extend:DI (reg:SI 118)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 134))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 436 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_UNUSED (reg:SI 134)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 6 (parallel [
            (set (reg:SI 93 [ _11 ])
                (lshiftrt:SI (reg:SI 117)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 92 [ _10 ])
                    (const_int 307 [0x133]))
                (nil)))))
(insn 38 37 39 6 (parallel [
            (set (reg:SI 119)
                (mult:SI (reg:SI 93 [ _11 ])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 6 (parallel [
            (set (reg:SI 93 [ _11 ])
                (minus:SI (reg:SI 92 [ _10 ])
                    (reg:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 40 39 41 6 (set (reg/f:SI 94 [ _12 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 93 [ _11 ])
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_11]+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(insn 41 40 42 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])
            (reg/f:SI 94 [ _12 ]))) "fs/buffer.c":225:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _12 ])
        (nil)))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/buffer.c":225:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 58)
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:HI 95 [ _13 ])
        (mem:HI (plus:SI (reg/f:SI 120)
                (const_int 8 [0x8])) [5 bh_33(D)->b_dev+0 S2 A32])) "fs/buffer.c":226:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 46 45 47 7 (set (reg:SI 96 [ _14 ])
        (zero_extend:SI (reg:HI 95 [ _13 ]))) "fs/buffer.c":226:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
        (nil)))
(insn 47 46 48 7 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:SI 97 [ _15 ])
        (mem:SI (plus:SI (reg/f:SI 121)
                (const_int 4 [0x4])) [4 bh_33(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 98 [ _16 ])
                (xor:SI (reg:SI 96 [ _14 ])
                    (reg:SI 97 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 521 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 50 49 51 7 (set (reg:SI 123)
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 51 50 52 7 (parallel [
            (set (reg:SI 122)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 98 [ _16 ]))
                            (zero_extend:DI (reg:SI 123)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 135))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 436 {*umulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 123)
        (expr_list:REG_UNUSED (reg:SI 135)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 52 51 53 7 (parallel [
            (set (reg:SI 99 [ _17 ])
                (lshiftrt:SI (reg:SI 122)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 98 [ _16 ])
                    (const_int 307 [0x133]))
                (nil)))))
(insn 53 52 54 7 (parallel [
            (set (reg:SI 124)
                (mult:SI (reg:SI 99 [ _17 ])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 7 (parallel [
            (set (reg:SI 99 [ _17 ])
                (minus:SI (reg:SI 98 [ _16 ])
                    (reg:SI 124)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 54 56 7 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":226:44 75 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (reg/f:SI 100 [ _18 ])
        (mem/f:SI (plus:SI (reg/f:SI 125)
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":226:44 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 57 56 58 7 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 99 [ _17 ])
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_17]+0 S4 A32])
        (reg/f:SI 100 [ _18 ])) "fs/buffer.c":226:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100 [ _18 ])
        (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
            (nil))))
(code_label 58 57 59 8 50 (nil) [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg/f:SI 126)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":228:13 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg/f:SI 101 [ _19 ])
        (mem/f:SI (plus:SI (reg/f:SI 126)
                (const_int 28 [0x1c])) [1 bh_33(D)->b_prev_free+0 S4 A32])) "fs/buffer.c":228:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 62 61 63 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 101 [ _19 ])
            (const_int 0 [0]))) "fs/buffer.c":228:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
        (nil)))
(jump_insn 63 62 64 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/buffer.c":228:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 69)
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg/f:SI 127)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":228:35 75 {*movsi_internal}
     (nil))
(insn 66 65 67 9 (set (reg/f:SI 102 [ _20 ])
        (mem/f:SI (plus:SI (reg/f:SI 127)
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":228:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 67 66 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 102 [ _20 ])
            (const_int 0 [0]))) "fs/buffer.c":228:28 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
        (nil)))
(jump_insn 68 67 69 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "fs/buffer.c":228:28 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
(code_label 69 68 70 10 51 (nil) [1 uses])
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":229:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 72 71 73 10 (set (reg/f:SI 128)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x752d7c1b4480 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":229:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x752d7c1b4480 *.LC2>)
        (nil)))
(insn 73 72 74 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 128)) "fs/buffer.c":229:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 74 73 75 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":229:9 75 {*movsi_internal}
     (nil))
(call_insn 75 74 76 10 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":229:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 76 75 77 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":229:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 77 76 78 11 52 (nil) [1 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg/f:SI 129)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":230:7 75 {*movsi_internal}
     (nil))
(insn 80 79 81 11 (set (reg/f:SI 103 [ _21 ])
        (mem/f:SI (plus:SI (reg/f:SI 129)
                (const_int 28 [0x1c])) [1 bh_33(D)->b_prev_free+0 S4 A32])) "fs/buffer.c":230:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 81 80 82 11 (set (reg/f:SI 130)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":230:38 75 {*movsi_internal}
     (nil))
(insn 82 81 83 11 (set (reg/f:SI 104 [ _22 ])
        (mem/f:SI (plus:SI (reg/f:SI 130)
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":230:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 83 82 84 11 (set (mem/f:SI (plus:SI (reg/f:SI 103 [ _21 ])
                (const_int 32 [0x20])) [1 _21->b_next_free+0 S4 A32])
        (reg/f:SI 104 [ _22 ])) "fs/buffer.c":230:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ _22 ])
        (expr_list:REG_DEAD (reg/f:SI 103 [ _21 ])
            (nil))))
(insn 84 83 85 11 (set (reg/f:SI 131)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":231:7 75 {*movsi_internal}
     (nil))
(insn 85 84 86 11 (set (reg/f:SI 105 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 131)
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":231:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 86 85 87 11 (set (reg/f:SI 132)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":231:38 75 {*movsi_internal}
     (nil))
(insn 87 86 88 11 (set (reg/f:SI 106 [ _24 ])
        (mem/f:SI (plus:SI (reg/f:SI 132)
                (const_int 28 [0x1c])) [1 bh_33(D)->b_prev_free+0 S4 A32])) "fs/buffer.c":231:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 88 87 89 11 (set (mem/f:SI (plus:SI (reg/f:SI 105 [ _23 ])
                (const_int 28 [0x1c])) [1 _23->b_prev_free+0 S4 A32])
        (reg/f:SI 106 [ _24 ])) "fs/buffer.c":231:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106 [ _24 ])
        (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
            (nil))))
(insn 89 88 90 11 (set (reg/f:SI 107 [ free_list.11_25 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":232:19 75 {*movsi_internal}
     (nil))
(insn 90 89 91 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])
            (reg/f:SI 107 [ free_list.11_25 ]))) "fs/buffer.c":232:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 107 [ free_list.11_25 ])
        (nil)))
(jump_insn 91 90 92 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 103)
            (pc))) "fs/buffer.c":232:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 103)
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg/f:SI 133)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])) "fs/buffer.c":233:23 75 {*movsi_internal}
     (nil))
(insn 94 93 95 12 (set (reg/f:SI 108 [ _26 ])
        (mem/f:SI (plus:SI (reg/f:SI 133)
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":233:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 95 94 103 12 (set (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])
        (reg/f:SI 108 [ _26 ])) "fs/buffer.c":233:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108 [ _26 ])
        (expr_list:REG_DEAD (reg:SI 82)
            (nil))))
(code_label 103 95 102 14 54 (nil) [1 uses])
(note 102 103 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 102 98 14 (const_int 0 [0]) "fs/buffer.c":234:1 843 {nop}
     (nil))
(code_label 98 104 99 13 47 (nil) [0 uses])
(note 99 98 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

;; Function getblk (getblk, funcdef_no=14, decl_uid=1163, cgraph_uid=15, symbol_order=20)

scanning new insn with uid = 205.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 27 n_edges 37 count 40 (  1.5)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 23 24 10 25 26 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 3, multiple latches: 17 12 14 20
;;  depth 1, outer 0
;;  nodes: 3 17 12 14 20 19 18 16 15 13 11 26 25 10 24 8 23 9 7 6 5
;;
;; Loop 3
;;  header 18, latch 16
;;  depth 2, outer 1
;;  nodes: 18 16
;;
;; Loop 2
;;  header 6, latch 10
;;  depth 2, outer 1
;;  nodes: 6 10 24 8 23 9 7
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 6 }
;; 6 succs { 24 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 10 }
;; 9 succs { 26 23 }
;; 23 succs { 10 }
;; 24 succs { 10 }
;; 10 succs { 6 25 }
;; 25 succs { 11 }
;; 26 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 3 }
;; 13 succs { 14 15 }
;; 14 succs { 3 }
;; 15 succs { 18 }
;; 16 succs { 17 18 }
;; 17 succs { 3 }
;; 18 succs { 16 19 }
;; 19 succs { 20 21 }
;; 20 succs { 3 }
;; 21 succs { 22 }
;; 22 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r108,l0) best AREG, allocno GENERAL_REGS
    r107: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a12 (r107,l0) best Q_REGS, allocno Q_REGS
    r106: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a14 (r106,l0) best Q_REGS, allocno Q_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a19 (r103,l0) best Q_REGS, allocno Q_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a28 (r99,l0) best Q_REGS, allocno Q_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a31 (r96,l0) best Q_REGS, allocno Q_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a38 (r93,l0) best Q_REGS, allocno Q_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a41 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a45 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a48 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a50 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a2(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:30000
  a11(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a12(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a13(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a15(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a20(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a27(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a28(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a29(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a32(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a35(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a36(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a37(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a38(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a39(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a42(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a44(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a45(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a46(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a48(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a49(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a51(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 179(l0): point = 0
   Insn 178(l0): point = 2
   Insn 174(l0): point = 4
   Insn 171(l0): point = 7
   Insn 170(l0): point = 9
   Insn 169(l0): point = 11
   Insn 168(l0): point = 13
   Insn 167(l0): point = 15
   Insn 166(l0): point = 17
   Insn 165(l0): point = 19
   Insn 164(l0): point = 21
   Insn 163(l0): point = 23
   Insn 162(l0): point = 25
   Insn 161(l0): point = 27
   Insn 160(l0): point = 29
   Insn 159(l0): point = 31
   Insn 158(l0): point = 33
   Insn 157(l0): point = 35
   Insn 156(l0): point = 37
   Insn 155(l0): point = 39
   Insn 154(l0): point = 41
   Insn 153(l0): point = 43
   Insn 152(l0): point = 45
   Insn 151(l0): point = 47
   Insn 150(l0): point = 49
   Insn 181(l0): point = 52
   Insn 16(l0): point = 54
   Insn 14(l0): point = 57
   Insn 13(l0): point = 59
   Insn 12(l0): point = 61
   Insn 11(l0): point = 63
   Insn 10(l0): point = 65
   Insn 9(l0): point = 67
   Insn 8(l0): point = 69
   Insn 7(l0): point = 71
   Insn 6(l0): point = 73
   Insn 189(l0): point = 76
   Insn 183(l0): point = 79
   Insn 90(l0): point = 81
   Insn 89(l0): point = 83
   Insn 88(l0): point = 85
   Insn 87(l0): point = 87
   Insn 86(l0): point = 89
   Insn 85(l0): point = 91
   Insn 185(l0): point = 94
   Insn 191(l0): point = 97
   Insn 144(l0): point = 100
   Insn 143(l0): point = 102
   Insn 142(l0): point = 104
   Insn 141(l0): point = 106
   Insn 140(l0): point = 108
   Insn 139(l0): point = 110
   Insn 138(l0): point = 112
   Insn 137(l0): point = 114
   Insn 135(l0): point = 117
   Insn 134(l0): point = 119
   Insn 132(l0): point = 121
   Insn 131(l0): point = 123
   Insn 125(l0): point = 126
   Insn 124(l0): point = 128
   Insn 123(l0): point = 130
   Insn 122(l0): point = 132
   Insn 121(l0): point = 134
   Insn 120(l0): point = 136
   Insn 119(l0): point = 138
   Insn 118(l0): point = 140
   Insn 117(l0): point = 142
   Insn 116(l0): point = 144
   Insn 115(l0): point = 146
   Insn 114(l0): point = 148
   Insn 113(l0): point = 150
   Insn 112(l0): point = 152
   Insn 111(l0): point = 154
   Insn 187(l0): point = 157
   Insn 102(l0): point = 160
   Insn 101(l0): point = 162
   Insn 100(l0): point = 164
   Insn 99(l0): point = 166
   Insn 98(l0): point = 168
   Insn 97(l0): point = 170
   Insn 96(l0): point = 172
   Insn 95(l0): point = 174
   Insn 83(l0): point = 177
   Insn 82(l0): point = 179
   Insn 204(l0): point = 182
   Insn 200(l0): point = 185
   Insn 79(l0): point = 188
   Insn 78(l0): point = 190
   Insn 76(l0): point = 192
   Insn 75(l0): point = 194
   Insn 74(l0): point = 196
   Insn 73(l0): point = 198
   Insn 198(l0): point = 201
   Insn 53(l0): point = 204
   Insn 52(l0): point = 206
   Insn 51(l0): point = 208
   Insn 50(l0): point = 210
   Insn 49(l0): point = 212
   Insn 48(l0): point = 214
   Insn 47(l0): point = 216
   Insn 46(l0): point = 218
   Insn 45(l0): point = 220
   Insn 44(l0): point = 222
   Insn 43(l0): point = 224
   Insn 42(l0): point = 226
   Insn 41(l0): point = 228
   Insn 40(l0): point = 230
   Insn 39(l0): point = 232
   Insn 38(l0): point = 234
   Insn 37(l0): point = 236
   Insn 36(l0): point = 238
   Insn 194(l0): point = 241
   Insn 67(l0): point = 244
   Insn 66(l0): point = 246
   Insn 65(l0): point = 248
   Insn 64(l0): point = 250
   Insn 63(l0): point = 252
   Insn 62(l0): point = 254
   Insn 61(l0): point = 256
   Insn 60(l0): point = 258
   Insn 59(l0): point = 260
   Insn 58(l0): point = 262
   Insn 57(l0): point = 264
   Insn 56(l0): point = 266
   Insn 34(l0): point = 269
   Insn 33(l0): point = 271
   Insn 27(l0): point = 274
   Insn 26(l0): point = 276
   Insn 25(l0): point = 278
   Insn 24(l0): point = 280
   Insn 22(l0): point = 283
   Insn 21(l0): point = 285
   Insn 205(l0): point = 288
 a0(r112): [3..4]
 a1(r111): [52..54] [5..7]
 a2(r135): [18..19]
 a3(r110): [18..21]
 a4(r134): [24..25]
 a5(r109): [24..27]
 a6(r133): [28..29]
 a7(r132): [40..41]
 a8(r131): [44..45]
 a9(r130): [48..49]
 a10(r82): [57..288]
 a11(r108): [103..104]
 a12(r107): [120..121]
 a13(r129): [122..123]
 a14(r106): [129..130]
 a15(r128): [131..132]
 a16(r105): [147..150]
 a17(r104): [151..152]
 a18(r127): [153..154]
 a19(r103): [163..164]
 a20(r126): [165..166]
 a21(r125): [88..89]
 a22(r102): [191..192]
 a23(r124): [195..196]
 a24(r123): [197..198]
 a25(r101): [247..248]
 a26(r100): [249..250]
 a27(r98): [249..256]
 a28(r99): [251..252]
 a29(r122): [253..254]
 a30(r97): [257..258]
 a31(r96): [259..260]
 a32(r121): [261..262]
 a33(r120): [265..266]
 a34(r95): [207..208]
 a35(r89): [207..224]
 a36(r94): [209..210]
 a37(r92): [209..216]
 a38(r93): [211..212]
 a39(r119): [213..214]
 a40(r91): [217..218]
 a41(r90): [219..220]
 a42(r118): [221..222]
 a43(r88): [225..226]
 a44(r86): [225..232]
 a45(r87): [227..228]
 a46(r117): [229..230]
 a47(r85): [233..234]
 a48(r84): [235..236]
 a49(r116): [237..238]
 a50(r83): [277..278]
 a51(r115): [279..280]
 a52(r114): [284..285]
 a53(r113): [62..63]
Compressing live ranges: from 291 to 96 - 32%
Ranges after the compression:
 a0(r112): [0..1]
 a1(r111): [16..17] [2..3]
 a2(r135): [4..5]
 a3(r110): [4..5]
 a4(r134): [6..7]
 a5(r109): [6..7]
 a6(r133): [8..9]
 a7(r132): [10..11]
 a8(r131): [12..13]
 a9(r130): [14..15]
 a10(r82): [18..95]
 a11(r108): [22..23]
 a12(r107): [24..25]
 a13(r129): [26..27]
 a14(r106): [28..29]
 a15(r128): [30..31]
 a16(r105): [32..33]
 a17(r104): [34..35]
 a18(r127): [36..37]
 a19(r103): [38..39]
 a20(r126): [40..41]
 a21(r125): [20..21]
 a22(r102): [42..43]
 a23(r124): [44..45]
 a24(r123): [46..47]
 a25(r101): [74..75]
 a26(r100): [76..77]
 a27(r98): [76..81]
 a28(r99): [78..79]
 a29(r122): [80..81]
 a30(r97): [82..83]
 a31(r96): [84..85]
 a32(r121): [86..87]
 a33(r120): [88..89]
 a34(r95): [48..49]
 a35(r89): [48..61]
 a36(r94): [50..51]
 a37(r92): [50..55]
 a38(r93): [52..53]
 a39(r119): [54..55]
 a40(r91): [56..57]
 a41(r90): [58..59]
 a42(r118): [60..61]
 a43(r88): [62..63]
 a44(r86): [62..67]
 a45(r87): [64..65]
 a46(r117): [66..67]
 a47(r85): [68..69]
 a48(r84): [70..71]
 a49(r116): [72..73]
 a50(r83): [90..91]
 a51(r115): [92..93]
 a52(r114): [94..95]
 a53(r113): [18..19]
  pref0:a53(r113)<-hr0@1500
  pref1:a0(r112)<-hr0@1500
  pref2:a11(r108)<-hr0@1500
  regions=1, blocks=27, points=96
    allocnos=54 (big 0), copies=0, conflicts=0, ranges=55
Disposition:
   10:r82  l0     3   50:r83  l0     0   48:r84  l0     0   47:r85  l0     0
   44:r86  l0     1   45:r87  l0     0   43:r88  l0     0   35:r89  l0     1
   41:r90  l0     0   40:r91  l0     0   37:r92  l0     2   38:r93  l0     0
   36:r94  l0     0   34:r95  l0     0   31:r96  l0     0   30:r97  l0     0
   27:r98  l0     1   28:r99  l0     0   26:r100 l0     0   25:r101 l0     0
   22:r102 l0     0   19:r103 l0     0   17:r104 l0     0   16:r105 l0     0
   14:r106 l0     0   12:r107 l0     0   11:r108 l0     0    5:r109 l0     1
    3:r110 l0     1    1:r111 l0     0    0:r112 l0     0   53:r113 l0     0
   52:r114 l0     0   51:r115 l0     0   49:r116 l0     0   46:r117 l0     0
   42:r118 l0     0   39:r119 l0     0   33:r120 l0     0   32:r121 l0     0
   29:r122 l0     0   24:r123 l0     0   23:r124 l0     0   21:r125 l0     0
   20:r126 l0     0   18:r127 l0     0   15:r128 l0     0   13:r129 l0     0
    9:r130 l0     0    8:r131 l0     0    7:r132 l0     0    6:r133 l0     0
    4:r134 l0     0    2:r135 l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


getblk

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,4u} r1={9d} r2={9d} r3={1d,1u} r6={1d,26u} r7={27d,76u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,31u} r17={42d,11u} r18={8d} r19={1d,58u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,4u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={2d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 940{676d,264u,0e} in 133{125 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 205 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 205 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 205 4 2 NOTE_INSN_FUNCTION_BEG)
(code_label 4 2 5 3 56 ("repeat") [4 uses])
(note 5 4 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 5 7 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":249:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 7 6 8 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 block+0 S4 A32])) "fs/buffer.c":249:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":249:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_hash_table") [flags 0x3]  <function_decl 0x752d7c0f2400 get_hash_table>) [0 get_hash_table S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":249:15 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":249:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 12 3 (set (reg:SI 113)
        (reg:SI 0 ax)) "fs/buffer.c":249:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 13 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
        (reg:SI 113)) "fs/buffer.c":249:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":249:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "fs/buffer.c":249:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 181 4 (set (reg/f:SI 111 [ _33 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":250:16 75 {*movsi_internal}
     (nil))
(jump_insn 181 16 182 4 (set (pc)
        (label_ref 172)) "fs/buffer.c":250:16 807 {jump}
     (nil)
 -> 172)
(barrier 182 181 19)
(code_label 19 182 20 5 57 (nil) [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":251:9 75 {*movsi_internal}
     (nil))
(insn 22 21 77 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
        (reg/f:SI 114)) "fs/buffer.c":251:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(code_label 77 22 23 6 63 (nil) [1 uses])
(note 23 77 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":253:16 75 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (set (reg:QI 83 [ _1 ])
        (mem:QI (plus:SI (reg/f:SI 115)
                (const_int 12 [0xc])) [0 tmp_29->b_count+0 S1 A32])) "fs/buffer.c":253:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _1 ])
            (const_int 0 [0]))) "fs/buffer.c":253:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (nil)))
(jump_insn 27 26 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 197)
            (pc))) "fs/buffer.c":253:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 197)
(note 32 27 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":255:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 34 33 35 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "fs/buffer.c":255:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 8 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":255:20 75 {*movsi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 116)
                (const_int 11 [0xb])) [0 tmp_29->b_dirt+0 S1 A8])) "fs/buffer.c":255:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 38 37 39 8 (set (reg:SI 85 [ _3 ])
        (zero_extend:SI (reg:QI 84 [ _2 ]))) "fs/buffer.c":255:20 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(insn 39 38 40 8 (parallel [
            (set (reg:SI 86 [ _4 ])
                (ashift:SI (reg:SI 85 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:20 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 8 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":255:20 75 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg:QI 87 [ _5 ])
        (mem:QI (plus:SI (reg/f:SI 117)
                (const_int 13 [0xd])) [0 tmp_29->b_lock+0 S1 A8])) "fs/buffer.c":255:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 42 41 43 8 (set (reg:SI 88 [ _6 ])
        (zero_extend:SI (reg:QI 87 [ _5 ]))) "fs/buffer.c":255:20 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (nil)))
(insn 43 42 44 8 (parallel [
            (set (reg:SI 89 [ _7 ])
                (plus:SI (reg:SI 86 [ _4 ])
                    (reg:SI 88 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 44 43 45 8 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":255:35 75 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:QI 90 [ _8 ])
        (mem:QI (plus:SI (reg/f:SI 118)
                (const_int 11 [0xb])) [0 bh_30->b_dirt+0 S1 A8])) "fs/buffer.c":255:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 46 45 47 8 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:QI 90 [ _8 ]))) "fs/buffer.c":255:35 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 90 [ _8 ])
        (nil)))
(insn 47 46 48 8 (parallel [
            (set (reg:SI 92 [ _10 ])
                (ashift:SI (reg:SI 91 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:35 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 8 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":255:35 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:QI 93 [ _11 ])
        (mem:QI (plus:SI (reg/f:SI 119)
                (const_int 13 [0xd])) [0 bh_30->b_lock+0 S1 A8])) "fs/buffer.c":255:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 50 49 51 8 (set (reg:SI 94 [ _12 ])
        (zero_extend:SI (reg:QI 93 [ _11 ]))) "fs/buffer.c":255:35 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 93 [ _11 ])
        (nil)))
(insn 51 50 52 8 (parallel [
            (set (reg:SI 95 [ _13 ])
                (plus:SI (reg:SI 92 [ _10 ])
                    (reg:SI 94 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 52 51 53 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _7 ])
            (reg:SI 95 [ _13 ]))) "fs/buffer.c":255:17 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
            (nil))))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "fs/buffer.c":255:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 71)
(code_label 54 53 55 9 61 (nil) [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":256:16 75 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
        (reg/f:SI 120)) "fs/buffer.c":256:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 58 57 59 9 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":257:18 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:QI 96 [ _14 ])
        (mem:QI (plus:SI (reg/f:SI 121)
                (const_int 11 [0xb])) [0 tmp_29->b_dirt+0 S1 A8])) "fs/buffer.c":257:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 60 59 61 9 (set (reg:SI 97 [ _15 ])
        (zero_extend:SI (reg:QI 96 [ _14 ]))) "fs/buffer.c":257:18 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 96 [ _14 ])
        (nil)))
(insn 61 60 62 9 (parallel [
            (set (reg:SI 98 [ _16 ])
                (ashift:SI (reg:SI 97 [ _15 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":257:18 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 9 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":257:18 75 {*movsi_internal}
     (nil))
(insn 63 62 64 9 (set (reg:QI 99 [ _17 ])
        (mem:QI (plus:SI (reg/f:SI 122)
                (const_int 13 [0xd])) [0 tmp_29->b_lock+0 S1 A8])) "fs/buffer.c":257:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 64 63 65 9 (set (reg:SI 100 [ _18 ])
        (zero_extend:SI (reg:QI 99 [ _17 ]))) "fs/buffer.c":257:18 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 99 [ _17 ])
        (nil)))
(insn 65 64 66 9 (parallel [
            (set (reg:SI 101 [ _19 ])
                (plus:SI (reg:SI 98 [ _16 ])
                    (reg:SI 100 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":257:18 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 66 65 67 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _19 ])
            (const_int 0 [0]))) "fs/buffer.c":257:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (nil)))
(jump_insn 67 66 193 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 203)
            (pc))) "fs/buffer.c":257:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 203)
(note 193 67 194 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 194 193 195 23 (set (pc)
        (label_ref 71)) 807 {jump}
     (nil)
 -> 71)
(barrier 195 194 197)
(code_label 197 195 196 24 69 (nil) [1 uses])
(note 196 197 198 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 198 196 71 24 (const_int 0 [0]) "fs/buffer.c":254:13 843 {nop}
     (nil))
(code_label 71 198 72 10 60 (nil) [2 uses])
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 10 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])) "fs/buffer.c":261:19 75 {*movsi_internal}
     (nil))
(insn 74 73 75 10 (set (reg/f:SI 124)
        (mem/f:SI (plus:SI (reg/f:SI 123)
                (const_int 32 [0x20])) [1 tmp_29->b_next_free+0 S4 A32])) "fs/buffer.c":261:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 75 74 76 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
        (reg/f:SI 124)) "fs/buffer.c":261:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 76 75 78 10 (set (reg/f:SI 102 [ free_list.9_20 ])
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":261:39 75 {*movsi_internal}
     (nil))
(insn 78 76 79 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 tmp+0 S4 A32])
            (reg/f:SI 102 [ free_list.9_20 ]))) "fs/buffer.c":261:39 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 102 [ free_list.9_20 ])
        (nil)))
(jump_insn 79 78 199 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "fs/buffer.c":261:39 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
(note 199 79 200 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 200 199 201 25 (set (pc)
        (label_ref 80)) 807 {jump}
     (nil)
 -> 80)
(barrier 201 200 203)
(code_label 203 201 202 26 70 (nil) [1 uses])
(note 202 203 204 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 204 202 80 26 (const_int 0 [0]) "fs/buffer.c":258:17 843 {nop}
     (nil))
(code_label 80 204 81 11 62 (nil) [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":262:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "fs/buffer.c":262:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 93)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":263:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 86 85 87 12 (set (reg/f:SI 125)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":263:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
        (nil)))
(insn 87 86 88 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 125)) "fs/buffer.c":263:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 88 87 89 12 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":263:9 75 {*movsi_internal}
     (nil))
(call_insn 89 88 90 12 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x752d7c117e00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":263:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 90 89 183 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":263:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 183 90 184 12 (set (pc)
        (label_ref 4)) "fs/buffer.c":264:9 807 {jump}
     (nil)
 -> 4)
(barrier 184 183 93)
(code_label 93 184 94 13 64 (nil) [1 uses])
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":266:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 96 95 97 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":266:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 97 96 98 13 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":266:5 812 {*call}
     (nil)
    (nil))
(insn 98 97 99 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":266:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 99 98 100 13 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":267:11 75 {*movsi_internal}
     (nil))
(insn 100 99 101 13 (set (reg:QI 103 [ _21 ])
        (mem:QI (plus:SI (reg/f:SI 126)
                (const_int 12 [0xc])) [0 bh_32->b_count+0 S1 A32])) "fs/buffer.c":267:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 101 100 102 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ _21 ])
            (const_int 0 [0]))) "fs/buffer.c":267:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 103 [ _21 ])
        (nil)))
(jump_insn 102 101 103 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/buffer.c":267:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 106)
(note 103 102 185 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 185 103 186 14 (set (pc)
        (label_ref 4)) "fs/buffer.c":268:9 807 {jump}
     (nil)
 -> 4)
(barrier 186 185 106)
(code_label 106 186 107 15 65 (nil) [1 uses])
(note 107 106 187 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 187 107 188 15 (set (pc)
        (label_ref 129)) "fs/buffer.c":269:11 807 {jump}
     (nil)
 -> 129)
(barrier 188 187 133)
(code_label 133 188 110 16 67 (nil) [1 uses])
(note 110 133 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 16 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":270:20 75 {*movsi_internal}
     (nil))
(insn 112 111 113 16 (set (reg:HI 104 [ _22 ])
        (mem:HI (plus:SI (reg/f:SI 127)
                (const_int 8 [0x8])) [5 bh_32->b_dev+0 S2 A32])) "fs/buffer.c":270:20 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 113 112 114 16 (set (reg:SI 105 [ _23 ])
        (zero_extend:SI (reg:HI 104 [ _22 ]))) "fs/buffer.c":270:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 104 [ _22 ])
        (nil)))
(insn 114 113 115 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":270:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 115 114 116 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 105 [ _23 ])) "fs/buffer.c":270:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 116 115 117 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sync_dev") [flags 0x3]  <function_decl 0x752d7c0f2a00 sync_dev>) [0 sync_dev S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":270:9 823 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (nil))
(insn 117 116 118 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":270:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 118 117 119 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":271:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 119 118 120 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":271:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 120 119 121 16 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":271:9 812 {*call}
     (nil)
    (nil))
(insn 121 120 122 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":271:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 122 121 123 16 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":272:15 75 {*movsi_internal}
     (nil))
(insn 123 122 124 16 (set (reg:QI 106 [ _24 ])
        (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 12 [0xc])) [0 bh_32->b_count+0 S1 A32])) "fs/buffer.c":272:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))
(insn 124 123 125 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ _24 ])
            (const_int 0 [0]))) "fs/buffer.c":272:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 106 [ _24 ])
        (nil)))
(jump_insn 125 124 126 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "fs/buffer.c":272:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 129)
(note 126 125 189 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 189 126 190 17 (set (pc)
        (label_ref 4)) "fs/buffer.c":273:13 807 {jump}
     (nil)
 -> 4)
(barrier 190 189 129)
(code_label 129 190 130 18 66 (nil) [2 uses])
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":269:14 75 {*movsi_internal}
     (nil))
(insn 132 131 134 18 (set (reg:QI 107 [ _25 ])
        (mem:QI (plus:SI (reg/f:SI 129)
                (const_int 11 [0xb])) [0 bh_32->b_dirt+0 S1 A8])) "fs/buffer.c":269:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 134 132 135 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 107 [ _25 ])
            (const_int 0 [0]))) "fs/buffer.c":269:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 107 [ _25 ])
        (nil)))
(jump_insn 135 134 136 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "fs/buffer.c":269:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 133)
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":277:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 138 137 139 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 block+0 S4 A32])) "fs/buffer.c":277:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 139 138 140 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":277:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 140 139 141 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_buffer") [flags 0x3]  <function_decl 0x752d7c146900 find_buffer>) [0 find_buffer S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":277:9 823 {*call_value}
     (nil)
    (nil))
(insn 141 140 142 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":277:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 142 141 143 19 (set (reg/f:SI 108 [ _26 ])
        (reg:SI 0 ax)) "fs/buffer.c":277:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 143 142 144 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 108 [ _26 ])
            (const_int 0 [0]))) "fs/buffer.c":277:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 108 [ _26 ])
        (nil)))
(jump_insn 144 143 145 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) "fs/buffer.c":277:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 148)
(note 145 144 191 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 191 145 192 20 (set (pc)
        (label_ref 4)) "fs/buffer.c":278:9 807 {jump}
     (nil)
 -> 4)
(barrier 192 191 148)
(code_label 148 192 149 21 68 (nil) [1 uses])
(note 149 148 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 21 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":281:17 75 {*movsi_internal}
     (nil))
(insn 151 150 152 21 (set (mem:QI (plus:SI (reg/f:SI 130)
                (const_int 12 [0xc])) [0 bh_32->b_count+0 S1 A32])
        (const_int 1 [0x1])) "fs/buffer.c":281:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 152 151 153 21 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":282:17 75 {*movsi_internal}
     (nil))
(insn 153 152 154 21 (set (mem:QI (plus:SI (reg/f:SI 131)
                (const_int 11 [0xb])) [0 bh_32->b_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":282:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 154 153 155 21 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":283:20 75 {*movsi_internal}
     (nil))
(insn 155 154 156 21 (set (mem:QI (plus:SI (reg/f:SI 132)
                (const_int 10 [0xa])) [0 bh_32->b_uptodate+0 S1 A16])
        (const_int 0 [0])) "fs/buffer.c":283:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 156 155 157 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":284:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 157 156 158 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":284:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 158 157 159 21 (call (mem:QI (symbol_ref:SI ("remove_from_queues") [flags 0x3]  <function_decl 0x752d7c146f00 remove_from_queues>) [0 remove_from_queues S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":284:5 812 {*call}
     (nil)
    (nil))
(insn 159 158 160 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":284:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 160 159 161 21 (set (reg:SI 133)
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":285:15 75 {*movsi_internal}
     (nil))
(insn 161 160 162 21 (set (reg:HI 109 [ _27 ])
        (subreg:HI (reg:SI 133) 0)) "fs/buffer.c":285:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 162 161 163 21 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":285:15 75 {*movsi_internal}
     (nil))
(insn 163 162 164 21 (set (mem:HI (plus:SI (reg/f:SI 134)
                (const_int 8 [0x8])) [5 bh_32->b_dev+0 S2 A32])
        (reg:HI 109 [ _27 ])) "fs/buffer.c":285:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg:HI 109 [ _27 ])
            (nil))))
(insn 164 163 165 21 (set (reg:SI 110 [ block.10_28 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 block+0 S4 A32])) "fs/buffer.c":286:19 75 {*movsi_internal}
     (nil))
(insn 165 164 166 21 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":286:19 75 {*movsi_internal}
     (nil))
(insn 166 165 167 21 (set (mem:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [4 bh_32->b_blocknr+0 S4 A32])
        (reg:SI 110 [ block.10_28 ])) "fs/buffer.c":286:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 110 [ block.10_28 ])
            (nil))))
(insn 167 166 168 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":287:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 168 167 169 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":287:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 169 168 170 21 (call (mem:QI (symbol_ref:SI ("insert_into_queues") [flags 0x3]  <function_decl 0x752d7c146d00 insert_into_queues>) [0 insert_into_queues S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":287:5 812 {*call}
     (nil)
    (nil))
(insn 170 169 171 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":287:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 171 170 172 21 (set (reg/f:SI 111 [ _33 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":288:12 75 {*movsi_internal}
     (nil))
(code_label 172 171 173 22 58 (nil) [1 uses])
(note 173 172 174 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 178 22 (set (reg/f:SI 112 [ <retval> ])
        (reg/f:SI 111 [ _33 ])) "fs/buffer.c":289:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111 [ _33 ])
        (nil)))
(insn 178 174 179 22 (set (reg/i:SI 0 ax)
        (reg/f:SI 112 [ <retval> ])) "fs/buffer.c":289:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112 [ <retval> ])
        (nil)))
(insn 179 178 0 22 (use (reg/i:SI 0 ax)) "fs/buffer.c":289:1 -1
     (nil))

;; Function breada (breada, funcdef_no=15, decl_uid=1166, cgraph_uid=16, symbol_order=21)

scanning new insn with uid = 117.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 21 count 20 (  1.2)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 11, multiple latches: 10 7
;;  depth 1, outer 0
;;  nodes: 11 10 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 11 }
;; 7 succs { 8 11 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 7 12 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r91,l0) best Q_REGS, allocno Q_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r88,l0) best Q_REGS, allocno Q_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a10 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a12 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a16 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a3(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:30000
  a8(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a11(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a13(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a15(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a17(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a20(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 111(l0): point = 0
   Insn 110(l0): point = 2
   Insn 106(l0): point = 4
   Insn 103(l0): point = 7
   Insn 102(l0): point = 9
   Insn 101(l0): point = 11
   Insn 100(l0): point = 13
   Insn 99(l0): point = 15
   Insn 115(l0): point = 18
   Insn 94(l0): point = 20
   Insn 92(l0): point = 23
   Insn 91(l0): point = 25
   Insn 90(l0): point = 27
   Insn 89(l0): point = 29
   Insn 88(l0): point = 31
   Insn 87(l0): point = 33
   Insn 86(l0): point = 35
   Insn 85(l0): point = 37
   Insn 52(l0): point = 40
   Insn 51(l0): point = 42
   Insn 50(l0): point = 44
   Insn 49(l0): point = 46
   Insn 48(l0): point = 48
   Insn 47(l0): point = 50
   Insn 46(l0): point = 52
   Insn 45(l0): point = 54
   Insn 44(l0): point = 56
   Insn 43(l0): point = 58
   Insn 83(l0): point = 61
   Insn 82(l0): point = 63
   Insn 78(l0): point = 65
   Insn 77(l0): point = 67
   Insn 76(l0): point = 69
   Insn 75(l0): point = 71
   Insn 74(l0): point = 73
   Insn 71(l0): point = 76
   Insn 70(l0): point = 78
   Insn 69(l0): point = 80
   Insn 68(l0): point = 82
   Insn 67(l0): point = 84
   Insn 57(l0): point = 87
   Insn 56(l0): point = 89
   Insn 55(l0): point = 91
   Insn 54(l0): point = 93
   Insn 64(l0): point = 96
   Insn 63(l0): point = 98
   Insn 62(l0): point = 100
   Insn 61(l0): point = 102
   Insn 60(l0): point = 104
   Insn 59(l0): point = 106
   Insn 113(l0): point = 109
   Insn 37(l0): point = 112
   Insn 36(l0): point = 114
   Insn 35(l0): point = 116
   Insn 34(l0): point = 118
   Insn 33(l0): point = 120
   Insn 32(l0): point = 122
   Insn 30(l0): point = 125
   Insn 29(l0): point = 127
   Insn 28(l0): point = 129
   Insn 27(l0): point = 131
   Insn 24(l0): point = 134
   Insn 23(l0): point = 136
   Insn 22(l0): point = 138
   Insn 21(l0): point = 140
   Insn 20(l0): point = 142
   Insn 19(l0): point = 144
   Insn 17(l0): point = 147
   Insn 16(l0): point = 149
   Insn 15(l0): point = 151
   Insn 14(l0): point = 153
   Insn 13(l0): point = 155
   Insn 12(l0): point = 157
   Insn 11(l0): point = 159
   Insn 10(l0): point = 161
   Insn 9(l0): point = 163
   Insn 8(l0): point = 165
   Insn 7(l0): point = 167
   Insn 6(l0): point = 169
   Insn 5(l0): point = 171
   Insn 117(l0): point = 173
 a0(r93): [3..4]
 a1(r92): [18..20] [5..7]
 a2(r91): [26..27]
 a3(r104): [28..29]
 a4(r90): [64..65]
 a5(r89): [68..69]
 a6(r103): [70..71]
 a7(r82): [40..173]
 a8(r102): [77..78]
 a9(r88): [77..80]
 a10(r87): [81..82]
 a11(r101): [83..84]
 a12(r86): [90..91]
 a13(r100): [92..93]
 a14(r99): [45..46]
 a15(r85): [55..58]
 a16(r84): [128..129]
 a17(r98): [130..131]
 a18(r97): [141..142]
 a19(r96): [152..153]
 a20(r83): [162..165]
 a21(r95): [168..169]
 a22(r94): [170..171]
Compressing live ranges: from 176 to 44 - 25%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [2..5]
 a2(r91): [6..7]
 a3(r104): [8..9]
 a4(r90): [14..15]
 a5(r89): [16..17]
 a6(r103): [18..19]
 a7(r82): [10..43]
 a8(r102): [20..21]
 a9(r88): [20..21]
 a10(r87): [22..23]
 a11(r101): [24..25]
 a12(r86): [26..27]
 a13(r100): [28..29]
 a14(r99): [10..11]
 a15(r85): [12..13]
 a16(r84): [30..31]
 a17(r98): [32..33]
 a18(r97): [34..35]
 a19(r96): [36..37]
 a20(r83): [38..39]
 a21(r95): [40..41]
 a22(r94): [42..43]
  pref0:a14(r99)<-hr0@1500
  pref1:a19(r96)<-hr0@1500
  pref2:a0(r93)<-hr0@1500
  regions=1, blocks=16, points=44
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=23
Disposition:
    7:r82  l0     3   20:r83  l0     0   16:r84  l0     0   15:r85  l0     0
   12:r86  l0     0   10:r87  l0     0    9:r88  l0     1    5:r89  l0     0
    4:r90  l0     0    2:r91  l0     0    1:r92  l0     0    0:r93  l0     0
   22:r94  l0     0   21:r95  l0     0   19:r96  l0     0   18:r97  l0     0
   17:r98  l0     0   14:r99  l0     0   13:r100 l0     0   11:r101 l0     0
    8:r102 l0     0    6:r103 l0     0    3:r104 l0     0
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


breada

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,4u} r1={8d} r2={8d} r3={3d,3u} r6={1d,15u} r7={26d,61u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,21u} r17={32d,6u} r18={7d} r19={1d,33u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,4u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={2d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} 
;;    total ref usage 737{568d,169u,0e} in 81{74 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 117 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 117 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 117 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":301:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg:SI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":301:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 args+0 S4 A32])
        (reg:SI 95)) "fs/buffer.c":301:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 83 [ first.16_1 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 first+0 S4 A32])) "fs/buffer.c":302:16 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":302:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 10 9 11 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 83 [ first.16_1 ])) "fs/buffer.c":302:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 83 [ first.16_1 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 11 10 12 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":302:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":302:16 823 {*call_value}
     (nil)
    (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":302:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 14 13 15 2 (set (reg:SI 96)
        (reg:SI 0 ax)) "fs/buffer.c":302:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
        (reg:SI 96)) "fs/buffer.c":302:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":302:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "fs/buffer.c":302:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":303:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 20 19 21 3 (set (reg/f:SI 97)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x752d7c1b46c0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":303:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x752d7c1b46c0 *.LC3>)
        (nil)))
(insn 21 20 22 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 97)) "fs/buffer.c":303:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 22 21 23 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":303:9 75 {*movsi_internal}
     (nil))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":303:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":303:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 25 24 26 4 72 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:SI 98)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":304:12 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 98)
                (const_int 10 [0xa])) [0 bh_22->b_uptodate+0 S1 A16])) "fs/buffer.c":304:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/buffer.c":304:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fs/buffer.c":304:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":305:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 33 32 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":305:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 34 33 35 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 0 [0])) "fs/buffer.c":305:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 35 34 36 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":305:9 75 {*movsi_internal}
     (nil))
(call_insn 36 35 37 5 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":305:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 37 36 38 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":305:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 38 37 39 6 73 (nil) [1 uses])
(note 39 38 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 113 39 114 6 (set (pc)
        (label_ref 72)) "fs/buffer.c":306:11 807 {jump}
     (nil)
 -> 72)
(barrier 114 113 79)
(code_label 79 114 42 7 76 (nil) [1 uses])
(note 42 79 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:SI 85 [ first.17_3 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 first+0 S4 A32])) "fs/buffer.c":307:15 75 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":307:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 45 44 46 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 85 [ first.17_3 ])) "fs/buffer.c":307:15 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 85 [ first.17_3 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 46 45 47 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":307:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 47 46 48 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":307:15 823 {*call_value}
     (nil)
    (nil))
(insn 48 47 49 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":307:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 49 48 50 7 (set (reg:SI 99)
        (reg:SI 0 ax)) "fs/buffer.c":307:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 50 49 51 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 tmp+0 S4 A32])
        (reg:SI 99)) "fs/buffer.c":307:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 51 50 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":308:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "fs/buffer.c":308:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 72)
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg/f:SI 100)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 tmp+0 S4 A32])) "fs/buffer.c":309:21 75 {*movsi_internal}
     (nil))
(insn 55 54 56 8 (set (reg:QI 86 [ _4 ])
        (mem:QI (plus:SI (reg/f:SI 100)
                (const_int 10 [0xa])) [0 tmp_32->b_uptodate+0 S1 A16])) "fs/buffer.c":309:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 56 55 57 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ _4 ])
            (const_int 0 [0]))) "fs/buffer.c":309:16 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 86 [ _4 ])
        (nil)))
(jump_insn 57 56 58 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "fs/buffer.c":309:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 65)
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":310:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 60 59 61 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":310:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 61 60 62 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 2 [0x2])) "fs/buffer.c":310:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 62 61 63 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":310:17 75 {*movsi_internal}
     (nil))
(call_insn 63 62 64 9 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":310:17 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 64 63 65 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":310:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 65 64 66 10 75 (nil) [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 tmp+0 S4 A32])) "fs/buffer.c":311:16 75 {*movsi_internal}
     (nil))
(insn 68 67 69 10 (set (reg:QI 87 [ _5 ])
        (mem:QI (plus:SI (reg/f:SI 101)
                (const_int 12 [0xc])) [0 tmp_32->b_count+0 S1 A32])) "fs/buffer.c":311:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 69 68 70 10 (parallel [
            (set (reg:QI 88 [ _7 ])
                (plus:QI (reg:QI 87 [ _5 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":311:25 213 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 10 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 tmp+0 S4 A32])) "fs/buffer.c":311:25 75 {*movsi_internal}
     (nil))
(insn 71 70 72 10 (set (mem:QI (plus:SI (reg/f:SI 102)
                (const_int 12 [0xc])) [0 tmp_32->b_count+0 S1 A32])
        (reg:QI 88 [ _7 ])) "fs/buffer.c":311:25 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_DEAD (reg:QI 88 [ _7 ])
            (nil))))
(code_label 72 71 73 11 74 (nil) [2 uses])
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 11 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [3 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":306:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 75 74 76 11 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 args+0 S4 A32])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg:SI 89 [ _8 ])
        (mem:SI (plus:SI (reg/f:SI 103)
                (const_int -4 [0xfffffffffffffffc])) [7 MEM[(int *)args_25 + 4294967292B]+0 S4 A32])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 77 76 78 11 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 first+0 S4 A32])
        (reg:SI 89 [ _8 ])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
        (nil)))
(insn 78 77 82 11 (set (reg:SI 90 [ first.18_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 first+0 S4 A32])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (nil))
(insn 82 78 83 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 90 [ first.18_9 ])
            (const_int 0 [0]))) "fs/buffer.c":306:40 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ first.18_9 ])
        (nil)))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/buffer.c":306:40 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 79)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":315:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 86 85 87 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":315:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 87 86 88 12 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":315:5 812 {*call}
     (nil)
    (nil))
(insn 88 87 89 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":315:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 89 88 90 12 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":316:11 75 {*movsi_internal}
     (nil))
(insn 90 89 91 12 (set (reg:QI 91 [ _10 ])
        (mem:QI (plus:SI (reg/f:SI 104)
                (const_int 10 [0xa])) [0 bh_22->b_uptodate+0 S1 A16])) "fs/buffer.c":316:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 91 90 92 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ _10 ])
            (const_int 0 [0]))) "fs/buffer.c":316:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 91 [ _10 ])
        (nil)))
(jump_insn 92 91 93 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "fs/buffer.c":316:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 97)
(note 93 92 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 115 13 (set (reg/f:SI 92 [ _12 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":317:16 75 {*movsi_internal}
     (nil))
(jump_insn 115 94 116 13 (set (pc)
        (label_ref 104)) "fs/buffer.c":317:16 807 {jump}
     (nil)
 -> 104)
(barrier 116 115 97)
(code_label 97 116 98 14 77 (nil) [1 uses])
(note 98 97 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":318:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 100 99 101 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":318:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 101 100 102 14 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x3]  <function_decl 0x752d7c0f2f00 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":318:5 812 {*call}
     (nil)
    (nil))
(insn 102 101 103 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":318:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 103 102 104 14 (set (reg/f:SI 92 [ _12 ])
        (const_int 0 [0])) "fs/buffer.c":319:12 75 {*movsi_internal}
     (nil))
(code_label 104 103 105 15 78 (nil) [1 uses])
(note 105 104 106 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 110 15 (set (reg/f:SI 93 [ <retval> ])
        (reg/f:SI 92 [ _12 ])) "fs/buffer.c":320:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _12 ])
        (nil)))
(insn 110 106 111 15 (set (reg/i:SI 0 ax)
        (reg/f:SI 93 [ <retval> ])) "fs/buffer.c":320:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ <retval> ])
        (nil)))
(insn 111 110 0 15 (use (reg/i:SI 0 ax)) "fs/buffer.c":320:1 -1
     (nil))

;; Function invalidate_buffers (invalidate_buffers, funcdef_no=16, decl_uid=1481, cgraph_uid=17, symbol_order=22)

scanning new insn with uid = 61.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 14 count 12 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 9 6 7 10 8 11
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 9 4 5 3
;; 2 succs { 7 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 9 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 10 }
;; 10 succs { 8 }
;; 8 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a2(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 60(l0): point = 0
   Insn 58(l0): point = 4
   Insn 15(l0): point = 7
   Insn 14(l0): point = 9
   Insn 13(l0): point = 11
   Insn 12(l0): point = 13
   Insn 11(l0): point = 15
   Insn 46(l0): point = 18
   Insn 45(l0): point = 20
   Insn 43(l0): point = 22
   Insn 40(l0): point = 25
   Insn 39(l0): point = 27
   Insn 56(l0): point = 30
   Insn 29(l0): point = 33
   Insn 28(l0): point = 35
   Insn 27(l0): point = 37
   Insn 26(l0): point = 39
   Insn 25(l0): point = 41
   Insn 24(l0): point = 43
   Insn 23(l0): point = 45
   Insn 22(l0): point = 47
   Insn 21(l0): point = 49
   Insn 52(l0): point = 52
   Insn 36(l0): point = 54
   Insn 35(l0): point = 56
   Insn 34(l0): point = 58
   Insn 33(l0): point = 60
   Insn 32(l0): point = 62
   Insn 31(l0): point = 64
   Insn 50(l0): point = 67
   Insn 7(l0): point = 69
   Insn 6(l0): point = 71
   Insn 5(l0): point = 73
   Insn 61(l0): point = 75
 a0(r88): [21..22]
 a1(r82): [7..75]
 a2(r94): [55..56]
 a3(r87): [55..58]
 a4(r93): [59..60]
 a5(r92): [63..64]
 a6(r86): [36..37]
 a7(r85): [38..39]
 a8(r91): [40..41]
 a9(r84): [10..11]
 a10(r83): [12..13]
 a11(r90): [14..15]
 a12(r89): [72..73]
Compressing live ranges: from 78 to 22 - 28%
Ranges after the compression:
 a0(r88): [6..7]
 a1(r82): [0..21]
 a2(r94): [14..15]
 a3(r87): [14..15]
 a4(r93): [16..17]
 a5(r92): [18..19]
 a6(r86): [8..9]
 a7(r85): [10..11]
 a8(r91): [12..13]
 a9(r84): [0..1]
 a10(r83): [2..3]
 a11(r90): [4..5]
 a12(r89): [20..21]
  regions=1, blocks=12, points=22
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
    1:r82  l0     3   10:r83  l0     0    9:r84  l0     0    7:r85  l0     0
    6:r86  l0     0    3:r87  l0     1    0:r88  l0     0   12:r89  l0     0
   11:r90  l0     0    8:r91  l0     0    5:r92  l0     0    4:r93  l0     0
    2:r94  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


invalidate_buffers

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,11u} r7={4d,17u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,12u} r17={9d,3u} r18={1d} r19={1d,24u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,2u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 181{100d,81u,0e} in 34{33 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 61 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 61 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 61 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":327:8 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
        (reg/f:SI 89)) "fs/buffer.c":327:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 7 6 50 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":328:12 75 {*movsi_internal}
     (nil))
(jump_insn 50 7 51 2 (set (pc)
        (label_ref 41)) "fs/buffer.c":328:5 807 {jump}
     (nil)
 -> 41)
(barrier 51 50 44)
(code_label 44 51 10 3 83 (nil) [1 uses])
(note 10 44 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":329:15 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 90)
                (const_int 8 [0x8])) [5 bh_8->b_dev+0 S2 A32])) "fs/buffer.c":329:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 13 12 14 3 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/buffer.c":329:15 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 84 [ _2 ]))) "fs/buffer.c":329:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 15 14 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 55)
            (pc))) "fs/buffer.c":329:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 55)
(note 20 15 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":331:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 22 21 23 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":331:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":331:9 812 {*call}
     (nil)
    (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":331:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 25 24 26 4 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":332:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 91)
                (const_int 8 [0x8])) [5 bh_8->b_dev+0 S2 A32])) "fs/buffer.c":332:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 27 26 28 4 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/buffer.c":332:15 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 86 [ _4 ]))) "fs/buffer.c":332:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "fs/buffer.c":332:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 37)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":333:41 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (mem:QI (plus:SI (reg/f:SI 92)
                (const_int 11 [0xb])) [0 bh_8->b_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":333:41 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 33 32 34 5 (set (reg/f:SI 93)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":333:32 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:QI 87 [ _5 ])
        (mem:QI (plus:SI (reg/f:SI 93)
                (const_int 11 [0xb])) [0 bh_8->b_dirt+0 S1 A8])) "fs/buffer.c":333:32 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 35 34 36 5 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":333:28 75 {*movsi_internal}
     (nil))
(insn 36 35 52 5 (set (mem:QI (plus:SI (reg/f:SI 94)
                (const_int 10 [0xa])) [0 bh_8->b_uptodate+0 S1 A16])
        (reg:QI 87 [ _5 ])) "fs/buffer.c":333:28 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
            (nil))))
(jump_insn 52 36 53 5 (set (pc)
        (label_ref 37)) 807 {jump}
     (nil)
 -> 37)
(barrier 53 52 55)
(code_label 55 53 54 9 84 (nil) [1 uses])
(note 54 55 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 37 9 (const_int 0 [0]) "fs/buffer.c":330:13 843 {nop}
     (nil))
(code_label 37 56 38 6 82 (nil) [2 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":328:34 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":328:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 41 40 42 7 80 (nil) [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 7 (set (reg:SI 88 [ nr_buffers.21_6 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":328:19 75 {*movsi_internal}
     (nil))
(insn 45 43 46 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
            (reg:SI 88 [ nr_buffers.21_6 ]))) "fs/buffer.c":328:19 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ nr_buffers.21_6 ])
        (nil)))
(jump_insn 46 45 57 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/buffer.c":328:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 44)
(note 57 46 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 47 10 (const_int 0 [0]) "fs/buffer.c":335:1 843 {nop}
     (nil))
(note 47 58 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 59 47 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 0 11 (const_int 0 [0]) "fs/buffer.c":335:1 843 {nop}
     (nil))

;; Function check_disk_change (check_disk_change, funcdef_no=17, decl_uid=1175, cgraph_uid=18, symbol_order=23)

scanning new insn with uid = 91.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 16 (  1.2)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 11 12 10
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 11 3 }
;; 3 succs { 12 4 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 }
;; 11 succs { 10 }
;; 12 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:36000
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a5(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a12(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a14(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a16(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a19(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 90(l0): point = 1
   Insn 86(l0): point = 4
   Insn 85(l0): point = 6
   Insn 81(l0): point = 9
   Insn 74(l0): point = 11
   Insn 73(l0): point = 13
   Insn 72(l0): point = 15
   Insn 71(l0): point = 17
   Insn 70(l0): point = 19
   Insn 69(l0): point = 21
   Insn 68(l0): point = 23
   Insn 67(l0): point = 25
   Insn 66(l0): point = 27
   Insn 41(l0): point = 30
   Insn 40(l0): point = 32
   Insn 39(l0): point = 34
   Insn 38(l0): point = 36
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 34(l0): point = 44
   Insn 33(l0): point = 46
   Insn 64(l0): point = 49
   Insn 63(l0): point = 51
   Insn 57(l0): point = 54
   Insn 54(l0): point = 57
   Insn 53(l0): point = 59
   Insn 52(l0): point = 61
   Insn 51(l0): point = 63
   Insn 50(l0): point = 65
   Insn 49(l0): point = 67
   Insn 48(l0): point = 69
   Insn 47(l0): point = 71
   Insn 46(l0): point = 73
   Insn 45(l0): point = 75
   Insn 44(l0): point = 77
   Insn 43(l0): point = 79
   Insn 79(l0): point = 82
   Insn 29(l0): point = 84
   Insn 23(l0): point = 87
   Insn 22(l0): point = 89
   Insn 21(l0): point = 91
   Insn 20(l0): point = 93
   Insn 19(l0): point = 95
   Insn 18(l0): point = 97
   Insn 17(l0): point = 99
   Insn 16(l0): point = 101
   Insn 15(l0): point = 103
   Insn 14(l0): point = 105
   Insn 8(l0): point = 108
   Insn 7(l0): point = 110
   Insn 6(l0): point = 112
   Insn 5(l0): point = 114
   Insn 91(l0): point = 116
 a0(r82): [24..116]
 a1(r91): [64..67]
 a2(r90): [68..69]
 a3(r101): [70..71]
 a4(r100): [72..73]
 a5(r99): [74..75]
 a6(r97): [74..79]
 a7(r98): [76..77]
 a8(r89): [33..34]
 a9(r88): [35..36]
 a10(r96): [37..38]
 a11(r95): [39..40]
 a12(r94): [41..42]
 a13(r92): [41..46]
 a14(r93): [43..44]
 a15(r87): [90..91]
 a16(r86): [100..103]
 a17(r85): [104..105]
 a18(r84): [111..112]
 a19(r83): [113..114]
Compressing live ranges: from 119 to 34 - 28%
Ranges after the compression:
 a0(r82): [0..33]
 a1(r91): [12..13]
 a2(r90): [14..15]
 a3(r101): [16..17]
 a4(r100): [18..19]
 a5(r99): [20..21]
 a6(r97): [20..23]
 a7(r98): [22..23]
 a8(r89): [0..1]
 a9(r88): [2..3]
 a10(r96): [4..5]
 a11(r95): [6..7]
 a12(r94): [8..9]
 a13(r92): [8..11]
 a14(r93): [10..11]
 a15(r87): [24..25]
 a16(r86): [26..27]
 a17(r85): [28..29]
 a18(r84): [30..31]
 a19(r83): [32..33]
  pref0:a15(r87)<-hr0@1500
  pref1:a0(r82)<-hr3@1500
  regions=1, blocks=13, points=34
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
    0:r82  l0     3   19:r83  l0     0   18:r84  l0     0   17:r85  l0     0
   16:r86  l0     0   15:r87  l0     0    9:r88  l0     0    8:r89  l0     0
    2:r90  l0     0    1:r91  l0     0   13:r92  l0     1   14:r93  l0     0
   12:r94  l0     0   11:r95  l0     0   10:r96  l0     0    6:r97  l0     1
    7:r98  l0     0    5:r99  l0     0    4:r100 l0     0    3:r101 l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


check_disk_change

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,1u} r1={5d} r2={5d} r3={3d,3u} r6={1d,12u} r7={13d,36u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,16u} r17={26d,4u} r18={4d} r19={1d,18u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 454{340d,114u,0e} in 54{50 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 91 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 91 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 91 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 83 [ dev.19_1 ])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":355:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (lshiftrt:SI (reg:SI 83 [ dev.19_1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":355:9 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 83 [ dev.19_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _2 ])
            (const_int 2 [0x2]))) "fs/buffer.c":355:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 8 7 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 84)
            (pc))) "fs/buffer.c":355:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
(note 13 8 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 85 [ dev.20_3 ])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":357:28 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 85 [ dev.20_3 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":357:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ dev.20_3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":357:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 17 16 18 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 86 [ _4 ])) "fs/buffer.c":357:10 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 18 17 19 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":357:10 75 {*movsi_internal}
     (nil))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("floppy_change") [flags 0x41]  <function_decl 0x752d7c112300 floppy_change>) [0 floppy_change S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":357:10 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":357:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 21 20 22 3 (set (reg:SI 87 [ _5 ])
        (reg:SI 0 ax)) "fs/buffer.c":357:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 22 21 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _5 ])
            (const_int 0 [0]))) "fs/buffer.c":357:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(jump_insn 23 22 28 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 89)
            (pc))) "fs/buffer.c":357:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
(note 28 23 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 79 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":359:12 75 {*movsi_internal}
     (nil))
(jump_insn 79 29 80 4 (set (pc)
        (label_ref 58)) "fs/buffer.c":359:5 807 {jump}
     (nil)
 -> 58)
(barrier 80 79 60)
(code_label 60 80 32 5 91 (nil) [1 uses])
(note 32 60 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg/f:SI 92)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x752d7d93bcf0 super_block>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/buffer.c":360:27 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:SI 93)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":360:27 75 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:SI 94)
                (mult:SI (reg:SI 93)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":360:27 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 5 (parallel [
            (set (reg:SI 95)
                (plus:SI (reg/f:SI 92)
                    (reg:SI 94)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":360:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg/f:SI 92)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 37 36 38 5 (parallel [
            (set (reg/f:SI 96)
                (plus:SI (reg:SI 95)
                    (const_int 84 [0x54])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":360:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 37 39 5 (set (reg:HI 88 [ _6 ])
        (mem:HI (reg/f:SI 96) [5 super_block[i_10].s_dev+0 S2 A32])) "fs/buffer.c":360:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 39 38 40 5 (set (reg:SI 89 [ _7 ])
        (zero_extend:SI (reg:HI 88 [ _6 ]))) "fs/buffer.c":360:27 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (reg:SI 89 [ _7 ]))) "fs/buffer.c":360:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/buffer.c":360:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 55)
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg/f:SI 97)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x752d7d93bcf0 super_block>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/buffer.c":361:37 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:SI 98)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":361:37 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:SI 99)
                (mult:SI (reg:SI 98)
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:37 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg/f:SI 97)
                    (reg:SI 99)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:37 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_DEAD (reg/f:SI 97)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 47 46 48 6 (parallel [
            (set (reg/f:SI 101)
                (plus:SI (reg:SI 100)
                    (const_int 84 [0x54])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:37 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 6 (set (reg:HI 90 [ _8 ])
        (mem:HI (reg/f:SI 101) [5 super_block[i_10].s_dev+0 S2 A32])) "fs/buffer.c":361:37 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 49 48 50 6 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:HI 90 [ _8 ]))) "fs/buffer.c":361:13 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 50 49 51 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 51 50 52 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 91 [ _9 ])) "fs/buffer.c":361:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 52 51 53 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":361:13 75 {*movsi_internal}
     (nil))
(call_insn 53 52 54 6 (call (mem:QI (symbol_ref:SI ("put_super") [flags 0x41]  <function_decl 0x752d7c140f00 put_super>) [0 put_super S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":361:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 54 53 55 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 55 54 56 7 90 (nil) [1 uses])
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":359:32 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 58 57 59 8 89 (nil) [1 uses])
(note 59 58 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 59 64 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/buffer.c":359:19 11 {*cmpsi_1}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/buffer.c":359:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 60)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":362:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 67 66 68 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":362:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 68 67 69 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":362:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 69 68 70 9 (call (mem:QI (symbol_ref:SI ("invalidate_inodes") [flags 0x41]  <function_decl 0x752d7c112200 invalidate_inodes>) [0 invalidate_inodes S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":362:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 70 69 71 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":362:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 71 70 72 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":363:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 72 71 73 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])) "fs/buffer.c":363:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 73 72 74 9 (call (mem:QI (symbol_ref:SI ("invalidate_buffers") [flags 0x3]  <function_decl 0x752d7c157200 invalidate_buffers>) [0 invalidate_buffers S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":363:5 812 {*call}
     (nil)
    (nil))
(insn 74 73 81 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":363:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 81 74 82 9 (set (pc)
        (label_ref 77)) 807 {jump}
     (nil)
 -> 77)
(barrier 82 81 84)
(code_label 84 82 83 11 92 (nil) [1 uses])
(note 83 84 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 11 (const_int 0 [0]) "fs/buffer.c":356:9 843 {nop}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (label_ref 77)) 807 {jump}
     (nil)
 -> 77)
(barrier 87 86 89)
(code_label 89 87 88 12 93 (nil) [1 uses])
(note 88 89 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 90 88 77 12 (const_int 0 [0]) "fs/buffer.c":358:9 843 {nop}
     (nil))
(code_label 77 90 78 10 85 (nil) [2 uses])
(note 78 77 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

;; Function sys_sync (sys_sync, funcdef_no=18, decl_uid=1498, cgraph_uid=19, symbol_order=24)

scanning new insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r83,l0) best Q_REGS, allocno Q_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:30000
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 47(l0): point = 0
   Insn 46(l0): point = 2
   Insn 42(l0): point = 4
   Insn 39(l0): point = 6
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 18(l0): point = 13
   Insn 17(l0): point = 15
   Insn 16(l0): point = 17
   Insn 15(l0): point = 19
   Insn 14(l0): point = 21
   Insn 13(l0): point = 23
   Insn 37(l0): point = 26
   Insn 36(l0): point = 28
   Insn 34(l0): point = 30
   Insn 31(l0): point = 33
   Insn 30(l0): point = 35
   Insn 27(l0): point = 38
   Insn 26(l0): point = 40
   Insn 25(l0): point = 42
   Insn 24(l0): point = 44
   Insn 23(l0): point = 46
   Insn 22(l0): point = 48
   Insn 49(l0): point = 51
   Insn 9(l0): point = 53
   Insn 8(l0): point = 55
   Insn 7(l0): point = 57
   Insn 6(l0): point = 59
   Insn 5(l0): point = 61
   Insn 51(l0): point = 63
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r84): [29..30]
 a3(r82): [9..63]
 a4(r83): [12..13]
 a5(r88): [14..15]
 a6(r87): [56..57]
Compressing live ranges: from 66 to 12 - 18%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r84): [8..9]
 a3(r82): [4..11]
 a4(r83): [4..5]
 a5(r88): [6..7]
 a6(r87): [10..11]
  pref0:a0(r86)<-hr0@1500
  regions=1, blocks=8, points=12
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    3:r82  l0     3    4:r83  l0     0    2:r84  l0     0    1:r85  l0     0
    0:r86  l0     0    6:r87  l0     0    5:r88  l0     0
+++Costs: overall 3000, reg 3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_sync

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,2u} r1={4d} r2={4d} r3={2d,2u} r6={1d,7u} r7={8d,21u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,6u} r17={12d,2u} r18={3d} r19={1d,17u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,4u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 307{240d,67u,0e} in 30{27 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 51 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 51 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 51 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":371:5 75 {*movsi_internal}
     (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:SI ("sync_inodes") [flags 0x41]  <function_decl 0x752d7c0f2900 sync_inodes>) [0 sync_inodes S1 A8])
        (const_int 0 [0])) "fs/buffer.c":371:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 87)
        (mem/f/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":372:8 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
        (reg/f:SI 87)) "fs/buffer.c":372:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 9 8 49 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":373:11 75 {*movsi_internal}
     (nil))
(jump_insn 49 9 50 2 (set (pc)
        (label_ref 32)) "fs/buffer.c":373:5 807 {jump}
     (nil)
 -> 32)
(barrier 50 49 35)
(code_label 35 50 12 3 97 (nil) [1 uses])
(note 12 35 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":374:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 14 13 15 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":374:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 15 14 16 3 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":374:9 812 {*call}
     (nil)
    (nil))
(insn 16 15 17 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":374:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 17 16 18 3 (set (reg/f:SI 88)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":375:15 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:QI 83 [ _1 ])
        (mem:QI (plus:SI (reg/f:SI 88)
                (const_int 11 [0xb])) [0 bh_4->b_dirt+0 S1 A8])) "fs/buffer.c":375:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (nil)))
(insn 19 18 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 83 [ _1 ])
            (const_int 0 [0]))) "fs/buffer.c":375:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _1 ])
        (nil)))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/buffer.c":375:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":376:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 23 22 24 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])) "fs/buffer.c":376:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 24 23 25 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 1 [0x1])) "fs/buffer.c":376:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":376:13 75 {*movsi_internal}
     (nil))
(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":376:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":376:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 28 27 29 5 96 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":373:32 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":373:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 32 31 33 6 95 (nil) [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 36 6 (set (reg:SI 84 [ nr_buffers.22_2 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":373:17 75 {*movsi_internal}
     (nil))
(insn 36 34 37 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
            (reg:SI 84 [ nr_buffers.22_2 ]))) "fs/buffer.c":373:17 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ nr_buffers.22_2 ])
        (nil)))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/buffer.c":373:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 35)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 7 (set (reg:SI 85 [ _11 ])
        (const_int 0 [0])) "fs/buffer.c":378:12 75 {*movsi_internal}
     (nil))
(insn 42 39 46 7 (set (reg:SI 86 [ <retval> ])
        (reg:SI 85 [ _11 ])) "fs/buffer.c":378:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _11 ])
        (nil)))
(insn 46 42 47 7 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) "fs/buffer.c":379:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ <retval> ])
        (nil)))
(insn 47 46 0 7 (use (reg/i:SI 0 ax)) "fs/buffer.c":379:1 -1
     (nil))

;; Function bread_page (bread_page, funcdef_no=19, decl_uid=1216, cgraph_uid=20, symbol_order=25)

scanning new insn with uid = 126.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 20 n_edges 26 count 26 (  1.3)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 17 19
;;
;; Loop 2
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 11 14 12 13
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 5 7 4 6 3
;; 2 succs { 9 }
;; 3 succs { 4 7 }
;; 4 succs { 5 8 }
;; 5 succs { 6 8 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 3 10 }
;; 10 succs { 16 }
;; 11 succs { 12 15 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 11 18 }
;; 18 succs { 17 }
;; 17 succs { 19 }
;; 19 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r115,l0) best CREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a8 (r99,l0) best Q_REGS, allocno Q_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a19 (r94,l0) best Q_REGS, allocno Q_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a4(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a5(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a16(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a26(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a29(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a30(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a34(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a35(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 125(l0): point = 0
   Insn 123(l0): point = 4
   Insn 73(l0): point = 7
   Insn 72(l0): point = 9
   Insn 71(l0): point = 11
   Insn 70(l0): point = 13
   Insn 112(l0): point = 16
   Insn 111(l0): point = 18
   Insn 105(l0): point = 21
   Insn 104(l0): point = 23
   Insn 101(l0): point = 26
   Insn 100(l0): point = 28
   Insn 99(l0): point = 30
   Insn 98(l0): point = 32
   Insn 97(l0): point = 34
   Insn 96(l0): point = 36
   Insn 85(l0): point = 39
   Insn 84(l0): point = 41
   Insn 83(l0): point = 43
   Insn 82(l0): point = 45
   Insn 81(l0): point = 47
   Insn 80(l0): point = 49
   Insn 79(l0): point = 51
   Insn 78(l0): point = 53
   Insn 77(l0): point = 55
   Insn 76(l0): point = 57
   Insn 75(l0): point = 59
   Insn 93(l0): point = 62
   Insn 92(l0): point = 64
   Insn 91(l0): point = 66
   Insn 90(l0): point = 68
   Insn 89(l0): point = 70
   Insn 88(l0): point = 72
   Insn 87(l0): point = 74
   Insn 120(l0): point = 77
   Insn 66(l0): point = 79
   Insn 15(l0): point = 82
   Insn 14(l0): point = 84
   Insn 13(l0): point = 86
   Insn 12(l0): point = 88
   Insn 11(l0): point = 90
   Insn 10(l0): point = 92
   Insn 9(l0): point = 94
   Insn 64(l0): point = 97
   Insn 63(l0): point = 99
   Insn 57(l0): point = 102
   Insn 39(l0): point = 105
   Insn 38(l0): point = 107
   Insn 37(l0): point = 109
   Insn 36(l0): point = 111
   Insn 35(l0): point = 113
   Insn 54(l0): point = 116
   Insn 53(l0): point = 118
   Insn 33(l0): point = 121
   Insn 32(l0): point = 123
   Insn 31(l0): point = 125
   Insn 30(l0): point = 127
   Insn 29(l0): point = 129
   Insn 28(l0): point = 131
   Insn 27(l0): point = 133
   Insn 26(l0): point = 135
   Insn 25(l0): point = 137
   Insn 24(l0): point = 139
   Insn 23(l0): point = 141
   Insn 22(l0): point = 143
   Insn 21(l0): point = 145
   Insn 20(l0): point = 147
   Insn 19(l0): point = 149
   Insn 18(l0): point = 151
   Insn 17(l0): point = 153
   Insn 118(l0): point = 156
   Insn 48(l0): point = 158
   Insn 47(l0): point = 160
   Insn 46(l0): point = 162
   Insn 45(l0): point = 164
   Insn 44(l0): point = 166
   Insn 43(l0): point = 168
   Insn 42(l0): point = 170
   Insn 41(l0): point = 172
   Insn 116(l0): point = 175
   Insn 5(l0): point = 177
   Insn 126(l0): point = 179
 a0(r103): [31..34]
 a1(r117): [35..36]
 a2(r115): [63..66]
 a3(r102): [63..68]
 a4(r116): [63..64]
 a5(r101): [69..70]
 a6(r100): [71..72]
 a7(r114): [73..74]
 a8(r99): [42..43]
 a9(r98): [44..45]
 a10(r113): [46..47]
 a11(r97): [54..57]
 a12(r112): [58..59]
 a13(r96): [10..11]
 a14(r111): [12..13]
 a15(r82): [82..179]
 a16(r110): [117..118]
 a17(r95): [167..170]
 a18(r109): [171..172]
 a19(r94): [108..109]
 a20(r93): [110..111]
 a21(r108): [112..113]
 a22(r92): [124..125]
 a23(r107): [126..127]
 a24(r106): [130..131]
 a25(r91): [130..133]
 a26(r90): [142..145]
 a27(r89): [146..147]
 a28(r105): [148..149]
 a29(r88): [148..151]
 a30(r87): [152..153]
 a31(r86): [85..86]
 a32(r85): [87..88]
 a33(r104): [89..90]
 a34(r84): [89..92]
 a35(r83): [93..94]
Compressing live ranges: from 182 to 60 - 32%
Ranges after the compression:
 a0(r103): [4..5]
 a1(r117): [6..7]
 a2(r115): [18..19]
 a3(r102): [18..19]
 a4(r116): [18..19]
 a5(r101): [20..21]
 a6(r100): [22..23]
 a7(r114): [24..25]
 a8(r99): [8..9]
 a9(r98): [10..11]
 a10(r113): [12..13]
 a11(r97): [14..15]
 a12(r112): [16..17]
 a13(r96): [0..1]
 a14(r111): [2..3]
 a15(r82): [26..59]
 a16(r110): [40..41]
 a17(r95): [56..57]
 a18(r109): [58..59]
 a19(r94): [34..35]
 a20(r93): [36..37]
 a21(r108): [38..39]
 a22(r92): [42..43]
 a23(r107): [44..45]
 a24(r106): [46..47]
 a25(r91): [46..47]
 a26(r90): [48..49]
 a27(r89): [50..51]
 a28(r105): [52..53]
 a29(r88): [52..53]
 a30(r87): [54..55]
 a31(r86): [26..27]
 a32(r85): [28..29]
 a33(r104): [30..31]
 a34(r84): [30..31]
 a35(r83): [32..33]
  pref0:a4(r116)<-hr5@1000
  pref1:a2(r115)<-hr2@1000
  pref2:a3(r102)<-hr4@1000
  pref3:a25(r91)<-hr0@1500
  regions=1, blocks=20, points=60
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
   15:r82  l0     3   35:r83  l0     0   34:r84  l0     1   32:r85  l0     0
   31:r86  l0     0   30:r87  l0     0   29:r88  l0     1   27:r89  l0     0
   26:r90  l0     0   25:r91  l0     0   22:r92  l0     0   20:r93  l0     0
   19:r94  l0     0   17:r95  l0     0   13:r96  l0     0   11:r97  l0     0
    9:r98  l0     0    8:r99  l0     0    6:r100 l0     0    5:r101 l0     0
    3:r102 l0     3    0:r103 l0     0   33:r104 l0     0   28:r105 l0     0
   24:r106 l0     1   23:r107 l0     0   21:r108 l0     0   18:r109 l0     0
   16:r110 l0     0   14:r111 l0     0   12:r112 l0     0   10:r113 l0     0
    7:r114 l0     0    2:r115 l0     1    4:r116 l0     0    1:r117 l0     0
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bread_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,1u} r1={5d} r2={5d} r3={1d,1u} r6={1d,19u} r7={15d,45u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,24u,2e} r17={28d,7u} r18={4d} r19={1d,49u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 544{358d,182u,4e} in 82{78 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 126 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 126 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 126 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 116 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":392:12 75 {*movsi_internal}
     (nil))
(jump_insn 116 5 117 2 (set (pc)
        (label_ref 58)) "fs/buffer.c":392:5 807 {jump}
     (nil)
 -> 58)
(barrier 117 116 60)
(code_label 60 117 8 3 103 (nil) [1 uses])
(note 8 60 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 83 [ i.23_1 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":393:14 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg:SI 84 [ _2 ])
                (ashift:SI (reg:SI 83 [ i.23_1 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":393:14 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 83 [ i.23_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 3 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [13 b+0 S4 A32])) "fs/buffer.c":393:14 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg:SI 84 [ _2 ])
                    (reg/f:SI 104)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":393:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 8 [0x8])) [13 b+0 S4 A32])
                        (reg:SI 84 [ _2 ]))
                    (nil))))))
(insn 13 12 14 3 (set (reg:SI 86 [ _4 ])
        (mem:SI (reg/f:SI 85 [ _3 ]) [7 *_3+0 S4 A32])) "fs/buffer.c":393:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (nil)))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _4 ])
            (const_int 0 [0]))) "fs/buffer.c":393:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "fs/buffer.c":393:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 51)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 87 [ i.24_5 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":394:39 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 88 [ _6 ])
                (ashift:SI (reg:SI 87 [ i.24_5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:39 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 87 [ i.24_5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [13 b+0 S4 A32])) "fs/buffer.c":394:39 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:SI 89 [ _7 ])
                (plus:SI (reg:SI 88 [ _6 ])
                    (reg/f:SI 105)))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:39 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 8 [0x8])) [13 b+0 S4 A32])
                        (reg:SI 88 [ _6 ]))
                    (nil))))))
(insn 21 20 22 4 (set (reg:SI 90 [ _8 ])
        (mem:SI (reg/f:SI 89 [ _7 ]) [7 *_7+0 S4 A32])) "fs/buffer.c":394:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(insn 22 21 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:26 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 23 22 24 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 90 [ _8 ])) "fs/buffer.c":394:26 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 24 23 25 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 dev+0 S4 A32])) "fs/buffer.c":394:26 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":394:26 823 {*call_value}
     (nil)
    (nil))
(insn 26 25 27 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:26 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 27 26 28 4 (set (reg/f:SI 91 [ _9 ])
        (reg:SI 0 ax)) "fs/buffer.c":394:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 28 27 29 4 (set (reg:SI 106)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":394:24 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 106)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_23]+0 S4 A32])
        (reg/f:SI 91 [ _9 ])) "fs/buffer.c":394:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106)
        (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
            (nil))))
(insn 30 29 31 4 (set (reg:SI 107)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":394:20 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 92 [ _10 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 107)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_23]+0 S4 A32])) "fs/buffer.c":394:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 92 [ _10 ])
            (const_int 0 [0]))) "fs/buffer.c":394:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
        (nil)))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/buffer.c":394:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 55)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:SI 108)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":395:24 75 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg/f:SI 93 [ _11 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 108)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_23]+0 S4 A32])) "fs/buffer.c":395:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(insn 37 36 38 5 (set (reg:QI 94 [ _12 ])
        (mem:QI (plus:SI (reg/f:SI 93 [ _11 ])
                (const_int 10 [0xa])) [0 _11->b_uptodate+0 S1 A16])) "fs/buffer.c":395:27 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
        (nil)))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _12 ])
            (const_int 0 [0]))) "fs/buffer.c":395:20 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 94 [ _12 ])
        (nil)))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/buffer.c":395:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 55)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:SI 109)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":396:21 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 95 [ _13 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 109)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_23]+0 S4 A32])) "fs/buffer.c":396:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(insn 43 42 44 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":396:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 44 43 45 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 95 [ _13 ])) "fs/buffer.c":396:21 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 45 44 46 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 0 [0])) "fs/buffer.c":396:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 46 45 47 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/buffer.c":396:21 75 {*movsi_internal}
     (nil))
(call_insn 47 46 48 6 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":396:21 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 48 47 118 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":396:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 118 48 119 6 (set (pc)
        (label_ref 55)) 807 {jump}
     (nil)
 -> 55)
(barrier 119 118 51)
(code_label 51 119 52 7 101 (nil) [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":398:19 75 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 110)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_23]+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":398:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(code_label 55 54 56 8 102 (nil) [3 uses])
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":392:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 58 57 59 9 100 (nil) [1 uses])
(note 59 58 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 59 64 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
            (const_int 3 [0x3]))) "fs/buffer.c":392:19 11 {*cmpsi_1}
     (nil))
(jump_insn 64 63 65 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/buffer.c":392:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 60)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 120 10 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":399:12 75 {*movsi_internal}
     (nil))
(jump_insn 120 66 121 10 (set (pc)
        (label_ref 106)) "fs/buffer.c":399:5 807 {jump}
     (nil)
 -> 106)
(barrier 121 120 108)
(code_label 108 121 69 11 107 (nil) [1 uses])
(note 69 108 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":400:11 75 {*movsi_internal}
     (nil))
(insn 71 70 72 11 (set (reg/f:SI 96 [ _14 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 111)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":400:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 72 71 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 96 [ _14 ])
            (const_int 0 [0]))) "fs/buffer.c":400:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (nil)))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "fs/buffer.c":400:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 102)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 12 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":401:9 75 {*movsi_internal}
     (nil))
(insn 76 75 77 12 (set (reg/f:SI 97 [ _15 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 112)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":401:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 77 76 78 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":401:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 78 77 79 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 97 [ _15 ])) "fs/buffer.c":401:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 79 78 80 12 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":401:9 812 {*call}
     (nil)
    (nil))
(insn 80 79 81 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":401:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 81 80 82 12 (set (reg:SI 113)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":402:15 75 {*movsi_internal}
     (nil))
(insn 82 81 83 12 (set (reg/f:SI 98 [ _16 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 113)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":402:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 83 82 84 12 (set (reg:QI 99 [ _17 ])
        (mem:QI (plus:SI (reg/f:SI 98 [ _16 ])
                (const_int 10 [0xa])) [0 _16->b_uptodate+0 S1 A16])) "fs/buffer.c":402:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98 [ _16 ])
        (nil)))
(insn 84 83 85 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ _17 ])
            (const_int 0 [0]))) "fs/buffer.c":402:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 99 [ _17 ])
        (nil)))
(jump_insn 85 84 86 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "fs/buffer.c":402:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 94)
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 13 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 88 87 89 13 (set (reg/f:SI 100 [ _18 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 114)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 89 88 90 13 (set (reg/f:SI 101 [ _19 ])
        (mem/f:SI (reg/f:SI 100 [ _18 ]) [3 _18->b_data+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100 [ _18 ])
        (nil)))
(insn 90 89 91 13 (set (reg:SI 102 [ _20 ])
        (reg/f:SI 101 [ _19 ])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
        (nil)))
(insn 91 90 92 13 (set (reg:SI 115)
        (const_int 256 [0x100])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 92 91 93 13 (set (reg:SI 116)
        (mem/c:SI (reg/f:SI 16 argp) [4 address+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 93 92 94 13 (parallel [
            (asm_operands/v ("cld
	rep
	movsl
	") ("") 0 [
                    (reg:SI 115)
                    (reg:SI 102 [ _20 ])
                    (reg:SI 116)
                ]
                 [
                    (asm_input:SI ("c") fs/buffer.c:403)
                    (asm_input:SI ("S") fs/buffer.c:403)
                    (asm_input:SI ("D") fs/buffer.c:403)
                ]
                 [] fs/buffer.c:403)
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":403:13 -1
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_DEAD (reg:SI 115)
            (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(code_label 94 93 95 14 106 (nil) [1 uses])
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/buffer.c":404:9 75 {*movsi_internal}
     (nil))
(insn 97 96 98 14 (set (reg/f:SI 103 [ _21 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 117)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":404:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 98 97 99 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":404:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 99 98 100 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 103 [ _21 ])) "fs/buffer.c":404:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 103 [ _21 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 100 99 101 14 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x3]  <function_decl 0x752d7c0f2f00 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":404:9 812 {*call}
     (nil)
    (nil))
(insn 101 100 102 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":404:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 102 101 103 15 105 (nil) [1 uses])
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":399:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 105 104 106 15 (parallel [
            (set (mem/c:SI (reg/f:SI 16 argp) [4 address+0 S4 A32])
                (plus:SI (mem/c:SI (reg/f:SI 16 argp) [4 address+0 S4 A32])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":399:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 106 105 107 16 104 (nil) [1 uses])
(note 107 106 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 107 112 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
            (const_int 3 [0x3]))) "fs/buffer.c":399:19 11 {*cmpsi_1}
     (nil))
(jump_insn 112 111 122 16 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "fs/buffer.c":399:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 108)
(note 122 112 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 113 18 (const_int 0 [0]) "fs/buffer.c":406:1 843 {nop}
     (nil))
(note 113 123 124 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 124 113 125 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 0 19 (const_int 0 [0]) "fs/buffer.c":406:1 843 {nop}
     (nil))
