
;; Function sys_read (sys_read, funcdef_no=1, decl_uid=1370, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 48:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 53:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 79:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 86:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 88:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 105:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 107:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 112:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 114:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 122:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 129:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 131:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 136:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 146
	 Choosing alt 0 in insn 146:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 158:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=143 from oldreg=110, assigning class GENERAL_REGS to r143
  158: {r143:SI=r143:SI-r112:SI;clobber flags:CC;}
      REG_DEAD r112:SI
      REG_DEAD r110:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  222: r143:SI=r110:SI
    Inserting insn reload after:
  223: r113:SI=r143:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 178:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 185:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 193:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6 7
EBB 8 9 10
EBB 11
EBB 12 13
EBB 14 15
EBB 16 17
EBB 18 19
EBB 20 21
EBB 22
EBB 23
EBB 24

********** Pseudo live ranges #1: **********

  BB 24
   Insn 202: point = 0, n_alt = -1
   Insn 201: point = 0, n_alt = -2
   Insn 197: point = 1, n_alt = -2
  BB 22
   Insn 218: point = 4, n_alt = -1
   Insn 179: point = 4, n_alt = -2
   Insn 178: point = 5, n_alt = 0
   Insn 177: point = 5, n_alt = 0
   Insn 176: point = 5, n_alt = -2
   Insn 175: point = 6, n_alt = 0
   Insn 174: point = 6, n_alt = 0
   Insn 173: point = 6, n_alt = 0
   Insn 172: point = 6, n_alt = 0
  BB 23
   Insn 194: point = 7, n_alt = 0
   Insn 193: point = 8, n_alt = 0
   Insn 192: point = 8, n_alt = 0
   Insn 191: point = 8, n_alt = -2
   Insn 190: point = 9, n_alt = 0
   Insn 189: point = 10, n_alt = 0
   Insn 188: point = 11, n_alt = 0
   Insn 187: point = 12, n_alt = 0
   Insn 186: point = 12, n_alt = 0
   Insn 185: point = 14, n_alt = 2
   Insn 184: point = 16, n_alt = 0
  BB 21
   Insn 216: point = 18, n_alt = -1
   Insn 167: point = 18, n_alt = 0
  BB 20
   Insn 165: point = 19, n_alt = -1
   Insn 164: point = 19, n_alt = 1
  BB 19
   Insn 159: point = 20, n_alt = 1
   Insn 223: point = 21, n_alt = -2
	Hard reg 0 is preferable by r143 with profit 1000
   Insn 158: point = 23, n_alt = 0
   Insn 222: point = 25, n_alt = -2
	Hard reg 0 is preferable by r143 with profit 1000
	Hard reg 1 is preferable by r143 with profit 1000
   Insn 157: point = 27, n_alt = -2
   Insn 156: point = 29, n_alt = 0
   Insn 155: point = 31, n_alt = 0
   Insn 154: point = 32, n_alt = 0
   Insn 153: point = 34, n_alt = 0
  BB 18
   Insn 151: point = 36, n_alt = -1
   Insn 150: point = 36, n_alt = 0
   Insn 149: point = 37, n_alt = 0
   Insn 148: point = 39, n_alt = 0
   Insn 147: point = 40, n_alt = -2
   Insn 146: point = 42, n_alt = 0
   Insn 145: point = 44, n_alt = 0
   Insn 144: point = 45, n_alt = 0
   Insn 143: point = 47, n_alt = 0
  BB 17
   Insn 140: point = 49, n_alt = -1
   Insn 139: point = 49, n_alt = 0
   Insn 138: point = 50, n_alt = 0
   Insn 137: point = 52, n_alt = 0
   Insn 136: point = 54, n_alt = 2
   Insn 135: point = 56, n_alt = 0
  BB 16
   Insn 133: point = 58, n_alt = -1
   Insn 132: point = 58, n_alt = 0
   Insn 131: point = 59, n_alt = 0
   Insn 130: point = 61, n_alt = 0
   Insn 129: point = 63, n_alt = 2
   Insn 128: point = 65, n_alt = 0
  BB 15
   Insn 214: point = 67, n_alt = -1
   Insn 123: point = 67, n_alt = -2
   Insn 122: point = 68, n_alt = 0
   Insn 121: point = 68, n_alt = 0
   Insn 120: point = 68, n_alt = -2
   Insn 119: point = 69, n_alt = 0
   Insn 118: point = 70, n_alt = 0
   Insn 117: point = 71, n_alt = 0
   Insn 116: point = 71, n_alt = 0
   Insn 115: point = 71, n_alt = 0
   Insn 114: point = 73, n_alt = 2
   Insn 113: point = 75, n_alt = 0
   Insn 112: point = 76, n_alt = 3
   Insn 111: point = 78, n_alt = 0
  BB 14
   Insn 109: point = 80, n_alt = -1
   Insn 108: point = 80, n_alt = 0
   Insn 107: point = 81, n_alt = 0
   Insn 106: point = 83, n_alt = 0
   Insn 105: point = 85, n_alt = 2
   Insn 104: point = 87, n_alt = 0
  BB 13
   Insn 212: point = 89, n_alt = -1
   Insn 99: point = 89, n_alt = -2
   Insn 98: point = 90, n_alt = 0
   Insn 97: point = 90, n_alt = 0
   Insn 96: point = 90, n_alt = -2
   Insn 95: point = 91, n_alt = 0
   Insn 94: point = 91, n_alt = 0
   Insn 93: point = 92, n_alt = 0
   Insn 92: point = 92, n_alt = 0
   Insn 91: point = 92, n_alt = 0
   Insn 90: point = 93, n_alt = 0
   Insn 89: point = 93, n_alt = 0
   Insn 88: point = 95, n_alt = 2
   Insn 87: point = 97, n_alt = 0
   Insn 86: point = 98, n_alt = 3
   Insn 85: point = 100, n_alt = 0
  BB 12
   Insn 83: point = 102, n_alt = -1
   Insn 82: point = 102, n_alt = 0
   Insn 81: point = 103, n_alt = 0
   Insn 80: point = 105, n_alt = 0
   Insn 79: point = 107, n_alt = 2
   Insn 78: point = 109, n_alt = 0
  BB 11
   Insn 210: point = 111, n_alt = -1
   Insn 71: point = 111, n_alt = 0
  BB 10
   Insn 208: point = 112, n_alt = -1
   Insn 66: point = 112, n_alt = -2
   Insn 65: point = 113, n_alt = 0
   Insn 64: point = 113, n_alt = 0
   Insn 63: point = 113, n_alt = -2
   Insn 62: point = 114, n_alt = 0
   Insn 61: point = 114, n_alt = 0
   Insn 60: point = 114, n_alt = 0
   Insn 59: point = 114, n_alt = 0
  BB 9
   Insn 57: point = 115, n_alt = -1
   Insn 56: point = 115, n_alt = 0
   Insn 55: point = 116, n_alt = 0
   Insn 54: point = 118, n_alt = 0
   Insn 53: point = 120, n_alt = 2
   Insn 52: point = 122, n_alt = 0
  BB 8
   Insn 50: point = 124, n_alt = -1
   Insn 49: point = 124, n_alt = 0
   Insn 48: point = 125, n_alt = 4
   Insn 47: point = 127, n_alt = 0
   Insn 46: point = 128, n_alt = 1
   Insn 45: point = 129, n_alt = 0
   Insn 44: point = 131, n_alt = 0
   Insn 43: point = 132, n_alt = 0
   Insn 42: point = 132, n_alt = 0
   Insn 41: point = 132, n_alt = -2
   Insn 40: point = 132, n_alt = 0
   Insn 39: point = 132, n_alt = 0
   Insn 38: point = 132, n_alt = 0
  BB 5
   Insn 204: point = 133, n_alt = -1
   Insn 25: point = 133, n_alt = 0
  BB 7
   Insn 206: point = 134, n_alt = -1
   Insn 33: point = 134, n_alt = 0
  BB 6
   Insn 31: point = 135, n_alt = -1
   Insn 30: point = 135, n_alt = 1
  BB 4
   Insn 22: point = 136, n_alt = -1
   Insn 21: point = 136, n_alt = 1
   Insn 20: point = 136, n_alt = 1
   Insn 19: point = 137, n_alt = 0
   Insn 18: point = 139, n_alt = 0
   Insn 17: point = 141, n_alt = 0
   Insn 16: point = 142, n_alt = 0
   Insn 15: point = 144, n_alt = 0
  BB 3
   Insn 13: point = 146, n_alt = -1
   Insn 12: point = 146, n_alt = 1
  BB 2
   Insn 8: point = 147, n_alt = -1
   Insn 7: point = 147, n_alt = 0
   Insn 220: point = 147, n_alt = 0
 r82: [135..147] [113..132] [90..110] [68..88] [19..66] [8..17] [5..6]
 r83: [138..142]
 r84: [124..125]
 r85: [119..120]
 r86: [117..118]
 r87: [115..116]
 r88: [106..107]
 r89: [104..105]
 r90: [102..103]
 r91: [92..98]
 r92: [94..95]
 r93: [91..93]
 r94: [84..85]
 r95: [82..83]
 r96: [80..81]
 r97: [70..76]
 r98: [72..73]
 r99: [69..71]
 r100: [62..63]
 r101: [60..61]
 r102: [58..59]
 r103: [53..54]
 r104: [51..52]
 r105: [49..50]
 r106: [43..45]
 r107: [41..42]
 r108: [36..40]
 r109: [36..37]
 r110: [26..32]
 r111: [28..29]
 r112: [24..27]
 r113: [20..21]
 r114: [13..14]
 r115: [11..12]
 r116: [133..134] [111..112] [89..89] [67..67] [18..18] [7..7] [2..4]
 r117: [0..1]
 r118: [143..144]
 r119: [138..139]
 r120: [140..141]
 r121: [136..137]
 r122: [130..131]
 r123: [128..129]
 r124: [126..127]
 r125: [121..122]
 r126: [108..109]
 r127: [99..100]
 r128: [96..97]
 r129: [86..87]
 r130: [77..78]
 r131: [74..75]
 r132: [64..65]
 r133: [55..56]
 r134: [46..47]
 r135: [43..44]
 r136: [38..39]
 r137: [33..34]
 r138: [30..31]
 r139: [15..16]
 r140: [9..10]
 r143: [22..25]
Compressing live ranges: from 148 to 116 - 78%
Ranges after the compression:
 r82: [108..115] [90..105] [72..87] [55..70] [16..53] [7..14] [4..5]
 r83: [110..113]
 r84: [98..99]
 r85: [94..95]
 r86: [92..93]
 r87: [90..91]
 r88: [84..85]
 r89: [82..83]
 r90: [80..81]
 r91: [72..77]
 r92: [74..75]
 r93: [72..73]
 r94: [67..68]
 r95: [65..66]
 r96: [63..64]
 r97: [55..60]
 r98: [57..58]
 r99: [55..56]
 r100: [50..51]
 r101: [48..49]
 r102: [46..47]
 r103: [42..43]
 r104: [40..41]
 r105: [38..39]
 r106: [34..35]
 r107: [32..33]
 r108: [28..31]
 r109: [28..29]
 r110: [20..25]
 r111: [22..23]
 r112: [18..21]
 r113: [16..17]
 r114: [11..12]
 r115: [9..10]
 r116: [106..107] [88..89] [71..71] [54..54] [15..15] [6..6] [2..3]
 r117: [0..1]
 r118: [114..115]
 r119: [110..111]
 r120: [112..113]
 r121: [108..109]
 r122: [104..105]
 r123: [102..103]
 r124: [100..101]
 r125: [96..97]
 r126: [86..87]
 r127: [78..79]
 r128: [76..77]
 r129: [69..70]
 r130: [61..62]
 r131: [59..60]
 r132: [52..53]
 r133: [44..45]
 r134: [36..37]
 r135: [34..35]
 r136: [30..31]
 r137: [26..27]
 r138: [24..25]
 r139: [13..14]
 r140: [7..8]
 r143: [18..19]

********** Assignment #1: **********

	 Assigning to 143 (cl=GENERAL_REGS, orig=110, freq=3000, tfirst=143, tfreq=3000)...
	   Assign 0 to reload r143 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 220
changing reg in insn 191
changing reg in insn 189
changing reg in insn 176
changing reg in insn 120
changing reg in insn 96
changing reg in insn 63
changing reg in insn 41
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 48
changing reg in insn 49
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 82
changing reg in insn 86
changing reg in insn 91
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 94
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 108
changing reg in insn 112
changing reg in insn 118
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 119
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 132
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 144
changing reg in insn 146
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 150
changing reg in insn 149
changing reg in insn 150
changing reg in insn 154
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 188
changing reg in insn 194
changing reg in insn 179
changing reg in insn 167
changing reg in insn 123
changing reg in insn 99
changing reg in insn 71
changing reg in insn 66
changing reg in insn 33
changing reg in insn 25
changing reg in insn 197
changing reg in insn 197
changing reg in insn 201
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 52
changing reg in insn 53
changing reg in insn 78
changing reg in insn 79
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 104
changing reg in insn 105
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 128
changing reg in insn 129
changing reg in insn 135
changing reg in insn 136
changing reg in insn 143
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 149
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 184
changing reg in insn 185
changing reg in insn 189
changing reg in insn 190
deleting insn with uid = 41.
deleting insn with uid = 63.
deleting insn with uid = 66.
deleting insn with uid = 96.
deleting insn with uid = 99.
deleting insn with uid = 120.
deleting insn with uid = 123.
deleting insn with uid = 223.
deleting insn with uid = 176.
deleting insn with uid = 179.
deleting insn with uid = 191.
deleting insn with uid = 197.
deleting insn with uid = 201.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 192.


sys_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={61d,51u} r1={14d,7u,1e} r2={8d,1u} r3={1d,8u} r7={31d,109u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={2e} r17={39d,12u} r18={6d} r19={2e} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 737{544d,188u,5e} in 135{129 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 220 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 220 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 220 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/read_write.c":25:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":25:8 806 {*jcc}
     (nil)
 -> 23)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 9 13 3 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":25:23 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":25:23 806 {*jcc}
     (nil)
 -> 23)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 0 ax [118])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7465dd52e120 current>)
                        ] UNSPEC_GOT))) [9  S4 A8])) "fs/read_write.c":25:55 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 0 ax [orig:83 current.0_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [118]) [8 current+0 S4 A32])) "fs/read_write.c":25:55 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:SI 1 dx [120])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 fd+0 S4 A32])) "fs/read_write.c":25:46 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 1 dx [119])
                (plus:SI (reg:SI 1 dx [120])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":25:46 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 0 ax [121])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [119])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:83 current.0_1 ] [83])) [5 current.0_1->filp[fd_39(D)]+0 S4 A32])) "fs/read_write.c":25:46 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])
        (reg/f:SI 0 ax [121])) "fs/read_write.c":25:46 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 file+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":25:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/read_write.c":25:36 806 {*jcc}
     (nil)
 -> 28)
(code_label 23 22 24 5 2 (nil) [2 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 204 5 (set (reg:SI 0 ax [orig:116 iftmp.1_36 ] [116])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":26:16 75 {*movsi_internal}
     (nil))
(jump_insn 204 25 205 5 (set (pc)
        (label_ref 195)) "fs/read_write.c":26:16 807 {jump}
     (nil)
 -> 195)
(barrier 205 204 28)
(code_label 28 205 29 6 3 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":27:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "fs/read_write.c":27:8 806 {*jcc}
     (nil)
 -> 36)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 206 7 (set (reg:SI 0 ax [orig:116 iftmp.1_36 ] [116])
        (const_int 0 [0])) "fs/read_write.c":28:16 75 {*movsi_internal}
     (nil))
(jump_insn 206 33 207 7 (set (pc)
        (label_ref 195)) "fs/read_write.c":28:16 807 {jump}
     (nil)
 -> 195)
(barrier 207 206 36)
(code_label 36 207 37 8 5 (nil) [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":29:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [6 count+0 S4 A32])) "fs/read_write.c":29:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 40 39 42 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [7 buf+0 S4 A32])) "fs/read_write.c":29:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 42 40 43 8 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x7465dd538500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "fs/read_write.c":29:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 43 42 44 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":29:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 43 45 8 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":30:11 75 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg/f:SI 0 ax [123])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [122])
                (const_int 8 [0x8])) [3 file_42->f_inode+0 S4 A32])) "fs/read_write.c":30:11 75 {*movsi_internal}
     (nil))
(insn 46 45 47 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])
        (reg/f:SI 0 ax [123])) "fs/read_write.c":30:11 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":31:14 75 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [124])
                (const_int 52 [0x34])) [0 inode_45->i_pipe+0 S1 A32])) "fs/read_write.c":31:14 77 {*movqi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/read_write.c":31:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "fs/read_write.c":31:8 806 {*jcc}
     (nil)
 -> 76)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":32:21 75 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (reg/f:SI 0 ax [125]) [2 file_42->f_mode+0 S2 A32])) "fs/read_write.c":32:21 76 {*movhi_internal}
     (nil))
(insn 54 53 55 9 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/read_write.c":32:30 144 {*zero_extendhisi2}
     (nil))
(insn 55 54 56 9 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (and:SI (reg:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":32:30 490 {*andsi_1}
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "fs/read_write.c":32:66 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/read_write.c":32:66 806 {*jcc}
     (nil)
 -> 69)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":32:37 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 60 59 61 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 count+0 S4 A32])) "fs/read_write.c":32:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 61 60 62 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 buf+0 S4 A32])) "fs/read_write.c":32:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 64 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [3 inode+0 S4 A32])) "fs/read_write.c":32:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 64 62 65 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("read_pipe") [flags 0x41]  <function_decl 0x7465dd538d00 read_pipe>) [0 read_pipe S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":32:37 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 65 64 208 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":32:37 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 208 65 209 10 (set (pc)
        (label_ref 195)) "fs/read_write.c":32:66 807 {jump}
     (nil)
 -> 195)
(barrier 209 208 69)
(code_label 69 209 70 11 7 (nil) [1 uses])
(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 210 11 (set (reg:SI 0 ax [orig:116 iftmp.1_36 ] [116])
        (const_int -5 [0xfffffffffffffffb])) "fs/read_write.c":32:66 75 {*movsi_internal}
     (nil))
(jump_insn 210 71 211 11 (set (pc)
        (label_ref 195)) "fs/read_write.c":32:66 807 {jump}
     (nil)
 -> 195)
(barrier 211 210 76)
(code_label 76 211 77 12 6 (nil) [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 12 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":33:9 75 {*movsi_internal}
     (nil))
(insn 79 78 80 12 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (reg/f:SI 0 ax [126]) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":33:9 76 {*movhi_internal}
     (nil))
(insn 80 79 81 12 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 0 ax [orig:88 _6 ] [88]))) "fs/read_write.c":33:9 144 {*zero_extendhisi2}
     (nil))
(insn 81 80 82 12 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (and:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":33:9 490 {*andsi_1}
     (nil))
(insn 82 81 83 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 _8 ] [90])
            (const_int 8192 [0x2000]))) "fs/read_write.c":33:8 11 {*cmpsi_1}
     (nil))
(jump_insn 83 82 84 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "fs/read_write.c":33:8 806 {*jcc}
     (nil)
 -> 102)
(note 84 83 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 13 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":34:16 75 {*movsi_internal}
     (nil))
(insn 86 85 87 13 (parallel [
            (set (reg/f:SI 1 dx [orig:91 _9 ] [91])
                (plus:SI (reg/f:SI 0 ax [127])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":34:16 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 87 86 88 13 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":34:43 75 {*movsi_internal}
     (nil))
(insn 88 87 89 13 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [128])
                (const_int 14 [0xe])) [2 inode_45->i_zone[0]+0 S2 A16])) "fs/read_write.c":34:43 76 {*movhi_internal}
     (nil))
(insn 89 88 90 13 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (zero_extend:SI (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/read_write.c":34:16 144 {*zero_extendhisi2}
     (nil))
(insn 90 89 91 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":34:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 91 90 92 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 1 dx [orig:91 _9 ] [91])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 92 91 93 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 count+0 S4 A32])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 93 92 94 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [7 buf+0 S4 A32])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 94 93 95 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:93 _11 ] [93])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 95 94 97 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 0 [0])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 97 95 98 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_char") [flags 0x41]  <function_decl 0x7465dd538e00 rw_char>) [0 rw_char S1 A8])
            (const_int 32 [0x20]))) "fs/read_write.c":34:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 98 97 212 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":34:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 212 98 213 13 (set (pc)
        (label_ref 195)) "fs/read_write.c":34:16 807 {jump}
     (nil)
 -> 195)
(barrier 213 212 102)
(code_label 102 213 103 14 9 (nil) [1 uses])
(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 14 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":35:9 75 {*movsi_internal}
     (nil))
(insn 105 104 106 14 (set (reg:HI 0 ax [orig:94 _12 ] [94])
        (mem:HI (reg/f:SI 0 ax [129]) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":35:9 76 {*movhi_internal}
     (nil))
(insn 106 105 107 14 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (zero_extend:SI (reg:HI 0 ax [orig:94 _12 ] [94]))) "fs/read_write.c":35:9 144 {*zero_extendhisi2}
     (nil))
(insn 107 106 108 14 (parallel [
            (set (reg:SI 0 ax [orig:96 _14 ] [96])
                (and:SI (reg:SI 0 ax [orig:95 _13 ] [95])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":35:9 490 {*andsi_1}
     (nil))
(insn 108 107 109 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 _14 ] [96])
            (const_int 24576 [0x6000]))) "fs/read_write.c":35:8 11 {*cmpsi_1}
     (nil))
(jump_insn 109 108 110 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "fs/read_write.c":35:8 806 {*jcc}
     (nil)
 -> 126)
(note 110 109 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 15 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":37:48 75 {*movsi_internal}
     (nil))
(insn 112 111 113 15 (parallel [
            (set (reg/f:SI 1 dx [orig:97 _15 ] [97])
                (plus:SI (reg/f:SI 0 ax [130])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":37:48 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 113 112 114 15 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":36:40 75 {*movsi_internal}
     (nil))
(insn 114 113 115 15 (set (reg:HI 0 ax [orig:98 _16 ] [98])
        (mem:HI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 14 [0xe])) [2 inode_45->i_zone[0]+0 S2 A16])) "fs/read_write.c":36:40 76 {*movhi_internal}
     (nil))
(insn 115 114 116 15 (set (reg:SI 0 ax [orig:99 _17 ] [99])
        (zero_extend:SI (reg:HI 0 ax [orig:98 _16 ] [98]))) "fs/read_write.c":36:16 144 {*zero_extendhisi2}
     (nil))
(insn 116 115 117 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 count+0 S4 A32])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 117 116 118 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [7 buf+0 S4 A32])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 118 117 119 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 1 dx [orig:97 _15 ] [97])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 119 118 121 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:99 _17 ] [99])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 121 119 122 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("block_read") [flags 0x41]  <function_decl 0x7465dd538a00 block_read>) [0 block_read S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":36:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 122 121 214 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":36:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 214 122 215 15 (set (pc)
        (label_ref 195)) "fs/read_write.c":36:16 807 {jump}
     (nil)
 -> 195)
(barrier 215 214 126)
(code_label 126 215 127 16 10 (nil) [1 uses])
(note 127 126 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 16 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":38:9 75 {*movsi_internal}
     (nil))
(insn 129 128 130 16 (set (reg:HI 0 ax [orig:100 _18 ] [100])
        (mem:HI (reg/f:SI 0 ax [132]) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":38:9 76 {*movhi_internal}
     (nil))
(insn 130 129 131 16 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (zero_extend:SI (reg:HI 0 ax [orig:100 _18 ] [100]))) "fs/read_write.c":38:9 144 {*zero_extendhisi2}
     (nil))
(insn 131 130 132 16 (parallel [
            (set (reg:SI 0 ax [orig:102 _20 ] [102])
                (and:SI (reg:SI 0 ax [orig:101 _19 ] [101])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":38:9 490 {*andsi_1}
     (nil))
(insn 132 131 133 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:102 _20 ] [102])
            (const_int 16384 [0x4000]))) "fs/read_write.c":38:8 11 {*cmpsi_1}
     (nil))
(jump_insn 133 132 134 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) "fs/read_write.c":38:8 806 {*jcc}
     (nil)
 -> 141)
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 17 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":38:35 75 {*movsi_internal}
     (nil))
(insn 136 135 137 17 (set (reg:HI 0 ax [orig:103 _21 ] [103])
        (mem:HI (reg/f:SI 0 ax [133]) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":38:35 76 {*movhi_internal}
     (nil))
(insn 137 136 138 17 (set (reg:SI 0 ax [orig:104 _22 ] [104])
        (zero_extend:SI (reg:HI 0 ax [orig:103 _21 ] [103]))) "fs/read_write.c":38:35 144 {*zero_extendhisi2}
     (nil))
(insn 138 137 139 17 (parallel [
            (set (reg:SI 0 ax [orig:105 _23 ] [105])
                (and:SI (reg:SI 0 ax [orig:104 _22 ] [104])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":38:35 490 {*andsi_1}
     (nil))
(insn 139 138 140 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:105 _23 ] [105])
            (const_int 32768 [0x8000]))) "fs/read_write.c":38:32 11 {*cmpsi_1}
     (nil))
(jump_insn 140 139 141 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "fs/read_write.c":38:32 806 {*jcc}
     (nil)
 -> 182)
(code_label 141 140 142 18 11 (nil) [1 uses])
(note 142 141 143 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 18 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":39:25 75 {*movsi_internal}
     (nil))
(insn 144 143 145 18 (set (reg:SI 1 dx [orig:106 _24 ] [106])
        (mem:SI (plus:SI (reg/f:SI 0 ax [134])
                (const_int 12 [0xc])) [4 file_42->f_pos+0 S4 A32])) "fs/read_write.c":39:25 75 {*movsi_internal}
     (nil))
(insn 145 144 146 18 (set (reg:SI 0 ax [135])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 count+0 S4 A32])) "fs/read_write.c":39:19 75 {*movsi_internal}
     (nil))
(insn 146 145 147 18 (parallel [
            (set (reg:SI 0 ax [orig:107 _25 ] [107])
                (plus:SI (reg:SI 0 ax [135])
                    (reg:SI 1 dx [orig:106 _24 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":39:19 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:106 _24 ] [106])
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 count+0 S4 A32]))
        (nil)))
(insn 147 146 148 18 (set (reg:SI 1 dx [orig:108 _26 ] [108])
        (reg:SI 0 ax [orig:107 _25 ] [107])) "fs/read_write.c":39:19 75 {*movsi_internal}
     (nil))
(insn 148 147 149 18 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":39:40 75 {*movsi_internal}
     (nil))
(insn 149 148 150 18 (set (reg:SI 0 ax [orig:109 _27 ] [109])
        (mem:SI (plus:SI (reg/f:SI 0 ax [136])
                (const_int 4 [0x4])) [4 inode_45->i_size+0 S4 A32])) "fs/read_write.c":39:40 75 {*movsi_internal}
     (nil))
(insn 150 149 151 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:108 _26 ] [108])
            (reg:SI 0 ax [orig:109 _27 ] [109]))) "fs/read_write.c":39:12 11 {*cmpsi_1}
     (nil))
(jump_insn 151 150 152 18 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "fs/read_write.c":39:12 806 {*jcc}
     (nil)
 -> 160)
(note 152 151 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 19 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":40:26 75 {*movsi_internal}
     (nil))
(insn 154 153 155 19 (set (reg:SI 1 dx [orig:110 _28 ] [110])
        (mem:SI (plus:SI (reg/f:SI 0 ax [137])
                (const_int 4 [0x4])) [4 inode_45->i_size+0 S4 A32])) "fs/read_write.c":40:26 75 {*movsi_internal}
     (nil))
(insn 155 154 156 19 (set (reg/f:SI 0 ax [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":40:41 75 {*movsi_internal}
     (nil))
(insn 156 155 157 19 (set (reg:SI 0 ax [orig:111 _29 ] [111])
        (mem:SI (plus:SI (reg/f:SI 0 ax [138])
                (const_int 12 [0xc])) [4 file_42->f_pos+0 S4 A32])) "fs/read_write.c":40:41 75 {*movsi_internal}
     (nil))
(insn 157 156 222 19 (set (reg:SI 2 cx [orig:112 _30 ] [112])
        (reg:SI 0 ax [orig:111 _29 ] [111])) "fs/read_write.c":40:41 75 {*movsi_internal}
     (nil))
(insn 222 157 158 19 (set (reg:SI 0 ax [orig:110 _28 ] [110])
        (reg:SI 1 dx [orig:110 _28 ] [110])) "fs/read_write.c":40:35 75 {*movsi_internal}
     (nil))
(insn 158 222 159 19 (parallel [
            (set (reg:SI 0 ax [orig:110 _28 ] [110])
                (minus:SI (reg:SI 0 ax [orig:110 _28 ] [110])
                    (reg:SI 2 cx [orig:112 _30 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":40:35 282 {*subsi_1}
     (nil))
(insn 159 158 160 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 count+0 S4 A32])
        (reg:SI 0 ax [orig:113 _31 ] [113])) "fs/read_write.c":40:19 75 {*movsi_internal}
     (nil))
(code_label 160 159 161 20 13 (nil) [1 uses])
(note 161 160 164 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 164 161 165 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":41:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 165 164 166 20 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "fs/read_write.c":41:12 806 {*jcc}
     (nil)
 -> 170)
(note 166 165 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 216 21 (set (reg:SI 0 ax [orig:116 iftmp.1_36 ] [116])
        (const_int 0 [0])) "fs/read_write.c":42:20 75 {*movsi_internal}
     (nil))
(jump_insn 216 167 217 21 (set (pc)
        (label_ref 195)) "fs/read_write.c":42:20 807 {jump}
     (nil)
 -> 195)
(barrier 217 216 170)
(code_label 170 217 171 22 14 (nil) [1 uses])
(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 22 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 count+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 173 172 174 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [7 buf+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 174 173 175 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [5 file+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 175 174 177 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [3 inode+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 177 175 178 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("file_read") [flags 0x41]  <function_decl 0x7465dd538f00 file_read>) [0 file_read S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":43:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 178 177 218 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":43:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 218 178 219 22 (set (pc)
        (label_ref 195)) "fs/read_write.c":43:16 807 {jump}
     (nil)
 -> 195)
(barrier 219 218 182)
(code_label 182 219 183 23 12 (nil) [1 uses])
(note 183 182 184 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 23 (set (reg/f:SI 0 ax [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":45:49 75 {*movsi_internal}
     (nil))
(insn 185 184 186 23 (set (reg:HI 0 ax [orig:114 _32 ] [114])
        (mem:HI (reg/f:SI 0 ax [139]) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":45:49 76 {*movhi_internal}
     (nil))
(insn 186 185 187 23 (set (reg:SI 0 ax [orig:115 _33 ] [115])
        (zero_extend:SI (reg:HI 0 ax [orig:114 _32 ] [114]))) "fs/read_write.c":45:5 144 {*zero_extendhisi2}
     (nil))
(insn 187 186 188 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":45:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 188 187 189 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:115 _33 ] [115])) "fs/read_write.c":45:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 189 188 190 23 (set (reg/f:SI 0 ax [140])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7465dd52e2d0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/read_write.c":45:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7465dd52e2d0 *.LC0>)
        (nil)))
(insn 190 189 192 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [140])) "fs/read_write.c":45:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 192 190 193 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7465dd538900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":45:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 193 192 194 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":45:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 194 193 195 23 (set (reg:SI 0 ax [orig:116 iftmp.1_36 ] [116])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":46:12 75 {*movsi_internal}
     (nil))
(code_label 195 194 196 24 4 (nil) [8 uses])
(note 196 195 202 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 202 196 221 24 (use (reg/i:SI 0 ax)) "fs/read_write.c":47:1 -1
     (nil))
(note 221 202 0 NOTE_INSN_DELETED)

;; Function sys_lseek (sys_lseek, funcdef_no=2, decl_uid=1377, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 33:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 48:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 95
	 Choosing alt 0 in insn 95:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 120
	 Choosing alt 0 in insn 120:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7
EBB 8 9
EBB 10 11 12 13 14
EBB 15 16
EBB 17
EBB 18 19
EBB 20
EBB 21 22
EBB 23
EBB 24
EBB 25
EBB 26

********** Pseudo live ranges #1: **********

  BB 26
   Insn 153: point = 0, n_alt = -1
   Insn 152: point = 0, n_alt = -2
   Insn 148: point = 1, n_alt = -2
  BB 24
   Insn 174: point = 4, n_alt = -1
   Insn 139: point = 4, n_alt = 0
  BB 14
   Insn 160: point = 5, n_alt = -1
  BB 22
   Insn 170: point = 5, n_alt = -1
   Insn 127: point = 5, n_alt = 0
  BB 19
   Insn 166: point = 6, n_alt = -1
   Insn 101: point = 6, n_alt = 0
  BB 16
   Insn 162: point = 7, n_alt = -1
   Insn 80: point = 7, n_alt = 0
  BB 9
   Insn 157: point = 8, n_alt = -1
   Insn 52: point = 8, n_alt = 0
  BB 7
   Insn 155: point = 9, n_alt = -1
   Insn 41: point = 9, n_alt = 0
  BB 25
   Insn 145: point = 10, n_alt = 0
   Insn 144: point = 12, n_alt = 0
  BB 23
   Insn 172: point = 13, n_alt = -1
   Insn 134: point = 13, n_alt = 1
   Insn 133: point = 14, n_alt = 0
   Insn 132: point = 15, n_alt = 0
  BB 21
   Insn 125: point = 16, n_alt = -1
   Insn 124: point = 16, n_alt = 1
   Insn 121: point = 16, n_alt = 1
   Insn 120: point = 17, n_alt = 0
   Insn 119: point = 19, n_alt = 0
   Insn 118: point = 20, n_alt = 0
   Insn 117: point = 22, n_alt = 0
   Insn 116: point = 24, n_alt = 0
  BB 17
   Insn 164: point = 25, n_alt = -1
   Insn 87: point = 25, n_alt = 1
   Insn 86: point = 26, n_alt = 0
   Insn 85: point = 27, n_alt = 0
  BB 15
   Insn 78: point = 28, n_alt = -1
   Insn 77: point = 28, n_alt = 1
  BB 20
   Insn 168: point = 28, n_alt = -1
   Insn 111: point = 28, n_alt = 1
   Insn 110: point = 29, n_alt = 0
   Insn 109: point = 30, n_alt = 0
   Insn 108: point = 32, n_alt = 0
   Insn 107: point = 33, n_alt = 0
   Insn 106: point = 35, n_alt = 0
  BB 18
   Insn 99: point = 36, n_alt = -1
   Insn 98: point = 36, n_alt = 0
   Insn 95: point = 37, n_alt = 0
   Insn 94: point = 39, n_alt = 0
   Insn 93: point = 40, n_alt = 0
   Insn 92: point = 42, n_alt = 0
  BB 13
   Insn 69: point = 43, n_alt = -1
   Insn 68: point = 43, n_alt = 0
  BB 12
   Insn 66: point = 43, n_alt = -1
   Insn 65: point = 43, n_alt = 1
  BB 11
   Insn 63: point = 43, n_alt = -1
   Insn 62: point = 43, n_alt = 0
  BB 10
   Insn 58: point = 43, n_alt = -1
   Insn 57: point = 43, n_alt = 0
  BB 8
   Insn 50: point = 43, n_alt = -1
   Insn 49: point = 43, n_alt = 0
   Insn 48: point = 44, n_alt = 4
   Insn 47: point = 46, n_alt = 0
   Insn 46: point = 48, n_alt = 0
  BB 6
   Insn 38: point = 49, n_alt = -1
   Insn 37: point = 49, n_alt = 0
   Insn 34: point = 50, n_alt = 0
   Insn 33: point = 52, n_alt = 2
   Insn 32: point = 54, n_alt = 0
   Insn 31: point = 56, n_alt = 0
  BB 5
   Insn 29: point = 57, n_alt = -1
   Insn 28: point = 57, n_alt = 0
   Insn 27: point = 58, n_alt = 0
   Insn 26: point = 60, n_alt = 2
   Insn 25: point = 62, n_alt = 0
   Insn 24: point = 64, n_alt = 0
  BB 4
   Insn 22: point = 65, n_alt = -1
   Insn 21: point = 65, n_alt = 0
   Insn 20: point = 66, n_alt = 0
   Insn 19: point = 68, n_alt = 0
  BB 3
   Insn 17: point = 69, n_alt = -1
   Insn 16: point = 69, n_alt = 1
   Insn 15: point = 69, n_alt = 1
   Insn 14: point = 70, n_alt = 0
   Insn 13: point = 72, n_alt = 0
   Insn 12: point = 74, n_alt = 0
   Insn 11: point = 75, n_alt = 0
   Insn 10: point = 77, n_alt = 0
  BB 2
   Insn 8: point = 80, n_alt = -1
   Insn 7: point = 80, n_alt = 0
   Insn 176: point = 80, n_alt = 0
 r82: [78..80]
 r83: [71..75]
 r84: [65..66]
 r85: [61..62]
 r86: [59..60]
 r87: [57..58]
 r88: [53..54]
 r89: [51..52]
 r90: [49..50]
 r91: [45..46]
 r92: [43..44]
 r93: [38..40]
 r94: [36..37]
 r95: [31..33]
 r96: [28..30]
 r97: [21..22]
 r98: [18..20]
 r99: [18..19]
 r100: [16..17]
 r101: [2..10]
 r102: [0..1]
 r103: [76..77]
 r104: [71..72]
 r105: [73..74]
 r106: [69..70]
 r107: [67..68]
 r108: [63..64]
 r109: [55..56]
 r110: [47..48]
 r111: [25..27]
 r112: [25..26]
 r113: [41..42]
 r114: [38..39]
 r115: [34..35]
 r116: [31..32]
 r117: [28..29]
 r118: [23..24]
 r119: [13..15]
 r120: [13..14]
 r121: [11..12]
Compressing live ranges: from 81 to 66 - 81%
Ranges after the compression:
 r82: [64..65]
 r83: [58..61]
 r84: [52..53]
 r85: [48..49]
 r86: [46..47]
 r87: [44..45]
 r88: [40..41]
 r89: [38..39]
 r90: [36..37]
 r91: [32..33]
 r92: [30..31]
 r93: [26..27]
 r94: [24..25]
 r95: [20..21]
 r96: [18..19]
 r97: [12..13]
 r98: [10..11]
 r99: [10..11]
 r100: [8..9]
 r101: [2..3]
 r102: [0..1]
 r103: [62..63]
 r104: [58..59]
 r105: [60..61]
 r106: [56..57]
 r107: [54..55]
 r108: [50..51]
 r109: [42..43]
 r110: [34..35]
 r111: [16..17]
 r112: [16..17]
 r113: [28..29]
 r114: [26..27]
 r115: [22..23]
 r116: [20..21]
 r117: [18..19]
 r118: [14..15]
 r119: [6..7]
 r120: [6..7]
 r121: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 176
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 20
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 37
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 93
changing reg in insn 95
changing reg in insn 95
changing reg in insn 98
changing reg in insn 107
changing reg in insn 109
changing reg in insn 109
changing reg in insn 109
changing reg in insn 111
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 145
changing reg in insn 139
changing reg in insn 127
changing reg in insn 101
changing reg in insn 80
changing reg in insn 52
changing reg in insn 41
changing reg in insn 148
changing reg in insn 148
changing reg in insn 152
changing reg in insn 10
changing reg in insn 11
changing reg in insn 13
changing reg in insn 14
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
changing reg in insn 31
changing reg in insn 32
changing reg in insn 46
changing reg in insn 47
changing reg in insn 85
changing reg in insn 87
changing reg in insn 86
changing reg in insn 87
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 116
changing reg in insn 117
changing reg in insn 132
changing reg in insn 134
changing reg in insn 133
changing reg in insn 134
changing reg in insn 144
changing reg in insn 145
deleting insn with uid = 148.
deleting insn with uid = 152.
starting the processing of deferred insns
ending the processing of deferred insns


sys_lseek

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={38d,32u} r1={9d,8u,2e} r2={1d} r7={1d,53u} r16={3e} r17={20d,13u} 
;;    total ref usage 180{69d,106u,5e} in 87{87 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 176 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 176 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 176 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/read_write.c":54:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":54:8 806 {*jcc}
     (nil)
 -> 39)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 0 ax [103])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7465dd52e120 current>)
                        ] UNSPEC_GOT))) [9  S4 A8])) "fs/read_write.c":54:42 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 0 ax [orig:83 current.2_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [103]) [8 current+0 S4 A32])) "fs/read_write.c":54:42 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:SI 1 dx [105])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 fd+0 S4 A32])) "fs/read_write.c":54:33 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 1 dx [104])
                (plus:SI (reg:SI 1 dx [105])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":54:33 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 14 13 15 3 (set (reg/f:SI 0 ax [106])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [104])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:83 current.2_1 ] [83])) [5 current.2_1->filp[fd_22(D)]+0 S4 A32])) "fs/read_write.c":54:33 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])
        (reg/f:SI 0 ax [106])) "fs/read_write.c":54:33 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 file+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":54:23 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":54:23 806 {*jcc}
     (nil)
 -> 39)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":54:63 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":54:63 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/read_write.c":54:54 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":54:54 806 {*jcc}
     (nil)
 -> 39)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:HI 0 ax [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:85 _3 ] [85])
                (const_int 44 [0x2c])) [2 _3->i_dev+0 S2 A32])) "fs/read_write.c":55:13 76 {*movhi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:HI 0 ax [orig:87 _5 ] [87])
                (lshiftrt:HI (reg:HI 0 ax [orig:86 _4 ] [86])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":55:13 711 {*lshrhi3_1}
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "fs/read_write.c":55:9 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":55:9 806 {*jcc}
     (nil)
 -> 39)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg/f:SI 0 ax [orig:88 _6 ] [88])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [109])
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:88 _6 ] [88])
                (const_int 44 [0x2c])) [2 _6->i_dev+0 S2 A32])) "fs/read_write.c":55:13 76 {*movhi_internal}
     (nil))
(insn 34 33 37 6 (parallel [
            (set (reg:HI 0 ax [orig:90 _8 ] [90])
                (lshiftrt:HI (reg:HI 0 ax [orig:89 _7 ] [89])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":55:13 711 {*lshrhi3_1}
     (nil))
(insn 37 34 38 6 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 0 ax [orig:90 _8 ] [90])
            (const_int 3 [0x3]))) "fs/read_write.c":55:12 10 {*cmphi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/read_write.c":55:12 806 {*jcc}
     (nil)
 -> 44)
(code_label 39 38 40 7 16 (nil) [4 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 155 7 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -9 [0xfffffffffffffff7])) "fs/read_write.c":56:16 75 {*movsi_internal}
     (nil))
(jump_insn 155 41 156 7 (set (pc)
        (label_ref 146)) "fs/read_write.c":56:16 807 {jump}
     (nil)
 -> 146)
(barrier 156 155 44)
(code_label 44 156 45 8 17 (nil) [1 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":57:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (set (reg/f:SI 0 ax [orig:91 _9 ] [91])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":57:13 75 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:QI 0 ax [orig:92 _10 ] [92])
        (mem:QI (plus:SI (reg/f:SI 0 ax [orig:91 _9 ] [91])
                (const_int 52 [0x34])) [0 _9->i_pipe+0 S1 A32])) "fs/read_write.c":57:22 77 {*movqi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:92 _10 ] [92])
            (const_int 0 [0]))) "fs/read_write.c":57:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/read_write.c":57:8 806 {*jcc}
     (nil)
 -> 55)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 157 9 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -29 [0xffffffffffffffe3])) "fs/read_write.c":58:16 75 {*movsi_internal}
     (nil))
(jump_insn 157 52 158 9 (set (pc)
        (label_ref 146)) "fs/read_write.c":58:16 807 {jump}
     (nil)
 -> 146)
(barrier 158 157 55)
(code_label 55 158 56 10 19 (nil) [1 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [6 origin+0 S4 A32])
            (const_int 2 [0x2]))) "fs/read_write.c":59:5 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 59 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (nil)
 -> 114)
(note 59 58 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 59 63 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [6 origin+0 S4 A32])
            (const_int 2 [0x2]))) "fs/read_write.c":59:5 11 {*cmpsi_1}
     (nil))
(jump_insn 63 62 64 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (nil)
 -> 137)
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [6 origin+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":59:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 66 65 67 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (nil)
 -> 73)
(note 67 66 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [6 origin+0 S4 A32])
            (const_int 1 [0x1]))) "fs/read_write.c":59:5 11 {*cmpsi_1}
     (nil))
(jump_insn 69 68 159 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (nil)
 -> 90)
(note 159 69 160 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 160 159 161 14 (set (pc)
        (label_ref 137)) "fs/read_write.c":59:5 807 {jump}
     (nil)
 -> 137)
(barrier 161 160 73)
(code_label 73 161 74 15 22 (nil) [1 uses])
(note 74 73 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 74 78 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [4 offset+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":61:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 78 77 79 15 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "fs/read_write.c":61:12 806 {*jcc}
     (nil)
 -> 83)
(note 79 78 80 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 162 16 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":62:20 75 {*movsi_internal}
     (nil))
(jump_insn 162 80 163 16 (set (pc)
        (label_ref 146)) "fs/read_write.c":62:20 807 {jump}
     (nil)
 -> 146)
(barrier 163 162 83)
(code_label 83 163 84 17 24 (nil) [1 uses])
(note 84 83 85 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 17 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":63:21 75 {*movsi_internal}
     (nil))
(insn 86 85 87 17 (set (reg:SI 1 dx [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [4 offset+0 S4 A32])) "fs/read_write.c":63:21 75 {*movsi_internal}
     (nil))
(insn 87 86 164 17 (set (mem:SI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])
        (reg:SI 1 dx [112])) "fs/read_write.c":63:21 75 {*movsi_internal}
     (nil))
(jump_insn 164 87 165 17 (set (pc)
        (label_ref 142)) "fs/read_write.c":64:9 807 {jump}
     (nil)
 -> 142)
(barrier 165 164 90)
(code_label 90 165 91 18 23 (nil) [1 uses])
(note 91 90 92 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 18 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":66:17 75 {*movsi_internal}
     (nil))
(insn 93 92 94 18 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (mem:SI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])) "fs/read_write.c":66:17 75 {*movsi_internal}
     (nil))
(insn 94 93 95 18 (set (reg:SI 0 ax [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [4 offset+0 S4 A32])) "fs/read_write.c":66:25 75 {*movsi_internal}
     (nil))
(insn 95 94 98 18 (parallel [
            (set (reg:SI 0 ax [orig:94 _12 ] [94])
                (plus:SI (reg:SI 0 ax [114])
                    (reg:SI 1 dx [orig:93 _11 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":66:25 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:93 _11 ] [93])
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [4 offset+0 S4 A32]))
        (nil)))
(insn 98 95 99 18 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:94 _12 ] [94])
            (const_int 0 [0]))) "fs/read_write.c":66:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 99 98 100 18 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "fs/read_write.c":66:12 806 {*jcc}
     (nil)
 -> 104)
(note 100 99 101 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 166 19 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":67:20 75 {*movsi_internal}
     (nil))
(jump_insn 166 101 167 19 (set (pc)
        (label_ref 146)) "fs/read_write.c":67:20 807 {jump}
     (nil)
 -> 146)
(barrier 167 166 104)
(code_label 104 167 105 20 26 (nil) [1 uses])
(note 105 104 106 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 20 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(insn 107 106 108 20 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (mem:SI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(insn 108 107 109 20 (set (reg:SI 0 ax [116])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [4 offset+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(insn 109 108 110 20 (parallel [
            (set (reg:SI 1 dx [orig:96 _14 ] [96])
                (plus:SI (reg:SI 1 dx [orig:95 _13 ] [95])
                    (reg:SI 0 ax [116])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":68:21 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:95 _13 ] [95])
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [4 offset+0 S4 A32]))
        (nil)))
(insn 110 109 111 20 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(insn 111 110 168 20 (set (mem:SI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])
        (reg:SI 1 dx [orig:96 _14 ] [96])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(jump_insn 168 111 169 20 (set (pc)
        (label_ref 142)) "fs/read_write.c":69:9 807 {jump}
     (nil)
 -> 142)
(barrier 169 168 114)
(code_label 114 169 115 21 20 (nil) [1 uses])
(note 115 114 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 21 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":71:24 75 {*movsi_internal}
     (nil))
(insn 117 116 118 21 (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":71:24 75 {*movsi_internal}
     (nil))
(insn 118 117 119 21 (set (reg:SI 1 dx [orig:98 _16 ] [98])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:97 _15 ] [97])
                (const_int 4 [0x4])) [4 _15->i_size+0 S4 A32])) "fs/read_write.c":71:33 75 {*movsi_internal}
     (nil))
(insn 119 118 120 21 (set (reg:SI 0 ax [orig:99 offset.3_17 ] [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [4 offset+0 S4 A32])) "fs/read_write.c":71:42 75 {*movsi_internal}
     (nil))
(insn 120 119 121 21 (parallel [
            (set (reg:SI 0 ax [orig:100 _18 ] [100])
                (plus:SI (reg:SI 0 ax [orig:99 offset.3_17 ] [99])
                    (reg:SI 1 dx [orig:98 _16 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":71:42 209 {*addsi_1}
     (nil))
(insn 121 120 124 21 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 tmp+0 S4 A32])
        (reg:SI 0 ax [orig:100 _18 ] [100])) "fs/read_write.c":71:18 75 {*movsi_internal}
     (nil))
(insn 124 121 125 21 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":71:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 125 124 126 21 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) "fs/read_write.c":71:12 806 {*jcc}
     (nil)
 -> 130)
(note 126 125 127 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 170 22 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":72:20 75 {*movsi_internal}
     (nil))
(jump_insn 170 127 171 22 (set (pc)
        (label_ref 146)) "fs/read_write.c":72:20 807 {jump}
     (nil)
 -> 146)
(barrier 171 170 130)
(code_label 130 171 131 23 27 (nil) [1 uses])
(note 131 130 132 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 23 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":73:21 75 {*movsi_internal}
     (nil))
(insn 133 132 134 23 (set (reg:SI 1 dx [120])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 tmp+0 S4 A32])) "fs/read_write.c":73:21 75 {*movsi_internal}
     (nil))
(insn 134 133 172 23 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])
        (reg:SI 1 dx [120])) "fs/read_write.c":73:21 75 {*movsi_internal}
     (nil))
(jump_insn 172 134 173 23 (set (pc)
        (label_ref 142)) "fs/read_write.c":74:9 807 {jump}
     (nil)
 -> 142)
(barrier 173 172 137)
(code_label 137 173 138 24 21 (nil) [2 uses])
(note 138 137 139 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 174 24 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":76:16 75 {*movsi_internal}
     (nil))
(jump_insn 174 139 175 24 (set (pc)
        (label_ref 146)) "fs/read_write.c":76:16 807 {jump}
     (nil)
 -> 146)
(barrier 175 174 142)
(code_label 142 175 143 25 25 (nil) [3 uses])
(note 143 142 144 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 25 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":78:16 75 {*movsi_internal}
     (nil))
(insn 145 144 146 25 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (mem:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])) "fs/read_write.c":78:16 75 {*movsi_internal}
     (nil))
(code_label 146 145 147 26 18 (nil) [6 uses])
(note 147 146 153 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 153 147 177 26 (use (reg/i:SI 0 ax)) "fs/read_write.c":79:1 -1
     (nil))
(note 177 153 0 NOTE_INSN_DELETED)

;; Function sys_write (sys_write, funcdef_no=3, decl_uid=1389, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 42:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 73:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 80:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 82:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 99:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 101:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 106:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 108:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 123:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 125:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 135:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 142:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 150:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6 7
EBB 8 9 10
EBB 11
EBB 12 13
EBB 14 15
EBB 16 17
EBB 18
EBB 19

********** Pseudo live ranges #1: **********

  BB 19
   Insn 159: point = 0, n_alt = -1
   Insn 158: point = 0, n_alt = -2
   Insn 154: point = 1, n_alt = -2
  BB 17
   Insn 173: point = 4, n_alt = -1
   Insn 136: point = 4, n_alt = -2
   Insn 135: point = 5, n_alt = 0
   Insn 134: point = 5, n_alt = 0
   Insn 133: point = 5, n_alt = -2
   Insn 132: point = 6, n_alt = 0
   Insn 131: point = 6, n_alt = 0
   Insn 130: point = 6, n_alt = 0
   Insn 129: point = 6, n_alt = 0
  BB 18
   Insn 151: point = 7, n_alt = 0
   Insn 150: point = 8, n_alt = 0
   Insn 149: point = 8, n_alt = 0
   Insn 148: point = 8, n_alt = -2
   Insn 147: point = 9, n_alt = 0
   Insn 146: point = 10, n_alt = 0
   Insn 145: point = 11, n_alt = 0
   Insn 144: point = 12, n_alt = 0
   Insn 143: point = 12, n_alt = 0
   Insn 142: point = 14, n_alt = 2
   Insn 141: point = 16, n_alt = 0
  BB 16
   Insn 127: point = 18, n_alt = -1
   Insn 126: point = 18, n_alt = 0
   Insn 125: point = 19, n_alt = 0
   Insn 124: point = 21, n_alt = 0
   Insn 123: point = 23, n_alt = 2
   Insn 122: point = 25, n_alt = 0
  BB 15
   Insn 171: point = 27, n_alt = -1
   Insn 117: point = 27, n_alt = -2
   Insn 116: point = 28, n_alt = 0
   Insn 115: point = 28, n_alt = 0
   Insn 114: point = 28, n_alt = -2
   Insn 113: point = 29, n_alt = 0
   Insn 112: point = 30, n_alt = 0
   Insn 111: point = 31, n_alt = 0
   Insn 110: point = 31, n_alt = 0
   Insn 109: point = 31, n_alt = 0
   Insn 108: point = 33, n_alt = 2
   Insn 107: point = 35, n_alt = 0
   Insn 106: point = 36, n_alt = 3
   Insn 105: point = 38, n_alt = 0
  BB 14
   Insn 103: point = 40, n_alt = -1
   Insn 102: point = 40, n_alt = 0
   Insn 101: point = 41, n_alt = 0
   Insn 100: point = 43, n_alt = 0
   Insn 99: point = 45, n_alt = 2
   Insn 98: point = 47, n_alt = 0
  BB 13
   Insn 169: point = 49, n_alt = -1
   Insn 93: point = 49, n_alt = -2
   Insn 92: point = 50, n_alt = 0
   Insn 91: point = 50, n_alt = 0
   Insn 90: point = 50, n_alt = -2
   Insn 89: point = 51, n_alt = 0
   Insn 88: point = 51, n_alt = 0
   Insn 87: point = 52, n_alt = 0
   Insn 86: point = 52, n_alt = 0
   Insn 85: point = 52, n_alt = 0
   Insn 84: point = 53, n_alt = 0
   Insn 83: point = 53, n_alt = 0
   Insn 82: point = 55, n_alt = 2
   Insn 81: point = 57, n_alt = 0
   Insn 80: point = 58, n_alt = 3
   Insn 79: point = 60, n_alt = 0
  BB 12
   Insn 77: point = 62, n_alt = -1
   Insn 76: point = 62, n_alt = 0
   Insn 75: point = 63, n_alt = 0
   Insn 74: point = 65, n_alt = 0
   Insn 73: point = 67, n_alt = 2
   Insn 72: point = 69, n_alt = 0
  BB 11
   Insn 167: point = 71, n_alt = -1
   Insn 65: point = 71, n_alt = 0
  BB 10
   Insn 165: point = 72, n_alt = -1
   Insn 60: point = 72, n_alt = -2
   Insn 59: point = 73, n_alt = 0
   Insn 58: point = 73, n_alt = 0
   Insn 57: point = 73, n_alt = -2
   Insn 56: point = 74, n_alt = 0
   Insn 55: point = 74, n_alt = 0
   Insn 54: point = 74, n_alt = 0
   Insn 53: point = 74, n_alt = 0
  BB 9
   Insn 51: point = 75, n_alt = -1
   Insn 50: point = 75, n_alt = 0
   Insn 49: point = 76, n_alt = 0
   Insn 48: point = 78, n_alt = 0
   Insn 47: point = 80, n_alt = 2
   Insn 46: point = 82, n_alt = 0
  BB 8
   Insn 44: point = 84, n_alt = -1
   Insn 43: point = 84, n_alt = 0
   Insn 42: point = 85, n_alt = 4
   Insn 41: point = 87, n_alt = 0
   Insn 40: point = 88, n_alt = 1
   Insn 39: point = 89, n_alt = 0
   Insn 38: point = 91, n_alt = 0
  BB 5
   Insn 161: point = 93, n_alt = -1
   Insn 25: point = 93, n_alt = 0
  BB 7
   Insn 163: point = 94, n_alt = -1
   Insn 33: point = 94, n_alt = 0
  BB 6
   Insn 31: point = 95, n_alt = -1
   Insn 30: point = 95, n_alt = 1
  BB 4
   Insn 22: point = 96, n_alt = -1
   Insn 21: point = 96, n_alt = 1
   Insn 20: point = 96, n_alt = 1
   Insn 19: point = 97, n_alt = 0
   Insn 18: point = 99, n_alt = 0
   Insn 17: point = 101, n_alt = 0
   Insn 16: point = 102, n_alt = 0
   Insn 15: point = 104, n_alt = 0
  BB 3
   Insn 13: point = 106, n_alt = -1
   Insn 12: point = 106, n_alt = 1
  BB 2
   Insn 8: point = 107, n_alt = -1
   Insn 7: point = 107, n_alt = 0
   Insn 175: point = 107, n_alt = 0
 r82: [95..107] [73..92] [50..70] [28..48] [8..26] [5..6]
 r83: [98..102]
 r84: [84..85]
 r85: [79..80]
 r86: [77..78]
 r87: [75..76]
 r88: [66..67]
 r89: [64..65]
 r90: [62..63]
 r91: [52..58]
 r92: [54..55]
 r93: [51..53]
 r94: [44..45]
 r95: [42..43]
 r96: [40..41]
 r97: [30..36]
 r98: [32..33]
 r99: [29..31]
 r100: [22..23]
 r101: [20..21]
 r102: [18..19]
 r103: [13..14]
 r104: [11..12]
 r105: [93..94] [71..72] [49..49] [27..27] [7..7] [2..4]
 r106: [0..1]
 r107: [103..104]
 r108: [98..99]
 r109: [100..101]
 r110: [96..97]
 r111: [90..91]
 r112: [88..89]
 r113: [86..87]
 r114: [81..82]
 r115: [68..69]
 r116: [59..60]
 r117: [56..57]
 r118: [46..47]
 r119: [37..38]
 r120: [34..35]
 r121: [24..25]
 r122: [15..16]
 r123: [9..10]
Compressing live ranges: from 108 to 85 - 78%
Ranges after the compression:
 r82: [77..84] [59..74] [41..56] [24..39] [7..22] [4..5]
 r83: [79..82]
 r84: [67..68]
 r85: [63..64]
 r86: [61..62]
 r87: [59..60]
 r88: [53..54]
 r89: [51..52]
 r90: [49..50]
 r91: [41..46]
 r92: [43..44]
 r93: [41..42]
 r94: [36..37]
 r95: [34..35]
 r96: [32..33]
 r97: [24..29]
 r98: [26..27]
 r99: [24..25]
 r100: [19..20]
 r101: [17..18]
 r102: [15..16]
 r103: [11..12]
 r104: [9..10]
 r105: [75..76] [57..58] [40..40] [23..23] [6..6] [2..3]
 r106: [0..1]
 r107: [83..84]
 r108: [79..80]
 r109: [81..82]
 r110: [77..78]
 r111: [73..74]
 r112: [71..72]
 r113: [69..70]
 r114: [65..66]
 r115: [55..56]
 r116: [47..48]
 r117: [45..46]
 r118: [38..39]
 r119: [30..31]
 r120: [28..29]
 r121: [21..22]
 r122: [13..14]
 r123: [7..8]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 175
changing reg in insn 148
changing reg in insn 146
changing reg in insn 133
changing reg in insn 114
changing reg in insn 90
changing reg in insn 57
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 42
changing reg in insn 43
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 80
changing reg in insn 85
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 88
changing reg in insn 99
changing reg in insn 100
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 102
changing reg in insn 106
changing reg in insn 112
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 113
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 125
changing reg in insn 125
changing reg in insn 126
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 145
changing reg in insn 151
changing reg in insn 136
changing reg in insn 117
changing reg in insn 93
changing reg in insn 65
changing reg in insn 60
changing reg in insn 33
changing reg in insn 25
changing reg in insn 154
changing reg in insn 154
changing reg in insn 158
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 46
changing reg in insn 47
changing reg in insn 72
changing reg in insn 73
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 98
changing reg in insn 99
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 122
changing reg in insn 123
changing reg in insn 141
changing reg in insn 142
changing reg in insn 146
changing reg in insn 147
deleting insn with uid = 60.
deleting insn with uid = 93.
deleting insn with uid = 117.
deleting insn with uid = 136.
deleting insn with uid = 154.
deleting insn with uid = 158.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 149.


sys_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,9u} r1={41d,35u} r2={10d,4u} r3={5d,5u} r7={27d,87u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1e} r17={30d,9u} r18={5d} r19={2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 601{449d,149u,3e} in 108{103 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 175 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 175 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 175 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/read_write.c":86:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":86:8 806 {*jcc}
     (nil)
 -> 23)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 9 13 3 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":86:23 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":86:23 806 {*jcc}
     (nil)
 -> 23)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 1 dx [107])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7465dd52e120 current>)
                        ] UNSPEC_GOT))) [9  S4 A8])) "fs/read_write.c":86:55 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 1 dx [orig:83 current.4_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [107]) [8 current+0 S4 A32])) "fs/read_write.c":86:55 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:SI 2 cx [109])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 fd+0 S4 A32])) "fs/read_write.c":86:46 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 2 cx [108])
                (plus:SI (reg:SI 2 cx [109])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":86:46 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 1 dx [110])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [108])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [orig:83 current.4_1 ] [83])) [5 current.4_1->filp[fd_27(D)]+0 S4 A32])) "fs/read_write.c":86:46 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])
        (reg/f:SI 1 dx [110])) "fs/read_write.c":86:46 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 file+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":86:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/read_write.c":86:36 806 {*jcc}
     (nil)
 -> 28)
(code_label 23 22 24 5 29 (nil) [2 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 161 5 (set (reg:SI 0 ax [orig:105 iftmp.5_24 ] [105])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":87:16 75 {*movsi_internal}
     (nil))
(jump_insn 161 25 162 5 (set (pc)
        (label_ref 152)) "fs/read_write.c":87:16 807 {jump}
     (nil)
 -> 152)
(barrier 162 161 28)
(code_label 28 162 29 6 30 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":88:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "fs/read_write.c":88:8 806 {*jcc}
     (nil)
 -> 36)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 163 7 (set (reg:SI 0 ax [orig:105 iftmp.5_24 ] [105])
        (const_int 0 [0])) "fs/read_write.c":89:16 75 {*movsi_internal}
     (nil))
(jump_insn 163 33 164 7 (set (pc)
        (label_ref 152)) "fs/read_write.c":89:16 807 {jump}
     (nil)
 -> 152)
(barrier 164 163 36)
(code_label 36 164 37 8 32 (nil) [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg/f:SI 1 dx [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":90:11 75 {*movsi_internal}
     (nil))
(insn 39 38 40 8 (set (reg/f:SI 1 dx [112])
        (mem/f:SI (plus:SI (reg/f:SI 1 dx [111])
                (const_int 8 [0x8])) [3 file_30->f_inode+0 S4 A32])) "fs/read_write.c":90:11 75 {*movsi_internal}
     (nil))
(insn 40 39 41 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])
        (reg/f:SI 1 dx [112])) "fs/read_write.c":90:11 75 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg/f:SI 1 dx [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":91:14 75 {*movsi_internal}
     (nil))
(insn 42 41 43 8 (set (reg:QI 1 dx [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 1 dx [113])
                (const_int 52 [0x34])) [0 inode_31->i_pipe+0 S1 A32])) "fs/read_write.c":91:14 77 {*movqi_internal}
     (nil))
(insn 43 42 44 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/read_write.c":91:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/read_write.c":91:8 806 {*jcc}
     (nil)
 -> 70)
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg/f:SI 1 dx [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":92:21 75 {*movsi_internal}
     (nil))
(insn 47 46 48 9 (set (reg:HI 1 dx [orig:85 _3 ] [85])
        (mem:HI (reg/f:SI 1 dx [114]) [2 file_30->f_mode+0 S2 A32])) "fs/read_write.c":92:21 76 {*movhi_internal}
     (nil))
(insn 48 47 49 9 (set (reg:SI 1 dx [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 1 dx [orig:85 _3 ] [85]))) "fs/read_write.c":92:30 144 {*zero_extendhisi2}
     (nil))
(insn 49 48 50 9 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (and:SI (reg:SI 1 dx [orig:86 _4 ] [86])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":92:30 490 {*andsi_1}
     (nil))
(insn 50 49 51 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:87 _5 ] [87])
            (const_int 0 [0]))) "fs/read_write.c":92:67 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 51 50 52 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "fs/read_write.c":92:67 806 {*jcc}
     (nil)
 -> 63)
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":92:37 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 54 53 55 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 count+0 S4 A32])) "fs/read_write.c":92:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 55 54 56 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 buf+0 S4 A32])) "fs/read_write.c":92:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 56 55 57 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [3 inode+0 S4 A32])) "fs/read_write.c":92:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 57 56 58 10 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "fs/read_write.c":92:37 75 {*movsi_internal}
     (nil))
(call_insn 58 57 59 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("write_pipe") [flags 0x41]  <function_decl 0x7465dd510100 write_pipe>) [0 write_pipe S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":92:37 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 59 58 165 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":92:37 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 165 59 166 10 (set (pc)
        (label_ref 152)) "fs/read_write.c":92:67 807 {jump}
     (nil)
 -> 152)
(barrier 166 165 63)
(code_label 63 166 64 11 34 (nil) [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 167 11 (set (reg:SI 0 ax [orig:105 iftmp.5_24 ] [105])
        (const_int -5 [0xfffffffffffffffb])) "fs/read_write.c":92:67 75 {*movsi_internal}
     (nil))
(jump_insn 167 65 168 11 (set (pc)
        (label_ref 152)) "fs/read_write.c":92:67 807 {jump}
     (nil)
 -> 152)
(barrier 168 167 70)
(code_label 70 168 71 12 33 (nil) [1 uses])
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg/f:SI 1 dx [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":93:9 75 {*movsi_internal}
     (nil))
(insn 73 72 74 12 (set (reg:HI 1 dx [orig:88 _6 ] [88])
        (mem:HI (reg/f:SI 1 dx [115]) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":93:9 76 {*movhi_internal}
     (nil))
(insn 74 73 75 12 (set (reg:SI 1 dx [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 1 dx [orig:88 _6 ] [88]))) "fs/read_write.c":93:9 144 {*zero_extendhisi2}
     (nil))
(insn 75 74 76 12 (parallel [
            (set (reg:SI 1 dx [orig:90 _8 ] [90])
                (and:SI (reg:SI 1 dx [orig:89 _7 ] [89])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":93:9 490 {*andsi_1}
     (nil))
(insn 76 75 77 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:90 _8 ] [90])
            (const_int 8192 [0x2000]))) "fs/read_write.c":93:8 11 {*cmpsi_1}
     (nil))
(jump_insn 77 76 78 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "fs/read_write.c":93:8 806 {*jcc}
     (nil)
 -> 96)
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg/f:SI 1 dx [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":94:16 75 {*movsi_internal}
     (nil))
(insn 80 79 81 13 (parallel [
            (set (reg/f:SI 2 cx [orig:91 _9 ] [91])
                (plus:SI (reg/f:SI 1 dx [116])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":94:16 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 81 80 82 13 (set (reg/f:SI 1 dx [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":94:44 75 {*movsi_internal}
     (nil))
(insn 82 81 83 13 (set (reg:HI 1 dx [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 1 dx [117])
                (const_int 14 [0xe])) [2 inode_31->i_zone[0]+0 S2 A16])) "fs/read_write.c":94:44 76 {*movhi_internal}
     (nil))
(insn 83 82 84 13 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (zero_extend:SI (reg:HI 1 dx [orig:92 _10 ] [92]))) "fs/read_write.c":94:16 144 {*zero_extendhisi2}
     (nil))
(insn 84 83 85 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":94:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 85 84 86 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 2 cx [orig:91 _9 ] [91])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 86 85 87 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 count+0 S4 A32])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 87 86 88 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [7 buf+0 S4 A32])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 88 87 89 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 1 dx [orig:93 _11 ] [93])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 89 88 90 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 1 [0x1])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 90 89 91 13 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "fs/read_write.c":94:16 75 {*movsi_internal}
     (nil))
(call_insn 91 90 92 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_char") [flags 0x41]  <function_decl 0x7465dd538e00 rw_char>) [0 rw_char S1 A8])
            (const_int 32 [0x20]))) "fs/read_write.c":94:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 92 91 169 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":94:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 169 92 170 13 (set (pc)
        (label_ref 152)) "fs/read_write.c":94:16 807 {jump}
     (nil)
 -> 152)
(barrier 170 169 96)
(code_label 96 170 97 14 36 (nil) [1 uses])
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:SI 1 dx [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":95:9 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 1 dx [orig:94 _12 ] [94])
        (mem:HI (reg/f:SI 1 dx [118]) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":95:9 76 {*movhi_internal}
     (nil))
(insn 100 99 101 14 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (zero_extend:SI (reg:HI 1 dx [orig:94 _12 ] [94]))) "fs/read_write.c":95:9 144 {*zero_extendhisi2}
     (nil))
(insn 101 100 102 14 (parallel [
            (set (reg:SI 1 dx [orig:96 _14 ] [96])
                (and:SI (reg:SI 1 dx [orig:95 _13 ] [95])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":95:9 490 {*andsi_1}
     (nil))
(insn 102 101 103 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:96 _14 ] [96])
            (const_int 24576 [0x6000]))) "fs/read_write.c":95:8 11 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "fs/read_write.c":95:8 806 {*jcc}
     (nil)
 -> 120)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (reg/f:SI 1 dx [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 file+0 S4 A32])) "fs/read_write.c":96:46 75 {*movsi_internal}
     (nil))
(insn 106 105 107 15 (parallel [
            (set (reg/f:SI 2 cx [orig:97 _15 ] [97])
                (plus:SI (reg/f:SI 1 dx [119])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":96:46 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 107 106 108 15 (set (reg/f:SI 1 dx [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":96:41 75 {*movsi_internal}
     (nil))
(insn 108 107 109 15 (set (reg:HI 1 dx [orig:98 _16 ] [98])
        (mem:HI (plus:SI (reg/f:SI 1 dx [120])
                (const_int 14 [0xe])) [2 inode_31->i_zone[0]+0 S2 A16])) "fs/read_write.c":96:41 76 {*movhi_internal}
     (nil))
(insn 109 108 110 15 (set (reg:SI 1 dx [orig:99 _17 ] [99])
        (zero_extend:SI (reg:HI 1 dx [orig:98 _16 ] [98]))) "fs/read_write.c":96:16 144 {*zero_extendhisi2}
     (nil))
(insn 110 109 111 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 count+0 S4 A32])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 111 110 112 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [7 buf+0 S4 A32])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 112 111 113 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 2 cx [orig:97 _15 ] [97])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 113 112 114 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 1 dx [orig:99 _17 ] [99])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 114 113 115 15 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "fs/read_write.c":96:16 75 {*movsi_internal}
     (nil))
(call_insn 115 114 116 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("block_write") [flags 0x41]  <function_decl 0x7465dd510000 block_write>) [0 block_write S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":96:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 116 115 171 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":96:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 171 116 172 15 (set (pc)
        (label_ref 152)) "fs/read_write.c":96:16 807 {jump}
     (nil)
 -> 152)
(barrier 172 171 120)
(code_label 120 172 121 16 37 (nil) [1 uses])
(note 121 120 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 16 (set (reg/f:SI 1 dx [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":97:9 75 {*movsi_internal}
     (nil))
(insn 123 122 124 16 (set (reg:HI 1 dx [orig:100 _18 ] [100])
        (mem:HI (reg/f:SI 1 dx [121]) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":97:9 76 {*movhi_internal}
     (nil))
(insn 124 123 125 16 (set (reg:SI 1 dx [orig:101 _19 ] [101])
        (zero_extend:SI (reg:HI 1 dx [orig:100 _18 ] [100]))) "fs/read_write.c":97:9 144 {*zero_extendhisi2}
     (nil))
(insn 125 124 126 16 (parallel [
            (set (reg:SI 1 dx [orig:102 _20 ] [102])
                (and:SI (reg:SI 1 dx [orig:101 _19 ] [101])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":97:9 490 {*andsi_1}
     (nil))
(insn 126 125 127 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:102 _20 ] [102])
            (const_int 32768 [0x8000]))) "fs/read_write.c":97:8 11 {*cmpsi_1}
     (nil))
(jump_insn 127 126 128 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "fs/read_write.c":97:8 806 {*jcc}
     (nil)
 -> 139)
(note 128 127 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 count+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 130 129 131 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [7 buf+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 131 130 132 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [5 file+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 132 131 133 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [3 inode+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 133 132 134 17 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "fs/read_write.c":98:16 75 {*movsi_internal}
     (nil))
(call_insn 134 133 135 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("file_write") [flags 0x41]  <function_decl 0x7465dd50ef00 file_write>) [0 file_write S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":98:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 135 134 173 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":98:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 173 135 174 17 (set (pc)
        (label_ref 152)) "fs/read_write.c":98:16 807 {jump}
     (nil)
 -> 152)
(barrier 174 173 139)
(code_label 139 174 140 18 38 (nil) [1 uses])
(note 140 139 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 18 (set (reg/f:SI 1 dx [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 inode+0 S4 A32])) "fs/read_write.c":99:50 75 {*movsi_internal}
     (nil))
(insn 142 141 143 18 (set (reg:HI 1 dx [orig:103 _21 ] [103])
        (mem:HI (reg/f:SI 1 dx [122]) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":99:50 76 {*movhi_internal}
     (nil))
(insn 143 142 144 18 (set (reg:SI 1 dx [orig:104 _22 ] [104])
        (zero_extend:SI (reg:HI 1 dx [orig:103 _21 ] [103]))) "fs/read_write.c":99:5 144 {*zero_extendhisi2}
     (nil))
(insn 144 143 145 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":99:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 145 144 146 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 1 dx [orig:104 _22 ] [104])) "fs/read_write.c":99:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 146 145 147 18 (set (reg/f:SI 1 dx [123])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7465dd57f090 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/read_write.c":99:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7465dd57f090 *.LC1>)
        (nil)))
(insn 147 146 148 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 1 dx [123])) "fs/read_write.c":99:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 148 147 149 18 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "fs/read_write.c":99:5 75 {*movsi_internal}
     (nil))
(call_insn 149 148 150 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7465dd538900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":99:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 150 149 151 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":99:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 151 150 152 18 (set (reg:SI 0 ax [orig:105 iftmp.5_24 ] [105])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":100:12 75 {*movsi_internal}
     (nil))
(code_label 152 151 153 19 31 (nil) [7 uses])
(note 153 152 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 153 176 19 (use (reg/i:SI 0 ax)) "fs/read_write.c":101:1 -1
     (nil))
(note 176 159 0 NOTE_INSN_DELETED)
