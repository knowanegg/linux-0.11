
;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1332, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = -2
   Insn 5: point = 5, n_alt = -2
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 0
   Insn 18: point = 10, n_alt = 0
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]
Compressing live ranges: from 11 to 11 - 100%
Ranges after the compression:
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 18
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r3={1d,1u} r7={1d,3u} r17={2d} 
;;    total ref usage 19{11d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [16 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 0 ax [orig:86 _v ] [86])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 0 ax [87]) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (nil))
(insn 5 7 8 2 (set (reg/v:QI 3 bx [orig:83 _v ] [83])
        (reg:QI 0 ax [orig:86 _v ] [86])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:QI 0 ax [orig:84 _4 ] [84])
        (reg/v:QI 3 bx [orig:83 _v ] [83])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1337, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =Q  (1) Q {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 1, n_alt = 0
   Insn 8: point = 2, n_alt = 4
   Insn 4: point = 3, n_alt = 8
   Insn 3: point = 4, n_alt = 0
   Insn 2: point = 6, n_alt = 0
   Insn 15: point = 7, n_alt = 0
 r82: [7..7]
 r83: [5..6]
 r84: [3..4]
 r85: [0..2]
 r86: [0..1]
Compressing live ranges: from 8 to 7 - 87%
Ranges after the compression:
 r82: [6..6]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=4)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d,1u} r2={1d} r7={1d,7u} r17={2d} 
;;    total ref usage 20{10d,10u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(insn 2 15 4 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])
        (reg:QI 0 ax [84])) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 0 ax [85])
        (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 1 dx [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [16 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 0 ax [85])
                    (mem:QI (reg/f:SI 1 dx [86]) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (nil))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 16 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))
(note 16 14 0 NOTE_INSN_DELETED)

;; Function put_fs_long (put_fs_long, funcdef_no=3, decl_uid=1341, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 11: point = 0, n_alt = -1
  BB 2
   Insn 7: point = 0, n_alt = 0
   Insn 6: point = 1, n_alt = 0
   Insn 5: point = 2, n_alt = 0
   Insn 12: point = 3, n_alt = 0
 r82: [3..3]
 r83: [0..2]
 r84: [0..1]
Compressing live ranges: from 4 to 3 - 75%
Ranges after the compression:
 r82: [2..2]
 r83: [0..1]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 5
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={2d,1u} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [3 val+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [17 addr+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("movl %0, %%fs:%1") ("") 0 [
                    (reg:SI 0 ax [83])
                    (mem:SI (reg/f:SI 1 dx [84]) [3 *addr_3(D)+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("r") include/asm/segment.h:19)
                    (asm_input:SI ("m") include/asm/segment.h:19)
                ]
                 [] include/asm/segment.h:19)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":19:5 -1
     (nil))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 13 3 (const_int 0 [0]) "include/asm/segment.h":20:1 843 {nop}
     (nil))
(note 13 11 0 NOTE_INSN_DELETED)

;; Function read_pipe (read_pipe, funcdef_no=8, decl_uid=1361, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 39:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 41:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) 0  (2) rn {*subhi_1}
      Creating newreg=139 from oldreg=86, assigning class GENERAL_REGS to r139
   42: {r139:HI=r139:HI-r87:HI;clobber flags:CC;}
      REG_DEAD r87:HI
      REG_DEAD r86:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  158: r139:HI=r86:HI
    Inserting insn reload after:
  159: r88:HI=r139:HI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 51:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 77:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 81:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) rn {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 86:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 88:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =rm  (1) %0  (2) rn {*andhi_1}
      Creating newreg=140 from oldreg=96, assigning class GENERAL_REGS to r140
   89: {r140:HI=r140:HI&0xfff;clobber flags:CC;}
      REG_DEAD r96:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  160: r140:HI=r96:HI
    Inserting insn reload after:
  161: r97:HI=r140:HI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 91:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 96:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 99:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 104
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 106:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 112:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 116:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 132:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 137:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6
EBB 7 8 9
EBB 10 11
EBB 12
EBB 13
EBB 14
EBB 15 16
EBB 17

********** Pseudo live ranges #1: **********

  BB 17
   Insn 146: point = 0, n_alt = -1
   Insn 145: point = 0, n_alt = -2
   Insn 141: point = 1, n_alt = -2
  BB 5
   Insn 152: point = 4, n_alt = -1
   Insn 24: point = 4, n_alt = 0
  BB 16
   Insn 138: point = 5, n_alt = 0
   Insn 137: point = 6, n_alt = 0
   Insn 136: point = 6, n_alt = 0
   Insn 135: point = 6, n_alt = -2
   Insn 134: point = 7, n_alt = 0
   Insn 133: point = 8, n_alt = 0
   Insn 132: point = 8, n_alt = 0
   Insn 131: point = 10, n_alt = 0
  BB 15
   Insn 129: point = 12, n_alt = -1
   Insn 128: point = 12, n_alt = 1
  BB 2
   Insn 148: point = 13, n_alt = -1
   Insn 5: point = 13, n_alt = 1
   Insn 156: point = 13, n_alt = 0
  BB 14
   Insn 122: point = 14, n_alt = -1
   Insn 121: point = 14, n_alt = 0
   Insn 117: point = 15, n_alt = 1
   Insn 116: point = 16, n_alt = 3
   Insn 115: point = 17, n_alt = 0
  BB 12
   Insn 154: point = 19, n_alt = -1
   Insn 91: point = 19, n_alt = 3
   Insn 90: point = 20, n_alt = 0
   Insn 161: point = 21, n_alt = -2
	Hard reg 1 is preferable by r140 with profit 1000
   Insn 89: point = 23, n_alt = 0
   Insn 160: point = 24, n_alt = -2
	Hard reg 1 is preferable by r140 with profit 1000
	Hard reg 0 is preferable by r140 with profit 1000
   Insn 88: point = 26, n_alt = 2
   Insn 87: point = 28, n_alt = 0
   Insn 86: point = 29, n_alt = 3
   Insn 85: point = 30, n_alt = 0
   Insn 84: point = 31, n_alt = 0
   Insn 83: point = 33, n_alt = 0
   Insn 82: point = 35, n_alt = 0
   Insn 81: point = 36, n_alt = 2
   Insn 80: point = 38, n_alt = 0
   Insn 79: point = 39, n_alt = 1
   Insn 78: point = 40, n_alt = 0
   Insn 77: point = 42, n_alt = 2
   Insn 76: point = 44, n_alt = 0
   Insn 75: point = 45, n_alt = 0
   Insn 74: point = 46, n_alt = 0
   Insn 73: point = 47, n_alt = 0
   Insn 72: point = 48, n_alt = 0
  BB 11
   Insn 69: point = 50, n_alt = 1
   Insn 68: point = 51, n_alt = 0
  BB 10
   Insn 66: point = 53, n_alt = -1
   Insn 65: point = 53, n_alt = 1
   Insn 64: point = 54, n_alt = 0
  BB 9
   Insn 61: point = 56, n_alt = 1
   Insn 60: point = 57, n_alt = 0
  BB 8
   Insn 58: point = 59, n_alt = -1
   Insn 57: point = 59, n_alt = 1
   Insn 56: point = 60, n_alt = 0
   Insn 55: point = 61, n_alt = 1
   Insn 54: point = 62, n_alt = 0
   Insn 53: point = 64, n_alt = 0
   Insn 52: point = 65, n_alt = 0
   Insn 51: point = 67, n_alt = 2
   Insn 50: point = 69, n_alt = 0
  BB 7
   Insn 48: point = 71, n_alt = -1
   Insn 47: point = 71, n_alt = 1
   Insn 45: point = 71, n_alt = 1
   Insn 44: point = 72, n_alt = 0
   Insn 43: point = 74, n_alt = 0
   Insn 159: point = 76, n_alt = -2
	Hard reg 0 is preferable by r139 with profit 1000
   Insn 42: point = 78, n_alt = 0
   Insn 158: point = 80, n_alt = -2
	Hard reg 0 is preferable by r139 with profit 1000
	Hard reg 1 is preferable by r139 with profit 1000
   Insn 41: point = 82, n_alt = 2
   Insn 40: point = 84, n_alt = 0
   Insn 39: point = 85, n_alt = 2
   Insn 38: point = 87, n_alt = 0
  BB 3
   Insn 150: point = 89, n_alt = -1
  BB 6
   Insn 35: point = 90, n_alt = 0
   Insn 34: point = 90, n_alt = 0
   Insn 33: point = 90, n_alt = -2
   Insn 32: point = 90, n_alt = 0
   Insn 31: point = 91, n_alt = 0
   Insn 30: point = 91, n_alt = 0
   Insn 29: point = 93, n_alt = 0
  BB 4
   Insn 22: point = 95, n_alt = -1
   Insn 21: point = 95, n_alt = 0
   Insn 20: point = 96, n_alt = 2
   Insn 19: point = 98, n_alt = 0
   Insn 18: point = 99, n_alt = 0
   Insn 17: point = 99, n_alt = 0
   Insn 16: point = 99, n_alt = -2
   Insn 15: point = 99, n_alt = 0
   Insn 14: point = 100, n_alt = 0
   Insn 13: point = 100, n_alt = 0
   Insn 12: point = 102, n_alt = 0
  BB 13
   Insn 112: point = 104, n_alt = 0
   Insn 111: point = 104, n_alt = 0
   Insn 110: point = 104, n_alt = 0
   Insn 109: point = 105, n_alt = 0
   Insn 108: point = 106, n_alt = 0
   Insn 107: point = 106, n_alt = 0
   Insn 106: point = 108, n_alt = 4
   Insn 105: point = 110, n_alt = -2
   Insn 104: point = 112, n_alt = 0
   Insn 103: point = 114, n_alt = 0
   Insn 102: point = 116, n_alt = 0
   Insn 101: point = 117, n_alt = -2
   Insn 100: point = 119, n_alt = 1
   Insn 99: point = 120, n_alt = 3
   Insn 98: point = 121, n_alt = 0
   Insn 97: point = 122, n_alt = 1
   Insn 96: point = 123, n_alt = 3
   Insn 95: point = 124, n_alt = 0
 r82: [6..125]
 r83: [99..100]
 r84: [95..96]
 r85: [90..91]
 r86: [81..85]
 r87: [79..82]
 r88: [75..76]
 r89: [73..74]
 r90: [66..67]
 r91: [63..65]
 r92: [41..42]
 r93: [32..36]
 r94: [32..33]
 r95: [29..31]
 r96: [25..26]
 r97: [19..21]
 r98: [105..124]
 r99: [118..121]
 r100: [113..117]
 r101: [113..114]
 r102: [111..112]
 r103: [109..110]
 r104: [107..108]
 r105: [104..106]
 r106: [14..17]
 r107: [7..8]
 r108: [2..5]
 r109: [0..1]
 r110: [101..102]
 r111: [97..98]
 r112: [92..93]
 r113: [86..87]
 r114: [83..84]
 r115: [71..72]
 r116: [68..69]
 r117: [63..64]
 r118: [61..62]
 r119: [59..60]
 r120: [56..57]
 r121: [53..54]
 r122: [50..51]
 r123: [47..48]
 r124: [45..46]
 r125: [43..44]
 r126: [39..40]
 r127: [37..38]
 r128: [34..35]
 r129: [29..30]
 r130: [27..28]
 r131: [19..20]
 r132: [122..123]
 r133: [119..120]
 r134: [115..116]
 r135: [15..16]
 r136: [9..10]
 r139: [77..80]
 r140: [22..24]
Compressing live ranges: from 126 to 94 - 74%
Ranges after the compression:
 r82: [4..93]
 r83: [74..75]
 r84: [70..71]
 r85: [66..67]
 r86: [60..63]
 r87: [58..61]
 r88: [56..57]
 r89: [54..55]
 r90: [48..49]
 r91: [46..47]
 r92: [28..29]
 r93: [20..23]
 r94: [20..21]
 r95: [18..19]
 r96: [14..15]
 r97: [10..11]
 r98: [78..93]
 r99: [90..91]
 r100: [86..89]
 r101: [86..87]
 r102: [84..85]
 r103: [82..83]
 r104: [80..81]
 r105: [78..79]
 r106: [8..9]
 r107: [4..5]
 r108: [2..3]
 r109: [0..1]
 r110: [76..77]
 r111: [72..73]
 r112: [68..69]
 r113: [64..65]
 r114: [62..63]
 r115: [52..53]
 r116: [50..51]
 r117: [46..47]
 r118: [44..45]
 r119: [42..43]
 r120: [40..41]
 r121: [38..39]
 r122: [36..37]
 r123: [34..35]
 r124: [32..33]
 r125: [30..31]
 r126: [26..27]
 r127: [24..25]
 r128: [22..23]
 r129: [18..19]
 r130: [16..17]
 r131: [10..11]
 r132: [92..93]
 r133: [90..91]
 r134: [88..89]
 r135: [8..9]
 r136: [6..7]
 r139: [58..59]
 r140: [12..13]

********** Assignment #1: **********

	 Assigning to 139 (cl=GENERAL_REGS, orig=86, freq=3000, tfirst=139, tfreq=3000)...
	   Assign 0 to reload r139 (freq=3000)
	 Assigning to 140 (cl=GENERAL_REGS, orig=96, freq=3000, tfirst=140, tfreq=3000)...
	   Assign 0 to reload r140 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 156
changing reg in insn 135
changing reg in insn 33
changing reg in insn 16
changing reg in insn 13
changing reg in insn 15
changing reg in insn 20
changing reg in insn 21
changing reg in insn 30
changing reg in insn 32
changing reg in insn 39
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 54
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 86
changing reg in insn 88
changing reg in insn 91
changing reg in insn 95
changing reg in insn 109
changing reg in insn 96
changing reg in insn 98
changing reg in insn 101
changing reg in insn 99
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 110
changing reg in insn 115
changing reg in insn 121
changing reg in insn 116
changing reg in insn 132
changing reg in insn 134
changing reg in insn 138
changing reg in insn 24
changing reg in insn 141
changing reg in insn 141
changing reg in insn 145
changing reg in insn 12
changing reg in insn 13
changing reg in insn 19
changing reg in insn 20
changing reg in insn 29
changing reg in insn 30
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 44
changing reg in insn 45
changing reg in insn 50
changing reg in insn 51
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 60
changing reg in insn 61
changing reg in insn 64
changing reg in insn 65
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 91
changing reg in insn 96
changing reg in insn 97
changing reg in insn 99
changing reg in insn 100
changing reg in insn 102
changing reg in insn 103
changing reg in insn 116
changing reg in insn 117
changing reg in insn 131
changing reg in insn 132
deleting insn with uid = 16.
deleting insn with uid = 33.
deleting insn with uid = 159.
deleting insn with uid = 83.
deleting insn with uid = 160.
deleting insn with uid = 105.
deleting insn with uid = 135.
deleting insn with uid = 141.
deleting insn with uid = 145.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 136.


read_pipe

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={43d,40u} r1={18d,14u} r2={8d,3u} r3={1d,3u} r7={14d,84u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={3e} r17={33d,6u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 530{377d,150u,3e} in 102{98 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 156 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 156 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 156 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 148 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 read+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":13:22 75 {*movsi_internal}
     (nil))
(jump_insn 148 5 149 2 (set (pc)
        (label_ref 123)) "fs/pipe.c":15:11 807 {jump}
     (nil)
 -> 123)
(barrier 149 148 125)
(code_label 125 149 8 3 15 (nil) [1 uses])
(note 8 125 150 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 150 8 151 3 (set (pc)
        (label_ref 36)) "fs/pipe.c":16:15 807 {jump}
     (nil)
 -> 36)
(barrier 151 150 46)
(code_label 46 151 11 4 10 (nil) [1 uses])
(note 11 46 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":17:13 75 {*movsi_internal}
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [110])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":17:13 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 14 13 15 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":17:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 15 14 17 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/pipe.c":17:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 17 15 18 4 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7dde69138400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":17:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":17:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":18:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 48 [0x30])) [2 inode_43(D)->i_count+0 S2 A32])) "fs/pipe.c":18:22 76 {*movhi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 2 [0x2]))) "fs/pipe.c":18:16 10 {*cmphi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/pipe.c":18:16 806 {*jcc}
     (nil)
 -> 27)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 152 5 (set (reg:SI 0 ax [orig:108 _34 ] [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 read+0 S4 A32])) "fs/pipe.c":19:24 75 {*movsi_internal}
     (nil))
(jump_insn 152 24 153 5 (set (pc)
        (label_ref 139)) "fs/pipe.c":19:24 807 {jump}
     (nil)
 -> 139)
(barrier 153 152 27)
(code_label 27 153 28 6 8 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":20:13 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 0 ax [112])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":20:13 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 31 30 32 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":20:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 34 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/pipe.c":20:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 32 35 6 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7dde69138000 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":20:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 36 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":20:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 36 35 37 7 7 (nil) [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":16:25 75 {*movsi_internal}
     (nil))
(insn 39 38 40 7 (set (reg:HI 1 dx [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 14 [0xe])) [2 inode_43(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":16:25 76 {*movhi_internal}
     (nil))
(insn 40 39 41 7 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":16:25 75 {*movsi_internal}
     (nil))
(insn 41 40 158 7 (set (reg:HI 2 cx [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":16:25 76 {*movhi_internal}
     (nil))
(insn 158 41 42 7 (set (reg:HI 0 ax [orig:86 _4 ] [86])
        (reg:HI 1 dx [orig:86 _4 ] [86])) "fs/pipe.c":16:25 76 {*movhi_internal}
     (nil))
(insn 42 158 43 7 (parallel [
            (set (reg:HI 0 ax [orig:86 _4 ] [86])
                (minus:HI (reg:HI 0 ax [orig:86 _4 ] [86])
                    (reg:HI 2 cx [orig:87 _5 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":16:25 281 {*subhi_1}
     (nil))
(insn 43 42 44 7 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 0 ax [orig:88 _6 ] [88]))) "fs/pipe.c":16:25 144 {*zero_extendhisi2}
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:SI 0 ax [115])
                (and:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":16:23 490 {*andsi_1}
     (nil))
(insn 45 44 47 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])
        (reg:SI 0 ax [115])) "fs/pipe.c":16:23 75 {*movsi_internal}
     (nil))
(insn 47 45 48 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [11 size+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":16:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "fs/pipe.c":16:16 806 {*jcc}
     (nil)
 -> 46)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":22:29 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":22:29 76 {*movhi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/pipe.c":22:29 144 {*zero_extendhisi2}
     (nil))
(insn 53 52 54 8 (set (reg:SI 0 ax [117])
        (const_int 4096 [0x1000])) "fs/pipe.c":22:15 75 {*movsi_internal}
     (nil))
(insn 54 53 55 8 (parallel [
            (set (reg:SI 0 ax [118])
                (minus:SI (reg:SI 0 ax [117])
                    (reg:SI 1 dx [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":22:15 282 {*subsi_1}
     (nil))
(insn 55 54 56 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 0 ax [118])) "fs/pipe.c":22:15 75 {*movsi_internal}
     (nil))
(insn 56 55 57 8 (set (reg:SI 0 ax [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":23:12 75 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [119])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [11 count+0 S4 A32]))) "fs/pipe.c":23:12 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "fs/pipe.c":23:12 806 {*jcc}
     (nil)
 -> 62)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg:SI 0 ax [120])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [11 count+0 S4 A32])) "fs/pipe.c":24:19 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 0 ax [120])) "fs/pipe.c":24:19 75 {*movsi_internal}
     (nil))
(code_label 62 61 63 10 11 (nil) [1 uses])
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg:SI 0 ax [121])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":25:12 75 {*movsi_internal}
     (nil))
(insn 65 64 66 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [121])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [11 size+0 S4 A32]))) "fs/pipe.c":25:12 11 {*cmpsi_1}
     (nil))
(jump_insn 66 65 67 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/pipe.c":25:12 806 {*jcc}
     (nil)
 -> 70)
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 11 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])) "fs/pipe.c":26:19 75 {*movsi_internal}
     (nil))
(insn 69 68 70 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 0 ax [122])) "fs/pipe.c":26:19 75 {*movsi_internal}
     (nil))
(code_label 70 69 71 12 12 (nil) [1 uses])
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg:SI 0 ax [123])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":27:15 75 {*movsi_internal}
     (nil))
(insn 73 72 74 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 40 [0x28])) [11 count+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 40 [0x28])) [11 count+0 S4 A32])
                    (reg:SI 0 ax [123])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":27:15 282 {*subsi_1}
     (nil))
(insn 74 73 75 12 (set (reg:SI 0 ax [124])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":28:15 75 {*movsi_internal}
     (nil))
(insn 75 74 76 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [11 read+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [11 read+0 S4 A32])
                    (reg:SI 0 ax [124])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":28:15 209 {*addsi_1}
     (nil))
(insn 76 75 77 12 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":29:16 75 {*movsi_internal}
     (nil))
(insn 77 76 78 12 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [125])
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":29:16 76 {*movhi_internal}
     (nil))
(insn 78 77 79 12 (set (reg:SI 0 ax [126])
        (zero_extend:SI (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/pipe.c":29:14 144 {*zero_extendhisi2}
     (nil))
(insn 79 78 80 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])
        (reg:SI 0 ax [126])) "fs/pipe.c":29:14 75 {*movsi_internal}
     (nil))
(insn 80 79 81 12 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":30:27 75 {*movsi_internal}
     (nil))
(insn 81 80 82 12 (set (reg:HI 1 dx [orig:93 _11 ] [93])
        (mem:HI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":30:27 76 {*movhi_internal}
     (nil))
(insn 82 81 84 12 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":30:27 75 {*movsi_internal}
     (nil))
(insn 84 82 85 12 (parallel [
            (set (reg:HI 1 dx [orig:95 _13 ] [95])
                (plus:HI (reg:HI 1 dx [orig:93 _11 ] [93])
                    (reg:HI 0 ax [orig:94 _12 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":30:27 212 {*addhi_1}
     (nil))
(insn 85 84 86 12 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":30:27 75 {*movsi_internal}
     (nil))
(insn 86 85 87 12 (set (mem:HI (plus:SI (reg/f:SI 0 ax [129])
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])
        (reg:HI 1 dx [orig:95 _13 ] [95])) "fs/pipe.c":30:27 76 {*movhi_internal}
     (nil))
(insn 87 86 88 12 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":31:27 75 {*movsi_internal}
     (nil))
(insn 88 87 89 12 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [130])
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":31:27 76 {*movhi_internal}
     (nil))
(insn 89 88 161 12 (parallel [
            (set (reg:HI 0 ax [orig:96 _14 ] [96])
                (and:HI (reg:HI 0 ax [orig:96 _14 ] [96])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":31:27 489 {*andhi_1}
     (nil))
(insn 161 89 90 12 (set (reg:HI 1 dx [orig:97 _15 ] [97])
        (reg:HI 0 ax [orig:96 _14 ] [96])) "fs/pipe.c":31:27 76 {*movhi_internal}
     (nil))
(insn 90 161 91 12 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":31:27 75 {*movsi_internal}
     (nil))
(insn 91 90 154 12 (set (mem:HI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])
        (reg:HI 1 dx [orig:97 _15 ] [97])) "fs/pipe.c":31:27 76 {*movhi_internal}
     (nil))
(jump_insn 154 91 155 12 (set (pc)
        (label_ref 113)) "fs/pipe.c":32:15 807 {jump}
     (nil)
 -> 113)
(barrier 155 154 118)
(code_label 118 155 94 13 14 (nil) [1 uses])
(note 94 118 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg/f:SI 0 ax [orig:98 buf.0_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [16 buf+0 S4 A32])) "fs/pipe.c":33:13 75 {*movsi_internal}
     (nil))
(insn 96 95 97 13 (parallel [
            (set (reg:SI 1 dx [132])
                (plus:SI (reg/f:SI 0 ax [orig:98 buf.0_16 ] [98])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:13 209 {*addsi_1}
     (nil))
(insn 97 96 98 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [16 buf+0 S4 A32])
        (reg:SI 1 dx [132])) "fs/pipe.c":33:13 75 {*movsi_internal}
     (nil))
(insn 98 97 99 13 (set (reg:SI 1 dx [orig:99 size.1_17 ] [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])) "fs/pipe.c":33:53 75 {*movsi_internal}
     (nil))
(insn 99 98 100 13 (parallel [
            (set (reg:SI 2 cx [133])
                (plus:SI (reg:SI 1 dx [orig:99 size.1_17 ] [99])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:53 209 {*addsi_1}
     (nil))
(insn 100 99 101 13 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])
        (reg:SI 2 cx [133])) "fs/pipe.c":33:53 75 {*movsi_internal}
     (nil))
(insn 101 100 102 13 (set (reg:SI 2 cx [orig:100 size.2_18 ] [100])
        (reg:SI 1 dx [orig:99 size.1_17 ] [99])) "fs/pipe.c":33:48 75 {*movsi_internal}
     (nil))
(insn 102 101 103 13 (set (reg/f:SI 1 dx [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":33:39 75 {*movsi_internal}
     (nil))
(insn 103 102 104 13 (set (reg:SI 1 dx [orig:101 _19 ] [101])
        (mem:SI (plus:SI (reg/f:SI 1 dx [134])
                (const_int 4 [0x4])) [3 inode_43(D)->i_size+0 S4 A32])) "fs/pipe.c":33:39 75 {*movsi_internal}
     (nil))
(insn 104 103 106 13 (parallel [
            (set (reg:SI 1 dx [orig:102 _20 ] [102])
                (plus:SI (reg:SI 1 dx [orig:101 _19 ] [101])
                    (reg:SI 2 cx [orig:100 size.2_18 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:48 209 {*addsi_1}
     (nil))
(insn 106 104 107 13 (set (reg:QI 1 dx [orig:104 _22 ] [104])
        (mem:QI (reg/f:SI 1 dx [orig:103 _21 ] [103]) [0 *_21+0 S1 A8])) "fs/pipe.c":33:48 77 {*movqi_internal}
     (nil))
(insn 107 106 108 13 (set (reg:SI 1 dx [orig:105 _23 ] [105])
        (sign_extend:SI (reg:QI 1 dx [orig:104 _22 ] [104]))) "fs/pipe.c":33:13 153 {extendqisi2}
     (nil))
(insn 108 107 109 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 109 108 110 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 0 ax [orig:98 buf.0_16 ] [98])) "fs/pipe.c":33:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 110 109 111 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:105 _23 ] [105])) "fs/pipe.c":33:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 111 110 112 13 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x7dde69138f00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":33:13 812 {*call}
     (nil)
    (nil))
(insn 112 111 113 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 113 112 114 14 13 (nil) [1 uses])
(note 114 113 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 14 (set (reg:SI 0 ax [orig:106 chars.3_24 ] [106])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":32:21 75 {*movsi_internal}
     (nil))
(insn 116 115 117 14 (parallel [
            (set (reg:SI 1 dx [135])
                (plus:SI (reg:SI 0 ax [orig:106 chars.3_24 ] [106])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":32:21 209 {*addsi_1}
     (nil))
(insn 117 116 121 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 1 dx [135])) "fs/pipe.c":32:21 75 {*movsi_internal}
     (nil))
(insn 121 117 122 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:106 chars.3_24 ] [106])
            (const_int 0 [0]))) "fs/pipe.c":32:24 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 14 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "fs/pipe.c":32:24 806 {*jcc}
     (nil)
 -> 118)
(code_label 123 122 124 15 6 (nil) [1 uses])
(note 124 123 128 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 128 124 129 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [11 count+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":15:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 129 128 130 15 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "fs/pipe.c":15:18 806 {*jcc}
     (nil)
 -> 125)
(note 130 129 131 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 16 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":35:5 75 {*movsi_internal}
     (nil))
(insn 132 131 133 16 (parallel [
            (set (reg/f:SI 0 ax [orig:107 _25 ] [107])
                (plus:SI (reg/f:SI 0 ax [136])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":35:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 133 132 134 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":35:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 134 133 136 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [orig:107 _25 ] [107])) "fs/pipe.c":35:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 136 134 137 16 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7dde69138400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":35:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 137 136 138 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":35:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 138 137 139 16 (set (reg:SI 0 ax [orig:108 _34 ] [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 read+0 S4 A32])) "fs/pipe.c":36:12 75 {*movsi_internal}
     (nil))
(code_label 139 138 140 17 9 (nil) [1 uses])
(note 140 139 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 146 140 157 17 (use (reg/i:SI 0 ax)) "fs/pipe.c":37:1 -1
     (nil))
(note 157 146 0 NOTE_INSN_DELETED)

;; Function write_pipe (write_pipe, funcdef_no=9, decl_uid=1180, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*iorsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 56:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) 0  (2) rn {*subhi_1}
      Creating newreg=146 from oldreg=90, assigning class GENERAL_REGS to r146
   59: {r146:HI=r146:HI-r91:HI;clobber flags:CC;}
      REG_DEAD r91:HI
      REG_DEAD r90:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  178: r146:HI=r90:HI
    Inserting insn reload after:
  179: r92:HI=r146:HI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =rm  (1) 0 {*one_cmplsi2_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 69:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 95:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 99:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =rm  (1) %0  (2) rn {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 104:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 106:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 107:  (0) =rm  (1) %0  (2) rn {*andhi_1}
      Creating newreg=147 from oldreg=101, assigning class GENERAL_REGS to r147
  107: {r147:HI=r147:HI&0xfff;clobber flags:CC;}
      REG_DEAD r101:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  180: r147:HI=r101:HI
    Inserting insn reload after:
  181: r102:HI=r147:HI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 109:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 119:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 122:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 123:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 127
	 Choosing alt 0 in insn 127:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 130:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 134:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 146:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 150:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 151:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 155:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6
EBB 7
EBB 8
EBB 9 10 11
EBB 12 13
EBB 14
EBB 15
EBB 16
EBB 17 18
EBB 19

********** Pseudo live ranges #1: **********

  BB 19
   Insn 164: point = 0, n_alt = -1
   Insn 163: point = 0, n_alt = -2
   Insn 159: point = 1, n_alt = -2
  BB 7
   Insn 172: point = 4, n_alt = -1
   Insn 39: point = 4, n_alt = 0
  BB 18
   Insn 156: point = 5, n_alt = 0
   Insn 155: point = 6, n_alt = 0
   Insn 154: point = 6, n_alt = 0
   Insn 153: point = 6, n_alt = -2
   Insn 152: point = 7, n_alt = 0
   Insn 151: point = 8, n_alt = 0
   Insn 150: point = 8, n_alt = 0
   Insn 149: point = 10, n_alt = 0
  BB 6
   Insn 170: point = 12, n_alt = -1
   Insn 34: point = 12, n_alt = 0
  BB 5
   Insn 32: point = 13, n_alt = -1
   Insn 31: point = 13, n_alt = 1
   Insn 30: point = 13, n_alt = 1
   Insn 29: point = 14, n_alt = 0
   Insn 28: point = 16, n_alt = 0
   Insn 27: point = 18, n_alt = 0
   Insn 26: point = 20, n_alt = 0
   Insn 25: point = 22, n_alt = 0
   Insn 24: point = 24, n_alt = 0
  BB 4
   Insn 22: point = 26, n_alt = -1
   Insn 21: point = 26, n_alt = 0
   Insn 20: point = 27, n_alt = 2
   Insn 19: point = 29, n_alt = 0
   Insn 18: point = 30, n_alt = 0
   Insn 17: point = 30, n_alt = 0
   Insn 16: point = 30, n_alt = -2
   Insn 15: point = 30, n_alt = 0
   Insn 14: point = 31, n_alt = 0
   Insn 13: point = 31, n_alt = 0
   Insn 12: point = 33, n_alt = 0
  BB 9
   Insn 66: point = 35, n_alt = -1
   Insn 65: point = 35, n_alt = 1
   Insn 63: point = 35, n_alt = 1
   Insn 62: point = 36, n_alt = 0
   Insn 61: point = 38, n_alt = 0
   Insn 60: point = 40, n_alt = 0
   Insn 179: point = 42, n_alt = -2
	Hard reg 0 is preferable by r146 with profit 1000
   Insn 59: point = 44, n_alt = 0
   Insn 178: point = 46, n_alt = -2
	Hard reg 0 is preferable by r146 with profit 1000
	Hard reg 1 is preferable by r146 with profit 1000
   Insn 58: point = 48, n_alt = 2
   Insn 57: point = 50, n_alt = 0
   Insn 56: point = 51, n_alt = 2
   Insn 55: point = 53, n_alt = 0
  BB 3
   Insn 168: point = 55, n_alt = -1
  BB 17
   Insn 147: point = 56, n_alt = -1
   Insn 146: point = 56, n_alt = 1
  BB 2
   Insn 166: point = 57, n_alt = -1
   Insn 5: point = 57, n_alt = 1
   Insn 176: point = 57, n_alt = 0
  BB 16
   Insn 140: point = 58, n_alt = -1
   Insn 139: point = 58, n_alt = 0
   Insn 135: point = 59, n_alt = 1
   Insn 134: point = 60, n_alt = 3
   Insn 133: point = 61, n_alt = 0
  BB 14
   Insn 174: point = 63, n_alt = -1
   Insn 109: point = 63, n_alt = 3
   Insn 108: point = 64, n_alt = 0
   Insn 181: point = 65, n_alt = -2
	Hard reg 1 is preferable by r147 with profit 1000
   Insn 107: point = 67, n_alt = 0
   Insn 180: point = 68, n_alt = -2
	Hard reg 1 is preferable by r147 with profit 1000
	Hard reg 0 is preferable by r147 with profit 1000
   Insn 106: point = 70, n_alt = 2
   Insn 105: point = 72, n_alt = 0
   Insn 104: point = 73, n_alt = 3
   Insn 103: point = 74, n_alt = 0
   Insn 102: point = 75, n_alt = 0
   Insn 101: point = 77, n_alt = 0
   Insn 100: point = 79, n_alt = 0
   Insn 99: point = 80, n_alt = 2
   Insn 98: point = 82, n_alt = 0
   Insn 97: point = 83, n_alt = 1
   Insn 96: point = 84, n_alt = 0
   Insn 95: point = 86, n_alt = 2
   Insn 94: point = 88, n_alt = 0
   Insn 93: point = 89, n_alt = 0
   Insn 92: point = 90, n_alt = 0
   Insn 91: point = 91, n_alt = 0
   Insn 90: point = 92, n_alt = 0
  BB 13
   Insn 87: point = 94, n_alt = 1
   Insn 86: point = 95, n_alt = 0
  BB 12
   Insn 84: point = 97, n_alt = -1
   Insn 83: point = 97, n_alt = 1
   Insn 82: point = 98, n_alt = 0
  BB 11
   Insn 79: point = 100, n_alt = 1
   Insn 78: point = 101, n_alt = 0
  BB 10
   Insn 76: point = 103, n_alt = -1
   Insn 75: point = 103, n_alt = 1
   Insn 74: point = 104, n_alt = 0
   Insn 73: point = 105, n_alt = 1
   Insn 72: point = 106, n_alt = 0
   Insn 71: point = 108, n_alt = 0
   Insn 70: point = 109, n_alt = 0
   Insn 69: point = 111, n_alt = 2
   Insn 68: point = 113, n_alt = 0
  BB 15
   Insn 130: point = 115, n_alt = 8
   Insn 129: point = 116, n_alt = -2
   Insn 128: point = 118, n_alt = -2
   Insn 127: point = 120, n_alt = 0
   Insn 126: point = 122, n_alt = 0
   Insn 125: point = 124, n_alt = 0
   Insn 124: point = 125, n_alt = -2
   Insn 123: point = 127, n_alt = 1
   Insn 122: point = 128, n_alt = 3
   Insn 121: point = 129, n_alt = 0
   Insn 120: point = 130, n_alt = -2
   Insn 119: point = 131, n_alt = 0
   Insn 118: point = 131, n_alt = 0
   Insn 117: point = 131, n_alt = 0
   Insn 116: point = 132, n_alt = 0
   Insn 115: point = 132, n_alt = 1
   Insn 114: point = 133, n_alt = 3
   Insn 113: point = 134, n_alt = 0
  BB 8
   Insn 52: point = 136, n_alt = 0
   Insn 51: point = 136, n_alt = 0
   Insn 50: point = 136, n_alt = -2
   Insn 49: point = 136, n_alt = 0
   Insn 48: point = 137, n_alt = 0
   Insn 47: point = 137, n_alt = 0
   Insn 46: point = 139, n_alt = 0
 r82: [19..140] [6..11]
 r83: [30..31]
 r84: [26..27]
 r85: [21..22]
 r86: [15..20]
 r87: [13..16]
 r88: [13..14]
 r89: [136..137]
 r90: [47..51]
 r91: [45..48]
 r92: [41..42]
 r93: [39..40]
 r94: [37..38]
 r95: [110..111]
 r96: [107..109]
 r97: [85..86]
 r98: [76..80]
 r99: [76..77]
 r100: [73..75]
 r101: [69..70]
 r102: [63..65]
 r103: [131..134]
 r104: [117..130]
 r105: [126..129]
 r106: [121..125]
 r107: [121..122]
 r108: [119..120]
 r109: [115..118]
 r110: [115..116]
 r111: [58..61]
 r112: [7..8]
 r113: [12..12] [2..5]
 r114: [0..1]
 r115: [32..33]
 r116: [28..29]
 r117: [23..24]
 r118: [17..18]
 r119: [138..139]
 r120: [52..53]
 r121: [49..50]
 r122: [35..36]
 r123: [112..113]
 r124: [107..108]
 r125: [105..106]
 r126: [103..104]
 r127: [100..101]
 r128: [97..98]
 r129: [94..95]
 r130: [91..92]
 r131: [89..90]
 r132: [87..88]
 r133: [83..84]
 r134: [81..82]
 r135: [78..79]
 r136: [73..74]
 r137: [71..72]
 r138: [63..64]
 r139: [132..133]
 r140: [127..128]
 r141: [123..124]
 r142: [59..60]
 r143: [9..10]
 r146: [43..46]
 r147: [66..68]
Compressing live ranges: from 141 to 107 - 75%
Ranges after the compression:
 r82: [15..106] [4..7]
 r83: [25..26]
 r84: [21..22]
 r85: [17..18]
 r86: [11..16]
 r87: [9..12]
 r88: [9..10]
 r89: [103..104]
 r90: [39..42]
 r91: [37..40]
 r92: [35..36]
 r93: [33..34]
 r94: [31..32]
 r95: [85..86]
 r96: [83..84]
 r97: [65..66]
 r98: [57..60]
 r99: [57..58]
 r100: [55..56]
 r101: [51..52]
 r102: [47..48]
 r103: [101..102]
 r104: [91..100]
 r105: [99..100]
 r106: [95..98]
 r107: [95..96]
 r108: [93..94]
 r109: [89..92]
 r110: [89..90]
 r111: [45..46]
 r112: [4..5]
 r113: [8..8] [2..3]
 r114: [0..1]
 r115: [27..28]
 r116: [23..24]
 r117: [19..20]
 r118: [13..14]
 r119: [105..106]
 r120: [43..44]
 r121: [41..42]
 r122: [29..30]
 r123: [87..88]
 r124: [83..84]
 r125: [81..82]
 r126: [79..80]
 r127: [77..78]
 r128: [75..76]
 r129: [73..74]
 r130: [71..72]
 r131: [69..70]
 r132: [67..68]
 r133: [63..64]
 r134: [61..62]
 r135: [59..60]
 r136: [55..56]
 r137: [53..54]
 r138: [47..48]
 r139: [101..102]
 r140: [99..100]
 r141: [97..98]
 r142: [45..46]
 r143: [6..7]
 r146: [37..38]
 r147: [49..50]

********** Assignment #1: **********

	 Assigning to 146 (cl=GENERAL_REGS, orig=90, freq=3000, tfirst=146, tfreq=3000)...
	   Assign 0 to reload r146 (freq=3000)
	 Assigning to 147 (cl=GENERAL_REGS, orig=101, freq=3000, tfirst=147, tfreq=3000)...
	   Assign 0 to reload r147 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 176
changing reg in insn 153
changing reg in insn 50
changing reg in insn 27
changing reg in insn 24
changing reg in insn 16
changing reg in insn 13
changing reg in insn 15
changing reg in insn 20
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 29
changing reg in insn 28
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 47
changing reg in insn 49
changing reg in insn 56
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 72
changing reg in insn 95
changing reg in insn 96
changing reg in insn 99
changing reg in insn 102
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 104
changing reg in insn 106
changing reg in insn 109
changing reg in insn 113
changing reg in insn 117
changing reg in insn 114
changing reg in insn 120
changing reg in insn 129
changing reg in insn 121
changing reg in insn 124
changing reg in insn 122
changing reg in insn 124
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 128
changing reg in insn 130
changing reg in insn 129
changing reg in insn 130
changing reg in insn 133
changing reg in insn 139
changing reg in insn 134
changing reg in insn 150
changing reg in insn 152
changing reg in insn 156
changing reg in insn 39
changing reg in insn 34
changing reg in insn 159
changing reg in insn 159
changing reg in insn 163
changing reg in insn 12
changing reg in insn 13
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 46
changing reg in insn 47
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 62
changing reg in insn 63
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 78
changing reg in insn 79
changing reg in insn 82
changing reg in insn 83
changing reg in insn 86
changing reg in insn 87
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 108
changing reg in insn 109
changing reg in insn 114
changing reg in insn 115
changing reg in insn 122
changing reg in insn 123
changing reg in insn 125
changing reg in insn 126
changing reg in insn 134
changing reg in insn 135
changing reg in insn 149
changing reg in insn 150
deleting insn with uid = 16.
deleting insn with uid = 50.
deleting insn with uid = 179.
deleting insn with uid = 101.
deleting insn with uid = 180.
deleting insn with uid = 128.
deleting insn with uid = 153.
deleting insn with uid = 159.
deleting insn with uid = 163.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 154.


write_pipe

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={53d,51u} r1={17d,12u} r2={7d,2u} r3={1d,5u} r7={13d,86u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={3e} r17={35d,7u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 552{386d,163u,3e} in 114{110 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 176 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 176 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 176 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 166 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 written+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":41:22 75 {*movsi_internal}
     (nil))
(jump_insn 166 5 167 2 (set (pc)
        (label_ref 141)) "fs/pipe.c":43:11 807 {jump}
     (nil)
 -> 141)
(barrier 167 166 143)
(code_label 143 167 8 3 28 (nil) [1 uses])
(note 8 143 168 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 168 8 169 3 (set (pc)
        (label_ref 53)) "fs/pipe.c":44:15 807 {jump}
     (nil)
 -> 53)
(barrier 169 168 64)
(code_label 64 169 11 4 23 (nil) [1 uses])
(note 11 64 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":45:13 75 {*movsi_internal}
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [115])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":45:13 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 14 13 15 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":45:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 15 14 17 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/pipe.c":45:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 17 15 18 4 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7dde69138400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":45:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":45:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":46:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 48 [0x30])) [2 inode_49(D)->i_count+0 S2 A32])) "fs/pipe.c":46:22 76 {*movhi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 2 [0x2]))) "fs/pipe.c":46:16 10 {*cmphi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/pipe.c":46:16 806 {*jcc}
     (nil)
 -> 44)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [117])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7dde6912f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 0 ax [orig:85 current.4_3 ] [85])
        (mem/f/c:SI (reg/f:SI 0 ax [117]) [4 current+0 S4 A32])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:SI 1 dx [orig:86 _4 ] [86])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:85 current.4_3 ] [85])
                (const_int 12 [0xc])) [3 current.4_3->signal+0 S4 A32])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 0 ax [118])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7dde6912f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 0 ax [orig:87 current.5_5 ] [87])
        (mem/f/c:SI (reg/f:SI 0 ax [118]) [4 current+0 S4 A32])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg:SI 1 dx [orig:88 _6 ] [88])
                (ior:SI (reg:SI 1 dx [orig:86 _4 ] [86])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":47:33 520 {*iorsi_1}
     (nil))
(insn 30 29 31 5 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:87 current.5_5 ] [87])
                (const_int 12 [0xc])) [3 current.5_5->signal+0 S4 A32])
        (reg:SI 1 dx [orig:88 _6 ] [88])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [11 written+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":48:42 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "fs/pipe.c":48:42 806 {*jcc}
     (nil)
 -> 37)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 170 6 (set (reg:SI 0 ax [orig:113 iftmp.6_40 ] [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 written+0 S4 A32])) "fs/pipe.c":48:42 75 {*movsi_internal}
     (nil))
(jump_insn 170 34 171 6 (set (pc)
        (label_ref 157)) "fs/pipe.c":48:42 807 {jump}
     (nil)
 -> 157)
(barrier 171 170 37)
(code_label 37 171 38 7 20 (nil) [1 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 172 7 (set (reg:SI 0 ax [orig:113 iftmp.6_40 ] [113])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":48:42 75 {*movsi_internal}
     (nil))
(jump_insn 172 39 173 7 (set (pc)
        (label_ref 157)) "fs/pipe.c":48:42 807 {jump}
     (nil)
 -> 157)
(barrier 173 172 44)
(code_label 44 173 45 8 19 (nil) [1 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":50:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
                (plus:SI (reg/f:SI 0 ax [119])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":50:13 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 48 47 49 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":50:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 49 48 51 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [orig:89 _7 ] [89])) "fs/pipe.c":50:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 51 49 52 8 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7dde69138000 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":50:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 52 51 53 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":50:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 53 52 54 9 18 (nil) [1 uses])
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":44:43 75 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:HI 1 dx [orig:90 _8 ] [90])
        (mem:HI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":44:43 76 {*movhi_internal}
     (nil))
(insn 57 56 58 9 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":44:43 75 {*movsi_internal}
     (nil))
(insn 58 57 178 9 (set (reg:HI 2 cx [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 16 [0x10])) [2 inode_49(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":44:43 76 {*movhi_internal}
     (nil))
(insn 178 58 59 9 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (reg:HI 1 dx [orig:90 _8 ] [90])) "fs/pipe.c":44:43 76 {*movhi_internal}
     (nil))
(insn 59 178 60 9 (parallel [
            (set (reg:HI 0 ax [orig:90 _8 ] [90])
                (minus:HI (reg:HI 0 ax [orig:90 _8 ] [90])
                    (reg:HI 2 cx [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":44:43 281 {*subhi_1}
     (nil))
(insn 60 59 61 9 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (zero_extend:SI (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/pipe.c":44:43 144 {*zero_extendhisi2}
     (nil))
(insn 61 60 62 9 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (not:SI (reg:SI 0 ax [orig:93 _11 ] [93]))) "fs/pipe.c":44:41 632 {*one_cmplsi2_1}
     (nil))
(insn 62 61 63 9 (parallel [
            (set (reg:SI 0 ax [122])
                (and:SI (reg:SI 0 ax [orig:94 _12 ] [94])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":44:23 490 {*andsi_1}
     (nil))
(insn 63 62 65 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])
        (reg:SI 0 ax [122])) "fs/pipe.c":44:23 75 {*movsi_internal}
     (nil))
(insn 65 63 66 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [11 size+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":44:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 66 65 67 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "fs/pipe.c":44:16 806 {*jcc}
     (nil)
 -> 64)
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 10 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":52:29 75 {*movsi_internal}
     (nil))
(insn 69 68 70 10 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":52:29 76 {*movhi_internal}
     (nil))
(insn 70 69 71 10 (set (reg:SI 1 dx [orig:96 _14 ] [96])
        (zero_extend:SI (reg:HI 0 ax [orig:95 _13 ] [95]))) "fs/pipe.c":52:29 144 {*zero_extendhisi2}
     (nil))
(insn 71 70 72 10 (set (reg:SI 0 ax [124])
        (const_int 4096 [0x1000])) "fs/pipe.c":52:15 75 {*movsi_internal}
     (nil))
(insn 72 71 73 10 (parallel [
            (set (reg:SI 0 ax [125])
                (minus:SI (reg:SI 0 ax [124])
                    (reg:SI 1 dx [orig:96 _14 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":52:15 282 {*subsi_1}
     (nil))
(insn 73 72 74 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 0 ax [125])) "fs/pipe.c":52:15 75 {*movsi_internal}
     (nil))
(insn 74 73 75 10 (set (reg:SI 0 ax [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":53:12 75 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [126])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [11 count+0 S4 A32]))) "fs/pipe.c":53:12 11 {*cmpsi_1}
     (nil))
(jump_insn 76 75 77 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/pipe.c":53:12 806 {*jcc}
     (nil)
 -> 80)
(note 77 76 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 11 (set (reg:SI 0 ax [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [11 count+0 S4 A32])) "fs/pipe.c":54:19 75 {*movsi_internal}
     (nil))
(insn 79 78 80 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 0 ax [127])) "fs/pipe.c":54:19 75 {*movsi_internal}
     (nil))
(code_label 80 79 81 12 24 (nil) [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":55:12 75 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [128])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [11 size+0 S4 A32]))) "fs/pipe.c":55:12 11 {*cmpsi_1}
     (nil))
(jump_insn 84 83 85 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "fs/pipe.c":55:12 806 {*jcc}
     (nil)
 -> 88)
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 13 (set (reg:SI 0 ax [129])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])) "fs/pipe.c":56:19 75 {*movsi_internal}
     (nil))
(insn 87 86 88 13 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 0 ax [129])) "fs/pipe.c":56:19 75 {*movsi_internal}
     (nil))
(code_label 88 87 89 14 25 (nil) [1 uses])
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 14 (set (reg:SI 0 ax [130])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":57:15 75 {*movsi_internal}
     (nil))
(insn 91 90 92 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 40 [0x28])) [11 count+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 40 [0x28])) [11 count+0 S4 A32])
                    (reg:SI 0 ax [130])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":57:15 282 {*subsi_1}
     (nil))
(insn 92 91 93 14 (set (reg:SI 0 ax [131])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":58:17 75 {*movsi_internal}
     (nil))
(insn 93 92 94 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [11 written+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [11 written+0 S4 A32])
                    (reg:SI 0 ax [131])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":58:17 209 {*addsi_1}
     (nil))
(insn 94 93 95 14 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":59:16 75 {*movsi_internal}
     (nil))
(insn 95 94 96 14 (set (reg:HI 0 ax [orig:97 _15 ] [97])
        (mem:HI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":59:16 76 {*movhi_internal}
     (nil))
(insn 96 95 97 14 (set (reg:SI 0 ax [133])
        (zero_extend:SI (reg:HI 0 ax [orig:97 _15 ] [97]))) "fs/pipe.c":59:14 144 {*zero_extendhisi2}
     (nil))
(insn 97 96 98 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])
        (reg:SI 0 ax [133])) "fs/pipe.c":59:14 75 {*movsi_internal}
     (nil))
(insn 98 97 99 14 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":60:27 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 1 dx [orig:98 _16 ] [98])
        (mem:HI (plus:SI (reg/f:SI 0 ax [134])
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":60:27 76 {*movhi_internal}
     (nil))
(insn 100 99 102 14 (set (reg:SI 0 ax [135])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":60:27 75 {*movsi_internal}
     (nil))
(insn 102 100 103 14 (parallel [
            (set (reg:HI 1 dx [orig:100 _18 ] [100])
                (plus:HI (reg:HI 1 dx [orig:98 _16 ] [98])
                    (reg:HI 0 ax [orig:99 _17 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":60:27 212 {*addhi_1}
     (nil))
(insn 103 102 104 14 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":60:27 75 {*movsi_internal}
     (nil))
(insn 104 103 105 14 (set (mem:HI (plus:SI (reg/f:SI 0 ax [136])
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])
        (reg:HI 1 dx [orig:100 _18 ] [100])) "fs/pipe.c":60:27 76 {*movhi_internal}
     (nil))
(insn 105 104 106 14 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":61:27 75 {*movsi_internal}
     (nil))
(insn 106 105 107 14 (set (reg:HI 0 ax [orig:101 _19 ] [101])
        (mem:HI (plus:SI (reg/f:SI 0 ax [137])
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":61:27 76 {*movhi_internal}
     (nil))
(insn 107 106 181 14 (parallel [
            (set (reg:HI 0 ax [orig:101 _19 ] [101])
                (and:HI (reg:HI 0 ax [orig:101 _19 ] [101])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":61:27 489 {*andhi_1}
     (nil))
(insn 181 107 108 14 (set (reg:HI 1 dx [orig:102 _20 ] [102])
        (reg:HI 0 ax [orig:101 _19 ] [101])) "fs/pipe.c":61:27 76 {*movhi_internal}
     (nil))
(insn 108 181 109 14 (set (reg/f:SI 0 ax [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":61:27 75 {*movsi_internal}
     (nil))
(insn 109 108 174 14 (set (mem:HI (plus:SI (reg/f:SI 0 ax [138])
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])
        (reg:HI 1 dx [orig:102 _20 ] [102])) "fs/pipe.c":61:27 76 {*movhi_internal}
     (nil))
(jump_insn 174 109 175 14 (set (pc)
        (label_ref 131)) "fs/pipe.c":62:15 807 {jump}
     (nil)
 -> 131)
(barrier 175 174 136)
(code_label 136 175 112 15 27 (nil) [1 uses])
(note 112 136 113 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 15 (set (reg/f:SI 0 ax [orig:103 buf.7_21 ] [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [16 buf+0 S4 A32])) "fs/pipe.c":63:47 75 {*movsi_internal}
     (nil))
(insn 114 113 115 15 (parallel [
            (set (reg:SI 1 dx [139])
                (plus:SI (reg/f:SI 0 ax [orig:103 buf.7_21 ] [103])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:47 209 {*addsi_1}
     (nil))
(insn 115 114 116 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [16 buf+0 S4 A32])
        (reg:SI 1 dx [139])) "fs/pipe.c":63:47 75 {*movsi_internal}
     (nil))
(insn 116 115 117 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:47 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 117 116 118 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 0 ax [orig:103 buf.7_21 ] [103])) "fs/pipe.c":63:47 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 118 117 119 15 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7dde69138d00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/pipe.c":63:47 823 {*call_value}
     (nil)
    (nil))
(insn 119 118 120 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:47 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 120 119 121 15 (set (reg:QI 2 cx [orig:104 _22 ] [104])
        (reg:QI 0 ax)) "fs/pipe.c":63:47 77 {*movqi_internal}
     (nil))
(insn 121 120 122 15 (set (reg:SI 0 ax [orig:105 size.8_23 ] [105])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])) "fs/pipe.c":63:41 75 {*movsi_internal}
     (nil))
(insn 122 121 123 15 (parallel [
            (set (reg:SI 1 dx [140])
                (plus:SI (reg:SI 0 ax [orig:105 size.8_23 ] [105])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:41 209 {*addsi_1}
     (nil))
(insn 123 122 124 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 size+0 S4 A32])
        (reg:SI 1 dx [140])) "fs/pipe.c":63:41 75 {*movsi_internal}
     (nil))
(insn 124 123 125 15 (set (reg:SI 1 dx [orig:106 size.9_24 ] [106])
        (reg:SI 0 ax [orig:105 size.8_23 ] [105])) "fs/pipe.c":63:36 75 {*movsi_internal}
     (nil))
(insn 125 124 126 15 (set (reg/f:SI 0 ax [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":63:27 75 {*movsi_internal}
     (nil))
(insn 126 125 127 15 (set (reg:SI 0 ax [orig:107 _25 ] [107])
        (mem:SI (plus:SI (reg/f:SI 0 ax [141])
                (const_int 4 [0x4])) [3 inode_49(D)->i_size+0 S4 A32])) "fs/pipe.c":63:27 75 {*movsi_internal}
     (nil))
(insn 127 126 129 15 (parallel [
            (set (reg:SI 0 ax [orig:108 _26 ] [108])
                (plus:SI (reg:SI 0 ax [orig:107 _25 ] [107])
                    (reg:SI 1 dx [orig:106 size.9_24 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:36 209 {*addsi_1}
     (nil))
(insn 129 127 130 15 (set (reg:QI 1 dx [orig:110 _28 ] [110])
        (reg:QI 2 cx [orig:104 _22 ] [104])) "fs/pipe.c":63:47 77 {*movqi_internal}
     (nil))
(insn 130 129 131 15 (set (mem:QI (reg/f:SI 0 ax [orig:109 _27 ] [109]) [0 *_27+0 S1 A8])
        (reg:QI 1 dx [orig:110 _28 ] [110])) "fs/pipe.c":63:45 77 {*movqi_internal}
     (nil))
(code_label 131 130 132 16 26 (nil) [1 uses])
(note 132 131 133 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 16 (set (reg:SI 0 ax [orig:111 chars.10_29 ] [111])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])) "fs/pipe.c":62:21 75 {*movsi_internal}
     (nil))
(insn 134 133 135 16 (parallel [
            (set (reg:SI 1 dx [142])
                (plus:SI (reg:SI 0 ax [orig:111 chars.10_29 ] [111])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":62:21 209 {*addsi_1}
     (nil))
(insn 135 134 139 16 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 chars+0 S4 A32])
        (reg:SI 1 dx [142])) "fs/pipe.c":62:21 75 {*movsi_internal}
     (nil))
(insn 139 135 140 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:111 chars.10_29 ] [111])
            (const_int 0 [0]))) "fs/pipe.c":62:24 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 140 139 141 16 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "fs/pipe.c":62:24 806 {*jcc}
     (nil)
 -> 136)
(code_label 141 140 142 17 17 (nil) [1 uses])
(note 142 141 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 146 142 147 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [11 count+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":43:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 147 146 148 17 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "fs/pipe.c":43:18 806 {*jcc}
     (nil)
 -> 143)
(note 148 147 149 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 18 (set (reg/f:SI 0 ax [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 inode+0 S4 A32])) "fs/pipe.c":65:5 75 {*movsi_internal}
     (nil))
(insn 150 149 151 18 (parallel [
            (set (reg/f:SI 0 ax [orig:112 _30 ] [112])
                (plus:SI (reg/f:SI 0 ax [143])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":65:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 151 150 152 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":65:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 152 151 154 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 0 ax [orig:112 _30 ] [112])) "fs/pipe.c":65:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 154 152 155 18 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7dde69138400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":65:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 155 154 156 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":65:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 156 155 157 18 (set (reg:SI 0 ax [orig:113 iftmp.6_40 ] [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 written+0 S4 A32])) "fs/pipe.c":66:12 75 {*movsi_internal}
     (nil))
(code_label 157 156 158 19 22 (nil) [2 uses])
(note 158 157 164 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 164 158 177 19 (use (reg/i:SI 0 ax)) "fs/pipe.c":67:1 -1
     (nil))
(note 177 164 0 NOTE_INSN_DELETED)

;; Function sys_pipe (sys_pipe, funcdef_no=10, decl_uid=1393, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 13
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
      Creating newreg=154 from oldreg=84, assigning class GENERAL_REGS to r154
   20: {r154:SI=r154:SI<<0x4;clobber flags:CC;}
      REG_DEAD r84:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  217: r154:SI=r84:SI
    Inserting insn reload after:
  218: r85:SI=r154:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 26
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) rn {*addhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 88:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 114:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 124:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 126:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 127:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 143:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 150:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 153:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 155:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 156:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 174:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 176:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 183:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 192:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7
EBB 8 9
EBB 10 11
EBB 12
EBB 13 14
EBB 15
EBB 16 17
EBB 18 19
EBB 20 21
EBB 22 23
EBB 24
EBB 25

********** Pseudo live ranges #1: **********

  BB 25
   Insn 203: point = 0, n_alt = -1
   Insn 202: point = 0, n_alt = -2
   Insn 198: point = 1, n_alt = -2
  BB 23
   Insn 213: point = 4, n_alt = -1
   Insn 157: point = 4, n_alt = 0
   Insn 156: point = 5, n_alt = 3
   Insn 155: point = 6, n_alt = 2
   Insn 154: point = 8, n_alt = 0
   Insn 153: point = 9, n_alt = 3
   Insn 152: point = 9, n_alt = 0
   Insn 151: point = 10, n_alt = 1
   Insn 150: point = 11, n_alt = 3
   Insn 149: point = 13, n_alt = 0
   Insn 148: point = 15, n_alt = 0
   Insn 147: point = 17, n_alt = 0
   Insn 146: point = 18, n_alt = 0
   Insn 145: point = 20, n_alt = 0
   Insn 144: point = 22, n_alt = 1
   Insn 143: point = 23, n_alt = 3
   Insn 142: point = 24, n_alt = 0
   Insn 141: point = 25, n_alt = 0
   Insn 140: point = 27, n_alt = 0
  BB 11
   Insn 207: point = 29, n_alt = -1
   Insn 61: point = 29, n_alt = 0
  BB 21
   Insn 211: point = 30, n_alt = -1
   Insn 128: point = 30, n_alt = 0
   Insn 127: point = 31, n_alt = 3
   Insn 126: point = 32, n_alt = 2
   Insn 125: point = 34, n_alt = 0
   Insn 124: point = 35, n_alt = 3
   Insn 123: point = 35, n_alt = 0
  BB 24
   Insn 193: point = 36, n_alt = 0
   Insn 192: point = 37, n_alt = 0
   Insn 191: point = 37, n_alt = 0
   Insn 190: point = 37, n_alt = 0
   Insn 189: point = 38, n_alt = 0
   Insn 188: point = 39, n_alt = 0
   Insn 187: point = 39, n_alt = -2
   Insn 186: point = 41, n_alt = 0
   Insn 185: point = 42, n_alt = 0
   Insn 184: point = 44, n_alt = 0
   Insn 183: point = 45, n_alt = 0
   Insn 182: point = 45, n_alt = 0
   Insn 181: point = 45, n_alt = 0
   Insn 180: point = 46, n_alt = 0
   Insn 179: point = 46, n_alt = 0
   Insn 178: point = 46, n_alt = -2
   Insn 177: point = 48, n_alt = 0
   Insn 176: point = 49, n_alt = 3
   Insn 175: point = 50, n_alt = 0
   Insn 174: point = 51, n_alt = 3
   Insn 173: point = 52, n_alt = 0
   Insn 172: point = 53, n_alt = 1
   Insn 171: point = 54, n_alt = 0
   Insn 170: point = 56, n_alt = 0
   Insn 169: point = 57, n_alt = 1
   Insn 168: point = 57, n_alt = 0
   Insn 167: point = 58, n_alt = 1
   Insn 166: point = 59, n_alt = 0
   Insn 165: point = 61, n_alt = 0
   Insn 164: point = 62, n_alt = 1
   Insn 163: point = 63, n_alt = 0
   Insn 162: point = 64, n_alt = 0
  BB 22
   Insn 138: point = 65, n_alt = -1
   Insn 137: point = 65, n_alt = 1
   Insn 136: point = 65, n_alt = 1
   Insn 135: point = 66, n_alt = -2
   Insn 134: point = 67, n_alt = 0
   Insn 133: point = 67, n_alt = -2
  BB 20
   Insn 121: point = 68, n_alt = -1
   Insn 120: point = 68, n_alt = 0
  BB 19
   Insn 115: point = 69, n_alt = 1
   Insn 114: point = 70, n_alt = 0
   Insn 113: point = 72, n_alt = 0
   Insn 112: point = 73, n_alt = 0
   Insn 111: point = 75, n_alt = 0
  BB 18
   Insn 109: point = 77, n_alt = -1
   Insn 108: point = 77, n_alt = 0
  BB 16
   Insn 99: point = 78, n_alt = -1
   Insn 98: point = 78, n_alt = 0
  BB 12
   Insn 209: point = 79, n_alt = -1
   Insn 67: point = 79, n_alt = 1
   Insn 66: point = 79, n_alt = 1
  BB 10
   Insn 59: point = 80, n_alt = -1
   Insn 58: point = 80, n_alt = 0
  BB 9
   Insn 53: point = 81, n_alt = 3
   Insn 52: point = 82, n_alt = 0
  BB 8
   Insn 50: point = 84, n_alt = -1
   Insn 49: point = 84, n_alt = 0
  BB 6
   Insn 40: point = 85, n_alt = -1
   Insn 39: point = 85, n_alt = 0
  BB 2
   Insn 205: point = 86, n_alt = -1
   Insn 6: point = 86, n_alt = 1
   Insn 5: point = 86, n_alt = 1
   Insn 215: point = 86, n_alt = 0
  BB 5
   Insn 34: point = 87, n_alt = 0
  BB 4
   Insn 31: point = 88, n_alt = 3
   Insn 30: point = 89, n_alt = 0
   Insn 29: point = 91, n_alt = 2
   Insn 28: point = 92, n_alt = 0
   Insn 27: point = 94, n_alt = 1
   Insn 26: point = 95, n_alt = 0
   Insn 25: point = 97, n_alt = -2
   Insn 24: point = 99, n_alt = 0
   Insn 23: point = 100, n_alt = 1
   Insn 22: point = 101, n_alt = 3
   Insn 21: point = 102, n_alt = 0
   Insn 218: point = 103, n_alt = -2
	Hard reg 2 is preferable by r154 with profit 1000
   Insn 20: point = 105, n_alt = 0
   Insn 217: point = 106, n_alt = -2
	Hard reg 2 is preferable by r154 with profit 1000
	Hard reg 0 is preferable by r154 with profit 1000
   Insn 19: point = 108, n_alt = 0
  BB 3
   Insn 17: point = 110, n_alt = -1
   Insn 16: point = 110, n_alt = 0
   Insn 15: point = 111, n_alt = 2
   Insn 14: point = 113, n_alt = 0
   Insn 13: point = 115, n_alt = 0
   Insn 12: point = 117, n_alt = 0
   Insn 11: point = 119, n_alt = 0
   Insn 10: point = 120, n_alt = 0
  BB 7
   Insn 46: point = 122, n_alt = -1
   Insn 45: point = 122, n_alt = 0
  BB 15
   Insn 93: point = 123, n_alt = 0
  BB 14
   Insn 90: point = 124, n_alt = 0
   Insn 89: point = 124, n_alt = 1
   Insn 88: point = 125, n_alt = 0
   Insn 87: point = 127, n_alt = 0
   Insn 86: point = 129, n_alt = 0
   Insn 85: point = 130, n_alt = 0
   Insn 84: point = 132, n_alt = 0
   Insn 83: point = 133, n_alt = 1
   Insn 82: point = 134, n_alt = 0
   Insn 81: point = 135, n_alt = 0
   Insn 80: point = 136, n_alt = 0
   Insn 79: point = 138, n_alt = 0
  BB 13
   Insn 77: point = 140, n_alt = -1
   Insn 76: point = 140, n_alt = 0
   Insn 75: point = 141, n_alt = 0
   Insn 74: point = 143, n_alt = 0
   Insn 73: point = 145, n_alt = 0
   Insn 72: point = 146, n_alt = 0
   Insn 71: point = 148, n_alt = 0
  BB 17
   Insn 105: point = 150, n_alt = -1
   Insn 104: point = 150, n_alt = 0
 r82: [65..150] [21..28]
 r83: [110..111]
 r84: [107..108]
 r85: [96..103]
 r86: [93..102]
 r87: [94..95]
 r88: [88..92]
 r89: [90..91]
 r90: [88..89]
 r91: [81..82]
 r92: [142..146]
 r93: [140..141]
 r94: [124..136]
 r95: [126..130]
 r96: [124..127]
 r97: [69..73]
 r98: [71..72]
 r99: [33..35]
 r100: [31..34]
 r101: [31..32]
 r102: [14..25]
 r103: [16..24]
 r104: [10..18]
 r105: [12..17]
 r106: [10..13]
 r107: [7..9]
 r108: [5..8]
 r109: [5..6]
 r110: [60..64]
 r111: [58..61]
 r112: [58..59]
 r113: [55..57]
 r114: [53..56]
 r115: [53..54]
 r116: [51..52]
 r117: [49..50]
 r118: [47..48]
 r119: [45..46]
 r120: [38..42]
 r121: [40..41]
 r122: [37..39]
 r123: [36..36] [29..30] [2..4]
 r124: [0..1]
 r125: [116..120]
 r126: [118..119]
 r127: [116..117]
 r128: [114..115]
 r129: [112..113]
 r130: [100..101]
 r131: [96..97]
 r132: [98..99]
 r133: [147..148]
 r134: [142..143]
 r135: [144..145]
 r136: [137..138]
 r137: [133..135]
 r138: [133..134]
 r139: [131..132]
 r140: [128..129]
 r141: [124..125]
 r142: [74..75]
 r143: [69..70]
 r144: [65..66]
 r145: [26..27]
 r146: [22..23]
 r147: [19..20]
 r148: [14..15]
 r149: [10..11]
 r150: [62..63]
 r151: [43..44]
 r154: [104..106]
Compressing live ranges: from 151 to 109 - 72%
Ranges after the compression:
 r82: [53..108] [18..21]
 r83: [79..80]
 r84: [77..78]
 r85: [69..74]
 r86: [67..74]
 r87: [67..68]
 r88: [63..66]
 r89: [65..66]
 r90: [63..64]
 r91: [61..62]
 r92: [103..106]
 r93: [101..102]
 r94: [89..98]
 r95: [91..94]
 r96: [89..92]
 r97: [55..58]
 r98: [57..58]
 r99: [26..27]
 r100: [24..27]
 r101: [24..25]
 r102: [12..19]
 r103: [14..19]
 r104: [8..15]
 r105: [10..15]
 r106: [8..11]
 r107: [6..7]
 r108: [4..7]
 r109: [4..5]
 r110: [49..52]
 r111: [47..50]
 r112: [47..48]
 r113: [45..46]
 r114: [43..46]
 r115: [43..44]
 r116: [41..42]
 r117: [39..40]
 r118: [37..38]
 r119: [35..36]
 r120: [29..32]
 r121: [31..32]
 r122: [29..30]
 r123: [28..28] [22..23] [2..3]
 r124: [0..1]
 r125: [85..88]
 r126: [87..88]
 r127: [85..86]
 r128: [83..84]
 r129: [81..82]
 r130: [73..74]
 r131: [69..70]
 r132: [71..72]
 r133: [107..108]
 r134: [103..104]
 r135: [105..106]
 r136: [99..100]
 r137: [97..98]
 r138: [97..98]
 r139: [95..96]
 r140: [93..94]
 r141: [89..90]
 r142: [59..60]
 r143: [55..56]
 r144: [53..54]
 r145: [20..21]
 r146: [18..19]
 r147: [16..17]
 r148: [12..13]
 r149: [8..9]
 r150: [51..52]
 r151: [33..34]
 r154: [75..76]

********** Assignment #1: **********

	 Assigning to 154 (cl=GENERAL_REGS, orig=84, freq=3000, tfirst=154, tfreq=3000)...
	   Assign 0 to reload r154 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 215
changing reg in insn 145
changing reg in insn 140
changing reg in insn 133
changing reg in insn 111
changing reg in insn 79
changing reg in insn 71
changing reg in insn 24
changing reg in insn 10
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 21
changing reg in insn 28
changing reg in insn 27
changing reg in insn 22
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 52
changing reg in insn 53
changing reg in insn 72
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 80
changing reg in insn 89
changing reg in insn 85
changing reg in insn 88
changing reg in insn 87
changing reg in insn 89
changing reg in insn 112
changing reg in insn 115
changing reg in insn 113
changing reg in insn 114
changing reg in insn 123
changing reg in insn 126
changing reg in insn 124
changing reg in insn 125
changing reg in insn 127
changing reg in insn 126
changing reg in insn 127
changing reg in insn 141
changing reg in insn 149
changing reg in insn 144
changing reg in insn 142
changing reg in insn 148
changing reg in insn 143
changing reg in insn 146
changing reg in insn 151
changing reg in insn 147
changing reg in insn 150
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 155
changing reg in insn 156
changing reg in insn 162
changing reg in insn 166
changing reg in insn 164
changing reg in insn 165
changing reg in insn 167
changing reg in insn 166
changing reg in insn 167
changing reg in insn 168
changing reg in insn 171
changing reg in insn 169
changing reg in insn 170
changing reg in insn 172
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 181
changing reg in insn 185
changing reg in insn 189
changing reg in insn 186
changing reg in insn 187
changing reg in insn 187
changing reg in insn 190
changing reg in insn 193
changing reg in insn 157
changing reg in insn 128
changing reg in insn 61
changing reg in insn 198
changing reg in insn 198
changing reg in insn 202
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 75
changing reg in insn 73
changing reg in insn 74
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 111
changing reg in insn 112
changing reg in insn 114
changing reg in insn 115
changing reg in insn 135
changing reg in insn 136
changing reg in insn 140
changing reg in insn 141
changing reg in insn 143
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 163
changing reg in insn 164
changing reg in insn 184
changing reg in insn 185
deleting insn with uid = 217.
deleting insn with uid = 25.
deleting insn with uid = 133.
deleting insn with uid = 135.
deleting insn with uid = 178.
deleting insn with uid = 187.
deleting insn with uid = 198.
deleting insn with uid = 202.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 191.


sys_pipe

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={41d,44u} r1={27d,24u} r2={11d,7u} r3={2d,9u} r7={9d,93u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1e} r17={36d,11u} r18={3d} r19={1e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 511{321d,188u,2e} in 135{132 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 215 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 215 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 215 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 j+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":76:7 75 {*movsi_internal}
     (nil))
(insn 6 5 205 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":77:12 75 {*movsi_internal}
     (nil))
(jump_insn 205 6 206 2 (set (pc)
        (label_ref 35)) "fs/pipe.c":77:5 807 {jump}
     (nil)
 -> 35)
(barrier 206 205 42)
(code_label 42 206 9 3 33 (nil) [1 uses])
(note 9 42 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 1 dx [125])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x7dde6a68fd80 file_table>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":78:27 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 0 ax [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])) "fs/pipe.c":78:27 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 0 ax [127])
                (ashift:SI (reg:SI 0 ax [126])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":78:27 655 {*ashlsi3_1}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 0 ax [128])
                (plus:SI (reg:SI 0 ax [127])
                    (reg/f:SI 1 dx [125])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":78:27 209 {*addsi_1}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 0 ax [129])
                (plus:SI (reg:SI 0 ax [128])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":78:27 209 {*addsi_1}
     (nil))
(insn 15 14 16 3 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [129]) [2 file_table[i_42].f_count+0 S2 A32])) "fs/pipe.c":78:27 76 {*movhi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/pipe.c":78:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "fs/pipe.c":78:12 806 {*jcc}
     (nil)
 -> 32)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 0 ax [orig:84 i.11_2 ] [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])) "fs/pipe.c":79:25 75 {*movsi_internal}
     (nil))
(insn 20 19 218 4 (parallel [
            (set (reg:SI 0 ax [orig:84 i.11_2 ] [84])
                (ashift:SI (reg:SI 0 ax [orig:84 i.11_2 ] [84])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:25 655 {*ashlsi3_1}
     (nil))
(insn 218 20 21 4 (set (reg:SI 2 cx [orig:85 _3 ] [85])
        (reg:SI 0 ax [orig:84 i.11_2 ] [84])) "fs/pipe.c":79:25 75 {*movsi_internal}
     (nil))
(insn 21 218 22 4 (set (reg:SI 0 ax [orig:86 j.12_4 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 j+0 S4 A32])) "fs/pipe.c":79:17 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 1 dx [130])
                (plus:SI (reg:SI 0 ax [orig:86 j.12_4 ] [86])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:17 209 {*addsi_1}
     (nil))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 j+0 S4 A32])
        (reg:SI 1 dx [130])) "fs/pipe.c":79:17 75 {*movsi_internal}
     (nil))
(insn 24 23 26 4 (set (reg:SI 1 dx [132])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x7dde6a68fd80 file_table>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":79:25 75 {*movsi_internal}
     (nil))
(insn 26 24 27 4 (parallel [
            (set (reg/f:SI 1 dx [orig:87 _5 ] [87])
                (plus:SI (reg:SI 1 dx [131])
                    (reg:SI 2 cx [orig:85 _3 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:25 209 {*addsi_1}
     (nil))
(insn 27 26 28 4 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:86 j.12_4 ] [86])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [7 f[j.12_4]+0 S4 A32])
        (reg/f:SI 1 dx [orig:87 _5 ] [87])) "fs/pipe.c":79:21 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 0 ax [orig:88 _6 ] [88])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:86 j.12_4 ] [86])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [7 f[j.12_4]+0 S4 A32])) "fs/pipe.c":79:15 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:HI 1 dx [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:88 _6 ] [88])
                (const_int 4 [0x4])) [2 _6->f_count+0 S2 A32])) "fs/pipe.c":79:38 76 {*movhi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:HI 1 dx [orig:90 _9 ] [90])
                (plus:HI (reg:HI 1 dx [orig:89 _7 ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:47 212 {*addhi_1}
     (nil))
(insn 31 30 32 4 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:88 _6 ] [88])
                (const_int 4 [0x4])) [2 _6->f_count+0 S2 A32])
        (reg:HI 1 dx [orig:90 _9 ] [90])) "fs/pipe.c":79:47 76 {*movhi_internal}
     (nil))
(code_label 32 31 33 5 31 (nil) [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":77:40 209 {*addsi_1}
     (nil))
(code_label 35 34 36 6 30 (nil) [1 uses])
(note 36 35 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 36 40 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":77:23 11 {*cmpsi_1}
     (nil))
(jump_insn 40 39 41 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "fs/pipe.c":77:23 806 {*jcc}
     (nil)
 -> 47)
(note 41 40 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 41 46 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [11 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/pipe.c":77:23 11 {*cmpsi_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/pipe.c":77:23 806 {*jcc}
     (nil)
 -> 42)
(code_label 47 46 48 8 32 (nil) [1 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":80:8 11 {*cmpsi_1}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "fs/pipe.c":80:8 806 {*jcc}
     (nil)
 -> 54)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg/f:SI 0 ax [orig:91 _10 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 f[0]+0 S4 A32])) "fs/pipe.c":81:10 75 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:91 _10 ] [91])
                (const_int 4 [0x4])) [2 _10->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/pipe.c":81:23 76 {*movhi_internal}
     (nil))
(code_label 54 53 55 10 34 (nil) [1 uses])
(note 55 54 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 55 59 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":82:8 11 {*cmpsi_1}
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "fs/pipe.c":82:8 806 {*jcc}
     (nil)
 -> 64)
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 207 11 (set (reg:SI 0 ax [orig:123 _48 ] [123])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":83:16 75 {*movsi_internal}
     (nil))
(jump_insn 207 61 208 11 (set (pc)
        (label_ref 196)) "fs/pipe.c":83:16 807 {jump}
     (nil)
 -> 196)
(barrier 208 207 64)
(code_label 64 208 65 12 35 (nil) [1 uses])
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 j+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":84:7 75 {*movsi_internal}
     (nil))
(insn 67 66 209 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":85:12 75 {*movsi_internal}
     (nil))
(jump_insn 209 67 210 12 (set (pc)
        (label_ref 94)) "fs/pipe.c":85:5 807 {jump}
     (nil)
 -> 94)
(barrier 210 209 101)
(code_label 101 210 70 13 40 (nil) [1 uses])
(note 70 101 71 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 13 (set (reg/f:SI 0 ax [133])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7dde6912f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":86:21 75 {*movsi_internal}
     (nil))
(insn 72 71 73 13 (set (reg/f:SI 0 ax [orig:92 current.13_11 ] [92])
        (mem/f/c:SI (reg/f:SI 0 ax [133]) [4 current+0 S4 A32])) "fs/pipe.c":86:21 75 {*movsi_internal}
     (nil))
(insn 73 72 74 13 (set (reg:SI 1 dx [135])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])) "fs/pipe.c":86:27 75 {*movsi_internal}
     (nil))
(insn 74 73 75 13 (parallel [
            (set (reg:SI 1 dx [134])
                (plus:SI (reg:SI 1 dx [135])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":86:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 75 74 76 13 (set (reg/f:SI 0 ax [orig:93 _12 ] [93])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [134])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:92 current.13_11 ] [92])) [7 current.13_11->filp[i_43]+0 S4 A32])) "fs/pipe.c":86:27 75 {*movsi_internal}
     (nil))
(insn 76 75 77 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:93 _12 ] [93])
            (const_int 0 [0]))) "fs/pipe.c":86:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 77 76 78 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "fs/pipe.c":86:12 806 {*jcc}
     (nil)
 -> 91)
(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 14 (set (reg/f:SI 0 ax [136])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7dde6912f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":87:20 75 {*movsi_internal}
     (nil))
(insn 80 79 81 14 (set (reg/f:SI 0 ax [orig:94 current.14_13 ] [94])
        (mem/f/c:SI (reg/f:SI 0 ax [136]) [4 current+0 S4 A32])) "fs/pipe.c":87:20 75 {*movsi_internal}
     (nil))
(insn 81 80 82 14 (set (reg:SI 1 dx [137])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 j+0 S4 A32])) "fs/pipe.c":87:33 75 {*movsi_internal}
     (nil))
(insn 82 81 83 14 (set (reg:SI 2 cx [138])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])) "fs/pipe.c":87:33 75 {*movsi_internal}
     (nil))
(insn 83 82 84 14 (set (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [137])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 4 [0x4])) [11 fd[j_47]+0 S4 A32])
        (reg:SI 2 cx [138])) "fs/pipe.c":87:33 75 {*movsi_internal}
     (nil))
(insn 84 83 85 14 (set (reg:SI 1 dx [139])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 j+0 S4 A32])) "fs/pipe.c":87:29 75 {*movsi_internal}
     (nil))
(insn 85 84 86 14 (set (reg:SI 2 cx [orig:95 _14 ] [95])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [139])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 4 [0x4])) [11 fd[j_47]+0 S4 A32])) "fs/pipe.c":87:29 75 {*movsi_internal}
     (nil))
(insn 86 85 87 14 (set (reg:SI 1 dx [140])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 j+0 S4 A32])) "fs/pipe.c":87:41 75 {*movsi_internal}
     (nil))
(insn 87 86 88 14 (set (reg/f:SI 1 dx [orig:96 _15 ] [96])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [140])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [7 f[j_47]+0 S4 A32])) "fs/pipe.c":87:41 75 {*movsi_internal}
     (nil))
(insn 88 87 89 14 (parallel [
            (set (reg:SI 2 cx [141])
                (plus:SI (reg:SI 2 cx [orig:95 _14 ] [95])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":87:38 209 {*addsi_1}
     (nil))
(insn 89 88 90 14 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [141])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:94 current.14_13 ] [94])) [7 current.14_13->filp[_14]+0 S4 A32])
        (reg/f:SI 1 dx [orig:96 _15 ] [96])) "fs/pipe.c":87:38 75 {*movsi_internal}
     (nil))
(insn 90 89 91 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 24 [0x18])) [11 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 24 [0x18])) [11 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":88:14 209 {*addsi_1}
     (nil))
(code_label 91 90 92 15 38 (nil) [1 uses])
(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":85:40 209 {*addsi_1}
     (nil))
(code_label 94 93 95 16 37 (nil) [1 uses])
(note 95 94 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 98 95 99 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":85:23 11 {*cmpsi_1}
     (nil))
(jump_insn 99 98 100 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/pipe.c":85:23 806 {*jcc}
     (nil)
 -> 106)
(note 100 99 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 100 105 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [11 i+0 S4 A32])
            (const_int 19 [0x13]))) "fs/pipe.c":85:23 11 {*cmpsi_1}
     (nil))
(jump_insn 105 104 106 17 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "fs/pipe.c":85:23 806 {*jcc}
     (nil)
 -> 101)
(code_label 106 105 107 18 39 (nil) [1 uses])
(note 107 106 108 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":90:8 11 {*cmpsi_1}
     (nil))
(jump_insn 109 108 110 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/pipe.c":90:8 806 {*jcc}
     (nil)
 -> 116)
(note 110 109 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 19 (set (reg/f:SI 0 ax [142])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7dde6912f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":91:16 75 {*movsi_internal}
     (nil))
(insn 112 111 113 19 (set (reg/f:SI 0 ax [orig:97 current.15_16 ] [97])
        (mem/f/c:SI (reg/f:SI 0 ax [142]) [4 current+0 S4 A32])) "fs/pipe.c":91:16 75 {*movsi_internal}
     (nil))
(insn 113 112 114 19 (set (reg:SI 1 dx [orig:98 _17 ] [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 fd[0]+0 S4 A32])) "fs/pipe.c":91:25 75 {*movsi_internal}
     (nil))
(insn 114 113 115 19 (parallel [
            (set (reg:SI 1 dx [143])
                (plus:SI (reg:SI 1 dx [orig:98 _17 ] [98])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":91:30 209 {*addsi_1}
     (nil))
(insn 115 114 116 19 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [143])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:97 current.15_16 ] [97])) [7 current.15_16->filp[_17]+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":91:30 75 {*movsi_internal}
     (nil))
(code_label 116 115 117 20 41 (nil) [1 uses])
(note 117 116 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 117 121 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":92:8 11 {*cmpsi_1}
     (nil))
(jump_insn 121 120 122 20 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "fs/pipe.c":92:8 806 {*jcc}
     (nil)
 -> 131)
(note 122 121 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 21 (set (reg/f:SI 0 ax [orig:99 _18 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 f[1]+0 S4 A32])) "fs/pipe.c":93:26 75 {*movsi_internal}
     (nil))
(insn 124 123 125 21 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:99 _18 ] [99])
                (const_int 4 [0x4])) [2 _18->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/pipe.c":93:39 76 {*movhi_internal}
     (nil))
(insn 125 124 126 21 (set (reg/f:SI 1 dx [orig:100 _19 ] [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 f[0]+0 S4 A32])) "fs/pipe.c":93:10 75 {*movsi_internal}
     (nil))
(insn 126 125 127 21 (set (reg:HI 0 ax [orig:101 _20 ] [101])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:99 _18 ] [99])
                (const_int 4 [0x4])) [2 _18->f_count+0 S2 A32])) "fs/pipe.c":93:29 76 {*movhi_internal}
     (nil))
(insn 127 126 128 21 (set (mem:HI (plus:SI (reg/f:SI 1 dx [orig:100 _19 ] [100])
                (const_int 4 [0x4])) [2 _19->f_count+0 S2 A32])
        (reg:HI 0 ax [orig:101 _20 ] [101])) "fs/pipe.c":93:23 76 {*movhi_internal}
     (nil))
(insn 128 127 211 21 (set (reg:SI 0 ax [orig:123 _48 ] [123])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":94:16 75 {*movsi_internal}
     (nil))
(jump_insn 211 128 212 21 (set (pc)
        (label_ref 196)) "fs/pipe.c":94:16 807 {jump}
     (nil)
 -> 196)
(barrier 212 211 131)
(code_label 131 212 132 22 42 (nil) [1 uses])
(note 132 131 134 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 134 132 136 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_pipe_inode") [flags 0x41]  <function_decl 0x7dde69116b00 get_pipe_inode>) [0 get_pipe_inode S1 A8])
            (const_int 0 [0]))) "fs/pipe.c":96:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 136 134 137 22 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 inode+0 S4 A32])
        (reg:SI 0 ax [144])) "fs/pipe.c":96:19 75 {*movsi_internal}
     (nil))
(insn 137 136 138 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [6 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":96:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 138 137 139 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "fs/pipe.c":96:8 806 {*jcc}
     (nil)
 -> 160)
(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 23 (set (reg/f:SI 0 ax [145])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7dde6912f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":98:20 75 {*movsi_internal}
     (nil))
(insn 141 140 142 23 (set (reg/f:SI 0 ax [orig:102 current.16_21 ] [102])
        (mem/f/c:SI (reg/f:SI 0 ax [145]) [4 current+0 S4 A32])) "fs/pipe.c":98:20 75 {*movsi_internal}
     (nil))
(insn 142 141 143 23 (set (reg:SI 1 dx [orig:103 _22 ] [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 fd[1]+0 S4 A32])) "fs/pipe.c":98:29 75 {*movsi_internal}
     (nil))
(insn 143 142 144 23 (parallel [
            (set (reg:SI 2 cx [146])
                (plus:SI (reg:SI 1 dx [orig:103 _22 ] [103])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":98:34 209 {*addsi_1}
     (nil))
(insn 144 143 145 23 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [146])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:102 current.16_21 ] [102])) [7 current.16_21->filp[_22]+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":98:34 75 {*movsi_internal}
     (nil))
(insn 145 144 146 23 (set (reg/f:SI 2 cx [147])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7dde6912f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":97:16 75 {*movsi_internal}
     (nil))
(insn 146 145 147 23 (set (reg/f:SI 2 cx [orig:104 current.17_23 ] [104])
        (mem/f/c:SI (reg/f:SI 2 cx [147]) [4 current+0 S4 A32])) "fs/pipe.c":97:16 75 {*movsi_internal}
     (nil))
(insn 147 146 148 23 (set (reg:SI 3 bx [orig:105 _24 ] [105])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 fd[0]+0 S4 A32])) "fs/pipe.c":97:25 75 {*movsi_internal}
     (nil))
(insn 148 147 149 23 (parallel [
            (set (reg:SI 1 dx [148])
                (plus:SI (reg:SI 1 dx [orig:103 _22 ] [103])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":98:26 209 {*addsi_1}
     (nil))
(insn 149 148 150 23 (set (reg/f:SI 0 ax [orig:106 _25 ] [106])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [148])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:102 current.16_21 ] [102])) [7 current.16_21->filp[_22]+0 S4 A32])) "fs/pipe.c":98:26 75 {*movsi_internal}
     (nil))
(insn 150 149 151 23 (parallel [
            (set (reg:SI 1 dx [149])
                (plus:SI (reg:SI 3 bx [orig:105 _24 ] [105])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":97:30 209 {*addsi_1}
     (nil))
(insn 151 150 152 23 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [149])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 cx [orig:104 current.17_23 ] [104])) [7 current.17_23->filp[_24]+0 S4 A32])
        (reg/f:SI 0 ax [orig:106 _25 ] [106])) "fs/pipe.c":97:30 75 {*movsi_internal}
     (nil))
(insn 152 151 153 23 (set (reg/f:SI 0 ax [orig:107 _26 ] [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 f[1]+0 S4 A32])) "fs/pipe.c":99:26 75 {*movsi_internal}
     (nil))
(insn 153 152 154 23 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:107 _26 ] [107])
                (const_int 4 [0x4])) [2 _26->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/pipe.c":99:39 76 {*movhi_internal}
     (nil))
(insn 154 153 155 23 (set (reg/f:SI 1 dx [orig:108 _27 ] [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 f[0]+0 S4 A32])) "fs/pipe.c":99:10 75 {*movsi_internal}
     (nil))
(insn 155 154 156 23 (set (reg:HI 0 ax [orig:109 _28 ] [109])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:107 _26 ] [107])
                (const_int 4 [0x4])) [2 _26->f_count+0 S2 A32])) "fs/pipe.c":99:29 76 {*movhi_internal}
     (nil))
(insn 156 155 157 23 (set (mem:HI (plus:SI (reg/f:SI 1 dx [orig:108 _27 ] [108])
                (const_int 4 [0x4])) [2 _27->f_count+0 S2 A32])
        (reg:HI 0 ax [orig:109 _28 ] [109])) "fs/pipe.c":99:23 76 {*movhi_internal}
     (nil))
(insn 157 156 213 23 (set (reg:SI 0 ax [orig:123 _48 ] [123])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":100:16 75 {*movsi_internal}
     (nil))
(jump_insn 213 157 214 23 (set (pc)
        (label_ref 196)) "fs/pipe.c":100:16 807 {jump}
     (nil)
 -> 196)
(barrier 214 213 160)
(code_label 160 214 161 24 43 (nil) [1 uses])
(note 161 160 162 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 24 (set (reg/f:SI 0 ax [orig:110 _29 ] [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 f[1]+0 S4 A32])) "fs/pipe.c":102:22 75 {*movsi_internal}
     (nil))
(insn 163 162 164 24 (set (reg/f:SI 1 dx [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 inode+0 S4 A32])) "fs/pipe.c":102:35 75 {*movsi_internal}
     (nil))
(insn 164 163 165 24 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:110 _29 ] [110])
                (const_int 8 [0x8])) [6 _29->f_inode+0 S4 A32])
        (reg/f:SI 1 dx [150])) "fs/pipe.c":102:35 75 {*movsi_internal}
     (nil))
(insn 165 164 166 24 (set (reg/f:SI 1 dx [orig:111 _30 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 f[0]+0 S4 A32])) "fs/pipe.c":102:6 75 {*movsi_internal}
     (nil))
(insn 166 165 167 24 (set (reg/f:SI 0 ax [orig:112 _31 ] [112])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:110 _29 ] [110])
                (const_int 8 [0x8])) [6 _29->f_inode+0 S4 A32])) "fs/pipe.c":102:25 75 {*movsi_internal}
     (nil))
(insn 167 166 168 24 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [orig:111 _30 ] [111])
                (const_int 8 [0x8])) [6 _30->f_inode+0 S4 A32])
        (reg/f:SI 0 ax [orig:112 _31 ] [112])) "fs/pipe.c":102:19 75 {*movsi_internal}
     (nil))
(insn 168 167 169 24 (set (reg/f:SI 0 ax [orig:113 _32 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 f[1]+0 S4 A32])) "fs/pipe.c":103:22 75 {*movsi_internal}
     (nil))
(insn 169 168 170 24 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:113 _32 ] [113])
                (const_int 12 [0xc])) [3 _32->f_pos+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":103:35 75 {*movsi_internal}
     (nil))
(insn 170 169 171 24 (set (reg/f:SI 1 dx [orig:114 _33 ] [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 f[0]+0 S4 A32])) "fs/pipe.c":103:6 75 {*movsi_internal}
     (nil))
(insn 171 170 172 24 (set (reg:SI 0 ax [orig:115 _34 ] [115])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:113 _32 ] [113])
                (const_int 12 [0xc])) [3 _32->f_pos+0 S4 A32])) "fs/pipe.c":103:25 75 {*movsi_internal}
     (nil))
(insn 172 171 173 24 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:114 _33 ] [114])
                (const_int 12 [0xc])) [3 _33->f_pos+0 S4 A32])
        (reg:SI 0 ax [orig:115 _34 ] [115])) "fs/pipe.c":103:19 75 {*movsi_internal}
     (nil))
(insn 173 172 174 24 (set (reg/f:SI 0 ax [orig:116 _35 ] [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 f[0]+0 S4 A32])) "fs/pipe.c":104:6 75 {*movsi_internal}
     (nil))
(insn 174 173 175 24 (set (mem:HI (reg/f:SI 0 ax [orig:116 _35 ] [116]) [2 _35->f_mode+0 S2 A32])
        (const_int 1 [0x1])) "fs/pipe.c":104:19 76 {*movhi_internal}
     (nil))
(insn 175 174 176 24 (set (reg/f:SI 0 ax [orig:117 _36 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 f[1]+0 S4 A32])) "fs/pipe.c":105:6 75 {*movsi_internal}
     (nil))
(insn 176 175 177 24 (set (mem:HI (reg/f:SI 0 ax [orig:117 _36 ] [117]) [2 _36->f_mode+0 S2 A32])
        (const_int 2 [0x2])) "fs/pipe.c":105:19 76 {*movhi_internal}
     (nil))
(insn 177 176 179 24 (set (reg:SI 0 ax [orig:118 _37 ] [118])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [11 fd[0]+0 S4 A32])) "fs/pipe.c":106:19 75 {*movsi_internal}
     (nil))
(insn 179 177 180 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":106:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 180 179 181 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [17  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [17 fildes+0 S4 A32])) "fs/pipe.c":106:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 181 180 182 24 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:119 _38 ] [119])) "fs/pipe.c":106:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 182 181 183 24 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7dde6913a100 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":106:5 812 {*call}
     (nil)
    (nil))
(insn 183 182 184 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":106:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 184 183 185 24 (set (reg/f:SI 0 ax [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [17 fildes+0 S4 A32])) "fs/pipe.c":107:5 75 {*movsi_internal}
     (nil))
(insn 185 184 186 24 (parallel [
            (set (reg/f:SI 0 ax [orig:120 _39 ] [120])
                (plus:SI (reg/f:SI 0 ax [151])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":107:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [17 fildes+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 186 185 188 24 (set (reg:SI 1 dx [orig:121 _40 ] [121])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 fd[1]+0 S4 A32])) "fs/pipe.c":107:19 75 {*movsi_internal}
     (nil))
(insn 188 186 189 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":107:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 189 188 190 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [17  S4 A32])
        (reg/f:SI 0 ax [orig:120 _39 ] [120])) "fs/pipe.c":107:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 190 189 191 24 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:122 _41 ] [122])) "fs/pipe.c":107:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 191 190 192 24 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7dde6913a100 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":107:5 812 {*call}
     (nil)
    (nil))
(insn 192 191 193 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":107:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 193 192 196 24 (set (reg:SI 0 ax [orig:123 _48 ] [123])
        (const_int 0 [0])) "fs/pipe.c":108:12 75 {*movsi_internal}
     (nil))
(code_label 196 193 197 25 44 (nil) [3 uses])
(note 197 196 203 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 203 197 216 25 (use (reg/i:SI 0 ax)) "fs/pipe.c":109:1 -1
     (nil))
(note 216 203 0 NOTE_INSN_DELETED)
