
;; Function get_fs_byte (get_fs_byte, funcdef_no=0, decl_uid=1184, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 5(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 18(l0): point = 14
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..10]
 a4(r87): [11..12]
 a5(r82): [14..14]
Compressing live ranges: from 17 to 11 - 64%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [8..9]
 a5(r82): [10..10]
  pref0:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    4:r87  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 31{16d,15u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 86 [ _v ])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 87) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 7 8 2 (set (reg/v:QI 83 [ _v ])
        (reg:QI 86 [ _v ])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86 [ _v ])
        (nil)))
(insn 8 5 11 2 (set (reg:QI 84 [ _4 ])
        (reg/v:QI 83 [ _v ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 83 [ _v ])
        (nil)))
(insn 11 8 15 2 (set (reg:QI 85 [ <retval> ])
        (reg:QI 84 [ _4 ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84 [ _4 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:QI 0 ax)
        (reg:QI 85 [ <retval> ])) "include/asm/segment.h":10:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 85 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))

;; Function put_fs_byte (put_fs_byte, funcdef_no=1, decl_uid=1189, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r85,l0) best Q_REGS, allocno Q_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 14(l0): point = 0
   Insn 10(l0): point = 3
   Insn 9(l0): point = 5
   Insn 8(l0): point = 7
   Insn 4(l0): point = 9
   Insn 3(l0): point = 11
   Insn 2(l0): point = 13
   Insn 15(l0): point = 15
 a0(r85): [4..7]
 a1(r86): [4..5]
 a2(r84): [10..11]
 a3(r83): [12..13]
 a4(r82): [15..15]
Compressing live ranges: from 18 to 7 - 38%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r86): [0..1]
 a2(r84): [2..3]
 a3(r83): [4..5]
 a4(r82): [6..6]
  regions=1, blocks=4, points=7
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    3:r83  l0     0    2:r84  l0     0    0:r85  l0     0
    1:r86  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,5u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 33{14d,19u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 15 3 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 84)
        (subreg:QI (reg:SI 83) 0)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 83)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])
        (reg:QI 84)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 85)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 85)
                    (mem:QI (reg/f:SI 86) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_DEAD (reg:QI 85)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))

;; Function block_read (block_read, funcdef_no=7, decl_uid=1215, cgraph_uid=8, symbol_order=7)

scanning new insn with uid = 138.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 20 count 19 (  1.2)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 10 9 5 3 4
;;
;; Loop 2
;;  header 11, latch 10
;;  depth 2, outer 1
;;  nodes: 11 10
;; 2 succs { 13 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 15 }
;; 8 succs { 15 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 10 12 }
;; 12 succs { 13 }
;; 13 succs { 3 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a8 (r96,l0) best Q_REGS, allocno Q_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a2(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a4(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a16(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a19(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a20(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a22(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a30(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a32(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 128(l0): point = 0
   Insn 127(l0): point = 2
   Insn 123(l0): point = 4
   Insn 120(l0): point = 7
   Insn 134(l0): point = 10
   Insn 58(l0): point = 12
   Insn 132(l0): point = 15
   Insn 53(l0): point = 17
   Insn 51(l0): point = 20
   Insn 50(l0): point = 22
   Insn 26(l0): point = 25
   Insn 25(l0): point = 27
   Insn 24(l0): point = 29
   Insn 23(l0): point = 31
   Insn 22(l0): point = 33
   Insn 21(l0): point = 35
   Insn 118(l0): point = 38
   Insn 117(l0): point = 40
   Insn 111(l0): point = 43
   Insn 110(l0): point = 45
   Insn 109(l0): point = 47
   Insn 108(l0): point = 49
   Insn 107(l0): point = 51
   Insn 105(l0): point = 54
   Insn 104(l0): point = 56
   Insn 100(l0): point = 58
   Insn 99(l0): point = 60
   Insn 98(l0): point = 62
   Insn 95(l0): point = 65
   Insn 94(l0): point = 67
   Insn 93(l0): point = 69
   Insn 92(l0): point = 71
   Insn 91(l0): point = 73
   Insn 90(l0): point = 75
   Insn 89(l0): point = 77
   Insn 88(l0): point = 79
   Insn 87(l0): point = 81
   Insn 86(l0): point = 83
   Insn 85(l0): point = 85
   Insn 84(l0): point = 87
   Insn 136(l0): point = 90
   Insn 80(l0): point = 92
   Insn 79(l0): point = 94
   Insn 78(l0): point = 96
   Insn 77(l0): point = 98
   Insn 76(l0): point = 100
   Insn 75(l0): point = 102
   Insn 74(l0): point = 104
   Insn 73(l0): point = 106
   Insn 72(l0): point = 108
   Insn 71(l0): point = 110
   Insn 70(l0): point = 112
   Insn 69(l0): point = 114
   Insn 68(l0): point = 116
   Insn 67(l0): point = 118
   Insn 66(l0): point = 120
   Insn 65(l0): point = 122
   Insn 48(l0): point = 125
   Insn 47(l0): point = 127
   Insn 46(l0): point = 129
   Insn 45(l0): point = 131
   Insn 44(l0): point = 133
   Insn 43(l0): point = 135
   Insn 42(l0): point = 137
   Insn 41(l0): point = 139
   Insn 40(l0): point = 141
   Insn 39(l0): point = 143
   Insn 38(l0): point = 145
   Insn 37(l0): point = 147
   Insn 36(l0): point = 149
   Insn 35(l0): point = 151
   Insn 34(l0): point = 153
   Insn 33(l0): point = 155
   Insn 32(l0): point = 157
   Insn 29(l0): point = 160
   Insn 28(l0): point = 162
   Insn 130(l0): point = 165
   Insn 14(l0): point = 167
   Insn 13(l0): point = 169
   Insn 12(l0): point = 171
   Insn 11(l0): point = 173
   Insn 10(l0): point = 175
   Insn 9(l0): point = 177
   Insn 8(l0): point = 179
   Insn 7(l0): point = 181
   Insn 6(l0): point = 183
   Insn 5(l0): point = 185
   Insn 138(l0): point = 187
 a0(r101): [3..4]
 a1(r100): [15..17] [10..12] [5..7]
 a2(r82): [25..187]
 a3(r98): [57..62]
 a4(r120): [59..60]
 a5(r99): [82..114] [54..79]
 a6(r97): [70..75]
 a7(r94): [72..87]
 a8(r96): [76..77]
 a9(r95): [78..81]
 a10(r119): [84..85]
 a11(r118): [93..94]
 a12(r117): [97..98]
 a13(r116): [101..102]
 a14(r93): [101..104]
 a15(r92): [105..106]
 a16(r91): [105..108]
 a17(r115): [109..110]
 a18(r90): [115..116]
 a19(r89): [115..118]
 a20(r114): [119..120]
 a21(r113): [130..131]
 a22(r88): [144..151]
 a23(r87): [146..155]
 a24(r112): [152..153]
 a25(r111): [156..157]
 a26(r110): [161..162]
 a27(r109): [28..29]
 a28(r107): [32..33]
 a29(r108): [34..35]
 a30(r104): [170..171]
 a31(r86): [172..173]
 a32(r85): [174..175]
 a33(r103): [176..177]
 a34(r84): [180..181]
 a35(r83): [182..183]
 a36(r102): [184..185]
Compressing live ranges: from 190 to 62 - 32%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r100): [2..7]
 a2(r82): [8..61]
 a3(r98): [14..15]
 a4(r120): [14..15]
 a5(r99): [14..33]
 a6(r97): [16..17]
 a7(r94): [16..23]
 a8(r96): [18..19]
 a9(r95): [20..21]
 a10(r119): [22..23]
 a11(r118): [24..25]
 a12(r117): [26..27]
 a13(r116): [28..29]
 a14(r93): [28..29]
 a15(r92): [30..31]
 a16(r91): [30..31]
 a17(r115): [32..33]
 a18(r90): [34..35]
 a19(r89): [34..35]
 a20(r114): [36..37]
 a21(r113): [38..39]
 a22(r88): [40..41]
 a23(r87): [40..43]
 a24(r112): [42..43]
 a25(r111): [44..45]
 a26(r110): [46..47]
 a27(r109): [8..9]
 a28(r107): [10..11]
 a29(r108): [12..13]
 a30(r104): [48..49]
 a31(r86): [50..51]
 a32(r85): [52..53]
 a33(r103): [54..55]
 a34(r84): [56..57]
 a35(r83): [58..59]
 a36(r102): [60..61]
  pref0:a21(r113)<-hr0@1500
  pref1:a0(r101)<-hr0@1500
  regions=1, blocks=16, points=62
    allocnos=37 (big 0), copies=0, conflicts=0, ranges=37
Disposition:
    2:r82  l0     4   35:r83  l0     0   34:r84  l0     0   32:r85  l0     0
   31:r86  l0     0   23:r87  l0     1   22:r88  l0     0   19:r89  l0     1
   18:r90  l0     0   16:r91  l0     1   15:r92  l0     0   14:r93  l0     1
    7:r94  l0     0    9:r95  l0     1    8:r96  l0     1    6:r97  l0     1
    3:r98  l0     0    5:r99  l0     3    1:r100 l0     0    0:r101 l0     0
   36:r102 l0     0   33:r103 l0     0   30:r104 l0     0   28:r107 l0     0
   29:r108 l0     0   27:r109 l0     0   26:r110 l0     0   25:r111 l0     0
   24:r112 l0     0   21:r113 l0     0   20:r114 l0     0   17:r115 l0     0
   13:r116 l0     0   12:r117 l0     0   11:r118 l0     0   10:r119 l0     1
    4:r120 l0     1
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


block_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={2d,2u} r6={1d,15u} r7={15d,38u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,26u} r17={28d,5u} r18={3d} r19={1d,43u,2e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,2u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,2u} r95={1d,2u} r96={1d,1u} r97={1d,1u} r98={1d,2u} r99={2d,1u} r100={3d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} 
;;    total ref usage 471{296d,173u,2e} in 88{85 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 138 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 138 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 138 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 pos+0 S4 A32])) "fs/block_dev.c":15:17 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 83 [ _1 ])
        (mem:SI (reg/f:SI 102) [1 *pos_32(D)+0 S4 A32])) "fs/block_dev.c":15:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (lshiftrt:SI (reg:SI 83 [ _1 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":15:22 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
        (reg:SI 84 [ _2 ])) "fs/block_dev.c":15:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 pos+0 S4 A32])) "fs/block_dev.c":16:18 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 85 [ _3 ])
        (mem:SI (reg/f:SI 103) [1 *pos_32(D)+0 S4 A32])) "fs/block_dev.c":16:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 86 [ _4 ])
        (reg:SI 85 [ _3 ])) "fs/block_dev.c":16:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 104)
                (and:SI (reg:SI 86 [ _4 ])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":16:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])
        (reg:SI 104)) "fs/block_dev.c":16:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 14 13 130 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 read+0 S4 A32])
        (const_int 0 [0])) "fs/block_dev.c":18:9 75 {*movsi_internal}
     (nil))
(jump_insn 130 14 131 2 (set (pc)
        (label_ref 112)) "fs/block_dev.c":22:11 807 {jump}
     (nil)
 -> 112)
(barrier 131 130 114)
(code_label 114 131 17 3 13 (nil) [1 uses])
(note 17 114 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 17 22 3 (set (reg:SI 108)
        (const_int 1024 [0x400])) "fs/block_dev.c":23:15 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg:SI 107)
                (minus:SI (reg:SI 108)
                    (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":23:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])
        (reg:SI 107)) "fs/block_dev.c":23:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 24 23 25 3 (set (reg:SI 109)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":24:12 75 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 109)
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [3 count+0 S4 A32]))) "fs/block_dev.c":24:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "fs/block_dev.c":24:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 30)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "fs/block_dev.c":25:19 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])
        (reg:SI 110)) "fs/block_dev.c":25:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(code_label 30 29 31 5 6 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])) "fs/block_dev.c":26:20 75 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (parallel [
            (set (reg:SI 87 [ _5 ])
                (plus:SI (reg:SI 111)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":26:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 34 33 35 5 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])) "fs/block_dev.c":26:20 75 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:SI 88 [ _6 ])
                (plus:SI (reg:SI 112)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":26:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 36 35 37 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":26:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 37 36 38 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (const_int -1 [0xffffffffffffffff])) "fs/block_dev.c":26:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 38 37 39 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 87 [ _5 ])) "fs/block_dev.c":26:20 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
            (nil))))
(insn 39 38 40 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 88 [ _6 ])) "fs/block_dev.c":26:20 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 40 39 41 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])) "fs/block_dev.c":26:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 41 40 42 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [3 dev+0 S4 A32])) "fs/block_dev.c":26:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 42 41 43 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/block_dev.c":26:20 75 {*movsi_internal}
     (nil))
(call_insn 43 42 44 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("breada") [flags 0x41]  <function_decl 0x7b7b82f0e600 breada>) [0 breada S1 A8])
            (const_int 32 [0x20]))) "fs/block_dev.c":26:20 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":26:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 45 44 46 5 (set (reg:SI 113)
        (reg:SI 0 ax)) "fs/block_dev.c":26:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 46 45 47 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])
        (reg:SI 113)) "fs/block_dev.c":26:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 47 46 48 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/block_dev.c":26:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "fs/block_dev.c":26:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [3 read+0 S4 A32])
            (const_int 0 [0]))) "fs/block_dev.c":27:32 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 51 50 52 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "fs/block_dev.c":27:32 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 56)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 132 7 (set (reg:SI 100 [ iftmp.0_27 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 read+0 S4 A32])) "fs/block_dev.c":27:32 75 {*movsi_internal}
     (nil))
(jump_insn 132 53 133 7 (set (pc)
        (label_ref 121)) "fs/block_dev.c":27:32 807 {jump}
     (nil)
 -> 121)
(barrier 133 132 56)
(code_label 56 133 57 8 8 (nil) [1 uses])
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 134 8 (set (reg:SI 100 [ iftmp.0_27 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/block_dev.c":27:32 75 {*movsi_internal}
     (nil))
(jump_insn 134 58 135 8 (set (pc)
        (label_ref 121)) "fs/block_dev.c":27:32 807 {jump}
     (nil)
 -> 121)
(barrier 135 134 63)
(code_label 63 135 64 9 7 (nil) [1 uses])
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":28:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 66 65 67 9 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])) "fs/block_dev.c":29:24 75 {*movsi_internal}
     (nil))
(insn 67 66 68 9 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (reg/f:SI 114) [2 bh_43->b_data+0 S4 A32])) "fs/block_dev.c":29:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 68 67 69 9 (set (reg:SI 90 [ offset.1_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])) "fs/block_dev.c":29:20 75 {*movsi_internal}
     (nil))
(insn 69 68 70 9 (parallel [
            (set (reg/v/f:SI 99 [ p ])
                (plus:SI (reg/f:SI 89 [ _7 ])
                    (reg:SI 90 [ offset.1_8 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":29:11 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ offset.1_8 ])
        (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 70 69 71 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])
        (const_int 0 [0])) "fs/block_dev.c":30:16 75 {*movsi_internal}
     (nil))
(insn 71 70 72 9 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 pos+0 S4 A32])) "fs/block_dev.c":31:14 75 {*movsi_internal}
     (nil))
(insn 72 71 73 9 (set (reg:SI 91 [ _9 ])
        (mem:SI (reg/f:SI 115) [1 *pos_32(D)+0 S4 A32])) "fs/block_dev.c":31:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 73 72 74 9 (set (reg:SI 92 [ chars.2_10 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":31:14 75 {*movsi_internal}
     (nil))
(insn 74 73 75 9 (parallel [
            (set (reg:SI 93 [ _11 ])
                (plus:SI (reg:SI 91 [ _9 ])
                    (reg:SI 92 [ chars.2_10 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":31:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ chars.2_10 ])
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 75 74 76 9 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [5 pos+0 S4 A32])) "fs/block_dev.c":31:14 75 {*movsi_internal}
     (nil))
(insn 76 75 77 9 (set (mem:SI (reg/f:SI 116) [1 *pos_32(D)+0 S4 A32])
        (reg:SI 93 [ _11 ])) "fs/block_dev.c":31:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
            (nil))))
(insn 77 76 78 9 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":32:14 75 {*movsi_internal}
     (nil))
(insn 78 77 79 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [3 read+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [3 read+0 S4 A32])
                    (reg:SI 117)))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":32:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 80 9 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":33:15 75 {*movsi_internal}
     (nil))
(insn 80 79 136 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 12 [0xc])) [3 count+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [3 count+0 S4 A32])
                    (reg:SI 118)))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":33:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 136 80 137 9 (set (pc)
        (label_ref 96)) "fs/block_dev.c":34:15 807 {jump}
     (nil)
 -> 96)
(barrier 137 136 101)
(code_label 101 137 83 10 12 (nil) [1 uses])
(note 83 101 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 10 (set (reg/f:SI 94 [ buf.3_12 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 buf+0 S4 A32])) "fs/block_dev.c":35:13 75 {*movsi_internal}
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg:SI 119)
                (plus:SI (reg/f:SI 94 [ buf.3_12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":35:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 86 85 87 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 buf+0 S4 A32])
        (reg:SI 119)) "fs/block_dev.c":35:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 87 86 88 10 (set (reg/f:SI 95 [ p.4_13 ])
        (reg/v/f:SI 99 [ p ])) "fs/block_dev.c":35:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 99 [ p ])
        (nil)))
(insn 88 87 89 10 (parallel [
            (set (reg/v/f:SI 99 [ p ])
                (plus:SI (reg/f:SI 95 [ p.4_13 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":35:28 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 10 (set (reg:QI 96 [ _14 ])
        (mem:QI (reg/f:SI 95 [ p.4_13 ]) [0 *p.4_13+0 S1 A8])) "fs/block_dev.c":35:25 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ p.4_13 ])
        (nil)))
(insn 90 89 91 10 (set (reg:SI 97 [ _15 ])
        (sign_extend:SI (reg:QI 96 [ _14 ]))) "fs/block_dev.c":35:13 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 96 [ _14 ])
        (nil)))
(insn 91 90 92 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":35:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 92 91 93 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 94 [ buf.3_12 ])) "fs/block_dev.c":35:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 94 [ buf.3_12 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 93 92 94 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 97 [ _15 ])) "fs/block_dev.c":35:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 94 93 95 10 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x7b7b82f10a00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/block_dev.c":35:13 812 {*call}
     (nil)
    (nil))
(insn 95 94 96 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":35:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 96 95 97 11 11 (nil) [1 uses])
(note 97 96 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 11 (set (reg:SI 98 [ chars.5_16 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":34:21 75 {*movsi_internal}
     (nil))
(insn 99 98 100 11 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 98 [ chars.5_16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":34:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 104 11 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])
        (reg:SI 120)) "fs/block_dev.c":34:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(insn 104 100 105 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 98 [ chars.5_16 ])
            (const_int 0 [0]))) "fs/block_dev.c":34:24 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 98 [ chars.5_16 ])
        (nil)))
(jump_insn 105 104 106 11 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "fs/block_dev.c":34:24 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 101)
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":36:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 108 107 109 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])) "fs/block_dev.c":36:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 109 108 110 12 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/block_dev.c":36:9 75 {*movsi_internal}
     (nil))
(call_insn 110 109 111 12 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7b7b82f0e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/block_dev.c":36:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 111 110 112 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":36:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 112 111 113 13 5 (nil) [1 uses])
(note 113 112 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 113 118 13 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [3 count+0 S4 A32])
            (const_int 0 [0]))) "fs/block_dev.c":22:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 118 117 119 13 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "fs/block_dev.c":22:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 114)
(note 119 118 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 14 (set (reg:SI 100 [ iftmp.0_27 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 read+0 S4 A32])) "fs/block_dev.c":38:12 75 {*movsi_internal}
     (nil))
(code_label 121 120 122 15 10 (nil) [2 uses])
(note 122 121 123 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 127 15 (set (reg:SI 101 [ <retval> ])
        (reg:SI 100 [ iftmp.0_27 ])) "fs/block_dev.c":39:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ iftmp.0_27 ])
        (nil)))
(insn 127 123 128 15 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) "fs/block_dev.c":39:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ <retval> ])
        (nil)))
(insn 128 127 0 15 (use (reg/i:SI 0 ax)) "fs/block_dev.c":39:1 -1
     (nil))

;; Function block_write (block_write, funcdef_no=8, decl_uid=1157, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 158.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 24 count 22 (  1.2)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 14 13 12 8 7 6 5 3 4
;;
;; Loop 2
;;  header 14, latch 13
;;  depth 2, outer 1
;;  nodes: 14 13
;; 2 succs { 16 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 12 }
;; 9 succs { 10 11 }
;; 10 succs { 18 }
;; 11 succs { 18 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 13 15 }
;; 15 succs { 16 }
;; 16 succs { 3 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a8 (r94,l0) best Q_REGS, allocno Q_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a2(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:24000
  a3(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a5(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a9(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a10(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a11(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a20(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a21(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a23(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a28(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a32(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 146(l0): point = 0
   Insn 145(l0): point = 2
   Insn 141(l0): point = 4
   Insn 138(l0): point = 7
   Insn 154(l0): point = 10
   Insn 75(l0): point = 12
   Insn 152(l0): point = 15
   Insn 70(l0): point = 17
   Insn 68(l0): point = 20
   Insn 67(l0): point = 22
   Insn 25(l0): point = 25
   Insn 24(l0): point = 27
   Insn 23(l0): point = 29
   Insn 22(l0): point = 31
   Insn 21(l0): point = 33
   Insn 20(l0): point = 35
   Insn 136(l0): point = 38
   Insn 135(l0): point = 40
   Insn 129(l0): point = 43
   Insn 128(l0): point = 45
   Insn 127(l0): point = 47
   Insn 126(l0): point = 49
   Insn 125(l0): point = 51
   Insn 124(l0): point = 53
   Insn 123(l0): point = 55
   Insn 121(l0): point = 58
   Insn 120(l0): point = 60
   Insn 116(l0): point = 62
   Insn 115(l0): point = 64
   Insn 114(l0): point = 66
   Insn 111(l0): point = 69
   Insn 110(l0): point = 71
   Insn 109(l0): point = 73
   Insn 108(l0): point = 75
   Insn 107(l0): point = 77
   Insn 106(l0): point = 79
   Insn 105(l0): point = 81
   Insn 104(l0): point = 83
   Insn 103(l0): point = 85
   Insn 102(l0): point = 87
   Insn 101(l0): point = 89
   Insn 100(l0): point = 91
   Insn 156(l0): point = 94
   Insn 96(l0): point = 96
   Insn 95(l0): point = 98
   Insn 94(l0): point = 100
   Insn 93(l0): point = 102
   Insn 92(l0): point = 104
   Insn 91(l0): point = 106
   Insn 90(l0): point = 108
   Insn 89(l0): point = 110
   Insn 88(l0): point = 112
   Insn 87(l0): point = 114
   Insn 86(l0): point = 116
   Insn 85(l0): point = 118
   Insn 84(l0): point = 120
   Insn 83(l0): point = 122
   Insn 82(l0): point = 124
   Insn 65(l0): point = 127
   Insn 64(l0): point = 129
   Insn 63(l0): point = 131
   Insn 60(l0): point = 134
   Insn 59(l0): point = 136
   Insn 58(l0): point = 138
   Insn 57(l0): point = 140
   Insn 56(l0): point = 142
   Insn 55(l0): point = 144
   Insn 54(l0): point = 146
   Insn 53(l0): point = 148
   Insn 52(l0): point = 150
   Insn 51(l0): point = 152
   Insn 50(l0): point = 154
   Insn 49(l0): point = 156
   Insn 48(l0): point = 158
   Insn 47(l0): point = 160
   Insn 46(l0): point = 162
   Insn 150(l0): point = 165
   Insn 41(l0): point = 167
   Insn 40(l0): point = 169
   Insn 39(l0): point = 171
   Insn 38(l0): point = 173
   Insn 37(l0): point = 175
   Insn 36(l0): point = 177
   Insn 35(l0): point = 179
   Insn 34(l0): point = 181
   Insn 32(l0): point = 184
   Insn 31(l0): point = 186
   Insn 28(l0): point = 189
   Insn 27(l0): point = 191
   Insn 148(l0): point = 194
   Insn 13(l0): point = 196
   Insn 12(l0): point = 198
   Insn 11(l0): point = 200
   Insn 10(l0): point = 202
   Insn 9(l0): point = 204
   Insn 8(l0): point = 206
   Insn 7(l0): point = 208
   Insn 6(l0): point = 210
   Insn 5(l0): point = 212
   Insn 158(l0): point = 214
 a0(r98): [3..4]
 a1(r97): [15..17] [10..12] [5..7]
 a2(r82): [25..214]
 a3(r121): [54..55]
 a4(r95): [61..66]
 a5(r120): [63..64]
 a6(r96): [76..118] [58..73]
 a7(r93): [70..75]
 a8(r94): [70..71]
 a9(r92): [72..77]
 a10(r91): [84..91]
 a11(r119): [88..89]
 a12(r118): [97..98]
 a13(r117): [101..102]
 a14(r116): [105..106]
 a15(r90): [105..108]
 a16(r115): [109..110]
 a17(r89): [109..112]
 a18(r114): [113..114]
 a19(r88): [119..120]
 a20(r87): [119..122]
 a21(r113): [123..124]
 a22(r112): [135..136]
 a23(r86): [149..156]
 a24(r85): [151..160]
 a25(r111): [157..158]
 a26(r110): [161..162]
 a27(r109): [168..169]
 a28(r108): [190..191]
 a29(r107): [28..29]
 a30(r105): [32..33]
 a31(r106): [34..35]
 a32(r102): [199..200]
 a33(r84): [201..202]
 a34(r101): [203..204]
 a35(r100): [207..208]
 a36(r83): [209..210]
 a37(r99): [211..212]
Compressing live ranges: from 217 to 64 - 29%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r97): [2..7]
 a2(r82): [8..63]
 a3(r121): [14..15]
 a4(r95): [16..17]
 a5(r120): [16..17]
 a6(r96): [16..35]
 a7(r93): [18..21]
 a8(r94): [18..19]
 a9(r92): [20..23]
 a10(r91): [24..25]
 a11(r119): [24..25]
 a12(r118): [26..27]
 a13(r117): [28..29]
 a14(r116): [30..31]
 a15(r90): [30..31]
 a16(r115): [32..33]
 a17(r89): [32..33]
 a18(r114): [34..35]
 a19(r88): [36..37]
 a20(r87): [36..37]
 a21(r113): [38..39]
 a22(r112): [40..41]
 a23(r86): [42..43]
 a24(r85): [42..45]
 a25(r111): [44..45]
 a26(r110): [46..47]
 a27(r109): [48..49]
 a28(r108): [50..51]
 a29(r107): [8..9]
 a30(r105): [10..11]
 a31(r106): [12..13]
 a32(r102): [52..53]
 a33(r84): [54..55]
 a34(r101): [56..57]
 a35(r100): [58..59]
 a36(r83): [60..61]
 a37(r99): [62..63]
  pref0:a22(r112)<-hr0@1500
  pref1:a27(r109)<-hr0@1500
  pref2:a0(r98)<-hr0@1500
  pref3:a9(r92)<-hr0@1500
  regions=1, blocks=19, points=64
    allocnos=38 (big 0), copies=0, conflicts=0, ranges=38
Disposition:
    2:r82  l0     3   36:r83  l0     0   33:r84  l0     0   24:r85  l0     1
   23:r86  l0     0   20:r87  l0     1   19:r88  l0     0   17:r89  l0     1
   15:r90  l0     1   10:r91  l0     0    9:r92  l0     1    7:r93  l0     0
    8:r94  l0     1    4:r95  l0     0    6:r96  l0     4    1:r97  l0     0
    0:r98  l0     0   37:r99  l0     0   35:r100 l0     0   34:r101 l0     0
   32:r102 l0     0   30:r105 l0     0   31:r106 l0     0   29:r107 l0     0
   28:r108 l0     0   27:r109 l0     0   26:r110 l0     0   25:r111 l0     0
   22:r112 l0     0   21:r113 l0     0   18:r114 l0     0   16:r115 l0     0
   14:r116 l0     0   13:r117 l0     0   12:r118 l0     0   11:r119 l0     1
    5:r120 l0     1    3:r121 l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


block_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={5d} r2={5d} r3={3d,3u} r6={1d,18u} r7={18d,47u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,30u} r17={32d,6u} r18={4d} r19={1d,50u,3e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,2u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,2u} r96={2d,1u} r97={3d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} 
;;    total ref usage 579{373d,202u,4e} in 100{96 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 158 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 158 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 158 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 99)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 pos+0 S4 A32])) "fs/block_dev.c":43:17 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 83 [ _1 ])
        (mem:SI (reg/f:SI 99) [1 *pos_31(D)+0 S4 A32])) "fs/block_dev.c":43:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 100)
                (ashiftrt:SI (reg:SI 83 [ _1 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":43:9 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
        (reg:SI 100)) "fs/block_dev.c":43:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 pos+0 S4 A32])) "fs/block_dev.c":44:23 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 84 [ _2 ])
        (mem:SI (reg/f:SI 101) [1 *pos_31(D)+0 S4 A32])) "fs/block_dev.c":44:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 102)
                (and:SI (reg:SI 84 [ _2 ])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":44:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])
        (reg:SI 102)) "fs/block_dev.c":44:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 13 12 148 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 written+0 S4 A32])
        (const_int 0 [0])) "fs/block_dev.c":46:9 75 {*movsi_internal}
     (nil))
(jump_insn 148 13 149 2 (set (pc)
        (label_ref 130)) "fs/block_dev.c":50:11 807 {jump}
     (nil)
 -> 130)
(barrier 149 148 132)
(code_label 132 149 16 3 25 (nil) [1 uses])
(note 16 132 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 16 21 3 (set (reg:SI 106)
        (const_int 1024 [0x400])) "fs/block_dev.c":51:15 75 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (parallel [
            (set (reg:SI 105)
                (minus:SI (reg:SI 106)
                    (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":51:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 3 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])
        (reg:SI 105)) "fs/block_dev.c":51:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(insn 23 22 24 3 (set (reg:SI 107)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":52:12 75 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 107)
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [3 count+0 S4 A32]))) "fs/block_dev.c":52:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/block_dev.c":52:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 29)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:SI 108)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [3 count+0 S4 A32])) "fs/block_dev.c":53:19 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])
        (reg:SI 108)) "fs/block_dev.c":53:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(code_label 29 28 30 5 16 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])
            (const_int 1024 [0x400]))) "fs/block_dev.c":54:12 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/block_dev.c":54:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":55:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 35 34 36 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])) "fs/block_dev.c":55:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 36 35 37 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [3 dev+0 S4 A32])) "fs/block_dev.c":55:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 37 36 38 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/block_dev.c":55:18 75 {*movsi_internal}
     (nil))
(call_insn 38 37 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x41]  <function_decl 0x7b7b82f0e500 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/block_dev.c":55:18 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 39 38 40 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":55:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 40 39 41 6 (set (reg:SI 109)
        (reg:SI 0 ax)) "fs/block_dev.c":55:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 41 40 150 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])
        (reg:SI 109)) "fs/block_dev.c":55:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(jump_insn 150 41 151 6 (set (pc)
        (label_ref 61)) 807 {jump}
     (nil)
 -> 61)
(barrier 151 150 44)
(code_label 44 151 45 7 17 (nil) [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])) "fs/block_dev.c":57:18 75 {*movsi_internal}
     (nil))
(insn 47 46 48 7 (parallel [
            (set (reg:SI 85 [ _3 ])
                (plus:SI (reg:SI 110)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":57:18 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 48 47 49 7 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])) "fs/block_dev.c":57:18 75 {*movsi_internal}
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg:SI 86 [ _4 ])
                (plus:SI (reg:SI 111)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":57:18 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 50 49 51 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":57:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 51 50 52 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (const_int -1 [0xffffffffffffffff])) "fs/block_dev.c":57:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 52 51 53 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 85 [ _3 ])) "fs/block_dev.c":57:18 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
            (nil))))
(insn 53 52 54 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 86 [ _4 ])) "fs/block_dev.c":57:18 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 54 53 55 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])) "fs/block_dev.c":57:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 55 54 56 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [3 dev+0 S4 A32])) "fs/block_dev.c":57:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 56 55 57 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/block_dev.c":57:18 75 {*movsi_internal}
     (nil))
(call_insn 57 56 58 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("breada") [flags 0x41]  <function_decl 0x7b7b82f0e600 breada>) [0 breada S1 A8])
            (const_int 32 [0x20]))) "fs/block_dev.c":57:18 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 58 57 59 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":57:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 59 58 60 7 (set (reg:SI 112)
        (reg:SI 0 ax)) "fs/block_dev.c":57:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 60 59 61 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])
        (reg:SI 112)) "fs/block_dev.c":57:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(code_label 61 60 62 8 18 (nil) [1 uses])
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [3 block+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":58:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/block_dev.c":59:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/block_dev.c":59:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 80)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [3 written+0 S4 A32])
            (const_int 0 [0]))) "fs/block_dev.c":60:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "fs/block_dev.c":60:38 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 152 10 (set (reg:SI 97 [ iftmp.6_25 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 written+0 S4 A32])) "fs/block_dev.c":60:38 75 {*movsi_internal}
     (nil))
(jump_insn 152 70 153 10 (set (pc)
        (label_ref 139)) "fs/block_dev.c":60:38 807 {jump}
     (nil)
 -> 139)
(barrier 153 152 73)
(code_label 73 153 74 11 20 (nil) [1 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 154 11 (set (reg:SI 97 [ iftmp.6_25 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/block_dev.c":60:38 75 {*movsi_internal}
     (nil))
(jump_insn 154 75 155 11 (set (pc)
        (label_ref 139)) "fs/block_dev.c":60:38 807 {jump}
     (nil)
 -> 139)
(barrier 155 154 80)
(code_label 80 155 81 12 19 (nil) [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])) "fs/block_dev.c":61:24 75 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (reg/f:SI 113) [2 bh_22->b_data+0 S4 A32])) "fs/block_dev.c":61:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 84 83 85 12 (set (reg:SI 88 [ offset.7_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])) "fs/block_dev.c":61:20 75 {*movsi_internal}
     (nil))
(insn 85 84 86 12 (parallel [
            (set (reg/v/f:SI 96 [ p ])
                (plus:SI (reg/f:SI 87 [ _5 ])
                    (reg:SI 88 [ offset.7_6 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":61:11 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ offset.7_6 ])
        (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 86 85 87 12 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 offset+0 S4 A32])
        (const_int 0 [0])) "fs/block_dev.c":62:16 75 {*movsi_internal}
     (nil))
(insn 87 86 88 12 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 pos+0 S4 A32])) "fs/block_dev.c":63:14 75 {*movsi_internal}
     (nil))
(insn 88 87 89 12 (set (reg:SI 89 [ _7 ])
        (mem:SI (reg/f:SI 114) [1 *pos_31(D)+0 S4 A32])) "fs/block_dev.c":63:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 89 88 90 12 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":63:14 75 {*movsi_internal}
     (nil))
(insn 90 89 91 12 (parallel [
            (set (reg:SI 90 [ _8 ])
                (plus:SI (reg:SI 89 [ _7 ])
                    (reg:SI 115)))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":63:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 89 [ _7 ])
                        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32]))
                    (nil))))))
(insn 91 90 92 12 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 pos+0 S4 A32])) "fs/block_dev.c":63:14 75 {*movsi_internal}
     (nil))
(insn 92 91 93 12 (set (mem:SI (reg/f:SI 116) [1 *pos_31(D)+0 S4 A32])
        (reg:SI 90 [ _8 ])) "fs/block_dev.c":63:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
            (nil))))
(insn 93 92 94 12 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":64:17 75 {*movsi_internal}
     (nil))
(insn 94 93 95 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [3 written+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [3 written+0 S4 A32])
                    (reg:SI 117)))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":64:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 12 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":65:15 75 {*movsi_internal}
     (nil))
(insn 96 95 156 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 12 [0xc])) [3 count+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [3 count+0 S4 A32])
                    (reg:SI 118)))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":65:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 156 96 157 12 (set (pc)
        (label_ref 112)) "fs/block_dev.c":66:15 807 {jump}
     (nil)
 -> 112)
(barrier 157 156 117)
(code_label 117 157 99 13 24 (nil) [1 uses])
(note 99 117 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (set (reg/f:SI 91 [ buf.8_9 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 buf+0 S4 A32])) "fs/block_dev.c":67:22 75 {*movsi_internal}
     (nil))
(insn 101 100 102 13 (parallel [
            (set (reg:SI 119)
                (plus:SI (reg/f:SI 91 [ buf.8_9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":67:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 102 101 103 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 buf+0 S4 A32])
        (reg:SI 119)) "fs/block_dev.c":67:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 103 102 104 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":67:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 104 103 105 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 91 [ buf.8_9 ])) "fs/block_dev.c":67:22 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 91 [ buf.8_9 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 105 104 106 13 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7b7b82f10800 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/block_dev.c":67:22 823 {*call_value}
     (nil)
    (nil))
(insn 106 105 107 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":67:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 107 106 108 13 (set (reg:QI 92 [ _10 ])
        (reg:QI 0 ax)) "fs/block_dev.c":67:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 108 107 109 13 (set (reg/f:SI 93 [ p.9_11 ])
        (reg/v/f:SI 96 [ p ])) "fs/block_dev.c":67:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 96 [ p ])
        (nil)))
(insn 109 108 110 13 (parallel [
            (set (reg/v/f:SI 96 [ p ])
                (plus:SI (reg/f:SI 93 [ p.9_11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":67:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 109 111 13 (set (reg:QI 94 [ _12 ])
        (reg:QI 92 [ _10 ])) "fs/block_dev.c":67:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ _10 ])
        (nil)))
(insn 111 110 112 13 (set (mem:QI (reg/f:SI 93 [ p.9_11 ]) [0 *p.9_11+0 S1 A8])
        (reg:QI 94 [ _12 ])) "fs/block_dev.c":67:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 94 [ _12 ])
        (expr_list:REG_DEAD (reg/f:SI 93 [ p.9_11 ])
            (nil))))
(code_label 112 111 113 14 23 (nil) [1 uses])
(note 113 112 114 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 14 (set (reg:SI 95 [ chars.10_13 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])) "fs/block_dev.c":66:21 75 {*movsi_internal}
     (nil))
(insn 115 114 116 14 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 95 [ chars.10_13 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":66:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 116 115 120 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 chars+0 S4 A32])
        (reg:SI 120)) "fs/block_dev.c":66:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(insn 120 116 121 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 95 [ chars.10_13 ])
            (const_int 0 [0]))) "fs/block_dev.c":66:24 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ chars.10_13 ])
        (nil)))
(jump_insn 121 120 122 14 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) "fs/block_dev.c":66:24 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 117)
(note 122 121 123 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 15 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])) "fs/block_dev.c":68:20 75 {*movsi_internal}
     (nil))
(insn 124 123 125 15 (set (mem:QI (plus:SI (reg/f:SI 121)
                (const_int 11 [0xb])) [0 bh_22->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/block_dev.c":68:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 125 124 126 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":69:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 126 125 127 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [4 bh+0 S4 A32])) "fs/block_dev.c":69:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 127 126 128 15 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/block_dev.c":69:9 75 {*movsi_internal}
     (nil))
(call_insn 128 127 129 15 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7b7b82f0e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/block_dev.c":69:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 129 128 130 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/block_dev.c":69:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 130 129 131 16 15 (nil) [1 uses])
(note 131 130 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 135 131 136 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [3 count+0 S4 A32])
            (const_int 0 [0]))) "fs/block_dev.c":50:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 136 135 137 16 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) "fs/block_dev.c":50:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 132)
(note 137 136 138 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 17 (set (reg:SI 97 [ iftmp.6_25 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 written+0 S4 A32])) "fs/block_dev.c":71:12 75 {*movsi_internal}
     (nil))
(code_label 139 138 140 18 22 (nil) [2 uses])
(note 140 139 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 145 18 (set (reg:SI 98 [ <retval> ])
        (reg:SI 97 [ iftmp.6_25 ])) "fs/block_dev.c":72:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ iftmp.6_25 ])
        (nil)))
(insn 145 141 146 18 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) "fs/block_dev.c":72:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ <retval> ])
        (nil)))
(insn 146 145 0 18 (use (reg/i:SI 0 ax)) "fs/block_dev.c":72:1 -1
     (nil))
