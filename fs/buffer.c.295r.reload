
;; Function wait_on_buffer (wait_on_buffer, funcdef_no=5, decl_uid=1395, cgraph_uid=6, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) q {*cmpqi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 30: point = 0, n_alt = -1
  BB 5
   Insn 24: point = 0, n_alt = -1
  BB 4
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = 0
   Insn 19: point = 1, n_alt = 4
   Insn 18: point = 3, n_alt = 0
  BB 2
   Insn 27: point = 5, n_alt = -1
   Insn 5: point = 5, n_alt = -1
   Insn 31: point = 5, n_alt = 0
  BB 3
   Insn 15: point = 6, n_alt = 0
   Insn 14: point = 6, n_alt = 0
   Insn 13: point = 6, n_alt = -2
   Insn 12: point = 6, n_alt = 0
   Insn 11: point = 7, n_alt = 0
   Insn 10: point = 7, n_alt = 0
   Insn 9: point = 9, n_alt = 0
 r82: [0..10]
 r83: [6..7]
 r84: [0..1]
 r85: [8..9]
 r86: [2..3]
Compressing live ranges: from 11 to 8 - 72%
Ranges after the compression:
 r82: [0..7]
 r83: [4..5]
 r84: [0..1]
 r85: [6..7]
 r86: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 31
changing reg in insn 13
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 21
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.


wait_on_buffer

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={2d} r2={2d} r3={1d,1u} r7={4d,14u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={8d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 109{88d,20u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 27 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/buffer.c:43)
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":43:5 -1
     (nil))
(jump_insn 27 5 28 2 (set (pc)
        (label_ref 16)) "fs/buffer.c":44:11 807 {jump}
     (nil)
 -> 16)
(barrier 28 27 20)
(code_label 20 28 8 3 3 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":45:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [85])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":45:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [1 bh+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":45:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/buffer.c":45:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x752d7c117e00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":45:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":45:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 2 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":44:14 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 13 [0xd])) [0 bh_5(D)->b_lock+0 S1 A8])) "fs/buffer.c":44:14 77 {*movqi_internal}
     (nil))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/buffer.c":44:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/buffer.c":44:12 806 {*jcc}
     (nil)
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 29 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/buffer.c:46)
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":46:5 -1
     (nil))
(note 29 24 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 6 (const_int 0 [0]) "fs/buffer.c":47:1 843 {nop}
     (nil))
(note 32 30 0 NOTE_INSN_DELETED)

;; Function brelse (brelse, funcdef_no=6, decl_uid=1154, cgraph_uid=7, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) q  (1) m {*movqi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
          alt=3,overall=8,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 18:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 20:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 7
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
  BB 5
   Insn 42: point = 0, n_alt = -1
   Insn 37: point = 0, n_alt = 0
   Insn 36: point = 0, n_alt = 0
   Insn 35: point = 0, n_alt = -2
   Insn 34: point = 1, n_alt = 0
   Insn 33: point = 2, n_alt = 0
   Insn 32: point = 3, n_alt = 0
  BB 4
   Insn 29: point = 4, n_alt = 0
   Insn 28: point = 4, n_alt = 0
   Insn 27: point = 4, n_alt = -2
   Insn 26: point = 4, n_alt = 0
   Insn 25: point = 5, n_alt = 0
   Insn 24: point = 6, n_alt = 0
  BB 3
   Insn 22: point = 7, n_alt = -1
   Insn 21: point = 7, n_alt = 0
   Insn 20: point = 8, n_alt = 8
   Insn 19: point = 9, n_alt = 0
   Insn 18: point = 10, n_alt = 5
   Insn 17: point = 11, n_alt = 4
   Insn 16: point = 13, n_alt = 0
   Insn 15: point = 14, n_alt = 0
   Insn 14: point = 14, n_alt = 0
   Insn 13: point = 14, n_alt = 0
   Insn 12: point = 14, n_alt = 0
  BB 7
   Insn 46: point = 15, n_alt = -1
  BB 2
   Insn 6: point = 15, n_alt = -1
   Insn 5: point = 15, n_alt = 1
   Insn 47: point = 15, n_alt = 0
 r82: [0..15]
 r83: [7..11]
 r84: [8..10]
 r85: [12..13]
 r86: [8..9]
 r87: [4..5]
 r88: [1..2]
Compressing live ranges: from 16 to 8 - 50%
Ranges after the compression:
 r82: [0..7]
 r83: [4..5]
 r84: [4..5]
 r85: [6..7]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 47
changing reg in insn 35
changing reg in insn 33
changing reg in insn 27
changing reg in insn 25
changing reg in insn 17
changing reg in insn 21
changing reg in insn 18
changing reg in insn 18
changing reg in insn 20
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 25
changing reg in insn 26
changing reg in insn 33
changing reg in insn 34
deleting insn with uid = 27.
deleting insn with uid = 35.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 36.


brelse

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,5u} r1={5d,1u} r2={5d,1u} r3={1d,4u} r7={10d,29u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={13d,2u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 279{237d,42u,0e} in 26{23 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 47 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 47 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":51:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 45)
            (pc))) "fs/buffer.c":51:8 806 {*jcc}
     (nil)
 -> 45)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":54:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 13 12 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [1 bh+0 S4 A32])) "fs/buffer.c":54:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":54:5 812 {*call}
     (nil)
    (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":54:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 16 15 17 3 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":55:13 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [85])
                (const_int 12 [0xc])) [0 bh_6(D)->b_count+0 S1 A32])) "fs/buffer.c":55:13 77 {*movqi_internal}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg:QI 1 dx [orig:84 _3 ] [84])
                (plus:QI (reg:QI 0 ax [orig:83 _1 ] [83])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":55:22 213 {*addqi_1}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 2 cx [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":55:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (mem:QI (plus:SI (reg/f:SI 2 cx [86])
                (const_int 12 [0xc])) [0 bh_6(D)->b_count+0 S1 A32])
        (reg:QI 1 dx [orig:84 _3 ] [84])) "fs/buffer.c":55:22 77 {*movqi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/buffer.c":55:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "fs/buffer.c":55:8 806 {*jcc}
     (nil)
 -> 30)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":56:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 25 24 26 4 (set (reg/f:SI 0 ax [87])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x752d7c1b4090 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":56:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x752d7c1b4090 *.LC0>)
        (nil)))
(insn 26 25 28 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 0 ax [87])) "fs/buffer.c":56:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 28 26 29 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":56:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":56:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 30 29 31 5 7 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":57:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 5 (set (reg/f:SI 0 ax [88])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":57:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
        (nil)))
(insn 34 33 36 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [88])) "fs/buffer.c":57:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 36 34 37 5 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x752d7c140200 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":57:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 37 36 42 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":57:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 42 37 43 5 (set (pc)
        (label_ref 40)) 807 {jump}
     (nil)
 -> 40)
(barrier 43 42 45)
(code_label 45 43 44 7 8 (nil) [1 uses])
(note 44 45 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 44 40 7 (const_int 0 [0]) "fs/buffer.c":52:9 843 {nop}
     (nil))
(code_label 40 46 41 6 4 (nil) [1 uses])
(note 41 40 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 48 41 0 NOTE_INSN_DELETED)

;; Function bread (bread, funcdef_no=7, decl_uid=1152, cgraph_uid=8, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 44:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8
EBB 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 65: point = 0, n_alt = -1
   Insn 64: point = 0, n_alt = -2
   Insn 60: point = 1, n_alt = -2
  BB 7
   Insn 69: point = 4, n_alt = -1
   Insn 48: point = 4, n_alt = 0
  BB 5
   Insn 67: point = 5, n_alt = -1
   Insn 28: point = 5, n_alt = 0
  BB 8
   Insn 57: point = 6, n_alt = 0
   Insn 56: point = 7, n_alt = 0
   Insn 55: point = 7, n_alt = 0
   Insn 54: point = 7, n_alt = 0
   Insn 53: point = 7, n_alt = 0
  BB 6
   Insn 46: point = 7, n_alt = -1
   Insn 45: point = 7, n_alt = 0
   Insn 44: point = 8, n_alt = 4
   Insn 43: point = 10, n_alt = 0
   Insn 42: point = 11, n_alt = 0
   Insn 41: point = 11, n_alt = 0
   Insn 40: point = 11, n_alt = 0
   Insn 39: point = 11, n_alt = 0
   Insn 38: point = 11, n_alt = 0
   Insn 37: point = 11, n_alt = 0
   Insn 36: point = 11, n_alt = -2
   Insn 35: point = 12, n_alt = 0
   Insn 34: point = 12, n_alt = 0
   Insn 33: point = 12, n_alt = 0
  BB 4
   Insn 26: point = 13, n_alt = -1
   Insn 25: point = 13, n_alt = 0
   Insn 24: point = 14, n_alt = 4
   Insn 23: point = 16, n_alt = 0
  BB 3
   Insn 20: point = 18, n_alt = 0
   Insn 19: point = 18, n_alt = 0
   Insn 18: point = 18, n_alt = -2
   Insn 17: point = 18, n_alt = 0
   Insn 16: point = 19, n_alt = 0
   Insn 15: point = 20, n_alt = 0
  BB 2
   Insn 13: point = 21, n_alt = -1
   Insn 12: point = 21, n_alt = 1
   Insn 11: point = 21, n_alt = 1
   Insn 10: point = 22, n_alt = -2
   Insn 9: point = 23, n_alt = 0
   Insn 8: point = 23, n_alt = 0
   Insn 7: point = 23, n_alt = 0
   Insn 6: point = 23, n_alt = 0
   Insn 5: point = 23, n_alt = 0
   Insn 71: point = 23, n_alt = 0
 r82: [11..23]
 r83: [13..14]
 r84: [7..8]
 r85: [2..6]
 r86: [0..1]
 r87: [21..22]
 r88: [18..19]
 r89: [15..16]
 r90: [9..10]
Compressing live ranges: from 24 to 16 - 66%
Ranges after the compression:
 r82: [8..15]
 r83: [8..9]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [14..15]
 r88: [12..13]
 r89: [10..11]
 r90: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 71
changing reg in insn 36
changing reg in insn 18
changing reg in insn 16
changing reg in insn 24
changing reg in insn 25
changing reg in insn 44
changing reg in insn 45
changing reg in insn 57
changing reg in insn 48
changing reg in insn 28
changing reg in insn 60
changing reg in insn 60
changing reg in insn 64
changing reg in insn 10
changing reg in insn 11
changing reg in insn 16
changing reg in insn 17
changing reg in insn 23
changing reg in insn 24
changing reg in insn 43
changing reg in insn 44
deleting insn with uid = 10.
deleting insn with uid = 18.
deleting insn with uid = 36.
deleting insn with uid = 60.
deleting insn with uid = 64.
starting the processing of deferred insns
ending the processing of deferred insns


bread

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,8u} r1={6d} r2={6d} r3={1d,3u} r7={18d,52u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={19d,3u} r18={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 455{389d,66u,0e} in 41{36 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 71 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 71 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 71 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":68:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 block+0 S4 A32])) "fs/buffer.c":68:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 dev+0 S4 A32])) "fs/buffer.c":68:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":68:16 823 {*call_value}
     (nil)
    (nil))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":68:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])
        (reg:SI 0 ax [87])) "fs/buffer.c":68:16 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":68:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "fs/buffer.c":68:8 806 {*jcc}
     (nil)
 -> 21)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":69:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 16 15 17 3 (set (reg/f:SI 0 ax [88])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x752d7c1b41b0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":69:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x752d7c1b41b0 *.LC1>)
        (nil)))
(insn 17 16 19 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 0 ax [88])) "fs/buffer.c":69:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 19 17 20 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":69:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":69:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 21 20 22 4 10 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":71:11 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [89])
                (const_int 10 [0xa])) [0 bh_10->b_uptodate+0 S1 A16])) "fs/buffer.c":71:11 77 {*movqi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/buffer.c":71:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/buffer.c":71:8 806 {*jcc}
     (nil)
 -> 31)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 67 5 (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":72:16 75 {*movsi_internal}
     (nil))
(jump_insn 67 28 68 5 (set (pc)
        (label_ref 58)) "fs/buffer.c":72:16 807 {jump}
     (nil)
 -> 58)
(barrier 68 67 31)
(code_label 31 68 32 6 11 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":74:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 34 33 35 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 35 34 37 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 0 [0])) "fs/buffer.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 37 35 38 6 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":74:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 38 37 39 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":74:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 39 38 40 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":75:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 40 39 41 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bh+0 S4 A32])) "fs/buffer.c":75:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 40 42 6 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":75:5 812 {*call}
     (nil)
    (nil))
(insn 42 41 43 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":75:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 43 42 44 6 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":76:11 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [90])
                (const_int 10 [0xa])) [0 bh_10->b_uptodate+0 S1 A16])) "fs/buffer.c":76:11 77 {*movqi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/buffer.c":76:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "fs/buffer.c":76:8 806 {*jcc}
     (nil)
 -> 51)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 69 7 (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":77:16 75 {*movsi_internal}
     (nil))
(jump_insn 69 48 70 7 (set (pc)
        (label_ref 58)) "fs/buffer.c":77:16 807 {jump}
     (nil)
 -> 58)
(barrier 70 69 51)
(code_label 51 70 52 8 13 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":79:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 54 53 55 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bh+0 S4 A32])) "fs/buffer.c":79:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 55 54 56 8 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x3]  <function_decl 0x752d7c0f2f00 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":79:5 812 {*call}
     (nil)
    (nil))
(insn 56 55 57 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":79:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 57 56 58 8 (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
        (const_int 0 [0])) "fs/buffer.c":80:12 75 {*movsi_internal}
     (nil))
(code_label 58 57 59 9 12 (nil) [2 uses])
(note 59 58 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 59 72 9 (use (reg/i:SI 0 ax)) "fs/buffer.c":81:1 -1
     (nil))
(note 72 65 0 NOTE_INSN_DELETED)

;; Function buffer_init (buffer_init, funcdef_no=8, decl_uid=1133, cgraph_uid=9, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 27:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 29:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 31:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11 13 12 14

********** Pseudo live ranges #1: **********

  BB 14
   Insn 103: point = 0, n_alt = -1
  BB 12
  BB 13
   Insn 101: point = 0, n_alt = -1
  BB 11
   Insn 90: point = 0, n_alt = -1
   Insn 89: point = 0, n_alt = 0
  BB 9
   Insn 98: point = 1, n_alt = -1
   Insn 77: point = 1, n_alt = 1
   Insn 76: point = 1, n_alt = 1
   Insn 75: point = 2, n_alt = 0
   Insn 74: point = 3, n_alt = 1
   Insn 73: point = 4, n_alt = 0
   Insn 72: point = 5, n_alt = 0
   Insn 71: point = 6, n_alt = 1
   Insn 70: point = 7, n_alt = 0
   Insn 69: point = 8, n_alt = 0
   Insn 68: point = 9, n_alt = 1
   Insn 67: point = 10, n_alt = 0
   Insn 66: point = 11, n_alt = 0
  BB 8
   Insn 64: point = 12, n_alt = -1
   Insn 63: point = 12, n_alt = 0
   Insn 61: point = 13, n_alt = 0
   Insn 60: point = 15, n_alt = 0
   Insn 59: point = 16, n_alt = 0
  BB 5
   Insn 96: point = 17, n_alt = -1
  BB 3
   Insn 94: point = 18, n_alt = -1
   Insn 10: point = 18, n_alt = 1
  BB 4
   Insn 16: point = 19, n_alt = 1
   Insn 15: point = 20, n_alt = 0
  BB 2
   Insn 8: point = 22, n_alt = -1
   Insn 7: point = 22, n_alt = 0
   Insn 6: point = 22, n_alt = 1
   Insn 5: point = 23, n_alt = 0
   Insn 104: point = 24, n_alt = 0
  BB 7
   Insn 56: point = 25, n_alt = 1
  BB 6
   Insn 54: point = 26, n_alt = -1
   Insn 53: point = 26, n_alt = 0
   Insn 52: point = 26, n_alt = 1
   Insn 51: point = 27, n_alt = 0
   Insn 50: point = 29, n_alt = 0
   Insn 49: point = 30, n_alt = 0
   Insn 48: point = 30, n_alt = 1
   Insn 47: point = 31, n_alt = 0
   Insn 46: point = 32, n_alt = 3
   Insn 45: point = 34, n_alt = 0
   Insn 44: point = 35, n_alt = 1
   Insn 43: point = 36, n_alt = 0
   Insn 42: point = 37, n_alt = 3
   Insn 41: point = 39, n_alt = 0
   Insn 40: point = 40, n_alt = 1
   Insn 39: point = 41, n_alt = 0
   Insn 38: point = 42, n_alt = 0
   Insn 37: point = 43, n_alt = 1
   Insn 36: point = 44, n_alt = 0
   Insn 35: point = 45, n_alt = 1
   Insn 34: point = 46, n_alt = 0
   Insn 33: point = 47, n_alt = 1
   Insn 32: point = 48, n_alt = 0
   Insn 31: point = 49, n_alt = 8
   Insn 30: point = 50, n_alt = 0
   Insn 29: point = 51, n_alt = 8
   Insn 28: point = 52, n_alt = 0
   Insn 27: point = 53, n_alt = 8
   Insn 26: point = 54, n_alt = 0
   Insn 25: point = 55, n_alt = 8
   Insn 24: point = 56, n_alt = 0
   Insn 23: point = 57, n_alt = 3
   Insn 22: point = 58, n_alt = 0
  BB 10
   Insn 83: point = 60, n_alt = 0
   Insn 82: point = 60, n_alt = 1
   Insn 81: point = 61, n_alt = 0
 r82: [0..62]
 r83: [35..37]
 r84: [30..32]
 r85: [28..29]
 r86: [26..27]
 r87: [12..13]
 r88: [9..10]
 r89: [6..8]
 r90: [3..5]
 r91: [1..2]
 r92: [22..23]
 r93: [19..20]
 r94: [57..58]
 r95: [55..56]
 r96: [53..54]
 r97: [51..52]
 r98: [49..50]
 r99: [47..48]
 r100: [45..46]
 r101: [43..44]
 r102: [40..42]
 r103: [40..41]
 r104: [38..39]
 r105: [35..36]
 r106: [33..34]
 r107: [30..31]
 r108: [14..15]
 r109: [6..7]
 r110: [3..4]
 r111: [60..61]
Compressing live ranges: from 63 to 48 - 76%
Ranges after the compression:
 r82: [0..47]
 r83: [24..25]
 r84: [20..21]
 r85: [18..19]
 r86: [16..17]
 r87: [8..9]
 r88: [6..7]
 r89: [4..5]
 r90: [2..3]
 r91: [0..1]
 r92: [14..15]
 r93: [12..13]
 r94: [44..45]
 r95: [42..43]
 r96: [40..41]
 r97: [38..39]
 r98: [36..37]
 r99: [34..35]
 r100: [32..33]
 r101: [30..31]
 r102: [28..29]
 r103: [28..29]
 r104: [26..27]
 r105: [24..25]
 r106: [22..23]
 r107: [20..21]
 r108: [10..11]
 r109: [4..5]
 r110: [2..3]
 r111: [46..47]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 104
changing reg in insn 82
changing reg in insn 76
changing reg in insn 75
changing reg in insn 72
changing reg in insn 69
changing reg in insn 68
changing reg in insn 67
changing reg in insn 52
changing reg in insn 50
changing reg in insn 5
changing reg in insn 42
changing reg in insn 44
changing reg in insn 46
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 61
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 5
changing reg in insn 6
changing reg in insn 15
changing reg in insn 16
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 40
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 60
changing reg in insn 61
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 74
changing reg in insn 81
changing reg in insn 82
starting the processing of deferred insns
ending the processing of deferred insns


buffer_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={2d,10u} r1={25d,24u} r2={6d,5u} r7={1d,50u} r17={13d,4u} r19={3e} 
;;    total ref usage 143{47d,93u,3e} in 69{69 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 104 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 104 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 104 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [92])
        (mem/f/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":88:25 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])
        (reg/f:SI 1 dx [92])) "fs/buffer.c":88:25 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [4 buffer_end+0 S4 A32])
            (const_int 1048576 [0x100000]))) "fs/buffer.c":93:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "fs/buffer.c":93:8 806 {*jcc}
     (nil)
 -> 13)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 94 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 b+0 S4 A32])
        (const_int 655360 [0xa0000])) "fs/buffer.c":95:11 75 {*movsi_internal}
     (nil))
(jump_insn 94 10 95 3 (set (pc)
        (label_ref 17)) 807 {jump}
     (nil)
 -> 17)
(barrier 95 94 13)
(code_label 13 95 14 4 15 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 1 dx [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [4 buffer_end+0 S4 A32])) "fs/buffer.c":112:11 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 b+0 S4 A32])
        (reg:SI 1 dx [93])) "fs/buffer.c":112:11 75 {*movsi_internal}
     (nil))
(code_label 17 16 18 5 16 (nil) [1 uses])
(note 18 17 96 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 96 18 97 5 (set (pc)
        (label_ref 57)) "fs/buffer.c":115:11 807 {jump}
     (nil)
 -> 57)
(barrier 97 96 62)
(code_label 62 97 21 6 18 (nil) [1 uses])
(note 21 62 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:SI 1 dx [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":116:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 6 (set (mem:HI (plus:SI (reg/f:SI 1 dx [94])
                (const_int 8 [0x8])) [5 h_10->b_dev+0 S2 A32])
        (const_int 0 [0])) "fs/buffer.c":116:21 76 {*movhi_internal}
     (nil))
(insn 24 23 25 6 (set (reg/f:SI 1 dx [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":117:21 75 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (set (mem:QI (plus:SI (reg/f:SI 1 dx [95])
                (const_int 11 [0xb])) [0 h_10->b_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":117:21 77 {*movqi_internal}
     (nil))
(insn 26 25 27 6 (set (reg/f:SI 1 dx [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":118:21 75 {*movsi_internal}
     (nil))
(insn 27 26 28 6 (set (mem:QI (plus:SI (reg/f:SI 1 dx [96])
                (const_int 12 [0xc])) [0 h_10->b_count+0 S1 A32])
        (const_int 0 [0])) "fs/buffer.c":118:21 77 {*movqi_internal}
     (nil))
(insn 28 27 29 6 (set (reg/f:SI 1 dx [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":119:21 75 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (set (mem:QI (plus:SI (reg/f:SI 1 dx [97])
                (const_int 13 [0xd])) [0 h_10->b_lock+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":119:21 77 {*movqi_internal}
     (nil))
(insn 30 29 31 6 (set (reg/f:SI 1 dx [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":120:23 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (mem:QI (plus:SI (reg/f:SI 1 dx [98])
                (const_int 10 [0xa])) [0 h_10->b_uptodate+0 S1 A16])
        (const_int 0 [0])) "fs/buffer.c":120:23 77 {*movqi_internal}
     (nil))
(insn 32 31 33 6 (set (reg/f:SI 1 dx [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":121:19 75 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [99])
                (const_int 16 [0x10])) [6 h_10->b_wait+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":121:19 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg/f:SI 1 dx [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":122:19 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [100])
                (const_int 24 [0x18])) [1 h_10->b_next+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":122:19 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 1 dx [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":123:19 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [101])
                (const_int 20 [0x14])) [1 h_10->b_prev+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":123:19 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 1 dx [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":124:19 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 2 cx [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 b+0 S4 A32])) "fs/buffer.c":124:19 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (set (mem/f:SI (reg/f:SI 1 dx [102]) [3 h_10->b_data+0 S4 A32])
        (reg/f:SI 2 cx [103])) "fs/buffer.c":124:19 75 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg/f:SI 1 dx [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":125:28 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg/f:SI 2 cx [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 1 dx [104])
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":125:28 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
            (const_int -36 [0xffffffffffffffdc]))
        (nil)))
(insn 43 42 44 6 (set (reg/f:SI 1 dx [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":125:24 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [105])
                (const_int 28 [0x1c])) [1 h_10->b_prev_free+0 S4 A32])
        (reg/f:SI 2 cx [orig:83 _1 ] [83])) "fs/buffer.c":125:24 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (reg/f:SI 1 dx [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":126:28 75 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 2 cx [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 1 dx [106])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":126:28 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
            (const_int 36 [0x24]))
        (nil)))
(insn 47 46 48 6 (set (reg/f:SI 1 dx [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":126:24 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [107])
                (const_int 32 [0x20])) [1 h_10->b_next_free+0 S4 A32])
        (reg/f:SI 2 cx [orig:84 _2 ] [84])) "fs/buffer.c":126:24 75 {*movsi_internal}
     (nil))
(insn 49 48 50 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [1 h+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [1 h+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":127:10 209 {*addsi_1}
     (nil))
(insn 50 49 51 6 (set (reg:SI 1 dx [orig:85 nr_buffers.0_3 ] [85])
        (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":128:19 75 {*movsi_internal}
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:SI 1 dx [orig:86 _4 ] [86])
                (plus:SI (reg:SI 1 dx [orig:85 nr_buffers.0_3 ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":128:19 209 {*addsi_1}
     (nil))
(insn 52 51 53 6 (set (mem/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "fs/buffer.c":128:19 75 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 b+0 S4 A32])
            (const_int 1048576 [0x100000]))) "fs/buffer.c":129:12 11 {*cmpsi_1}
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/buffer.c":129:12 806 {*jcc}
     (nil)
 -> 57)
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 b+0 S4 A32])
        (const_int 655360 [0xa0000])) "fs/buffer.c":130:15 75 {*movsi_internal}
     (nil))
(code_label 57 56 58 8 17 (nil) [2 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 b+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 b+0 S4 A32])
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":115:15 209 {*addsi_1}
     (nil))
(insn 60 59 61 8 (set (reg/f:SI 1 dx [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":115:45 75 {*movsi_internal}
     (nil))
(insn 61 60 63 8 (parallel [
            (set (reg/f:SI 1 dx [orig:87 _5 ] [87])
                (plus:SI (reg/f:SI 1 dx [108])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":115:45 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 h+0 S4 A32])
            (const_int 36 [0x24]))
        (nil)))
(insn 63 61 64 8 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 b+0 S4 A32])
            (reg/f:SI 1 dx [orig:87 _5 ] [87]))) "fs/buffer.c":115:30 11 {*cmpsi_1}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "fs/buffer.c":115:30 806 {*jcc}
     (nil)
 -> 62)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [1 h+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [1 h+0 S4 A32])
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":132:6 209 {*addsi_1}
     (nil))
(insn 67 66 68 9 (set (reg/f:SI 1 dx [orig:88 start_buffer.1_6 ] [88])
        (mem/f/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":133:15 75 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (set (mem/f/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])
        (reg/f:SI 1 dx [orig:88 start_buffer.1_6 ] [88])) "fs/buffer.c":133:15 75 {*movsi_internal}
     (nil))
(insn 69 68 70 9 (set (reg/f:SI 1 dx [orig:89 free_list.2_7 ] [89])
        (mem/f/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":134:14 75 {*movsi_internal}
     (nil))
(insn 70 69 71 9 (set (reg/f:SI 2 cx [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":134:28 75 {*movsi_internal}
     (nil))
(insn 71 70 72 9 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [orig:89 free_list.2_7 ] [89])
                (const_int 28 [0x1c])) [1 free_list.2_7->b_prev_free+0 S4 A32])
        (reg/f:SI 2 cx [109])) "fs/buffer.c":134:28 75 {*movsi_internal}
     (nil))
(insn 72 71 73 9 (set (reg/f:SI 2 cx [orig:90 free_list.3_8 ] [90])
        (mem/f/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":135:20 75 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (set (reg/f:SI 1 dx [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 h+0 S4 A32])) "fs/buffer.c":135:20 75 {*movsi_internal}
     (nil))
(insn 74 73 75 9 (set (mem/f:SI (plus:SI (reg/f:SI 1 dx [110])
                (const_int 32 [0x20])) [1 h_22->b_next_free+0 S4 A32])
        (reg/f:SI 2 cx [orig:90 free_list.3_8 ] [90])) "fs/buffer.c":135:20 75 {*movsi_internal}
     (nil))
(insn 75 74 76 9 (set (reg/f:SI 1 dx [orig:91 free_list.4_9 ] [91])
        (mem/f/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":137:20 75 {*movsi_internal}
     (nil))
(insn 76 75 77 9 (set (mem/f/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list_head") [flags 0x2]  <var_decl 0x752d7c11cab0 free_list_head>)
                        ] UNSPEC_GOTOFF))) [1 free_list_head+0 S4 A32])
        (reg/f:SI 1 dx [orig:91 free_list.4_9 ] [91])) "fs/buffer.c":137:20 75 {*movsi_internal}
     (nil))
(insn 77 76 98 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":139:12 75 {*movsi_internal}
     (nil))
(jump_insn 98 77 99 9 (set (pc)
        (label_ref 84)) "fs/buffer.c":139:5 807 {jump}
     (nil)
 -> 84)
(barrier 99 98 86)
(code_label 86 99 80 10 20 (nil) [1 uses])
(note 80 86 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:SI 1 dx [111])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 i+0 S4 A32])) "fs/buffer.c":141:23 75 {*movsi_internal}
     (nil))
(insn 82 81 83 10 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [111])
                        (const_int 4 [0x4]))
                    (reg:SI 0 ax [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[i_13]+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":141:23 75 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":139:31 209 {*addsi_1}
     (nil))
(code_label 84 83 85 11 19 (nil) [1 uses])
(note 85 84 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 85 90 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [7 i+0 S4 A32])
            (const_int 306 [0x132]))) "fs/buffer.c":139:19 11 {*cmpsi_1}
     (nil))
(jump_insn 90 89 100 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "fs/buffer.c":139:19 806 {*jcc}
     (nil)
 -> 86)
(note 100 90 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 91 13 (const_int 0 [0]) "fs/buffer.c":142:1 843 {nop}
     (nil))
(note 91 101 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 102 91 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 105 14 (const_int 0 [0]) "fs/buffer.c":142:1 843 {nop}
     (nil))
(note 105 103 0 NOTE_INSN_DELETED)

;; Function sync_dev (sync_dev, funcdef_no=9, decl_uid=1143, cgraph_uid=10, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 32:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 62:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 76:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 82:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 86:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 91:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 95:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5 6
EBB 17
EBB 7
EBB 8 9
EBB 10 11 12 13
EBB 18
EBB 14
EBB 15 16

********** Pseudo live ranges #1: **********

  BB 16
   Insn 111: point = 0, n_alt = -1
   Insn 110: point = 0, n_alt = -2
   Insn 106: point = 1, n_alt = -2
   Insn 103: point = 3, n_alt = 0
  BB 15
   Insn 101: point = 4, n_alt = -1
   Insn 100: point = 4, n_alt = 0
   Insn 98: point = 5, n_alt = 0
  BB 9
   Insn 115: point = 7, n_alt = -1
   Insn 57: point = 7, n_alt = 1
   Insn 56: point = 7, n_alt = 1
   Insn 55: point = 8, n_alt = 0
   Insn 54: point = 9, n_alt = 0
   Insn 53: point = 9, n_alt = -2
  BB 8
   Insn 51: point = 10, n_alt = -1
   Insn 50: point = 10, n_alt = 0
   Insn 48: point = 11, n_alt = 0
  BB 2
   Insn 113: point = 13, n_alt = -1
   Insn 7: point = 13, n_alt = 1
   Insn 6: point = 13, n_alt = 1
   Insn 5: point = 14, n_alt = 0
   Insn 127: point = 15, n_alt = 0
  BB 7
   Insn 45: point = 16, n_alt = 0
   Insn 44: point = 16, n_alt = 0
  BB 6
   Insn 117: point = 17, n_alt = -1
   Insn 41: point = 17, n_alt = 0
   Insn 40: point = 17, n_alt = 0
   Insn 39: point = 17, n_alt = -2
   Insn 38: point = 17, n_alt = 0
   Insn 37: point = 17, n_alt = 0
   Insn 36: point = 17, n_alt = 0
  BB 5
   Insn 34: point = 18, n_alt = -1
   Insn 33: point = 18, n_alt = 0
   Insn 32: point = 19, n_alt = 4
   Insn 31: point = 21, n_alt = 0
  BB 4
   Insn 29: point = 23, n_alt = -1
   Insn 28: point = 23, n_alt = 0
   Insn 27: point = 24, n_alt = 0
   Insn 26: point = 26, n_alt = 2
   Insn 25: point = 28, n_alt = 0
   Insn 24: point = 29, n_alt = 0
   Insn 23: point = 29, n_alt = 0
   Insn 22: point = 29, n_alt = 0
   Insn 21: point = 29, n_alt = 0
  BB 17
   Insn 121: point = 30, n_alt = -1
  BB 3
   Insn 15: point = 31, n_alt = -1
   Insn 14: point = 31, n_alt = 0
   Insn 13: point = 32, n_alt = 0
   Insn 12: point = 34, n_alt = 2
   Insn 11: point = 36, n_alt = 0
  BB 14
   Insn 95: point = 38, n_alt = 0
   Insn 94: point = 38, n_alt = 0
  BB 13
   Insn 122: point = 39, n_alt = -1
   Insn 91: point = 39, n_alt = 0
   Insn 90: point = 39, n_alt = 0
   Insn 89: point = 39, n_alt = -2
   Insn 88: point = 39, n_alt = 0
   Insn 87: point = 39, n_alt = 0
   Insn 86: point = 39, n_alt = 0
  BB 12
   Insn 84: point = 40, n_alt = -1
   Insn 83: point = 40, n_alt = 0
   Insn 82: point = 41, n_alt = 4
   Insn 81: point = 43, n_alt = 0
  BB 11
   Insn 79: point = 45, n_alt = -1
   Insn 78: point = 45, n_alt = 0
   Insn 77: point = 46, n_alt = 0
   Insn 76: point = 48, n_alt = 2
   Insn 75: point = 50, n_alt = 0
   Insn 74: point = 51, n_alt = 0
   Insn 73: point = 51, n_alt = 0
   Insn 72: point = 51, n_alt = 0
   Insn 71: point = 51, n_alt = 0
  BB 18
   Insn 126: point = 52, n_alt = -1
  BB 10
   Insn 65: point = 53, n_alt = -1
   Insn 64: point = 53, n_alt = 0
   Insn 63: point = 54, n_alt = 0
   Insn 62: point = 56, n_alt = 2
   Insn 61: point = 58, n_alt = 0
 r82: [4..59]
 r83: [33..34]
 r84: [31..32]
 r85: [25..26]
 r86: [23..24]
 r87: [18..19]
 r88: [10..11]
 r89: [55..56]
 r90: [53..54]
 r91: [47..48]
 r92: [45..46]
 r93: [40..41]
 r94: [4..5]
 r95: [2..3]
 r96: [0..1]
 r97: [13..14]
 r98: [35..36]
 r99: [27..28]
 r100: [20..21]
 r101: [7..8]
 r102: [57..58]
 r103: [49..50]
 r104: [42..43]
Compressing live ranges: from 60 to 44 - 73%
Ranges after the compression:
 r82: [4..43]
 r83: [24..25]
 r84: [22..23]
 r85: [18..19]
 r86: [16..17]
 r87: [12..13]
 r88: [8..9]
 r89: [40..41]
 r90: [38..39]
 r91: [34..35]
 r92: [32..33]
 r93: [28..29]
 r94: [4..5]
 r95: [2..3]
 r96: [0..1]
 r97: [10..11]
 r98: [26..27]
 r99: [20..21]
 r100: [14..15]
 r101: [6..7]
 r102: [42..43]
 r103: [36..37]
 r104: [30..31]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 127
changing reg in insn 98
changing reg in insn 89
changing reg in insn 55
changing reg in insn 53
changing reg in insn 48
changing reg in insn 39
changing reg in insn 5
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 48
changing reg in insn 50
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 98
changing reg in insn 100
changing reg in insn 103
changing reg in insn 106
changing reg in insn 106
changing reg in insn 110
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 25
changing reg in insn 26
changing reg in insn 31
changing reg in insn 32
changing reg in insn 55
changing reg in insn 56
changing reg in insn 61
changing reg in insn 62
changing reg in insn 75
changing reg in insn 76
changing reg in insn 81
changing reg in insn 82
deleting insn with uid = 39.
deleting insn with uid = 53.
deleting insn with uid = 89.
deleting insn with uid = 106.
deleting insn with uid = 110.
starting the processing of deferred insns
ending the processing of deferred insns


sync_dev

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={27d,22u} r1={6d} r2={6d} r3={1d,7u} r7={15d,73u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={26d,8u} r18={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 516{406d,110u,0e} in 72{67 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 127 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 127 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 127 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [97])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":149:8 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])
        (reg/f:SI 0 ax [97])) "fs/buffer.c":149:8 75 {*movsi_internal}
     (nil))
(insn 7 6 113 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":150:12 75 {*movsi_internal}
     (nil))
(jump_insn 113 7 114 2 (set (pc)
        (label_ref 46)) "fs/buffer.c":150:5 807 {jump}
     (nil)
 -> 46)
(barrier 114 113 49)
(code_label 49 114 10 3 25 (nil) [1 uses])
(note 10 49 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":151:15 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [98])
                (const_int 8 [0x8])) [5 bh_15->b_dev+0 S2 A32])) "fs/buffer.c":151:15 76 {*movhi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/buffer.c":151:15 144 {*zero_extendhisi2}
     (nil))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:84 _2 ] [84]))) "fs/buffer.c":151:12 11 {*cmpsi_1}
     (nil))
(jump_insn 15 14 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 120)
            (pc))) "fs/buffer.c":151:12 806 {*jcc}
     (nil)
 -> 120)
(note 20 15 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":153:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 22 21 23 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":153:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":153:9 812 {*call}
     (nil)
    (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":153:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 25 24 26 4 (set (reg/f:SI 0 ax [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":154:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [99])
                (const_int 8 [0x8])) [5 bh_15->b_dev+0 S2 A32])) "fs/buffer.c":154:15 76 {*movhi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/buffer.c":154:15 144 {*zero_extendhisi2}
     (nil))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:86 _4 ] [86]))) "fs/buffer.c":154:12 11 {*cmpsi_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/buffer.c":154:12 806 {*jcc}
     (nil)
 -> 42)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 0 ax [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":154:35 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:QI 0 ax [orig:87 _5 ] [87])
        (mem:QI (plus:SI (reg/f:SI 0 ax [100])
                (const_int 11 [0xb])) [0 bh_15->b_dirt+0 S1 A8])) "fs/buffer.c":154:35 77 {*movqi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "fs/buffer.c":154:30 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/buffer.c":154:30 806 {*jcc}
     (nil)
 -> 42)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":155:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 37 36 38 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":155:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 38 37 40 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 1 [0x1])) "fs/buffer.c":155:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 40 38 41 6 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":155:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 41 40 117 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":155:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 117 41 118 6 (set (pc)
        (label_ref 42)) 807 {jump}
     (nil)
 -> 42)
(barrier 118 117 120)
(code_label 120 118 119 17 31 (nil) [1 uses])
(note 119 120 121 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 121 119 42 17 (const_int 0 [0]) "fs/buffer.c":152:13 843 {nop}
     (nil))
(code_label 42 121 43 7 24 (nil) [3 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":150:34 209 {*addsi_1}
     (nil))
(insn 45 44 46 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":150:40 209 {*addsi_1}
     (nil))
(code_label 46 45 47 8 22 (nil) [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 50 8 (set (reg:SI 0 ax [orig:88 nr_buffers.5_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":150:19 75 {*movsi_internal}
     (nil))
(insn 50 48 51 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 i+0 S4 A32])
            (reg:SI 0 ax [orig:88 nr_buffers.5_6 ] [88]))) "fs/buffer.c":150:19 11 {*cmpsi_1}
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "fs/buffer.c":150:19 806 {*jcc}
     (nil)
 -> 49)
(note 52 51 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 54 52 55 9 (call (mem:QI (symbol_ref:SI ("sync_inodes") [flags 0x41]  <function_decl 0x752d7c0f2900 sync_inodes>) [0 sync_inodes S1 A8])
        (const_int 0 [0])) "fs/buffer.c":157:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 55 54 56 9 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":158:8 75 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])
        (reg/f:SI 0 ax [101])) "fs/buffer.c":158:8 75 {*movsi_internal}
     (nil))
(insn 57 56 115 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":159:12 75 {*movsi_internal}
     (nil))
(jump_insn 115 57 116 9 (set (pc)
        (label_ref 96)) "fs/buffer.c":159:5 807 {jump}
     (nil)
 -> 96)
(barrier 116 115 99)
(code_label 99 116 60 10 29 (nil) [1 uses])
(note 60 99 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 10 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":160:15 75 {*movsi_internal}
     (nil))
(insn 62 61 63 10 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [102])
                (const_int 8 [0x8])) [5 bh_16->b_dev+0 S2 A32])) "fs/buffer.c":160:15 76 {*movhi_internal}
     (nil))
(insn 63 62 64 10 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (zero_extend:SI (reg:HI 0 ax [orig:89 _7 ] [89]))) "fs/buffer.c":160:15 144 {*zero_extendhisi2}
     (nil))
(insn 64 63 65 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:90 _8 ] [90]))) "fs/buffer.c":160:12 11 {*cmpsi_1}
     (nil))
(jump_insn 65 64 70 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 125)
            (pc))) "fs/buffer.c":160:12 806 {*jcc}
     (nil)
 -> 125)
(note 70 65 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":162:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 72 71 73 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":162:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 73 72 74 11 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":162:9 812 {*call}
     (nil)
    (nil))
(insn 74 73 75 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":162:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 75 74 76 11 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":163:15 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [103])
                (const_int 8 [0x8])) [5 bh_16->b_dev+0 S2 A32])) "fs/buffer.c":163:15 76 {*movhi_internal}
     (nil))
(insn 77 76 78 11 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (zero_extend:SI (reg:HI 0 ax [orig:91 _9 ] [91]))) "fs/buffer.c":163:15 144 {*zero_extendhisi2}
     (nil))
(insn 78 77 79 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:92 _10 ] [92]))) "fs/buffer.c":163:12 11 {*cmpsi_1}
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "fs/buffer.c":163:12 806 {*jcc}
     (nil)
 -> 92)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 12 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":163:35 75 {*movsi_internal}
     (nil))
(insn 82 81 83 12 (set (reg:QI 0 ax [orig:93 _11 ] [93])
        (mem:QI (plus:SI (reg/f:SI 0 ax [104])
                (const_int 11 [0xb])) [0 bh_16->b_dirt+0 S1 A8])) "fs/buffer.c":163:35 77 {*movqi_internal}
     (nil))
(insn 83 82 84 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:93 _11 ] [93])
            (const_int 0 [0]))) "fs/buffer.c":163:30 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 84 83 85 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "fs/buffer.c":163:30 806 {*jcc}
     (nil)
 -> 92)
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":164:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 87 86 88 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":164:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 88 87 90 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 1 [0x1])) "fs/buffer.c":164:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 90 88 91 13 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":164:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 91 90 122 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":164:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 122 91 123 13 (set (pc)
        (label_ref 92)) 807 {jump}
     (nil)
 -> 92)
(barrier 123 122 125)
(code_label 125 123 124 18 32 (nil) [1 uses])
(note 124 125 126 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 126 124 92 18 (const_int 0 [0]) "fs/buffer.c":161:13 843 {nop}
     (nil))
(code_label 92 126 93 14 28 (nil) [3 uses])
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":159:34 209 {*addsi_1}
     (nil))
(insn 95 94 96 14 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":159:40 209 {*addsi_1}
     (nil))
(code_label 96 95 97 15 26 (nil) [1 uses])
(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 100 15 (set (reg:SI 0 ax [orig:94 nr_buffers.6_12 ] [94])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":159:19 75 {*movsi_internal}
     (nil))
(insn 100 98 101 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 i+0 S4 A32])
            (reg:SI 0 ax [orig:94 nr_buffers.6_12 ] [94]))) "fs/buffer.c":159:19 11 {*cmpsi_1}
     (nil))
(jump_insn 101 100 102 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) "fs/buffer.c":159:19 806 {*jcc}
     (nil)
 -> 99)
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 111 16 (set (reg:SI 0 ax [orig:95 _27 ] [95])
        (const_int 0 [0])) "fs/buffer.c":166:12 75 {*movsi_internal}
     (nil))
(insn 111 103 128 16 (use (reg/i:SI 0 ax)) "fs/buffer.c":167:1 -1
     (nil))
(note 128 111 0 NOTE_INSN_DELETED)

;; Function find_buffer (find_buffer, funcdef_no=10, decl_uid=1436, cgraph_uid=11, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 6:  (0) r  (1) 0  (2) m {*xorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 9:  (0) =d  (1) %a  (2) rm  (3) =1 {*umulsi3_highpart_1}
      Creating newreg=104 from oldreg=102, assigning class AREG to r104
    9: {r93:SI=trunc(zero_extend(r104:SI)*zero_extend(r94:SI) 0>>0x20);clobber r104:SI;clobber flags:CC;}
      REG_DEAD r94:SI
      REG_UNUSED r102:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   60: r104:SI=r84:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 10:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=105 from oldreg=93, assigning class GENERAL_REGS to r105
   10: {r105:SI=r105:SI 0>>0x8;clobber flags:CC;}
      REG_DEAD r93:SI
      REG_UNUSED flags:CC
      REG_EQUAL udiv(r84:SI,0x133)
    Inserting insn reload before:
   61: r105:SI=r93:SI
    Inserting insn reload after:
   62: r85:SI=r105:SI

            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 11:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=106 from oldreg=84, assigning class GENERAL_REGS to r106
   12: {r106:SI=r106:SI-r95:SI;clobber flags:CC;}
      REG_DEAD r95:SI
      REG_DEAD r84:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   63: r106:SI=r84:SI
    Inserting insn reload after:
   64: r85:SI=r106:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 19:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5
EBB 6
EBB 7 8
EBB 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 52: point = 0, n_alt = -1
   Insn 51: point = 0, n_alt = -2
   Insn 47: point = 1, n_alt = -2
  BB 5
   Insn 56: point = 4, n_alt = -1
   Insn 30: point = 4, n_alt = 0
  BB 8
   Insn 44: point = 5, n_alt = 0
  BB 7
   Insn 42: point = 6, n_alt = -1
   Insn 41: point = 6, n_alt = 1
  BB 2
   Insn 54: point = 6, n_alt = -1
   Insn 14: point = 6, n_alt = 1
   Insn 13: point = 7, n_alt = 0
   Insn 64: point = 9, n_alt = -2
	Hard reg 0 is preferable by r106 with profit 1000
   Insn 12: point = 11, n_alt = 0
   Insn 63: point = 13, n_alt = -2
	Hard reg 0 is preferable by r106 with profit 1000
	Hard reg 3 is preferable by r106 with profit 1000
   Insn 11: point = 15, n_alt = 1
   Insn 62: point = 17, n_alt = -2
	Hard reg 0 is preferable by r105 with profit 1000
   Insn 10: point = 19, n_alt = 0
   Insn 61: point = 20, n_alt = -2
	Hard reg 0 is preferable by r105 with profit 1000
	Hard reg 1 is preferable by r105 with profit 1000
   Insn 9: point = 22, n_alt = 0
   Insn 60: point = 24, n_alt = -2
	Hard reg 3 is preferable by r104 with profit 1000
   Insn 8: point = 25, n_alt = 0
   Insn 7: point = 26, n_alt = -2
   Insn 6: point = 28, n_alt = 1
   Insn 5: point = 30, n_alt = 0
   Insn 58: point = 31, n_alt = 0
  BB 6
   Insn 37: point = 32, n_alt = 1
   Insn 36: point = 33, n_alt = 0
   Insn 35: point = 35, n_alt = 0
  BB 4
   Insn 28: point = 36, n_alt = -1
   Insn 27: point = 36, n_alt = 0
   Insn 26: point = 37, n_alt = 0
   Insn 25: point = 38, n_alt = 0
   Insn 24: point = 40, n_alt = 0
  BB 3
   Insn 22: point = 41, n_alt = -1
   Insn 21: point = 41, n_alt = 0
   Insn 20: point = 42, n_alt = 0
   Insn 19: point = 44, n_alt = 2
   Insn 18: point = 46, n_alt = 0
 r82: [8..31]
 r83: [27..28]
 r84: [14..26]
 r85: [16..17] [8..9]
 r86: [43..44]
 r87: [41..42]
 r88: [36..38]
 r89: [36..37]
 r90: [2..5]
 r91: [0..1]
 r92: [29..30]
 r93: [21..22]
 r94: [23..25]
 r95: [12..15]
 r96: [6..7]
 r97: [45..46]
 r98: [39..40]
 r99: [34..35]
 r100: [32..33]
 r104: [22..24]
 r105: [18..20]
 r106: [10..13]
Compressing live ranges: from 47 to 38 - 80%
Ranges after the compression:
 r82: [6..23]
 r83: [20..21]
 r84: [10..19]
 r85: [12..13] [6..7]
 r86: [34..35]
 r87: [32..33]
 r88: [28..29]
 r89: [28..29]
 r90: [2..3]
 r91: [0..1]
 r92: [22..23]
 r93: [16..17]
 r94: [18..19]
 r95: [8..11]
 r96: [4..5]
 r97: [36..37]
 r98: [30..31]
 r99: [26..27]
 r100: [24..25]
 r104: [17..19]
 r105: [14..15]
 r106: [8..9]

********** Assignment #1: **********

	 Assigning to 104 (cl=AREG, orig=102, freq=2000, tfirst=104, tfreq=2000)...
	   Assign 0 to reload r104 (freq=2000)
	 Assigning to 105 (cl=GENERAL_REGS, orig=93, freq=3000, tfirst=105, tfreq=3000)...
	   Assign 0 to reload r105 (freq=3000)
	 Assigning to 106 (cl=GENERAL_REGS, orig=84, freq=3000, tfirst=106, tfreq=3000)...
	   Assign 0 to reload r106 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 58
changing reg in insn 13
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 10
changing reg in insn 13
changing reg in insn 11
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 25
changing reg in insn 27
changing reg in insn 26
changing reg in insn 27
changing reg in insn 44
changing reg in insn 30
changing reg in insn 47
changing reg in insn 47
changing reg in insn 51
changing reg in insn 5
changing reg in insn 6
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 25
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
deleting insn with uid = 62.
deleting insn with uid = 64.
deleting insn with uid = 47.
deleting insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns


find_buffer

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={19d,17u} r1={5d,4u} r2={2d,1u} r3={1d,2u,1e} r7={1d,20u} r16={2e} r17={9d,3u} 
;;    total ref usage 87{37d,47u,3e} in 34{34 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 3 2 2 (parallel [
            (set (reg:SI 2 cx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 58 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [7 dev+0 S4 A32])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [orig:83 _1 ] [83])
                (xor:SI (reg:SI 0 ax [92])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [7 block+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 521 {*xorsi_1}
     (expr_list:REG_EQUAL (xor:SI (mem/c:SI (reg/f:SI 16 argp) [7 dev+0 S4 A32])
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [7 block+0 S4 A32]))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx [orig:84 _2 ] [84])
        (reg:SI 0 ax [orig:83 _1 ] [83])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 8 7 60 2 (set (reg:SI 1 dx [94])
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 60 8 9 2 (set (reg:SI 0 ax [102])
        (reg:SI 3 bx [orig:84 _2 ] [84])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 9 60 61 2 (parallel [
            (set (reg:SI 1 dx [93])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 0 ax [102]))
                            (zero_extend:DI (reg:SI 1 dx [94])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [102]))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 436 {*umulsi3_highpart_1}
     (nil))
(insn 61 9 10 2 (set (reg:SI 0 ax [93])
        (reg:SI 1 dx [93])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 10 61 11 2 (parallel [
            (set (reg:SI 0 ax [93])
                (lshiftrt:SI (reg:SI 0 ax [93])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 3 bx [orig:84 _2 ] [84])
            (const_int 307 [0x133]))
        (nil)))
(insn 11 10 63 2 (parallel [
            (set (reg:SI 1 dx [95])
                (mult:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 408 {*mulsi3_1}
     (nil))
(insn 63 11 12 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (reg:SI 3 bx [orig:84 _2 ] [84])) "fs/buffer.c":173:16 75 {*movsi_internal}
     (nil))
(insn 12 63 13 2 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (minus:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (reg:SI 1 dx [95])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":173:16 282 {*subsi_1}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 0 ax [96])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                        (const_int 4 [0x4]))
                    (reg:SI 2 cx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_3]+0 S4 A32])) "fs/buffer.c":173:14 75 {*movsi_internal}
     (nil))
(insn 14 13 54 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])
        (reg/f:SI 0 ax [96])) "fs/buffer.c":173:14 75 {*movsi_internal}
     (nil))
(jump_insn 54 14 55 2 (set (pc)
        (label_ref 38)) "fs/buffer.c":173:5 807 {jump}
     (nil)
 -> 38)
(barrier 55 54 40)
(code_label 40 55 17 3 37 (nil) [1 uses])
(note 17 40 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:SI 0 ax [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":174:16 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:HI 0 ax [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 0 ax [97])
                (const_int 8 [0x8])) [5 tmp_8->b_dev+0 S2 A32])) "fs/buffer.c":174:16 76 {*movhi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (zero_extend:SI (reg:HI 0 ax [orig:86 _4 ] [86]))) "fs/buffer.c":174:16 144 {*zero_extendhisi2}
     (nil))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:87 _5 ] [87]))) "fs/buffer.c":174:12 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/buffer.c":174:12 806 {*jcc}
     (nil)
 -> 33)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":174:37 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:SI 1 dx [orig:88 _6 ] [88])
        (mem:SI (plus:SI (reg/f:SI 0 ax [98])
                (const_int 4 [0x4])) [4 tmp_8->b_blocknr+0 S4 A32])) "fs/buffer.c":174:37 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 0 ax [orig:89 block.7_7 ] [89])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 block+0 S4 A32])) "fs/buffer.c":174:49 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:88 _6 ] [88])
            (reg:SI 0 ax [orig:89 block.7_7 ] [89]))) "fs/buffer.c":174:31 11 {*cmpsi_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/buffer.c":174:31 806 {*jcc}
     (nil)
 -> 33)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 56 5 (set (reg/f:SI 0 ax [orig:90 _9 ] [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":175:20 75 {*movsi_internal}
     (nil))
(jump_insn 56 30 57 5 (set (pc)
        (label_ref 45)) "fs/buffer.c":175:20 807 {jump}
     (nil)
 -> 45)
(barrier 57 56 33)
(code_label 33 57 34 6 35 (nil) [2 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:SI 0 ax [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":173:51 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 0 ax [100])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [99])
                (const_int 24 [0x18])) [1 tmp_8->b_next+0 S4 A32])) "fs/buffer.c":173:51 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])
        (reg/f:SI 0 ax [100])) "fs/buffer.c":173:51 75 {*movsi_internal}
     (nil))
(code_label 38 37 39 7 34 (nil) [1 uses])
(note 39 38 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 39 42 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":173:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/buffer.c":173:38 806 {*jcc}
     (nil)
 -> 40)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg/f:SI 0 ax [orig:90 _9 ] [90])
        (const_int 0 [0])) "fs/buffer.c":176:12 75 {*movsi_internal}
     (nil))
(code_label 45 44 46 9 36 (nil) [1 uses])
(note 46 45 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 46 59 9 (use (reg/i:SI 0 ax)) "fs/buffer.c":177:1 -1
     (nil))
(note 59 52 0 NOTE_INSN_DELETED)

;; Function get_hash_table (get_hash_table, funcdef_no=11, decl_uid=1160, cgraph_uid=12, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) lBwBz {*call_value} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 21:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 23:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 46:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 47:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 49:  (0) m  (1) qn {*movqi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6 7
EBB 8
EBB 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 60: point = 0, n_alt = -1
   Insn 59: point = 0, n_alt = -2
   Insn 55: point = 1, n_alt = -2
  BB 7
   Insn 64: point = 4, n_alt = -1
   Insn 40: point = 4, n_alt = 0
  BB 4
   Insn 62: point = 5, n_alt = -1
   Insn 14: point = 5, n_alt = 0
  BB 3
   Insn 12: point = 6, n_alt = -1
   Insn 11: point = 6, n_alt = 1
   Insn 10: point = 6, n_alt = 1
   Insn 9: point = 7, n_alt = -2
   Insn 8: point = 8, n_alt = 0
   Insn 7: point = 8, n_alt = 0
   Insn 6: point = 8, n_alt = 0
   Insn 5: point = 8, n_alt = 0
  BB 8
   Insn 66: point = 8, n_alt = -1
   Insn 49: point = 8, n_alt = 8
   Insn 48: point = 9, n_alt = 0
   Insn 47: point = 10, n_alt = 5
   Insn 46: point = 12, n_alt = 4
   Insn 45: point = 14, n_alt = 0
  BB 6
   Insn 38: point = 15, n_alt = -1
   Insn 37: point = 15, n_alt = 0
   Insn 36: point = 16, n_alt = 0
   Insn 35: point = 17, n_alt = 0
   Insn 34: point = 19, n_alt = 0
  BB 5
   Insn 32: point = 20, n_alt = -1
   Insn 31: point = 20, n_alt = 0
   Insn 30: point = 21, n_alt = 0
   Insn 29: point = 23, n_alt = 2
   Insn 28: point = 25, n_alt = 0
   Insn 27: point = 26, n_alt = 0
   Insn 26: point = 26, n_alt = 0
   Insn 25: point = 26, n_alt = 0
   Insn 24: point = 26, n_alt = 0
   Insn 23: point = 26, n_alt = 8
   Insn 22: point = 27, n_alt = 0
   Insn 21: point = 28, n_alt = 5
   Insn 20: point = 30, n_alt = 4
   Insn 19: point = 32, n_alt = 0
  BB 2
   Insn 68: point = 33, n_alt = 0
 r82: [33..33]
 r83: [29..30]
 r84: [26..28]
 r85: [22..23]
 r86: [20..21]
 r87: [15..17]
 r88: [15..16]
 r89: [11..12]
 r90: [8..10]
 r91: [2..5]
 r92: [0..1]
 r93: [6..7]
 r94: [31..32]
 r95: [26..27]
 r96: [24..25]
 r97: [18..19]
 r98: [13..14]
 r99: [8..9]
Compressing live ranges: from 34 to 29 - 85%
Ranges after the compression:
 r82: [28..28]
 r83: [24..25]
 r84: [22..23]
 r85: [18..19]
 r86: [16..17]
 r87: [12..13]
 r88: [12..13]
 r89: [8..9]
 r90: [6..7]
 r91: [2..3]
 r92: [0..1]
 r93: [4..5]
 r94: [26..27]
 r95: [22..23]
 r96: [20..21]
 r97: [14..15]
 r98: [10..11]
 r99: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 68
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 23
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 49
changing reg in insn 40
changing reg in insn 14
changing reg in insn 55
changing reg in insn 55
changing reg in insn 59
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 35
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
deleting insn with uid = 9.
deleting insn with uid = 55.
deleting insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 26.


get_hash_table

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={17d,14u} r1={6d,3u} r2={3d} r7={7d,34u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={11d,3u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 228{174d,54u,0e} in 38{36 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 68 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 68 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 68 50 2 NOTE_INSN_FUNCTION_BEG)
(code_label 50 2 4 3 42 (nil) [1 uses])
(note 4 50 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 block+0 S4 A32])) "fs/buffer.c":191:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 dev+0 S4 A32])) "fs/buffer.c":191:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 7 6 8 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_buffer") [flags 0x3]  <function_decl 0x752d7c146900 find_buffer>) [0 find_buffer S1 A8])
            (const_int 8 [0x8]))) "fs/buffer.c":191:20 823 {*call_value}
     (nil)
    (nil))
(insn 8 7 10 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":191:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 10 8 11 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])
        (reg:SI 0 ax [93])) "fs/buffer.c":191:20 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":191:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/buffer.c":191:12 806 {*jcc}
     (nil)
 -> 17)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 62 4 (set (reg/f:SI 0 ax [orig:91 _11 ] [91])
        (const_int 0 [0])) "fs/buffer.c":192:20 75 {*movsi_internal}
     (nil))
(jump_insn 62 14 63 4 (set (pc)
        (label_ref 53)) "fs/buffer.c":192:20 807 {jump}
     (nil)
 -> 53)
(barrier 63 62 17)
(code_label 17 63 18 5 39 (nil) [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg/f:SI 0 ax [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":193:11 75 {*movsi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [94])
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])) "fs/buffer.c":193:11 77 {*movqi_internal}
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg:QI 1 dx [orig:84 _3 ] [84])
                (plus:QI (reg:QI 0 ax [orig:83 _1 ] [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":193:20 213 {*addqi_1}
     (nil))
(insn 22 21 23 5 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":193:20 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (mem:QI (plus:SI (reg/f:SI 0 ax [95])
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])
        (reg:QI 1 dx [orig:84 _3 ] [84])) "fs/buffer.c":193:20 77 {*movqi_internal}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":194:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 25 24 26 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 bh+0 S4 A32])) "fs/buffer.c":194:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 25 27 5 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":194:9 812 {*call}
     (nil)
    (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":194:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 27 29 5 (set (reg/f:SI 0 ax [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":195:15 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:HI 0 ax [orig:85 _4 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [96])
                (const_int 8 [0x8])) [5 bh_18->b_dev+0 S2 A32])) "fs/buffer.c":195:15 76 {*movhi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:SI 0 ax [orig:86 _5 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _4 ] [85]))) "fs/buffer.c":195:15 144 {*zero_extendhisi2}
     (nil))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:86 _5 ] [86]))) "fs/buffer.c":195:12 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/buffer.c":195:12 806 {*jcc}
     (nil)
 -> 43)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 0 ax [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":195:35 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SI 1 dx [orig:87 _6 ] [87])
        (mem:SI (plus:SI (reg/f:SI 0 ax [97])
                (const_int 4 [0x4])) [4 bh_18->b_blocknr+0 S4 A32])) "fs/buffer.c":195:35 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:SI 0 ax [orig:88 block.8_7 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 block+0 S4 A32])) "fs/buffer.c":195:47 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:87 _6 ] [87])
            (reg:SI 0 ax [orig:88 block.8_7 ] [88]))) "fs/buffer.c":195:30 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/buffer.c":195:30 806 {*jcc}
     (nil)
 -> 43)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 64 7 (set (reg/f:SI 0 ax [orig:91 _11 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":196:20 75 {*movsi_internal}
     (nil))
(jump_insn 64 40 65 7 (set (pc)
        (label_ref 53)) "fs/buffer.c":196:20 807 {jump}
     (nil)
 -> 53)
(barrier 65 64 43)
(code_label 43 65 44 8 41 (nil) [2 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":197:11 75 {*movsi_internal}
     (nil))
(insn 46 45 47 8 (set (reg:QI 0 ax [orig:89 _8 ] [89])
        (mem:QI (plus:SI (reg/f:SI 0 ax [98])
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])) "fs/buffer.c":197:11 77 {*movqi_internal}
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg:QI 1 dx [orig:90 _10 ] [90])
                (plus:QI (reg:QI 0 ax [orig:89 _8 ] [89])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":197:20 213 {*addqi_1}
     (nil))
(insn 48 47 49 8 (set (reg/f:SI 0 ax [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 bh+0 S4 A32])) "fs/buffer.c":197:20 75 {*movsi_internal}
     (nil))
(insn 49 48 66 8 (set (mem:QI (plus:SI (reg/f:SI 0 ax [99])
                (const_int 12 [0xc])) [0 bh_18->b_count+0 S1 A32])
        (reg:QI 1 dx [orig:90 _10 ] [90])) "fs/buffer.c":197:20 77 {*movqi_internal}
     (nil))
(jump_insn 66 49 67 8 (set (pc)
        (label_ref 50)) "fs/buffer.c":191:12 807 {jump}
     (nil)
 -> 50)
(barrier 67 66 53)
(code_label 53 67 54 9 40 (nil) [2 uses])
(note 54 53 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 54 69 9 (use (reg/i:SI 0 ax)) "fs/buffer.c":199:1 -1
     (nil))
(note 69 60 0 NOTE_INSN_DELETED)

;; Function insert_into_queues (insert_into_queues, funcdef_no=12, decl_uid=1452, cgraph_uid=13, symbol_order=18)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 33:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*xorsi_1}
      Creating newreg=126 from oldreg=91, assigning class GENERAL_REGS to r126
   37: {r126:SI=r126:SI^r92:SI;clobber flags:CC;}
      REG_DEAD r92:SI
      REG_DEAD r91:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   74: r126:SI=r91:SI
    Inserting insn reload after:
   75: r93:SI=r126:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 39:  (0) =d  (1) %a  (2) rm  (3) =1 {*umulsi3_highpart_1}
      Creating newreg=127 from oldreg=123, assigning class AREG to r127
   39: {r111:SI=trunc(zero_extend(r127:SI)*zero_extend(r112:SI) 0>>0x20);clobber r127:SI;clobber flags:CC;}
      REG_DEAD r112:SI
      REG_UNUSED r123:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   76: r127:SI=r93:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 40:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=128 from oldreg=111, assigning class GENERAL_REGS to r128
   40: {r128:SI=r128:SI 0>>0x8;clobber flags:CC;}
      REG_DEAD r111:SI
      REG_UNUSED flags:CC
      REG_EQUAL udiv(r93:SI,0x133)
    Inserting insn reload before:
   77: r128:SI=r111:SI
    Inserting insn reload after:
   78: r94:SI=r128:SI

            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 41:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=129 from oldreg=93, assigning class GENERAL_REGS to r129
   42: {r129:SI=r129:SI-r113:SI;clobber flags:CC;}
      REG_DEAD r113:SI
      REG_DEAD r93:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   79: r129:SI=r93:SI
    Inserting insn reload after:
   80: r94:SI=r129:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*xorsi_1}
      Creating newreg=130 from oldreg=97, assigning class GENERAL_REGS to r130
   51: {r130:SI=r130:SI^r98:SI;clobber flags:CC;}
      REG_DEAD r98:SI
      REG_DEAD r97:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   81: r130:SI=r97:SI
    Inserting insn reload after:
   82: r99:SI=r130:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 53:  (0) =d  (1) %a  (2) rm  (3) =1 {*umulsi3_highpart_1}
      Creating newreg=131 from oldreg=124, assigning class AREG to r131
   53: {r117:SI=trunc(zero_extend(r131:SI)*zero_extend(r118:SI) 0>>0x20);clobber r131:SI;clobber flags:CC;}
      REG_DEAD r118:SI
      REG_UNUSED r124:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   83: r131:SI=r99:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 54:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=132 from oldreg=117, assigning class GENERAL_REGS to r132
   54: {r132:SI=r132:SI 0>>0x8;clobber flags:CC;}
      REG_DEAD r117:SI
      REG_UNUSED flags:CC
      REG_EQUAL udiv(r99:SI,0x133)
    Inserting insn reload before:
   84: r132:SI=r117:SI
    Inserting insn reload after:
   85: r100:SI=r132:SI

            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 55:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 56:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=133 from oldreg=99, assigning class GENERAL_REGS to r133
   56: {r133:SI=r133:SI-r119:SI;clobber flags:CC;}
      REG_DEAD r119:SI
      REG_DEAD r99:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   86: r133:SI=r99:SI
    Inserting insn reload after:
   87: r100:SI=r133:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 67: point = 0, n_alt = -1
   Insn 62: point = 0, n_alt = 1
   Insn 61: point = 1, n_alt = 0
   Insn 60: point = 2, n_alt = 0
   Insn 59: point = 4, n_alt = 0
   Insn 58: point = 5, n_alt = 1
   Insn 57: point = 6, n_alt = 0
   Insn 87: point = 7, n_alt = -2
	Hard reg 0 is preferable by r133 with profit 1000
   Insn 56: point = 9, n_alt = 0
   Insn 86: point = 11, n_alt = -2
	Hard reg 0 is preferable by r133 with profit 1000
	Hard reg 3 is preferable by r133 with profit 1000
   Insn 55: point = 13, n_alt = 1
   Insn 85: point = 15, n_alt = -2
	Hard reg 0 is preferable by r132 with profit 1000
   Insn 54: point = 17, n_alt = 0
   Insn 84: point = 18, n_alt = -2
	Hard reg 0 is preferable by r132 with profit 1000
	Hard reg 1 is preferable by r132 with profit 1000
   Insn 53: point = 20, n_alt = 0
   Insn 83: point = 22, n_alt = -2
	Hard reg 3 is preferable by r131 with profit 1000
   Insn 52: point = 23, n_alt = 0
   Insn 82: point = 24, n_alt = -2
	Hard reg 3 is preferable by r130 with profit 1000
   Insn 51: point = 26, n_alt = 0
   Insn 81: point = 28, n_alt = -2
	Hard reg 3 is preferable by r130 with profit 1000
	Hard reg 1 is preferable by r130 with profit 1000
   Insn 50: point = 30, n_alt = 0
   Insn 49: point = 32, n_alt = 0
   Insn 48: point = 33, n_alt = 0
   Insn 47: point = 35, n_alt = 2
   Insn 46: point = 37, n_alt = 0
   Insn 45: point = 38, n_alt = 1
   Insn 44: point = 39, n_alt = 0
   Insn 43: point = 40, n_alt = 0
   Insn 80: point = 42, n_alt = -2
	Hard reg 0 is preferable by r129 with profit 1000
   Insn 42: point = 44, n_alt = 0
   Insn 79: point = 46, n_alt = -2
	Hard reg 0 is preferable by r129 with profit 1000
	Hard reg 3 is preferable by r129 with profit 1000
   Insn 41: point = 48, n_alt = 1
   Insn 78: point = 50, n_alt = -2
	Hard reg 0 is preferable by r128 with profit 1000
   Insn 40: point = 52, n_alt = 0
   Insn 77: point = 53, n_alt = -2
	Hard reg 0 is preferable by r128 with profit 1000
	Hard reg 1 is preferable by r128 with profit 1000
   Insn 39: point = 55, n_alt = 0
   Insn 76: point = 57, n_alt = -2
	Hard reg 3 is preferable by r127 with profit 1000
   Insn 38: point = 58, n_alt = 0
   Insn 75: point = 59, n_alt = -2
	Hard reg 3 is preferable by r126 with profit 1000
   Insn 37: point = 61, n_alt = 0
   Insn 74: point = 63, n_alt = -2
	Hard reg 3 is preferable by r126 with profit 1000
	Hard reg 1 is preferable by r126 with profit 1000
   Insn 36: point = 65, n_alt = 0
   Insn 35: point = 67, n_alt = 0
   Insn 34: point = 68, n_alt = 0
   Insn 33: point = 70, n_alt = 2
   Insn 32: point = 72, n_alt = 0
  BB 5
   Insn 71: point = 74, n_alt = -1
  BB 2
   Insn 26: point = 74, n_alt = -1
   Insn 25: point = 74, n_alt = 0
   Insn 24: point = 75, n_alt = 2
   Insn 23: point = 77, n_alt = 0
   Insn 22: point = 78, n_alt = 1
   Insn 21: point = 79, n_alt = 0
   Insn 20: point = 80, n_alt = 1
   Insn 19: point = 81, n_alt = 0
   Insn 18: point = 82, n_alt = 1
   Insn 17: point = 83, n_alt = 0
   Insn 16: point = 84, n_alt = 0
   Insn 15: point = 85, n_alt = 1
   Insn 14: point = 86, n_alt = 0
   Insn 13: point = 87, n_alt = 0
   Insn 12: point = 89, n_alt = 0
   Insn 11: point = 90, n_alt = 1
   Insn 10: point = 91, n_alt = 0
   Insn 9: point = 92, n_alt = 0
   Insn 8: point = 94, n_alt = 0
   Insn 7: point = 95, n_alt = 1
   Insn 6: point = 96, n_alt = 0
   Insn 5: point = 97, n_alt = 0
   Insn 72: point = 98, n_alt = 0
 r82: [5..98]
 r83: [95..97]
 r84: [93..94]
 r85: [90..92]
 r86: [88..89]
 r87: [85..87]
 r88: [82..84]
 r89: [74..75]
 r90: [69..70]
 r91: [64..68]
 r92: [62..65]
 r93: [47..59]
 r94: [49..50] [41..42]
 r95: [38..40]
 r96: [34..35]
 r97: [29..33]
 r98: [27..30]
 r99: [12..24]
 r100: [14..15] [5..7]
 r101: [0..2]
 r102: [95..96]
 r103: [90..91]
 r104: [85..86]
 r105: [82..83]
 r106: [80..81]
 r107: [78..79]
 r108: [76..77]
 r109: [71..72]
 r110: [66..67]
 r111: [54..55]
 r112: [56..58]
 r113: [45..48]
 r114: [38..39]
 r115: [36..37]
 r116: [31..32]
 r117: [19..20]
 r118: [21..23]
 r119: [10..13]
 r120: [5..6]
 r121: [3..4]
 r122: [0..1]
 r126: [60..63]
 r127: [55..57]
 r128: [51..53]
 r129: [43..46]
 r130: [25..28]
 r131: [20..22]
 r132: [16..18]
 r133: [8..11]
Compressing live ranges: from 99 to 74 - 74%
Ranges after the compression:
 r82: [4..73]
 r83: [72..73]
 r84: [70..71]
 r85: [68..69]
 r86: [66..67]
 r87: [64..65]
 r88: [62..63]
 r89: [54..55]
 r90: [50..51]
 r91: [46..49]
 r92: [44..47]
 r93: [34..43]
 r94: [36..37] [30..31]
 r95: [28..29]
 r96: [24..25]
 r97: [20..23]
 r98: [18..21]
 r99: [8..17]
 r100: [10..11] [4..5]
 r101: [0..1]
 r102: [72..73]
 r103: [68..69]
 r104: [64..65]
 r105: [62..63]
 r106: [60..61]
 r107: [58..59]
 r108: [56..57]
 r109: [52..53]
 r110: [48..49]
 r111: [40..41]
 r112: [42..43]
 r113: [32..35]
 r114: [28..29]
 r115: [26..27]
 r116: [22..23]
 r117: [14..15]
 r118: [16..17]
 r119: [6..9]
 r120: [4..5]
 r121: [2..3]
 r122: [0..1]
 r126: [44..45]
 r127: [41..43]
 r128: [38..39]
 r129: [32..33]
 r130: [18..19]
 r131: [15..17]
 r132: [12..13]
 r133: [6..7]

********** Assignment #1: **********

	 Assigning to 127 (cl=AREG, orig=123, freq=2000, tfirst=127, tfreq=2000)...
	   Assign 0 to reload r127 (freq=2000)
	 Assigning to 131 (cl=AREG, orig=124, freq=2000, tfirst=131, tfreq=2000)...
	   Assign 0 to reload r131 (freq=2000)
	 Assigning to 126 (cl=GENERAL_REGS, orig=91, freq=3000, tfirst=126, tfreq=3000)...
	   Assign 3 to reload r126 (freq=3000)
	 Assigning to 128 (cl=GENERAL_REGS, orig=111, freq=3000, tfirst=128, tfreq=3000)...
	   Assign 0 to reload r128 (freq=3000)
	 Assigning to 129 (cl=GENERAL_REGS, orig=93, freq=3000, tfirst=129, tfreq=3000)...
	   Assign 0 to reload r129 (freq=3000)
	 Assigning to 130 (cl=GENERAL_REGS, orig=97, freq=3000, tfirst=130, tfreq=3000)...
	   Assign 3 to reload r130 (freq=3000)
	 Assigning to 132 (cl=GENERAL_REGS, orig=117, freq=3000, tfirst=132, tfreq=3000)...
	   Assign 0 to reload r132 (freq=3000)
	 Assigning to 133 (cl=GENERAL_REGS, orig=99, freq=3000, tfirst=133, tfreq=3000)...
	   Assign 0 to reload r133 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 72
changing reg in insn 58
changing reg in insn 43
changing reg in insn 16
changing reg in insn 12
changing reg in insn 8
changing reg in insn 5
changing reg in insn 5
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 40
changing reg in insn 43
changing reg in insn 41
changing reg in insn 43
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 58
changing reg in insn 55
changing reg in insn 60
changing reg in insn 62
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 32
changing reg in insn 33
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
deleting insn with uid = 75.
deleting insn with uid = 78.
deleting insn with uid = 80.
deleting insn with uid = 82.
deleting insn with uid = 85.
deleting insn with uid = 87.
starting the processing of deferred insns
ending the processing of deferred insns


insert_into_queues

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={34d,31u} r1={16d,15u} r2={2d,6u} r3={4d,6u,2e} r7={1d,20u} r17={12d,1u} 
;;    total ref usage 150{69d,79u,2e} in 64{64 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 72 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 72 3 2 2 (parallel [
            (set (reg:SI 2 cx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 72 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [orig:83 free_list.12_1 ] [83])
        (mem/f/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":204:21 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":204:21 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [102])
                (const_int 32 [0x20])) [1 bh_22(D)->b_next_free+0 S4 A32])
        (reg/f:SI 1 dx [orig:83 free_list.12_1 ] [83])) "fs/buffer.c":204:21 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [orig:84 free_list.13_2 ] [84])
        (mem/f/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":205:32 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 1 dx [orig:85 _3 ] [85])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:84 free_list.13_2 ] [84])
                (const_int 28 [0x1c])) [1 free_list.13_2->b_prev_free+0 S4 A32])) "fs/buffer.c":205:32 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":205:21 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [103])
                (const_int 28 [0x1c])) [1 bh_22(D)->b_prev_free+0 S4 A32])
        (reg/f:SI 1 dx [orig:85 _3 ] [85])) "fs/buffer.c":205:21 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 0 ax [orig:86 free_list.14_4 ] [86])
        (mem/f/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":206:14 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:86 free_list.14_4 ] [86])
                (const_int 28 [0x1c])) [1 free_list.14_4->b_prev_free+0 S4 A32])) "fs/buffer.c":206:14 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 1 dx [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":206:41 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:87 _5 ] [87])
                (const_int 32 [0x20])) [1 _5->b_next_free+0 S4 A32])
        (reg/f:SI 1 dx [104])) "fs/buffer.c":206:41 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 0 ax [orig:88 free_list.15_6 ] [88])
        (mem/f/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":207:14 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 1 dx [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":207:28 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:88 free_list.15_6 ] [88])
                (const_int 28 [0x1c])) [1 free_list.15_6->b_prev_free+0 S4 A32])
        (reg/f:SI 1 dx [105])) "fs/buffer.c":207:28 75 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":209:16 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 20 [0x14])) [1 bh_22(D)->b_prev+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":209:16 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":210:16 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 24 [0x18])) [1 bh_22(D)->b_next+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":210:16 75 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":211:12 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 8 [0x8])) [5 bh_22(D)->b_dev+0 S2 A32])) "fs/buffer.c":211:12 76 {*movhi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:89 _7 ] [89])
            (const_int 0 [0]))) "fs/buffer.c":211:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 26 25 31 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 70)
            (pc))) "fs/buffer.c":211:8 806 {*jcc}
     (nil)
 -> 70)
(note 31 26 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 3 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (plus:SI (reg/f:SI 0 ax [109])
                (const_int 8 [0x8])) [5 bh_22(D)->b_dev+0 S2 A32])) "fs/buffer.c":213:18 76 {*movhi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/buffer.c":213:18 144 {*zero_extendhisi2}
     (nil))
(insn 35 34 36 3 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 36 35 74 3 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (mem:SI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 4 [0x4])) [4 bh_22(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 74 36 37 3 (set (reg:SI 3 bx [orig:91 _9 ] [91])
        (reg:SI 1 dx [orig:91 _9 ] [91])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 37 74 38 3 (parallel [
            (set (reg:SI 3 bx [orig:91 _9 ] [91])
                (xor:SI (reg:SI 3 bx [orig:91 _9 ] [91])
                    (reg:SI 0 ax [orig:92 _10 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 521 {*xorsi_1}
     (nil))
(insn 38 37 76 3 (set (reg:SI 1 dx [112])
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 76 38 39 3 (set (reg:SI 0 ax [123])
        (reg:SI 3 bx [orig:93 _11 ] [93])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 39 76 77 3 (parallel [
            (set (reg:SI 1 dx [111])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 0 ax [123]))
                            (zero_extend:DI (reg:SI 1 dx [112])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [123]))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 436 {*umulsi3_highpart_1}
     (nil))
(insn 77 39 40 3 (set (reg:SI 0 ax [111])
        (reg:SI 1 dx [111])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 40 77 41 3 (parallel [
            (set (reg:SI 0 ax [111])
                (lshiftrt:SI (reg:SI 0 ax [111])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 3 bx [orig:93 _11 ] [93])
            (const_int 307 [0x133]))
        (nil)))
(insn 41 40 79 3 (parallel [
            (set (reg:SI 1 dx [113])
                (mult:SI (reg:SI 0 ax [orig:94 _12 ] [94])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 408 {*mulsi3_1}
     (nil))
(insn 79 41 42 3 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (reg:SI 3 bx [orig:93 _11 ] [93])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 42 79 43 3 (parallel [
            (set (reg:SI 0 ax [orig:93 _11 ] [93])
                (minus:SI (reg:SI 0 ax [orig:93 _11 ] [93])
                    (reg:SI 1 dx [113])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":213:18 282 {*subsi_1}
     (nil))
(insn 43 42 44 3 (set (reg/f:SI 1 dx [orig:95 _13 ] [95])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:94 _12 ] [94])
                        (const_int 4 [0x4]))
                    (reg:SI 2 cx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_12]+0 S4 A32])) "fs/buffer.c":213:18 75 {*movsi_internal}
     (nil))
(insn 44 43 45 3 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":213:16 75 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 24 [0x18])) [1 bh_22(D)->b_next+0 S4 A32])
        (reg/f:SI 1 dx [orig:95 _13 ] [95])) "fs/buffer.c":213:16 75 {*movsi_internal}
     (nil))
(insn 46 45 47 3 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 8 [0x8])) [5 bh_22(D)->b_dev+0 S2 A32])) "fs/buffer.c":214:5 76 {*movhi_internal}
     (nil))
(insn 48 47 49 3 (set (reg:SI 1 dx [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _14 ] [96]))) "fs/buffer.c":214:5 144 {*zero_extendhisi2}
     (nil))
(insn 49 48 50 3 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 50 49 81 3 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (mem:SI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 4 [0x4])) [4 bh_22(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 81 50 51 3 (set (reg:SI 3 bx [orig:97 _15 ] [97])
        (reg:SI 1 dx [orig:97 _15 ] [97])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 51 81 52 3 (parallel [
            (set (reg:SI 3 bx [orig:97 _15 ] [97])
                (xor:SI (reg:SI 3 bx [orig:97 _15 ] [97])
                    (reg:SI 0 ax [orig:98 _16 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 521 {*xorsi_1}
     (nil))
(insn 52 51 83 3 (set (reg:SI 1 dx [118])
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 83 52 53 3 (set (reg:SI 0 ax [124])
        (reg:SI 3 bx [orig:99 _17 ] [99])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 53 83 84 3 (parallel [
            (set (reg:SI 1 dx [117])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 0 ax [124]))
                            (zero_extend:DI (reg:SI 1 dx [118])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [124]))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 436 {*umulsi3_highpart_1}
     (nil))
(insn 84 53 54 3 (set (reg:SI 0 ax [117])
        (reg:SI 1 dx [117])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 54 84 55 3 (parallel [
            (set (reg:SI 0 ax [117])
                (lshiftrt:SI (reg:SI 0 ax [117])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 3 bx [orig:99 _17 ] [99])
            (const_int 307 [0x133]))
        (nil)))
(insn 55 54 86 3 (parallel [
            (set (reg:SI 1 dx [119])
                (mult:SI (reg:SI 0 ax [orig:100 _18 ] [100])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 408 {*mulsi3_1}
     (nil))
(insn 86 55 56 3 (set (reg:SI 0 ax [orig:99 _17 ] [99])
        (reg:SI 3 bx [orig:99 _17 ] [99])) "fs/buffer.c":214:5 75 {*movsi_internal}
     (nil))
(insn 56 86 57 3 (parallel [
            (set (reg:SI 0 ax [orig:99 _17 ] [99])
                (minus:SI (reg:SI 0 ax [orig:99 _17 ] [99])
                    (reg:SI 1 dx [119])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":214:5 282 {*subsi_1}
     (nil))
(insn 57 56 58 3 (set (reg/f:SI 1 dx [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":214:36 75 {*movsi_internal}
     (nil))
(insn 58 57 59 3 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:100 _18 ] [100])
                        (const_int 4 [0x4]))
                    (reg:SI 2 cx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_18]+0 S4 A32])
        (reg/f:SI 1 dx [120])) "fs/buffer.c":214:36 75 {*movsi_internal}
     (nil))
(insn 59 58 60 3 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":215:7 75 {*movsi_internal}
     (nil))
(insn 60 59 61 3 (set (reg/f:SI 0 ax [orig:101 _19 ] [101])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 24 [0x18])) [1 bh_22(D)->b_next+0 S4 A32])) "fs/buffer.c":215:7 75 {*movsi_internal}
     (nil))
(insn 61 60 62 3 (set (reg/f:SI 1 dx [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":215:24 75 {*movsi_internal}
     (nil))
(insn 62 61 67 3 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:101 _19 ] [101])
                (const_int 20 [0x14])) [1 _19->b_prev+0 S4 A32])
        (reg/f:SI 1 dx [122])) "fs/buffer.c":215:24 75 {*movsi_internal}
     (nil))
(jump_insn 67 62 68 3 (set (pc)
        (label_ref 65)) 807 {jump}
     (nil)
 -> 65)
(barrier 68 67 70)
(code_label 70 68 69 5 46 (nil) [1 uses])
(note 69 70 71 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 71 69 65 5 (const_int 0 [0]) "fs/buffer.c":212:9 843 {nop}
     (nil))
(code_label 65 71 66 4 43 (nil) [1 uses])
(note 66 65 73 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 73 66 0 NOTE_INSN_DELETED)

;; Function remove_from_queues (remove_from_queues, funcdef_no=13, decl_uid=1455, cgraph_uid=14, symbol_order=19)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*xorsi_1}
      Creating newreg=137 from oldreg=90, assigning class GENERAL_REGS to r137
   34: {r137:SI=r137:SI^r91:SI;clobber flags:CC;}
      REG_DEAD r91:SI
      REG_DEAD r90:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  107: r137:SI=r90:SI
    Inserting insn reload after:
  108: r92:SI=r137:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 36:  (0) =d  (1) %a  (2) rm  (3) =1 {*umulsi3_highpart_1}
      Creating newreg=138 from oldreg=134, assigning class AREG to r138
   36: {r117:SI=trunc(zero_extend(r138:SI)*zero_extend(r118:SI) 0>>0x20);clobber r138:SI;clobber flags:CC;}
      REG_DEAD r118:SI
      REG_UNUSED r134:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  109: r138:SI=r92:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 37:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=139 from oldreg=117, assigning class GENERAL_REGS to r139
   37: {r139:SI=r139:SI 0>>0x8;clobber flags:CC;}
      REG_DEAD r117:SI
      REG_UNUSED flags:CC
      REG_EQUAL udiv(r92:SI,0x133)
    Inserting insn reload before:
  110: r139:SI=r117:SI
    Inserting insn reload after:
  111: r93:SI=r139:SI

            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 38:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 39:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=140 from oldreg=92, assigning class GENERAL_REGS to r140
   39: {r140:SI=r140:SI-r119:SI;clobber flags:CC;}
      REG_DEAD r119:SI
      REG_DEAD r92:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  112: r140:SI=r92:SI
    Inserting insn reload after:
  113: r93:SI=r140:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 45:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*xorsi_1}
      Creating newreg=141 from oldreg=96, assigning class GENERAL_REGS to r141
   49: {r141:SI=r141:SI^r97:SI;clobber flags:CC;}
      REG_DEAD r97:SI
      REG_DEAD r96:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  114: r141:SI=r96:SI
    Inserting insn reload after:
  115: r98:SI=r141:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 51:  (0) =d  (1) %a  (2) rm  (3) =1 {*umulsi3_highpart_1}
      Creating newreg=142 from oldreg=135, assigning class AREG to r142
   51: {r122:SI=trunc(zero_extend(r142:SI)*zero_extend(r123:SI) 0>>0x20);clobber r142:SI;clobber flags:CC;}
      REG_DEAD r123:SI
      REG_UNUSED r135:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  116: r142:SI=r98:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 52:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=143 from oldreg=122, assigning class GENERAL_REGS to r143
   52: {r143:SI=r143:SI 0>>0x8;clobber flags:CC;}
      REG_DEAD r122:SI
      REG_UNUSED flags:CC
      REG_EQUAL udiv(r98:SI,0x133)
    Inserting insn reload before:
  117: r143:SI=r122:SI
    Inserting insn reload after:
  118: r99:SI=r143:SI

            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 53:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 54:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=144 from oldreg=98, assigning class GENERAL_REGS to r144
   54: {r144:SI=r144:SI-r124:SI;clobber flags:CC;}
      REG_DEAD r124:SI
      REG_DEAD r98:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  119: r144:SI=r98:SI
    Inserting insn reload after:
  120: r99:SI=r144:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11 12
EBB 14
EBB 13

********** Pseudo live ranges #1: **********

  BB 13
  BB 14
   Insn 104: point = 0, n_alt = -1
  BB 12
   Insn 95: point = 0, n_alt = 1
   Insn 94: point = 1, n_alt = 0
   Insn 93: point = 3, n_alt = 0
  BB 11
   Insn 91: point = 5, n_alt = -1
   Insn 90: point = 5, n_alt = 0
   Insn 89: point = 6, n_alt = 0
   Insn 88: point = 7, n_alt = 1
   Insn 87: point = 8, n_alt = 0
   Insn 86: point = 10, n_alt = 0
   Insn 85: point = 11, n_alt = 0
   Insn 84: point = 13, n_alt = 0
   Insn 83: point = 14, n_alt = 1
   Insn 82: point = 15, n_alt = 0
   Insn 81: point = 17, n_alt = 0
   Insn 80: point = 18, n_alt = 0
   Insn 79: point = 20, n_alt = 0
  BB 10
   Insn 76: point = 22, n_alt = 0
   Insn 75: point = 22, n_alt = 0
   Insn 74: point = 22, n_alt = -2
   Insn 73: point = 22, n_alt = 0
   Insn 72: point = 23, n_alt = 0
   Insn 71: point = 24, n_alt = 0
  BB 9
   Insn 68: point = 25, n_alt = -1
   Insn 67: point = 25, n_alt = 0
   Insn 66: point = 26, n_alt = 0
   Insn 65: point = 28, n_alt = 0
  BB 8
   Insn 63: point = 30, n_alt = -1
   Insn 62: point = 30, n_alt = 0
   Insn 61: point = 31, n_alt = 0
   Insn 60: point = 33, n_alt = 0
  BB 7
   Insn 57: point = 35, n_alt = 1
   Insn 56: point = 36, n_alt = 0
   Insn 55: point = 38, n_alt = 0
   Insn 120: point = 39, n_alt = -2
	Hard reg 0 is preferable by r144 with profit 1000
   Insn 54: point = 41, n_alt = 0
   Insn 119: point = 43, n_alt = -2
	Hard reg 0 is preferable by r144 with profit 1000
	Hard reg 2 is preferable by r144 with profit 1000
   Insn 53: point = 45, n_alt = 1
   Insn 118: point = 47, n_alt = -2
	Hard reg 0 is preferable by r143 with profit 1000
   Insn 52: point = 49, n_alt = 0
   Insn 117: point = 50, n_alt = -2
	Hard reg 0 is preferable by r143 with profit 1000
	Hard reg 1 is preferable by r143 with profit 1000
   Insn 51: point = 52, n_alt = 0
   Insn 116: point = 54, n_alt = -2
	Hard reg 2 is preferable by r142 with profit 1000
   Insn 50: point = 55, n_alt = 0
   Insn 115: point = 56, n_alt = -2
	Hard reg 2 is preferable by r141 with profit 1000
   Insn 49: point = 58, n_alt = 0
   Insn 114: point = 60, n_alt = -2
	Hard reg 2 is preferable by r141 with profit 1000
	Hard reg 1 is preferable by r141 with profit 1000
   Insn 48: point = 62, n_alt = 0
   Insn 47: point = 64, n_alt = 0
   Insn 46: point = 65, n_alt = 0
   Insn 45: point = 67, n_alt = 2
   Insn 44: point = 69, n_alt = 0
  BB 6
   Insn 42: point = 71, n_alt = -1
   Insn 41: point = 71, n_alt = 0
   Insn 40: point = 72, n_alt = 0
   Insn 113: point = 74, n_alt = -2
	Hard reg 0 is preferable by r140 with profit 1000
   Insn 39: point = 76, n_alt = 0
   Insn 112: point = 78, n_alt = -2
	Hard reg 0 is preferable by r140 with profit 1000
	Hard reg 2 is preferable by r140 with profit 1000
   Insn 38: point = 80, n_alt = 1
   Insn 111: point = 82, n_alt = -2
	Hard reg 0 is preferable by r139 with profit 1000
   Insn 37: point = 84, n_alt = 0
   Insn 110: point = 85, n_alt = -2
	Hard reg 0 is preferable by r139 with profit 1000
	Hard reg 1 is preferable by r139 with profit 1000
   Insn 36: point = 87, n_alt = 0
   Insn 109: point = 89, n_alt = -2
	Hard reg 2 is preferable by r138 with profit 1000
   Insn 35: point = 90, n_alt = 0
   Insn 108: point = 91, n_alt = -2
	Hard reg 2 is preferable by r137 with profit 1000
   Insn 34: point = 93, n_alt = 0
   Insn 107: point = 95, n_alt = -2
	Hard reg 2 is preferable by r137 with profit 1000
	Hard reg 1 is preferable by r137 with profit 1000
   Insn 33: point = 97, n_alt = 0
   Insn 32: point = 99, n_alt = 0
   Insn 31: point = 100, n_alt = 0
   Insn 30: point = 102, n_alt = 2
   Insn 29: point = 104, n_alt = 0
  BB 5
   Insn 26: point = 106, n_alt = 1
   Insn 25: point = 107, n_alt = 0
   Insn 24: point = 109, n_alt = 0
   Insn 23: point = 110, n_alt = 0
   Insn 22: point = 112, n_alt = 0
  BB 4
   Insn 20: point = 114, n_alt = -1
   Insn 19: point = 114, n_alt = 0
   Insn 18: point = 115, n_alt = 0
   Insn 17: point = 117, n_alt = 0
  BB 3
   Insn 14: point = 119, n_alt = 1
   Insn 13: point = 120, n_alt = 0
   Insn 12: point = 122, n_alt = 0
   Insn 11: point = 123, n_alt = 0
   Insn 10: point = 125, n_alt = 0
  BB 2
   Insn 8: point = 127, n_alt = -1
   Insn 7: point = 127, n_alt = 0
   Insn 6: point = 128, n_alt = 0
   Insn 5: point = 130, n_alt = 0
   Insn 105: point = 131, n_alt = 0
 r82: [0..131]
 r83: [127..128]
 r84: [119..123]
 r85: [119..120]
 r86: [114..115]
 r87: [106..110]
 r88: [106..107]
 r89: [101..102]
 r90: [96..100]
 r91: [94..97]
 r92: [79..91]
 r93: [81..82] [73..74]
 r94: [71..72]
 r95: [66..67]
 r96: [61..65]
 r97: [59..62]
 r98: [44..56]
 r99: [46..47] [35..39]
 r100: [35..36]
 r101: [30..31]
 r102: [25..26]
 r103: [14..18]
 r104: [14..15]
 r105: [7..11]
 r106: [7..8]
 r107: [5..6]
 r108: [0..1]
 r109: [129..130]
 r110: [124..125]
 r111: [121..122]
 r112: [116..117]
 r113: [111..112]
 r114: [108..109]
 r115: [103..104]
 r116: [98..99]
 r117: [86..87]
 r118: [88..90]
 r119: [77..80]
 r120: [68..69]
 r121: [63..64]
 r122: [51..52]
 r123: [53..55]
 r124: [42..45]
 r125: [37..38]
 r126: [32..33]
 r127: [27..28]
 r128: [22..23]
 r129: [19..20]
 r130: [16..17]
 r131: [12..13]
 r132: [9..10]
 r133: [2..3]
 r137: [92..95]
 r138: [87..89]
 r139: [83..85]
 r140: [75..78]
 r141: [57..60]
 r142: [52..54]
 r143: [48..50]
 r144: [40..43]
Compressing live ranges: from 132 to 100 - 75%
Ranges after the compression:
 r82: [0..99]
 r83: [96..97]
 r84: [90..93]
 r85: [90..91]
 r86: [86..87]
 r87: [80..83]
 r88: [80..81]
 r89: [76..77]
 r90: [72..75]
 r91: [70..73]
 r92: [60..69]
 r93: [62..63] [56..57]
 r94: [54..55]
 r95: [50..51]
 r96: [46..49]
 r97: [44..47]
 r98: [34..43]
 r99: [36..37] [28..31]
 r100: [28..29]
 r101: [24..25]
 r102: [20..21]
 r103: [12..15]
 r104: [12..13]
 r105: [6..9]
 r106: [6..7]
 r107: [4..5]
 r108: [0..1]
 r109: [98..99]
 r110: [94..95]
 r111: [92..93]
 r112: [88..89]
 r113: [84..85]
 r114: [82..83]
 r115: [78..79]
 r116: [74..75]
 r117: [66..67]
 r118: [68..69]
 r119: [58..61]
 r120: [52..53]
 r121: [48..49]
 r122: [40..41]
 r123: [42..43]
 r124: [32..35]
 r125: [30..31]
 r126: [26..27]
 r127: [22..23]
 r128: [18..19]
 r129: [16..17]
 r130: [14..15]
 r131: [10..11]
 r132: [8..9]
 r133: [2..3]
 r137: [70..71]
 r138: [67..69]
 r139: [64..65]
 r140: [58..59]
 r141: [44..45]
 r142: [41..43]
 r143: [38..39]
 r144: [32..33]

********** Assignment #1: **********

	 Assigning to 138 (cl=AREG, orig=134, freq=2000, tfirst=138, tfreq=2000)...
	   Assign 0 to reload r138 (freq=2000)
	 Assigning to 142 (cl=AREG, orig=135, freq=2000, tfirst=142, tfreq=2000)...
	   Assign 0 to reload r142 (freq=2000)
	 Assigning to 137 (cl=GENERAL_REGS, orig=90, freq=3000, tfirst=137, tfreq=3000)...
	   Assign 2 to reload r137 (freq=3000)
	 Assigning to 139 (cl=GENERAL_REGS, orig=117, freq=3000, tfirst=139, tfreq=3000)...
	   Assign 0 to reload r139 (freq=3000)
	 Assigning to 140 (cl=GENERAL_REGS, orig=92, freq=3000, tfirst=140, tfreq=3000)...
	   Assign 0 to reload r140 (freq=3000)
	 Assigning to 141 (cl=GENERAL_REGS, orig=96, freq=3000, tfirst=141, tfreq=3000)...
	   Assign 2 to reload r141 (freq=3000)
	 Assigning to 143 (cl=GENERAL_REGS, orig=122, freq=3000, tfirst=143, tfreq=3000)...
	   Assign 0 to reload r143 (freq=3000)
	 Assigning to 144 (cl=GENERAL_REGS, orig=98, freq=3000, tfirst=144, tfreq=3000)...
	   Assign 0 to reload r144 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 105
changing reg in insn 95
changing reg in insn 89
changing reg in insn 74
changing reg in insn 72
changing reg in insn 57
changing reg in insn 40
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 14
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 37
changing reg in insn 40
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 52
changing reg in insn 57
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 61
changing reg in insn 62
changing reg in insn 66
changing reg in insn 67
changing reg in insn 80
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 85
changing reg in insn 88
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 94
changing reg in insn 95
changing reg in insn 5
changing reg in insn 6
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 30
changing reg in insn 32
changing reg in insn 33
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 44
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 66
changing reg in insn 72
changing reg in insn 73
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 93
changing reg in insn 94
deleting insn with uid = 108.
deleting insn with uid = 111.
deleting insn with uid = 113.
deleting insn with uid = 115.
deleting insn with uid = 118.
deleting insn with uid = 120.
deleting insn with uid = 74.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 75.


remove_from_queues

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={43d,39u} r1={20d,18u} r2={6d,6u,2e} r3={1d,6u} r7={4d,40u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={20d,6u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 276{159d,115u,2e} in 85{84 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 105 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 105 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 105 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":221:11 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [109])
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":221:11 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/buffer.c":221:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "fs/buffer.c":221:8 806 {*jcc}
     (nil)
 -> 15)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":222:11 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":222:11 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 1 dx [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":222:32 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 1 dx [orig:85 _3 ] [85])
        (mem/f:SI (plus:SI (reg/f:SI 1 dx [111])
                (const_int 20 [0x14])) [1 bh_33(D)->b_prev+0 S4 A32])) "fs/buffer.c":222:32 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (const_int 20 [0x14])) [1 _2->b_prev+0 S4 A32])
        (reg/f:SI 1 dx [orig:85 _3 ] [85])) "fs/buffer.c":222:28 75 {*movsi_internal}
     (nil))
(code_label 15 14 16 4 48 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":223:11 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 20 [0x14])) [1 bh_33(D)->b_prev+0 S4 A32])) "fs/buffer.c":223:11 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:86 _4 ] [86])
            (const_int 0 [0]))) "fs/buffer.c":223:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/buffer.c":223:8 806 {*jcc}
     (nil)
 -> 27)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":224:11 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 20 [0x14])) [1 bh_33(D)->b_prev+0 S4 A32])) "fs/buffer.c":224:11 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 1 dx [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":224:32 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 1 dx [orig:88 _6 ] [88])
        (mem/f:SI (plus:SI (reg/f:SI 1 dx [114])
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":224:32 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:87 _5 ] [87])
                (const_int 24 [0x18])) [1 _5->b_next+0 S4 A32])
        (reg/f:SI 1 dx [orig:88 _6 ] [88])) "fs/buffer.c":224:28 75 {*movsi_internal}
     (nil))
(code_label 27 26 28 6 49 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 8 [0x8])) [5 bh_33(D)->b_dev+0 S2 A32])) "fs/buffer.c":225:9 76 {*movhi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:SI 1 dx [orig:90 _8 ] [90])
        (zero_extend:SI (reg:HI 0 ax [orig:89 _7 ] [89]))) "fs/buffer.c":225:9 144 {*zero_extendhisi2}
     (nil))
(insn 32 31 33 6 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 33 32 107 6 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (mem:SI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 4 [0x4])) [4 bh_33(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 107 33 34 6 (set (reg:SI 2 cx [orig:90 _8 ] [90])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 34 107 35 6 (parallel [
            (set (reg:SI 2 cx [orig:90 _8 ] [90])
                (xor:SI (reg:SI 2 cx [orig:90 _8 ] [90])
                    (reg:SI 0 ax [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 521 {*xorsi_1}
     (nil))
(insn 35 34 109 6 (set (reg:SI 1 dx [118])
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 109 35 36 6 (set (reg:SI 0 ax [134])
        (reg:SI 2 cx [orig:92 _10 ] [92])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 36 109 110 6 (parallel [
            (set (reg:SI 1 dx [117])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 0 ax [134]))
                            (zero_extend:DI (reg:SI 1 dx [118])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [134]))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 436 {*umulsi3_highpart_1}
     (nil))
(insn 110 36 37 6 (set (reg:SI 0 ax [117])
        (reg:SI 1 dx [117])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 37 110 38 6 (parallel [
            (set (reg:SI 0 ax [117])
                (lshiftrt:SI (reg:SI 0 ax [117])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 2 cx [orig:92 _10 ] [92])
            (const_int 307 [0x133]))
        (nil)))
(insn 38 37 112 6 (parallel [
            (set (reg:SI 1 dx [119])
                (mult:SI (reg:SI 0 ax [orig:93 _11 ] [93])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 408 {*mulsi3_1}
     (nil))
(insn 112 38 39 6 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (reg:SI 2 cx [orig:92 _10 ] [92])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 39 112 40 6 (parallel [
            (set (reg:SI 0 ax [orig:92 _10 ] [92])
                (minus:SI (reg:SI 0 ax [orig:92 _10 ] [92])
                    (reg:SI 1 dx [119])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":225:9 282 {*subsi_1}
     (nil))
(insn 40 39 41 6 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:93 _11 ] [93])
                        (const_int 4 [0x4]))
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_11]+0 S4 A32])) "fs/buffer.c":225:9 75 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [1 bh+0 S4 A32])
            (reg/f:SI 0 ax [orig:94 _12 ] [94]))) "fs/buffer.c":225:8 11 {*cmpsi_1}
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/buffer.c":225:8 806 {*jcc}
     (nil)
 -> 58)
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 8 [0x8])) [5 bh_33(D)->b_dev+0 S2 A32])) "fs/buffer.c":226:9 76 {*movhi_internal}
     (nil))
(insn 46 45 47 7 (set (reg:SI 1 dx [orig:96 _14 ] [96])
        (zero_extend:SI (reg:HI 0 ax [orig:95 _13 ] [95]))) "fs/buffer.c":226:9 144 {*zero_extendhisi2}
     (nil))
(insn 47 46 48 7 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 48 47 114 7 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (mem:SI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 4 [0x4])) [4 bh_33(D)->b_blocknr+0 S4 A32])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 114 48 49 7 (set (reg:SI 2 cx [orig:96 _14 ] [96])
        (reg:SI 1 dx [orig:96 _14 ] [96])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 49 114 50 7 (parallel [
            (set (reg:SI 2 cx [orig:96 _14 ] [96])
                (xor:SI (reg:SI 2 cx [orig:96 _14 ] [96])
                    (reg:SI 0 ax [orig:97 _15 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 521 {*xorsi_1}
     (nil))
(insn 50 49 116 7 (set (reg:SI 1 dx [123])
        (const_int -713496195 [0xffffffffd578e97d])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 116 50 51 7 (set (reg:SI 0 ax [135])
        (reg:SI 2 cx [orig:98 _16 ] [98])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 51 116 117 7 (parallel [
            (set (reg:SI 1 dx [122])
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 0 ax [135]))
                            (zero_extend:DI (reg:SI 1 dx [123])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [135]))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 436 {*umulsi3_highpart_1}
     (nil))
(insn 117 51 52 7 (set (reg:SI 0 ax [122])
        (reg:SI 1 dx [122])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 52 117 53 7 (parallel [
            (set (reg:SI 0 ax [122])
                (lshiftrt:SI (reg:SI 0 ax [122])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 2 cx [orig:98 _16 ] [98])
            (const_int 307 [0x133]))
        (nil)))
(insn 53 52 119 7 (parallel [
            (set (reg:SI 1 dx [124])
                (mult:SI (reg:SI 0 ax [orig:99 _17 ] [99])
                    (const_int 307 [0x133])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 408 {*mulsi3_1}
     (nil))
(insn 119 53 54 7 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (reg:SI 2 cx [orig:98 _16 ] [98])) "fs/buffer.c":226:9 75 {*movsi_internal}
     (nil))
(insn 54 119 55 7 (parallel [
            (set (reg:SI 0 ax [orig:98 _16 ] [98])
                (minus:SI (reg:SI 0 ax [orig:98 _16 ] [98])
                    (reg:SI 1 dx [124])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":226:9 282 {*subsi_1}
     (nil))
(insn 55 54 56 7 (set (reg/f:SI 1 dx [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":226:44 75 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (reg/f:SI 1 dx [orig:100 _18 ] [100])
        (mem/f:SI (plus:SI (reg/f:SI 1 dx [125])
                (const_int 24 [0x18])) [1 bh_33(D)->b_next+0 S4 A32])) "fs/buffer.c":226:44 75 {*movsi_internal}
     (nil))
(insn 57 56 58 7 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [orig:99 _17 ] [99])
                        (const_int 4 [0x4]))
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("hash_table") [flags 0x2]  <var_decl 0x752d7c11cbd0 hash_table>)
                        ] UNSPEC_GOTOFF))) [1 hash_table[_17]+0 S4 A32])
        (reg/f:SI 1 dx [orig:100 _18 ] [100])) "fs/buffer.c":226:40 75 {*movsi_internal}
     (nil))
(code_label 58 57 59 8 50 (nil) [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":228:13 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg/f:SI 0 ax [orig:101 _19 ] [101])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [126])
                (const_int 28 [0x1c])) [1 bh_33(D)->b_prev_free+0 S4 A32])) "fs/buffer.c":228:13 75 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:101 _19 ] [101])
            (const_int 0 [0]))) "fs/buffer.c":228:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 63 62 64 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/buffer.c":228:8 806 {*jcc}
     (nil)
 -> 69)
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":228:35 75 {*movsi_internal}
     (nil))
(insn 66 65 67 9 (set (reg/f:SI 0 ax [orig:102 _20 ] [102])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":228:35 75 {*movsi_internal}
     (nil))
(insn 67 66 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:102 _20 ] [102])
            (const_int 0 [0]))) "fs/buffer.c":228:28 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "fs/buffer.c":228:28 806 {*jcc}
     (nil)
 -> 77)
(code_label 69 68 70 10 51 (nil) [1 uses])
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":229:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 72 71 73 10 (set (reg/f:SI 0 ax [128])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x752d7c1b4480 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":229:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x752d7c1b4480 *.LC2>)
        (nil)))
(insn 73 72 75 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 0 ax [128])) "fs/buffer.c":229:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 75 73 76 10 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":229:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 76 75 77 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":229:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 77 76 78 11 52 (nil) [1 uses])
(note 78 77 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":230:7 75 {*movsi_internal}
     (nil))
(insn 80 79 81 11 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [129])
                (const_int 28 [0x1c])) [1 bh_33(D)->b_prev_free+0 S4 A32])) "fs/buffer.c":230:7 75 {*movsi_internal}
     (nil))
(insn 81 80 82 11 (set (reg/f:SI 1 dx [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":230:38 75 {*movsi_internal}
     (nil))
(insn 82 81 83 11 (set (reg/f:SI 1 dx [orig:104 _22 ] [104])
        (mem/f:SI (plus:SI (reg/f:SI 1 dx [130])
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":230:38 75 {*movsi_internal}
     (nil))
(insn 83 82 84 11 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:103 _21 ] [103])
                (const_int 32 [0x20])) [1 _21->b_next_free+0 S4 A32])
        (reg/f:SI 1 dx [orig:104 _22 ] [104])) "fs/buffer.c":230:34 75 {*movsi_internal}
     (nil))
(insn 84 83 85 11 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":231:7 75 {*movsi_internal}
     (nil))
(insn 85 84 86 11 (set (reg/f:SI 0 ax [orig:105 _23 ] [105])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":231:7 75 {*movsi_internal}
     (nil))
(insn 86 85 87 11 (set (reg/f:SI 1 dx [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":231:38 75 {*movsi_internal}
     (nil))
(insn 87 86 88 11 (set (reg/f:SI 1 dx [orig:106 _24 ] [106])
        (mem/f:SI (plus:SI (reg/f:SI 1 dx [132])
                (const_int 28 [0x1c])) [1 bh_33(D)->b_prev_free+0 S4 A32])) "fs/buffer.c":231:38 75 {*movsi_internal}
     (nil))
(insn 88 87 89 11 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:105 _23 ] [105])
                (const_int 28 [0x1c])) [1 _23->b_prev_free+0 S4 A32])
        (reg/f:SI 1 dx [orig:106 _24 ] [106])) "fs/buffer.c":231:34 75 {*movsi_internal}
     (nil))
(insn 89 88 90 11 (set (reg/f:SI 0 ax [orig:107 free_list.11_25 ] [107])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":232:19 75 {*movsi_internal}
     (nil))
(insn 90 89 91 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [1 bh+0 S4 A32])
            (reg/f:SI 0 ax [orig:107 free_list.11_25 ] [107]))) "fs/buffer.c":232:8 11 {*cmpsi_1}
     (nil))
(jump_insn 91 90 92 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 103)
            (pc))) "fs/buffer.c":232:8 806 {*jcc}
     (nil)
 -> 103)
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":233:23 75 {*movsi_internal}
     (nil))
(insn 94 93 95 12 (set (reg/f:SI 0 ax [orig:108 _26 ] [108])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [133])
                (const_int 32 [0x20])) [1 bh_33(D)->b_next_free+0 S4 A32])) "fs/buffer.c":233:23 75 {*movsi_internal}
     (nil))
(insn 95 94 103 12 (set (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])
        (reg/f:SI 0 ax [orig:108 _26 ] [108])) "fs/buffer.c":233:19 75 {*movsi_internal}
     (nil))
(code_label 103 95 102 14 54 (nil) [1 uses])
(note 102 103 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 102 98 14 (const_int 0 [0]) "fs/buffer.c":234:1 843 {nop}
     (nil))
(code_label 98 104 99 13 47 (nil) [0 uses])
(note 99 98 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 106 99 0 NOTE_INSN_DELETED)

;; Function getblk (getblk, funcdef_no=14, decl_uid=1163, cgraph_uid=15, symbol_order=20)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 37:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 45:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 49:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 51
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 59:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 63:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 65
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 85:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 95:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 100:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 112:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 114:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 117:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 118:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 121:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 123:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 132:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 137:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 141:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 151:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 153:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 155:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 156:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 159:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 167:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 170:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7 8
EBB 9 23
EBB 24
EBB 10 25
EBB 26
EBB 11 12
EBB 13 14
EBB 15
EBB 16 17
EBB 18 19 20
EBB 21
EBB 22

********** Pseudo live ranges #1: **********

  BB 22
   Insn 179: point = 0, n_alt = -1
   Insn 178: point = 0, n_alt = -2
   Insn 174: point = 1, n_alt = -2
  BB 4
   Insn 181: point = 4, n_alt = -1
   Insn 16: point = 4, n_alt = 0
  BB 21
   Insn 171: point = 5, n_alt = 0
   Insn 170: point = 6, n_alt = 0
   Insn 169: point = 6, n_alt = 0
   Insn 168: point = 6, n_alt = 0
   Insn 167: point = 6, n_alt = 0
   Insn 166: point = 6, n_alt = 1
   Insn 165: point = 7, n_alt = 0
   Insn 164: point = 8, n_alt = 0
   Insn 163: point = 9, n_alt = 3
   Insn 162: point = 10, n_alt = 0
   Insn 161: point = 11, n_alt = 0
   Insn 160: point = 13, n_alt = 0
   Insn 159: point = 14, n_alt = 0
   Insn 158: point = 14, n_alt = 0
   Insn 157: point = 14, n_alt = 0
   Insn 156: point = 14, n_alt = 0
   Insn 155: point = 14, n_alt = 8
   Insn 154: point = 15, n_alt = 0
   Insn 153: point = 16, n_alt = 8
   Insn 152: point = 17, n_alt = 0
   Insn 151: point = 18, n_alt = 8
   Insn 150: point = 19, n_alt = 0
  BB 19
   Insn 144: point = 20, n_alt = -1
   Insn 143: point = 20, n_alt = 0
   Insn 142: point = 21, n_alt = -2
   Insn 141: point = 22, n_alt = 0
   Insn 140: point = 22, n_alt = 0
   Insn 139: point = 22, n_alt = 0
   Insn 138: point = 22, n_alt = 0
   Insn 137: point = 22, n_alt = 0
  BB 18
   Insn 135: point = 23, n_alt = -1
   Insn 134: point = 23, n_alt = 0
   Insn 132: point = 24, n_alt = 4
   Insn 131: point = 26, n_alt = 0
  BB 15
   Insn 187: point = 28, n_alt = -1
  BB 13
   Insn 102: point = 29, n_alt = -1
   Insn 101: point = 29, n_alt = 0
   Insn 100: point = 30, n_alt = 4
   Insn 99: point = 32, n_alt = 0
   Insn 98: point = 33, n_alt = 0
   Insn 97: point = 33, n_alt = 0
   Insn 96: point = 33, n_alt = 0
   Insn 95: point = 33, n_alt = 0
  BB 11
   Insn 83: point = 34, n_alt = -1
   Insn 82: point = 34, n_alt = 1
  BB 25
   Insn 200: point = 35, n_alt = -1
  BB 26
   Insn 204: point = 36, n_alt = -1
  BB 9
   Insn 67: point = 37, n_alt = -1
   Insn 66: point = 37, n_alt = 0
   Insn 65: point = 38, n_alt = 0
   Insn 64: point = 40, n_alt = 0
   Insn 63: point = 42, n_alt = 4
   Insn 62: point = 44, n_alt = 0
   Insn 61: point = 45, n_alt = 1
   Insn 60: point = 47, n_alt = 0
   Insn 59: point = 49, n_alt = 4
   Insn 58: point = 51, n_alt = 0
   Insn 57: point = 52, n_alt = 1
   Insn 56: point = 53, n_alt = 0
  BB 7
   Insn 34: point = 55, n_alt = -1
   Insn 33: point = 55, n_alt = 1
  BB 6
   Insn 27: point = 56, n_alt = -1
   Insn 26: point = 56, n_alt = 0
   Insn 25: point = 57, n_alt = 4
   Insn 24: point = 59, n_alt = 0
  BB 10
   Insn 79: point = 61, n_alt = -1
   Insn 78: point = 61, n_alt = 0
   Insn 76: point = 62, n_alt = 0
   Insn 75: point = 63, n_alt = 1
   Insn 74: point = 64, n_alt = 0
   Insn 73: point = 66, n_alt = 0
  BB 23
   Insn 194: point = 68, n_alt = -1
  BB 8
   Insn 53: point = 69, n_alt = -1
   Insn 52: point = 69, n_alt = 0
   Insn 51: point = 70, n_alt = 0
   Insn 50: point = 72, n_alt = 0
   Insn 49: point = 74, n_alt = 4
   Insn 48: point = 76, n_alt = 0
   Insn 47: point = 77, n_alt = 1
   Insn 46: point = 79, n_alt = 0
   Insn 45: point = 81, n_alt = 4
   Insn 44: point = 83, n_alt = 0
   Insn 43: point = 84, n_alt = 0
   Insn 42: point = 86, n_alt = 0
   Insn 41: point = 88, n_alt = 4
   Insn 40: point = 90, n_alt = 0
   Insn 39: point = 91, n_alt = 1
   Insn 38: point = 93, n_alt = 0
   Insn 37: point = 95, n_alt = 4
   Insn 36: point = 97, n_alt = 0
  BB 24
   Insn 198: point = 99, n_alt = -1
  BB 5
   Insn 22: point = 100, n_alt = 1
   Insn 21: point = 101, n_alt = 0
  BB 3
   Insn 14: point = 103, n_alt = -1
   Insn 13: point = 103, n_alt = 1
   Insn 12: point = 103, n_alt = 1
   Insn 11: point = 104, n_alt = -2
   Insn 10: point = 105, n_alt = 0
   Insn 9: point = 105, n_alt = 0
   Insn 8: point = 105, n_alt = 0
   Insn 7: point = 105, n_alt = 0
   Insn 6: point = 105, n_alt = 0
  BB 20
   Insn 191: point = 106, n_alt = -1
  BB 14
   Insn 185: point = 107, n_alt = -1
  BB 12
   Insn 183: point = 108, n_alt = -1
   Insn 90: point = 108, n_alt = 0
   Insn 89: point = 108, n_alt = 0
   Insn 88: point = 108, n_alt = -2
   Insn 87: point = 108, n_alt = 0
   Insn 86: point = 109, n_alt = 0
   Insn 85: point = 110, n_alt = 0
  BB 2
   Insn 205: point = 111, n_alt = 0
  BB 17
   Insn 189: point = 112, n_alt = -1
  BB 16
   Insn 125: point = 113, n_alt = -1
   Insn 124: point = 113, n_alt = 0
   Insn 123: point = 114, n_alt = 4
   Insn 122: point = 116, n_alt = 0
   Insn 121: point = 117, n_alt = 0
   Insn 120: point = 117, n_alt = 0
   Insn 119: point = 117, n_alt = 0
   Insn 118: point = 117, n_alt = 0
   Insn 117: point = 117, n_alt = 0
   Insn 116: point = 117, n_alt = 0
   Insn 115: point = 117, n_alt = 0
   Insn 114: point = 118, n_alt = 0
   Insn 113: point = 118, n_alt = 0
   Insn 112: point = 120, n_alt = 2
   Insn 111: point = 122, n_alt = 0
 r82: [20..123]
 r83: [56..57]
 r84: [94..95]
 r85: [92..93]
 r86: [85..91]
 r87: [87..88]
 r88: [85..86]
 r89: [69..84]
 r90: [80..81]
 r91: [78..79]
 r92: [71..77]
 r93: [73..74]
 r94: [71..72]
 r95: [69..70]
 r96: [48..49]
 r97: [46..47]
 r98: [39..45]
 r99: [41..42]
 r100: [39..40]
 r101: [37..38]
 r102: [61..62]
 r103: [29..30]
 r104: [119..120]
 r105: [117..118]
 r106: [113..114]
 r107: [23..24]
 r108: [20..21]
 r109: [9..11]
 r110: [6..8]
 r111: [2..5]
 r112: [0..1]
 r113: [103..104]
 r114: [100..101]
 r115: [58..59]
 r116: [96..97]
 r117: [89..90]
 r118: [82..83]
 r119: [75..76]
 r120: [52..53]
 r121: [50..51]
 r122: [43..44]
 r123: [65..66]
 r124: [63..64]
 r125: [108..109]
 r126: [31..32]
 r127: [121..122]
 r128: [115..116]
 r129: [25..26]
 r130: [18..19]
 r131: [16..17]
 r132: [14..15]
 r133: [12..13]
 r134: [9..10]
 r135: [6..7]
Compressing live ranges: from 124 to 94 - 75%
Ranges after the compression:
 r82: [16..93]
 r83: [42..43]
 r84: [74..75]
 r85: [72..73]
 r86: [66..71]
 r87: [68..69]
 r88: [66..67]
 r89: [52..65]
 r90: [62..63]
 r91: [60..61]
 r92: [54..59]
 r93: [56..57]
 r94: [54..55]
 r95: [52..53]
 r96: [36..37]
 r97: [34..35]
 r98: [28..33]
 r99: [30..31]
 r100: [28..29]
 r101: [26..27]
 r102: [46..47]
 r103: [22..23]
 r104: [90..91]
 r105: [88..89]
 r106: [84..85]
 r107: [18..19]
 r108: [16..17]
 r109: [6..7]
 r110: [4..5]
 r111: [2..3]
 r112: [0..1]
 r113: [80..81]
 r114: [78..79]
 r115: [44..45]
 r116: [76..77]
 r117: [70..71]
 r118: [64..65]
 r119: [58..59]
 r120: [40..41]
 r121: [38..39]
 r122: [32..33]
 r123: [50..51]
 r124: [48..49]
 r125: [82..83]
 r126: [24..25]
 r127: [92..93]
 r128: [86..87]
 r129: [20..21]
 r130: [14..15]
 r131: [12..13]
 r132: [10..11]
 r133: [8..9]
 r134: [6..7]
 r135: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 205
changing reg in insn 88
changing reg in insn 86
changing reg in insn 76
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 43
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 52
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 76
changing reg in insn 78
changing reg in insn 100
changing reg in insn 101
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 115
changing reg in insn 123
changing reg in insn 124
changing reg in insn 132
changing reg in insn 134
changing reg in insn 142
changing reg in insn 143
changing reg in insn 161
changing reg in insn 163
changing reg in insn 164
changing reg in insn 166
changing reg in insn 171
changing reg in insn 16
changing reg in insn 174
changing reg in insn 174
changing reg in insn 178
changing reg in insn 11
changing reg in insn 12
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 36
changing reg in insn 37
changing reg in insn 40
changing reg in insn 41
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 62
changing reg in insn 63
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 75
changing reg in insn 86
changing reg in insn 87
changing reg in insn 99
changing reg in insn 100
changing reg in insn 111
changing reg in insn 112
changing reg in insn 122
changing reg in insn 123
changing reg in insn 131
changing reg in insn 132
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 160
changing reg in insn 162
changing reg in insn 163
changing reg in insn 165
changing reg in insn 166
deleting insn with uid = 11.
deleting insn with uid = 88.
deleting insn with uid = 142.
deleting insn with uid = 174.
deleting insn with uid = 178.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 116.
verify found no changes in insn with uid = 120.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 169.


getblk

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={54d,47u} r1={14d,5u} r2={10d,1u} r3={1d,4u} r7={27d,114u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={42d,11u} r18={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 850{668d,182u,0e} in 128{120 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 205 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 205 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 205 4 2 NOTE_INSN_FUNCTION_BEG)
(code_label 4 2 5 3 56 ("repeat") [4 uses])
(note 5 4 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 6 5 7 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":249:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 block+0 S4 A32])) "fs/buffer.c":249:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 dev+0 S4 A32])) "fs/buffer.c":249:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_hash_table") [flags 0x3]  <function_decl 0x752d7c0f2400 get_hash_table>) [0 get_hash_table S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":249:15 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":249:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 12 10 13 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])
        (reg:SI 0 ax [113])) "fs/buffer.c":249:15 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":249:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "fs/buffer.c":249:8 806 {*jcc}
     (nil)
 -> 19)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 181 4 (set (reg/f:SI 0 ax [orig:111 _33 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":250:16 75 {*movsi_internal}
     (nil))
(jump_insn 181 16 182 4 (set (pc)
        (label_ref 172)) "fs/buffer.c":250:16 807 {jump}
     (nil)
 -> 172)
(barrier 182 181 19)
(code_label 19 182 20 5 57 (nil) [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":251:9 75 {*movsi_internal}
     (nil))
(insn 22 21 77 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])
        (reg/f:SI 0 ax [114])) "fs/buffer.c":251:9 75 {*movsi_internal}
     (nil))
(code_label 77 22 23 6 63 (nil) [1 uses])
(note 23 77 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":253:16 75 {*movsi_internal}
     (nil))
(insn 25 24 26 6 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 12 [0xc])) [0 tmp_29->b_count+0 S1 A32])) "fs/buffer.c":253:16 77 {*movqi_internal}
     (nil))
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/buffer.c":253:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 27 26 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 197)
            (pc))) "fs/buffer.c":253:12 806 {*jcc}
     (nil)
 -> 197)
(note 32 27 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":255:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 34 33 35 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "fs/buffer.c":255:12 806 {*jcc}
     (nil)
 -> 54)
(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 8 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":255:20 75 {*movsi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 11 [0xb])) [0 tmp_29->b_dirt+0 S1 A8])) "fs/buffer.c":255:20 77 {*movqi_internal}
     (nil))
(insn 38 37 39 8 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:QI 0 ax [orig:84 _2 ] [84]))) "fs/buffer.c":255:20 143 {*zero_extendqisi2}
     (nil))
(insn 39 38 40 8 (parallel [
            (set (reg:SI 1 dx [orig:86 _4 ] [86])
                (ashift:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:20 655 {*ashlsi3_1}
     (nil))
(insn 40 39 41 8 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":255:20 75 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg:QI 0 ax [orig:87 _5 ] [87])
        (mem:QI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 13 [0xd])) [0 tmp_29->b_lock+0 S1 A8])) "fs/buffer.c":255:20 77 {*movqi_internal}
     (nil))
(insn 42 41 43 8 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (zero_extend:SI (reg:QI 0 ax [orig:87 _5 ] [87]))) "fs/buffer.c":255:20 143 {*zero_extendqisi2}
     (nil))
(insn 43 42 44 8 (parallel [
            (set (reg:SI 1 dx [orig:89 _7 ] [89])
                (plus:SI (reg:SI 1 dx [orig:86 _4 ] [86])
                    (reg:SI 0 ax [orig:88 _6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:20 209 {*addsi_1}
     (nil))
(insn 44 43 45 8 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":255:35 75 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:QI 0 ax [orig:90 _8 ] [90])
        (mem:QI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 11 [0xb])) [0 bh_30->b_dirt+0 S1 A8])) "fs/buffer.c":255:35 77 {*movqi_internal}
     (nil))
(insn 46 45 47 8 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (zero_extend:SI (reg:QI 0 ax [orig:90 _8 ] [90]))) "fs/buffer.c":255:35 143 {*zero_extendqisi2}
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg:SI 2 cx [orig:92 _10 ] [92])
                (ashift:SI (reg:SI 0 ax [orig:91 _9 ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:35 655 {*ashlsi3_1}
     (nil))
(insn 48 47 49 8 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":255:35 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:QI 0 ax [orig:93 _11 ] [93])
        (mem:QI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 13 [0xd])) [0 bh_30->b_lock+0 S1 A8])) "fs/buffer.c":255:35 77 {*movqi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (zero_extend:SI (reg:QI 0 ax [orig:93 _11 ] [93]))) "fs/buffer.c":255:35 143 {*zero_extendqisi2}
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg:SI 0 ax [orig:95 _13 ] [95])
                (plus:SI (reg:SI 0 ax [orig:94 _12 ] [94])
                    (reg:SI 2 cx [orig:92 _10 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":255:35 209 {*addsi_1}
     (nil))
(insn 52 51 53 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:89 _7 ] [89])
            (reg:SI 0 ax [orig:95 _13 ] [95]))) "fs/buffer.c":255:17 11 {*cmpsi_1}
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "fs/buffer.c":255:17 806 {*jcc}
     (nil)
 -> 71)
(code_label 54 53 55 9 61 (nil) [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":256:16 75 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])
        (reg/f:SI 0 ax [120])) "fs/buffer.c":256:16 75 {*movsi_internal}
     (nil))
(insn 58 57 59 9 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":257:18 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:QI 0 ax [orig:96 _14 ] [96])
        (mem:QI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 11 [0xb])) [0 tmp_29->b_dirt+0 S1 A8])) "fs/buffer.c":257:18 77 {*movqi_internal}
     (nil))
(insn 60 59 61 9 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (zero_extend:SI (reg:QI 0 ax [orig:96 _14 ] [96]))) "fs/buffer.c":257:18 143 {*zero_extendqisi2}
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:SI 1 dx [orig:98 _16 ] [98])
                (ashift:SI (reg:SI 0 ax [orig:97 _15 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":257:18 655 {*ashlsi3_1}
     (nil))
(insn 62 61 63 9 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":257:18 75 {*movsi_internal}
     (nil))
(insn 63 62 64 9 (set (reg:QI 0 ax [orig:99 _17 ] [99])
        (mem:QI (plus:SI (reg/f:SI 0 ax [122])
                (const_int 13 [0xd])) [0 tmp_29->b_lock+0 S1 A8])) "fs/buffer.c":257:18 77 {*movqi_internal}
     (nil))
(insn 64 63 65 9 (set (reg:SI 0 ax [orig:100 _18 ] [100])
        (zero_extend:SI (reg:QI 0 ax [orig:99 _17 ] [99]))) "fs/buffer.c":257:18 143 {*zero_extendqisi2}
     (nil))
(insn 65 64 66 9 (parallel [
            (set (reg:SI 0 ax [orig:101 _19 ] [101])
                (plus:SI (reg:SI 0 ax [orig:100 _18 ] [100])
                    (reg:SI 1 dx [orig:98 _16 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":257:18 209 {*addsi_1}
     (nil))
(insn 66 65 67 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 _19 ] [101])
            (const_int 0 [0]))) "fs/buffer.c":257:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 67 66 193 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 203)
            (pc))) "fs/buffer.c":257:16 806 {*jcc}
     (nil)
 -> 203)
(note 193 67 194 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 194 193 195 23 (set (pc)
        (label_ref 71)) 807 {jump}
     (nil)
 -> 71)
(barrier 195 194 197)
(code_label 197 195 196 24 69 (nil) [1 uses])
(note 196 197 198 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 198 196 71 24 (const_int 0 [0]) "fs/buffer.c":254:13 843 {nop}
     (nil))
(code_label 71 198 72 10 60 (nil) [2 uses])
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 10 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])) "fs/buffer.c":261:19 75 {*movsi_internal}
     (nil))
(insn 74 73 75 10 (set (reg/f:SI 0 ax [124])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 32 [0x20])) [1 tmp_29->b_next_free+0 S4 A32])) "fs/buffer.c":261:19 75 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 tmp+0 S4 A32])
        (reg/f:SI 0 ax [124])) "fs/buffer.c":261:19 75 {*movsi_internal}
     (nil))
(insn 76 75 78 10 (set (reg/f:SI 0 ax [orig:102 free_list.9_20 ] [102])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("free_list") [flags 0x2]  <var_decl 0x752d7c11ca20 free_list>)
                        ] UNSPEC_GOTOFF))) [1 free_list+0 S4 A32])) "fs/buffer.c":261:39 75 {*movsi_internal}
     (nil))
(insn 78 76 79 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [1 tmp+0 S4 A32])
            (reg/f:SI 0 ax [orig:102 free_list.9_20 ] [102]))) "fs/buffer.c":261:39 11 {*cmpsi_1}
     (nil))
(jump_insn 79 78 199 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "fs/buffer.c":261:39 806 {*jcc}
     (nil)
 -> 77)
(note 199 79 200 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 200 199 201 25 (set (pc)
        (label_ref 80)) 807 {jump}
     (nil)
 -> 80)
(barrier 201 200 203)
(code_label 203 201 202 26 70 (nil) [1 uses])
(note 202 203 204 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 204 202 80 26 (const_int 0 [0]) "fs/buffer.c":258:17 843 {nop}
     (nil))
(code_label 80 204 81 11 62 (nil) [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":262:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "fs/buffer.c":262:8 806 {*jcc}
     (nil)
 -> 93)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":263:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 86 85 87 12 (set (reg/f:SI 0 ax [125])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":263:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("buffer_wait") [flags 0x2]  <var_decl 0x752d7c11c990 buffer_wait>)
        (nil)))
(insn 87 86 89 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [125])) "fs/buffer.c":263:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 89 87 90 12 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x752d7c117e00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":263:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 90 89 183 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":263:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 183 90 184 12 (set (pc)
        (label_ref 4)) "fs/buffer.c":264:9 807 {jump}
     (nil)
 -> 4)
(barrier 184 183 93)
(code_label 93 184 94 13 64 (nil) [1 uses])
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":266:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 96 95 97 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":266:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 97 96 98 13 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":266:5 812 {*call}
     (nil)
    (nil))
(insn 98 97 99 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":266:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 99 98 100 13 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":267:11 75 {*movsi_internal}
     (nil))
(insn 100 99 101 13 (set (reg:QI 0 ax [orig:103 _21 ] [103])
        (mem:QI (plus:SI (reg/f:SI 0 ax [126])
                (const_int 12 [0xc])) [0 bh_32->b_count+0 S1 A32])) "fs/buffer.c":267:11 77 {*movqi_internal}
     (nil))
(insn 101 100 102 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:103 _21 ] [103])
            (const_int 0 [0]))) "fs/buffer.c":267:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 102 101 103 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/buffer.c":267:8 806 {*jcc}
     (nil)
 -> 106)
(note 103 102 185 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 185 103 186 14 (set (pc)
        (label_ref 4)) "fs/buffer.c":268:9 807 {jump}
     (nil)
 -> 4)
(barrier 186 185 106)
(code_label 106 186 107 15 65 (nil) [1 uses])
(note 107 106 187 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 187 107 188 15 (set (pc)
        (label_ref 129)) "fs/buffer.c":269:11 807 {jump}
     (nil)
 -> 129)
(barrier 188 187 133)
(code_label 133 188 110 16 67 (nil) [1 uses])
(note 110 133 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 16 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":270:20 75 {*movsi_internal}
     (nil))
(insn 112 111 113 16 (set (reg:HI 0 ax [orig:104 _22 ] [104])
        (mem:HI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 8 [0x8])) [5 bh_32->b_dev+0 S2 A32])) "fs/buffer.c":270:20 76 {*movhi_internal}
     (nil))
(insn 113 112 114 16 (set (reg:SI 0 ax [orig:105 _23 ] [105])
        (zero_extend:SI (reg:HI 0 ax [orig:104 _22 ] [104]))) "fs/buffer.c":270:9 144 {*zero_extendhisi2}
     (nil))
(insn 114 113 115 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":270:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 115 114 116 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 0 ax [orig:105 _23 ] [105])) "fs/buffer.c":270:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 116 115 117 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sync_dev") [flags 0x3]  <function_decl 0x752d7c0f2a00 sync_dev>) [0 sync_dev S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":270:9 823 {*call_value}
     (nil)
    (nil))
(insn 117 116 118 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":270:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 118 117 119 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":271:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 119 118 120 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":271:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 120 119 121 16 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":271:9 812 {*call}
     (nil)
    (nil))
(insn 121 120 122 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":271:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 122 121 123 16 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":272:15 75 {*movsi_internal}
     (nil))
(insn 123 122 124 16 (set (reg:QI 0 ax [orig:106 _24 ] [106])
        (mem:QI (plus:SI (reg/f:SI 0 ax [128])
                (const_int 12 [0xc])) [0 bh_32->b_count+0 S1 A32])) "fs/buffer.c":272:15 77 {*movqi_internal}
     (nil))
(insn 124 123 125 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:106 _24 ] [106])
            (const_int 0 [0]))) "fs/buffer.c":272:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 125 124 126 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "fs/buffer.c":272:12 806 {*jcc}
     (nil)
 -> 129)
(note 126 125 189 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 189 126 190 17 (set (pc)
        (label_ref 4)) "fs/buffer.c":273:13 807 {jump}
     (nil)
 -> 4)
(barrier 190 189 129)
(code_label 129 190 130 18 66 (nil) [2 uses])
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":269:14 75 {*movsi_internal}
     (nil))
(insn 132 131 134 18 (set (reg:QI 0 ax [orig:107 _25 ] [107])
        (mem:QI (plus:SI (reg/f:SI 0 ax [129])
                (const_int 11 [0xb])) [0 bh_32->b_dirt+0 S1 A8])) "fs/buffer.c":269:14 77 {*movqi_internal}
     (nil))
(insn 134 132 135 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:107 _25 ] [107])
            (const_int 0 [0]))) "fs/buffer.c":269:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 135 134 136 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "fs/buffer.c":269:12 806 {*jcc}
     (nil)
 -> 133)
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":277:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 138 137 139 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 block+0 S4 A32])) "fs/buffer.c":277:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 139 138 140 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 dev+0 S4 A32])) "fs/buffer.c":277:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 140 139 141 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_buffer") [flags 0x3]  <function_decl 0x752d7c146900 find_buffer>) [0 find_buffer S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":277:9 823 {*call_value}
     (nil)
    (nil))
(insn 141 140 143 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":277:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 143 141 144 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:108 _26 ] [108])
            (const_int 0 [0]))) "fs/buffer.c":277:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 144 143 145 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) "fs/buffer.c":277:8 806 {*jcc}
     (nil)
 -> 148)
(note 145 144 191 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 191 145 192 20 (set (pc)
        (label_ref 4)) "fs/buffer.c":278:9 807 {jump}
     (nil)
 -> 4)
(barrier 192 191 148)
(code_label 148 192 149 21 68 (nil) [1 uses])
(note 149 148 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 21 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":281:17 75 {*movsi_internal}
     (nil))
(insn 151 150 152 21 (set (mem:QI (plus:SI (reg/f:SI 0 ax [130])
                (const_int 12 [0xc])) [0 bh_32->b_count+0 S1 A32])
        (const_int 1 [0x1])) "fs/buffer.c":281:17 77 {*movqi_internal}
     (nil))
(insn 152 151 153 21 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":282:17 75 {*movsi_internal}
     (nil))
(insn 153 152 154 21 (set (mem:QI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 11 [0xb])) [0 bh_32->b_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":282:17 77 {*movqi_internal}
     (nil))
(insn 154 153 155 21 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":283:20 75 {*movsi_internal}
     (nil))
(insn 155 154 156 21 (set (mem:QI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 10 [0xa])) [0 bh_32->b_uptodate+0 S1 A16])
        (const_int 0 [0])) "fs/buffer.c":283:20 77 {*movqi_internal}
     (nil))
(insn 156 155 157 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":284:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 157 156 158 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":284:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 158 157 159 21 (call (mem:QI (symbol_ref:SI ("remove_from_queues") [flags 0x3]  <function_decl 0x752d7c146f00 remove_from_queues>) [0 remove_from_queues S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":284:5 812 {*call}
     (nil)
    (nil))
(insn 159 158 160 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":284:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 160 159 161 21 (set (reg:SI 0 ax [133])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [7 dev+0 S4 A32])) "fs/buffer.c":285:15 75 {*movsi_internal}
     (nil))
(insn 161 160 162 21 (set (reg:HI 1 dx [orig:109 _27 ] [109])
        (reg:HI 0 ax [133])) "fs/buffer.c":285:15 76 {*movhi_internal}
     (nil))
(insn 162 161 163 21 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":285:15 75 {*movsi_internal}
     (nil))
(insn 163 162 164 21 (set (mem:HI (plus:SI (reg/f:SI 0 ax [134])
                (const_int 8 [0x8])) [5 bh_32->b_dev+0 S2 A32])
        (reg:HI 1 dx [orig:109 _27 ] [109])) "fs/buffer.c":285:15 76 {*movhi_internal}
     (nil))
(insn 164 163 165 21 (set (reg:SI 1 dx [orig:110 block.10_28 ] [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 block+0 S4 A32])) "fs/buffer.c":286:19 75 {*movsi_internal}
     (nil))
(insn 165 164 166 21 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":286:19 75 {*movsi_internal}
     (nil))
(insn 166 165 167 21 (set (mem:SI (plus:SI (reg/f:SI 0 ax [135])
                (const_int 4 [0x4])) [4 bh_32->b_blocknr+0 S4 A32])
        (reg:SI 1 dx [orig:110 block.10_28 ] [110])) "fs/buffer.c":286:19 75 {*movsi_internal}
     (nil))
(insn 167 166 168 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":287:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 168 167 169 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":287:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 169 168 170 21 (call (mem:QI (symbol_ref:SI ("insert_into_queues") [flags 0x3]  <function_decl 0x752d7c146d00 insert_into_queues>) [0 insert_into_queues S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":287:5 812 {*call}
     (nil)
    (nil))
(insn 170 169 171 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":287:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 171 170 172 21 (set (reg/f:SI 0 ax [orig:111 _33 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":288:12 75 {*movsi_internal}
     (nil))
(code_label 172 171 173 22 58 (nil) [1 uses])
(note 173 172 179 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 179 173 206 22 (use (reg/i:SI 0 ax)) "fs/buffer.c":289:1 -1
     (nil))
(note 206 179 0 NOTE_INSN_DELETED)

;; Function breada (breada, funcdef_no=15, decl_uid=1166, cgraph_uid=16, symbol_order=21)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r {*set_got}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 55:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 68:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 69:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 71:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 85:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 88:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 90:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 99:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8 9
EBB 10
EBB 11 12 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 111: point = 0, n_alt = -1
   Insn 110: point = 0, n_alt = -2
   Insn 106: point = 1, n_alt = -2
  BB 13
   Insn 115: point = 4, n_alt = -1
   Insn 94: point = 4, n_alt = 0
  BB 14
   Insn 103: point = 5, n_alt = 0
   Insn 102: point = 6, n_alt = 0
   Insn 101: point = 6, n_alt = 0
   Insn 100: point = 6, n_alt = 0
   Insn 99: point = 6, n_alt = 0
  BB 12
   Insn 92: point = 6, n_alt = -1
   Insn 91: point = 6, n_alt = 0
   Insn 90: point = 7, n_alt = 4
   Insn 89: point = 9, n_alt = 0
   Insn 88: point = 10, n_alt = 0
   Insn 87: point = 10, n_alt = 0
   Insn 86: point = 10, n_alt = 0
   Insn 85: point = 10, n_alt = 0
  BB 11
   Insn 83: point = 10, n_alt = -1
   Insn 82: point = 10, n_alt = 0
   Insn 78: point = 11, n_alt = 0
   Insn 77: point = 12, n_alt = 1
   Insn 76: point = 13, n_alt = 0
   Insn 75: point = 15, n_alt = 0
   Insn 74: point = 16, n_alt = 0
  BB 6
   Insn 113: point = 17, n_alt = -1
  BB 5
   Insn 37: point = 18, n_alt = 0
   Insn 36: point = 18, n_alt = 0
   Insn 35: point = 18, n_alt = -2
   Insn 34: point = 18, n_alt = 0
   Insn 33: point = 18, n_alt = 0
   Insn 32: point = 18, n_alt = 0
  BB 4
   Insn 30: point = 19, n_alt = -1
   Insn 29: point = 19, n_alt = 0
   Insn 28: point = 20, n_alt = 4
   Insn 27: point = 22, n_alt = 0
  BB 3
   Insn 24: point = 24, n_alt = 0
   Insn 23: point = 24, n_alt = 0
   Insn 22: point = 24, n_alt = -2
   Insn 21: point = 24, n_alt = 0
   Insn 20: point = 25, n_alt = 0
   Insn 19: point = 26, n_alt = 0
  BB 2
   Insn 17: point = 27, n_alt = -1
   Insn 16: point = 27, n_alt = 1
   Insn 15: point = 27, n_alt = 1
   Insn 14: point = 28, n_alt = -2
   Insn 13: point = 29, n_alt = 0
   Insn 12: point = 29, n_alt = 0
   Insn 11: point = 29, n_alt = 0
   Insn 10: point = 29, n_alt = 0
   Insn 9: point = 30, n_alt = 0
   Insn 8: point = 30, n_alt = 0
   Insn 7: point = 31, n_alt = 1
   Insn 6: point = 32, n_alt = 0
   Insn 5: point = 34, n_alt = 3
   Insn 117: point = 35, n_alt = 0
  BB 10
   Insn 71: point = 36, n_alt = 8
   Insn 70: point = 37, n_alt = 0
   Insn 69: point = 38, n_alt = 5
   Insn 68: point = 40, n_alt = 4
   Insn 67: point = 42, n_alt = 0
  BB 9
   Insn 64: point = 44, n_alt = 0
   Insn 63: point = 44, n_alt = 0
   Insn 62: point = 44, n_alt = -2
   Insn 61: point = 44, n_alt = 0
   Insn 60: point = 44, n_alt = 0
   Insn 59: point = 44, n_alt = 0
  BB 8
   Insn 57: point = 45, n_alt = -1
   Insn 56: point = 45, n_alt = 0
   Insn 55: point = 46, n_alt = 4
   Insn 54: point = 48, n_alt = 0
  BB 7
   Insn 52: point = 50, n_alt = -1
   Insn 51: point = 50, n_alt = 1
   Insn 50: point = 50, n_alt = 1
   Insn 49: point = 51, n_alt = -2
   Insn 48: point = 52, n_alt = 0
   Insn 47: point = 52, n_alt = 0
   Insn 46: point = 52, n_alt = 0
   Insn 45: point = 52, n_alt = 0
   Insn 44: point = 53, n_alt = 0
   Insn 43: point = 53, n_alt = 0
 r82: [10..54]
 r83: [29..30]
 r84: [19..20]
 r85: [52..53]
 r86: [45..46]
 r87: [39..40]
 r88: [36..38]
 r89: [12..13]
 r90: [10..11]
 r91: [6..7]
 r92: [2..5]
 r93: [0..1]
 r94: [33..34]
 r95: [31..32]
 r96: [27..28]
 r97: [24..25]
 r98: [21..22]
 r99: [50..51]
 r100: [47..48]
 r101: [41..42]
 r102: [36..37]
 r103: [14..15]
 r104: [8..9]
Compressing live ranges: from 55 to 42 - 76%
Ranges after the compression:
 r82: [8..41]
 r83: [22..23]
 r84: [14..15]
 r85: [40..41]
 r86: [34..35]
 r87: [30..31]
 r88: [28..29]
 r89: [10..11]
 r90: [8..9]
 r91: [4..5]
 r92: [2..3]
 r93: [0..1]
 r94: [26..27]
 r95: [24..25]
 r96: [20..21]
 r97: [18..19]
 r98: [16..17]
 r99: [38..39]
 r100: [36..37]
 r101: [32..33]
 r102: [28..29]
 r103: [12..13]
 r104: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 117
changing reg in insn 62
changing reg in insn 35
changing reg in insn 22
changing reg in insn 20
changing reg in insn 8
changing reg in insn 10
changing reg in insn 28
changing reg in insn 29
changing reg in insn 43
changing reg in insn 45
changing reg in insn 55
changing reg in insn 56
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 71
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 90
changing reg in insn 91
changing reg in insn 103
changing reg in insn 94
changing reg in insn 106
changing reg in insn 106
changing reg in insn 110
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 14
changing reg in insn 15
changing reg in insn 20
changing reg in insn 21
changing reg in insn 27
changing reg in insn 28
changing reg in insn 49
changing reg in insn 50
changing reg in insn 54
changing reg in insn 55
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 75
changing reg in insn 76
changing reg in insn 89
changing reg in insn 90
deleting insn with uid = 14.
deleting insn with uid = 22.
deleting insn with uid = 35.
deleting insn with uid = 49.
deleting insn with uid = 62.
deleting insn with uid = 106.
deleting insn with uid = 110.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 101.


breada

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={27d,21u} r1={9d,1u} r2={8d} r3={1d,4u} r7={26d,86u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={32d,6u} r18={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 676{558d,118u,0e} in 74{67 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 117 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 117 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 117 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg:SI 0 ax [94])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":301:5 209 {*addsi_1}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [95])
                (plus:SI (reg:SI 0 ax [94])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":301:5 209 {*addsi_1}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 args+0 S4 A32])
        (reg:SI 0 ax [95])) "fs/buffer.c":301:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:83 first.16_1 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 first+0 S4 A32])) "fs/buffer.c":302:16 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":302:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 10 9 11 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 0 ax [orig:83 first.16_1 ] [83])) "fs/buffer.c":302:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 dev+0 S4 A32])) "fs/buffer.c":302:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":302:16 823 {*call_value}
     (nil)
    (nil))
(insn 13 12 15 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":302:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 15 13 16 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])
        (reg:SI 0 ax [96])) "fs/buffer.c":302:16 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [1 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":302:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "fs/buffer.c":302:8 806 {*jcc}
     (nil)
 -> 25)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":303:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 20 19 21 3 (set (reg/f:SI 0 ax [97])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x752d7c1b46c0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/buffer.c":303:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x752d7c1b46c0 *.LC3>)
        (nil)))
(insn 21 20 23 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg/f:SI 0 ax [97])) "fs/buffer.c":303:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 21 24 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x752d7c140a00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":303:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":303:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 25 24 26 4 72 (nil) [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":304:12 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [98])
                (const_int 10 [0xa])) [0 bh_22->b_uptodate+0 S1 A16])) "fs/buffer.c":304:12 77 {*movqi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/buffer.c":304:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fs/buffer.c":304:8 806 {*jcc}
     (nil)
 -> 38)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":305:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 33 32 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":305:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 34 33 36 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 0 [0])) "fs/buffer.c":305:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 36 34 37 5 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":305:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 37 36 38 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":305:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 38 37 39 6 73 (nil) [1 uses])
(note 39 38 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 113 39 114 6 (set (pc)
        (label_ref 72)) "fs/buffer.c":306:11 807 {jump}
     (nil)
 -> 72)
(barrier 114 113 79)
(code_label 79 114 42 7 76 (nil) [1 uses])
(note 42 79 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:SI 0 ax [orig:85 first.17_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 first+0 S4 A32])) "fs/buffer.c":307:15 75 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":307:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 45 44 46 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 0 ax [orig:85 first.17_3 ] [85])) "fs/buffer.c":307:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 46 45 47 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 dev+0 S4 A32])) "fs/buffer.c":307:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 47 46 48 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":307:15 823 {*call_value}
     (nil)
    (nil))
(insn 48 47 50 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":307:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 50 48 51 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 tmp+0 S4 A32])
        (reg:SI 0 ax [99])) "fs/buffer.c":307:15 75 {*movsi_internal}
     (nil))
(insn 51 50 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [1 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/buffer.c":308:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "fs/buffer.c":308:12 806 {*jcc}
     (nil)
 -> 72)
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg/f:SI 0 ax [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 tmp+0 S4 A32])) "fs/buffer.c":309:21 75 {*movsi_internal}
     (nil))
(insn 55 54 56 8 (set (reg:QI 0 ax [orig:86 _4 ] [86])
        (mem:QI (plus:SI (reg/f:SI 0 ax [100])
                (const_int 10 [0xa])) [0 tmp_32->b_uptodate+0 S1 A16])) "fs/buffer.c":309:21 77 {*movqi_internal}
     (nil))
(insn 56 55 57 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:86 _4 ] [86])
            (const_int 0 [0]))) "fs/buffer.c":309:16 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 57 56 58 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "fs/buffer.c":309:16 806 {*jcc}
     (nil)
 -> 65)
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":310:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 60 59 61 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":310:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 61 60 63 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 2 [0x2])) "fs/buffer.c":310:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 63 61 64 9 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":310:17 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 64 63 65 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":310:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 65 64 66 10 75 (nil) [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 tmp+0 S4 A32])) "fs/buffer.c":311:16 75 {*movsi_internal}
     (nil))
(insn 68 67 69 10 (set (reg:QI 0 ax [orig:87 _5 ] [87])
        (mem:QI (plus:SI (reg/f:SI 0 ax [101])
                (const_int 12 [0xc])) [0 tmp_32->b_count+0 S1 A32])) "fs/buffer.c":311:16 77 {*movqi_internal}
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg:QI 1 dx [orig:88 _7 ] [88])
                (plus:QI (reg:QI 0 ax [orig:87 _5 ] [87])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":311:25 213 {*addqi_1}
     (nil))
(insn 70 69 71 10 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 tmp+0 S4 A32])) "fs/buffer.c":311:25 75 {*movsi_internal}
     (nil))
(insn 71 70 72 10 (set (mem:QI (plus:SI (reg/f:SI 0 ax [102])
                (const_int 12 [0xc])) [0 tmp_32->b_count+0 S1 A32])
        (reg:QI 1 dx [orig:88 _7 ] [88])) "fs/buffer.c":311:25 77 {*movqi_internal}
     (nil))
(code_label 72 71 73 11 74 (nil) [2 uses])
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 11 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [3 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [3 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":306:21 209 {*addsi_1}
     (nil))
(insn 75 74 76 11 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 args+0 S4 A32])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg:SI 0 ax [orig:89 _8 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [103])
                (const_int -4 [0xfffffffffffffffc])) [7 MEM[(int *)args_25 + 4294967292B]+0 S4 A32])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (nil))
(insn 77 76 78 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 first+0 S4 A32])
        (reg:SI 0 ax [orig:89 _8 ] [89])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (nil))
(insn 78 77 82 11 (set (reg:SI 0 ax [orig:90 first.18_9 ] [90])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [7 first+0 S4 A32])) "fs/buffer.c":306:19 75 {*movsi_internal}
     (nil))
(insn 82 78 83 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:90 first.18_9 ] [90])
            (const_int 0 [0]))) "fs/buffer.c":306:40 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/buffer.c":306:40 806 {*jcc}
     (nil)
 -> 79)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":315:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 86 85 87 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":315:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 87 86 88 12 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":315:5 812 {*call}
     (nil)
    (nil))
(insn 88 87 89 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":315:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 89 88 90 12 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":316:11 75 {*movsi_internal}
     (nil))
(insn 90 89 91 12 (set (reg:QI 0 ax [orig:91 _10 ] [91])
        (mem:QI (plus:SI (reg/f:SI 0 ax [104])
                (const_int 10 [0xa])) [0 bh_22->b_uptodate+0 S1 A16])) "fs/buffer.c":316:11 77 {*movqi_internal}
     (nil))
(insn 91 90 92 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:91 _10 ] [91])
            (const_int 0 [0]))) "fs/buffer.c":316:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 92 91 93 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "fs/buffer.c":316:8 806 {*jcc}
     (nil)
 -> 97)
(note 93 92 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 115 13 (set (reg/f:SI 0 ax [orig:92 _12 ] [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":317:16 75 {*movsi_internal}
     (nil))
(jump_insn 115 94 116 13 (set (pc)
        (label_ref 104)) "fs/buffer.c":317:16 807 {jump}
     (nil)
 -> 104)
(barrier 116 115 97)
(code_label 97 116 98 14 77 (nil) [1 uses])
(note 98 97 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":318:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 100 99 101 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":318:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 101 100 102 14 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x3]  <function_decl 0x752d7c0f2f00 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":318:5 812 {*call}
     (nil)
    (nil))
(insn 102 101 103 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":318:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 103 102 104 14 (set (reg/f:SI 0 ax [orig:92 _12 ] [92])
        (const_int 0 [0])) "fs/buffer.c":319:12 75 {*movsi_internal}
     (nil))
(code_label 104 103 105 15 78 (nil) [1 uses])
(note 105 104 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 111 105 118 15 (use (reg/i:SI 0 ax)) "fs/buffer.c":320:1 -1
     (nil))
(note 118 111 0 NOTE_INSN_DELETED)

;; Function invalidate_buffers (invalidate_buffers, funcdef_no=16, decl_uid=1481, cgraph_uid=17, symbol_order=22)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 32:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 34:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 36:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5
EBB 9
EBB 6
EBB 7 10 8 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 60: point = 0, n_alt = -1
  BB 8
  BB 10
   Insn 58: point = 0, n_alt = -1
  BB 7
   Insn 46: point = 0, n_alt = -1
   Insn 45: point = 0, n_alt = 0
   Insn 43: point = 1, n_alt = 0
  BB 2
   Insn 50: point = 3, n_alt = -1
   Insn 7: point = 3, n_alt = 1
   Insn 6: point = 3, n_alt = 1
   Insn 5: point = 4, n_alt = 0
   Insn 61: point = 5, n_alt = 0
  BB 6
   Insn 40: point = 6, n_alt = 0
   Insn 39: point = 6, n_alt = 0
  BB 5
   Insn 52: point = 7, n_alt = -1
   Insn 36: point = 7, n_alt = 8
   Insn 35: point = 8, n_alt = 0
   Insn 34: point = 9, n_alt = 4
   Insn 33: point = 11, n_alt = 0
   Insn 32: point = 12, n_alt = 8
   Insn 31: point = 13, n_alt = 0
  BB 4
   Insn 29: point = 15, n_alt = -1
   Insn 28: point = 15, n_alt = 0
   Insn 27: point = 16, n_alt = 0
   Insn 26: point = 18, n_alt = 2
   Insn 25: point = 20, n_alt = 0
   Insn 24: point = 21, n_alt = 0
   Insn 23: point = 21, n_alt = 0
   Insn 22: point = 21, n_alt = 0
   Insn 21: point = 21, n_alt = 0
  BB 9
   Insn 56: point = 22, n_alt = -1
  BB 3
   Insn 15: point = 23, n_alt = -1
   Insn 14: point = 23, n_alt = 0
   Insn 13: point = 24, n_alt = 0
   Insn 12: point = 26, n_alt = 2
   Insn 11: point = 28, n_alt = 0
 r82: [0..29]
 r83: [25..26]
 r84: [23..24]
 r85: [17..18]
 r86: [15..16]
 r87: [7..9]
 r88: [0..1]
 r89: [3..4]
 r90: [27..28]
 r91: [19..20]
 r92: [12..13]
 r93: [10..11]
 r94: [7..8]
Compressing live ranges: from 30 to 22 - 73%
Ranges after the compression:
 r82: [0..21]
 r83: [18..19]
 r84: [16..17]
 r85: [12..13]
 r86: [10..11]
 r87: [4..5]
 r88: [0..1]
 r89: [2..3]
 r90: [20..21]
 r91: [14..15]
 r92: [8..9]
 r93: [6..7]
 r94: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 61
changing reg in insn 43
changing reg in insn 5
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 34
changing reg in insn 36
changing reg in insn 43
changing reg in insn 45
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 25
changing reg in insn 26
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.


invalidate_buffers

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={13d,11u} r1={3d,1u} r2={2d} r3={1d,2u} r7={4d,32u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={9d,3u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 146{97d,49u,0e} in 34{33 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 61 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 61 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 61 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":327:8 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])
        (reg/f:SI 0 ax [89])) "fs/buffer.c":327:8 75 {*movsi_internal}
     (nil))
(insn 7 6 50 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":328:12 75 {*movsi_internal}
     (nil))
(jump_insn 50 7 51 2 (set (pc)
        (label_ref 41)) "fs/buffer.c":328:5 807 {jump}
     (nil)
 -> 41)
(barrier 51 50 44)
(code_label 44 51 10 3 83 (nil) [1 uses])
(note 10 44 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":329:15 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [90])
                (const_int 8 [0x8])) [5 bh_8->b_dev+0 S2 A32])) "fs/buffer.c":329:15 76 {*movhi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/buffer.c":329:15 144 {*zero_extendhisi2}
     (nil))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:84 _2 ] [84]))) "fs/buffer.c":329:12 11 {*cmpsi_1}
     (nil))
(jump_insn 15 14 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 55)
            (pc))) "fs/buffer.c":329:12 806 {*jcc}
     (nil)
 -> 55)
(note 20 15 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":331:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 22 21 23 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":331:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":331:9 812 {*call}
     (nil)
    (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":331:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 25 24 26 4 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":332:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [91])
                (const_int 8 [0x8])) [5 bh_8->b_dev+0 S2 A32])) "fs/buffer.c":332:15 76 {*movhi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/buffer.c":332:15 144 {*zero_extendhisi2}
     (nil))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:86 _4 ] [86]))) "fs/buffer.c":332:12 11 {*cmpsi_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "fs/buffer.c":332:12 806 {*jcc}
     (nil)
 -> 37)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":333:41 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (mem:QI (plus:SI (reg/f:SI 0 ax [92])
                (const_int 11 [0xb])) [0 bh_8->b_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/buffer.c":333:41 77 {*movqi_internal}
     (nil))
(insn 33 32 34 5 (set (reg/f:SI 0 ax [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":333:32 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:QI 1 dx [orig:87 _5 ] [87])
        (mem:QI (plus:SI (reg/f:SI 0 ax [93])
                (const_int 11 [0xb])) [0 bh_8->b_dirt+0 S1 A8])) "fs/buffer.c":333:32 77 {*movqi_internal}
     (nil))
(insn 35 34 36 5 (set (reg/f:SI 0 ax [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":333:28 75 {*movsi_internal}
     (nil))
(insn 36 35 52 5 (set (mem:QI (plus:SI (reg/f:SI 0 ax [94])
                (const_int 10 [0xa])) [0 bh_8->b_uptodate+0 S1 A16])
        (reg:QI 1 dx [orig:87 _5 ] [87])) "fs/buffer.c":333:28 77 {*movqi_internal}
     (nil))
(jump_insn 52 36 53 5 (set (pc)
        (label_ref 37)) 807 {jump}
     (nil)
 -> 37)
(barrier 53 52 55)
(code_label 55 53 54 9 84 (nil) [1 uses])
(note 54 55 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 37 9 (const_int 0 [0]) "fs/buffer.c":330:13 843 {nop}
     (nil))
(code_label 37 56 38 6 82 (nil) [2 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":328:34 209 {*addsi_1}
     (nil))
(insn 40 39 41 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":328:40 209 {*addsi_1}
     (nil))
(code_label 41 40 42 7 80 (nil) [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 7 (set (reg:SI 0 ax [orig:88 nr_buffers.21_6 ] [88])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":328:19 75 {*movsi_internal}
     (nil))
(insn 45 43 46 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 i+0 S4 A32])
            (reg:SI 0 ax [orig:88 nr_buffers.21_6 ] [88]))) "fs/buffer.c":328:19 11 {*cmpsi_1}
     (nil))
(jump_insn 46 45 57 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/buffer.c":328:19 806 {*jcc}
     (nil)
 -> 44)
(note 57 46 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 47 10 (const_int 0 [0]) "fs/buffer.c":335:1 843 {nop}
     (nil))
(note 47 58 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 59 47 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 62 11 (const_int 0 [0]) "fs/buffer.c":335:1 843 {nop}
     (nil))
(note 62 60 0 NOTE_INSN_DELETED)

;; Function check_disk_change (check_disk_change, funcdef_no=17, decl_uid=1175, cgraph_uid=18, symbol_order=23)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 36
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 38:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 46
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 54:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6
EBB 7
EBB 8 9
EBB 11
EBB 12
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
  BB 11
   Insn 86: point = 0, n_alt = -1
   Insn 85: point = 0, n_alt = -1
  BB 9
   Insn 81: point = 0, n_alt = -1
   Insn 74: point = 0, n_alt = 0
   Insn 73: point = 0, n_alt = 0
   Insn 72: point = 0, n_alt = 0
   Insn 71: point = 0, n_alt = 0
   Insn 70: point = 0, n_alt = 0
   Insn 69: point = 0, n_alt = 0
   Insn 68: point = 0, n_alt = -2
   Insn 67: point = 1, n_alt = 0
   Insn 66: point = 1, n_alt = 0
  BB 8
   Insn 64: point = 2, n_alt = -1
   Insn 63: point = 2, n_alt = 0
  BB 4
   Insn 79: point = 3, n_alt = -1
   Insn 29: point = 3, n_alt = 1
  BB 7
   Insn 57: point = 4, n_alt = 0
  BB 6
   Insn 54: point = 5, n_alt = 0
   Insn 53: point = 5, n_alt = 0
   Insn 52: point = 5, n_alt = -2
   Insn 51: point = 5, n_alt = 0
   Insn 50: point = 6, n_alt = 0
   Insn 49: point = 6, n_alt = 0
   Insn 48: point = 8, n_alt = 2
   Insn 47: point = 10, n_alt = 0
   Insn 46: point = 12, n_alt = 0
   Insn 45: point = 14, n_alt = 0
   Insn 44: point = 16, n_alt = 0
   Insn 43: point = 17, n_alt = 0
  BB 5
   Insn 41: point = 19, n_alt = -1
   Insn 40: point = 19, n_alt = 0
   Insn 39: point = 20, n_alt = 0
   Insn 38: point = 22, n_alt = 2
   Insn 37: point = 24, n_alt = 0
   Insn 36: point = 26, n_alt = 0
   Insn 35: point = 28, n_alt = 0
   Insn 34: point = 30, n_alt = 0
   Insn 33: point = 31, n_alt = 0
  BB 12
   Insn 90: point = 33, n_alt = -1
  BB 3
   Insn 23: point = 33, n_alt = -1
   Insn 22: point = 33, n_alt = 0
   Insn 21: point = 34, n_alt = -2
   Insn 20: point = 35, n_alt = 0
   Insn 19: point = 35, n_alt = 0
   Insn 18: point = 35, n_alt = -2
   Insn 17: point = 35, n_alt = 0
   Insn 16: point = 36, n_alt = 0
   Insn 15: point = 36, n_alt = 0
   Insn 14: point = 38, n_alt = 0
  BB 2
   Insn 8: point = 40, n_alt = -1
   Insn 7: point = 40, n_alt = 0
   Insn 6: point = 41, n_alt = 0
   Insn 5: point = 43, n_alt = 0
   Insn 91: point = 44, n_alt = 0
 r82: [0..44]
 r83: [42..43]
 r84: [40..41]
 r85: [37..38]
 r86: [35..36]
 r87: [33..34]
 r88: [21..22]
 r89: [19..20]
 r90: [7..8]
 r91: [5..6]
 r92: [27..31]
 r93: [29..30]
 r94: [27..28]
 r95: [25..26]
 r96: [23..24]
 r97: [13..17]
 r98: [15..16]
 r99: [13..14]
 r100: [11..12]
 r101: [9..10]
Compressing live ranges: from 45 to 34 - 75%
Ranges after the compression:
 r82: [0..33]
 r83: [32..33]
 r84: [30..31]
 r85: [28..29]
 r86: [26..27]
 r87: [24..25]
 r88: [14..15]
 r89: [12..13]
 r90: [2..3]
 r91: [0..1]
 r92: [20..23]
 r93: [22..23]
 r94: [20..21]
 r95: [18..19]
 r96: [16..17]
 r97: [8..11]
 r98: [10..11]
 r99: [8..9]
 r100: [6..7]
 r101: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 91
changing reg in insn 68
changing reg in insn 52
changing reg in insn 43
changing reg in insn 33
changing reg in insn 18
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 51
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
deleting insn with uid = 18.
deleting insn with uid = 21.
deleting insn with uid = 52.
deleting insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 73.


check_disk_change

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={21d,17u} r1={7d,2u} r2={5d} r3={1d,5u} r7={13d,47u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={26d,4u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 408{333d,75u,0e} in 50{46 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 91 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 91 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 91 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [orig:83 dev.19_1 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [7 dev+0 S4 A32])) "fs/buffer.c":355:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (lshiftrt:SI (reg:SI 0 ax [orig:83 dev.19_1 ] [83])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":355:9 701 {*lshrsi3_1}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _2 ] [84])
            (const_int 2 [0x2]))) "fs/buffer.c":355:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 84)
            (pc))) "fs/buffer.c":355:8 806 {*jcc}
     (nil)
 -> 84)
(note 13 8 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 0 ax [orig:85 dev.20_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [7 dev+0 S4 A32])) "fs/buffer.c":357:28 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 0 ax [orig:86 _4 ] [86])
                (and:SI (reg:SI 0 ax [orig:85 dev.20_3 ] [85])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":357:10 490 {*andsi_1}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":357:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 17 16 19 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "fs/buffer.c":357:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 19 17 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("floppy_change") [flags 0x41]  <function_decl 0x752d7c112300 floppy_change>) [0 floppy_change S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":357:10 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 20 19 22 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":357:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 22 20 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "fs/buffer.c":357:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 28 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 89)
            (pc))) "fs/buffer.c":357:8 806 {*jcc}
     (nil)
 -> 89)
(note 28 23 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 79 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":359:12 75 {*movsi_internal}
     (nil))
(jump_insn 79 29 80 4 (set (pc)
        (label_ref 58)) "fs/buffer.c":359:5 807 {jump}
     (nil)
 -> 58)
(barrier 80 79 60)
(code_label 60 80 32 5 91 (nil) [1 uses])
(note 32 60 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg/f:SI 1 dx [92])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x752d7d93bcf0 super_block>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/buffer.c":360:27 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:SI 0 ax [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 i+0 S4 A32])) "fs/buffer.c":360:27 75 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:SI 0 ax [94])
                (mult:SI (reg:SI 0 ax [93])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":360:27 408 {*mulsi3_1}
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:SI 0 ax [95])
                (plus:SI (reg:SI 0 ax [94])
                    (reg/f:SI 1 dx [92])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":360:27 209 {*addsi_1}
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg/f:SI 0 ax [96])
                (plus:SI (reg:SI 0 ax [95])
                    (const_int 84 [0x54])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":360:27 209 {*addsi_1}
     (nil))
(insn 38 37 39 5 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (reg/f:SI 0 ax [96]) [5 super_block[i_10].s_dev+0 S2 A32])) "fs/buffer.c":360:27 76 {*movhi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 0 ax [orig:88 _6 ] [88]))) "fs/buffer.c":360:27 144 {*zero_extendhisi2}
     (nil))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [7 dev+0 S4 A32])
            (reg:SI 0 ax [orig:89 _7 ] [89]))) "fs/buffer.c":360:12 11 {*cmpsi_1}
     (nil))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/buffer.c":360:12 806 {*jcc}
     (nil)
 -> 55)
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg/f:SI 1 dx [97])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x752d7d93bcf0 super_block>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/buffer.c":361:37 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:SI 0 ax [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 i+0 S4 A32])) "fs/buffer.c":361:37 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:SI 0 ax [99])
                (mult:SI (reg:SI 0 ax [98])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:37 408 {*mulsi3_1}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 0 ax [100])
                (plus:SI (reg:SI 0 ax [99])
                    (reg/f:SI 1 dx [97])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:37 209 {*addsi_1}
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg/f:SI 0 ax [101])
                (plus:SI (reg:SI 0 ax [100])
                    (const_int 84 [0x54])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:37 209 {*addsi_1}
     (nil))
(insn 48 47 49 6 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (reg/f:SI 0 ax [101]) [5 super_block[i_10].s_dev+0 S2 A32])) "fs/buffer.c":361:37 76 {*movhi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/buffer.c":361:13 144 {*zero_extendhisi2}
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 51 50 53 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 0 ax [orig:91 _9 ] [91])) "fs/buffer.c":361:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 53 51 54 6 (call (mem:QI (symbol_ref:SI ("put_super") [flags 0x41]  <function_decl 0x752d7c140f00 put_super>) [0 put_super S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":361:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 54 53 55 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":361:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 55 54 56 7 90 (nil) [1 uses])
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":359:32 209 {*addsi_1}
     (nil))
(code_label 58 57 59 8 89 (nil) [1 uses])
(note 59 58 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 59 64 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/buffer.c":359:19 11 {*cmpsi_1}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/buffer.c":359:19 806 {*jcc}
     (nil)
 -> 60)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":362:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 67 66 69 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 dev+0 S4 A32])) "fs/buffer.c":362:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 69 67 70 9 (call (mem:QI (symbol_ref:SI ("invalidate_inodes") [flags 0x41]  <function_decl 0x752d7c112200 invalidate_inodes>) [0 invalidate_inodes S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":362:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 70 69 71 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":362:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 71 70 72 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":363:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 72 71 73 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [7 dev+0 S4 A32])) "fs/buffer.c":363:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 73 72 74 9 (call (mem:QI (symbol_ref:SI ("invalidate_buffers") [flags 0x3]  <function_decl 0x752d7c157200 invalidate_buffers>) [0 invalidate_buffers S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":363:5 812 {*call}
     (nil)
    (nil))
(insn 74 73 81 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":363:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 81 74 82 9 (set (pc)
        (label_ref 77)) 807 {jump}
     (nil)
 -> 77)
(barrier 82 81 84)
(code_label 84 82 83 11 92 (nil) [1 uses])
(note 83 84 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 11 (const_int 0 [0]) "fs/buffer.c":356:9 843 {nop}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (label_ref 77)) 807 {jump}
     (nil)
 -> 77)
(barrier 87 86 89)
(code_label 89 87 88 12 93 (nil) [1 uses])
(note 88 89 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 90 88 77 12 (const_int 0 [0]) "fs/buffer.c":358:9 843 {nop}
     (nil))
(code_label 77 90 78 10 85 (nil) [2 uses])
(note 78 77 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 92 78 0 NOTE_INSN_DELETED)

;; Function sys_sync (sys_sync, funcdef_no=18, decl_uid=1498, cgraph_uid=19, symbol_order=24)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) lBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 47: point = 0, n_alt = -1
   Insn 46: point = 0, n_alt = -2
   Insn 42: point = 1, n_alt = -2
   Insn 39: point = 3, n_alt = 0
  BB 6
   Insn 37: point = 4, n_alt = -1
   Insn 36: point = 4, n_alt = 0
   Insn 34: point = 5, n_alt = 0
  BB 2
   Insn 49: point = 7, n_alt = -1
   Insn 9: point = 7, n_alt = 1
   Insn 8: point = 7, n_alt = 1
   Insn 7: point = 8, n_alt = 0
   Insn 6: point = 9, n_alt = 0
   Insn 5: point = 9, n_alt = -2
   Insn 51: point = 9, n_alt = 0
  BB 5
   Insn 31: point = 10, n_alt = 0
   Insn 30: point = 10, n_alt = 0
  BB 4
   Insn 27: point = 11, n_alt = 0
   Insn 26: point = 11, n_alt = 0
   Insn 25: point = 11, n_alt = -2
   Insn 24: point = 11, n_alt = 0
   Insn 23: point = 11, n_alt = 0
   Insn 22: point = 11, n_alt = 0
  BB 3
   Insn 20: point = 12, n_alt = -1
   Insn 19: point = 12, n_alt = 0
   Insn 18: point = 13, n_alt = 4
   Insn 17: point = 15, n_alt = 0
   Insn 16: point = 16, n_alt = 0
   Insn 15: point = 16, n_alt = 0
   Insn 14: point = 16, n_alt = 0
   Insn 13: point = 16, n_alt = 0
 r82: [4..16]
 r83: [12..13]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [7..8]
 r88: [14..15]
Compressing live ranges: from 17 to 12 - 70%
Ranges after the compression:
 r82: [4..11]
 r83: [8..9]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [6..7]
 r88: [10..11]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 51
changing reg in insn 34
changing reg in insn 25
changing reg in insn 7
changing reg in insn 5
changing reg in insn 18
changing reg in insn 19
changing reg in insn 34
changing reg in insn 36
changing reg in insn 39
changing reg in insn 42
changing reg in insn 42
changing reg in insn 46
changing reg in insn 7
changing reg in insn 8
changing reg in insn 17
changing reg in insn 18
deleting insn with uid = 5.
deleting insn with uid = 25.
deleting insn with uid = 42.
deleting insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns


sys_sync

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,6u} r1={4d} r2={4d} r3={1d,4u} r7={8d,31u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={12d,2u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 276{233d,43u,0e} in 26{23 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 51 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 51 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 51 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 2 7 2 (call (mem:QI (symbol_ref:SI ("sync_inodes") [flags 0x41]  <function_decl 0x752d7c0f2900 sync_inodes>) [0 sync_inodes S1 A8])
        (const_int 0 [0])) "fs/buffer.c":371:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("start_buffer") [flags 0x2]  <var_decl 0x752d7c11cb40 start_buffer>)
                        ] UNSPEC_GOTOFF))) [1 start_buffer+0 S4 A32])) "fs/buffer.c":372:8 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])
        (reg/f:SI 0 ax [87])) "fs/buffer.c":372:8 75 {*movsi_internal}
     (nil))
(insn 9 8 49 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":373:11 75 {*movsi_internal}
     (nil))
(jump_insn 49 9 50 2 (set (pc)
        (label_ref 32)) "fs/buffer.c":373:5 807 {jump}
     (nil)
 -> 32)
(barrier 50 49 35)
(code_label 35 50 12 3 97 (nil) [1 uses])
(note 12 35 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":374:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 14 13 15 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 bh+0 S4 A32])) "fs/buffer.c":374:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 15 14 16 3 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":374:9 812 {*call}
     (nil)
    (nil))
(insn 16 15 17 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":374:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 17 16 18 3 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 bh+0 S4 A32])) "fs/buffer.c":375:15 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [88])
                (const_int 11 [0xb])) [0 bh_4->b_dirt+0 S1 A8])) "fs/buffer.c":375:15 77 {*movqi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/buffer.c":375:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/buffer.c":375:12 806 {*jcc}
     (nil)
 -> 28)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":376:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 23 22 24 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 bh+0 S4 A32])) "fs/buffer.c":376:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 24 23 26 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 1 [0x1])) "fs/buffer.c":376:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 24 27 4 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":376:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":376:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 28 27 29 5 96 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":373:32 209 {*addsi_1}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [1 bh+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [1 bh+0 S4 A32])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":373:37 209 {*addsi_1}
     (nil))
(code_label 32 31 33 6 95 (nil) [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 36 6 (set (reg:SI 0 ax [orig:84 nr_buffers.22_2 ] [84])
        (mem/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nr_buffers") [flags 0x2]  <var_decl 0x752d7d93be10 nr_buffers>)
                        ] UNSPEC_GOTOFF))) [7 nr_buffers+0 S4 A32])) "fs/buffer.c":373:17 75 {*movsi_internal}
     (nil))
(insn 36 34 37 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [7 i+0 S4 A32])
            (reg:SI 0 ax [orig:84 nr_buffers.22_2 ] [84]))) "fs/buffer.c":373:17 11 {*cmpsi_1}
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/buffer.c":373:17 806 {*jcc}
     (nil)
 -> 35)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 47 7 (set (reg:SI 0 ax [orig:85 _11 ] [85])
        (const_int 0 [0])) "fs/buffer.c":378:12 75 {*movsi_internal}
     (nil))
(insn 47 39 52 7 (use (reg/i:SI 0 ax)) "fs/buffer.c":379:1 -1
     (nil))
(note 52 47 0 NOTE_INSN_DELETED)

;; Function bread_page (bread_page, funcdef_no=19, decl_uid=1216, cgraph_uid=20, symbol_order=25)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 12
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 20
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 37:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 83:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            0 Small class reload: reject+=3
            1 Small class reload: reject+=3
            2 Small class reload: reject+=3
          alt=0,overall=27,losers=3,rld_nregs=3
	 Choosing alt 0 in insn 93:  (0) c  (1) S  (2) D
      Creating newreg=119 from oldreg=115, assigning class CREG to r119
      Creating newreg=120 from oldreg=102, assigning class SIREG to r120
      Creating newreg=121 from oldreg=116, assigning class DIREG to r121
   93: {asm_operands;clobber flags:CC;}
      REG_DEAD r116:SI
      REG_DEAD r115:SI
      REG_DEAD r102:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  128: r119:SI=r115:SI
  129: r120:SI=r102:SI
  130: r121:SI=r116:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 101:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5 6
EBB 7
EBB 8
EBB 9 10
EBB 11 12 13
EBB 14
EBB 15
EBB 16 18 17 19

********** Pseudo live ranges #1: **********

  BB 19
   Insn 125: point = 0, n_alt = -1
  BB 17
  BB 18
   Insn 123: point = 0, n_alt = -1
  BB 16
   Insn 112: point = 0, n_alt = -1
   Insn 111: point = 0, n_alt = 0
  BB 10
   Insn 120: point = 0, n_alt = -1
   Insn 66: point = 0, n_alt = 1
  BB 9
   Insn 64: point = 0, n_alt = -1
   Insn 63: point = 0, n_alt = 0
  BB 2
   Insn 116: point = 1, n_alt = -1
   Insn 5: point = 1, n_alt = 1
   Insn 126: point = 1, n_alt = 0
  BB 8
   Insn 57: point = 2, n_alt = 0
  BB 6
   Insn 118: point = 3, n_alt = -1
   Insn 48: point = 3, n_alt = 0
   Insn 47: point = 3, n_alt = 0
   Insn 46: point = 3, n_alt = -2
   Insn 45: point = 3, n_alt = 0
   Insn 44: point = 3, n_alt = 0
   Insn 43: point = 4, n_alt = 0
   Insn 42: point = 4, n_alt = 0
   Insn 41: point = 6, n_alt = 0
  BB 7
   Insn 54: point = 8, n_alt = 1
   Insn 53: point = 9, n_alt = 0
  BB 5
   Insn 39: point = 11, n_alt = -1
   Insn 38: point = 11, n_alt = 0
   Insn 37: point = 12, n_alt = 4
   Insn 36: point = 14, n_alt = 0
   Insn 35: point = 16, n_alt = 0
  BB 4
   Insn 33: point = 18, n_alt = -1
   Insn 32: point = 18, n_alt = 0
   Insn 31: point = 19, n_alt = 0
   Insn 30: point = 21, n_alt = 0
   Insn 29: point = 22, n_alt = 1
   Insn 28: point = 23, n_alt = 0
   Insn 27: point = 24, n_alt = -2
   Insn 26: point = 25, n_alt = 0
   Insn 25: point = 25, n_alt = 0
   Insn 24: point = 25, n_alt = 0
   Insn 23: point = 25, n_alt = 0
   Insn 22: point = 26, n_alt = 0
   Insn 21: point = 26, n_alt = 0
   Insn 20: point = 28, n_alt = 0
   Insn 19: point = 30, n_alt = 0
   Insn 18: point = 31, n_alt = 1
   Insn 17: point = 33, n_alt = 0
  BB 3
   Insn 15: point = 35, n_alt = -1
   Insn 14: point = 35, n_alt = 0
   Insn 13: point = 36, n_alt = 0
   Insn 12: point = 38, n_alt = 0
   Insn 11: point = 40, n_alt = 0
   Insn 10: point = 41, n_alt = 1
   Insn 9: point = 43, n_alt = 0
  BB 15
   Insn 105: point = 45, n_alt = 0
   Insn 104: point = 45, n_alt = 0
  BB 14
   Insn 101: point = 45, n_alt = 0
   Insn 100: point = 45, n_alt = 0
   Insn 99: point = 45, n_alt = 0
   Insn 98: point = 46, n_alt = 0
   Insn 97: point = 46, n_alt = 0
   Insn 96: point = 48, n_alt = 0
  BB 13
   Insn 93: point = 49, n_alt = 0
   Insn 130: point = 50, n_alt = -2
	Hard reg 0 is preferable by r121 with profit 1000
   Insn 129: point = 52, n_alt = -2
	Hard reg 3 is preferable by r120 with profit 1000
   Insn 128: point = 54, n_alt = -2
	Hard reg 1 is preferable by r119 with profit 1000
   Insn 92: point = 56, n_alt = 0
   Insn 91: point = 57, n_alt = 0
   Insn 90: point = 58, n_alt = -2
   Insn 89: point = 60, n_alt = 0
   Insn 88: point = 62, n_alt = 0
   Insn 87: point = 64, n_alt = 0
  BB 12
   Insn 85: point = 65, n_alt = -1
   Insn 84: point = 65, n_alt = 0
   Insn 83: point = 66, n_alt = 4
   Insn 82: point = 68, n_alt = 0
   Insn 81: point = 70, n_alt = 0
   Insn 80: point = 71, n_alt = 0
   Insn 79: point = 71, n_alt = 0
   Insn 78: point = 71, n_alt = 0
   Insn 77: point = 72, n_alt = 0
   Insn 76: point = 72, n_alt = 0
   Insn 75: point = 74, n_alt = 0
  BB 11
   Insn 73: point = 75, n_alt = -1
   Insn 72: point = 75, n_alt = 0
   Insn 71: point = 76, n_alt = 0
   Insn 70: point = 78, n_alt = 0
 r82: [0..44]
 r83: [42..43]
 r84: [39..41]
 r85: [37..38]
 r86: [35..36]
 r87: [32..33]
 r88: [29..31]
 r89: [27..28]
 r90: [25..26]
 r91: [22..24]
 r92: [18..19]
 r93: [13..14]
 r94: [11..12]
 r95: [3..4]
 r96: [75..76]
 r97: [71..72]
 r98: [67..68]
 r99: [65..66]
 r100: [61..62]
 r101: [59..60]
 r102: [53..58]
 r103: [45..46]
 r104: [39..40]
 r105: [29..30]
 r106: [22..23]
 r107: [20..21]
 r108: [15..16]
 r109: [5..6]
 r110: [8..9]
 r111: [77..78]
 r112: [73..74]
 r113: [69..70]
 r114: [63..64]
 r115: [55..57]
 r116: [51..56]
 r117: [47..48]
 r119: [49..54]
 r120: [49..52]
 r121: [49..50]
Compressing live ranges: from 79 to 66 - 83%
Ranges after the compression:
 r82: [0..33]
 r83: [32..33]
 r84: [30..31]
 r85: [28..29]
 r86: [26..27]
 r87: [24..25]
 r88: [22..23]
 r89: [20..21]
 r90: [18..19]
 r91: [16..17]
 r92: [12..13]
 r93: [8..9]
 r94: [6..7]
 r95: [0..1]
 r96: [62..63]
 r97: [58..59]
 r98: [54..55]
 r99: [52..53]
 r100: [48..49]
 r101: [46..47]
 r102: [42..45]
 r103: [34..35]
 r104: [30..31]
 r105: [22..23]
 r106: [16..17]
 r107: [14..15]
 r108: [10..11]
 r109: [2..3]
 r110: [4..5]
 r111: [64..65]
 r112: [60..61]
 r113: [56..57]
 r114: [50..51]
 r115: [44..45]
 r116: [40..45]
 r117: [36..37]
 r119: [38..43]
 r120: [38..41]
 r121: [38..39]

********** Assignment #1: **********

	 Assigning to 119 (cl=CREG, orig=115, freq=2000, tfirst=119, tfreq=2000)...
	   Assign 2 to reload r119 (freq=2000)
	 Assigning to 120 (cl=SIREG, orig=102, freq=2000, tfirst=120, tfreq=2000)...
	   Assign 4 to reload r120 (freq=2000)
	 Assigning to 121 (cl=DIREG, orig=116, freq=2000, tfirst=121, tfreq=2000)...
	   Assign 5 to reload r121 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 126
changing reg in insn 46
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 23
changing reg in insn 27
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 42
changing reg in insn 44
changing reg in insn 71
changing reg in insn 72
changing reg in insn 76
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 97
changing reg in insn 99
changing reg in insn 11
changing reg in insn 19
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
changing reg in insn 41
changing reg in insn 42
changing reg in insn 53
changing reg in insn 54
changing reg in insn 70
changing reg in insn 71
changing reg in insn 75
changing reg in insn 76
changing reg in insn 81
changing reg in insn 82
changing reg in insn 87
changing reg in insn 88
changing reg in insn 91
changing reg in insn 92
changing reg in insn 96
changing reg in insn 97
deleting insn with uid = 27.
deleting insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 100.


bread_page

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={34d,30u} r1={9d,4u,2e} r2={6d,1u} r3={2d,2u} r4={1d,1u} r5={1d,1u} r7={15d,81u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={2e} r17={28d,7u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 487{356d,127u,4e} in 83{79 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 126 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 126 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 126 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 116 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":392:12 75 {*movsi_internal}
     (nil))
(jump_insn 116 5 117 2 (set (pc)
        (label_ref 58)) "fs/buffer.c":392:5 807 {jump}
     (nil)
 -> 58)
(barrier 117 116 60)
(code_label 60 117 8 3 103 (nil) [1 uses])
(note 8 60 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 0 ax [orig:83 i.23_1 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":393:14 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg:SI 1 dx [orig:84 _2 ] [84])
                (ashift:SI (reg:SI 0 ax [orig:83 i.23_1 ] [83])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":393:14 655 {*ashlsi3_1}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [13 b+0 S4 A32])) "fs/buffer.c":393:14 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 0 ax [104])
                    (reg:SI 1 dx [orig:84 _2 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":393:14 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [13 b+0 S4 A32])
            (reg:SI 1 dx [orig:84 _2 ] [84]))
        (nil)))
(insn 13 12 14 3 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (mem:SI (reg/f:SI 0 ax [orig:85 _3 ] [85]) [7 *_3+0 S4 A32])) "fs/buffer.c":393:14 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _4 ] [86])
            (const_int 0 [0]))) "fs/buffer.c":393:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "fs/buffer.c":393:12 806 {*jcc}
     (nil)
 -> 51)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 0 ax [orig:87 i.24_5 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":394:39 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 1 dx [orig:88 _6 ] [88])
                (ashift:SI (reg:SI 0 ax [orig:87 i.24_5 ] [87])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:39 655 {*ashlsi3_1}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [13 b+0 S4 A32])) "fs/buffer.c":394:39 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
                (plus:SI (reg/f:SI 0 ax [105])
                    (reg:SI 1 dx [orig:88 _6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:39 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [13 b+0 S4 A32])
            (reg:SI 1 dx [orig:88 _6 ] [88]))
        (nil)))
(insn 21 20 22 4 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (mem:SI (reg/f:SI 0 ax [orig:89 _7 ] [89]) [7 *_7+0 S4 A32])) "fs/buffer.c":394:26 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:26 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 23 22 24 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 0 ax [orig:90 _8 ] [90])) "fs/buffer.c":394:26 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 24 23 25 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [7 dev+0 S4 A32])) "fs/buffer.c":394:26 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x3]  <function_decl 0x752d7c112000 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/buffer.c":394:26 823 {*call_value}
     (nil)
    (nil))
(insn 26 25 28 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":394:26 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 26 29 4 (set (reg:SI 1 dx [106])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":394:24 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [106])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_23]+0 S4 A32])
        (reg/f:SI 0 ax [orig:91 _9 ] [91])) "fs/buffer.c":394:24 75 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:SI 0 ax [107])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":394:20 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [107])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_23]+0 S4 A32])) "fs/buffer.c":394:20 75 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:92 _10 ] [92])
            (const_int 0 [0]))) "fs/buffer.c":394:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/buffer.c":394:16 806 {*jcc}
     (nil)
 -> 55)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":395:24 75 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg/f:SI 0 ax [orig:93 _11 ] [93])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [108])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_23]+0 S4 A32])) "fs/buffer.c":395:24 75 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:QI 0 ax [orig:94 _12 ] [94])
        (mem:QI (plus:SI (reg/f:SI 0 ax [orig:93 _11 ] [93])
                (const_int 10 [0xa])) [0 _11->b_uptodate+0 S1 A16])) "fs/buffer.c":395:27 77 {*movqi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:94 _12 ] [94])
            (const_int 0 [0]))) "fs/buffer.c":395:20 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/buffer.c":395:20 806 {*jcc}
     (nil)
 -> 55)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:SI 0 ax [109])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":396:21 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 0 ax [orig:95 _13 ] [95])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [109])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_23]+0 S4 A32])) "fs/buffer.c":396:21 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":396:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 44 43 45 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 0 ax [orig:95 _13 ] [95])) "fs/buffer.c":396:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 45 44 47 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 0 [0])) "fs/buffer.c":396:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 47 45 48 6 (call (mem:QI (symbol_ref:SI ("ll_rw_block") [flags 0x41]  <function_decl 0x752d7c0f2700 ll_rw_block>) [0 ll_rw_block S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":396:21 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 48 47 118 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":396:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 118 48 119 6 (set (pc)
        (label_ref 55)) 807 {jump}
     (nil)
 -> 55)
(barrier 119 118 51)
(code_label 51 119 52 7 101 (nil) [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":398:19 75 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [110])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_23]+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":398:19 75 {*movsi_internal}
     (nil))
(code_label 55 54 56 8 102 (nil) [3 uses])
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":392:25 209 {*addsi_1}
     (nil))
(code_label 58 57 59 9 100 (nil) [1 uses])
(note 59 58 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 59 64 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [7 i+0 S4 A32])
            (const_int 3 [0x3]))) "fs/buffer.c":392:19 11 {*cmpsi_1}
     (nil))
(jump_insn 64 63 65 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/buffer.c":392:19 806 {*jcc}
     (nil)
 -> 60)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 120 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/buffer.c":399:12 75 {*movsi_internal}
     (nil))
(jump_insn 120 66 121 10 (set (pc)
        (label_ref 106)) "fs/buffer.c":399:5 807 {jump}
     (nil)
 -> 106)
(barrier 121 120 108)
(code_label 108 121 69 11 107 (nil) [1 uses])
(note 69 108 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":400:11 75 {*movsi_internal}
     (nil))
(insn 71 70 72 11 (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [111])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":400:11 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:96 _14 ] [96])
            (const_int 0 [0]))) "fs/buffer.c":400:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "fs/buffer.c":400:8 806 {*jcc}
     (nil)
 -> 102)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 12 (set (reg:SI 0 ax [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":401:9 75 {*movsi_internal}
     (nil))
(insn 76 75 77 12 (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [112])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":401:9 75 {*movsi_internal}
     (nil))
(insn 77 76 78 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":401:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 78 77 79 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 0 ax [orig:97 _15 ] [97])) "fs/buffer.c":401:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 79 78 80 12 (call (mem:QI (symbol_ref:SI ("wait_on_buffer") [flags 0x3]  <function_decl 0x752d7c140e00 wait_on_buffer>) [0 wait_on_buffer S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":401:9 812 {*call}
     (nil)
    (nil))
(insn 80 79 81 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":401:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 81 80 82 12 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":402:15 75 {*movsi_internal}
     (nil))
(insn 82 81 83 12 (set (reg/f:SI 0 ax [orig:98 _16 ] [98])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [113])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":402:15 75 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (reg:QI 0 ax [orig:99 _17 ] [99])
        (mem:QI (plus:SI (reg/f:SI 0 ax [orig:98 _16 ] [98])
                (const_int 10 [0xa])) [0 _16->b_uptodate+0 S1 A16])) "fs/buffer.c":402:18 77 {*movqi_internal}
     (nil))
(insn 84 83 85 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:99 _17 ] [99])
            (const_int 0 [0]))) "fs/buffer.c":402:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 85 84 86 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "fs/buffer.c":402:12 806 {*jcc}
     (nil)
 -> 94)
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 13 (set (reg:SI 0 ax [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 88 87 89 13 (set (reg/f:SI 0 ax [orig:100 _18 ] [100])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [114])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 89 88 90 13 (set (reg/f:SI 0 ax [orig:101 _19 ] [101])
        (mem/f:SI (reg/f:SI 0 ax [orig:100 _18 ] [100]) [3 _18->b_data+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 90 89 91 13 (set (reg:SI 3 bx [orig:102 _20 ] [102])
        (reg/f:SI 0 ax [orig:101 _19 ] [101])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 91 90 92 13 (set (reg:SI 1 dx [115])
        (const_int 256 [0x100])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 92 91 128 13 (set (reg:SI 0 ax [116])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [4 address+0 S4 A32])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 128 92 129 13 (set (reg:SI 2 cx [115])
        (reg:SI 1 dx [115])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 129 128 130 13 (set (reg:SI 4 si [orig:102 _20 ] [102])
        (reg:SI 3 bx [orig:102 _20 ] [102])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 130 129 93 13 (set (reg:SI 5 di [116])
        (reg:SI 0 ax [116])) "fs/buffer.c":403:13 75 {*movsi_internal}
     (nil))
(insn 93 130 94 13 (parallel [
            (asm_operands/v ("cld
	rep
	movsl
	") ("") 0 [
                    (reg:SI 2 cx [115])
                    (reg:SI 4 si [orig:102 _20 ] [102])
                    (reg:SI 5 di [116])
                ]
                 [
                    (asm_input:SI ("c") fs/buffer.c:403)
                    (asm_input:SI ("S") fs/buffer.c:403)
                    (asm_input:SI ("D") fs/buffer.c:403)
                ]
                 [] fs/buffer.c:403)
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":403:13 -1
     (nil))
(code_label 94 93 95 14 106 (nil) [1 uses])
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg:SI 0 ax [117])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [7 i+0 S4 A32])) "fs/buffer.c":404:9 75 {*movsi_internal}
     (nil))
(insn 97 96 98 14 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [117])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 12 [0xc])) [1 bh[i_24]+0 S4 A32])) "fs/buffer.c":404:9 75 {*movsi_internal}
     (nil))
(insn 98 97 99 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":404:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 99 98 100 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 0 ax [orig:103 _21 ] [103])) "fs/buffer.c":404:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 100 99 101 14 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x3]  <function_decl 0x752d7c0f2f00 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/buffer.c":404:9 812 {*call}
     (nil)
    (nil))
(insn 101 100 102 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":404:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 102 101 103 15 105 (nil) [1 uses])
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":399:25 209 {*addsi_1}
     (nil))
(insn 105 104 106 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 48 [0x30])) [4 address+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 48 [0x30])) [4 address+0 S4 A32])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/buffer.c":399:37 209 {*addsi_1}
     (nil))
(code_label 106 105 107 16 104 (nil) [1 uses])
(note 107 106 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 107 112 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [7 i+0 S4 A32])
            (const_int 3 [0x3]))) "fs/buffer.c":399:19 11 {*cmpsi_1}
     (nil))
(jump_insn 112 111 122 16 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "fs/buffer.c":399:19 806 {*jcc}
     (nil)
 -> 108)
(note 122 112 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 113 18 (const_int 0 [0]) "fs/buffer.c":406:1 843 {nop}
     (nil))
(note 113 123 124 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 124 113 125 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 127 19 (const_int 0 [0]) "fs/buffer.c":406:1 843 {nop}
     (nil))
(note 127 125 0 NOTE_INSN_DELETED)
