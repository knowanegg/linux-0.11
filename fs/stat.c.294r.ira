
;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1325, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r85,l0) best Q_REGS, allocno Q_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 14(l0): point = 0
   Insn 10(l0): point = 3
   Insn 9(l0): point = 5
   Insn 8(l0): point = 7
   Insn 4(l0): point = 9
   Insn 3(l0): point = 11
   Insn 2(l0): point = 13
   Insn 15(l0): point = 15
 a0(r85): [4..7]
 a1(r86): [4..5]
 a2(r84): [10..11]
 a3(r83): [12..13]
 a4(r82): [15..15]
Compressing live ranges: from 18 to 7 - 38%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r86): [0..1]
 a2(r84): [2..3]
 a3(r83): [4..5]
 a4(r82): [6..6]
  regions=1, blocks=4, points=7
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    3:r83  l0     0    2:r84  l0     0    0:r85  l0     0
    1:r86  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,5u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 33{14d,19u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 15 3 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 84)
        (subreg:QI (reg:SI 83) 0)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 83)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])
        (reg:QI 84)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 85)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 85)
                    (mem:QI (reg/f:SI 86) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_DEAD (reg:QI 85)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))

;; Function cp_stat (cp_stat, funcdef_no=8, decl_uid=1364, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 83.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 8 count 8 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 5 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 6 }
;; 6 succs { 5 }
;; 5 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r102,l0) best Q_REGS, allocno Q_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a23 (r88,l0) best Q_REGS, allocno Q_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a27 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a1(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a4(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a8(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a10(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a16(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a24(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a28(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 82(l0): point = 0
   Insn 80(l0): point = 4
   Insn 65(l0): point = 7
   Insn 64(l0): point = 9
   Insn 63(l0): point = 11
   Insn 62(l0): point = 13
   Insn 61(l0): point = 15
   Insn 60(l0): point = 17
   Insn 59(l0): point = 19
   Insn 58(l0): point = 21
   Insn 57(l0): point = 23
   Insn 56(l0): point = 25
   Insn 55(l0): point = 27
   Insn 54(l0): point = 29
   Insn 53(l0): point = 31
   Insn 52(l0): point = 33
   Insn 73(l0): point = 36
   Insn 72(l0): point = 38
   Insn 68(l0): point = 40
   Insn 77(l0): point = 43
   Insn 48(l0): point = 45
   Insn 47(l0): point = 47
   Insn 46(l0): point = 49
   Insn 45(l0): point = 51
   Insn 44(l0): point = 53
   Insn 43(l0): point = 55
   Insn 42(l0): point = 57
   Insn 41(l0): point = 59
   Insn 40(l0): point = 61
   Insn 39(l0): point = 63
   Insn 38(l0): point = 65
   Insn 37(l0): point = 67
   Insn 36(l0): point = 69
   Insn 35(l0): point = 71
   Insn 34(l0): point = 73
   Insn 33(l0): point = 75
   Insn 32(l0): point = 77
   Insn 31(l0): point = 79
   Insn 30(l0): point = 81
   Insn 29(l0): point = 83
   Insn 28(l0): point = 85
   Insn 27(l0): point = 87
   Insn 26(l0): point = 89
   Insn 25(l0): point = 91
   Insn 24(l0): point = 93
   Insn 23(l0): point = 95
   Insn 22(l0): point = 97
   Insn 21(l0): point = 99
   Insn 20(l0): point = 101
   Insn 19(l0): point = 103
   Insn 18(l0): point = 105
   Insn 17(l0): point = 107
   Insn 16(l0): point = 109
   Insn 15(l0): point = 111
   Insn 14(l0): point = 113
   Insn 13(l0): point = 115
   Insn 12(l0): point = 117
   Insn 11(l0): point = 119
   Insn 10(l0): point = 121
   Insn 9(l0): point = 123
   Insn 8(l0): point = 125
   Insn 7(l0): point = 127
   Insn 6(l0): point = 129
   Insn 5(l0): point = 131
   Insn 83(l0): point = 133
 a0(r104): [39..40]
 a1(r103): [14..19]
 a2(r99): [16..29]
 a3(r102): [20..21]
 a4(r101): [22..23]
 a5(r100): [24..27]
 a6(r117): [24..25]
 a7(r116): [30..31]
 a8(r98): [30..33]
 a9(r97): [48..49]
 a10(r96): [50..51]
 a11(r115): [52..53]
 a12(r95): [56..57]
 a13(r94): [58..59]
 a14(r114): [60..61]
 a15(r93): [64..65]
 a16(r92): [66..67]
 a17(r113): [68..69]
 a18(r91): [72..73]
 a19(r90): [74..75]
 a20(r112): [76..77]
 a21(r89): [80..81]
 a22(r111): [82..83]
 a23(r88): [86..87]
 a24(r110): [88..89]
 a25(r87): [92..93]
 a26(r109): [94..95]
 a27(r86): [98..99]
 a28(r108): [100..101]
 a29(r85): [104..105]
 a30(r107): [106..107]
 a31(r84): [110..111]
 a32(r106): [112..113]
 a33(r83): [116..117]
 a34(r105): [118..119]
 a35(r82): [126..133]
Compressing live ranges: from 136 to 66 - 48%
Ranges after the compression:
 a0(r104): [10..11]
 a1(r103): [0..1]
 a2(r99): [0..7]
 a3(r102): [2..3]
 a4(r101): [4..5]
 a5(r100): [6..7]
 a6(r117): [6..7]
 a7(r116): [8..9]
 a8(r98): [8..9]
 a9(r97): [12..13]
 a10(r96): [14..15]
 a11(r115): [16..17]
 a12(r95): [18..19]
 a13(r94): [20..21]
 a14(r114): [22..23]
 a15(r93): [24..25]
 a16(r92): [26..27]
 a17(r113): [28..29]
 a18(r91): [30..31]
 a19(r90): [32..33]
 a20(r112): [34..35]
 a21(r89): [36..37]
 a22(r111): [38..39]
 a23(r88): [40..41]
 a24(r110): [42..43]
 a25(r87): [44..45]
 a26(r109): [46..47]
 a27(r86): [48..49]
 a28(r108): [50..51]
 a29(r85): [52..53]
 a30(r107): [54..55]
 a31(r84): [56..57]
 a32(r106): [58..59]
 a33(r83): [60..61]
 a34(r105): [62..63]
 a35(r82): [64..65]
  pref0:a35(r82)<-hr3@1500
  regions=1, blocks=8, points=66
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
   35:r82  l0     0   33:r83  l0     0   31:r84  l0     0   29:r85  l0     0
   27:r86  l0     0   25:r87  l0     0   23:r88  l0     0   21:r89  l0     0
   19:r90  l0     0   18:r91  l0     0   16:r92  l0     0   15:r93  l0     0
   13:r94  l0     0   12:r95  l0     0   10:r96  l0     0    9:r97  l0     0
    8:r98  l0     1    2:r99  l0     1    5:r100 l0     0    4:r101 l0     0
    3:r102 l0     0    1:r103 l0     0    0:r104 l0     0   34:r105 l0     0
   32:r106 l0     0   30:r107 l0     0   28:r108 l0     0   26:r109 l0     0
   24:r110 l0     0   22:r111 l0     0   20:r112 l0     0   17:r113 l0     0
   14:r114 l0     0   11:r115 l0     0    7:r116 l0     0    6:r117 l0     2
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


cp_stat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={1d,1u} r6={1d,7u} r7={9d,21u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,19u,1e} r17={12d,1u} r18={2d} r19={1d,25u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 312{200d,110u,2e} in 65{63 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 83 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 83 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 83 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":21:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (const_int 32 [0x20])) "fs/stat.c":21:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 7 6 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 statbuf+0 S4 A32])) "fs/stat.c":21:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/stat.c":21:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x78974d738500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "fs/stat.c":21:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":21:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 12 2 (set (reg/f:SI 105)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":22:23 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 105)
                (const_int 44 [0x2c])) [2 inode_28(D)->i_dev+0 S2 A32])) "fs/stat.c":22:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 13 12 14 2 (set (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [2 tmp.st_dev+0 S2 A32])
        (reg:HI 83 [ _1 ])) "fs/stat.c":22:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":23:23 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 106)
                (const_int 46 [0x2e])) [2 inode_28(D)->i_num+0 S2 A16])) "fs/stat.c":23:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 16 15 17 2 (set (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                (const_int -34 [0xffffffffffffffde])) [2 tmp.st_ino+0 S2 A16])
        (reg:HI 84 [ _2 ])) "fs/stat.c":23:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(insn 17 16 18 2 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":24:24 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:HI 85 [ _3 ])
        (mem:HI (reg/f:SI 107) [2 inode_28(D)->i_mode+0 S2 A32])) "fs/stat.c":24:24 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 19 18 20 2 (set (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 tmp.st_mode+0 S2 A32])
        (reg:HI 85 [ _3 ])) "fs/stat.c":24:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":25:25 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:QI 86 [ _4 ])
        (mem:QI (plus:SI (reg/f:SI 108)
                (const_int 13 [0xd])) [0 inode_28(D)->i_nlinks+0 S1 A8])) "fs/stat.c":25:25 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 22 21 23 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -30 [0xffffffffffffffe2])) [0 tmp.st_nlink+0 S1 A16])
        (reg:QI 86 [ _4 ])) "fs/stat.c":25:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86 [ _4 ])
        (nil)))
(insn 23 22 24 2 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":26:23 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 109)
                (const_int 2 [0x2])) [2 inode_28(D)->i_uid+0 S2 A16])) "fs/stat.c":26:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 25 24 26 2 (set (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 tmp.st_uid+0 S2 A32])
        (reg:HI 87 [ _5 ])) "fs/stat.c":26:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(insn 26 25 27 2 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":27:23 75 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:QI 88 [ _6 ])
        (mem:QI (plus:SI (reg/f:SI 110)
                (const_int 12 [0xc])) [0 inode_28(D)->i_gid+0 S1 A32])) "fs/stat.c":27:23 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 28 27 29 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -26 [0xffffffffffffffe6])) [0 tmp.st_gid+0 S1 A16])
        (reg:QI 88 [ _6 ])) "fs/stat.c":27:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ _6 ])
        (nil)))
(insn 29 28 30 2 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":28:32 75 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 111)
                (const_int 14 [0xe])) [2 inode_28(D)->i_zone[0]+0 S2 A16])) "fs/stat.c":28:32 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 31 30 32 2 (set (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 tmp.st_rdev+0 S2 A32])
        (reg:HI 89 [ _7 ])) "fs/stat.c":28:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (nil)))
(insn 32 31 33 2 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":29:24 75 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:SI 90 [ _8 ])
        (mem:SI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [3 inode_28(D)->i_size+0 S4 A32])) "fs/stat.c":29:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 34 33 35 2 (set (reg:SI 91 [ _9 ])
        (reg:SI 90 [ _8 ])) "fs/stat.c":29:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [3 tmp.st_size+0 S4 A32])
        (reg:SI 91 [ _9 ])) "fs/stat.c":29:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(insn 36 35 37 2 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":30:25 75 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:SI 92 [ _10 ])
        (mem:SI (plus:SI (reg/f:SI 113)
                (const_int 36 [0x24])) [3 inode_28(D)->i_atime+0 S4 A32])) "fs/stat.c":30:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 38 37 39 2 (set (reg:SI 93 [ _11 ])
        (reg:SI 92 [ _10 ])) "fs/stat.c":30:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(insn 39 38 40 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 tmp.st_atime+0 S4 A32])
        (reg:SI 93 [ _11 ])) "fs/stat.c":30:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(insn 40 39 41 2 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":31:25 75 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 94 [ _12 ])
        (mem:SI (plus:SI (reg/f:SI 114)
                (const_int 8 [0x8])) [3 inode_28(D)->i_mtime+0 S4 A32])) "fs/stat.c":31:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 42 41 43 2 (set (reg:SI 95 [ _13 ])
        (reg:SI 94 [ _12 ])) "fs/stat.c":31:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (nil)))
(insn 43 42 44 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [3 tmp.st_mtime+0 S4 A32])
        (reg:SI 95 [ _13 ])) "fs/stat.c":31:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (nil)))
(insn 44 43 45 2 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/stat.c":32:25 75 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SI 96 [ _14 ])
        (mem:SI (plus:SI (reg/f:SI 115)
                (const_int 40 [0x28])) [3 inode_28(D)->i_ctime+0 S4 A32])) "fs/stat.c":32:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 46 45 47 2 (set (reg:SI 97 [ _15 ])
        (reg:SI 96 [ _14 ])) "fs/stat.c":32:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(insn 47 46 48 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 tmp.st_ctime+0 S4 A32])
        (reg:SI 97 [ _15 ])) "fs/stat.c":32:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (nil)))
(insn 48 47 77 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
        (const_int 0 [0])) "fs/stat.c":33:12 75 {*movsi_internal}
     (nil))
(jump_insn 77 48 78 2 (set (pc)
        (label_ref 66)) "fs/stat.c":33:5 807 {jump}
     (nil)
 -> 66)
(barrier 78 77 69)
(code_label 69 78 51 3 4 (nil) [1 uses])
(note 51 69 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 3 (set (reg:SI 98 [ i.0_16 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/stat.c":34:9 75 {*movsi_internal}
     (nil))
(insn 53 52 54 3 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 statbuf+0 S4 A32])) "fs/stat.c":34:9 75 {*movsi_internal}
     (nil))
(insn 54 53 55 3 (parallel [
            (set (reg/f:SI 99 [ _17 ])
                (plus:SI (reg:SI 98 [ i.0_16 ])
                    (reg/f:SI 116)))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":34:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_DEAD (reg:SI 98 [ i.0_16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [9 statbuf+0 S4 A32])
                        (reg:SI 98 [ i.0_16 ]))
                    (nil))))))
(insn 55 54 56 3 (set (reg:SI 100 [ i.1_18 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/stat.c":34:35 75 {*movsi_internal}
     (nil))
(insn 56 55 57 3 (parallel [
            (set (reg:SI 117)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":34:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 57 56 58 3 (parallel [
            (set (reg/f:SI 101 [ _19 ])
                (plus:SI (reg:SI 117)
                    (reg:SI 100 [ i.1_18 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":34:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_DEAD (reg:SI 100 [ i.1_18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 58 57 59 3 (set (reg:QI 102 [ _20 ])
        (mem:QI (reg/f:SI 101 [ _19 ]) [0 *_19+0 S1 A8])) "fs/stat.c":34:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
        (nil)))
(insn 59 58 60 3 (set (reg:SI 103 [ _21 ])
        (sign_extend:SI (reg:QI 102 [ _20 ]))) "fs/stat.c":34:9 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 102 [ _20 ])
        (nil)))
(insn 60 59 61 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":34:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 61 60 62 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg/f:SI 99 [ _17 ])) "fs/stat.c":34:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 99 [ _17 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 62 61 63 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg:SI 103 [ _21 ])) "fs/stat.c":34:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 103 [ _21 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 63 62 64 3 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x78974d738a00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/stat.c":34:9 812 {*call}
     (nil)
    (nil))
(insn 64 63 65 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":34:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 65 64 66 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":33:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 66 65 67 4 3 (nil) [1 uses])
(note 67 66 68 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 72 4 (set (reg:SI 104 [ i.2_22 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [7 i+0 S4 A32])) "fs/stat.c":33:19 75 {*movsi_internal}
     (nil))
(insn 72 68 73 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 104 [ i.2_22 ])
            (const_int 31 [0x1f]))) "fs/stat.c":33:19 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ i.2_22 ])
        (nil)))
(jump_insn 73 72 79 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/stat.c":33:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 69)
(note 79 73 80 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 74 6 (const_int 0 [0]) "fs/stat.c":35:1 843 {nop}
     (nil))
(note 74 80 81 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 81 74 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 0 7 (const_int 0 [0]) "fs/stat.c":35:1 843 {nop}
     (nil))

;; Function sys_stat (sys_stat, funcdef_no=9, decl_uid=1374, cgraph_uid=10, symbol_order=9)

scanning new insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a2(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a3(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 33(l0): point = 4
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 27(l0): point = 13
   Insn 26(l0): point = 15
   Insn 25(l0): point = 17
   Insn 24(l0): point = 19
   Insn 23(l0): point = 21
   Insn 22(l0): point = 23
   Insn 21(l0): point = 25
   Insn 20(l0): point = 27
   Insn 40(l0): point = 30
   Insn 15(l0): point = 32
   Insn 13(l0): point = 35
   Insn 12(l0): point = 37
   Insn 11(l0): point = 39
   Insn 10(l0): point = 41
   Insn 9(l0): point = 43
   Insn 8(l0): point = 45
   Insn 7(l0): point = 47
   Insn 6(l0): point = 49
   Insn 5(l0): point = 51
   Insn 42(l0): point = 53
 a0(r84): [3..4]
 a1(r83): [30..32] [5..7]
 a2(r82): [35..53] [14..29]
 a3(r85): [40..41]
Compressing live ranges: from 56 to 10 - 17%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [6..7] [2..3]
 a2(r82): [8..9] [4..5]
 a3(r85): [8..9]
  pref0:a3(r85)<-hr0@1500
  pref1:a0(r84)<-hr0@1500
  pref2:a2(r82)<-hr3@1500
  regions=1, blocks=6, points=10
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    2:r82  l0     3    1:r83  l0     0    0:r84  l0     0    3:r85  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_stat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={2d,2u} r6={1d,5u} r7={11d,24u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,6u} r17={11d,1u} r18={3d} r19={1d,9u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,2u} r83={2d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 295{240d,55u,0e} in 26{23 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 42 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 42 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 42 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":41:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [6 filename+0 S4 A32])) "fs/stat.c":41:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/stat.c":41:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x78974d715500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/stat.c":41:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":41:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 85)
        (reg:SI 0 ax)) "fs/stat.c":41:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 inode+0 S4 A32])
        (reg:SI 85)) "fs/stat.c":41:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [8 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/stat.c":41:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/stat.c":41:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 40 3 (set (reg:SI 83 [ _1 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/stat.c":42:16 75 {*movsi_internal}
     (nil))
(jump_insn 40 15 41 3 (set (pc)
        (label_ref 31)) "fs/stat.c":42:16 807 {jump}
     (nil)
 -> 31)
(barrier 41 40 18)
(code_label 18 41 19 4 6 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":43:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 statbuf+0 S4 A32])) "fs/stat.c":43:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 22 21 23 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 inode+0 S4 A32])) "fs/stat.c":43:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 22 24 4 (call (mem:QI (symbol_ref:SI ("cp_stat") [flags 0x3]  <function_decl 0x78974d73a700 cp_stat>) [0 cp_stat S1 A8])
        (const_int 16 [0x10])) "fs/stat.c":43:5 812 {*call}
     (nil)
    (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":43:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 25 24 26 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":44:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 26 25 27 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [8 inode+0 S4 A32])) "fs/stat.c":44:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 27 26 28 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/stat.c":44:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x78974d6d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/stat.c":44:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":44:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 30 29 31 4 (set (reg:SI 83 [ _1 ])
        (const_int 0 [0])) "fs/stat.c":45:12 75 {*movsi_internal}
     (nil))
(code_label 31 30 32 5 7 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 37 5 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _1 ])) "fs/stat.c":46:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 37 33 38 5 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/stat.c":46:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 38 37 0 5 (use (reg/i:SI 0 ax)) "fs/stat.c":46:1 -1
     (nil))

;; Function sys_fstat (sys_fstat, funcdef_no=10, decl_uid=1379, cgraph_uid=11, symbol_order=10)

scanning new insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 10 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 44(l0): point = 0
   Insn 43(l0): point = 2
   Insn 39(l0): point = 4
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 34(l0): point = 11
   Insn 33(l0): point = 13
   Insn 32(l0): point = 15
   Insn 31(l0): point = 17
   Insn 46(l0): point = 20
   Insn 26(l0): point = 22
   Insn 23(l0): point = 25
   Insn 22(l0): point = 27
   Insn 21(l0): point = 29
   Insn 20(l0): point = 31
   Insn 19(l0): point = 33
   Insn 17(l0): point = 36
   Insn 16(l0): point = 38
   Insn 15(l0): point = 40
   Insn 14(l0): point = 42
   Insn 13(l0): point = 44
   Insn 12(l0): point = 46
   Insn 11(l0): point = 48
   Insn 10(l0): point = 50
   Insn 8(l0): point = 53
   Insn 7(l0): point = 55
   Insn 48(l0): point = 57
 a0(r85): [3..4]
 a1(r84): [20..22] [5..7]
 a2(r91): [30..31]
 a3(r90): [32..33]
 a4(r89): [41..42]
 a5(r83): [43..48]
 a6(r87): [43..44]
 a7(r88): [45..46]
 a8(r86): [49..50]
 a9(r82): [51..57]
Compressing live ranges: from 60 to 20 - 33%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..5]
 a2(r91): [6..7]
 a3(r90): [8..9]
 a4(r89): [10..11]
 a5(r83): [12..15]
 a6(r87): [12..13]
 a7(r88): [14..15]
 a8(r86): [16..17]
 a9(r82): [18..19]
  pref0:a0(r85)<-hr0@1500
  regions=1, blocks=8, points=20
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r82  l0     0    5:r83  l0     0    1:r84  l0     0    0:r85  l0     0
    8:r86  l0     0    6:r87  l0     1    7:r88  l0     1    4:r89  l0     0
    3:r90  l0     0    2:r91  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_fstat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r6={1d,7u} r7={5d,14u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,9u,1e} r17={8d,3u} r18={1d} r19={1d,13u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={2d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 158{99d,58u,1e} in 27{26 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 48 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 48 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 48 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [7 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/stat.c":53:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "fs/stat.c":53:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 24)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 86)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x78974d72e120 current>)
                        ] UNSPEC_GOT))) [11  S4 A8])) "fs/stat.c":53:39 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 11 10 12 3 (set (reg/f:SI 83 [ current.3_1 ])
        (mem/f/c:SI (reg/f:SI 86) [5 current+0 S4 A32])) "fs/stat.c":53:39 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 12 11 13 3 (set (reg:SI 88)
        (mem/c:SI (reg/f:SI 16 argp) [7 fd+0 S4 A32])) "fs/stat.c":53:30 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 87)
                (plus:SI (reg:SI 88)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":53:30 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [7 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 14 13 15 3 (set (reg/f:SI 89)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 87)
                    (const_int 4 [0x4]))
                (reg/f:SI 83 [ current.3_1 ])) [10 current.3_1->filp[fd_4(D)]+0 S4 A32])) "fs/stat.c":53:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (expr_list:REG_DEAD (reg/f:SI 83 [ current.3_1 ])
            (nil))))
(insn 15 14 16 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])
        (reg/f:SI 89)) "fs/stat.c":53:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])
            (const_int 0 [0]))) "fs/stat.c":53:23 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "fs/stat.c":53:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 90)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/stat.c":53:62 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 91)
        (mem/f:SI (plus:SI (reg/f:SI 90)
                (const_int 8 [0x8])) [8 f_6->f_inode+0 S4 A32])) "fs/stat.c":53:62 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 21 20 22 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 inode+0 S4 A32])
        (reg/f:SI 91)) "fs/stat.c":53:62 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [8 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/stat.c":53:51 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/stat.c":53:51 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
(code_label 24 23 25 5 9 (nil) [2 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 46 5 (set (reg:SI 84 [ _2 ])
        (const_int -9 [0xfffffffffffffff7])) "fs/stat.c":54:16 75 {*movsi_internal}
     (nil))
(jump_insn 46 26 47 5 (set (pc)
        (label_ref 37)) "fs/stat.c":54:16 807 {jump}
     (nil)
 -> 37)
(barrier 47 46 29)
(code_label 29 47 30 6 10 (nil) [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":55:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 32 31 33 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 statbuf+0 S4 A32])) "fs/stat.c":55:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 inode+0 S4 A32])) "fs/stat.c":55:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 33 35 6 (call (mem:QI (symbol_ref:SI ("cp_stat") [flags 0x3]  <function_decl 0x78974d73a700 cp_stat>) [0 cp_stat S1 A8])
        (const_int 16 [0x10])) "fs/stat.c":55:5 812 {*call}
     (nil)
    (nil))
(insn 35 34 36 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/stat.c":55:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 37 6 (set (reg:SI 84 [ _2 ])
        (const_int 0 [0])) "fs/stat.c":56:12 75 {*movsi_internal}
     (nil))
(code_label 37 36 38 7 11 (nil) [1 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 43 7 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ _2 ])) "fs/stat.c":57:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 43 39 44 7 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) "fs/stat.c":57:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 44 43 0 7 (use (reg/i:SI 0 ax)) "fs/stat.c":57:1 -1
     (nil))
