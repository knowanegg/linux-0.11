
;; Function _get_base (_get_base, funcdef_no=0, decl_uid=1278, cgraph_uid=1, symbol_order=0)

scanning new insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 11(l0): point = 8
   Insn 12(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 5(l0): point = 22
   Insn 23(l0): point = 24
 a0(r87): [3..4]
 a1(r86): [5..6]
 a2(r91): [9..10]
 a3(r83): [11..20]
 a4(r84): [11..16]
 a5(r85): [11..12]
 a6(r90): [13..14]
 a7(r89): [17..18]
 a8(r88): [21..22]
 a9(r82): [24..24]
Compressing live ranges: from 27 to 15 - 55%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r86): [2..3]
 a2(r91): [4..5]
 a3(r83): [6..11]
 a4(r84): [6..9]
 a5(r85): [6..7]
 a6(r90): [8..9]
 a7(r89): [10..11]
 a8(r88): [12..13]
 a9(r82): [14..14]
  pref0:a2(r91)<-hr1@1000
  pref1:a0(r87)<-hr0@1500
  regions=1, blocks=3, points=15
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    9:r82  l0     0    3:r83  l0     0    4:r84  l0     1    5:r85  l0     2
    1:r86  l0     0    0:r87  l0     0    8:r88  l0     0    7:r89  l0     1
    6:r90  l0     2    2:r91  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_get_base

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,4u,3e} r17={5d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 49{23d,23u,3e} in 13{13 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 23 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 88)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/linux/sched.h":181:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 88)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:28 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 7 6 8 2 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/linux/sched.h":181:48 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 89)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:48 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 9 8 10 2 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/linux/sched.h":181:68 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg/f:SI 90)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:68 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 12 10 11 2 (parallel [
            (set (reg:SI 91 [ __base ])
                (asm_operands:SI ("movb %3, %%dh
	movb %2, %%dl
	shll $16, %%edx
	movw %1, %%dx") ("=&d") 0 [
                        (mem:QI (reg/f:SI 83 [ _1 ]) [0 *_1+0 S1 A8])
                        (mem:QI (reg/f:SI 84 [ _2 ]) [0 *_2+0 S1 A8])
                        (mem:QI (reg/f:SI 85 [ _3 ]) [0 *_3+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                    ]
                     [] include/linux/sched.h:177))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":177:5 -1
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 11 12 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __base+0 S4 A32])
        (reg:SI 91 [ __base ])) "include/linux/sched.h":177:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ __base ])
        (nil)))
(insn 13 11 16 2 (set (reg:SI 86 [ _7 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __base+0 S4 A32])) "include/linux/sched.h":182:12 75 {*movsi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:SI 87 [ <retval> ])
        (reg:SI 86 [ _7 ])) "include/linux/sched.h":182:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _7 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) "include/linux/sched.h":183:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:SI 0 ax)) "include/linux/sched.h":183:1 -1
     (nil))

;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1359, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 5(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 18(l0): point = 14
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..10]
 a4(r87): [11..12]
 a5(r82): [14..14]
Compressing live ranges: from 17 to 11 - 64%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [8..9]
 a5(r82): [10..10]
  pref0:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    4:r87  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 31{16d,15u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 86 [ _v ])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 87) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 7 8 2 (set (reg/v:QI 83 [ _v ])
        (reg:QI 86 [ _v ])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86 [ _v ])
        (nil)))
(insn 8 5 11 2 (set (reg:QI 84 [ _4 ])
        (reg/v:QI 83 [ _v ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 83 [ _v ])
        (nil)))
(insn 11 8 15 2 (set (reg:QI 85 [ <retval> ])
        (reg:QI 84 [ _4 ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84 [ _4 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:QI 0 ax)
        (reg:QI 85 [ <retval> ])) "include/asm/segment.h":10:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 85 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))

;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1364, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r85,l0) best Q_REGS, allocno Q_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 14(l0): point = 0
   Insn 10(l0): point = 3
   Insn 9(l0): point = 5
   Insn 8(l0): point = 7
   Insn 4(l0): point = 9
   Insn 3(l0): point = 11
   Insn 2(l0): point = 13
   Insn 15(l0): point = 15
 a0(r85): [4..7]
 a1(r86): [4..5]
 a2(r84): [10..11]
 a3(r83): [12..13]
 a4(r82): [15..15]
Compressing live ranges: from 18 to 7 - 38%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r86): [0..1]
 a2(r84): [2..3]
 a3(r83): [4..5]
 a4(r82): [6..6]
  regions=1, blocks=4, points=7
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    3:r83  l0     0    2:r84  l0     0    0:r85  l0     0
    1:r86  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,5u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 33{14d,19u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 15 3 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 84)
        (subreg:QI (reg:SI 83) 0)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 83)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])
        (reg:QI 84)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 85)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 85)
                    (mem:QI (reg/f:SI 86) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_DEAD (reg:QI 85)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))

;; Function put_fs_long (put_fs_long, funcdef_no=3, decl_uid=1368, cgraph_uid=4, symbol_order=3)

scanning new insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 11(l0): point = 0
   Insn 7(l0): point = 3
   Insn 6(l0): point = 5
   Insn 5(l0): point = 7
   Insn 12(l0): point = 9
 a0(r83): [4..7]
 a1(r84): [4..5]
 a2(r82): [9..9]
Compressing live ranges: from 12 to 3 - 25%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r84): [0..1]
 a2(r82): [2..2]
  regions=1, blocks=4, points=3
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    0:r83  l0     0    1:r84  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,3u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 27{12d,15u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [1 val+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 84)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [19 addr+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("movl %0, %%fs:%1") ("") 0 [
                    (reg:SI 83)
                    (mem:SI (reg/f:SI 84) [1 *addr_3(D)+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("r") include/asm/segment.h:19)
                    (asm_input:SI ("m") include/asm/segment.h:19)
                ]
                 [] include/asm/segment.h:19)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":19:5 -1
     (expr_list:REG_DEAD (reg/f:SI 84)
        (expr_list:REG_DEAD (reg:SI 83)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 0 3 (const_int 0 [0]) "include/asm/segment.h":20:1 843 {nop}
     (nil))

;; Function get_fs_long (get_fs_long, funcdef_no=4, decl_uid=1371, cgraph_uid=5, symbol_order=4)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 5(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 18(l0): point = 14
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..10]
 a3(r86): [11..12]
 a4(r82): [14..14]
Compressing live ranges: from 17 to 9 - 52%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r86): [6..7]
 a4(r82): [8..8]
  pref0:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=9
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
    3:r86  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={2d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 addr+0 S4 A32])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 85 [ _v ])
                (asm_operands:SI ("movl %%fs:%1, %0") ("=r") 0 [
                        (mem:SI (reg/f:SI 86) [1 *addr_2(D)+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") include/asm/segment.h:26)
                    ]
                     [] include/asm/segment.h:26))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":26:5 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 _v+0 S4 A32])
        (reg:SI 85 [ _v ])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _v ])
        (nil)))
(insn 8 5 11 2 (set (reg:SI 83 [ _4 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 _v+0 S4 A32])) "include/asm/segment.h":27:12 75 {*movsi_internal}
     (nil))
(insn 11 8 15 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _4 ])) "include/asm/segment.h":27:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _4 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "include/asm/segment.h":28:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":28:1 -1
     (nil))

;; Function get_fs (get_fs, funcdef_no=5, decl_uid=1375, cgraph_uid=6, symbol_order=5)

scanning new insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 5(l0): point = 8
   Insn 6(l0): point = 10
   Insn 17(l0): point = 12
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..10]
 a3(r82): [12..12]
Compressing live ranges: from 15 to 7 - 46%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r82): [6..6]
  pref0:a2(r85)<-hr0@1000
  pref1:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=7
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_fs

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={2d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 17 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 5 2 (parallel [
            (set (reg:HI 85 [ _v ])
                (asm_operands:HI ("mov %%fs, %%ax") ("=a") 0 []
                     []
                     [] include/asm/segment.h:41))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":41:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 5 6 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                (const_int -2 [0xfffffffffffffffe])) [4 _v+0 S2 A16])
        (reg:HI 85 [ _v ])) "include/asm/segment.h":41:5 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 85 [ _v ])
        (nil)))
(insn 7 5 10 2 (set (reg:SI 83 [ _2 ])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                    (const_int -2 [0xfffffffffffffffe])) [4 _v+0 S2 A16]))) "include/asm/segment.h":42:12 144 {*zero_extendhisi2}
     (nil))
(insn 10 7 14 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _2 ])) "include/asm/segment.h":42:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "include/asm/segment.h":43:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":43:1 -1
     (nil))

;; Function get_ds (get_ds, funcdef_no=6, decl_uid=1379, cgraph_uid=7, symbol_order=6)

scanning new insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 5(l0): point = 8
   Insn 6(l0): point = 10
   Insn 17(l0): point = 12
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..10]
 a3(r82): [12..12]
Compressing live ranges: from 15 to 7 - 46%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r82): [6..6]
  pref0:a2(r85)<-hr0@1000
  pref1:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=7
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_ds

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={2d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 17 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 5 2 (parallel [
            (set (reg:HI 85 [ _v ])
                (asm_operands:HI ("mov %%ds, %%ax") ("=a") 0 []
                     []
                     [] include/asm/segment.h:49))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":49:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 5 6 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                (const_int -2 [0xfffffffffffffffe])) [4 _v+0 S2 A16])
        (reg:HI 85 [ _v ])) "include/asm/segment.h":49:5 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 85 [ _v ])
        (nil)))
(insn 7 5 10 2 (set (reg:SI 83 [ _2 ])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 19 frame)
                    (const_int -2 [0xfffffffffffffffe])) [4 _v+0 S2 A16]))) "include/asm/segment.h":50:12 144 {*zero_extendhisi2}
     (nil))
(insn 10 7 14 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _2 ])) "include/asm/segment.h":50:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "include/asm/segment.h":51:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":51:1 -1
     (nil))

;; Function set_fs (set_fs, funcdef_no=7, decl_uid=1383, cgraph_uid=8, symbol_order=7)

scanning new insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 11(l0): point = 0
   Insn 7(l0): point = 3
   Insn 6(l0): point = 5
   Insn 5(l0): point = 7
   Insn 12(l0): point = 9
 a0(r83): [4..5]
 a1(r84): [6..7]
 a2(r82): [9..9]
Compressing live ranges: from 12 to 5 - 41%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r84): [2..3]
 a2(r82): [4..4]
  pref0:a0(r83)<-hr0@1000
  regions=1, blocks=4, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    0:r83  l0     0    1:r84  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


set_fs

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,3u} r17={2d} r19={1d,3u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 26{12d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 84)
        (mem/c:SI (reg/f:SI 16 argp) [1 val+0 S4 A32])) "include/asm/segment.h":55:34 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:HI 83 [ _1 ])
        (subreg:HI (reg:SI 84) 0)) "include/asm/segment.h":55:34 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("mov %0, %%fs") ("") 0 [
                    (reg:HI 83 [ _1 ])
                ]
                 [
                    (asm_input:HI ("a") include/asm/segment.h:55)
                ]
                 [] include/asm/segment.h:55)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":55:5 -1
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 0 3 (const_int 0 [0]) "include/asm/segment.h":56:1 843 {nop}
     (nil))

;; Function count (count, funcdef_no=8, decl_uid=1433, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4
;; 2 succs { 3 6 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 32(l0): point = 4
   Insn 29(l0): point = 6
   Insn 14(l0): point = 9
   Insn 26(l0): point = 12
   Insn 25(l0): point = 14
   Insn 23(l0): point = 16
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 19(l0): point = 24
   Insn 18(l0): point = 26
   Insn 17(l0): point = 28
   Insn 39(l0): point = 31
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 6(l0): point = 40
   Insn 5(l0): point = 42
   Insn 41(l0): point = 44
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r84): [15..16]
 a3(r83): [23..28]
 a4(r88): [25..26]
 a5(r87): [39..40]
 a6(r82): [44..44]
Compressing live ranges: from 47 to 11 - 23%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r84): [4..5]
 a3(r83): [6..7]
 a4(r88): [6..7]
 a5(r87): [8..9]
 a6(r82): [10..10]
  pref0:a0(r86)<-hr0@1500
  pref1:a2(r84)<-hr0@1500
  regions=1, blocks=7, points=11
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r82  l0     0    3:r83  l0     0    2:r84  l0     0    1:r85  l0     0
    0:r86  l0     0    5:r87  l0     0    4:r88  l0     1
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


count

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,6u} r7={3d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,6u} r17={7d,2u} r18={1d} r19={1d,14u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,2u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 140{92d,48u,0e} in 21{20 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 41 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 41 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 41 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":32:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [20 argv+0 S4 A32])) "fs/exec.c":35:14 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 tmp+0 S4 A32])
        (reg/f:SI 87)) "fs/exec.c":35:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [20 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":35:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/exec.c":35:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
(note 10 9 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 39 10 40 3 (set (pc)
        (label_ref 15)) "fs/exec.c":36:15 807 {jump}
     (nil)
 -> 15)
(barrier 40 39 24)
(code_label 24 40 13 4 17 (nil) [1 uses])
(note 13 24 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":37:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 15 14 16 5 16 (nil) [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:SI 83 [ tmp.0_1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 tmp+0 S4 A32])) "fs/exec.c":36:16 75 {*movsi_internal}
     (nil))
(insn 18 17 19 5 (parallel [
            (set (reg:SI 88)
                (plus:SI (reg/f:SI 83 [ tmp.0_1 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":36:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 tmp+0 S4 A32])
        (reg:SI 88)) "fs/exec.c":36:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 20 19 21 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 83 [ tmp.0_1 ])) "fs/exec.c":36:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ tmp.0_1 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 21 20 22 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e600 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":36:16 823 {*call_value}
     (nil)
    (nil))
(insn 22 21 23 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":36:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 23 22 25 5 (set (reg:SI 84 [ _2 ])
        (reg:SI 0 ax)) "fs/exec.c":36:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 25 23 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _2 ])
            (const_int 0 [0]))) "fs/exec.c":36:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "fs/exec.c":36:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
(code_label 27 26 28 6 15 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 32 6 (set (reg:SI 85 [ _15 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/exec.c":38:12 75 {*movsi_internal}
     (nil))
(insn 32 29 36 6 (set (reg:SI 86 [ <retval> ])
        (reg:SI 85 [ _15 ])) "fs/exec.c":38:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _15 ])
        (nil)))
(insn 36 32 37 6 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) "fs/exec.c":39:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ <retval> ])
        (nil)))
(insn 37 36 0 6 (use (reg/i:SI 0 ax)) "fs/exec.c":39:1 -1
     (nil))

;; Function copy_strings (copy_strings, funcdef_no=9, decl_uid=1445, cgraph_uid=10, symbol_order=9)

scanning new insn with uid = 199.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 31 n_edges 44 count 39 (  1.3)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
;;
;; Loop 1
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 24 15 14 13 11 12 9 10 7 8 16 22 23 19 20 17 18
;;
;; Loop 3
;;  header 25, latch 24
;;  depth 2, outer 1
;;  nodes: 25 24 16 22 23 19 20 17 18
;;
;; Loop 2
;;  header 14, latch 14
;;  depth 2, outer 1
;;  nodes: 14
;; 2 succs { 3 4 }
;; 3 succs { 30 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 26 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 14 15 }
;; 15 succs { 25 }
;; 16 succs { 17 24 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 22 }
;; 20 succs { 21 22 }
;; 21 succs { 30 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 16 26 }
;; 26 succs { 7 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 }
;; 30 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r106,l0) best AREG, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a6 (r102,l0) best Q_REGS, allocno Q_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:13000
  a2(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a3(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:24000
  a5(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a7(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a8(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a12(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a13(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a16(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a20(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a21(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a22(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r88,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a26(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a27(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a30(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a32(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a33(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a35(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 189(l0): point = 0
   Insn 188(l0): point = 2
   Insn 184(l0): point = 4
   Insn 181(l0): point = 7
   Insn 178(l0): point = 10
   Insn 177(l0): point = 12
   Insn 176(l0): point = 14
   Insn 175(l0): point = 16
   Insn 173(l0): point = 19
   Insn 172(l0): point = 21
   Insn 197(l0): point = 24
   Insn 132(l0): point = 26
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 170(l0): point = 34
   Insn 169(l0): point = 36
   Insn 165(l0): point = 38
   Insn 164(l0): point = 40
   Insn 163(l0): point = 42
   Insn 160(l0): point = 45
   Insn 159(l0): point = 47
   Insn 155(l0): point = 50
   Insn 154(l0): point = 52
   Insn 153(l0): point = 54
   Insn 152(l0): point = 56
   Insn 151(l0): point = 58
   Insn 150(l0): point = 60
   Insn 149(l0): point = 62
   Insn 148(l0): point = 64
   Insn 147(l0): point = 66
   Insn 146(l0): point = 68
   Insn 94(l0): point = 71
   Insn 93(l0): point = 73
   Insn 90(l0): point = 75
   Insn 89(l0): point = 77
   Insn 88(l0): point = 79
   Insn 87(l0): point = 81
   Insn 138(l0): point = 84
   Insn 137(l0): point = 86
   Insn 116(l0): point = 89
   Insn 115(l0): point = 91
   Insn 114(l0): point = 93
   Insn 113(l0): point = 95
   Insn 112(l0): point = 97
   Insn 111(l0): point = 99
   Insn 110(l0): point = 101
   Insn 109(l0): point = 103
   Insn 108(l0): point = 105
   Insn 100(l0): point = 108
   Insn 99(l0): point = 110
   Insn 98(l0): point = 112
   Insn 97(l0): point = 114
   Insn 96(l0): point = 116
   Insn 105(l0): point = 119
   Insn 104(l0): point = 121
   Insn 103(l0): point = 123
   Insn 102(l0): point = 125
   Insn 130(l0): point = 128
   Insn 129(l0): point = 130
   Insn 128(l0): point = 132
   Insn 127(l0): point = 134
   Insn 126(l0): point = 136
   Insn 125(l0): point = 138
   Insn 124(l0): point = 140
   Insn 123(l0): point = 142
   Insn 122(l0): point = 144
   Insn 121(l0): point = 146
   Insn 120(l0): point = 148
   Insn 119(l0): point = 150
   Insn 118(l0): point = 152
   Insn 143(l0): point = 155
   Insn 142(l0): point = 157
   Insn 141(l0): point = 159
   Insn 140(l0): point = 161
   Insn 195(l0): point = 164
   Insn 82(l0): point = 167
   Insn 81(l0): point = 169
   Insn 79(l0): point = 171
   Insn 78(l0): point = 173
   Insn 77(l0): point = 175
   Insn 76(l0): point = 177
   Insn 75(l0): point = 179
   Insn 74(l0): point = 181
   Insn 73(l0): point = 183
   Insn 72(l0): point = 185
   Insn 71(l0): point = 187
   Insn 69(l0): point = 190
   Insn 61(l0): point = 193
   Insn 60(l0): point = 195
   Insn 50(l0): point = 198
   Insn 49(l0): point = 200
   Insn 48(l0): point = 202
   Insn 47(l0): point = 204
   Insn 46(l0): point = 206
   Insn 45(l0): point = 208
   Insn 44(l0): point = 210
   Insn 43(l0): point = 212
   Insn 42(l0): point = 214
   Insn 41(l0): point = 216
   Insn 40(l0): point = 218
   Insn 37(l0): point = 221
   Insn 36(l0): point = 223
   Insn 35(l0): point = 225
   Insn 57(l0): point = 228
   Insn 56(l0): point = 230
   Insn 55(l0): point = 232
   Insn 54(l0): point = 234
   Insn 53(l0): point = 236
   Insn 52(l0): point = 238
   Insn 66(l0): point = 241
   Insn 65(l0): point = 243
   Insn 64(l0): point = 245
   Insn 63(l0): point = 247
   Insn 193(l0): point = 250
   Insn 26(l0): point = 253
   Insn 25(l0): point = 255
   Insn 24(l0): point = 257
   Insn 22(l0): point = 260
   Insn 21(l0): point = 262
   Insn 20(l0): point = 264
   Insn 19(l0): point = 266
   Insn 18(l0): point = 268
   Insn 17(l0): point = 270
   Insn 16(l0): point = 272
   Insn 15(l0): point = 274
   Insn 191(l0): point = 277
   Insn 10(l0): point = 279
   Insn 8(l0): point = 282
   Insn 7(l0): point = 284
   Insn 6(l0): point = 286
   Insn 5(l0): point = 288
   Insn 199(l0): point = 290
 a0(r105): [3..4]
 a1(r104): [277..279] [24..26] [5..7]
 a2(r103): [37..42]
 a3(r117): [39..40]
 a4(r82): [282..290] [29..276]
 a5(r101): [51..54]
 a6(r102): [51..52]
 a7(r99): [53..60]
 a8(r116): [55..56]
 a9(r100): [55..58]
 a10(r98): [133..134]
 a11(r96): [135..144]
 a12(r97): [137..138]
 a13(r115): [145..146]
 a14(r95): [145..148]
 a15(r94): [149..150]
 a16(r114): [151..152]
 a17(r93): [94..95]
 a18(r92): [96..97]
 a19(r113): [98..99]
 a20(r91): [98..101]
 a21(r90): [102..103]
 a22(r112): [104..105]
 a23(r111): [113..114]
 a24(r89): [115..116]
 a25(r88): [170..171]
 a26(r87): [178..185]
 a27(r110): [182..183]
 a28(r109): [235..236]
 a29(r86): [203..204]
 a30(r85): [211..212]
 a31(r108): [213..214]
 a32(r84): [213..216]
 a33(r83): [217..218]
 a34(r107): [265..266]
 a35(r106): [271..272]
Compressing live ranges: from 293 to 60 - 20%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r104): [56..57] [2..5]
 a2(r103): [6..7]
 a3(r117): [6..7]
 a4(r82): [58..59] [6..55]
 a5(r101): [8..11]
 a6(r102): [8..9]
 a7(r99): [10..13]
 a8(r116): [12..13]
 a9(r100): [12..13]
 a10(r98): [28..29]
 a11(r96): [30..31]
 a12(r97): [30..31]
 a13(r115): [32..33]
 a14(r95): [32..33]
 a15(r94): [34..35]
 a16(r114): [36..37]
 a17(r93): [14..15]
 a18(r92): [16..17]
 a19(r113): [18..19]
 a20(r91): [18..19]
 a21(r90): [20..21]
 a22(r112): [22..23]
 a23(r111): [24..25]
 a24(r89): [26..27]
 a25(r88): [38..39]
 a26(r87): [40..41]
 a27(r110): [40..41]
 a28(r109): [50..51]
 a29(r86): [42..43]
 a30(r85): [44..45]
 a31(r108): [46..47]
 a32(r84): [46..47]
 a33(r83): [48..49]
 a34(r107): [52..53]
 a35(r106): [54..55]
  pref0:a34(r107)<-hr0@1500
  pref1:a35(r106)<-hr0@1500
  pref2:a0(r105)<-hr0@1500
  pref3:a7(r99)<-hr0@1500
  pref4:a12(r97)<-hr0@1500
  pref5:a25(r88)<-hr0@2500
  pref6:a29(r86)<-hr0@1500
  regions=1, blocks=31, points=60
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=38
Disposition:
    4:r82  l0     3   33:r83  l0     0   32:r84  l0     1   30:r85  l0     0
   29:r86  l0     0   26:r87  l0     0   25:r88  l0     0   24:r89  l0     0
   21:r90  l0     0   20:r91  l0     1   18:r92  l0     0   17:r93  l0     0
   15:r94  l0     0   14:r95  l0     1   11:r96  l0     4   12:r97  l0     0
   10:r98  l0     0    7:r99  l0     1    9:r100 l0     2    5:r101 l0     0
    6:r102 l0     1    2:r103 l0     0    1:r104 l0     0    0:r105 l0     0
   35:r106 l0     0   34:r107 l0     0   31:r108 l0     0   28:r109 l0     0
   27:r110 l0     1   23:r111 l0     0   22:r112 l0     0   19:r113 l0     0
   16:r114 l0     0   13:r115 l0     0    8:r116 l0     0    3:r117 l0     1
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


copy_strings

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={15d,8u} r1={14d} r2={14d} r3={2d,2u} r6={1d,30u} r7={28d,87u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,48u,3e} r17={62d,14u} r18={13d} r19={1d,63u,1e} r20={13d} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={13d} r38={13d} r39={13d} r40={13d} r41={13d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r82={1d,3u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,2u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,2u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,2u} r104={3d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u,1e} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 1324{1021d,293u,10e} in 132{119 regular + 13 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 199 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 199 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 199 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":61:17 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 offset+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":62:14 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [1 p+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":65:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "fs/exec.c":65:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 13)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 191 3 (set (reg:SI 104 [ _36 ])
        (const_int 0 [0])) "fs/exec.c":66:16 75 {*movsi_internal}
     (nil))
(jump_insn 191 10 192 3 (set (pc)
        (label_ref 182)) "fs/exec.c":66:16 807 {jump}
     (nil)
 -> 182)
(barrier 192 191 13)
(code_label 13 192 14 4 20 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_ds") [flags 0x3]  <function_decl 0x7a64a9d3ea00 get_ds>) [0 get_ds S1 A8])
            (const_int 0 [0]))) "fs/exec.c":67:14 823 {*call_value}
     (nil)
    (nil))
(insn 16 15 17 4 (set (reg:SI 106)
        (reg:SI 0 ax)) "fs/exec.c":67:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 17 16 18 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 new_fs+0 S4 A32])
        (reg:SI 106)) "fs/exec.c":67:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106)
        (nil)))
(call_insn 18 17 19 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs") [flags 0x3]  <function_decl 0x7a64a9d3e800 get_fs>) [0 get_fs S1 A8])
            (const_int 0 [0]))) "fs/exec.c":68:14 823 {*call_value}
     (nil)
    (nil))
(insn 19 18 20 4 (set (reg:SI 107)
        (reg:SI 0 ax)) "fs/exec.c":68:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 20 19 21 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 old_fs+0 S4 A32])
        (reg:SI 107)) "fs/exec.c":68:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":69:8 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/exec.c":69:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 new_fs+0 S4 A32])) "fs/exec.c":70:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 25 24 26 5 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 4 [0x4])) "fs/exec.c":70:9 812 {*call}
     (nil)
    (nil))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":70:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 27 26 28 6 22 (nil) [1 uses])
(note 28 27 193 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 193 28 194 6 (set (pc)
        (label_ref 161)) "fs/exec.c":71:11 807 {jump}
     (nil)
 -> 161)
(barrier 194 193 166)
(code_label 166 194 31 7 33 (nil) [1 uses])
(note 31 166 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [9 from_kmem+0 S4 A32])
            (const_int 1 [0x1]))) "fs/exec.c":72:12 11 {*cmpsi_1}
     (nil))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fs/exec.c":72:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 new_fs+0 S4 A32])) "fs/exec.c":73:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 36 35 37 8 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 4 [0x4])) "fs/exec.c":73:13 812 {*call}
     (nil)
    (nil))
(insn 37 36 38 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":73:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 38 37 39 9 24 (nil) [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:SI 83 [ argc.1_1 ])
        (mem/c:SI (reg/f:SI 16 argp) [9 argc+0 S4 A32])) "fs/exec.c":74:64 75 {*movsi_internal}
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:SI 84 [ _2 ])
                (ashift:SI (reg:SI 83 [ argc.1_1 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":74:64 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 83 [ argc.1_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 9 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [20 argv+0 S4 A32])) "fs/exec.c":74:29 75 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg:SI 84 [ _2 ])
                    (reg/f:SI 108)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":74:29 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [20 argv+0 S4 A32])
                        (reg:SI 84 [ _2 ]))
                    (nil))))))
(insn 44 43 45 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 85 [ _3 ])) "fs/exec.c":74:29 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 45 44 46 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e600 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":74:29 823 {*call_value}
     (nil)
    (nil))
(insn 46 45 47 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":74:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 47 46 48 9 (set (reg:SI 86 [ _4 ])
        (reg:SI 0 ax)) "fs/exec.c":74:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 48 47 49 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 tmp+0 S4 A32])
        (reg:SI 86 [ _4 ])) "fs/exec.c":74:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 49 48 50 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":74:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 51 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/exec.c":74:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 58)
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":75:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 53 52 54 10 (set (reg/f:SI 109)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7a64a9ddc090 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/exec.c":75:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7a64a9ddc090 *.LC0>)
        (nil)))
(insn 54 53 55 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 109)) "fs/exec.c":75:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 55 54 56 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":75:13 75 {*movsi_internal}
     (nil))
(call_insn 56 55 57 10 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a64a9d38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":75:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 57 56 58 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":75:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 58 57 59 11 25 (nil) [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [9 from_kmem+0 S4 A32])
            (const_int 1 [0x1]))) "fs/exec.c":76:12 11 {*cmpsi_1}
     (nil))
(jump_insn 61 60 62 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/exec.c":76:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 67)
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":77:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 64 63 65 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 old_fs+0 S4 A32])) "fs/exec.c":77:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 65 64 66 12 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":77:13 812 {*call}
     (nil)
    (nil))
(insn 66 65 67 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":77:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 67 66 68 13 26 (nil) [1 uses])
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 80 13 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 len+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":78:13 75 {*movsi_internal}
     (nil))
(code_label 80 69 70 14 27 (nil) [1 uses])
(note 70 80 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 len+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 len+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":80:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 14 (set (reg/f:SI 87 [ tmp.2_5 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 tmp+0 S4 A32])) "fs/exec.c":81:18 75 {*movsi_internal}
     (nil))
(insn 73 72 74 14 (parallel [
            (set (reg:SI 110)
                (plus:SI (reg/f:SI 87 [ tmp.2_5 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":81:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 74 73 75 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 tmp+0 S4 A32])
        (reg:SI 110)) "fs/exec.c":81:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(insn 75 74 76 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":81:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 76 75 77 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 87 [ tmp.2_5 ])) "fs/exec.c":81:18 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87 [ tmp.2_5 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 77 76 78 14 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":81:18 823 {*call_value}
     (nil)
    (nil))
(insn 78 77 79 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":81:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 79 78 81 14 (set (reg:QI 88 [ _6 ])
        (reg:QI 0 ax)) "fs/exec.c":81:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 81 79 82 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _6 ])
            (const_int 0 [0]))) "fs/exec.c":81:18 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ _6 ])
        (nil)))
(jump_insn 82 81 83 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/exec.c":81:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 80)
(note 83 82 195 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 83 196 15 (set (pc)
        (label_ref 156)) "fs/exec.c":86:15 807 {jump}
     (nil)
 -> 156)
(barrier 196 195 158)
(code_label 158 196 86 16 32 (nil) [1 uses])
(note 86 158 87 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 12 [0xc])) [1 p+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [1 p+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":87:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 88 87 89 16 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 tmp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 tmp+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":88:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 89 88 90 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 len+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 len+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":89:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 90 89 93 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [9 offset+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [9 offset+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":90:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 93 90 94 16 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [9 offset+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":90:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 94 93 95 16 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/exec.c":90:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 144)
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 17 (set (reg:SI 89 [ p.3_7 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [1 p+0 S4 A32])) "fs/exec.c":91:28 75 {*movsi_internal}
     (nil))
(insn 97 96 98 17 (parallel [
            (set (reg:SI 111)
                (and:SI (reg:SI 89 [ p.3_7 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":91:24 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ p.3_7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 98 97 99 17 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 offset+0 S4 A32])
        (reg:SI 111)) "fs/exec.c":91:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 99 98 100 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":92:20 11 {*cmpsi_1}
     (nil))
(jump_insn 100 99 101 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/exec.c":92:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 106)
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":93:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 103 102 104 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 old_fs+0 S4 A32])) "fs/exec.c":93:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 104 103 105 18 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":93:21 812 {*call}
     (nil)
    (nil))
(insn 105 104 106 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":93:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 106 105 107 19 30 (nil) [1 uses])
(note 107 106 108 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 19 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [1 p+0 S4 A32])) "fs/exec.c":94:44 75 {*movsi_internal}
     (nil))
(insn 109 108 110 19 (parallel [
            (set (reg:SI 90 [ _8 ])
                (lshiftrt:SI (reg:SI 112)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":94:44 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 112)
                    (const_int 4096 [0x1000]))
                (nil)))))
(insn 110 109 111 19 (parallel [
            (set (reg:SI 91 [ _9 ])
                (ashift:SI (reg:SI 90 [ _8 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":94:41 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 111 110 112 19 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [19 page+0 S4 A32])) "fs/exec.c":94:41 75 {*movsi_internal}
     (nil))
(insn 112 111 113 19 (parallel [
            (set (reg/f:SI 92 [ _10 ])
                (plus:SI (reg:SI 91 [ _9 ])
                    (reg/f:SI 113)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":94:41 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 8 [0x8])) [19 page+0 S4 A32])
                        (reg:SI 91 [ _9 ]))
                    (nil))))))
(insn 113 112 114 19 (set (reg:SI 93 [ _11 ])
        (mem:SI (reg/f:SI 92 [ _10 ]) [1 *_10+0 S4 A32])) "fs/exec.c":94:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
        (nil)))
(insn 114 113 115 19 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])
        (reg:SI 93 [ _11 ])) "fs/exec.c":94:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(insn 115 114 116 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":94:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 116 115 117 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/exec.c":94:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 135)
(note 117 116 118 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 20 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [1 p+0 S4 A32])) "fs/exec.c":95:45 75 {*movsi_internal}
     (nil))
(insn 119 118 120 20 (parallel [
            (set (reg:SI 94 [ _12 ])
                (lshiftrt:SI (reg:SI 114)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":95:45 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (udiv:SI (reg:SI 114)
                    (const_int 4096 [0x1000]))
                (nil)))))
(insn 120 119 121 20 (parallel [
            (set (reg:SI 95 [ _13 ])
                (ashift:SI (reg:SI 94 [ _12 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":95:42 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 121 120 122 20 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [19 page+0 S4 A32])) "fs/exec.c":95:42 75 {*movsi_internal}
     (nil))
(insn 122 121 123 20 (parallel [
            (set (reg/f:SI 96 [ _14 ])
                (plus:SI (reg:SI 95 [ _13 ])
                    (reg/f:SI 115)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":95:42 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 8 [0x8])) [19 page+0 S4 A32])
                        (reg:SI 95 [ _13 ]))
                    (nil))))))
(insn 123 122 124 20 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":96:23 75 {*movsi_internal}
     (nil))
(call_insn 124 123 125 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x7a64a9d38900 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "fs/exec.c":96:23 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 125 124 126 20 (set (reg:SI 97 [ _15 ])
        (reg:SI 0 ax)) "fs/exec.c":96:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 126 125 127 20 (set (mem:SI (reg/f:SI 96 [ _14 ]) [1 *_14+0 S4 A32])
        (reg:SI 97 [ _15 ])) "fs/exec.c":95:58 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (nil)))
(insn 127 126 128 20 (set (reg:SI 98 [ _16 ])
        (mem:SI (reg/f:SI 96 [ _14 ]) [1 *_14+0 S4 A32])) "fs/exec.c":95:42 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (nil)))
(insn 128 127 129 20 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])
        (reg:SI 98 [ _16 ])) "fs/exec.c":95:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (nil)))
(insn 129 128 130 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":94:58 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 130 129 131 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/exec.c":94:58 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 135)
(note 131 130 132 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 197 21 (set (reg:SI 104 [ _36 ])
        (const_int 0 [0])) "fs/exec.c":97:28 75 {*movsi_internal}
     (nil))
(jump_insn 197 132 198 21 (set (pc)
        (label_ref 182)) "fs/exec.c":97:28 807 {jump}
     (nil)
 -> 182)
(barrier 198 197 135)
(code_label 135 198 136 22 31 (nil) [2 uses])
(note 136 135 137 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":98:20 11 {*cmpsi_1}
     (nil))
(jump_insn 138 137 139 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/exec.c":98:20 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 144)
(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":99:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 141 140 142 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 new_fs+0 S4 A32])) "fs/exec.c":99:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 142 141 143 23 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":99:21 812 {*call}
     (nil)
    (nil))
(insn 143 142 144 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":99:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 144 143 145 24 29 (nil) [2 uses])
(note 145 144 146 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":101:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 147 146 148 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 tmp+0 S4 A32])) "fs/exec.c":101:31 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 148 147 149 24 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":101:31 823 {*call_value}
     (nil)
    (nil))
(insn 149 148 150 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":101:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 150 149 151 24 (set (reg:QI 99 [ _17 ])
        (reg:QI 0 ax)) "fs/exec.c":101:31 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 151 150 152 24 (set (reg:SI 100 [ offset.4_18 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 offset+0 S4 A32])) "fs/exec.c":101:19 75 {*movsi_internal}
     (nil))
(insn 152 151 153 24 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])) "fs/exec.c":101:19 75 {*movsi_internal}
     (nil))
(insn 153 152 154 24 (parallel [
            (set (reg/f:SI 101 [ _19 ])
                (plus:SI (reg:SI 100 [ offset.4_18 ])
                    (reg/f:SI 116)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":101:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_DEAD (reg:SI 100 [ offset.4_18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])
                        (reg:SI 100 [ offset.4_18 ]))
                    (nil))))))
(insn 154 153 155 24 (set (reg:QI 102 [ _20 ])
        (reg:QI 99 [ _17 ])) "fs/exec.c":101:31 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 99 [ _17 ])
        (nil)))
(insn 155 154 156 24 (set (mem:QI (reg/f:SI 101 [ _19 ]) [0 *_19+0 S1 A8])
        (reg:QI 102 [ _20 ])) "fs/exec.c":101:29 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 102 [ _20 ])
        (expr_list:REG_DEAD (reg/f:SI 101 [ _19 ])
            (nil))))
(code_label 156 155 157 25 28 (nil) [1 uses])
(note 157 156 159 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 159 157 160 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [9 len+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":86:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 160 159 161 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) "fs/exec.c":86:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 158)
(code_label 161 160 162 26 23 (nil) [1 uses])
(note 162 161 163 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 26 (set (reg:SI 103 [ argc.5_21 ])
        (mem/c:SI (reg/f:SI 16 argp) [9 argc+0 S4 A32])) "fs/exec.c":71:16 75 {*movsi_internal}
     (nil))
(insn 164 163 165 26 (parallel [
            (set (reg:SI 117)
                (plus:SI (reg:SI 103 [ argc.5_21 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":71:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 165 164 169 26 (set (mem/c:SI (reg/f:SI 16 argp) [9 argc+0 S4 A32])
        (reg:SI 117)) "fs/exec.c":71:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117)
        (nil)))
(insn 169 165 170 26 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 103 [ argc.5_21 ])
            (const_int 0 [0]))) "fs/exec.c":71:19 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 103 [ argc.5_21 ])
        (nil)))
(jump_insn 170 169 171 26 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "fs/exec.c":71:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 166)
(note 171 170 172 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 16 [0x10])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":104:8 11 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) "fs/exec.c":104:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 179)
(note 174 173 175 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":105:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 176 175 177 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 old_fs+0 S4 A32])) "fs/exec.c":105:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 177 176 178 28 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":105:9 812 {*call}
     (nil)
    (nil))
(insn 178 177 179 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":105:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 179 178 180 29 34 (nil) [1 uses])
(note 180 179 181 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 29 (set (reg:SI 104 [ _36 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [1 p+0 S4 A32])) "fs/exec.c":106:12 75 {*movsi_internal}
     (nil))
(code_label 182 181 183 30 21 (nil) [2 uses])
(note 183 182 184 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 188 30 (set (reg:SI 105 [ <retval> ])
        (reg:SI 104 [ _36 ])) "fs/exec.c":107:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ _36 ])
        (nil)))
(insn 188 184 189 30 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) "fs/exec.c":107:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ <retval> ])
        (nil)))
(insn 189 188 0 30 (use (reg/i:SI 0 ax)) "fs/exec.c":107:1 -1
     (nil))

;; Function create_tables (create_tables, funcdef_no=10, decl_uid=1465, cgraph_uid=11, symbol_order=10)

scanning new insn with uid = 132.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 11 4 5 6 7 12 8 9 10
;;
;; Loop 2
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 12 7
;;
;; Loop 3
;;  header 8, latch 8
;;  depth 2, outer 2
;;  nodes: 8
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 11 3
;;
;; Loop 4
;;  header 4, latch 4
;;  depth 2, outer 1
;;  nodes: 4
;; 2 succs { 5 }
;; 3 succs { 11 }
;; 11 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 3 6 }
;; 6 succs { 9 }
;; 7 succs { 12 }
;; 12 succs { 8 }
;; 8 succs { 8 9 }
;; 9 succs { 7 10 }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a3(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r102,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a5(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a6(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a9(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a11(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r97,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a13(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a14(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a17(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a24(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a25(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a26(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a29(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a30(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a31(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 122(l0): point = 0
   Insn 121(l0): point = 2
   Insn 117(l0): point = 4
   Insn 114(l0): point = 6
   Insn 113(l0): point = 8
   Insn 112(l0): point = 10
   Insn 111(l0): point = 12
   Insn 110(l0): point = 14
   Insn 87(l0): point = 17
   Insn 86(l0): point = 19
   Insn 85(l0): point = 21
   Insn 84(l0): point = 23
   Insn 83(l0): point = 25
   Insn 82(l0): point = 27
   Insn 81(l0): point = 29
   Insn 80(l0): point = 31
   Insn 108(l0): point = 34
   Insn 107(l0): point = 36
   Insn 103(l0): point = 38
   Insn 102(l0): point = 40
   Insn 101(l0): point = 42
   Insn 98(l0): point = 45
   Insn 97(l0): point = 47
   Insn 95(l0): point = 49
   Insn 94(l0): point = 51
   Insn 93(l0): point = 53
   Insn 92(l0): point = 55
   Insn 91(l0): point = 57
   Insn 90(l0): point = 59
   Insn 89(l0): point = 61
   Insn 131(l0): point = 64
   Insn 126(l0): point = 67
   Insn 76(l0): point = 69
   Insn 75(l0): point = 71
   Insn 74(l0): point = 73
   Insn 73(l0): point = 75
   Insn 50(l0): point = 78
   Insn 49(l0): point = 80
   Insn 48(l0): point = 82
   Insn 47(l0): point = 84
   Insn 46(l0): point = 86
   Insn 45(l0): point = 88
   Insn 44(l0): point = 90
   Insn 43(l0): point = 92
   Insn 71(l0): point = 95
   Insn 70(l0): point = 97
   Insn 66(l0): point = 99
   Insn 65(l0): point = 101
   Insn 64(l0): point = 103
   Insn 61(l0): point = 106
   Insn 60(l0): point = 108
   Insn 58(l0): point = 110
   Insn 57(l0): point = 112
   Insn 56(l0): point = 114
   Insn 55(l0): point = 116
   Insn 54(l0): point = 118
   Insn 53(l0): point = 120
   Insn 52(l0): point = 122
   Insn 129(l0): point = 125
   Insn 124(l0): point = 128
   Insn 39(l0): point = 130
   Insn 38(l0): point = 132
   Insn 37(l0): point = 134
   Insn 36(l0): point = 136
   Insn 35(l0): point = 138
   Insn 34(l0): point = 140
   Insn 33(l0): point = 142
   Insn 32(l0): point = 144
   Insn 31(l0): point = 146
   Insn 30(l0): point = 148
   Insn 29(l0): point = 150
   Insn 28(l0): point = 152
   Insn 27(l0): point = 154
   Insn 26(l0): point = 156
   Insn 25(l0): point = 158
   Insn 24(l0): point = 160
   Insn 23(l0): point = 162
   Insn 22(l0): point = 164
   Insn 21(l0): point = 166
   Insn 20(l0): point = 168
   Insn 19(l0): point = 170
   Insn 18(l0): point = 172
   Insn 17(l0): point = 174
   Insn 16(l0): point = 177
   Insn 15(l0): point = 179
   Insn 14(l0): point = 181
   Insn 13(l0): point = 183
   Insn 12(l0): point = 185
   Insn 11(l0): point = 187
   Insn 10(l0): point = 189
   Insn 9(l0): point = 192
   Insn 8(l0): point = 194
   Insn 7(l0): point = 196
   Insn 6(l0): point = 198
   Insn 5(l0): point = 200
   Insn 132(l0): point = 202
 a0(r105): [3..4]
 a1(r104): [5..6]
 a2(r103): [37..42]
 a3(r115): [39..40]
 a4(r102): [48..49]
 a5(r101): [56..61]
 a6(r114): [58..59]
 a7(r100): [22..25]
 a8(r99): [24..31]
 a9(r113): [28..29]
 a10(r98): [98..103]
 a11(r112): [100..101]
 a12(r97): [109..110]
 a13(r96): [117..122]
 a14(r111): [119..120]
 a15(r95): [83..86]
 a16(r94): [85..92]
 a17(r110): [89..90]
 a18(r93): [135..138]
 a19(r92): [147..150]
 a20(r91): [159..162]
 a21(r109): [167..168]
 a22(r90): [171..172]
 a23(r89): [173..175]
 a24(r88): [175..179]
 a25(r108): [176..177]
 a26(r107): [182..183]
 a27(r87): [186..187]
 a28(r86): [188..190]
 a29(r85): [190..194]
 a30(r106): [191..192]
 a31(r84): [197..198]
 a32(r83): [199..200]
 a33(r82): [202..202]
Compressing live ranges: from 205 to 51 - 24%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r104): [2..3]
 a2(r103): [8..9]
 a3(r115): [8..9]
 a4(r102): [10..11]
 a5(r101): [12..13]
 a6(r114): [12..13]
 a7(r100): [4..5]
 a8(r99): [4..7]
 a9(r113): [6..7]
 a10(r98): [18..19]
 a11(r112): [18..19]
 a12(r97): [20..21]
 a13(r96): [22..23]
 a14(r111): [22..23]
 a15(r95): [14..15]
 a16(r94): [14..17]
 a17(r110): [16..17]
 a18(r93): [24..25]
 a19(r92): [26..27]
 a20(r91): [28..29]
 a21(r109): [30..31]
 a22(r90): [32..33]
 a23(r89): [34..35]
 a24(r88): [35..37]
 a25(r108): [36..37]
 a26(r107): [38..39]
 a27(r87): [40..41]
 a28(r86): [42..43]
 a29(r85): [43..45]
 a30(r106): [44..45]
 a31(r84): [46..47]
 a32(r83): [48..49]
 a33(r82): [50..50]
  pref0:a0(r105)<-hr0@1500
  pref1:a4(r102)<-hr0@2500
  pref2:a12(r97)<-hr0@2500
  regions=1, blocks=13, points=51
    allocnos=34 (big 0), copies=0, conflicts=0, ranges=34
Disposition:
   33:r82  l0     0   32:r83  l0     0   31:r84  l0     0   29:r85  l0     1
   28:r86  l0     0   27:r87  l0     0   24:r88  l0     1   23:r89  l0     0
   22:r90  l0     0   20:r91  l0     0   19:r92  l0     0   18:r93  l0     0
   16:r94  l0     0   15:r95  l0     1   13:r96  l0     0   12:r97  l0     0
   10:r98  l0     0    8:r99  l0     0    7:r100 l0     1    5:r101 l0     0
    4:r102 l0     0    2:r103 l0     0    1:r104 l0     0    0:r105 l0     0
   30:r106 l0     0   26:r107 l0     0   25:r108 l0     0   21:r109 l0     0
   17:r110 l0     1   14:r111 l0     1   11:r112 l0     1    9:r113 l0     1
    6:r114 l0     1    3:r115 l0     1
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


create_tables

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,4u} r1={10d} r2={10d} r6={1d,12u} r7={26d,55u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,25u} r17={39d,4u} r18={9d} r19={1d,39u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,2u} r95={1d,1u} r96={1d,2u} r97={1d,1u} r98={1d,2u} r99={1d,2u} r100={1d,1u} r101={1d,2u} r102={1d,1u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} 
;;    total ref usage 896{718d,178u,0e} in 96{87 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 132 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 132 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 132 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 83 [ p.6_1 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [2 p+0 S4 A32])) "fs/exec.c":119:41 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (and:SI (reg:SI 83 [ p.6_1 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":119:39 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ p.6_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
        (reg:SI 84 [ _2 ])) "fs/exec.c":119:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 85 [ envc.7_3 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [9 envc+0 S4 A32])) "fs/exec.c":120:8 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 106)
        (const_int 1073741823 [0x3fffffff])) "fs/exec.c":120:8 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 86 [ _4 ])
                (minus:SI (reg:SI 106)
                    (reg:SI 85 [ envc.7_3 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":120:8 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 106)
        (expr_list:REG_DEAD (reg:SI 85 [ envc.7_3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 87 [ _5 ])
                (ashift:SI (reg:SI 86 [ _4 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":120:8 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                    (reg:SI 87 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":120:8 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 2 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])) "fs/exec.c":121:10 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 envp+0 S4 A32])
        (reg/f:SI 107)) "fs/exec.c":121:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 15 14 16 2 (set (reg:SI 88 [ argc.8_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 argc+0 S4 A32])) "fs/exec.c":122:8 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 108)
        (const_int 1073741823 [0x3fffffff])) "fs/exec.c":122:8 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 89 [ _7 ])
                (minus:SI (reg:SI 108)
                    (reg:SI 88 [ argc.8_6 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":122:8 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg:SI 88 [ argc.8_6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 18 17 19 2 (parallel [
            (set (reg:SI 90 [ _8 ])
                (ashift:SI (reg:SI 89 [ _7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":122:8 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                    (reg:SI 90 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":122:8 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 2 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])) "fs/exec.c":123:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 argv+0 S4 A32])
        (reg/f:SI 109)) "fs/exec.c":123:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 22 21 23 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":124:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (set (reg:SI 91 [ envp.9_9 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 envp+0 S4 A32])) "fs/exec.c":124:5 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])) "fs/exec.c":124:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 25 24 26 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 91 [ envp.9_9 ])) "fs/exec.c":124:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 91 [ envp.9_9 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":124:5 812 {*call}
     (nil)
    (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":124:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 28 27 29 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":125:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 2 (set (reg:SI 92 [ argv.10_10 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 argv+0 S4 A32])) "fs/exec.c":125:5 75 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])) "fs/exec.c":125:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 31 30 32 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 92 [ argv.10_10 ])) "fs/exec.c":125:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 92 [ argv.10_10 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":125:5 812 {*call}
     (nil)
    (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":125:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 34 33 35 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":126:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 2 (set (reg:SI 93 [ argc.11_11 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 argc+0 S4 A32])) "fs/exec.c":126:5 75 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])) "fs/exec.c":126:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 37 36 38 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 93 [ argc.11_11 ])) "fs/exec.c":126:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 93 [ argc.11_11 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":126:5 812 {*call}
     (nil)
    (nil))
(insn 39 38 124 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":126:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 124 39 125 2 (set (pc)
        (label_ref 62)) "fs/exec.c":127:11 807 {jump}
     (nil)
 -> 62)
(barrier 125 124 67)
(code_label 67 125 42 3 38 (nil) [1 uses])
(note 42 67 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg/f:SI 94 [ argv.12_12 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 argv+0 S4 A32])) "fs/exec.c":128:9 75 {*movsi_internal}
     (nil))
(insn 44 43 45 3 (parallel [
            (set (reg:SI 110)
                (plus:SI (reg/f:SI 94 [ argv.12_12 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":128:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 45 44 46 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 argv+0 S4 A32])
        (reg:SI 110)) "fs/exec.c":128:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(insn 46 45 47 3 (set (reg:SI 95 [ p.13_13 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [2 p+0 S4 A32])) "fs/exec.c":128:9 75 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 94 [ argv.12_12 ])) "fs/exec.c":128:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 94 [ argv.12_12 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 48 47 49 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 95 [ p.13_13 ])) "fs/exec.c":128:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 95 [ p.13_13 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(call_insn 49 48 50 3 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":128:9 812 {*call}
     (nil)
    (nil))
(insn 50 49 128 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":128:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 128 50 129 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 59 11 (const_int 0 [0]) "fs/exec.c":129:15 843 {nop}
     (nil))
(code_label 59 129 51 4 37 (nil) [1 uses])
(note 51 59 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg/f:SI 96 [ p.14_14 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [2 p+0 S4 A32])) "fs/exec.c":129:16 75 {*movsi_internal}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:SI 111)
                (plus:SI (reg/f:SI 96 [ p.14_14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":129:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 4 (set (mem/f/c:SI (reg/f:SI 16 argp) [2 p+0 S4 A32])
        (reg:SI 111)) "fs/exec.c":129:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 55 54 56 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 96 [ p.14_14 ])) "fs/exec.c":129:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 96 [ p.14_14 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 56 55 57 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":129:16 823 {*call_value}
     (nil)
    (nil))
(insn 57 56 58 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":129:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 58 57 60 4 (set (reg:QI 97 [ _15 ])
        (reg:QI 0 ax)) "fs/exec.c":129:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 60 58 61 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ _15 ])
            (const_int 0 [0]))) "fs/exec.c":129:16 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 97 [ _15 ])
        (nil)))
(jump_insn 61 60 62 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "fs/exec.c":129:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
(code_label 62 61 63 5 36 (nil) [1 uses])
(note 63 62 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg:SI 98 [ argc.15_16 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 argc+0 S4 A32])) "fs/exec.c":127:16 75 {*movsi_internal}
     (nil))
(insn 65 64 66 5 (parallel [
            (set (reg:SI 112)
                (plus:SI (reg:SI 98 [ argc.15_16 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":127:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 66 65 70 5 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [9 argc+0 S4 A32])
        (reg:SI 112)) "fs/exec.c":127:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 70 66 71 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 98 [ argc.15_16 ])
            (const_int 0 [0]))) "fs/exec.c":127:19 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 98 [ argc.15_16 ])
        (nil)))
(jump_insn 71 70 72 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/exec.c":127:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 67)
(note 72 71 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 argv+0 S4 A32])) "fs/exec.c":132:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 74 73 75 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (const_int 0 [0])) "fs/exec.c":132:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 75 74 76 6 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":132:5 812 {*call}
     (nil)
    (nil))
(insn 76 75 126 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":132:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 126 76 127 6 (set (pc)
        (label_ref 99)) "fs/exec.c":133:11 807 {jump}
     (nil)
 -> 99)
(barrier 127 126 104)
(code_label 104 127 79 7 41 (nil) [1 uses])
(note 79 104 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 7 (set (reg/f:SI 99 [ envp.16_17 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 envp+0 S4 A32])) "fs/exec.c":134:9 75 {*movsi_internal}
     (nil))
(insn 81 80 82 7 (parallel [
            (set (reg:SI 113)
                (plus:SI (reg/f:SI 99 [ envp.16_17 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":134:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 82 81 83 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 envp+0 S4 A32])
        (reg:SI 113)) "fs/exec.c":134:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 83 82 84 7 (set (reg:SI 100 [ p.17_18 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [2 p+0 S4 A32])) "fs/exec.c":134:9 75 {*movsi_internal}
     (nil))
(insn 84 83 85 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 99 [ envp.16_17 ])) "fs/exec.c":134:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 99 [ envp.16_17 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 85 84 86 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 100 [ p.17_18 ])) "fs/exec.c":134:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 100 [ p.17_18 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(call_insn 86 85 87 7 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":134:9 812 {*call}
     (nil)
    (nil))
(insn 87 86 130 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":134:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 130 87 131 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 96 12 (const_int 0 [0]) "fs/exec.c":135:15 843 {nop}
     (nil))
(code_label 96 131 88 8 40 (nil) [1 uses])
(note 88 96 89 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 8 (set (reg/f:SI 101 [ p.18_19 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [2 p+0 S4 A32])) "fs/exec.c":135:16 75 {*movsi_internal}
     (nil))
(insn 90 89 91 8 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg/f:SI 101 [ p.18_19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":135:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 90 92 8 (set (mem/f/c:SI (reg/f:SI 16 argp) [2 p+0 S4 A32])
        (reg:SI 114)) "fs/exec.c":135:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 92 91 93 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 101 [ p.18_19 ])) "fs/exec.c":135:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 101 [ p.18_19 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 93 92 94 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":135:16 823 {*call_value}
     (nil)
    (nil))
(insn 94 93 95 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":135:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 95 94 97 8 (set (reg:QI 102 [ _20 ])
        (reg:QI 0 ax)) "fs/exec.c":135:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 97 95 98 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _20 ])
            (const_int 0 [0]))) "fs/exec.c":135:16 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 102 [ _20 ])
        (nil)))
(jump_insn 98 97 99 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "fs/exec.c":135:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 96)
(code_label 99 98 100 9 39 (nil) [1 uses])
(note 100 99 101 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 9 (set (reg:SI 103 [ envc.19_21 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [9 envc+0 S4 A32])) "fs/exec.c":133:16 75 {*movsi_internal}
     (nil))
(insn 102 101 103 9 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg:SI 103 [ envc.19_21 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":133:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 103 102 107 9 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [9 envc+0 S4 A32])
        (reg:SI 115)) "fs/exec.c":133:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 107 103 108 9 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 103 [ envc.19_21 ])
            (const_int 0 [0]))) "fs/exec.c":133:19 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 103 [ envc.19_21 ])
        (nil)))
(jump_insn 108 107 109 9 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "fs/exec.c":133:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 104)
(note 109 108 110 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 envp+0 S4 A32])) "fs/exec.c":138:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 111 110 112 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (const_int 0 [0])) "fs/exec.c":138:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 112 111 113 10 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":138:5 812 {*call}
     (nil)
    (nil))
(insn 113 112 114 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":138:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 114 113 117 10 (set (reg/f:SI 104 [ _53 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sp+0 S4 A32])) "fs/exec.c":140:12 75 {*movsi_internal}
     (nil))
(insn 117 114 121 10 (set (reg/f:SI 105 [ <retval> ])
        (reg/f:SI 104 [ _53 ])) "fs/exec.c":140:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ _53 ])
        (nil)))
(insn 121 117 122 10 (set (reg/i:SI 0 ax)
        (reg/f:SI 105 [ <retval> ])) "fs/exec.c":141:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105 [ <retval> ])
        (nil)))
(insn 122 121 0 10 (use (reg/i:SI 0 ax)) "fs/exec.c":141:1 -1
     (nil))

;; Function change_ldt (change_ldt, funcdef_no=11, decl_uid=1484, cgraph_uid=12, symbol_order=11)

scanning new insn with uid = 123.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 11 (  1.4)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r144,l0) best DREG, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r137,l0) best DREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r132,l0) best AREG, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r126,l0) best AREG, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r116,l0) best DREG, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r100,l0) best DREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:78000
  a3(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a12(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a17(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a18(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a20(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a28(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a29(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a32(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a35(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a40(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a41(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a43(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a46(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a48(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a49(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a50(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a51(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a52(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a53(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a55(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a56(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a58(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a59(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a62(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a63(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a64(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a66(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 119(l0): point = 0
   Insn 118(l0): point = 2
   Insn 114(l0): point = 4
   Insn 111(l0): point = 6
   Insn 87(l0): point = 9
   Insn 86(l0): point = 11
   Insn 85(l0): point = 13
   Insn 84(l0): point = 15
   Insn 83(l0): point = 17
   Insn 82(l0): point = 19
   Insn 81(l0): point = 21
   Insn 80(l0): point = 23
   Insn 109(l0): point = 26
   Insn 108(l0): point = 28
   Insn 102(l0): point = 31
   Insn 99(l0): point = 34
   Insn 98(l0): point = 36
   Insn 97(l0): point = 38
   Insn 96(l0): point = 40
   Insn 95(l0): point = 42
   Insn 94(l0): point = 44
   Insn 93(l0): point = 46
   Insn 92(l0): point = 48
   Insn 91(l0): point = 50
   Insn 90(l0): point = 52
   Insn 89(l0): point = 54
   Insn 121(l0): point = 57
   Insn 76(l0): point = 59
   Insn 75(l0): point = 61
   Insn 74(l0): point = 63
   Insn 73(l0): point = 65
   Insn 72(l0): point = 67
   Insn 71(l0): point = 69
   Insn 70(l0): point = 71
   Insn 69(l0): point = 73
   Insn 68(l0): point = 75
   Insn 67(l0): point = 77
   Insn 66(l0): point = 79
   Insn 65(l0): point = 81
   Insn 64(l0): point = 83
   Insn 63(l0): point = 85
   Insn 62(l0): point = 87
   Insn 61(l0): point = 89
   Insn 60(l0): point = 91
   Insn 59(l0): point = 93
   Insn 58(l0): point = 95
   Insn 57(l0): point = 97
   Insn 56(l0): point = 99
   Insn 55(l0): point = 101
   Insn 54(l0): point = 103
   Insn 53(l0): point = 105
   Insn 52(l0): point = 107
   Insn 51(l0): point = 109
   Insn 50(l0): point = 111
   Insn 49(l0): point = 113
   Insn 48(l0): point = 115
   Insn 47(l0): point = 117
   Insn 46(l0): point = 119
   Insn 45(l0): point = 121
   Insn 44(l0): point = 123
   Insn 43(l0): point = 125
   Insn 42(l0): point = 127
   Insn 41(l0): point = 129
   Insn 40(l0): point = 131
   Insn 39(l0): point = 133
   Insn 38(l0): point = 135
   Insn 37(l0): point = 137
   Insn 36(l0): point = 139
   Insn 35(l0): point = 141
   Insn 34(l0): point = 143
   Insn 33(l0): point = 145
   Insn 32(l0): point = 147
   Insn 31(l0): point = 149
   Insn 30(l0): point = 151
   Insn 29(l0): point = 153
   Insn 28(l0): point = 155
   Insn 27(l0): point = 157
   Insn 26(l0): point = 159
   Insn 25(l0): point = 161
   Insn 24(l0): point = 163
   Insn 23(l0): point = 165
   Insn 22(l0): point = 167
   Insn 21(l0): point = 169
   Insn 20(l0): point = 171
   Insn 19(l0): point = 173
   Insn 18(l0): point = 175
   Insn 17(l0): point = 177
   Insn 16(l0): point = 179
   Insn 15(l0): point = 181
   Insn 14(l0): point = 183
   Insn 13(l0): point = 185
   Insn 12(l0): point = 187
   Insn 11(l0): point = 189
   Insn 10(l0): point = 191
   Insn 9(l0): point = 193
   Insn 8(l0): point = 195
   Insn 123(l0): point = 197
 a0(r126): [3..4]
 a1(r125): [5..6]
 a2(r82): [9..197]
 a3(r124): [41..46]
 a4(r123): [47..48]
 a5(r150): [49..50]
 a6(r122): [49..52]
 a7(r121): [53..54]
 a8(r120): [12..13]
 a9(r119): [14..15]
 a10(r149): [16..17]
 a11(r118): [16..19]
 a12(r117): [20..21]
 a13(r148): [62..63]
 a14(r111): [68..83]
 a15(r114): [68..75]
 a16(r116): [68..69]
 a17(r115): [70..71]
 a18(r147): [72..73]
 a19(r113): [76..77]
 a20(r112): [78..79]
 a21(r146): [80..81]
 a22(r110): [84..85]
 a23(r145): [86..87]
 a24(r103): [90..109]
 a25(r106): [90..101]
 a26(r109): [90..93]
 a27(r144): [90..91]
 a28(r108): [94..95]
 a29(r107): [96..97]
 a30(r143): [98..99]
 a31(r105): [102..103]
 a32(r104): [104..105]
 a33(r142): [106..107]
 a34(r102): [110..111]
 a35(r101): [112..113]
 a36(r141): [114..115]
 a37(r95): [118..133]
 a38(r98): [118..125]
 a39(r100): [118..119]
 a40(r99): [120..121]
 a41(r140): [122..123]
 a42(r97): [126..127]
 a43(r96): [128..129]
 a44(r139): [130..131]
 a45(r94): [134..135]
 a46(r138): [136..137]
 a47(r87): [140..159]
 a48(r90): [140..151]
 a49(r93): [140..143]
 a50(r137): [140..141]
 a51(r92): [144..145]
 a52(r91): [146..147]
 a53(r136): [148..149]
 a54(r89): [152..153]
 a55(r88): [154..155]
 a56(r135): [156..157]
 a57(r86): [160..161]
 a58(r85): [162..163]
 a59(r134): [164..165]
 a60(r133): [168..169]
 a61(r132): [172..173]
 a62(r84): [180..181]
 a63(r83): [182..183]
 a64(r131): [184..185]
 a65(r129): [192..193]
 a66(r130): [194..195]
Compressing live ranges: from 200 to 108 - 54%
Ranges after the compression:
 a0(r126): [0..1]
 a1(r125): [2..3]
 a2(r82): [4..107]
 a3(r124): [12..13]
 a4(r123): [14..15]
 a5(r150): [16..17]
 a6(r122): [16..17]
 a7(r121): [18..19]
 a8(r120): [4..5]
 a9(r119): [6..7]
 a10(r149): [8..9]
 a11(r118): [8..9]
 a12(r117): [10..11]
 a13(r148): [20..21]
 a14(r111): [22..33]
 a15(r114): [22..27]
 a16(r116): [22..23]
 a17(r115): [24..25]
 a18(r147): [26..27]
 a19(r113): [28..29]
 a20(r112): [30..31]
 a21(r146): [32..33]
 a22(r110): [34..35]
 a23(r145): [36..37]
 a24(r103): [38..51]
 a25(r106): [38..45]
 a26(r109): [38..39]
 a27(r144): [38..39]
 a28(r108): [40..41]
 a29(r107): [42..43]
 a30(r143): [44..45]
 a31(r105): [46..47]
 a32(r104): [48..49]
 a33(r142): [50..51]
 a34(r102): [52..53]
 a35(r101): [54..55]
 a36(r141): [56..57]
 a37(r95): [58..69]
 a38(r98): [58..63]
 a39(r100): [58..59]
 a40(r99): [60..61]
 a41(r140): [62..63]
 a42(r97): [64..65]
 a43(r96): [66..67]
 a44(r139): [68..69]
 a45(r94): [70..71]
 a46(r138): [72..73]
 a47(r87): [74..87]
 a48(r90): [74..81]
 a49(r93): [74..75]
 a50(r137): [74..75]
 a51(r92): [76..77]
 a52(r91): [78..79]
 a53(r136): [80..81]
 a54(r89): [82..83]
 a55(r88): [84..85]
 a56(r135): [86..87]
 a57(r86): [88..89]
 a58(r85): [90..91]
 a59(r134): [92..93]
 a60(r133): [94..95]
 a61(r132): [96..97]
 a62(r84): [98..99]
 a63(r83): [100..101]
 a64(r131): [102..103]
 a65(r129): [104..105]
 a66(r130): [106..107]
  pref0:a27(r144)<-hr1@1000
  pref1:a50(r137)<-hr1@1000
  pref2:a61(r132)<-hr0@1500
  pref3:a0(r126)<-hr0@1500
  pref4:a16(r116)<-hr1@1000
  pref5:a39(r100)<-hr1@1000
  regions=1, blocks=8, points=108
    allocnos=67 (big 0), copies=0, conflicts=0, ranges=67
Disposition:
    2:r82  l0     3   63:r83  l0     0   62:r84  l0     0   58:r85  l0     0
   57:r86  l0     0   47:r87  l0     2   55:r88  l0     0   54:r89  l0     0
   48:r90  l0     4   52:r91  l0     0   51:r92  l0     0   49:r93  l0     5
   45:r94  l0     0   37:r95  l0     2   43:r96  l0     0   42:r97  l0     0
   38:r98  l0     0   40:r99  l0     1   39:r100 l0     1   35:r101 l0     0
   34:r102 l0     0   24:r103 l0     2   32:r104 l0     0   31:r105 l0     0
   25:r106 l0     4   29:r107 l0     0   28:r108 l0     0   26:r109 l0     5
   22:r110 l0     0   14:r111 l0     2   20:r112 l0     0   19:r113 l0     0
   15:r114 l0     0   17:r115 l0     1   16:r116 l0     1   12:r117 l0     0
   11:r118 l0     1    9:r119 l0     0    8:r120 l0     0    7:r121 l0     0
    6:r122 l0     1    4:r123 l0     0    3:r124 l0     0    1:r125 l0     0
    0:r126 l0     0   65:r129 l0     0   66:r130 l0     0   64:r131 l0     0
   61:r132 l0     0   60:r133 l0     0   59:r134 l0     0   56:r135 l0     0
   53:r136 l0     0   50:r137 l0     0   46:r138 l0     0   44:r139 l0     0
   41:r140 l0     1   36:r141 l0     0   33:r142 l0     0   30:r143 l0     0
   27:r144 l0     0   23:r145 l0     0   21:r146 l0     0   18:r147 l0     1
   13:r148 l0     0   10:r149 l0     0    5:r150 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


change_ldt

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r3={1d,1u} r6={1d,7u} r7={7d,18u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,9u,3e} r17={45d,2u} r18={2d} r19={1d,31u,2e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,12u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u,1e} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u,1e} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 419{263d,149u,7e} in 97{95 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 123 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 123 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 123 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 2 9 2 (set (reg:SI 130)
        (mem/c:SI (reg/f:SI 16 argp) [1 text_size+0 S4 A32])) "fs/exec.c":148:16 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 129)
                (plus:SI (reg:SI 130)
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":148:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [1 text_size+0 S4 A32])
                    (const_int 4095 [0xfff]))
                (nil)))))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 code_limit+0 S4 A32])
        (reg:SI 129)) "fs/exec.c":148:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 code_limit+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 code_limit+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":149:16 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 data_limit+0 S4 A32])
        (const_int 67108864 [0x4000000])) "fs/exec.c":150:16 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 131)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":151:17 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 83 [ current.20_1 ])
        (mem/f/c:SI (reg/f:SI 131) [5 current+0 S4 A32])) "fs/exec.c":151:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg/f:SI 84 [ _2 ])
                (plus:SI (reg/f:SI 83 [ current.20_1 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":151:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.20_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 84 [ _2 ])) "fs/exec.c":151:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7a64a9d15900 _get_base>) [0 _get_base S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":151:17 823 {*call_value}
     (nil)
    (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":151:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 19 18 20 2 (set (reg:SI 132)
        (reg:SI 0 ax)) "fs/exec.c":151:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 code_base+0 S4 A32])
        (reg:SI 132)) "fs/exec.c":151:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 21 20 22 2 (set (reg:SI 133)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 code_base+0 S4 A32])) "fs/exec.c":152:15 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 data_base+0 S4 A32])
        (reg:SI 133)) "fs/exec.c":152:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 23 22 24 2 (set (reg/f:SI 134)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 85 [ current.21_3 ])
        (mem/f/c:SI (reg/f:SI 134) [5 current+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg/f:SI 86 [ _4 ])
                (plus:SI (reg/f:SI 85 [ current.21_3 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85 [ current.21_3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 2 (parallel [
            (set (reg/f:SI 87 [ _5 ])
                (plus:SI (reg/f:SI 86 [ _4 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 2 (set (reg/f:SI 135)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 88 [ current.22_6 ])
        (mem/f/c:SI (reg/f:SI 135) [5 current+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 89 [ _7 ])
                (plus:SI (reg/f:SI 88 [ current.22_6 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 88 [ current.22_6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 2 (parallel [
            (set (reg/f:SI 90 [ _8 ])
                (plus:SI (reg/f:SI 89 [ _7 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 2 (set (reg/f:SI 136)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:SI 91 [ current.23_9 ])
        (mem/f/c:SI (reg/f:SI 136) [5 current+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))
(insn 33 32 34 2 (parallel [
            (set (reg/f:SI 92 [ _10 ])
                (plus:SI (reg/f:SI 91 [ current.23_9 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 91 [ current.23_9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 2 (parallel [
            (set (reg/f:SI 93 [ _11 ])
                (plus:SI (reg/f:SI 92 [ _10 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 2 (set (reg:SI 137)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 code_base+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %%dl, %1
	movb %%dh, %2
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 87 [ _5 ]) [0 *_5+0 S1 A8])
                    (mem:QI (reg/f:SI 90 [ _8 ]) [0 *_8+0 S1 A8])
                    (mem:QI (reg/f:SI 93 [ _11 ]) [0 *_11+0 S1 A8])
                    (reg:SI 137)
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:153)
                    (asm_input:QI ("m") fs/exec.c:153)
                    (asm_input:QI ("m") fs/exec.c:153)
                    (asm_input:SI ("d") fs/exec.c:153)
                ]
                 [] fs/exec.c:153)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 -1
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
            (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
                (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 37 36 38 2 (set (reg/f:SI 138)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg/f:SI 94 [ current.24_12 ])
        (mem/f/c:SI (reg/f:SI 138) [5 current+0 S4 A32])) "fs/exec.c":154:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))
(insn 39 38 40 2 (parallel [
            (set (reg/f:SI 95 [ _13 ])
                (plus:SI (reg/f:SI 94 [ current.24_12 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ current.24_12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 2 (set (reg/f:SI 139)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg/f:SI 96 [ current.25_14 ])
        (mem/f/c:SI (reg/f:SI 139) [5 current+0 S4 A32])) "fs/exec.c":154:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (nil)))
(insn 42 41 43 2 (parallel [
            (set (reg/f:SI 97 [ _15 ])
                (plus:SI (reg/f:SI 96 [ current.25_14 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 96 [ current.25_14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 2 (parallel [
            (set (reg/f:SI 98 [ _16 ])
                (plus:SI (reg/f:SI 97 [ _15 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 2 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 code_limit+0 S4 A32])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (parallel [
            (set (reg:SI 99 [ _17 ])
                (plus:SI (reg:SI 140)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 code_limit+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 46 45 47 2 (parallel [
            (set (reg:SI 100 [ _18 ])
                (lshiftrt:SI (reg:SI 99 [ _17 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %1, %%dh
	andb $0xf0, %%dh
	orb %%dh, %%dl
	movb %%dl, %1
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 95 [ _13 ]) [0 MEM[(char *)_13]+0 S1 A8])
                    (mem:QI (reg/f:SI 98 [ _16 ]) [0 *_16+0 S1 A8])
                    (reg:SI 100 [ _18 ])
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:154)
                    (asm_input:QI ("m") fs/exec.c:154)
                    (asm_input:SI ("d") fs/exec.c:154)
                ]
                 [] fs/exec.c:154)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 -1
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (expr_list:REG_DEAD (reg/f:SI 98 [ _16 ])
            (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 48 47 49 2 (set (reg/f:SI 141)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 49 48 50 2 (set (reg/f:SI 101 [ current.26_19 ])
        (mem/f/c:SI (reg/f:SI 141) [5 current+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))
(insn 50 49 51 2 (parallel [
            (set (reg/f:SI 102 [ _20 ])
                (plus:SI (reg/f:SI 101 [ current.26_19 ])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 101 [ current.26_19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 2 (parallel [
            (set (reg/f:SI 103 [ _21 ])
                (plus:SI (reg/f:SI 102 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 2 (set (reg/f:SI 142)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg/f:SI 104 [ current.27_22 ])
        (mem/f/c:SI (reg/f:SI 142) [5 current+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))
(insn 54 53 55 2 (parallel [
            (set (reg/f:SI 105 [ _23 ])
                (plus:SI (reg/f:SI 104 [ current.27_22 ])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 104 [ current.27_22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 55 54 56 2 (parallel [
            (set (reg/f:SI 106 [ _24 ])
                (plus:SI (reg/f:SI 105 [ _23 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 2 (set (reg/f:SI 143)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 57 56 58 2 (set (reg/f:SI 107 [ current.28_25 ])
        (mem/f/c:SI (reg/f:SI 143) [5 current+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (nil)))
(insn 58 57 59 2 (parallel [
            (set (reg/f:SI 108 [ _26 ])
                (plus:SI (reg/f:SI 107 [ current.28_25 ])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 107 [ current.28_25 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 59 58 60 2 (parallel [
            (set (reg/f:SI 109 [ _27 ])
                (plus:SI (reg/f:SI 108 [ _26 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 108 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 60 59 61 2 (set (reg:SI 144)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 data_base+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 61 60 62 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %%dl, %1
	movb %%dh, %2
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 103 [ _21 ]) [0 *_21+0 S1 A8])
                    (mem:QI (reg/f:SI 106 [ _24 ]) [0 *_24+0 S1 A8])
                    (mem:QI (reg/f:SI 109 [ _27 ]) [0 *_27+0 S1 A8])
                    (reg:SI 144)
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:155)
                    (asm_input:QI ("m") fs/exec.c:155)
                    (asm_input:QI ("m") fs/exec.c:155)
                    (asm_input:SI ("d") fs/exec.c:155)
                ]
                 [] fs/exec.c:155)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 -1
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg/f:SI 109 [ _27 ])
            (expr_list:REG_DEAD (reg/f:SI 106 [ _24 ])
                (expr_list:REG_DEAD (reg/f:SI 103 [ _21 ])
                    (expr_list:REG_UNUSED (reg:CC 17 flags)
                        (nil)))))))
(insn 62 61 63 2 (set (reg/f:SI 145)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 63 62 64 2 (set (reg/f:SI 110 [ current.29_28 ])
        (mem/f/c:SI (reg/f:SI 145) [5 current+0 S4 A32])) "fs/exec.c":156:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(insn 64 63 65 2 (parallel [
            (set (reg/f:SI 111 [ _29 ])
                (plus:SI (reg/f:SI 110 [ current.29_28 ])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 110 [ current.29_28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 2 (set (reg/f:SI 146)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg/f:SI 112 [ current.30_30 ])
        (mem/f/c:SI (reg/f:SI 146) [5 current+0 S4 A32])) "fs/exec.c":156:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 146)
        (nil)))
(insn 67 66 68 2 (parallel [
            (set (reg/f:SI 113 [ _31 ])
                (plus:SI (reg/f:SI 112 [ current.30_30 ])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 112 [ current.30_30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 69 2 (parallel [
            (set (reg/f:SI 114 [ _32 ])
                (plus:SI (reg/f:SI 113 [ _31 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 113 [ _31 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 2 (set (reg:SI 147)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 data_limit+0 S4 A32])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (parallel [
            (set (reg:SI 115 [ _33 ])
                (plus:SI (reg:SI 147)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [1 data_limit+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 71 70 72 2 (parallel [
            (set (reg:SI 116 [ _34 ])
                (lshiftrt:SI (reg:SI 115 [ _33 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 115 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 72 71 73 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %1, %%dh
	andb $0xf0, %%dh
	orb %%dh, %%dl
	movb %%dl, %1
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 111 [ _29 ]) [0 MEM[(char *)_29]+0 S1 A8])
                    (mem:QI (reg/f:SI 114 [ _32 ]) [0 *_32+0 S1 A8])
                    (reg:SI 116 [ _34 ])
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:156)
                    (asm_input:QI ("m") fs/exec.c:156)
                    (asm_input:SI ("d") fs/exec.c:156)
                ]
                 [] fs/exec.c:156)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 -1
     (expr_list:REG_DEAD (reg:SI 116 [ _34 ])
        (expr_list:REG_DEAD (reg/f:SI 114 [ _32 ])
            (expr_list:REG_DEAD (reg/f:SI 111 [ _29 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 73 72 74 2 (parallel [
            (asm_operands/v ("pushl $0x17
	pop %%fs") ("") 0 []
                 []
                 [] fs/exec.c:158)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":158:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 74 73 75 2 (set (reg:SI 148)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 data_limit+0 S4 A32])) "fs/exec.c":159:15 75 {*movsi_internal}
     (nil))
(insn 75 74 76 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 data_base+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 data_base+0 S4 A32])
                    (reg:SI 148)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":159:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 121 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 31 [0x1f])) "fs/exec.c":160:12 75 {*movsi_internal}
     (nil))
(jump_insn 121 76 122 2 (set (pc)
        (label_ref 103)) "fs/exec.c":160:5 807 {jump}
     (nil)
 -> 103)
(barrier 122 121 105)
(code_label 105 122 79 3 46 (nil) [1 uses])
(note 79 105 80 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 data_base+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 data_base+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":161:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 81 80 82 3 (set (reg:SI 117 [ i.31_35 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":162:17 75 {*movsi_internal}
     (nil))
(insn 82 81 83 3 (parallel [
            (set (reg:SI 118 [ _36 ])
                (ashift:SI (reg:SI 117 [ i.31_35 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":162:17 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 117 [ i.31_35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 3 (set (reg/f:SI 149)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [19 page+0 S4 A32])) "fs/exec.c":162:17 75 {*movsi_internal}
     (nil))
(insn 84 83 85 3 (parallel [
            (set (reg/f:SI 119 [ _37 ])
                (plus:SI (reg:SI 118 [ _36 ])
                    (reg/f:SI 149)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":162:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_DEAD (reg:SI 118 [ _36 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [19 page+0 S4 A32])
                        (reg:SI 118 [ _36 ]))
                    (nil))))))
(insn 85 84 86 3 (set (reg:SI 120 [ _38 ])
        (mem:SI (reg/f:SI 119 [ _37 ]) [1 *_37+0 S4 A32])) "fs/exec.c":162:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119 [ _37 ])
        (nil)))
(insn 86 85 87 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ _38 ])
            (const_int 0 [0]))) "fs/exec.c":162:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 120 [ _38 ])
        (nil)))
(jump_insn 87 86 88 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "fs/exec.c":162:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 100)
(note 88 87 89 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 4 (set (reg:SI 121 [ i.32_39 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":163:26 75 {*movsi_internal}
     (nil))
(insn 90 89 91 4 (parallel [
            (set (reg:SI 122 [ _40 ])
                (ashift:SI (reg:SI 121 [ i.32_39 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:26 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 121 [ i.32_39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 4 (set (reg/f:SI 150)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [19 page+0 S4 A32])) "fs/exec.c":163:26 75 {*movsi_internal}
     (nil))
(insn 92 91 93 4 (parallel [
            (set (reg/f:SI 123 [ _41 ])
                (plus:SI (reg:SI 122 [ _40 ])
                    (reg/f:SI 150)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:26 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_DEAD (reg:SI 122 [ _40 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [19 page+0 S4 A32])
                        (reg:SI 122 [ _40 ]))
                    (nil))))))
(insn 93 92 94 4 (set (reg:SI 124 [ _42 ])
        (mem:SI (reg/f:SI 123 [ _41 ]) [1 *_41+0 S4 A32])) "fs/exec.c":163:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123 [ _41 ])
        (nil)))
(insn 94 93 95 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 95 94 96 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 data_base+0 S4 A32])) "fs/exec.c":163:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 96 95 97 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 124 [ _42 ])) "fs/exec.c":163:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 124 [ _42 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 97 96 98 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":163:13 75 {*movsi_internal}
     (nil))
(call_insn 98 97 99 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("put_page") [flags 0x41]  <function_decl 0x7a64a9d38c00 put_page>) [0 put_page S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":163:13 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 99 98 100 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 100 99 101 5 45 (nil) [1 uses])
(note 101 100 102 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":160:42 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 103 102 104 6 44 (nil) [1 uses])
(note 104 103 108 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 108 104 109 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":160:35 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 109 108 110 6 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "fs/exec.c":160:35 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 105)
(note 110 109 111 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 114 7 (set (reg:SI 125 [ _57 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 data_limit+0 S4 A32])) "fs/exec.c":165:12 75 {*movsi_internal}
     (nil))
(insn 114 111 118 7 (set (reg:SI 126 [ <retval> ])
        (reg:SI 125 [ _57 ])) "fs/exec.c":165:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ _57 ])
        (nil)))
(insn 118 114 119 7 (set (reg/i:SI 0 ax)
        (reg:SI 126 [ <retval> ])) "fs/exec.c":166:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126 [ <retval> ])
        (nil)))
(insn 119 118 0 7 (use (reg/i:SI 0 ax)) "fs/exec.c":166:1 -1
     (nil))

;; Function do_execve (do_execve, funcdef_no=12, decl_uid=1500, cgraph_uid=13, symbol_order=12)

scanning new insn with uid = 872.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 93 n_edges 137 count 109 (  1.2)
;; 9 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
;;
;; Loop 8
;;  header 90, latch 89
;;  depth 1, outer 0
;;  nodes: 90 89
;;
;; Loop 5
;;  header 85, latch 84
;;  depth 1, outer 0
;;  nodes: 85 84
;;
;; Loop 4
;;  header 80, latch 79
;;  depth 1, outer 0
;;  nodes: 80 79 77 78
;;
;; Loop 3
;;  header 75, latch 74
;;  depth 1, outer 0
;;  nodes: 75 74
;;
;; Loop 2
;;  header 10, latch 56
;;  depth 1, outer 0
;;  nodes: 10 56 54 52 50 51 48 49 46 47 43 44 45 42 39 37 36 31 35 34 33 32 30 29 28 26 22 24 23 21 20 19 18 17 16 15 14 13 12 40 41
;;
;; Loop 7
;;  header 43, latch 42
;;  depth 2, outer 2
;;  nodes: 43 42 40 41 45 44
;;
;; Loop 6
;;  header 34, latch 33
;;  depth 2, outer 2
;;  nodes: 34 33 35
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 8 9 }
;; 8 succs { 92 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 87 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 26 }
;; 23 succs { 25 24 }
;; 24 succs { 25 26 }
;; 25 succs { 87 }
;; 26 succs { 27 28 }
;; 27 succs { 87 }
;; 28 succs { 29 57 }
;; 29 succs { 30 57 }
;; 30 succs { 31 57 }
;; 31 succs { 32 36 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 33 35 }
;; 35 succs { 33 36 }
;; 36 succs { 38 37 }
;; 37 succs { 38 39 }
;; 38 succs { 88 }
;; 39 succs { 43 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 }
;; 43 succs { 44 46 }
;; 44 succs { 45 46 }
;; 45 succs { 40 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 53 54 }
;; 53 succs { 88 }
;; 54 succs { 55 56 }
;; 55 succs { 88 }
;; 56 succs { 10 }
;; 57 succs { 65 58 }
;; 58 succs { 65 59 }
;; 59 succs { 65 60 }
;; 60 succs { 65 61 }
;; 61 succs { 62 63 }
;; 62 succs { 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 87 }
;; 66 succs { 67 68 }
;; 67 succs { 87 }
;; 68 succs { 69 71 }
;; 69 succs { 70 71 }
;; 70 succs { 87 }
;; 71 succs { 72 73 }
;; 72 succs { 73 }
;; 73 succs { 75 }
;; 74 succs { 75 }
;; 75 succs { 74 76 }
;; 76 succs { 80 }
;; 77 succs { 78 79 }
;; 78 succs { 79 }
;; 79 succs { 80 }
;; 80 succs { 77 81 }
;; 81 succs { 82 83 }
;; 82 succs { 83 }
;; 83 succs { 85 }
;; 84 succs { 85 }
;; 85 succs { 84 86 }
;; 86 succs { 92 }
;; 87 succs { 88 }
;; 88 succs { 90 }
;; 89 succs { 90 }
;; 90 succs { 89 91 }
;; 91 succs { 92 }
;; 92 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r301,l0) best CREG, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r290,l0) best AREG, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r288,l0) best AREG, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r284,l0) best AREG, allocno GENERAL_REGS
    r283: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r283,l0) best AREG, allocno GENERAL_REGS
    r282: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r282,l0) best AREG, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r279,l0) best AREG, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r276,l0) best AREG, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a131 (r273,l0) best AREG, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r270,l0) best AREG, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a164 (r252,l0) best AREG, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r237,l0) best AREG, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a237 (r218,l0) best AREG, allocno GENERAL_REGS
    r217: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a238 (r217,l0) best AREG, allocno GENERAL_REGS
    r216: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a239 (r216,l0) best AREG, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r212,l0) best AREG, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r179,l0) best AREG, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r177,l0) best AREG, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r172,l0) best AREG, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r169,l0) best AREG, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r137,l0) best AREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a142 (r132,l0) best Q_REGS, allocno Q_REGS
    r131: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a144 (r131,l0) best Q_REGS, allocno Q_REGS
    r130: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a146 (r130,l0) best Q_REGS, allocno Q_REGS
    r129: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a148 (r129,l0) best Q_REGS, allocno Q_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a152 (r127,l0) best Q_REGS, allocno Q_REGS
    r126: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a156 (r126,l0) best Q_REGS, allocno Q_REGS
    r125: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a158 (r125,l0) best Q_REGS, allocno Q_REGS
    r124: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a160 (r124,l0) best Q_REGS, allocno Q_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a170 (r121,l0) best Q_REGS, allocno Q_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a174 (r118,l0) best Q_REGS, allocno Q_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a205 (r104,l0) best Q_REGS, allocno Q_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a218 (r96,l0) best Q_REGS, allocno Q_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r212,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:13000
  a2(r82,l0) costs: AREG:32000 DREG:32000 CREG:32000 BREG:32000 SIREG:32000 DIREG:32000 AD_REGS:32000 CLOBBERED_REGS:32000 Q_REGS:32000 NON_Q_REGS:32000 TLS_GOTBASE_REGS:32000 GENERAL_REGS:32000 MEM:252000
  a3(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a14(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a20(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a24(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a29(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a33(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a34(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a36(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a38(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a39(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a41(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r179,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a44(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a46(r177,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a47(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a53(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a54(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a57(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a59(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a60(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a63(r169,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a64(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a66(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a67(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a68(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a69(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a70(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a71(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a72(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a73(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a74(r301,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a75(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a76(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a78(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a79(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a80(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a81(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a82(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a83(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a84(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a85(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a86(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a87(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a88(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a89(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a90(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a91(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a92(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a93(r290,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a94(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a95(r288,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a96(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a97(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a98(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a99(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a100(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a101(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a102(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a103(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:3000
  a104(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a105(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a106(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a107(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a108(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a109(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a110(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a111(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a112(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a113(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a114(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a115(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a116(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a117(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a118(r284,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a119(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a120(r283,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a121(r282,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a122(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a123(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a124(r279,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a125(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a126(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a127(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a128(r276,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a129(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a130(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a131(r273,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a132(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a133(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a134(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a135(r270,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a136(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a137(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a138(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a139(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a140(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a141(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a142(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a143(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a144(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a145(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a146(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a147(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a148(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a149(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a150(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a151(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a152(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a153(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a154(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a155(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a156(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a157(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a158(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a159(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a160(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a161(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a162(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a163(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a164(r252,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a165(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a166(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a167(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a168(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a169(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a170(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a171(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a172(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a173(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a174(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a175(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a176(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a177(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a178(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:54000
  a179(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a180(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a181(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a182(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a183(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a184(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a185(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a186(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a187(r237,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a188(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a189(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a190(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a191(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a192(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a193(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a194(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a195(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a196(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a197(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a198(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a199(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a200(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a201(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a202(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a203(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a204(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a205(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a206(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a207(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a208(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a209(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a210(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a211(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a212(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a213(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a214(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a215(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a216(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a217(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a218(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a219(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a220(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a221(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a222(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a223(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a224(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a225(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a226(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a227(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a228(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a229(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a230(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a231(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a232(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a233(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a234(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a235(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a236(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a237(r218,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a238(r217,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a239(r216,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a240(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a241(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a242(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a243(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a244(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a245(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a246(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 824(l0): point = 0
   Insn 823(l0): point = 2
   Insn 819(l0): point = 4
   Insn 814(l0): point = 7
   Insn 805(l0): point = 10
   Insn 804(l0): point = 12
   Insn 803(l0): point = 14
   Insn 802(l0): point = 16
   Insn 801(l0): point = 18
   Insn 800(l0): point = 20
   Insn 799(l0): point = 22
   Insn 798(l0): point = 24
   Insn 812(l0): point = 27
   Insn 811(l0): point = 29
   Insn 870(l0): point = 32
   Insn 794(l0): point = 34
   Insn 791(l0): point = 37
   Insn 790(l0): point = 39
   Insn 789(l0): point = 41
   Insn 788(l0): point = 43
   Insn 787(l0): point = 45
   Insn 868(l0): point = 48
   Insn 782(l0): point = 50
   Insn 781(l0): point = 52
   Insn 780(l0): point = 54
   Insn 779(l0): point = 56
   Insn 778(l0): point = 58
   Insn 777(l0): point = 60
   Insn 776(l0): point = 62
   Insn 775(l0): point = 64
   Insn 766(l0): point = 67
   Insn 765(l0): point = 69
   Insn 764(l0): point = 71
   Insn 763(l0): point = 73
   Insn 762(l0): point = 75
   Insn 761(l0): point = 77
   Insn 760(l0): point = 79
   Insn 759(l0): point = 81
   Insn 758(l0): point = 83
   Insn 773(l0): point = 86
   Insn 772(l0): point = 88
   Insn 770(l0): point = 90
   Insn 769(l0): point = 92
   Insn 866(l0): point = 95
   Insn 754(l0): point = 97
   Insn 753(l0): point = 99
   Insn 752(l0): point = 101
   Insn 751(l0): point = 103
   Insn 750(l0): point = 105
   Insn 749(l0): point = 107
   Insn 748(l0): point = 109
   Insn 747(l0): point = 111
   Insn 746(l0): point = 113
   Insn 745(l0): point = 115
   Insn 744(l0): point = 117
   Insn 743(l0): point = 119
   Insn 742(l0): point = 121
   Insn 741(l0): point = 123
   Insn 740(l0): point = 125
   Insn 739(l0): point = 127
   Insn 738(l0): point = 129
   Insn 737(l0): point = 131
   Insn 736(l0): point = 133
   Insn 735(l0): point = 135
   Insn 734(l0): point = 137
   Insn 733(l0): point = 139
   Insn 732(l0): point = 141
   Insn 731(l0): point = 143
   Insn 730(l0): point = 145
   Insn 729(l0): point = 147
   Insn 728(l0): point = 149
   Insn 727(l0): point = 151
   Insn 726(l0): point = 153
   Insn 725(l0): point = 155
   Insn 724(l0): point = 157
   Insn 723(l0): point = 159
   Insn 722(l0): point = 161
   Insn 721(l0): point = 163
   Insn 720(l0): point = 165
   Insn 719(l0): point = 167
   Insn 718(l0): point = 169
   Insn 717(l0): point = 171
   Insn 716(l0): point = 173
   Insn 715(l0): point = 175
   Insn 714(l0): point = 177
   Insn 713(l0): point = 179
   Insn 712(l0): point = 181
   Insn 711(l0): point = 183
   Insn 710(l0): point = 185
   Insn 709(l0): point = 187
   Insn 708(l0): point = 189
   Insn 707(l0): point = 191
   Insn 706(l0): point = 193
   Insn 705(l0): point = 195
   Insn 704(l0): point = 197
   Insn 703(l0): point = 199
   Insn 702(l0): point = 201
   Insn 701(l0): point = 203
   Insn 700(l0): point = 205
   Insn 699(l0): point = 207
   Insn 698(l0): point = 209
   Insn 695(l0): point = 212
   Insn 694(l0): point = 214
   Insn 692(l0): point = 217
   Insn 691(l0): point = 219
   Insn 690(l0): point = 221
   Insn 689(l0): point = 223
   Insn 688(l0): point = 225
   Insn 687(l0): point = 227
   Insn 686(l0): point = 229
   Insn 685(l0): point = 231
   Insn 684(l0): point = 233
   Insn 683(l0): point = 235
   Insn 682(l0): point = 237
   Insn 681(l0): point = 239
   Insn 680(l0): point = 241
   Insn 679(l0): point = 243
   Insn 678(l0): point = 245
   Insn 677(l0): point = 247
   Insn 676(l0): point = 249
   Insn 675(l0): point = 251
   Insn 674(l0): point = 253
   Insn 673(l0): point = 255
   Insn 672(l0): point = 257
   Insn 669(l0): point = 259
   Insn 671(l0): point = 261
   Insn 670(l0): point = 263
   Insn 668(l0): point = 265
   Insn 667(l0): point = 267
   Insn 666(l0): point = 269
   Insn 665(l0): point = 271
   Insn 664(l0): point = 273
   Insn 663(l0): point = 275
   Insn 662(l0): point = 277
   Insn 661(l0): point = 279
   Insn 660(l0): point = 281
   Insn 659(l0): point = 283
   Insn 658(l0): point = 285
   Insn 657(l0): point = 287
   Insn 656(l0): point = 289
   Insn 655(l0): point = 291
   Insn 654(l0): point = 293
   Insn 651(l0): point = 295
   Insn 653(l0): point = 297
   Insn 652(l0): point = 299
   Insn 650(l0): point = 301
   Insn 649(l0): point = 303
   Insn 648(l0): point = 305
   Insn 630(l0): point = 308
   Insn 629(l0): point = 310
   Insn 628(l0): point = 312
   Insn 627(l0): point = 314
   Insn 626(l0): point = 316
   Insn 625(l0): point = 318
   Insn 624(l0): point = 320
   Insn 623(l0): point = 322
   Insn 646(l0): point = 325
   Insn 645(l0): point = 327
   Insn 639(l0): point = 330
   Insn 636(l0): point = 333
   Insn 635(l0): point = 335
   Insn 634(l0): point = 337
   Insn 633(l0): point = 339
   Insn 632(l0): point = 341
   Insn 864(l0): point = 344
   Insn 619(l0): point = 346
   Insn 610(l0): point = 349
   Insn 609(l0): point = 351
   Insn 608(l0): point = 353
   Insn 607(l0): point = 355
   Insn 606(l0): point = 357
   Insn 605(l0): point = 359
   Insn 604(l0): point = 361
   Insn 603(l0): point = 363
   Insn 617(l0): point = 366
   Insn 616(l0): point = 368
   Insn 862(l0): point = 371
   Insn 599(l0): point = 373
   Insn 598(l0): point = 375
   Insn 597(l0): point = 377
   Insn 596(l0): point = 379
   Insn 595(l0): point = 381
   Insn 592(l0): point = 384
   Insn 591(l0): point = 386
   Insn 590(l0): point = 388
   Insn 589(l0): point = 390
   Insn 588(l0): point = 392
   Insn 587(l0): point = 394
   Insn 586(l0): point = 396
   Insn 585(l0): point = 398
   Insn 583(l0): point = 401
   Insn 582(l0): point = 403
   Insn 581(l0): point = 405
   Insn 580(l0): point = 407
   Insn 579(l0): point = 409
   Insn 860(l0): point = 412
   Insn 574(l0): point = 414
   Insn 572(l0): point = 417
   Insn 571(l0): point = 419
   Insn 570(l0): point = 421
   Insn 569(l0): point = 423
   Insn 568(l0): point = 425
   Insn 567(l0): point = 427
   Insn 566(l0): point = 429
   Insn 565(l0): point = 431
   Insn 564(l0): point = 433
   Insn 563(l0): point = 435
   Insn 562(l0): point = 437
   Insn 561(l0): point = 439
   Insn 560(l0): point = 441
   Insn 559(l0): point = 443
   Insn 558(l0): point = 445
   Insn 557(l0): point = 447
   Insn 556(l0): point = 449
   Insn 555(l0): point = 451
   Insn 554(l0): point = 453
   Insn 553(l0): point = 455
   Insn 552(l0): point = 457
   Insn 551(l0): point = 459
   Insn 550(l0): point = 461
   Insn 549(l0): point = 463
   Insn 547(l0): point = 466
   Insn 546(l0): point = 468
   Insn 858(l0): point = 471
   Insn 541(l0): point = 473
   Insn 540(l0): point = 475
   Insn 539(l0): point = 477
   Insn 538(l0): point = 479
   Insn 537(l0): point = 481
   Insn 536(l0): point = 483
   Insn 535(l0): point = 485
   Insn 534(l0): point = 487
   Insn 533(l0): point = 489
   Insn 531(l0): point = 492
   Insn 530(l0): point = 494
   Insn 529(l0): point = 496
   Insn 856(l0): point = 499
   Insn 524(l0): point = 501
   Insn 521(l0): point = 504
   Insn 520(l0): point = 506
   Insn 519(l0): point = 508
   Insn 516(l0): point = 511
   Insn 854(l0): point = 514
   Insn 511(l0): point = 516
   Insn 509(l0): point = 519
   Insn 508(l0): point = 521
   Insn 507(l0): point = 523
   Insn 506(l0): point = 525
   Insn 505(l0): point = 527
   Insn 504(l0): point = 529
   Insn 503(l0): point = 531
   Insn 502(l0): point = 533
   Insn 501(l0): point = 535
   Insn 500(l0): point = 537
   Insn 498(l0): point = 540
   Insn 497(l0): point = 542
   Insn 494(l0): point = 544
   Insn 493(l0): point = 546
   Insn 492(l0): point = 548
   Insn 491(l0): point = 550
   Insn 490(l0): point = 552
   Insn 488(l0): point = 555
   Insn 487(l0): point = 557
   Insn 486(l0): point = 559
   Insn 484(l0): point = 562
   Insn 483(l0): point = 564
   Insn 482(l0): point = 566
   Insn 480(l0): point = 569
   Insn 479(l0): point = 571
   Insn 478(l0): point = 573
   Insn 477(l0): point = 575
   Insn 476(l0): point = 577
   Insn 475(l0): point = 579
   Insn 474(l0): point = 581
   Insn 473(l0): point = 583
   Insn 850(l0): point = 586
   Insn 456(l0): point = 588
   Insn 455(l0): point = 590
   Insn 454(l0): point = 592
   Insn 453(l0): point = 594
   Insn 452(l0): point = 596
   Insn 848(l0): point = 599
   Insn 428(l0): point = 601
   Insn 844(l0): point = 604
   Insn 291(l0): point = 606
   Insn 840(l0): point = 609
   Insn 187(l0): point = 611
   Insn 838(l0): point = 614
   Insn 165(l0): point = 616
   Insn 830(l0): point = 619
   Insn 74(l0): point = 621
   Insn 72(l0): point = 624
   Insn 71(l0): point = 626
   Insn 70(l0): point = 628
   Insn 69(l0): point = 630
   Insn 68(l0): point = 632
   Insn 67(l0): point = 634
   Insn 852(l0): point = 637
   Insn 464(l0): point = 639
   Insn 463(l0): point = 641
   Insn 462(l0): point = 643
   Insn 461(l0): point = 645
   Insn 450(l0): point = 648
   Insn 449(l0): point = 650
   Insn 448(l0): point = 652
   Insn 447(l0): point = 654
   Insn 446(l0): point = 656
   Insn 445(l0): point = 658
   Insn 444(l0): point = 660
   Insn 443(l0): point = 662
   Insn 442(l0): point = 664
   Insn 441(l0): point = 666
   Insn 440(l0): point = 668
   Insn 439(l0): point = 670
   Insn 438(l0): point = 672
   Insn 437(l0): point = 674
   Insn 436(l0): point = 676
   Insn 435(l0): point = 678
   Insn 434(l0): point = 680
   Insn 433(l0): point = 682
   Insn 426(l0): point = 685
   Insn 425(l0): point = 687
   Insn 424(l0): point = 689
   Insn 423(l0): point = 691
   Insn 422(l0): point = 693
   Insn 421(l0): point = 695
   Insn 420(l0): point = 697
   Insn 419(l0): point = 699
   Insn 418(l0): point = 701
   Insn 417(l0): point = 703
   Insn 416(l0): point = 705
   Insn 415(l0): point = 707
   Insn 414(l0): point = 709
   Insn 413(l0): point = 711
   Insn 412(l0): point = 713
   Insn 395(l0): point = 716
   Insn 394(l0): point = 718
   Insn 393(l0): point = 720
   Insn 392(l0): point = 722
   Insn 391(l0): point = 724
   Insn 390(l0): point = 726
   Insn 389(l0): point = 728
   Insn 388(l0): point = 730
   Insn 387(l0): point = 732
   Insn 386(l0): point = 734
   Insn 385(l0): point = 736
   Insn 384(l0): point = 738
   Insn 383(l0): point = 740
   Insn 382(l0): point = 742
   Insn 381(l0): point = 744
   Insn 380(l0): point = 746
   Insn 351(l0): point = 749
   Insn 350(l0): point = 751
   Insn 349(l0): point = 753
   Insn 348(l0): point = 755
   Insn 347(l0): point = 757
   Insn 337(l0): point = 760
   Insn 336(l0): point = 762
   Insn 335(l0): point = 764
   Insn 334(l0): point = 766
   Insn 320(l0): point = 769
   Insn 319(l0): point = 771
   Insn 318(l0): point = 773
   Insn 317(l0): point = 775
   Insn 314(l0): point = 778
   Insn 307(l0): point = 781
   Insn 306(l0): point = 783
   Insn 305(l0): point = 785
   Insn 304(l0): point = 787
   Insn 311(l0): point = 790
   Insn 310(l0): point = 792
   Insn 309(l0): point = 794
   Insn 846(l0): point = 797
   Insn 300(l0): point = 799
   Insn 299(l0): point = 801
   Insn 298(l0): point = 803
   Insn 297(l0): point = 805
   Insn 296(l0): point = 807
   Insn 288(l0): point = 810
   Insn 287(l0): point = 812
   Insn 286(l0): point = 814
   Insn 285(l0): point = 816
   Insn 283(l0): point = 819
   Insn 282(l0): point = 821
   Insn 258(l0): point = 824
   Insn 257(l0): point = 826
   Insn 256(l0): point = 828
   Insn 255(l0): point = 830
   Insn 254(l0): point = 832
   Insn 253(l0): point = 834
   Insn 252(l0): point = 836
   Insn 251(l0): point = 838
   Insn 250(l0): point = 840
   Insn 249(l0): point = 842
   Insn 248(l0): point = 844
   Insn 247(l0): point = 846
   Insn 246(l0): point = 848
   Insn 245(l0): point = 850
   Insn 244(l0): point = 852
   Insn 243(l0): point = 854
   Insn 242(l0): point = 856
   Insn 241(l0): point = 858
   Insn 240(l0): point = 860
   Insn 239(l0): point = 862
   Insn 238(l0): point = 864
   Insn 237(l0): point = 866
   Insn 236(l0): point = 868
   Insn 235(l0): point = 870
   Insn 234(l0): point = 872
   Insn 233(l0): point = 874
   Insn 232(l0): point = 876
   Insn 231(l0): point = 878
   Insn 230(l0): point = 880
   Insn 229(l0): point = 882
   Insn 228(l0): point = 884
   Insn 227(l0): point = 886
   Insn 226(l0): point = 888
   Insn 224(l0): point = 891
   Insn 223(l0): point = 893
   Insn 221(l0): point = 896
   Insn 220(l0): point = 898
   Insn 219(l0): point = 900
   Insn 218(l0): point = 902
   Insn 217(l0): point = 904
   Insn 216(l0): point = 906
   Insn 214(l0): point = 909
   Insn 213(l0): point = 911
   Insn 212(l0): point = 913
   Insn 211(l0): point = 915
   Insn 210(l0): point = 917
   Insn 209(l0): point = 919
   Insn 208(l0): point = 921
   Insn 207(l0): point = 923
   Insn 206(l0): point = 925
   Insn 205(l0): point = 927
   Insn 204(l0): point = 929
   Insn 203(l0): point = 931
   Insn 202(l0): point = 933
   Insn 201(l0): point = 935
   Insn 200(l0): point = 937
   Insn 199(l0): point = 939
   Insn 198(l0): point = 941
   Insn 197(l0): point = 943
   Insn 196(l0): point = 945
   Insn 195(l0): point = 947
   Insn 194(l0): point = 949
   Insn 193(l0): point = 951
   Insn 192(l0): point = 953
   Insn 185(l0): point = 956
   Insn 184(l0): point = 958
   Insn 183(l0): point = 960
   Insn 182(l0): point = 962
   Insn 181(l0): point = 964
   Insn 180(l0): point = 966
   Insn 179(l0): point = 968
   Insn 178(l0): point = 970
   Insn 177(l0): point = 972
   Insn 176(l0): point = 974
   Insn 175(l0): point = 976
   Insn 174(l0): point = 978
   Insn 173(l0): point = 980
   Insn 172(l0): point = 982
   Insn 171(l0): point = 984
   Insn 170(l0): point = 986
   Insn 149(l0): point = 989
   Insn 148(l0): point = 991
   Insn 147(l0): point = 993
   Insn 146(l0): point = 995
   Insn 143(l0): point = 998
   Insn 141(l0): point = 1001
   Insn 140(l0): point = 1003
   Insn 139(l0): point = 1005
   Insn 138(l0): point = 1007
   Insn 137(l0): point = 1009
   Insn 136(l0): point = 1011
   Insn 135(l0): point = 1013
   Insn 134(l0): point = 1015
   Insn 836(l0): point = 1018
   Insn 129(l0): point = 1020
   Insn 127(l0): point = 1023
   Insn 126(l0): point = 1025
   Insn 125(l0): point = 1027
   Insn 124(l0): point = 1029
   Insn 123(l0): point = 1031
   Insn 122(l0): point = 1033
   Insn 121(l0): point = 1035
   Insn 120(l0): point = 1037
   Insn 117(l0): point = 1040
   Insn 116(l0): point = 1042
   Insn 115(l0): point = 1044
   Insn 114(l0): point = 1046
   Insn 834(l0): point = 1049
   Insn 109(l0): point = 1051
   Insn 108(l0): point = 1053
   Insn 107(l0): point = 1055
   Insn 105(l0): point = 1058
   Insn 104(l0): point = 1060
   Insn 103(l0): point = 1062
   Insn 102(l0): point = 1064
   Insn 101(l0): point = 1066
   Insn 98(l0): point = 1069
   Insn 97(l0): point = 1071
   Insn 96(l0): point = 1073
   Insn 95(l0): point = 1075
   Insn 832(l0): point = 1078
   Insn 90(l0): point = 1080
   Insn 89(l0): point = 1082
   Insn 88(l0): point = 1084
   Insn 86(l0): point = 1087
   Insn 85(l0): point = 1089
   Insn 84(l0): point = 1091
   Insn 83(l0): point = 1093
   Insn 82(l0): point = 1095
   Insn 81(l0): point = 1097
   Insn 80(l0): point = 1099
   Insn 79(l0): point = 1101
   Insn 162(l0): point = 1104
   Insn 161(l0): point = 1106
   Insn 160(l0): point = 1108
   Insn 159(l0): point = 1110
   Insn 158(l0): point = 1112
   Insn 156(l0): point = 1115
   Insn 155(l0): point = 1117
   Insn 154(l0): point = 1119
   Insn 153(l0): point = 1121
   Insn 152(l0): point = 1123
   Insn 151(l0): point = 1125
   Insn 279(l0): point = 1128
   Insn 278(l0): point = 1130
   Insn 277(l0): point = 1132
   Insn 276(l0): point = 1134
   Insn 274(l0): point = 1137
   Insn 273(l0): point = 1139
   Insn 271(l0): point = 1141
   Insn 270(l0): point = 1143
   Insn 267(l0): point = 1146
   Insn 842(l0): point = 1149
   Insn 263(l0): point = 1151
   Insn 262(l0): point = 1153
   Insn 261(l0): point = 1155
   Insn 260(l0): point = 1157
   Insn 325(l0): point = 1160
   Insn 324(l0): point = 1162
   Insn 323(l0): point = 1164
   Insn 322(l0): point = 1166
   Insn 331(l0): point = 1169
   Insn 330(l0): point = 1171
   Insn 328(l0): point = 1173
   Insn 327(l0): point = 1175
   Insn 344(l0): point = 1178
   Insn 343(l0): point = 1180
   Insn 342(l0): point = 1182
   Insn 341(l0): point = 1184
   Insn 340(l0): point = 1186
   Insn 339(l0): point = 1188
   Insn 377(l0): point = 1191
   Insn 376(l0): point = 1193
   Insn 375(l0): point = 1195
   Insn 374(l0): point = 1197
   Insn 373(l0): point = 1199
   Insn 372(l0): point = 1201
   Insn 371(l0): point = 1203
   Insn 370(l0): point = 1205
   Insn 369(l0): point = 1207
   Insn 368(l0): point = 1209
   Insn 367(l0): point = 1211
   Insn 366(l0): point = 1213
   Insn 365(l0): point = 1215
   Insn 364(l0): point = 1217
   Insn 363(l0): point = 1219
   Insn 362(l0): point = 1221
   Insn 361(l0): point = 1223
   Insn 360(l0): point = 1225
   Insn 359(l0): point = 1227
   Insn 358(l0): point = 1229
   Insn 357(l0): point = 1231
   Insn 356(l0): point = 1233
   Insn 355(l0): point = 1235
   Insn 354(l0): point = 1237
   Insn 353(l0): point = 1239
   Insn 409(l0): point = 1242
   Insn 408(l0): point = 1244
   Insn 407(l0): point = 1246
   Insn 406(l0): point = 1248
   Insn 405(l0): point = 1250
   Insn 404(l0): point = 1252
   Insn 403(l0): point = 1254
   Insn 402(l0): point = 1256
   Insn 401(l0): point = 1258
   Insn 400(l0): point = 1260
   Insn 399(l0): point = 1262
   Insn 398(l0): point = 1264
   Insn 397(l0): point = 1266
   Insn 64(l0): point = 1269
   Insn 63(l0): point = 1271
   Insn 62(l0): point = 1273
   Insn 61(l0): point = 1275
   Insn 60(l0): point = 1277
   Insn 59(l0): point = 1279
   Insn 58(l0): point = 1281
   Insn 57(l0): point = 1283
   Insn 56(l0): point = 1285
   Insn 55(l0): point = 1287
   Insn 54(l0): point = 1289
   Insn 53(l0): point = 1291
   Insn 828(l0): point = 1294
   Insn 48(l0): point = 1296
   Insn 46(l0): point = 1299
   Insn 45(l0): point = 1301
   Insn 44(l0): point = 1303
   Insn 43(l0): point = 1305
   Insn 42(l0): point = 1307
   Insn 41(l0): point = 1309
   Insn 40(l0): point = 1311
   Insn 39(l0): point = 1313
   Insn 38(l0): point = 1315
   Insn 37(l0): point = 1317
   Insn 28(l0): point = 1320
   Insn 27(l0): point = 1322
   Insn 26(l0): point = 1324
   Insn 35(l0): point = 1327
   Insn 34(l0): point = 1329
   Insn 826(l0): point = 1332
   Insn 22(l0): point = 1334
   Insn 19(l0): point = 1337
   Insn 18(l0): point = 1339
   Insn 17(l0): point = 1341
   Insn 16(l0): point = 1343
   Insn 15(l0): point = 1345
   Insn 14(l0): point = 1347
   Insn 12(l0): point = 1350
   Insn 11(l0): point = 1352
   Insn 10(l0): point = 1354
   Insn 9(l0): point = 1356
   Insn 8(l0): point = 1358
   Insn 7(l0): point = 1360
   Insn 6(l0): point = 1362
   Insn 5(l0): point = 1364
   Insn 872(l0): point = 1366
 a0(r212): [3..4]
 a1(r205): [1294..1296] [48..50] [5..7]
 a2(r82): [1299..1366] [114..1293] [10..47]
 a3(r204): [19..22]
 a4(r328): [23..24]
 a5(r203): [53..56]
 a6(r327): [53..54]
 a7(r326): [57..58]
 a8(r325): [61..62]
 a9(r202): [61..64]
 a10(r201): [89..90]
 a11(r324): [91..92]
 a12(r200): [74..77]
 a13(r199): [78..83]
 a14(r323): [80..81]
 a15(r198): [98..99]
 a16(r197): [100..101]
 a17(r196): [100..103]
 a18(r194): [106..111]
 a19(r195): [106..107]
 a20(r322): [108..109]
 a21(r321): [112..113]
 a22(r192): [116..121]
 a23(r193): [116..117]
 a24(r320): [118..119]
 a25(r319): [122..123]
 a26(r190): [126..131]
 a27(r191): [126..127]
 a28(r318): [128..129]
 a29(r317): [132..133]
 a30(r188): [136..139]
 a31(r189): [136..137]
 a32(r187): [138..143]
 a33(r180): [138..165]
 a34(r316): [140..141]
 a35(r185): [144..149]
 a36(r186): [146..147]
 a37(r184): [148..153]
 a38(r181): [148..163]
 a39(r315): [150..151]
 a40(r182): [154..159]
 a41(r183): [156..157]
 a42(r314): [160..161]
 a43(r179): [168..169]
 a44(r178): [176..183]
 a45(r211): [186..187]
 a46(r177): [188..189]
 a47(r176): [196..203]
 a48(r313): [198..199]
 a49(r175): [206..207]
 a50(r312): [208..209]
 a51(r311): [213..214]
 a52(r174): [220..221]
 a53(r173): [220..225]
 a54(r310): [222..223]
 a55(r309): [226..227]
 a56(r172): [236..241]
 a57(r210): [238..257]
 a58(r171): [248..251]
 a59(r170): [252..253]
 a60(r308): [254..255]
 a61(r306): [260..261]
 a62(r307): [262..263]
 a63(r169): [272..277]
 a64(r209): [274..293]
 a65(r168): [284..287]
 a66(r167): [288..289]
 a67(r305): [290..291]
 a68(r303): [296..297]
 a69(r304): [298..299]
 a70(r166): [302..303]
 a71(r302): [304..305]
 a72(r165): [311..312]
 a73(r164): [313..314]
 a74(r301): [315..316]
 a75(r163): [315..318]
 a76(r162): [319..320]
 a77(r300): [321..322]
 a78(r299): [352..353]
 a79(r298): [354..355]
 a80(r161): [354..361]
 a81(r296): [356..357]
 a82(r297): [358..359]
 a83(r295): [362..363]
 a84(r160): [376..379]
 a85(r294): [376..377]
 a86(r293): [380..381]
 a87(r159): [391..394]
 a88(r158): [395..396]
 a89(r292): [397..398]
 a90(r157): [404..405]
 a91(r156): [406..407]
 a92(r291): [408..409]
 a93(r290): [422..423]
 a94(r289): [434..435]
 a95(r288): [444..445]
 a96(r287): [456..457]
 a97(r286): [482..483]
 a98(r155): [486..489]
 a99(r154): [495..496]
 a100(r153): [507..508]
 a101(r146): [507..535]
 a102(r151): [509..525]
 a103(r208): [514..516] [509..511]
 a104(r152): [522..523]
 a105(r150): [526..527]
 a106(r149): [526..529]
 a107(r148): [530..531]
 a108(r147): [530..533]
 a109(r285): [536..537]
 a110(r145): [543..544]
 a111(r144): [545..546]
 a112(r143): [545..548]
 a113(r142): [549..550]
 a114(r141): [549..552]
 a115(r140): [558..559]
 a116(r139): [565..566]
 a117(r138): [572..573]
 a118(r284): [653..654]
 a119(r137): [671..674]
 a120(r283): [679..680]
 a121(r282): [692..693]
 a122(r281): [702..703]
 a123(r280): [706..707]
 a124(r279): [1245..1246]
 a125(r278): [1255..1256]
 a126(r277): [1259..1260]
 a127(r136): [719..720]
 a128(r276): [725..726]
 a129(r275): [735..736]
 a130(r274): [739..740]
 a131(r273): [1192..1193]
 a132(r135): [1202..1215]
 a133(r272): [1204..1205]
 a134(r271): [1216..1217]
 a135(r270): [1220..1221]
 a136(r269): [1232..1233]
 a137(r134): [752..757]
 a138(r268): [754..755]
 a139(r267): [1179..1180]
 a140(r133): [1183..1188]
 a141(r266): [1185..1186]
 a142(r132): [763..764]
 a143(r265): [765..766]
 a144(r131): [1172..1173]
 a145(r264): [1174..1175]
 a146(r130): [1163..1164]
 a147(r263): [1165..1166]
 a148(r129): [772..773]
 a149(r262): [774..775]
 a150(r128): [791..792]
 a151(r261): [793..794]
 a152(r127): [784..785]
 a153(r260): [786..787]
 a154(r259): [802..803]
 a155(r258): [806..807]
 a156(r126): [813..814]
 a157(r257): [815..816]
 a158(r125): [1131..1132]
 a159(r256): [1133..1134]
 a160(r124): [1140..1141]
 a161(r255): [1142..1143]
 a162(r254): [1152..1153]
 a163(r253): [1156..1157]
 a164(r252): [829..830]
 a165(r251): [839..840]
 a166(r250): [875..876]
 a167(r123): [879..884]
 a168(r122): [885..886]
 a169(r249): [887..888]
 a170(r121): [899..900]
 a171(r120): [901..902]
 a172(r119): [903..904]
 a173(r248): [905..906]
 a174(r118): [912..913]
 a175(r117): [914..915]
 a176(r247): [916..917]
 a177(r246): [920..921]
 a178(r116): [922..951]
 a179(r245): [924..925]
 a180(r244): [928..929]
 a181(r243): [932..933]
 a182(r242): [936..937]
 a183(r241): [940..941]
 a184(r240): [944..945]
 a185(r239): [948..949]
 a186(r238): [952..953]
 a187(r237): [961..962]
 a188(r115): [971..976]
 a189(r113): [973..982]
 a190(r114): [977..978]
 a191(r236): [979..980]
 a192(r112): [983..984]
 a193(r235): [985..986]
 a194(r111): [1107..1108]
 a195(r110): [1109..1110]
 a196(r234): [1111..1112]
 a197(r109): [1118..1119]
 a198(r108): [1120..1121]
 a199(r107): [1122..1123]
 a200(r233): [1124..1125]
 a201(r106): [992..993]
 a202(r232): [994..995]
 a203(r105): [1004..1005]
 a204(r103): [1004..1011]
 a205(r104): [1006..1007]
 a206(r231): [1008..1009]
 a207(r102): [1012..1013]
 a208(r230): [1014..1015]
 a209(r101): [1026..1027]
 a210(r100): [1026..1031]
 a211(r229): [1028..1029]
 a212(r99): [1032..1033]
 a213(r228): [1034..1035]
 a214(r207): [1049..1051] [1038..1040]
 a215(r98): [1041..1042]
 a216(r97): [1043..1044]
 a217(r227): [1045..1046]
 a218(r96): [1052..1053]
 a219(r226): [1054..1055]
 a220(r95): [1061..1062]
 a221(r225): [1063..1064]
 a222(r206): [1078..1080] [1067..1069]
 a223(r94): [1070..1071]
 a224(r93): [1072..1073]
 a225(r224): [1074..1075]
 a226(r92): [1081..1082]
 a227(r223): [1083..1084]
 a228(r91): [1090..1091]
 a229(r222): [1092..1093]
 a230(r221): [1096..1097]
 a231(r90): [1098..1099]
 a232(r220): [1100..1101]
 a233(r89): [627..628]
 a234(r88): [629..630]
 a235(r87): [631..632]
 a236(r219): [633..634]
 a237(r218): [1270..1271]
 a238(r217): [1282..1283]
 a239(r216): [1304..1305]
 a240(r86): [1314..1317]
 a241(r215): [1323..1324]
 a242(r214): [1344..1345]
 a243(r85): [1353..1354]
 a244(r84): [1355..1356]
 a245(r83): [1357..1358]
 a246(r213): [1359..1360]
Compressing live ranges: from 1369 to 438 - 31%
Ranges after the compression:
 a0(r212): [0..1]
 a1(r205): [420..421] [8..9] [2..3]
 a2(r82): [422..437] [34..419] [4..7]
 a3(r204): [4..5]
 a4(r328): [6..7]
 a5(r203): [10..11]
 a6(r327): [10..11]
 a7(r326): [12..13]
 a8(r325): [14..15]
 a9(r202): [14..15]
 a10(r201): [20..21]
 a11(r324): [22..23]
 a12(r200): [16..17]
 a13(r199): [18..19]
 a14(r323): [18..19]
 a15(r198): [24..25]
 a16(r197): [26..27]
 a17(r196): [26..27]
 a18(r194): [28..31]
 a19(r195): [28..29]
 a20(r322): [30..31]
 a21(r321): [32..33]
 a22(r192): [34..37]
 a23(r193): [34..35]
 a24(r320): [36..37]
 a25(r319): [38..39]
 a26(r190): [40..43]
 a27(r191): [40..41]
 a28(r318): [42..43]
 a29(r317): [44..45]
 a30(r188): [46..49]
 a31(r189): [46..47]
 a32(r187): [48..51]
 a33(r180): [48..61]
 a34(r316): [50..51]
 a35(r185): [52..55]
 a36(r186): [52..53]
 a37(r184): [54..57]
 a38(r181): [54..61]
 a39(r315): [56..57]
 a40(r182): [58..59]
 a41(r183): [58..59]
 a42(r314): [60..61]
 a43(r179): [62..63]
 a44(r178): [64..65]
 a45(r211): [66..67]
 a46(r177): [68..69]
 a47(r176): [70..71]
 a48(r313): [70..71]
 a49(r175): [72..73]
 a50(r312): [74..75]
 a51(r311): [76..77]
 a52(r174): [78..79]
 a53(r173): [78..81]
 a54(r310): [80..81]
 a55(r309): [82..83]
 a56(r172): [84..85]
 a57(r210): [84..91]
 a58(r171): [86..87]
 a59(r170): [88..89]
 a60(r308): [90..91]
 a61(r306): [92..93]
 a62(r307): [94..95]
 a63(r169): [96..97]
 a64(r209): [96..103]
 a65(r168): [98..99]
 a66(r167): [100..101]
 a67(r305): [102..103]
 a68(r303): [104..105]
 a69(r304): [106..107]
 a70(r166): [108..109]
 a71(r302): [110..111]
 a72(r165): [112..113]
 a73(r164): [114..115]
 a74(r301): [116..117]
 a75(r163): [116..117]
 a76(r162): [118..119]
 a77(r300): [120..121]
 a78(r299): [122..123]
 a79(r298): [124..125]
 a80(r161): [124..129]
 a81(r296): [126..127]
 a82(r297): [128..129]
 a83(r295): [130..131]
 a84(r160): [132..133]
 a85(r294): [132..133]
 a86(r293): [134..135]
 a87(r159): [136..137]
 a88(r158): [138..139]
 a89(r292): [140..141]
 a90(r157): [142..143]
 a91(r156): [144..145]
 a92(r291): [146..147]
 a93(r290): [148..149]
 a94(r289): [150..151]
 a95(r288): [152..153]
 a96(r287): [154..155]
 a97(r286): [156..157]
 a98(r155): [158..159]
 a99(r154): [160..161]
 a100(r153): [162..163]
 a101(r146): [162..173]
 a102(r151): [164..169]
 a103(r208): [164..167]
 a104(r152): [168..169]
 a105(r150): [170..171]
 a106(r149): [170..171]
 a107(r148): [172..173]
 a108(r147): [172..173]
 a109(r285): [174..175]
 a110(r145): [176..177]
 a111(r144): [178..179]
 a112(r143): [178..179]
 a113(r142): [180..181]
 a114(r141): [180..181]
 a115(r140): [182..183]
 a116(r139): [184..185]
 a117(r138): [186..187]
 a118(r284): [196..197]
 a119(r137): [198..199]
 a120(r283): [200..201]
 a121(r282): [202..203]
 a122(r281): [204..205]
 a123(r280): [206..207]
 a124(r279): [410..411]
 a125(r278): [412..413]
 a126(r277): [414..415]
 a127(r136): [208..209]
 a128(r276): [210..211]
 a129(r275): [212..213]
 a130(r274): [214..215]
 a131(r273): [400..401]
 a132(r135): [402..403]
 a133(r272): [402..403]
 a134(r271): [404..405]
 a135(r270): [406..407]
 a136(r269): [408..409]
 a137(r134): [216..217]
 a138(r268): [216..217]
 a139(r267): [396..397]
 a140(r133): [398..399]
 a141(r266): [398..399]
 a142(r132): [218..219]
 a143(r265): [220..221]
 a144(r131): [392..393]
 a145(r264): [394..395]
 a146(r130): [388..389]
 a147(r263): [390..391]
 a148(r129): [222..223]
 a149(r262): [224..225]
 a150(r128): [230..231]
 a151(r261): [232..233]
 a152(r127): [226..227]
 a153(r260): [228..229]
 a154(r259): [234..235]
 a155(r258): [236..237]
 a156(r126): [238..239]
 a157(r257): [240..241]
 a158(r125): [376..377]
 a159(r256): [378..379]
 a160(r124): [380..381]
 a161(r255): [382..383]
 a162(r254): [384..385]
 a163(r253): [386..387]
 a164(r252): [242..243]
 a165(r251): [244..245]
 a166(r250): [246..247]
 a167(r123): [248..249]
 a168(r122): [250..251]
 a169(r249): [252..253]
 a170(r121): [254..255]
 a171(r120): [256..257]
 a172(r119): [258..259]
 a173(r248): [260..261]
 a174(r118): [262..263]
 a175(r117): [264..265]
 a176(r247): [266..267]
 a177(r246): [268..269]
 a178(r116): [270..283]
 a179(r245): [270..271]
 a180(r244): [272..273]
 a181(r243): [274..275]
 a182(r242): [276..277]
 a183(r241): [278..279]
 a184(r240): [280..281]
 a185(r239): [282..283]
 a186(r238): [284..285]
 a187(r237): [286..287]
 a188(r115): [288..289]
 a189(r113): [288..293]
 a190(r114): [290..291]
 a191(r236): [292..293]
 a192(r112): [294..295]
 a193(r235): [296..297]
 a194(r111): [362..363]
 a195(r110): [364..365]
 a196(r234): [366..367]
 a197(r109): [368..369]
 a198(r108): [370..371]
 a199(r107): [372..373]
 a200(r233): [374..375]
 a201(r106): [298..299]
 a202(r232): [300..301]
 a203(r105): [302..303]
 a204(r103): [302..307]
 a205(r104): [304..305]
 a206(r231): [306..307]
 a207(r102): [308..309]
 a208(r230): [310..311]
 a209(r101): [312..313]
 a210(r100): [312..315]
 a211(r229): [314..315]
 a212(r99): [316..317]
 a213(r228): [318..319]
 a214(r207): [328..329] [320..321]
 a215(r98): [322..323]
 a216(r97): [324..325]
 a217(r227): [326..327]
 a218(r96): [330..331]
 a219(r226): [332..333]
 a220(r95): [334..335]
 a221(r225): [336..337]
 a222(r206): [346..347] [338..339]
 a223(r94): [340..341]
 a224(r93): [342..343]
 a225(r224): [344..345]
 a226(r92): [348..349]
 a227(r223): [350..351]
 a228(r91): [352..353]
 a229(r222): [354..355]
 a230(r221): [356..357]
 a231(r90): [358..359]
 a232(r220): [360..361]
 a233(r89): [188..189]
 a234(r88): [190..191]
 a235(r87): [192..193]
 a236(r219): [194..195]
 a237(r218): [416..417]
 a238(r217): [418..419]
 a239(r216): [422..423]
 a240(r86): [424..425]
 a241(r215): [426..427]
 a242(r214): [428..429]
 a243(r85): [430..431]
 a244(r84): [432..433]
 a245(r83): [434..435]
 a246(r213): [436..437]
  pref0:a74(r301)<-hr2@1000
  pref1:a93(r290)<-hr0@1500
  pref2:a95(r288)<-hr0@1500
  pref3:a118(r284)<-hr0@1500
  pref4:a120(r283)<-hr0@1500
  pref5:a121(r282)<-hr0@1500
  pref6:a124(r279)<-hr0@1500
  pref7:a128(r276)<-hr0@1500
  pref8:a131(r273)<-hr0@1500
  pref9:a135(r270)<-hr0@1500
  pref10:a164(r252)<-hr0@1500
  pref11:a187(r237)<-hr0@1500
  pref12:a237(r218)<-hr0@1500
  pref13:a238(r217)<-hr0@1500
  pref14:a239(r216)<-hr0@1500
  pref15:a0(r212)<-hr0@1500
  pref16:a43(r179)<-hr0@1500
  pref17:a46(r177)<-hr0@1500
  pref18:a56(r172)<-hr0@1500
  pref19:a63(r169)<-hr0@1500
  pref20:a119(r137)<-hr0@1500
  regions=1, blocks=93, points=438
    allocnos=247 (big 0), copies=0, conflicts=0, ranges=253
Disposition:
    2:r82  l0     3  245:r83  l0     0  244:r84  l0     0  243:r85  l0     0
  240:r86  l0     0  235:r87  l0     0  234:r88  l0     0  233:r89  l0     0
  231:r90  l0     0  228:r91  l0     0  226:r92  l0     0  224:r93  l0     0
  223:r94  l0     0  220:r95  l0     0  218:r96  l0     0  216:r97  l0     0
  215:r98  l0     0  212:r99  l0     0  210:r100 l0     1  209:r101 l0     0
  207:r102 l0     0  204:r103 l0     1  205:r104 l0     0  203:r105 l0     0
  201:r106 l0     0  199:r107 l0     0  198:r108 l0     0  197:r109 l0     0
  195:r110 l0     0  194:r111 l0     0  192:r112 l0     0  189:r113 l0     1
  190:r114 l0     0  188:r115 l0     0  178:r116 l0     0  175:r117 l0     0
  174:r118 l0     0  172:r119 l0     0  171:r120 l0     0  170:r121 l0     0
  168:r122 l0     0  167:r123 l0     0  160:r124 l0     0  158:r125 l0     0
  156:r126 l0     0  152:r127 l0     0  150:r128 l0     0  148:r129 l0     0
  146:r130 l0     0  144:r131 l0     0  142:r132 l0     0  140:r133 l0     0
  137:r134 l0     0  132:r135 l0     1  127:r136 l0     0  119:r137 l0     0
  117:r138 l0     0  116:r139 l0     0  115:r140 l0     0  114:r141 l0     1
  113:r142 l0     0  112:r143 l0     1  111:r144 l0     0  110:r145 l0     0
  101:r146 l0     0  108:r147 l0     2  107:r148 l0     1  106:r149 l0     2
  105:r150 l0     1  102:r151 l0     2  104:r152 l0     1  100:r153 l0     1
   99:r154 l0     0   98:r155 l0     0   91:r156 l0     0   90:r157 l0     0
   88:r158 l0     0   87:r159 l0     0   84:r160 l0     0   80:r161 l0     1
   76:r162 l0     0   75:r163 l0     1   73:r164 l0     0   72:r165 l0     0
   70:r166 l0     0   66:r167 l0     0   65:r168 l0     0   63:r169 l0     0
   59:r170 l0     0   58:r171 l0     0   56:r172 l0     0   53:r173 l0     1
   52:r174 l0     0   49:r175 l0     0   47:r176 l0     0   46:r177 l0     0
   44:r178 l0     0   43:r179 l0     0   33:r180 l0     2   38:r181 l0     4
   40:r182 l0     0   41:r183 l0     1   37:r184 l0     1   35:r185 l0     0
   36:r186 l0     1   32:r187 l0     1   30:r188 l0     0   31:r189 l0     1
   26:r190 l0     0   27:r191 l0     1   22:r192 l0     0   23:r193 l0     1
   18:r194 l0     0   19:r195 l0     1   17:r196 l0     1   16:r197 l0     0
   15:r198 l0     0   13:r199 l0     0   12:r200 l0     0   10:r201 l0     0
    9:r202 l0     1    5:r203 l0     1    3:r204 l0     0    1:r205 l0     0
  222:r206 l0     0  214:r207 l0     0  103:r208 l0     1   64:r209 l0     4
   57:r210 l0     4   45:r211 l0     0    0:r212 l0     0  246:r213 l0     0
  242:r214 l0     0  241:r215 l0     0  239:r216 l0     0  238:r217 l0     0
  237:r218 l0     0  236:r219 l0     0  232:r220 l0     0  230:r221 l0     0
  229:r222 l0     0  227:r223 l0     0  225:r224 l0     0  221:r225 l0     0
  219:r226 l0     0  217:r227 l0     0  213:r228 l0     0  211:r229 l0     0
  208:r230 l0     0  206:r231 l0     0  202:r232 l0     0  200:r233 l0     0
  196:r234 l0     0  193:r235 l0     0  191:r236 l0     0  187:r237 l0     0
  186:r238 l0     0  185:r239 l0     1  184:r240 l0     1  183:r241 l0     1
  182:r242 l0     1  181:r243 l0     1  180:r244 l0     1  179:r245 l0     1
  177:r246 l0     0  176:r247 l0     0  173:r248 l0     0  169:r249 l0     0
  166:r250 l0     0  165:r251 l0     0  164:r252 l0     0  163:r253 l0     0
  162:r254 l0     0  161:r255 l0     0  159:r256 l0     0  157:r257 l0     0
  155:r258 l0     0  154:r259 l0     0  153:r260 l0     0  151:r261 l0     0
  149:r262 l0     0  147:r263 l0     0  145:r264 l0     0  143:r265 l0     0
  141:r266 l0     1  139:r267 l0     0  138:r268 l0     1  136:r269 l0     0
  135:r270 l0     0  134:r271 l0     0  133:r272 l0     0  131:r273 l0     0
  130:r274 l0     0  129:r275 l0     0  128:r276 l0     0  126:r277 l0     0
  125:r278 l0     0  124:r279 l0     0  123:r280 l0     0  122:r281 l0     0
  121:r282 l0     0  120:r283 l0     0  118:r284 l0     0  109:r285 l0     0
   97:r286 l0     0   96:r287 l0     0   95:r288 l0     0   94:r289 l0     0
   93:r290 l0     0   92:r291 l0     0   89:r292 l0     0   86:r293 l0     0
   85:r294 l0     1   83:r295 l0     0   81:r296 l0     0   82:r297 l0     0
   79:r298 l0     0   78:r299 l0     0   77:r300 l0     0   74:r301 l0     0
   71:r302 l0     0   68:r303 l0     0   69:r304 l0     0   67:r305 l0     0
   61:r306 l0     0   62:r307 l0     0   60:r308 l0     0   55:r309 l0     0
   54:r310 l0     0   51:r311 l0     0   50:r312 l0     0   48:r313 l0     1
   42:r314 l0     0   39:r315 l0     0   34:r316 l0     0   29:r317 l0     0
   28:r318 l0     1   25:r319 l0     0   24:r320 l0     1   21:r321 l0     0
   20:r322 l0     1   14:r323 l0     1   11:r324 l0     0    8:r325 l0     0
    7:r326 l0     0    6:r327 l0     0    4:r328 l0     0
+++Costs: overall 12000, reg 12000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


do_execve

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={37d,21u} r1={36d} r2={36d} r3={16d,16u} r6={1d,92u} r7={139d,331u} r8={35d} r9={35d} r10={35d} r11={35d} r12={35d} r13={35d} r14={35d} r15={35d} r16={1d,103u,3e} r17={208d,45u} r18={35d} r19={1d,287u,7e} r20={35d} r21={35d} r22={35d} r23={35d} r24={35d} r25={35d} r26={35d} r27={35d} r28={35d} r29={35d} r30={35d} r31={35d} r32={35d} r33={35d} r34={35d} r35={35d} r36={35d} r37={35d} r38={35d} r39={35d} r40={35d} r41={35d} r42={35d} r43={35d} r44={35d} r45={35d} r46={35d} r47={35d} r48={35d} r49={35d} r50={35d} r51={35d} r52={35d} r53={35d} r54={35d} r55={35d} r56={35d} r57={35d} r58={35d} r59={35d} r60={35d} r61={35d} r62={35d} r63={35d} r64={35d} r65={35d} r66={35d} r67={35d} r68={35d} r69={35d} r70={35d} r71={35d} r72={35d} r73={35d} r74={35d} r75={35d} r82={1d,41u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,8u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,2u} r183={1d,1u} r184={1d,1u} r185={1d,2u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,2u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={3d,1u} r206={2d,1u} r207={2d,1u} r208={2d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} 
;;    total ref usage 4206{3002d,1194u,10e} in 639{604 regular + 35 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 872 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 872 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 872 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [9 sh_bang+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":181:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (const_int 131068 [0x1fffc])) "fs/exec.c":182:19 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 213)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 eip+0 S4 A32])) "fs/exec.c":184:22 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 213)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":184:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 eip+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 9 8 10 2 (set (reg:SI 84 [ _2 ])
        (mem:SI (reg/f:SI 83 [ _1 ]) [1 *_1+0 S4 A32])) "fs/exec.c":184:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(insn 10 9 11 2 (set (reg:SI 85 [ _3 ])
        (zero_extend:SI (subreg:HI (reg:SI 84 [ _2 ]) 0))) "fs/exec.c":184:17 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (const_int 15 [0xf]))) "fs/exec.c":184:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/exec.c":184:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":185:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 15 14 16 3 (set (reg/f:SI 214)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7a64a9ddc360 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/exec.c":185:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7a64a9ddc360 *.LC1>)
        (nil)))
(insn 16 15 17 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 214)) "fs/exec.c":185:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 17 16 18 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":185:9 75 {*movsi_internal}
     (nil))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a64a9d38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":185:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":185:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 20 19 21 4 49 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 826 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":186:12 75 {*movsi_internal}
     (nil))
(jump_insn 826 22 827 4 (set (pc)
        (label_ref 29)) "fs/exec.c":186:5 807 {jump}
     (nil)
 -> 29)
(barrier 827 826 31)
(code_label 31 827 25 5 51 (nil) [1 uses])
(note 25 31 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 215)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":187:17 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 215)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -220 [0xffffffffffffff24])) [1 page[i_124]+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":187:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
(insn 28 27 29 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":186:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 29 28 30 6 50 (nil) [1 uses])
(note 30 29 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 30 35 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/exec.c":186:19 11 {*cmpsi_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/exec.c":186:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 31)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:SI 86 [ filename.33_4 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 filename+0 S4 A32])) "fs/exec.c":188:19 75 {*movsi_internal}
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":188:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 39 38 40 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 86 [ filename.33_4 ])) "fs/exec.c":188:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 86 [ filename.33_4 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 40 39 41 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":188:19 75 {*movsi_internal}
     (nil))
(call_insn 41 40 42 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7a64a9d15500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":188:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 42 41 43 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":188:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 43 42 44 7 (set (reg:SI 216)
        (reg:SI 0 ax)) "fs/exec.c":188:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 44 43 45 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])
        (reg:SI 216)) "fs/exec.c":188:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 216)
        (nil)))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":188:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "fs/exec.c":188:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 51)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 828 8 (set (reg:SI 205 [ _144 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/exec.c":189:16 75 {*movsi_internal}
     (nil))
(jump_insn 828 48 829 8 (set (pc)
        (label_ref 817)) "fs/exec.c":189:16 807 {jump}
     (nil)
 -> 817)
(barrier 829 828 51)
(code_label 51 829 52 9 52 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":190:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 54 53 55 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [20 argv+0 S4 A32])) "fs/exec.c":190:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 55 54 56 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("count") [flags 0x3]  <function_decl 0x7a64a9d4db00 count>) [0 count S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":190:12 823 {*call_value}
     (nil)
    (nil))
(insn 56 55 57 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":190:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 57 56 58 9 (set (reg:SI 217)
        (reg:SI 0 ax)) "fs/exec.c":190:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 58 57 59 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
        (reg:SI 217)) "fs/exec.c":190:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 59 58 60 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":191:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 60 59 61 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [20 envp+0 S4 A32])) "fs/exec.c":191:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 61 60 62 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("count") [flags 0x3]  <function_decl 0x7a64a9d4db00 count>) [0 count S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":191:12 823 {*call_value}
     (nil)
    (nil))
(insn 62 61 63 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":191:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 63 62 64 9 (set (reg:SI 218)
        (reg:SI 0 ax)) "fs/exec.c":191:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 64 63 65 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 envc+0 S4 A32])
        (reg:SI 218)) "fs/exec.c":191:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 218)
        (nil)))
(code_label 65 64 66 10 54 ("restart_interp") [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg/f:SI 219)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":194:10 75 {*movsi_internal}
     (nil))
(insn 68 67 69 10 (set (reg:HI 87 [ _5 ])
        (mem:HI (reg/f:SI 219) [4 inode_123->i_mode+0 S2 A32])) "fs/exec.c":194:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 219)
        (nil)))
(insn 69 68 70 10 (set (reg:SI 88 [ _6 ])
        (zero_extend:SI (reg:HI 87 [ _5 ]))) "fs/exec.c":194:10 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(insn 70 69 71 10 (parallel [
            (set (reg:SI 89 [ _7 ])
                (and:SI (reg:SI 88 [ _6 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":194:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _7 ])
            (const_int 32768 [0x8000]))) "fs/exec.c":194:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(jump_insn 72 71 73 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "fs/exec.c":194:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 830 11 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -13 [0xfffffffffffffff3])) "fs/exec.c":195:16 75 {*movsi_internal}
     (nil))
(jump_insn 830 74 831 11 (set (pc)
        (label_ref 785)) "fs/exec.c":196:9 807 {jump}
     (nil)
 -> 785)
(barrier 831 830 77)
(code_label 77 831 78 12 55 (nil) [1 uses])
(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 12 (set (reg/f:SI 220)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":198:14 75 {*movsi_internal}
     (nil))
(insn 80 79 81 12 (set (reg:HI 90 [ _8 ])
        (mem:HI (reg/f:SI 220) [4 inode_123->i_mode+0 S2 A32])) "fs/exec.c":198:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 220)
        (nil)))
(insn 81 80 82 12 (set (reg:SI 221)
        (zero_extend:SI (reg:HI 90 [ _8 ]))) "fs/exec.c":198:7 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 82 81 83 12 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (reg:SI 221)) "fs/exec.c":198:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 221)
        (nil)))
(insn 83 82 84 12 (set (reg:SI 222)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":199:16 75 {*movsi_internal}
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:SI 91 [ _9 ])
                (and:SI (reg:SI 222)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":199:16 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 2048 [0x800]))
                (nil)))))
(insn 85 84 86 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _9 ])
            (const_int 0 [0]))) "fs/exec.c":199:42 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 86 85 87 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "fs/exec.c":199:42 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 93)
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 13 (set (reg/f:SI 223)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":199:34 75 {*movsi_internal}
     (nil))
(insn 89 88 90 13 (set (reg:HI 92 [ _10 ])
        (mem:HI (plus:SI (reg/f:SI 223)
                (const_int 2 [0x2])) [4 inode_123->i_uid+0 S2 A16])) "fs/exec.c":199:34 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 223)
        (nil)))
(insn 90 89 832 13 (set (reg:SI 206 [ iftmp.34_145 ])
        (zero_extend:SI (reg:HI 92 [ _10 ]))) "fs/exec.c":199:42 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (nil)))
(jump_insn 832 90 833 13 (set (pc)
        (label_ref 99)) 807 {jump}
     (nil)
 -> 99)
(barrier 833 832 93)
(code_label 93 833 94 14 57 (nil) [1 uses])
(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (set (reg/f:SI 224)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":199:51 75 {*movsi_internal}
     (nil))
(insn 96 95 97 14 (set (reg/f:SI 93 [ current.35_11 ])
        (mem/f/c:SI (reg/f:SI 224) [5 current+0 S4 A32])) "fs/exec.c":199:51 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 224)
        (nil)))
(insn 97 96 98 14 (set (reg:HI 94 [ _12 ])
        (mem:HI (plus:SI (reg/f:SI 93 [ current.35_11 ])
                (const_int 578 [0x242])) [4 current.35_11->euid+0 S2 A16])) "fs/exec.c":199:51 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ current.35_11 ])
        (nil)))
(insn 98 97 99 14 (set (reg:SI 206 [ iftmp.34_145 ])
        (zero_extend:SI (reg:HI 94 [ _12 ]))) "fs/exec.c":199:42 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
        (nil)))
(code_label 99 98 100 15 58 (nil) [1 uses])
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 15 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [9 e_uid+0 S4 A32])
        (reg:SI 206 [ iftmp.34_145 ])) "fs/exec.c":199:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 206 [ iftmp.34_145 ])
        (nil)))
(insn 102 101 103 15 (set (reg:SI 225)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":200:16 75 {*movsi_internal}
     (nil))
(insn 103 102 104 15 (parallel [
            (set (reg:SI 95 [ _13 ])
                (and:SI (reg:SI 225)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":200:16 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 225)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1024 [0x400]))
                (nil)))))
(insn 104 103 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ _13 ])
            (const_int 0 [0]))) "fs/exec.c":200:42 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (nil)))
(jump_insn 105 104 106 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "fs/exec.c":200:42 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 112)
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg/f:SI 226)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":200:34 75 {*movsi_internal}
     (nil))
(insn 108 107 109 16 (set (reg:QI 96 [ _14 ])
        (mem:QI (plus:SI (reg/f:SI 226)
                (const_int 12 [0xc])) [0 inode_123->i_gid+0 S1 A32])) "fs/exec.c":200:34 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 226)
        (nil)))
(insn 109 108 834 16 (set (reg:SI 207 [ iftmp.36_146 ])
        (zero_extend:SI (reg:QI 96 [ _14 ]))) "fs/exec.c":200:42 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 96 [ _14 ])
        (nil)))
(jump_insn 834 109 835 16 (set (pc)
        (label_ref 118)) 807 {jump}
     (nil)
 -> 118)
(barrier 835 834 112)
(code_label 112 835 113 17 59 (nil) [1 uses])
(note 113 112 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 17 (set (reg/f:SI 227)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":200:51 75 {*movsi_internal}
     (nil))
(insn 115 114 116 17 (set (reg/f:SI 97 [ current.37_15 ])
        (mem/f/c:SI (reg/f:SI 227) [5 current+0 S4 A32])) "fs/exec.c":200:51 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 227)
        (nil)))
(insn 116 115 117 17 (set (reg:HI 98 [ _16 ])
        (mem:HI (plus:SI (reg/f:SI 97 [ current.37_15 ])
                (const_int 584 [0x248])) [4 current.37_15->egid+0 S2 A32])) "fs/exec.c":200:51 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ current.37_15 ])
        (nil)))
(insn 117 116 118 17 (set (reg:SI 207 [ iftmp.36_146 ])
        (zero_extend:SI (reg:HI 98 [ _16 ]))) "fs/exec.c":200:42 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 98 [ _16 ])
        (nil)))
(code_label 118 117 119 18 60 (nil) [1 uses])
(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 18 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 e_gid+0 S4 A32])
        (reg:SI 207 [ iftmp.36_146 ])) "fs/exec.c":200:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 207 [ iftmp.36_146 ])
        (nil)))
(insn 121 120 122 18 (set (reg/f:SI 228)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":201:16 75 {*movsi_internal}
     (nil))
(insn 122 121 123 18 (set (reg/f:SI 99 [ current.38_17 ])
        (mem/f/c:SI (reg/f:SI 228) [5 current+0 S4 A32])) "fs/exec.c":201:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 228)
        (nil)))
(insn 123 122 124 18 (set (reg:HI 100 [ _18 ])
        (mem:HI (plus:SI (reg/f:SI 99 [ current.38_17 ])
                (const_int 578 [0x242])) [4 current.38_17->euid+0 S2 A16])) "fs/exec.c":201:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ current.38_17 ])
        (nil)))
(insn 124 123 125 18 (set (reg/f:SI 229)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":201:31 75 {*movsi_internal}
     (nil))
(insn 125 124 126 18 (set (reg:HI 101 [ _19 ])
        (mem:HI (plus:SI (reg/f:SI 229)
                (const_int 2 [0x2])) [4 inode_123->i_uid+0 S2 A16])) "fs/exec.c":201:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 229)
        (nil)))
(insn 126 125 127 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 100 [ _18 ])
            (reg:HI 101 [ _19 ]))) "fs/exec.c":201:8 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 101 [ _19 ])
        (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
            (nil))))
(jump_insn 127 126 128 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) "fs/exec.c":201:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 132)
(note 128 127 129 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 836 19 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":202:11 702 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 836 129 837 19 (set (pc)
        (label_ref 144)) 807 {jump}
     (nil)
 -> 144)
(barrier 837 836 132)
(code_label 132 837 133 20 61 (nil) [1 uses])
(note 133 132 134 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 20 (set (reg/f:SI 230)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":203:21 75 {*movsi_internal}
     (nil))
(insn 135 134 136 20 (set (reg/f:SI 102 [ current.39_20 ])
        (mem/f/c:SI (reg/f:SI 230) [5 current+0 S4 A32])) "fs/exec.c":203:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 230)
        (nil)))
(insn 136 135 137 20 (set (reg:HI 103 [ _21 ])
        (mem:HI (plus:SI (reg/f:SI 102 [ current.39_20 ])
                (const_int 584 [0x248])) [4 current.39_20->egid+0 S2 A32])) "fs/exec.c":203:21 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ current.39_20 ])
        (nil)))
(insn 137 136 138 20 (set (reg/f:SI 231)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":203:36 75 {*movsi_internal}
     (nil))
(insn 138 137 139 20 (set (reg:QI 104 [ _22 ])
        (mem:QI (plus:SI (reg/f:SI 231)
                (const_int 12 [0xc])) [0 inode_123->i_gid+0 S1 A32])) "fs/exec.c":203:36 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 231)
        (nil)))
(insn 139 138 140 20 (set (reg:HI 105 [ _23 ])
        (zero_extend:HI (reg:QI 104 [ _22 ]))) "fs/exec.c":203:36 146 {*zero_extendqihi2}
     (expr_list:REG_DEAD (reg:QI 104 [ _22 ])
        (nil)))
(insn 140 139 141 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 103 [ _21 ])
            (reg:HI 105 [ _23 ]))) "fs/exec.c":203:13 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 105 [ _23 ])
        (expr_list:REG_DEAD (reg:HI 103 [ _21 ])
            (nil))))
(jump_insn 141 140 142 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/exec.c":203:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 144)
(note 142 141 143 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 21 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":204:11 702 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 144 143 145 22 62 (nil) [2 uses])
(note 145 144 146 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 22 (set (reg:SI 232)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":205:13 75 {*movsi_internal}
     (nil))
(insn 147 146 148 22 (parallel [
            (set (reg:SI 106 [ _24 ])
                (and:SI (reg:SI 232)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":205:13 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 148 147 149 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ _24 ])
            (const_int 0 [0]))) "fs/exec.c":205:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
        (nil)))
(jump_insn 149 148 150 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "fs/exec.c":205:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 168)
(note 150 149 151 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 23 (set (reg/f:SI 233)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":206:17 75 {*movsi_internal}
     (nil))
(insn 152 151 153 23 (set (reg:HI 107 [ _25 ])
        (mem:HI (reg/f:SI 233) [4 inode_123->i_mode+0 S2 A32])) "fs/exec.c":206:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 233)
        (nil)))
(insn 153 152 154 23 (set (reg:SI 108 [ _26 ])
        (zero_extend:SI (reg:HI 107 [ _25 ]))) "fs/exec.c":206:26 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 107 [ _25 ])
        (nil)))
(insn 154 153 155 23 (parallel [
            (set (reg:SI 109 [ _27 ])
                (and:SI (reg:SI 108 [ _26 ])
                    (const_int 73 [0x49])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":206:26 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ _27 ])
            (const_int 0 [0]))) "fs/exec.c":205:18 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 109 [ _27 ])
        (nil)))
(jump_insn 156 155 157 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "fs/exec.c":205:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 163)
(note 157 156 158 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 24 (set (reg/f:SI 234)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":206:37 75 {*movsi_internal}
     (nil))
(insn 159 158 160 24 (set (reg/f:SI 110 [ current.40_28 ])
        (mem/f/c:SI (reg/f:SI 234) [5 current+0 S4 A32])) "fs/exec.c":206:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 234)
        (nil)))
(insn 160 159 161 24 (set (reg:HI 111 [ _29 ])
        (mem:HI (plus:SI (reg/f:SI 110 [ current.40_28 ])
                (const_int 578 [0x242])) [4 current.40_28->euid+0 S2 A16])) "fs/exec.c":206:37 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ current.40_28 ])
        (nil)))
(insn 161 160 162 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 111 [ _29 ])
            (const_int 0 [0]))) "fs/exec.c":206:9 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 111 [ _29 ])
        (nil)))
(jump_insn 162 161 163 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "fs/exec.c":206:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 168)
(code_label 163 162 164 25 64 (nil) [1 uses])
(note 164 163 165 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 838 25 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":207:16 75 {*movsi_internal}
     (nil))
(jump_insn 838 165 839 25 (set (pc)
        (label_ref 785)) "fs/exec.c":208:9 807 {jump}
     (nil)
 -> 785)
(barrier 839 838 168)
(code_label 168 839 169 26 63 (nil) [2 uses])
(note 169 168 170 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 26 (set (reg/f:SI 235)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":210:49 75 {*movsi_internal}
     (nil))
(insn 171 170 172 26 (set (reg:HI 112 [ _30 ])
        (mem:HI (plus:SI (reg/f:SI 235)
                (const_int 14 [0xe])) [4 inode_123->i_zone[0]+0 S2 A16])) "fs/exec.c":210:49 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 235)
        (nil)))
(insn 172 171 173 26 (set (reg:SI 113 [ _31 ])
        (zero_extend:SI (reg:HI 112 [ _30 ]))) "fs/exec.c":210:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 112 [ _30 ])
        (nil)))
(insn 173 172 174 26 (set (reg/f:SI 236)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":210:27 75 {*movsi_internal}
     (nil))
(insn 174 173 175 26 (set (reg:HI 114 [ _32 ])
        (mem:HI (plus:SI (reg/f:SI 236)
                (const_int 44 [0x2c])) [4 inode_123->i_dev+0 S2 A32])) "fs/exec.c":210:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 236)
        (nil)))
(insn 175 174 176 26 (set (reg:SI 115 [ _33 ])
        (zero_extend:SI (reg:HI 114 [ _32 ]))) "fs/exec.c":210:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 114 [ _32 ])
        (nil)))
(insn 176 175 177 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":210:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 177 176 178 26 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 113 [ _31 ])) "fs/exec.c":210:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 113 [ _31 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 178 177 179 26 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 115 [ _33 ])) "fs/exec.c":210:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 115 [ _33 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 179 178 180 26 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":210:16 75 {*movsi_internal}
     (nil))
(call_insn 180 179 181 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7a64a9d10100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":210:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 181 180 182 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":210:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 182 181 183 26 (set (reg:SI 237)
        (reg:SI 0 ax)) "fs/exec.c":210:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 183 182 184 26 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])
        (reg:SI 237)) "fs/exec.c":210:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 237)
        (nil)))
(insn 184 183 185 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":210:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 185 184 186 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "fs/exec.c":210:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 190)
(note 186 185 187 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 840 27 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -13 [0xfffffffffffffff3])) "fs/exec.c":211:16 75 {*movsi_internal}
     (nil))
(jump_insn 840 187 841 27 (set (pc)
        (label_ref 785)) "fs/exec.c":212:9 807 {jump}
     (nil)
 -> 785)
(barrier 841 840 190)
(code_label 190 841 191 28 65 (nil) [1 uses])
(note 191 190 192 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 28 (set (reg/f:SI 238)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])) "fs/exec.c":214:29 75 {*movsi_internal}
     (nil))
(insn 193 192 194 28 (set (reg/f:SI 116 [ _34 ])
        (mem/f:SI (reg/f:SI 238) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":214:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 238)
        (nil)))
(insn 194 193 195 28 (set (reg:SI 239)
        (mem:SI (reg/f:SI 116 [ _34 ]) [16 MEM[(struct exec *)_34]+0 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 195 194 196 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -92 [0xffffffffffffffa4])) [16 ex+0 S4 A32])
        (reg:SI 239)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 239)
        (nil)))
(insn 196 195 197 28 (set (reg:SI 240)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 4 [0x4])) [16 MEM[(struct exec *)_34]+4 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 197 196 198 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [16 ex+4 S4 A32])
        (reg:SI 240)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 240)
        (nil)))
(insn 198 197 199 28 (set (reg:SI 241)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 8 [0x8])) [16 MEM[(struct exec *)_34]+8 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 199 198 200 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -84 [0xffffffffffffffac])) [16 ex+8 S4 A32])
        (reg:SI 241)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 241)
        (nil)))
(insn 200 199 201 28 (set (reg:SI 242)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 12 [0xc])) [16 MEM[(struct exec *)_34]+12 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 201 200 202 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [16 ex+12 S4 A32])
        (reg:SI 242)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 242)
        (nil)))
(insn 202 201 203 28 (set (reg:SI 243)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 16 [0x10])) [16 MEM[(struct exec *)_34]+16 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 203 202 204 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [16 ex+16 S4 A32])
        (reg:SI 243)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 243)
        (nil)))
(insn 204 203 205 28 (set (reg:SI 244)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 20 [0x14])) [16 MEM[(struct exec *)_34]+20 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 205 204 206 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [16 ex+20 S4 A32])
        (reg:SI 244)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 244)
        (nil)))
(insn 206 205 207 28 (set (reg:SI 245)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 24 [0x18])) [16 MEM[(struct exec *)_34]+24 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 207 206 208 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [16 ex+24 S4 A32])
        (reg:SI 245)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 208 207 209 28 (set (reg:SI 246)
        (mem:SI (plus:SI (reg/f:SI 116 [ _34 ])
                (const_int 28 [0x1c])) [16 MEM[(struct exec *)_34]+28 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116 [ _34 ])
        (nil)))
(insn 209 208 210 28 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [16 ex+28 S4 A32])
        (reg:SI 246)) "fs/exec.c":214:8 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 246)
        (nil)))
(insn 210 209 211 28 (set (reg/f:SI 247)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])) "fs/exec.c":215:12 75 {*movsi_internal}
     (nil))
(insn 211 210 212 28 (set (reg/f:SI 117 [ _35 ])
        (mem/f:SI (reg/f:SI 247) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":215:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 247)
        (nil)))
(insn 212 211 213 28 (set (reg:QI 118 [ _36 ])
        (mem:QI (reg/f:SI 117 [ _35 ]) [0 *_35+0 S1 A8])) "fs/exec.c":215:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117 [ _35 ])
        (nil)))
(insn 213 212 214 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ _36 ])
            (const_int 35 [0x23]))) "fs/exec.c":215:8 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 118 [ _36 ])
        (nil)))
(jump_insn 214 213 215 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) "fs/exec.c":215:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 471)
(note 215 214 216 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 29 (set (reg/f:SI 248)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])) "fs/exec.c":215:38 75 {*movsi_internal}
     (nil))
(insn 217 216 218 29 (set (reg/f:SI 119 [ _37 ])
        (mem/f:SI (reg/f:SI 248) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":215:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 248)
        (nil)))
(insn 218 217 219 29 (parallel [
            (set (reg/f:SI 120 [ _38 ])
                (plus:SI (reg/f:SI 119 [ _37 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":215:46 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 119 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 219 218 220 29 (set (reg:QI 121 [ _39 ])
        (mem:QI (reg/f:SI 120 [ _38 ]) [0 *_38+0 S1 A8])) "fs/exec.c":215:46 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120 [ _38 ])
        (nil)))
(insn 220 219 221 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ _39 ])
            (const_int 33 [0x21]))) "fs/exec.c":215:32 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 121 [ _39 ])
        (nil)))
(jump_insn 221 220 222 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) "fs/exec.c":215:32 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 471)
(note 222 221 223 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [9 sh_bang+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":215:58 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 224 223 225 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) "fs/exec.c":215:58 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 471)
(note 225 224 226 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 31 (set (reg/f:SI 249)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])) "fs/exec.c":223:24 75 {*movsi_internal}
     (nil))
(insn 227 226 228 31 (set (reg/f:SI 122 [ _40 ])
        (mem/f:SI (reg/f:SI 249) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":223:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 249)
        (nil)))
(insn 228 227 229 31 (parallel [
            (set (reg/f:SI 123 [ _41 ])
                (plus:SI (reg/f:SI 122 [ _40 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:33 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 122 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 229 228 230 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 230 229 231 31 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1022 [0x3fe])) "fs/exec.c":223:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 231 230 232 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 123 [ _41 ])) "fs/exec.c":223:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 123 [ _41 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 232 231 233 31 (parallel [
            (set (reg:SI 250)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -1251 [0xfffffffffffffb1d])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 233 232 234 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 250)) "fs/exec.c":223:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 250)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 234 233 235 31 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":223:9 75 {*movsi_internal}
     (nil))
(call_insn 235 234 236 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strncpy") [flags 0x41]  <function_decl 0x7a64a9d4d100 strncpy>) [0 strncpy S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":223:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 236 235 237 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 237 236 238 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":224:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 238 237 239 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])) "fs/exec.c":224:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 239 238 240 31 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":224:9 75 {*movsi_internal}
     (nil))
(call_insn 240 239 241 31 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7a64a9d10200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":224:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 241 240 242 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":224:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 242 241 243 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":225:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 243 242 244 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":225:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 244 243 245 31 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":225:9 75 {*movsi_internal}
     (nil))
(call_insn 245 244 246 31 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7a64a9cd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":225:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 246 245 247 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":225:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 247 246 248 31 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -229 [0xffffffffffffff1b])) [0 buf[1022]+0 S1 A8])
        (const_int 0 [0])) "fs/exec.c":226:19 77 {*movqi_internal}
     (nil))
(insn 248 247 249 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":227:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 249 248 250 31 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 10 [0xa])) "fs/exec.c":227:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 250 249 251 31 (parallel [
            (set (reg:SI 251)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -1251 [0xfffffffffffffb1d])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":227:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 251 250 252 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 251)) "fs/exec.c":227:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 251)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 252 251 253 31 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":227:19 75 {*movsi_internal}
     (nil))
(call_insn 253 252 254 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strchr") [flags 0x41]  <function_decl 0x7a64a9d4d500 strchr>) [0 strchr S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":227:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 254 253 255 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":227:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 255 254 256 31 (set (reg:SI 252)
        (reg:SI 0 ax)) "fs/exec.c":227:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 256 255 257 31 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
        (reg:SI 252)) "fs/exec.c":227:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 252)
        (nil)))
(insn 257 256 258 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":227:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 258 257 259 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 280)
            (pc))) "fs/exec.c":227:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 280)
(note 259 258 260 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 32 (set (reg/f:SI 253)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":228:17 75 {*movsi_internal}
     (nil))
(insn 261 260 262 32 (set (mem:QI (reg/f:SI 253) [0 *cp_201+0 S1 A8])
        (const_int 0 [0])) "fs/exec.c":228:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 253)
        (nil)))
(insn 262 261 263 32 (parallel [
            (set (reg:SI 254)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -1251 [0xfffffffffffffb1d])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":229:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 263 262 842 32 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
        (reg:SI 254)) "fs/exec.c":229:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 254)
        (nil)))
(jump_insn 842 263 843 32 (set (pc)
        (label_ref 268)) "fs/exec.c":229:13 807 {jump}
     (nil)
 -> 268)
(barrier 843 842 272)
(code_label 272 843 266 33 69 (nil) [2 uses])
(note 266 272 267 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 33 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":229:61 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 268 267 269 34 68 (nil) [1 uses])
(note 269 268 270 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 34 (set (reg/f:SI 255)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":229:29 75 {*movsi_internal}
     (nil))
(insn 271 270 273 34 (set (reg:QI 124 [ _42 ])
        (mem:QI (reg/f:SI 255) [0 *cp_141+0 S1 A8])) "fs/exec.c":229:29 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 255)
        (nil)))
(insn 273 271 274 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _42 ])
            (const_int 32 [0x20]))) "fs/exec.c":229:41 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 124 [ _42 ])
        (nil)))
(jump_insn 274 273 275 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) "fs/exec.c":229:41 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 272)
(note 275 274 276 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 35 (set (reg/f:SI 256)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":229:45 75 {*movsi_internal}
     (nil))
(insn 277 276 278 35 (set (reg:QI 125 [ _43 ])
        (mem:QI (reg/f:SI 256) [0 *cp_141+0 S1 A8])) "fs/exec.c":229:45 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 256)
        (nil)))
(insn 278 277 279 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 125 [ _43 ])
            (const_int 9 [0x9]))) "fs/exec.c":229:41 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 125 [ _43 ])
        (nil)))
(jump_insn 279 278 280 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) "fs/exec.c":229:41 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 272)
(code_label 280 279 281 36 67 (nil) [1 uses])
(note 281 280 282 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":232:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 283 282 284 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) "fs/exec.c":232:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 289)
(note 284 283 285 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 37 (set (reg/f:SI 257)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":232:20 75 {*movsi_internal}
     (nil))
(insn 286 285 287 37 (set (reg:QI 126 [ _44 ])
        (mem:QI (reg/f:SI 257) [0 *cp_142+0 S1 A8])) "fs/exec.c":232:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 257)
        (nil)))
(insn 287 286 288 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ _44 ])
            (const_int 0 [0]))) "fs/exec.c":232:17 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 126 [ _44 ])
        (nil)))
(jump_insn 288 287 289 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) "fs/exec.c":232:17 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 294)
(code_label 289 288 290 38 70 (nil) [1 uses])
(note 290 289 291 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 844 38 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":233:20 75 {*movsi_internal}
     (nil))
(jump_insn 844 291 845 38 (set (pc)
        (label_ref 792)) "fs/exec.c":234:13 807 {jump}
     (nil)
 -> 792)
(barrier 845 844 294)
(code_label 294 845 295 39 71 (nil) [1 uses])
(note 295 294 296 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 297 39 (set (reg/f:SI 258)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":236:25 75 {*movsi_internal}
     (nil))
(insn 297 296 298 39 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -224 [0xffffffffffffff20])) [2 i_name+0 S4 A32])
        (reg/f:SI 258)) "fs/exec.c":236:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 258)
        (nil)))
(insn 298 297 299 39 (set (reg/f:SI 259)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -224 [0xffffffffffffff20])) [2 i_name+0 S4 A32])) "fs/exec.c":236:16 75 {*movsi_internal}
     (nil))
(insn 299 298 300 39 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 interp+0 S4 A32])
        (reg/f:SI 259)) "fs/exec.c":236:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 259)
        (nil)))
(insn 300 299 846 39 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -228 [0xffffffffffffff1c])) [2 i_arg+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":237:16 75 {*movsi_internal}
     (nil))
(jump_insn 846 300 847 39 (set (pc)
        (label_ref 315)) "fs/exec.c":238:9 807 {jump}
     (nil)
 -> 315)
(barrier 847 846 329)
(code_label 329 847 303 40 76 (nil) [1 uses])
(note 303 329 304 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 40 (set (reg/f:SI 260)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":239:17 75 {*movsi_internal}
     (nil))
(insn 305 304 306 40 (set (reg:QI 127 [ _45 ])
        (mem:QI (reg/f:SI 260) [0 *cp_143+0 S1 A8])) "fs/exec.c":239:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 260)
        (nil)))
(insn 306 305 307 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ _45 ])
            (const_int 47 [0x2f]))) "fs/exec.c":239:16 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 127 [ _45 ])
        (nil)))
(jump_insn 307 306 308 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) "fs/exec.c":239:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 312)
(note 308 307 309 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 41 (set (reg/f:SI 261)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":240:29 75 {*movsi_internal}
     (nil))
(insn 310 309 311 41 (parallel [
            (set (reg/f:SI 128 [ _46 ])
                (plus:SI (reg/f:SI 261)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":240:29 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 261)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 311 310 312 41 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -224 [0xffffffffffffff20])) [2 i_name+0 S4 A32])
        (reg/f:SI 128 [ _46 ])) "fs/exec.c":240:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128 [ _46 ])
        (nil)))
(code_label 312 311 313 42 74 (nil) [1 uses])
(note 313 312 314 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 42 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":238:57 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 315 314 316 43 73 (nil) [1 uses])
(note 316 315 317 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 43 (set (reg/f:SI 262)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":238:17 75 {*movsi_internal}
     (nil))
(insn 318 317 319 43 (set (reg:QI 129 [ _47 ])
        (mem:QI (reg/f:SI 262) [0 *cp_143+0 S1 A8])) "fs/exec.c":238:17 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 262)
        (nil)))
(insn 319 318 320 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ _47 ])
            (const_int 0 [0]))) "fs/exec.c":238:37 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 129 [ _47 ])
        (nil)))
(jump_insn 320 319 321 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) "fs/exec.c":238:37 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 332)
(note 321 320 322 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 44 (set (reg/f:SI 263)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":238:25 75 {*movsi_internal}
     (nil))
(insn 323 322 324 44 (set (reg:QI 130 [ _48 ])
        (mem:QI (reg/f:SI 263) [0 *cp_143+0 S1 A8])) "fs/exec.c":238:25 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 263)
        (nil)))
(insn 324 323 325 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ _48 ])
            (const_int 32 [0x20]))) "fs/exec.c":238:21 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 130 [ _48 ])
        (nil)))
(jump_insn 325 324 326 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) "fs/exec.c":238:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 332)
(note 326 325 327 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 45 (set (reg/f:SI 264)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":238:41 75 {*movsi_internal}
     (nil))
(insn 328 327 330 45 (set (reg:QI 131 [ _49 ])
        (mem:QI (reg/f:SI 264) [0 *cp_143+0 S1 A8])) "fs/exec.c":238:41 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 264)
        (nil)))
(insn 330 328 331 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 131 [ _49 ])
            (const_int 9 [0x9]))) "fs/exec.c":238:37 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 131 [ _49 ])
        (nil)))
(jump_insn 331 330 332 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "fs/exec.c":238:37 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 329)
(code_label 332 331 333 46 75 (nil) [2 uses])
(note 333 332 334 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 46 (set (reg/f:SI 265)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":242:13 75 {*movsi_internal}
     (nil))
(insn 335 334 336 46 (set (reg:QI 132 [ _50 ])
        (mem:QI (reg/f:SI 265) [0 *cp_143+0 S1 A8])) "fs/exec.c":242:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 265)
        (nil)))
(insn 336 335 337 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ _50 ])
            (const_int 0 [0]))) "fs/exec.c":242:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 132 [ _50 ])
        (nil)))
(jump_insn 337 336 338 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) "fs/exec.c":242:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 345)
(note 338 337 339 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 47 (set (reg/f:SI 133 [ cp.41_51 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":243:16 75 {*movsi_internal}
     (nil))
(insn 340 339 341 47 (parallel [
            (set (reg:SI 266)
                (plus:SI (reg/f:SI 133 [ cp.41_51 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":243:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 341 340 342 47 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
        (reg:SI 266)) "fs/exec.c":243:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 266)
        (nil)))
(insn 342 341 343 47 (set (mem:QI (reg/f:SI 133 [ cp.41_51 ]) [0 *cp.41_51+0 S1 A8])
        (const_int 0 [0])) "fs/exec.c":243:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133 [ cp.41_51 ])
        (nil)))
(insn 343 342 344 47 (set (reg/f:SI 267)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])) "fs/exec.c":244:19 75 {*movsi_internal}
     (nil))
(insn 344 343 345 47 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -228 [0xffffffffffffff1c])) [2 i_arg+0 S4 A32])
        (reg/f:SI 267)) "fs/exec.c":244:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 267)
        (nil)))
(code_label 345 344 346 48 77 (nil) [1 uses])
(note 346 345 347 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 48 (set (reg:SI 134 [ sh_bang.42_52 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [9 sh_bang+0 S4 A32])) "fs/exec.c":250:20 75 {*movsi_internal}
     (nil))
(insn 348 347 349 48 (parallel [
            (set (reg:SI 268)
                (plus:SI (reg:SI 134 [ sh_bang.42_52 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":250:20 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 349 348 350 48 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [9 sh_bang+0 S4 A32])
        (reg:SI 268)) "fs/exec.c":250:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 268)
        (nil)))
(insn 350 349 351 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ sh_bang.42_52 ])
            (const_int 0 [0]))) "fs/exec.c":250:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 134 [ sh_bang.42_52 ])
        (nil)))
(jump_insn 351 350 352 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) "fs/exec.c":250:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 378)
(note 352 351 353 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":251:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 354 353 355 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 355 354 356 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 356 355 357 49 (parallel [
            (set (reg:SI 269)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":251:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 357 356 358 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 269)) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 269)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 358 357 359 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [20 envp+0 S4 A32])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 359 358 360 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 envc+0 S4 A32])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 360 359 361 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":251:17 823 {*call_value}
     (nil)
    (nil))
(insn 361 360 362 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":251:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 362 361 363 49 (set (reg:SI 270)
        (reg:SI 0 ax)) "fs/exec.c":251:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 363 362 364 49 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg:SI 270)) "fs/exec.c":251:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 270)
        (nil)))
(insn 364 363 365 49 (set (reg/f:SI 271)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [20 argv+0 S4 A32])) "fs/exec.c":252:17 75 {*movsi_internal}
     (nil))
(insn 365 364 366 49 (parallel [
            (set (reg/f:SI 135 [ _53 ])
                (plus:SI (reg/f:SI 271)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 271)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 12 [0xc])) [20 argv+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 366 365 367 49 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 367 366 368 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 368 367 369 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 369 368 370 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 370 369 371 49 (parallel [
            (set (reg:SI 272)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 371 370 372 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 272)) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 272)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 372 371 373 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 135 [ _53 ])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 135 [ _53 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 373 372 374 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 374 373 375 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":252:17 823 {*call_value}
     (nil)
    (nil))
(insn 375 374 376 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 376 375 377 49 (set (reg:SI 273)
        (reg:SI 0 ax)) "fs/exec.c":252:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 377 376 378 49 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg:SI 273)) "fs/exec.c":252:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 273)
        (nil)))
(code_label 378 377 379 50 78 (nil) [1 uses])
(note 379 378 380 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 50 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 381 380 382 50 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 382 381 383 50 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 383 382 384 50 (parallel [
            (set (reg:SI 274)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 384 383 385 50 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 274)) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 274)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 385 384 386 50 (parallel [
            (set (reg:SI 275)
                (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 386 385 387 50 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg:SI 275)) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 275)
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 387 386 388 50 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 388 387 389 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":262:13 823 {*call_value}
     (nil)
    (nil))
(insn 389 388 390 50 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 390 389 391 50 (set (reg:SI 276)
        (reg:SI 0 ax)) "fs/exec.c":262:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 391 390 392 50 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg:SI 276)) "fs/exec.c":262:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 276)
        (nil)))
(insn 392 391 393 50 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":263:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 393 392 394 50 (set (reg/f:SI 136 [ i_arg.43_54 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -228 [0xffffffffffffff1c])) [2 i_arg+0 S4 A32])) "fs/exec.c":264:13 75 {*movsi_internal}
     (nil))
(insn 394 393 395 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 136 [ i_arg.43_54 ])
            (const_int 0 [0]))) "fs/exec.c":264:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 136 [ i_arg.43_54 ])
        (nil)))
(jump_insn 395 394 396 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) "fs/exec.c":264:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 410)
(note 396 395 397 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 51 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 398 397 399 51 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 2 [0x2])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 399 398 400 51 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 400 399 401 51 (parallel [
            (set (reg:SI 277)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 401 400 402 51 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 277)) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 277)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 402 401 403 51 (parallel [
            (set (reg:SI 278)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -228 [0xffffffffffffff1c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 403 402 404 51 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg:SI 278)) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 278)
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 404 403 405 51 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 405 404 406 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":265:17 823 {*call_value}
     (nil)
    (nil))
(insn 406 405 407 51 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 407 406 408 51 (set (reg:SI 279)
        (reg:SI 0 ax)) "fs/exec.c":265:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 408 407 409 51 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg:SI 279)) "fs/exec.c":265:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 279)
        (nil)))
(insn 409 408 410 51 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":266:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 410 409 411 52 79 (nil) [1 uses])
(note 411 410 412 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 52 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 413 412 414 52 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 2 [0x2])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 414 413 415 52 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 415 414 416 52 (parallel [
            (set (reg:SI 280)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 416 415 417 52 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 280)) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 280)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 417 416 418 52 (parallel [
            (set (reg:SI 281)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 418 417 419 52 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg:SI 281)) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 281)
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 419 418 420 52 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 420 419 421 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":268:13 823 {*call_value}
     (nil)
    (nil))
(insn 421 420 422 52 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 422 421 423 52 (set (reg:SI 282)
        (reg:SI 0 ax)) "fs/exec.c":268:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 423 422 424 52 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg:SI 282)) "fs/exec.c":268:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 282)
        (nil)))
(insn 424 423 425 52 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":269:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 425 424 426 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":270:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 426 425 427 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) "fs/exec.c":270:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 431)
(note 427 426 428 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 848 53 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -12 [0xfffffffffffffff4])) "fs/exec.c":271:20 75 {*movsi_internal}
     (nil))
(jump_insn 848 428 849 53 (set (pc)
        (label_ref 792)) "fs/exec.c":272:13 807 {jump}
     (nil)
 -> 792)
(barrier 849 848 431)
(code_label 431 849 432 54 80 (nil) [1 uses])
(note 432 431 433 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(call_insn 433 432 434 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs") [flags 0x3]  <function_decl 0x7a64a9d3e800 get_fs>) [0 get_fs S1 A8])
            (const_int 0 [0]))) "fs/exec.c":277:18 823 {*call_value}
     (nil)
    (nil))
(insn 434 433 435 54 (set (reg:SI 283)
        (reg:SI 0 ax)) "fs/exec.c":277:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 435 434 436 54 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 old_fs+0 S4 A32])
        (reg:SI 283)) "fs/exec.c":277:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 283)
        (nil)))
(call_insn 436 435 437 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_ds") [flags 0x3]  <function_decl 0x7a64a9d3ea00 get_ds>) [0 get_ds S1 A8])
            (const_int 0 [0]))) "fs/exec.c":278:9 823 {*call_value}
     (nil)
    (nil))
(insn 437 436 438 54 (set (reg:SI 137 [ _55 ])
        (reg:SI 0 ax)) "fs/exec.c":278:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 438 437 439 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":278:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 439 438 440 54 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 137 [ _55 ])) "fs/exec.c":278:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 137 [ _55 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 440 439 441 54 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":278:9 812 {*call}
     (nil)
    (nil))
(insn 441 440 442 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":278:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 442 441 443 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":279:23 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 443 442 444 54 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 interp+0 S4 A32])) "fs/exec.c":279:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 444 443 445 54 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":279:23 75 {*movsi_internal}
     (nil))
(call_insn 445 444 446 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7a64a9d15500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":279:23 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 446 445 447 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":279:23 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 447 446 448 54 (set (reg:SI 284)
        (reg:SI 0 ax)) "fs/exec.c":279:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 448 447 449 54 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])
        (reg:SI 284)) "fs/exec.c":279:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 284)
        (nil)))
(insn 449 448 450 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":279:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 450 449 451 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) "fs/exec.c":279:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 459)
(note 451 450 452 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 55 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":280:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 453 452 454 55 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 old_fs+0 S4 A32])) "fs/exec.c":280:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 454 453 455 55 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":280:13 812 {*call}
     (nil)
    (nil))
(insn 455 454 456 55 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":280:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 456 455 850 55 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -2 [0xfffffffffffffffe])) "fs/exec.c":281:20 75 {*movsi_internal}
     (nil))
(jump_insn 850 456 851 55 (set (pc)
        (label_ref 792)) "fs/exec.c":282:13 807 {jump}
     (nil)
 -> 792)
(barrier 851 850 459)
(code_label 459 851 460 56 81 (nil) [1 uses])
(note 460 459 461 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":284:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 462 461 463 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -52 [0xffffffffffffffcc])) [1 old_fs+0 S4 A32])) "fs/exec.c":284:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 463 462 464 56 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":284:9 812 {*call}
     (nil)
    (nil))
(insn 464 463 852 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":284:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 852 464 853 56 (set (pc)
        (label_ref 65)) 807 {jump}
     (nil)
 -> 65)
(barrier 853 852 471)
(code_label 471 853 472 57 66 (nil) [3 uses])
(note 472 471 473 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 57 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":287:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 474 473 475 57 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [18 bh+0 S4 A32])) "fs/exec.c":287:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 475 474 476 57 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":287:5 75 {*movsi_internal}
     (nil))
(call_insn 476 475 477 57 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7a64a9d10200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":287:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 477 476 478 57 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":287:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 478 477 479 57 (set (reg:SI 138 [ _56 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -92 [0xffffffffffffffa4])) [1 ex.a_magic+0 S4 A32])) "fs/exec.c":288:9 75 {*movsi_internal}
     (nil))
(insn 479 478 480 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 138 [ _56 ])
            (const_int 267 [0x10b]))) "fs/exec.c":288:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 138 [ _56 ])
        (nil)))
(jump_insn 480 479 481 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 522)
(note 481 480 482 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 58 (set (reg:SI 139 [ _57 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [9 ex.a_trsize+0 S4 A32])) "fs/exec.c":288:36 75 {*movsi_internal}
     (nil))
(insn 483 482 484 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ _57 ])
            (const_int 0 [0]))) "fs/exec.c":288:31 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 139 [ _57 ])
        (nil)))
(jump_insn 484 483 485 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:31 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 522)
(note 485 484 486 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 59 (set (reg:SI 140 [ _58 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 ex.a_drsize+0 S4 A32])) "fs/exec.c":288:51 75 {*movsi_internal}
     (nil))
(insn 487 486 488 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 140 [ _58 ])
            (const_int 0 [0]))) "fs/exec.c":288:46 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 140 [ _58 ])
        (nil)))
(jump_insn 488 487 489 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:46 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 522)
(note 489 488 490 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 60 (set (reg:SI 141 [ _59 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":289:13 75 {*movsi_internal}
     (nil))
(insn 491 490 492 60 (set (reg:SI 142 [ _60 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -84 [0xffffffffffffffac])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":289:25 75 {*movsi_internal}
     (nil))
(insn 492 491 493 60 (parallel [
            (set (reg:SI 143 [ _61 ])
                (plus:SI (reg:SI 141 [ _59 ])
                    (reg:SI 142 [ _60 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":289:21 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 142 [ _60 ])
        (expr_list:REG_DEAD (reg:SI 141 [ _59 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 493 492 494 60 (set (reg:SI 144 [ _62 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [9 ex.a_bss+0 S4 A32])) "fs/exec.c":289:37 75 {*movsi_internal}
     (nil))
(insn 494 493 497 60 (parallel [
            (set (reg:SI 145 [ _63 ])
                (plus:SI (reg:SI 143 [ _61 ])
                    (reg:SI 144 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":289:33 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 144 [ _62 ])
        (expr_list:REG_DEAD (reg:SI 143 [ _61 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 497 494 498 60 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 145 [ _63 ])
            (const_int 50331648 [0x3000000]))) "fs/exec.c":288:61 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 145 [ _63 ])
        (nil)))
(jump_insn 498 497 499 60 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:61 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 522)
(note 499 498 500 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 61 (set (reg/f:SI 285)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":290:16 75 {*movsi_internal}
     (nil))
(insn 501 500 502 61 (set (reg:SI 146 [ _64 ])
        (mem:SI (plus:SI (reg/f:SI 285)
                (const_int 4 [0x4])) [1 inode_123->i_size+0 S4 A32])) "fs/exec.c":290:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 285)
        (nil)))
(insn 502 501 503 61 (set (reg:SI 147 [ _65 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":290:29 75 {*movsi_internal}
     (nil))
(insn 503 502 504 61 (set (reg:SI 148 [ _66 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -84 [0xffffffffffffffac])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":290:41 75 {*movsi_internal}
     (nil))
(insn 504 503 505 61 (parallel [
            (set (reg:SI 149 [ _67 ])
                (plus:SI (reg:SI 147 [ _65 ])
                    (reg:SI 148 [ _66 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":290:37 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 148 [ _66 ])
        (expr_list:REG_DEAD (reg:SI 147 [ _65 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 505 504 506 61 (set (reg:SI 150 [ _68 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [9 ex.a_syms+0 S4 A32])) "fs/exec.c":290:53 75 {*movsi_internal}
     (nil))
(insn 506 505 507 61 (parallel [
            (set (reg:SI 151 [ _69 ])
                (plus:SI (reg:SI 149 [ _67 ])
                    (reg:SI 150 [ _68 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":290:49 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 150 [ _68 ])
        (expr_list:REG_DEAD (reg:SI 149 [ _67 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 507 506 508 61 (set (reg:SI 152 [ _70 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -92 [0xffffffffffffffa4])) [1 ex.a_magic+0 S4 A32])) "fs/exec.c":290:63 75 {*movsi_internal}
     (nil))
(insn 508 507 509 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ _70 ])
            (const_int 267 [0x10b]))) "fs/exec.c":290:63 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 152 [ _70 ])
        (nil)))
(jump_insn 509 508 510 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) "fs/exec.c":290:63 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 514)
(note 510 509 511 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 854 62 (set (reg:SI 208 [ iftmp.44_147 ])
        (const_int 1024 [0x400])) "fs/exec.c":290:63 75 {*movsi_internal}
     (nil))
(jump_insn 854 511 855 62 (set (pc)
        (label_ref 517)) 807 {jump}
     (nil)
 -> 517)
(barrier 855 854 514)
(code_label 514 855 515 63 84 (nil) [1 uses])
(note 515 514 516 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 63 (set (reg:SI 208 [ iftmp.44_147 ])
        (const_int 32 [0x20])) "fs/exec.c":290:63 75 {*movsi_internal}
     (nil))
(code_label 517 516 518 64 85 (nil) [1 uses])
(note 518 517 519 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 64 (parallel [
            (set (reg:SI 153 [ _71 ])
                (plus:SI (reg:SI 208 [ iftmp.44_147 ])
                    (reg:SI 151 [ _69 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":290:61 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 208 [ iftmp.44_147 ])
        (expr_list:REG_DEAD (reg:SI 151 [ _69 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 520 519 521 64 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 146 [ _64 ])
            (reg:SI 153 [ _71 ]))) "fs/exec.c":289:56 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 153 [ _71 ])
        (expr_list:REG_DEAD (reg:SI 146 [ _64 ])
            (nil))))
(jump_insn 521 520 522 64 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) "fs/exec.c":289:56 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 527)
(code_label 522 521 523 65 83 (nil) [4 uses])
(note 523 522 524 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 856 65 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":291:16 75 {*movsi_internal}
     (nil))
(jump_insn 856 524 857 65 (set (pc)
        (label_ref 785)) "fs/exec.c":292:9 807 {jump}
     (nil)
 -> 785)
(barrier 857 856 527)
(code_label 527 857 528 66 86 (nil) [1 uses])
(note 528 527 529 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 66 (set (reg:SI 154 [ _72 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -92 [0xffffffffffffffa4])) [1 ex.a_magic+0 S4 A32])) "fs/exec.c":294:9 75 {*movsi_internal}
     (nil))
(insn 530 529 531 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 154 [ _72 ])
            (const_int 267 [0x10b]))) "fs/exec.c":294:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 154 [ _72 ])
        (nil)))
(jump_insn 531 530 532 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 544)
            (pc))) "fs/exec.c":294:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 544)
(note 532 531 533 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 534 67 (set (reg/f:SI 155 [ filename.45_73 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 filename+0 S4 A32])) "fs/exec.c":295:9 75 {*movsi_internal}
     (nil))
(insn 534 533 535 67 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":295:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 535 534 536 67 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 155 [ filename.45_73 ])) "fs/exec.c":295:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 155 [ filename.45_73 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 536 535 537 67 (set (reg/f:SI 286)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7a64a9ddc3f0 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/exec.c":295:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7a64a9ddc3f0 *.LC2>)
        (nil)))
(insn 537 536 538 67 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 286)) "fs/exec.c":295:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 286)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 538 537 539 67 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":295:9 75 {*movsi_internal}
     (nil))
(call_insn 539 538 540 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7a64a9d38e00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":295:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 540 539 541 67 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":295:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 541 540 858 67 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":296:16 75 {*movsi_internal}
     (nil))
(jump_insn 858 541 859 67 (set (pc)
        (label_ref 785)) "fs/exec.c":297:9 807 {jump}
     (nil)
 -> 785)
(barrier 859 858 544)
(code_label 544 859 545 68 87 (nil) [1 uses])
(note 545 544 546 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [9 sh_bang+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":299:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 547 546 548 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 577)
            (pc))) "fs/exec.c":299:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 577)
(note 548 547 549 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":300:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 550 549 551 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 551 550 552 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 552 551 553 69 (parallel [
            (set (reg:SI 287)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":300:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 553 552 554 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 287)) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 287)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 554 553 555 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [20 envp+0 S4 A32])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 555 554 556 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 envc+0 S4 A32])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 556 555 557 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":300:13 823 {*call_value}
     (nil)
    (nil))
(insn 557 556 558 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":300:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 558 557 559 69 (set (reg:SI 288)
        (reg:SI 0 ax)) "fs/exec.c":300:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 559 558 560 69 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg:SI 288)) "fs/exec.c":300:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 288)
        (nil)))
(insn 560 559 561 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":301:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 561 560 562 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 562 561 563 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 563 562 564 69 (parallel [
            (set (reg:SI 289)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":301:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 564 563 565 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 289)) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 289)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 565 564 566 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [20 argv+0 S4 A32])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 566 565 567 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 567 566 568 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":301:13 823 {*call_value}
     (nil)
    (nil))
(insn 568 567 569 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":301:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 569 568 570 69 (set (reg:SI 290)
        (reg:SI 0 ax)) "fs/exec.c":301:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 570 569 571 69 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg:SI 290)) "fs/exec.c":301:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 571 570 572 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":302:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 572 571 573 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 577)
            (pc))) "fs/exec.c":302:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 577)
(note 573 572 574 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 860 70 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])
        (const_int -12 [0xfffffffffffffff4])) "fs/exec.c":303:20 75 {*movsi_internal}
     (nil))
(jump_insn 860 574 861 70 (set (pc)
        (label_ref 785)) "fs/exec.c":304:13 807 {jump}
     (nil)
 -> 785)
(barrier 861 860 577)
(code_label 577 861 578 71 88 (nil) [2 uses])
(note 578 577 579 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 71 (set (reg/f:SI 291)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":308:16 75 {*movsi_internal}
     (nil))
(insn 580 579 581 71 (set (reg/f:SI 156 [ current.46_74 ])
        (mem/f/c:SI (reg/f:SI 291) [5 current+0 S4 A32])) "fs/exec.c":308:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 291)
        (nil)))
(insn 581 580 582 71 (set (reg/f:SI 157 [ _75 ])
        (mem/f:SI (plus:SI (reg/f:SI 156 [ current.46_74 ])
                (const_int 632 [0x278])) [11 current.46_74->executable+0 S4 A32])) "fs/exec.c":308:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 156 [ current.46_74 ])
        (nil)))
(insn 582 581 583 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 157 [ _75 ])
            (const_int 0 [0]))) "fs/exec.c":308:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 157 [ _75 ])
        (nil)))
(jump_insn 583 582 584 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) "fs/exec.c":308:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 593)
(note 584 583 585 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 72 (set (reg/f:SI 292)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":309:21 75 {*movsi_internal}
     (nil))
(insn 586 585 587 72 (set (reg/f:SI 158 [ current.47_76 ])
        (mem/f/c:SI (reg/f:SI 292) [5 current+0 S4 A32])) "fs/exec.c":309:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 292)
        (nil)))
(insn 587 586 588 72 (set (reg/f:SI 159 [ _77 ])
        (mem/f:SI (plus:SI (reg/f:SI 158 [ current.47_76 ])
                (const_int 632 [0x278])) [11 current.47_76->executable+0 S4 A32])) "fs/exec.c":309:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 158 [ current.47_76 ])
        (nil)))
(insn 588 587 589 72 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":309:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 589 588 590 72 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg/f:SI 159 [ _77 ])) "fs/exec.c":309:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 159 [ _77 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 590 589 591 72 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":309:9 75 {*movsi_internal}
     (nil))
(call_insn 591 590 592 72 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7a64a9cd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":309:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 592 591 593 72 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":309:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 593 592 594 73 89 (nil) [1 uses])
(note 594 593 595 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 73 (set (reg/f:SI 293)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":310:12 75 {*movsi_internal}
     (nil))
(insn 596 595 597 73 (set (reg/f:SI 160 [ current.48_78 ])
        (mem/f/c:SI (reg/f:SI 293) [5 current+0 S4 A32])) "fs/exec.c":310:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 293)
        (nil)))
(insn 597 596 598 73 (set (reg/f:SI 294)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":310:25 75 {*movsi_internal}
     (nil))
(insn 598 597 599 73 (set (mem/f:SI (plus:SI (reg/f:SI 160 [ current.48_78 ])
                (const_int 632 [0x278])) [11 current.48_78->executable+0 S4 A32])
        (reg/f:SI 294)) "fs/exec.c":310:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 294)
        (expr_list:REG_DEAD (reg/f:SI 160 [ current.48_78 ])
            (nil))))
(insn 599 598 862 73 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":311:12 75 {*movsi_internal}
     (nil))
(jump_insn 862 599 863 73 (set (pc)
        (label_ref 611)) "fs/exec.c":311:5 807 {jump}
     (nil)
 -> 611)
(barrier 863 862 613)
(code_label 613 863 602 74 91 (nil) [1 uses])
(note 602 613 603 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 74 (set (reg/f:SI 295)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":312:16 75 {*movsi_internal}
     (nil))
(insn 604 603 605 74 (set (reg/f:SI 161 [ current.49_79 ])
        (mem/f/c:SI (reg/f:SI 295) [5 current+0 S4 A32])) "fs/exec.c":312:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 295)
        (nil)))
(insn 605 604 606 74 (set (reg:SI 297)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":312:42 75 {*movsi_internal}
     (nil))
(insn 606 605 607 74 (parallel [
            (set (reg:SI 296)
                (plus:SI (reg:SI 297)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":312:42 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 297)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 607 606 608 74 (parallel [
            (set (reg:SI 298)
                (ashift:SI (reg:SI 296)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":312:42 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 296)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 608 607 609 74 (parallel [
            (set (reg/f:SI 299)
                (plus:SI (reg/f:SI 161 [ current.49_79 ])
                    (reg:SI 298)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":312:42 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 298)
        (expr_list:REG_DEAD (reg/f:SI 161 [ current.49_79 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 609 608 610 74 (set (mem/f:SI (reg/f:SI 299) [8 current.49_79->sigaction[i_126].sa_handler+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":312:42 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 299)
        (nil)))
(insn 610 609 611 74 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":311:26 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 611 610 612 75 90 (nil) [1 uses])
(note 612 611 616 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 616 612 617 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/exec.c":311:19 11 {*cmpsi_1}
     (nil))
(jump_insn 617 616 618 75 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 613)
            (pc))) "fs/exec.c":311:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 613)
(note 618 617 619 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 864 76 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":313:12 75 {*movsi_internal}
     (nil))
(jump_insn 864 619 865 76 (set (pc)
        (label_ref 640)) "fs/exec.c":313:5 807 {jump}
     (nil)
 -> 640)
(barrier 865 864 642)
(code_label 642 865 622 77 94 (nil) [1 uses])
(note 622 642 623 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 77 (set (reg/f:SI 300)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":314:21 75 {*movsi_internal}
     (nil))
(insn 624 623 625 77 (set (reg/f:SI 162 [ current.50_80 ])
        (mem/f/c:SI (reg/f:SI 300) [5 current+0 S4 A32])) "fs/exec.c":314:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 300)
        (nil)))
(insn 625 624 626 77 (set (reg:SI 163 [ _81 ])
        (mem:SI (plus:SI (reg/f:SI 162 [ current.50_80 ])
                (const_int 636 [0x27c])) [1 current.50_80->close_on_exec+0 S4 A32])) "fs/exec.c":314:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 162 [ current.50_80 ])
        (nil)))
(insn 626 625 627 77 (set (reg:SI 301)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":314:37 75 {*movsi_internal}
     (nil))
(insn 627 626 628 77 (parallel [
            (set (reg:SI 164 [ _82 ])
                (lshiftrt:SI (reg:SI 163 [ _81 ])
                    (subreg:QI (reg:SI 301) 0)))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":314:37 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 301)
        (expr_list:REG_DEAD (reg:SI 163 [ _81 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 628 627 629 77 (parallel [
            (set (reg:SI 165 [ _83 ])
                (and:SI (reg:SI 164 [ _82 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":314:43 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 164 [ _82 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 629 628 630 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ _83 ])
            (const_int 0 [0]))) "fs/exec.c":314:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 165 [ _83 ])
        (nil)))
(jump_insn 630 629 631 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 637)
            (pc))) "fs/exec.c":314:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 637)
(note 631 630 632 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 78 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":315:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 633 632 634 78 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":315:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 634 633 635 78 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":315:13 75 {*movsi_internal}
     (nil))
(call_insn 635 634 636 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_close") [flags 0x41]  <function_decl 0x7a64a9d4da00 sys_close>) [0 sys_close S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":315:13 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 636 635 637 78 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":315:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 637 636 638 79 93 (nil) [1 uses])
(note 638 637 639 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 79 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":313:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 640 639 641 80 92 (nil) [1 uses])
(note 641 640 645 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 645 641 646 80 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 19 [0x13]))) "fs/exec.c":313:19 11 {*cmpsi_1}
     (nil))
(jump_insn 646 645 647 80 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 642)
            (pc))) "fs/exec.c":313:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 642)
(note 647 646 648 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 81 (set (reg/f:SI 302)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":316:12 75 {*movsi_internal}
     (nil))
(insn 649 648 650 81 (set (reg/f:SI 166 [ current.51_84 ])
        (mem/f/c:SI (reg/f:SI 302) [5 current+0 S4 A32])) "fs/exec.c":316:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 302)
        (nil)))
(insn 650 649 652 81 (set (mem:SI (plus:SI (reg/f:SI 166 [ current.51_84 ])
                (const_int 636 [0x27c])) [1 current.51_84->close_on_exec+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":316:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 166 [ current.51_84 ])
        (nil)))
(insn 652 650 653 81 (set (reg:SI 304)
        (const_int 15 [0xf])) "fs/exec.c":317:49 75 {*movsi_internal}
     (nil))
(insn 653 652 651 81 (parallel [
            (set (reg:SI 303 [ __limit ])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 304)
                    ]
                     [
                        (asm_input:SI ("r") fs/exec.c:317)
                    ]
                     [] fs/exec.c:317))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:49 -1
     (expr_list:REG_DEAD (reg:SI 304)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 651 653 654 81 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [1 __limit+0 S4 A32])
        (reg:SI 303 [ __limit ])) "fs/exec.c":317:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 303 [ __limit ])
        (nil)))
(insn 654 651 655 81 (set (reg:SI 209 [ _259 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [1 __limit+0 S4 A32])) "fs/exec.c":317:49 75 {*movsi_internal}
     (nil))
(insn 655 654 656 81 (set (reg/f:SI 305)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":317:22 75 {*movsi_internal}
     (nil))
(insn 656 655 657 81 (set (reg/f:SI 167 [ current.52_85 ])
        (mem/f/c:SI (reg/f:SI 305) [5 current+0 S4 A32])) "fs/exec.c":317:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 305)
        (nil)))
(insn 657 656 658 81 (parallel [
            (set (reg/f:SI 168 [ _86 ])
                (plus:SI (reg/f:SI 167 [ current.52_85 ])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 167 [ current.52_85 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 658 657 659 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 659 658 660 81 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 168 [ _86 ])) "fs/exec.c":317:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 168 [ _86 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 660 659 661 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7a64a9d15900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":317:5 823 {*call_value}
     (nil)
    (nil))
(insn 661 660 662 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 662 661 663 81 (set (reg:SI 169 [ _87 ])
        (reg:SI 0 ax)) "fs/exec.c":317:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 663 662 664 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 664 663 665 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 209 [ _259 ])) "fs/exec.c":317:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 209 [ _259 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 665 664 666 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 169 [ _87 ])) "fs/exec.c":317:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 169 [ _87 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 666 665 667 81 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":317:5 75 {*movsi_internal}
     (nil))
(call_insn 667 666 668 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x7a64a9d38400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":317:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 668 667 670 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 670 668 671 81 (set (reg:SI 307)
        (const_int 23 [0x17])) "fs/exec.c":318:49 75 {*movsi_internal}
     (nil))
(insn 671 670 669 81 (parallel [
            (set (reg:SI 306 [ __limit ])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 307)
                    ]
                     [
                        (asm_input:SI ("r") fs/exec.c:318)
                    ]
                     [] fs/exec.c:318))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:49 -1
     (expr_list:REG_DEAD (reg:SI 307)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 669 671 672 81 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -60 [0xffffffffffffffc4])) [1 __limit+0 S4 A32])
        (reg:SI 306 [ __limit ])) "fs/exec.c":318:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 306 [ __limit ])
        (nil)))
(insn 672 669 673 81 (set (reg:SI 210 [ _263 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -60 [0xffffffffffffffc4])) [1 __limit+0 S4 A32])) "fs/exec.c":318:49 75 {*movsi_internal}
     (nil))
(insn 673 672 674 81 (set (reg/f:SI 308)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":318:22 75 {*movsi_internal}
     (nil))
(insn 674 673 675 81 (set (reg/f:SI 170 [ current.53_88 ])
        (mem/f/c:SI (reg/f:SI 308) [5 current+0 S4 A32])) "fs/exec.c":318:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 308)
        (nil)))
(insn 675 674 676 81 (parallel [
            (set (reg/f:SI 171 [ _89 ])
                (plus:SI (reg/f:SI 170 [ current.53_88 ])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 170 [ current.53_88 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 676 675 677 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 677 676 678 81 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 171 [ _89 ])) "fs/exec.c":318:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 171 [ _89 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 678 677 679 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7a64a9d15900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":318:5 823 {*call_value}
     (nil)
    (nil))
(insn 679 678 680 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 680 679 681 81 (set (reg:SI 172 [ _90 ])
        (reg:SI 0 ax)) "fs/exec.c":318:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 681 680 682 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 682 681 683 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 210 [ _263 ])) "fs/exec.c":318:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 210 [ _263 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 683 682 684 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 172 [ _90 ])) "fs/exec.c":318:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 172 [ _90 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 684 683 685 81 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":318:5 75 {*movsi_internal}
     (nil))
(call_insn 685 684 686 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x7a64a9d38400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":318:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 686 685 687 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 687 686 688 81 (set (reg/f:SI 309)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7a64a9d2e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":319:29 75 {*movsi_internal}
     (nil))
(insn 688 687 689 81 (set (reg/f:SI 173 [ last_task_used_math.54_91 ])
        (mem/f/c:SI (reg/f:SI 309) [5 last_task_used_math+0 S4 A32])) "fs/exec.c":319:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 309)
        (nil)))
(insn 689 688 690 81 (set (reg/f:SI 310)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":319:29 75 {*movsi_internal}
     (nil))
(insn 690 689 691 81 (set (reg/f:SI 174 [ current.55_92 ])
        (mem/f/c:SI (reg/f:SI 310) [5 current+0 S4 A32])) "fs/exec.c":319:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 310)
        (nil)))
(insn 691 690 692 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 173 [ last_task_used_math.54_91 ])
            (reg/f:SI 174 [ current.55_92 ]))) "fs/exec.c":319:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 174 [ current.55_92 ])
        (expr_list:REG_DEAD (reg/f:SI 173 [ last_task_used_math.54_91 ])
            (nil))))
(jump_insn 692 691 693 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 696)
            (pc))) "fs/exec.c":319:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 696)
(note 693 692 694 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 695 82 (set (reg/f:SI 311)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7a64a9d2e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":320:29 75 {*movsi_internal}
     (nil))
(insn 695 694 696 82 (set (mem/f/c:SI (reg/f:SI 311) [5 last_task_used_math+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":320:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 311)
        (nil)))
(code_label 696 695 697 83 95 (nil) [1 uses])
(note 697 696 698 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 698 697 699 83 (set (reg/f:SI 312)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":321:12 75 {*movsi_internal}
     (nil))
(insn 699 698 700 83 (set (reg/f:SI 175 [ current.56_93 ])
        (mem/f/c:SI (reg/f:SI 312) [5 current+0 S4 A32])) "fs/exec.c":321:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 312)
        (nil)))
(insn 700 699 701 83 (set (mem:HI (plus:SI (reg/f:SI 175 [ current.56_93 ])
                (const_int 612 [0x264])) [4 current.56_93->used_math+0 S2 A32])
        (const_int 0 [0])) "fs/exec.c":321:24 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 175 [ current.56_93 ])
        (nil)))
(insn 701 700 702 83 (set (reg:SI 176 [ _94 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":322:23 75 {*movsi_internal}
     (nil))
(insn 702 701 703 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 703 702 704 83 (parallel [
            (set (reg:SI 313)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -220 [0xffffffffffffff24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 704 703 705 83 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 313)) "fs/exec.c":322:10 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 313)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 705 704 706 83 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 176 [ _94 ])) "fs/exec.c":322:10 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 176 [ _94 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 706 705 707 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("change_ldt") [flags 0x3]  <function_decl 0x7a64a9d51100 change_ldt>) [0 change_ldt S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":322:10 823 {*call_value}
     (nil)
    (nil))
(insn 707 706 708 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 708 707 709 83 (set (reg:SI 177 [ _95 ])
        (reg:SI 0 ax)) "fs/exec.c":322:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 709 708 710 83 (parallel [
            (set (reg:SI 211 [ _269 ])
                (plus:SI (reg:SI 177 [ _95 ])
                    (const_int -131072 [0xfffffffffffe0000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 177 [ _95 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 710 709 711 83 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
                    (reg:SI 211 [ _269 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:7 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 211 [ _269 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 711 710 712 83 (set (reg/f:SI 178 [ p.57_96 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":323:24 75 {*movsi_internal}
     (nil))
(insn 712 711 713 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":323:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 713 712 714 83 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 envc+0 S4 A32])) "fs/exec.c":323:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 714 713 715 83 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 argc+0 S4 A32])) "fs/exec.c":323:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 715 714 716 83 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 178 [ p.57_96 ])) "fs/exec.c":323:24 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 178 [ p.57_96 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 716 715 717 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("create_tables") [flags 0x3]  <function_decl 0x7a64a9d4df00 create_tables>) [0 create_tables S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":323:24 823 {*call_value}
     (nil)
    (nil))
(insn 717 716 718 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":323:24 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 718 717 719 83 (set (reg/f:SI 179 [ _97 ])
        (reg:SI 0 ax)) "fs/exec.c":323:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 719 718 720 83 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
        (reg/f:SI 179 [ _97 ])) "fs/exec.c":323:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 179 [ _97 ])
        (nil)))
(insn 720 719 721 83 (set (reg:SI 180 [ _98 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -80 [0xffffffffffffffb0])) [9 ex.a_bss+0 S4 A32])) "fs/exec.c":324:22 75 {*movsi_internal}
     (nil))
(insn 721 720 722 83 (set (reg:SI 181 [ _99 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -84 [0xffffffffffffffac])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":325:43 75 {*movsi_internal}
     (nil))
(insn 722 721 723 83 (set (reg/f:SI 314)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":326:28 75 {*movsi_internal}
     (nil))
(insn 723 722 724 83 (set (reg/f:SI 182 [ current.58_100 ])
        (mem/f/c:SI (reg/f:SI 314) [5 current+0 S4 A32])) "fs/exec.c":326:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 314)
        (nil)))
(insn 724 723 725 83 (set (reg:SI 183 [ _101 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":326:43 75 {*movsi_internal}
     (nil))
(insn 725 724 726 83 (set (mem:SI (plus:SI (reg/f:SI 182 [ current.58_100 ])
                (const_int 540 [0x21c])) [1 current.58_100->end_code+0 S4 A32])
        (reg:SI 183 [ _101 ])) "fs/exec.c":326:39 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183 [ _101 ])
        (nil)))
(insn 726 725 727 83 (set (reg:SI 184 [ _102 ])
        (mem:SI (plus:SI (reg/f:SI 182 [ current.58_100 ])
                (const_int 540 [0x21c])) [1 current.58_100->end_code+0 S4 A32])) "fs/exec.c":326:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 182 [ current.58_100 ])
        (nil)))
(insn 727 726 728 83 (set (reg/f:SI 315)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":325:28 75 {*movsi_internal}
     (nil))
(insn 728 727 729 83 (set (reg/f:SI 185 [ current.59_103 ])
        (mem/f/c:SI (reg/f:SI 315) [5 current+0 S4 A32])) "fs/exec.c":325:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 315)
        (nil)))
(insn 729 728 730 83 (parallel [
            (set (reg:SI 186 [ _104 ])
                (plus:SI (reg:SI 181 [ _99 ])
                    (reg:SI 184 [ _102 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":325:51 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 184 [ _102 ])
        (expr_list:REG_DEAD (reg:SI 181 [ _99 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 730 729 731 83 (set (mem:SI (plus:SI (reg/f:SI 185 [ current.59_103 ])
                (const_int 544 [0x220])) [1 current.59_103->end_data+0 S4 A32])
        (reg:SI 186 [ _104 ])) "fs/exec.c":325:39 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 186 [ _104 ])
        (nil)))
(insn 731 730 732 83 (set (reg:SI 187 [ _105 ])
        (mem:SI (plus:SI (reg/f:SI 185 [ current.59_103 ])
                (const_int 544 [0x220])) [1 current.59_103->end_data+0 S4 A32])) "fs/exec.c":325:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 185 [ current.59_103 ])
        (nil)))
(insn 732 731 733 83 (set (reg/f:SI 316)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":324:12 75 {*movsi_internal}
     (nil))
(insn 733 732 734 83 (set (reg/f:SI 188 [ current.60_106 ])
        (mem/f/c:SI (reg/f:SI 316) [5 current+0 S4 A32])) "fs/exec.c":324:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 316)
        (nil)))
(insn 734 733 735 83 (parallel [
            (set (reg:SI 189 [ _107 ])
                (plus:SI (reg:SI 180 [ _98 ])
                    (reg:SI 187 [ _105 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":324:29 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 187 [ _105 ])
        (expr_list:REG_DEAD (reg:SI 180 [ _98 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 735 734 736 83 (set (mem:SI (plus:SI (reg/f:SI 188 [ current.60_106 ])
                (const_int 548 [0x224])) [1 current.60_106->brk+0 S4 A32])
        (reg:SI 189 [ _107 ])) "fs/exec.c":324:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 189 [ _107 ])
        (expr_list:REG_DEAD (reg/f:SI 188 [ current.60_106 ])
            (nil))))
(insn 736 735 737 83 (set (reg/f:SI 317)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":327:12 75 {*movsi_internal}
     (nil))
(insn 737 736 738 83 (set (reg/f:SI 190 [ current.61_108 ])
        (mem/f/c:SI (reg/f:SI 317) [5 current+0 S4 A32])) "fs/exec.c":327:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 317)
        (nil)))
(insn 738 737 739 83 (set (reg:SI 318)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":327:30 75 {*movsi_internal}
     (nil))
(insn 739 738 740 83 (parallel [
            (set (reg:SI 191 [ _109 ])
                (and:SI (reg:SI 318)
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":327:30 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 318)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000]))
                (nil)))))
(insn 740 739 741 83 (set (mem:SI (plus:SI (reg/f:SI 190 [ current.61_108 ])
                (const_int 552 [0x228])) [1 current.61_108->start_stack+0 S4 A32])
        (reg:SI 191 [ _109 ])) "fs/exec.c":327:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 191 [ _109 ])
        (expr_list:REG_DEAD (reg/f:SI 190 [ current.61_108 ])
            (nil))))
(insn 741 740 742 83 (set (reg/f:SI 319)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":328:12 75 {*movsi_internal}
     (nil))
(insn 742 741 743 83 (set (reg/f:SI 192 [ current.62_110 ])
        (mem/f/c:SI (reg/f:SI 319) [5 current+0 S4 A32])) "fs/exec.c":328:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 319)
        (nil)))
(insn 743 742 744 83 (set (reg:SI 320)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [9 e_uid+0 S4 A32])) "fs/exec.c":328:19 75 {*movsi_internal}
     (nil))
(insn 744 743 745 83 (set (reg:HI 193 [ _111 ])
        (subreg:HI (reg:SI 320) 0)) "fs/exec.c":328:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 320)
        (nil)))
(insn 745 744 746 83 (set (mem:HI (plus:SI (reg/f:SI 192 [ current.62_110 ])
                (const_int 578 [0x242])) [4 current.62_110->euid+0 S2 A16])
        (reg:HI 193 [ _111 ])) "fs/exec.c":328:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 193 [ _111 ])
        (expr_list:REG_DEAD (reg/f:SI 192 [ current.62_110 ])
            (nil))))
(insn 746 745 747 83 (set (reg/f:SI 321)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":329:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 747 746 748 83 (set (reg/f:SI 194 [ current.63_112 ])
        (mem/f/c:SI (reg/f:SI 321) [5 current+0 S4 A32])) "fs/exec.c":329:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 321)
        (nil)))
(insn 748 747 749 83 (set (reg:SI 322)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 e_gid+0 S4 A32])) "fs/exec.c":329:19 75 {*movsi_internal}
     (nil))
(insn 749 748 750 83 (set (reg:HI 195 [ _113 ])
        (subreg:HI (reg:SI 322) 0)) "fs/exec.c":329:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 322)
        (nil)))
(insn 750 749 751 83 (set (mem:HI (plus:SI (reg/f:SI 194 [ current.63_112 ])
                (const_int 584 [0x248])) [4 current.63_112->egid+0 S2 A32])
        (reg:HI 195 [ _113 ])) "fs/exec.c":329:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 195 [ _113 ])
        (expr_list:REG_DEAD (reg/f:SI 194 [ current.63_112 ])
            (nil))))
(insn 751 750 752 83 (set (reg:SI 196 [ _114 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -88 [0xffffffffffffffa8])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":330:11 75 {*movsi_internal}
     (nil))
(insn 752 751 753 83 (set (reg:SI 197 [ _115 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -84 [0xffffffffffffffac])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":330:23 75 {*movsi_internal}
     (nil))
(insn 753 752 754 83 (parallel [
            (set (reg:SI 198 [ _116 ])
                (plus:SI (reg:SI 196 [ _114 ])
                    (reg:SI 197 [ _115 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":330:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 197 [ _115 ])
        (expr_list:REG_DEAD (reg:SI 196 [ _114 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 754 753 866 83 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (reg:SI 198 [ _116 ])) "fs/exec.c":330:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 198 [ _116 ])
        (nil)))
(jump_insn 866 754 867 83 (set (pc)
        (label_ref 767)) "fs/exec.c":331:11 807 {jump}
     (nil)
 -> 767)
(barrier 867 866 771)
(code_label 771 867 757 84 97 (nil) [1 uses])
(note 757 771 758 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 758 757 759 84 (set (reg:SI 199 [ i.64_117 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":332:34 75 {*movsi_internal}
     (nil))
(insn 759 758 760 84 (parallel [
            (set (reg:SI 323)
                (plus:SI (reg:SI 199 [ i.64_117 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":332:34 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 760 759 761 84 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (reg:SI 323)) "fs/exec.c":332:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 323)
        (nil)))
(insn 761 760 762 84 (set (reg/f:SI 200 [ i.65_118 ])
        (reg:SI 199 [ i.64_117 ])) "fs/exec.c":332:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 199 [ i.64_117 ])
        (nil)))
(insn 762 761 763 84 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":332:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 763 762 764 84 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 200 [ i.65_118 ])) "fs/exec.c":332:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 200 [ i.65_118 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 764 763 765 84 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":332:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 765 764 766 84 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e200 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":332:9 812 {*call}
     (nil)
    (nil))
(insn 766 765 767 84 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":332:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 767 766 768 85 96 (nil) [1 uses])
(note 768 767 769 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 769 768 770 85 (set (reg:SI 324)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":331:14 75 {*movsi_internal}
     (nil))
(insn 770 769 772 85 (parallel [
            (set (reg:SI 201 [ _119 ])
                (and:SI (reg:SI 324)
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":331:14 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 324)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 4095 [0xfff]))
                (nil)))))
(insn 772 770 773 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 201 [ _119 ])
            (const_int 0 [0]))) "fs/exec.c":331:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 201 [ _119 ])
        (nil)))
(jump_insn 773 772 774 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 771)
            (pc))) "fs/exec.c":331:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 771)
(note 774 773 775 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 775 774 776 86 (set (reg:SI 202 [ _120 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [9 ex.a_entry+0 S4 A32])) "fs/exec.c":333:16 75 {*movsi_internal}
     (nil))
(insn 776 775 777 86 (set (reg/f:SI 325)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 eip+0 S4 A32])) "fs/exec.c":333:12 75 {*movsi_internal}
     (nil))
(insn 777 776 778 86 (set (mem:SI (reg/f:SI 325) [1 *eip_171(D)+0 S4 A32])
        (reg:SI 202 [ _120 ])) "fs/exec.c":333:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 325)
        (expr_list:REG_DEAD (reg:SI 202 [ _120 ])
            (nil))))
(insn 778 777 779 86 (set (reg/f:SI 326)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 eip+0 S4 A32])) "fs/exec.c":334:8 75 {*movsi_internal}
     (nil))
(insn 779 778 780 86 (parallel [
            (set (reg/f:SI 203 [ _121 ])
                (plus:SI (reg/f:SI 326)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":334:8 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 326)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 eip+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 780 779 781 86 (set (reg:SI 327)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])) "fs/exec.c":334:12 75 {*movsi_internal}
     (nil))
(insn 781 780 782 86 (set (mem:SI (reg/f:SI 203 [ _121 ]) [1 *_121+0 S4 A32])
        (reg:SI 327)) "fs/exec.c":334:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 327)
        (expr_list:REG_DEAD (reg/f:SI 203 [ _121 ])
            (nil))))
(insn 782 781 868 86 (set (reg:SI 205 [ _144 ])
        (const_int 0 [0])) "fs/exec.c":335:12 75 {*movsi_internal}
     (nil))
(jump_insn 868 782 869 86 (set (pc)
        (label_ref 817)) "fs/exec.c":335:12 807 {jump}
     (nil)
 -> 817)
(barrier 869 868 785)
(code_label 785 869 786 87 56 ("exec_error2") [6 uses])
(note 786 785 787 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 788 87 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":337:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 788 787 789 87 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 inode+0 S4 A32])) "fs/exec.c":337:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 789 788 790 87 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":337:5 75 {*movsi_internal}
     (nil))
(call_insn 790 789 791 87 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7a64a9cd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":337:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 791 790 792 87 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":337:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 792 791 793 88 82 ("exec_error1") [3 uses])
(note 793 792 794 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 794 793 870 88 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":339:12 75 {*movsi_internal}
     (nil))
(jump_insn 870 794 871 88 (set (pc)
        (label_ref 806)) "fs/exec.c":339:5 807 {jump}
     (nil)
 -> 806)
(barrier 871 870 808)
(code_label 808 871 797 89 99 (nil) [1 uses])
(note 797 808 798 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 89 (set (reg:SI 328)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/exec.c":340:9 75 {*movsi_internal}
     (nil))
(insn 799 798 800 89 (set (reg:SI 204 [ _122 ])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 328)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -220 [0xffffffffffffff24])) [1 page[i_129]+0 S4 A32])) "fs/exec.c":340:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 328)
        (nil)))
(insn 800 799 801 89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":340:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 801 800 802 89 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 204 [ _122 ])) "fs/exec.c":340:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 204 [ _122 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 802 801 803 89 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/exec.c":340:9 75 {*movsi_internal}
     (nil))
(call_insn 803 802 804 89 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x7a64a9d38800 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":340:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 804 803 805 89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":340:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 805 804 806 89 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":339:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 806 805 807 90 98 (nil) [1 uses])
(note 807 806 811 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 811 807 812 90 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/exec.c":339:19 11 {*cmpsi_1}
     (nil))
(jump_insn 812 811 813 90 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 808)
            (pc))) "fs/exec.c":339:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 808)
(note 813 812 814 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 814 813 817 91 (set (reg:SI 205 [ _144 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 retval+0 S4 A32])) "fs/exec.c":341:12 75 {*movsi_internal}
     (nil))
(code_label 817 814 818 92 100 (nil) [2 uses])
(note 818 817 819 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 823 92 (set (reg:SI 212 [ <retval> ])
        (reg:SI 205 [ _144 ])) "fs/exec.c":342:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 205 [ _144 ])
        (nil)))
(insn 823 819 824 92 (set (reg/i:SI 0 ax)
        (reg:SI 212 [ <retval> ])) "fs/exec.c":342:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 212 [ <retval> ])
        (nil)))
(insn 824 823 0 92 (use (reg/i:SI 0 ax)) "fs/exec.c":342:1 -1
     (nil))
