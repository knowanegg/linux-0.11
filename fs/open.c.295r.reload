
;; Function get_fs_long (get_fs_long, funcdef_no=4, decl_uid=1401, cgraph_uid=5, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = 0
   Insn 5: point = 4, n_alt = 1
   Insn 7: point = 5, n_alt = 0
   Insn 6: point = 7, n_alt = 0
   Insn 18: point = 8, n_alt = 0
 r82: [8..8]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
 r86: [6..7]
Compressing live ranges: from 9 to 9 - 100%
Ranges after the compression:
 r82: [8..8]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
 r86: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 19{10d,9u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [20 addr+0 S4 A32])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 0 ax [orig:85 _v ] [85])
                (asm_operands:SI ("movl %%fs:%1, %0") ("=r") 0 [
                        (mem:SI (reg/f:SI 0 ax [86]) [3 *addr_2(D)+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") include/asm/segment.h:26)
                    ]
                     [] include/asm/segment.h:26))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":26:5 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 _v+0 S4 A32])
        (reg:SI 0 ax [orig:85 _v ] [85])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:SI 0 ax [orig:83 _4 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 _v+0 S4 A32])) "include/asm/segment.h":27:12 75 {*movsi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":28:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function sys_close (sys_close, funcdef_no=8, decl_uid=1420, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            2 Small class reload: reject+=3
          alt=0,overall=15,losers=2,rld_nregs=2
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
      Creating newreg=118 from oldreg=101, assigning class GENERAL_REGS to r118
      Creating newreg=119, assigning class CREG to r119
   20: {r118:SI=r118:SI<<r119:QI;clobber flags:CC;}
      REG_DEAD r101:SI
      REG_DEAD r100:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   99: r118:SI=r101:SI
  101: r119:QI=r100:SI#0
    Inserting insn reload after:
  100: r85:SI=r118:SI

            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =rm  (1) 0 {*one_cmplsi2_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 61:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 65:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 89: point = 0, n_alt = -1
   Insn 88: point = 0, n_alt = -2
   Insn 84: point = 1, n_alt = -2
  BB 9
   Insn 95: point = 4, n_alt = -1
   Insn 69: point = 4, n_alt = 0
  BB 5
   Insn 93: point = 5, n_alt = -1
   Insn 36: point = 5, n_alt = 0
  BB 3
   Insn 91: point = 6, n_alt = -1
   Insn 10: point = 6, n_alt = 0
  BB 10
   Insn 81: point = 7, n_alt = 0
   Insn 80: point = 8, n_alt = 0
   Insn 79: point = 8, n_alt = 0
   Insn 78: point = 8, n_alt = -2
   Insn 77: point = 9, n_alt = 0
   Insn 76: point = 10, n_alt = 0
   Insn 75: point = 10, n_alt = 0
   Insn 74: point = 12, n_alt = 0
  BB 8
   Insn 67: point = 14, n_alt = -1
   Insn 66: point = 14, n_alt = 0
   Insn 65: point = 15, n_alt = 2
   Insn 64: point = 17, n_alt = 0
   Insn 63: point = 18, n_alt = 3
   Insn 62: point = 19, n_alt = 0
   Insn 61: point = 20, n_alt = 3
   Insn 60: point = 22, n_alt = 2
   Insn 59: point = 24, n_alt = 0
  BB 7
   Insn 56: point = 26, n_alt = 0
   Insn 55: point = 26, n_alt = 0
   Insn 54: point = 26, n_alt = -2
   Insn 53: point = 26, n_alt = 0
   Insn 52: point = 27, n_alt = 0
   Insn 51: point = 28, n_alt = 0
  BB 6
   Insn 49: point = 29, n_alt = -1
   Insn 48: point = 29, n_alt = 0
   Insn 47: point = 30, n_alt = 2
   Insn 46: point = 32, n_alt = 0
   Insn 45: point = 33, n_alt = 1
   Insn 44: point = 34, n_alt = 0
   Insn 43: point = 36, n_alt = 0
   Insn 42: point = 37, n_alt = 0
   Insn 41: point = 39, n_alt = 0
  BB 4
   Insn 34: point = 41, n_alt = -1
   Insn 33: point = 41, n_alt = 1
   Insn 32: point = 41, n_alt = 1
   Insn 31: point = 42, n_alt = 0
   Insn 30: point = 44, n_alt = 0
   Insn 29: point = 46, n_alt = 0
   Insn 28: point = 47, n_alt = 0
   Insn 27: point = 49, n_alt = 0
   Insn 26: point = 50, n_alt = 1
   Insn 25: point = 51, n_alt = 0
   Insn 24: point = 53, n_alt = 0
   Insn 23: point = 55, n_alt = 0
   Insn 22: point = 56, n_alt = -2
   Insn 21: point = 58, n_alt = 0
   Insn 100: point = 60, n_alt = -2
	Hard reg 0 is preferable by r118 with profit 1000
   Insn 20: point = 62, n_alt = 0
   Insn 101: point = 64, n_alt = 0
   Insn 99: point = 66, n_alt = -2
	Hard reg 0 is preferable by r118 with profit 1000
	Hard reg 4 is preferable by r118 with profit 1000
   Insn 19: point = 68, n_alt = 0
   Insn 18: point = 69, n_alt = 0
   Insn 17: point = 70, n_alt = 0
   Insn 16: point = 72, n_alt = 0
   Insn 15: point = 74, n_alt = 0
  BB 2
   Insn 8: point = 76, n_alt = -1
   Insn 7: point = 76, n_alt = 0
   Insn 97: point = 76, n_alt = 0
 r82: [8..76]
 r83: [71..72]
 r84: [52..70]
 r85: [59..60]
 r86: [57..58]
 r87: [52..56]
 r88: [50..53]
 r89: [50..51]
 r90: [43..47]
 r91: [33..37]
 r92: [29..30]
 r93: [21..22]
 r94: [18..20]
 r95: [14..15]
 r96: [9..10]
 r97: [2..7]
 r98: [0..1]
 r99: [73..74]
 r100: [65..69]
 r101: [67..68]
 r102: [54..55]
 r103: [48..49]
 r104: [43..44]
 r105: [45..46]
 r106: [41..42]
 r107: [38..39]
 r108: [33..34]
 r109: [35..36]
 r110: [31..32]
 r111: [26..27]
 r112: [23..24]
 r113: [18..19]
 r114: [16..17]
 r115: [11..12]
 r118: [61..66]
 r119: [63..64]
Compressing live ranges: from 77 to 58 - 75%
Ranges after the compression:
 r82: [4..57]
 r83: [54..55]
 r84: [40..53]
 r85: [46..47]
 r86: [44..45]
 r87: [40..43]
 r88: [38..41]
 r89: [38..39]
 r90: [32..35]
 r91: [24..27]
 r92: [20..21]
 r93: [14..15]
 r94: [12..13]
 r95: [8..9]
 r96: [4..5]
 r97: [2..3]
 r98: [0..1]
 r99: [56..57]
 r100: [50..53]
 r101: [52..53]
 r102: [42..43]
 r103: [36..37]
 r104: [32..33]
 r105: [34..35]
 r106: [30..31]
 r107: [28..29]
 r108: [24..25]
 r109: [26..27]
 r110: [22..23]
 r111: [18..19]
 r112: [16..17]
 r113: [12..13]
 r114: [10..11]
 r115: [6..7]
 r118: [48..51]
 r119: [48..49]

********** Assignment #1: **********

	 Assigning to 119 (cl=CREG, orig=119, freq=2000, tfirst=119, tfreq=2000)...
	   Assign 2 to reload r119 (freq=2000)
	 Assigning to 118 (cl=GENERAL_REGS, orig=101, freq=3000, tfirst=118, tfreq=3000)...
	   Assign 4 to reload r118 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 97
changing reg in insn 78
changing reg in insn 54
changing reg in insn 52
changing reg in insn 41
changing reg in insn 27
changing reg in insn 23
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 25
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 25
changing reg in insn 24
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 28
changing reg in insn 31
changing reg in insn 42
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 63
changing reg in insn 65
changing reg in insn 66
changing reg in insn 75
changing reg in insn 77
changing reg in insn 81
changing reg in insn 69
changing reg in insn 36
changing reg in insn 10
changing reg in insn 84
changing reg in insn 84
changing reg in insn 88
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 43
changing reg in insn 44
changing reg in insn 46
changing reg in insn 47
changing reg in insn 52
changing reg in insn 53
changing reg in insn 59
changing reg in insn 60
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 74
changing reg in insn 75
deleting insn with uid = 99.
deleting insn with uid = 54.
deleting insn with uid = 78.
deleting insn with uid = 84.
deleting insn with uid = 88.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 79.


sys_close

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={29d,24u} r1={10d,7u} r2={5d,2u} r3={1d,7u} r4={2d,2u} r7={7d,34u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={2e} r17={16d,4u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 282{200d,80u,2e} in 62{60 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 97 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 97 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 97 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/open.c":24:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "fs/open.c":24:8 806 {*jcc}
     (nil)
 -> 13)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 91 3 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":25:16 75 {*movsi_internal}
     (nil))
(jump_insn 91 10 92 3 (set (pc)
        (label_ref 82)) "fs/open.c":25:16 807 {jump}
     (nil)
 -> 82)
(barrier 92 91 13)
(code_label 13 92 14 4 4 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 0 ax [99])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 0 ax [orig:83 current.0_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [99]) [1 current+0 S4 A32])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:SI 1 dx [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:83 current.0_1 ] [83])
                (const_int 636 [0x27c])) [3 current.0_1->close_on_exec+0 S4 A32])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:SI 0 ax [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 fd+0 S4 A32])) "fs/open.c":26:35 75 {*movsi_internal}
     (nil))
(insn 19 18 101 4 (set (reg:SI 4 si [101])
        (const_int 1 [0x1])) "fs/open.c":26:35 75 {*movsi_internal}
     (nil))
(insn 101 19 20 4 (set (reg:QI 2 cx [119])
        (reg:QI 0 ax [100])) "fs/open.c":26:35 77 {*movqi_internal}
     (nil))
(insn 20 101 100 4 (parallel [
            (set (reg:SI 4 si [101])
                (ashift:SI (reg:SI 4 si [101])
                    (reg:QI 2 cx [119])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":26:35 655 {*ashlsi3_1}
     (nil))
(insn 100 20 21 4 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (reg:SI 4 si [101])) "fs/open.c":26:35 75 {*movsi_internal}
     (nil))
(insn 21 100 22 4 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (not:SI (reg:SI 0 ax [orig:85 _3 ] [85]))) "fs/open.c":26:31 632 {*one_cmplsi2_1}
     (nil))
(insn 22 21 23 4 (set (reg:SI 2 cx [orig:87 _5 ] [87])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "fs/open.c":26:31 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 0 ax [102])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 0 ax [orig:88 current.1_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [102]) [1 current+0 S4 A32])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:SI 1 dx [orig:89 _7 ] [89])
                (and:SI (reg:SI 1 dx [orig:84 _2 ] [84])
                    (reg:SI 2 cx [orig:87 _5 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":26:28 490 {*andsi_1}
     (nil))
(insn 26 25 27 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:88 current.1_6 ] [88])
                (const_int 636 [0x27c])) [3 current.1_6->close_on_exec+0 S4 A32])
        (reg:SI 1 dx [orig:89 _7 ] [89])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg/f:SI 0 ax [103])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":27:25 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 0 ax [orig:90 current.2_8 ] [90])
        (mem/f/c:SI (reg/f:SI 0 ax [103]) [1 current+0 S4 A32])) "fs/open.c":27:25 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:SI 1 dx [105])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 fd+0 S4 A32])) "fs/open.c":27:16 75 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:SI 1 dx [104])
                (plus:SI (reg:SI 1 dx [105])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":27:16 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 31 30 32 4 (set (reg/f:SI 0 ax [106])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [104])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:90 current.2_8 ] [90])) [10 current.2_8->filp[fd_18(D)]+0 S4 A32])) "fs/open.c":27:16 75 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 filp+0 S4 A32])
        (reg/f:SI 0 ax [106])) "fs/open.c":27:16 75 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [10 filp+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":27:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/open.c":27:8 806 {*jcc}
     (nil)
 -> 39)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 93 5 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":28:16 75 {*movsi_internal}
     (nil))
(jump_insn 93 36 94 5 (set (pc)
        (label_ref 82)) "fs/open.c":28:16 807 {jump}
     (nil)
 -> 82)
(barrier 94 93 39)
(code_label 39 94 40 6 6 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:SI 0 ax [107])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":29:12 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 0 ax [orig:91 current.3_9 ] [91])
        (mem/f/c:SI (reg/f:SI 0 ax [107]) [1 current+0 S4 A32])) "fs/open.c":29:12 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 1 dx [109])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 fd+0 S4 A32])) "fs/open.c":29:23 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:SI 1 dx [108])
                (plus:SI (reg:SI 1 dx [109])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":29:23 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 45 44 46 6 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [108])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:91 current.3_9 ] [91])) [10 current.3_9->filp[fd_18(D)]+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":29:23 75 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 filp+0 S4 A32])) "fs/open.c":30:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])) "fs/open.c":30:13 76 {*movhi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:92 _10 ] [92])
            (const_int 0 [0]))) "fs/open.c":30:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/open.c":30:8 806 {*jcc}
     (nil)
 -> 57)
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":31:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 52 51 53 7 (set (reg/f:SI 0 ax [111])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x714aafb7fb40 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/open.c":31:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x714aafb7fb40 *.LC0>)
        (nil)))
(insn 53 52 55 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 0 ax [111])) "fs/open.c":31:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 55 53 56 7 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x714aafb38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/open.c":31:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 56 55 57 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":31:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 57 56 58 8 7 (nil) [1 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 filp+0 S4 A32])) "fs/open.c":32:15 75 {*movsi_internal}
     (nil))
(insn 60 59 61 8 (set (reg:HI 0 ax [orig:93 _11 ] [93])
        (mem:HI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])) "fs/open.c":32:15 76 {*movhi_internal}
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:HI 1 dx [orig:94 _12 ] [94])
                (plus:HI (reg:HI 0 ax [orig:93 _11 ] [93])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":32:9 212 {*addhi_1}
     (nil))
(insn 62 61 63 8 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 filp+0 S4 A32])) "fs/open.c":32:8 75 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (mem:HI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])
        (reg:HI 1 dx [orig:94 _12 ] [94])) "fs/open.c":32:8 76 {*movhi_internal}
     (nil))
(insn 64 63 65 8 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 filp+0 S4 A32])) "fs/open.c":32:15 75 {*movsi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])) "fs/open.c":32:15 76 {*movhi_internal}
     (nil))
(insn 66 65 67 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "fs/open.c":32:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 67 66 68 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "fs/open.c":32:8 806 {*jcc}
     (nil)
 -> 72)
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 95 9 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (const_int 0 [0])) "fs/open.c":33:16 75 {*movsi_internal}
     (nil))
(jump_insn 95 69 96 9 (set (pc)
        (label_ref 82)) "fs/open.c":33:16 807 {jump}
     (nil)
 -> 82)
(barrier 96 95 72)
(code_label 72 96 73 10 8 (nil) [1 uses])
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 filp+0 S4 A32])) "fs/open.c":34:5 75 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 8 [0x8])) [9 filp_21->f_inode+0 S4 A32])) "fs/open.c":34:5 75 {*movsi_internal}
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":34:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 77 76 79 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 0 ax [orig:96 _14 ] [96])) "fs/open.c":34:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 79 77 80 10 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":34:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 80 79 81 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":34:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 81 80 82 10 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (const_int 0 [0])) "fs/open.c":35:12 75 {*movsi_internal}
     (nil))
(code_label 82 81 83 11 5 (nil) [3 uses])
(note 83 82 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 83 98 11 (use (reg/i:SI 0 ax)) "fs/open.c":36:1 -1
     (nil))
(note 98 89 0 NOTE_INSN_DELETED)

;; Function sys_open (sys_open, funcdef_no=9, decl_uid=1426, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =rm  (1) 0 {*one_cmplsi2_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            2 Small class reload: reject+=3
          alt=0,overall=15,losers=2,rld_nregs=2
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
      Creating newreg=188 from oldreg=149, assigning class GENERAL_REGS to r188
      Creating newreg=189, assigning class CREG to r189
   53: {r188:SI=r188:SI<<r189:QI;clobber flags:CC;}
      REG_DEAD r149:SI
      REG_DEAD r148:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  289: r188:SI=r149:SI
  291: r189:QI=r148:SI#0
    Inserting insn reload after:
  290: r92:SI=r188:SI

            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =rm  (1) 0 {*one_cmplsi2_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
	 Choosing alt 0 in insn 58:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 68:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 100:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 106:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 107:  (0) =rm  (1) %0  (2) rn {*addhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 108:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 118:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 127:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 130:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 137:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 139:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 144:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 164:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) qm {*zero_extendqisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 177:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 178
	 Choosing alt 0 in insn 178:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 186:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =rm  (1) 0  (2) cI {*lshrhi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 200:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 204:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 208:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 211:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 218:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 220:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 225:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 227:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 231:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 235:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 237:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 241:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 243:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 246:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 248:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 28
EBB 29
EBB 6 7
EBB 8
EBB 9 10
EBB 11 30
EBB 31
EBB 12 13
EBB 14 15
EBB 16 17 18 19 20
EBB 21 22 23
EBB 24 25
EBB 26
EBB 27

********** Pseudo live ranges #1: **********

  BB 27
   Insn 259: point = 0, n_alt = -1
   Insn 258: point = 0, n_alt = -2
   Insn 254: point = 1, n_alt = -2
  BB 23
   Insn 273: point = 4, n_alt = -1
   Insn 212: point = 4, n_alt = 0
   Insn 211: point = 5, n_alt = 3
   Insn 210: point = 6, n_alt = 0
   Insn 209: point = 7, n_alt = 1
   Insn 208: point = 8, n_alt = 0
   Insn 207: point = 10, n_alt = 0
   Insn 206: point = 11, n_alt = 0
   Insn 205: point = 13, n_alt = 0
   Insn 204: point = 15, n_alt = 0
   Insn 203: point = 15, n_alt = 0
   Insn 202: point = 15, n_alt = -2
   Insn 201: point = 15, n_alt = 0
   Insn 200: point = 16, n_alt = 0
   Insn 199: point = 16, n_alt = 0
  BB 13
   Insn 267: point = 18, n_alt = -1
   Insn 92: point = 18, n_alt = 0
  BB 7
   Insn 263: point = 19, n_alt = -1
   Insn 43: point = 19, n_alt = 0
  BB 15
   Insn 269: point = 20, n_alt = -1
   Insn 131: point = 20, n_alt = 0
   Insn 130: point = 21, n_alt = 3
   Insn 129: point = 22, n_alt = 0
   Insn 128: point = 23, n_alt = 1
   Insn 127: point = 24, n_alt = 0
   Insn 126: point = 26, n_alt = 0
   Insn 125: point = 27, n_alt = 0
   Insn 124: point = 29, n_alt = 0
  BB 26
   Insn 249: point = 32, n_alt = 0
   Insn 248: point = 33, n_alt = 1
   Insn 247: point = 34, n_alt = 0
   Insn 246: point = 35, n_alt = 1
   Insn 245: point = 36, n_alt = 0
   Insn 244: point = 37, n_alt = 0
   Insn 243: point = 38, n_alt = 3
   Insn 242: point = 39, n_alt = 0
   Insn 241: point = 40, n_alt = 3
   Insn 240: point = 41, n_alt = 0
   Insn 239: point = 42, n_alt = 0
   Insn 238: point = 44, n_alt = 0
   Insn 237: point = 45, n_alt = 3
   Insn 236: point = 46, n_alt = 0
   Insn 235: point = 47, n_alt = 2
   Insn 234: point = 49, n_alt = 0
  BB 25
   Insn 231: point = 50, n_alt = 0
   Insn 230: point = 50, n_alt = 0
   Insn 229: point = 50, n_alt = -2
   Insn 228: point = 51, n_alt = 0
   Insn 227: point = 52, n_alt = 0
   Insn 226: point = 52, n_alt = 0
   Insn 225: point = 54, n_alt = 2
   Insn 224: point = 56, n_alt = 0
  BB 24
   Insn 222: point = 58, n_alt = -1
   Insn 221: point = 58, n_alt = 0
   Insn 220: point = 59, n_alt = 0
   Insn 219: point = 61, n_alt = 0
   Insn 218: point = 63, n_alt = 2
   Insn 217: point = 65, n_alt = 0
  BB 20
   Insn 271: point = 67, n_alt = -1
   Insn 180: point = 67, n_alt = 1
   Insn 179: point = 68, n_alt = 0
   Insn 178: point = 70, n_alt = 0
   Insn 177: point = 72, n_alt = 1
   Insn 176: point = 74, n_alt = 0
   Insn 175: point = 75, n_alt = 0
   Insn 174: point = 77, n_alt = 0
   Insn 173: point = 79, n_alt = 0
   Insn 172: point = 81, n_alt = 0
   Insn 171: point = 82, n_alt = 0
   Insn 170: point = 84, n_alt = 0
   Insn 169: point = 85, n_alt = 1
   Insn 168: point = 86, n_alt = 0
   Insn 167: point = 88, n_alt = 0
   Insn 166: point = 90, n_alt = 0
   Insn 165: point = 91, n_alt = 0
   Insn 164: point = 93, n_alt = 2
   Insn 163: point = 95, n_alt = 0
  BB 22
   Insn 197: point = 97, n_alt = -1
   Insn 196: point = 97, n_alt = 0
   Insn 193: point = 98, n_alt = 0
   Insn 192: point = 100, n_alt = 0
   Insn 191: point = 102, n_alt = 0
  BB 21
   Insn 189: point = 104, n_alt = -1
   Insn 188: point = 104, n_alt = 0
   Insn 187: point = 105, n_alt = 0
   Insn 186: point = 107, n_alt = 2
   Insn 185: point = 109, n_alt = 0
  BB 19
   Insn 161: point = 111, n_alt = -1
   Insn 160: point = 111, n_alt = 0
   Insn 157: point = 112, n_alt = 0
   Insn 156: point = 114, n_alt = 0
   Insn 155: point = 116, n_alt = 0
  BB 18
   Insn 153: point = 118, n_alt = -1
   Insn 152: point = 118, n_alt = 0
   Insn 151: point = 119, n_alt = 0
   Insn 150: point = 121, n_alt = 0
   Insn 149: point = 123, n_alt = 0
  BB 17
   Insn 147: point = 125, n_alt = -1
   Insn 146: point = 125, n_alt = 0
   Insn 145: point = 126, n_alt = 0
   Insn 144: point = 128, n_alt = 2
   Insn 143: point = 130, n_alt = 0
  BB 16
   Insn 141: point = 132, n_alt = -1
   Insn 140: point = 132, n_alt = 0
   Insn 139: point = 133, n_alt = 0
   Insn 138: point = 135, n_alt = 0
   Insn 137: point = 137, n_alt = 2
   Insn 136: point = 139, n_alt = 0
  BB 14
   Insn 122: point = 141, n_alt = -1
   Insn 121: point = 141, n_alt = 1
   Insn 118: point = 141, n_alt = 1
   Insn 117: point = 142, n_alt = -2
   Insn 116: point = 143, n_alt = 0
   Insn 115: point = 143, n_alt = 0
   Insn 114: point = 143, n_alt = -2
   Insn 113: point = 143, n_alt = 0
   Insn 112: point = 143, n_alt = 0
   Insn 111: point = 143, n_alt = 0
   Insn 110: point = 143, n_alt = 0
   Insn 109: point = 144, n_alt = -2
   Insn 108: point = 145, n_alt = 3
   Insn 107: point = 146, n_alt = 0
   Insn 106: point = 148, n_alt = 2
   Insn 105: point = 149, n_alt = 0
   Insn 104: point = 151, n_alt = 0
   Insn 103: point = 153, n_alt = 0
   Insn 102: point = 154, n_alt = 1
   Insn 101: point = 155, n_alt = 0
   Insn 100: point = 156, n_alt = 3
   Insn 99: point = 158, n_alt = 0
   Insn 98: point = 159, n_alt = 0
   Insn 97: point = 161, n_alt = 0
  BB 12
   Insn 90: point = 163, n_alt = -1
   Insn 89: point = 163, n_alt = 0
  BB 30
   Insn 282: point = 164, n_alt = -1
  BB 31
   Insn 286: point = 165, n_alt = -1
  BB 9
   Insn 70: point = 166, n_alt = -1
   Insn 69: point = 166, n_alt = 0
   Insn 68: point = 167, n_alt = 2
   Insn 67: point = 169, n_alt = 0
  BB 11
   Insn 84: point = 171, n_alt = -1
   Insn 83: point = 171, n_alt = 0
  BB 8
   Insn 265: point = 172, n_alt = -1
   Insn 63: point = 172, n_alt = 1
   Insn 62: point = 172, n_alt = 1
   Insn 61: point = 173, n_alt = -2
   Insn 60: point = 175, n_alt = 0
   Insn 59: point = 176, n_alt = 1
   Insn 58: point = 177, n_alt = 0
   Insn 57: point = 179, n_alt = 0
   Insn 56: point = 181, n_alt = 0
   Insn 55: point = 182, n_alt = -2
   Insn 54: point = 184, n_alt = 0
   Insn 290: point = 186, n_alt = -2
	Hard reg 0 is preferable by r188 with profit 1000
   Insn 53: point = 188, n_alt = 0
   Insn 291: point = 190, n_alt = 0
   Insn 289: point = 192, n_alt = -2
	Hard reg 0 is preferable by r188 with profit 1000
	Hard reg 4 is preferable by r188 with profit 1000
   Insn 52: point = 194, n_alt = 0
   Insn 51: point = 195, n_alt = 0
   Insn 50: point = 196, n_alt = 0
   Insn 49: point = 198, n_alt = 0
   Insn 48: point = 200, n_alt = 0
  BB 6
   Insn 41: point = 202, n_alt = -1
   Insn 40: point = 202, n_alt = 0
  BB 28
   Insn 276: point = 203, n_alt = -1
  BB 29
   Insn 280: point = 204, n_alt = -1
  BB 3
   Insn 22: point = 205, n_alt = -1
   Insn 21: point = 205, n_alt = 0
   Insn 20: point = 206, n_alt = 0
   Insn 19: point = 208, n_alt = 0
   Insn 18: point = 210, n_alt = 0
   Insn 17: point = 211, n_alt = 0
   Insn 16: point = 213, n_alt = 0
  BB 5
   Insn 35: point = 215, n_alt = -1
   Insn 34: point = 215, n_alt = 0
  BB 2
   Insn 261: point = 216, n_alt = -1
   Insn 12: point = 216, n_alt = 1
   Insn 11: point = 216, n_alt = 0
   Insn 10: point = 217, n_alt = 0
   Insn 9: point = 219, n_alt = 0
   Insn 8: point = 221, n_alt = 0
   Insn 7: point = 223, n_alt = 2
   Insn 6: point = 225, n_alt = 0
   Insn 5: point = 227, n_alt = 0
   Insn 287: point = 228, n_alt = 0
  BB 4
   Insn 28: point = 229, n_alt = 0
  BB 10
   Insn 77: point = 230, n_alt = 0
   Insn 76: point = 230, n_alt = 0
 r82: [50..230] [30..31] [14..17]
 r83: [224..225]
 r84: [222..223]
 r85: [220..221]
 r86: [218..219]
 r87: [216..217]
 r88: [207..211]
 r89: [205..206]
 r90: [197..198]
 r91: [178..196]
 r92: [185..186]
 r93: [183..184]
 r94: [178..182]
 r95: [176..179]
 r96: [176..177]
 r97: [166..167]
 r98: [150..159]
 r99: [145..149]
 r100: [147..148]
 r101: [145..146]
 r102: [23..27]
 r103: [138..139]
 r104: [136..137]
 r105: [134..135]
 r106: [132..133]
 r107: [129..130]
 r108: [127..128]
 r109: [125..126]
 r110: [120..121]
 r111: [118..119]
 r112: [113..114]
 r113: [111..112]
 r114: [94..95]
 r115: [92..93]
 r116: [87..91]
 r117: [85..88]
 r118: [85..86]
 r119: [76..82]
 r120: [78..79]
 r121: [73..77]
 r122: [67..75]
 r123: [108..109]
 r124: [106..107]
 r125: [104..105]
 r126: [99..100]
 r127: [97..98]
 r128: [15..16]
 r129: [7..11]
 r130: [64..65]
 r131: [62..63]
 r132: [60..61]
 r133: [58..59]
 r134: [55..56]
 r135: [53..54]
 r136: [51..52]
 r137: [48..49]
 r138: [45..47]
 r139: [40..42]
 r140: [35..37]
 r141: [32..32] [18..20] [2..4]
 r142: [0..1]
 r143: [226..227]
 r144: [212..213]
 r145: [207..208]
 r146: [209..210]
 r147: [199..200]
 r148: [191..195]
 r149: [193..194]
 r150: [180..181]
 r151: [172..173]
 r152: [174..175]
 r153: [168..169]
 r154: [160..161]
 r155: [154..156]
 r156: [157..158]
 r157: [154..155]
 r158: [150..151]
 r159: [152..153]
 r160: [143..144]
 r161: [141..142]
 r162: [28..29]
 r163: [23..24]
 r164: [25..26]
 r165: [21..22]
 r166: [122..123]
 r167: [115..116]
 r168: [89..90]
 r169: [83..84]
 r170: [80..81]
 r171: [71..74]
 r172: [71..72]
 r173: [69..70]
 r174: [67..68]
 r175: [101..102]
 r176: [12..13]
 r177: [7..8]
 r178: [9..10]
 r179: [5..6]
 r180: [45..46]
 r181: [43..44]
 r182: [40..41]
 r183: [38..39]
 r184: [35..36]
 r185: [33..34]
 r188: [187..192]
 r189: [189..190]
Compressing live ranges: from 231 to 185 - 80%
Ranges after the compression:
 r82: [41..184] [24..25] [12..13]
 r83: [181..182]
 r84: [179..180]
 r85: [177..178]
 r86: [175..176]
 r87: [173..174]
 r88: [167..170]
 r89: [165..166]
 r90: [161..162]
 r91: [147..160]
 r92: [153..154]
 r93: [151..152]
 r94: [147..150]
 r95: [145..148]
 r96: [145..146]
 r97: [137..138]
 r98: [127..134]
 r99: [123..126]
 r100: [125..126]
 r101: [123..124]
 r102: [18..21]
 r103: [117..118]
 r104: [115..116]
 r105: [113..114]
 r106: [111..112]
 r107: [109..110]
 r108: [107..108]
 r109: [105..106]
 r110: [101..102]
 r111: [99..100]
 r112: [95..96]
 r113: [93..94]
 r114: [79..80]
 r115: [77..78]
 r116: [73..76]
 r117: [71..74]
 r118: [71..72]
 r119: [63..68]
 r120: [65..66]
 r121: [61..64]
 r122: [55..62]
 r123: [91..92]
 r124: [89..90]
 r125: [87..88]
 r126: [83..84]
 r127: [81..82]
 r128: [12..13]
 r129: [6..9]
 r130: [53..54]
 r131: [51..52]
 r132: [49..50]
 r133: [47..48]
 r134: [45..46]
 r135: [43..44]
 r136: [41..42]
 r137: [39..40]
 r138: [37..38]
 r139: [33..34]
 r140: [29..30]
 r141: [26..26] [14..15] [2..3]
 r142: [0..1]
 r143: [183..184]
 r144: [171..172]
 r145: [167..168]
 r146: [169..170]
 r147: [163..164]
 r148: [157..160]
 r149: [159..160]
 r150: [149..150]
 r151: [141..142]
 r152: [143..144]
 r153: [139..140]
 r154: [135..136]
 r155: [131..132]
 r156: [133..134]
 r157: [131..132]
 r158: [127..128]
 r159: [129..130]
 r160: [121..122]
 r161: [119..120]
 r162: [22..23]
 r163: [18..19]
 r164: [20..21]
 r165: [16..17]
 r166: [103..104]
 r167: [97..98]
 r168: [75..76]
 r169: [69..70]
 r170: [67..68]
 r171: [59..62]
 r172: [59..60]
 r173: [57..58]
 r174: [55..56]
 r175: [85..86]
 r176: [10..11]
 r177: [6..7]
 r178: [8..9]
 r179: [4..5]
 r180: [37..38]
 r181: [35..36]
 r182: [33..34]
 r183: [31..32]
 r184: [29..30]
 r185: [27..28]
 r188: [155..158]
 r189: [155..156]

********** Assignment #1: **********

	 Assigning to 189 (cl=CREG, orig=189, freq=2000, tfirst=189, tfreq=2000)...
	   Assign 2 to reload r189 (freq=2000)
	 Assigning to 188 (cl=GENERAL_REGS, orig=149, freq=3000, tfirst=188, tfreq=3000)...
	   Assign 4 to reload r188 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 287
changing reg in insn 229
changing reg in insn 205
changing reg in insn 202
changing reg in insn 191
changing reg in insn 176
changing reg in insn 172
changing reg in insn 170
changing reg in insn 166
changing reg in insn 155
changing reg in insn 149
changing reg in insn 124
changing reg in insn 114
changing reg in insn 97
changing reg in insn 60
changing reg in insn 56
changing reg in insn 48
changing reg in insn 16
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 58
changing reg in insn 54
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 58
changing reg in insn 57
changing reg in insn 59
changing reg in insn 58
changing reg in insn 59
changing reg in insn 68
changing reg in insn 69
changing reg in insn 98
changing reg in insn 105
changing reg in insn 102
changing reg in insn 105
changing reg in insn 108
changing reg in insn 106
changing reg in insn 106
changing reg in insn 107
changing reg in insn 107
changing reg in insn 108
changing reg in insn 125
changing reg in insn 128
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 139
changing reg in insn 140
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 146
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 152
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 160
changing reg in insn 163
changing reg in insn 164
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 167
changing reg in insn 169
changing reg in insn 168
changing reg in insn 169
changing reg in insn 171
changing reg in insn 175
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 177
changing reg in insn 175
changing reg in insn 180
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 187
changing reg in insn 187
changing reg in insn 188
changing reg in insn 192
changing reg in insn 193
changing reg in insn 193
changing reg in insn 196
changing reg in insn 199
changing reg in insn 201
changing reg in insn 206
changing reg in insn 209
changing reg in insn 217
changing reg in insn 218
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 220
changing reg in insn 220
changing reg in insn 221
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 226
changing reg in insn 226
changing reg in insn 228
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 237
changing reg in insn 239
changing reg in insn 241
changing reg in insn 244
changing reg in insn 246
changing reg in insn 249
changing reg in insn 212
changing reg in insn 131
changing reg in insn 92
changing reg in insn 43
changing reg in insn 254
changing reg in insn 254
changing reg in insn 258
changing reg in insn 5
changing reg in insn 6
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 18
changing reg in insn 19
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 56
changing reg in insn 57
changing reg in insn 61
changing reg in insn 62
changing reg in insn 60
changing reg in insn 61
changing reg in insn 67
changing reg in insn 68
changing reg in insn 97
changing reg in insn 98
changing reg in insn 100
changing reg in insn 102
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 104
changing reg in insn 105
changing reg in insn 103
changing reg in insn 104
changing reg in insn 109
changing reg in insn 110
changing reg in insn 117
changing reg in insn 118
changing reg in insn 124
changing reg in insn 125
changing reg in insn 127
changing reg in insn 128
changing reg in insn 126
changing reg in insn 127
changing reg in insn 129
changing reg in insn 130
changing reg in insn 149
changing reg in insn 150
changing reg in insn 155
changing reg in insn 156
changing reg in insn 166
changing reg in insn 167
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 180
changing reg in insn 191
changing reg in insn 192
changing reg in insn 205
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 207
changing reg in insn 208
changing reg in insn 210
changing reg in insn 211
changing reg in insn 236
changing reg in insn 237
changing reg in insn 238
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
deleting insn with uid = 289.
deleting insn with uid = 61.
deleting insn with uid = 114.
deleting insn with uid = 117.
deleting insn with uid = 202.
deleting insn with uid = 229.
deleting insn with uid = 254.
deleting insn with uid = 258.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 203.
verify found no changes in insn with uid = 230.


sys_open

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={79d,75u} r1={29d,25u} r2={8d,4u} r3={1d,18u} r4={2d,2u} r7={12d,98u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={43d,14u} r18={3d} r19={5e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 610{369d,236u,5e} in 183{180 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 287 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 287 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 287 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [143])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":44:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 current.4_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [143]) [1 current+0 S4 A32])) "fs/open.c":44:28 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:83 current.4_1 ] [83])
                (const_int 620 [0x26c])) [8 current.4_1->umask+0 S2 A32])) "fs/open.c":44:28 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/open.c":44:28 144 {*zero_extendhisi2}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (not:SI (reg:SI 0 ax [orig:85 _3 ] [85]))) "fs/open.c":44:20 632 {*one_cmplsi2_1}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (and:SI (reg:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":44:18 490 {*andsi_1}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 40 [0x28])) [6 mode+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 40 [0x28])) [6 mode+0 S4 A32])
                    (reg:SI 0 ax [orig:87 _5 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":44:10 490 {*andsi_1}
     (nil))
(insn 12 11 261 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":45:13 75 {*movsi_internal}
     (nil))
(jump_insn 261 12 262 2 (set (pc)
        (label_ref 29)) "fs/open.c":45:5 807 {jump}
     (nil)
 -> 29)
(barrier 262 261 31)
(code_label 31 262 15 3 13 (nil) [1 uses])
(note 15 31 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 0 ax [144])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":46:21 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 0 ax [orig:88 current.5_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [144]) [1 current+0 S4 A32])) "fs/open.c":46:21 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 1 dx [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])) "fs/open.c":46:27 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (parallel [
            (set (reg:SI 1 dx [145])
                (plus:SI (reg:SI 1 dx [146])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":46:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 20 19 21 3 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:88 current.5_6 ] [88])) [10 current.5_6->filp[fd_62]+0 S4 A32])) "fs/open.c":46:27 75 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:89 _7 ] [89])
            (const_int 0 [0]))) "fs/open.c":46:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 279)
            (pc))) "fs/open.c":46:12 806 {*jcc}
     (nil)
 -> 279)
(note 27 22 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [6 fd+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [6 fd+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":45:34 209 {*addsi_1}
     (nil))
(code_label 29 28 30 5 10 (nil) [1 uses])
(note 30 29 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 30 35 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/open.c":45:21 11 {*cmpsi_1}
     (nil))
(jump_insn 35 34 275 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/open.c":45:21 806 {*jcc}
     (nil)
 -> 31)
(note 275 35 276 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 276 275 277 28 (set (pc)
        (label_ref 36)) 807 {jump}
     (nil)
 -> 36)
(barrier 277 276 279)
(code_label 279 277 278 29 26 (nil) [1 uses])
(note 278 279 280 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 280 278 36 29 (const_int 0 [0]) "fs/open.c":47:13 843 {nop}
     (nil))
(code_label 36 280 37 6 12 (nil) [1 uses])
(note 37 36 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 37 41 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/open.c":48:8 11 {*cmpsi_1}
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "fs/open.c":48:8 806 {*jcc}
     (nil)
 -> 46)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 263 7 (set (reg:SI 0 ax [orig:141 _63 ] [141])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":49:16 75 {*movsi_internal}
     (nil))
(jump_insn 263 43 264 7 (set (pc)
        (label_ref 252)) "fs/open.c":49:16 807 {jump}
     (nil)
 -> 252)
(barrier 264 263 46)
(code_label 46 264 47 8 14 (nil) [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:SI 0 ax [147])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (set (reg/f:SI 0 ax [orig:90 current.6_8 ] [90])
        (mem/f/c:SI (reg/f:SI 0 ax [147]) [1 current+0 S4 A32])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:90 current.6_8 ] [90])
                (const_int 636 [0x27c])) [3 current.6_8->close_on_exec+0 S4 A32])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:SI 0 ax [148])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])) "fs/open.c":50:35 75 {*movsi_internal}
     (nil))
(insn 52 51 291 8 (set (reg:SI 4 si [149])
        (const_int 1 [0x1])) "fs/open.c":50:35 75 {*movsi_internal}
     (nil))
(insn 291 52 53 8 (set (reg:QI 2 cx [189])
        (reg:QI 0 ax [148])) "fs/open.c":50:35 77 {*movqi_internal}
     (nil))
(insn 53 291 290 8 (parallel [
            (set (reg:SI 4 si [149])
                (ashift:SI (reg:SI 4 si [149])
                    (reg:QI 2 cx [189])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":50:35 655 {*ashlsi3_1}
     (nil))
(insn 290 53 54 8 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (reg:SI 4 si [149])) "fs/open.c":50:35 75 {*movsi_internal}
     (nil))
(insn 54 290 55 8 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (not:SI (reg:SI 0 ax [orig:92 _10 ] [92]))) "fs/open.c":50:31 632 {*one_cmplsi2_1}
     (nil))
(insn 55 54 56 8 (set (reg:SI 2 cx [orig:94 _12 ] [94])
        (reg:SI 0 ax [orig:93 _11 ] [93])) "fs/open.c":50:31 75 {*movsi_internal}
     (nil))
(insn 56 55 57 8 (set (reg/f:SI 0 ax [150])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg/f:SI 0 ax [orig:95 current.7_13 ] [95])
        (mem/f/c:SI (reg/f:SI 0 ax [150]) [1 current+0 S4 A32])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 58 57 59 8 (parallel [
            (set (reg:SI 1 dx [orig:96 _14 ] [96])
                (and:SI (reg:SI 1 dx [orig:91 _9 ] [91])
                    (reg:SI 2 cx [orig:94 _12 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":50:28 490 {*andsi_1}
     (nil))
(insn 59 58 60 8 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:95 current.7_13 ] [95])
                (const_int 636 [0x27c])) [3 current.7_13->close_on_exec+0 S4 A32])
        (reg:SI 1 dx [orig:96 _14 ] [96])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 60 59 62 8 (set (reg:SI 0 ax [152])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x714ab149cbd0 file_table>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":51:7 75 {*movsi_internal}
     (nil))
(insn 62 60 63 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])
        (reg/f:SI 0 ax [151])) "fs/open.c":51:7 75 {*movsi_internal}
     (nil))
(insn 63 62 265 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 i+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":52:12 75 {*movsi_internal}
     (nil))
(jump_insn 265 63 266 8 (set (pc)
        (label_ref 78)) "fs/open.c":52:5 807 {jump}
     (nil)
 -> 78)
(barrier 266 265 80)
(code_label 80 266 66 9 19 (nil) [1 uses])
(note 66 80 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:SI 0 ax [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":53:15 75 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (set (reg:HI 0 ax [orig:97 _15 ] [97])
        (mem:HI (plus:SI (reg/f:SI 0 ax [153])
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])) "fs/open.c":53:15 76 {*movhi_internal}
     (nil))
(insn 69 68 70 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:97 _15 ] [97])
            (const_int 0 [0]))) "fs/open.c":53:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 70 69 75 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 285)
            (pc))) "fs/open.c":53:12 806 {*jcc}
     (nil)
 -> 285)
(note 75 70 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [6 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":52:31 209 {*addsi_1}
     (nil))
(insn 77 76 78 10 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [10 f+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [10 f+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":52:36 209 {*addsi_1}
     (nil))
(code_label 78 77 79 11 16 (nil) [1 uses])
(note 79 78 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 79 84 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/open.c":52:19 11 {*cmpsi_1}
     (nil))
(jump_insn 84 83 281 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/open.c":52:19 806 {*jcc}
     (nil)
 -> 80)
(note 281 84 282 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 282 281 283 30 (set (pc)
        (label_ref 85)) 807 {jump}
     (nil)
 -> 85)
(barrier 283 282 285)
(code_label 285 283 284 31 27 (nil) [1 uses])
(note 284 285 286 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 286 284 85 31 (const_int 0 [0]) "fs/open.c":54:13 843 {nop}
     (nil))
(code_label 85 286 86 12 18 (nil) [1 uses])
(note 86 85 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 86 90 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/open.c":55:8 11 {*cmpsi_1}
     (nil))
(jump_insn 90 89 91 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "fs/open.c":55:8 806 {*jcc}
     (nil)
 -> 95)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 267 13 (set (reg:SI 0 ax [orig:141 _63 ] [141])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":56:16 75 {*movsi_internal}
     (nil))
(jump_insn 267 92 268 13 (set (pc)
        (label_ref 252)) "fs/open.c":56:16 807 {jump}
     (nil)
 -> 252)
(barrier 268 267 95)
(code_label 95 268 96 14 20 (nil) [1 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg/f:SI 0 ax [154])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":57:13 75 {*movsi_internal}
     (nil))
(insn 98 97 99 14 (set (reg/f:SI 0 ax [orig:98 current.8_16 ] [98])
        (mem/f/c:SI (reg/f:SI 0 ax [154]) [1 current+0 S4 A32])) "fs/open.c":57:13 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:SI 1 dx [156])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])) "fs/open.c":57:24 75 {*movsi_internal}
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg:SI 2 cx [155])
                (plus:SI (reg:SI 1 dx [156])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":57:24 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 101 100 102 14 (set (reg/f:SI 1 dx [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":57:24 75 {*movsi_internal}
     (nil))
(insn 102 101 103 14 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [155])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:98 current.8_16 ] [98])) [10 current.8_16->filp[fd_62]+0 S4 A32])
        (reg/f:SI 1 dx [157])) "fs/open.c":57:24 75 {*movsi_internal}
     (nil))
(insn 103 102 104 14 (set (reg:SI 1 dx [159])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])) "fs/open.c":57:19 75 {*movsi_internal}
     (nil))
(insn 104 103 105 14 (parallel [
            (set (reg:SI 1 dx [158])
                (plus:SI (reg:SI 1 dx [159])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":57:19 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 105 104 106 14 (set (reg/f:SI 0 ax [orig:99 _17 ] [99])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [158])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:98 current.8_16 ] [98])) [10 current.8_16->filp[fd_62]+0 S4 A32])) "fs/open.c":57:19 75 {*movsi_internal}
     (nil))
(insn 106 105 107 14 (set (reg:HI 1 dx [orig:100 _18 ] [100])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:99 _17 ] [99])
                (const_int 4 [0x4])) [8 _17->f_count+0 S2 A32])) "fs/open.c":57:28 76 {*movhi_internal}
     (nil))
(insn 107 106 108 14 (parallel [
            (set (reg:HI 1 dx [orig:101 _20 ] [101])
                (plus:HI (reg:HI 1 dx [orig:100 _18 ] [100])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":57:37 212 {*addhi_1}
     (nil))
(insn 108 107 109 14 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:99 _17 ] [99])
                (const_int 4 [0x4])) [8 _17->f_count+0 S2 A32])
        (reg:HI 1 dx [orig:101 _20 ] [101])) "fs/open.c":57:37 76 {*movhi_internal}
     (nil))
(insn 109 108 110 14 (set (reg:SI 0 ax [160])
        (reg/f:SI 7 sp)) "fs/open.c":58:14 75 {*movsi_internal}
     (nil))
(insn 110 109 111 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 0 ax [160])) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 111 110 112 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 mode+0 S4 A32])) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 112 111 113 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 flag+0 S4 A32])) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 113 112 115 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [22 filename+0 S4 A32])) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 115 113 116 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("open_namei") [flags 0x41]  <function_decl 0x714aafb10400 open_namei>) [0 open_namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":58:14 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 116 115 118 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":58:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 118 116 121 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 i+0 S4 A32])
        (reg:SI 0 ax [161])) "fs/open.c":58:14 75 {*movsi_internal}
     (nil))
(insn 121 118 122 14 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 i+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":58:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) "fs/open.c":58:8 806 {*jcc}
     (nil)
 -> 134)
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 15 (set (reg/f:SI 0 ax [162])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":59:16 75 {*movsi_internal}
     (nil))
(insn 125 124 126 15 (set (reg/f:SI 0 ax [orig:102 current.9_21 ] [102])
        (mem/f/c:SI (reg/f:SI 0 ax [162]) [1 current+0 S4 A32])) "fs/open.c":59:16 75 {*movsi_internal}
     (nil))
(insn 126 125 127 15 (set (reg:SI 1 dx [164])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])) "fs/open.c":59:27 75 {*movsi_internal}
     (nil))
(insn 127 126 128 15 (parallel [
            (set (reg:SI 1 dx [163])
                (plus:SI (reg:SI 1 dx [164])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":59:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 128 127 129 15 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [163])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:102 current.9_21 ] [102])) [10 current.9_21->filp[fd_62]+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":59:27 75 {*movsi_internal}
     (nil))
(insn 129 128 130 15 (set (reg/f:SI 0 ax [165])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":60:20 75 {*movsi_internal}
     (nil))
(insn 130 129 131 15 (set (mem:HI (plus:SI (reg/f:SI 0 ax [165])
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/open.c":60:20 76 {*movhi_internal}
     (nil))
(insn 131 130 269 15 (set (reg:SI 0 ax [orig:141 _63 ] [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 i+0 S4 A32])) "fs/open.c":61:16 75 {*movsi_internal}
     (nil))
(jump_insn 269 131 270 15 (set (pc)
        (label_ref 252)) "fs/open.c":61:16 807 {jump}
     (nil)
 -> 252)
(barrier 270 269 134)
(code_label 134 270 135 16 21 (nil) [1 uses])
(note 135 134 136 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 16 (set (reg/f:SI 0 ax [orig:103 inode.10_22 ] [103])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":64:9 75 {*movsi_internal}
     (nil))
(insn 137 136 138 16 (set (reg:HI 0 ax [orig:104 _23 ] [104])
        (mem:HI (reg/f:SI 0 ax [orig:103 inode.10_22 ] [103]) [8 inode.10_22->i_mode+0 S2 A32])) "fs/open.c":64:9 76 {*movhi_internal}
     (nil))
(insn 138 137 139 16 (set (reg:SI 0 ax [orig:105 _24 ] [105])
        (zero_extend:SI (reg:HI 0 ax [orig:104 _23 ] [104]))) "fs/open.c":64:9 144 {*zero_extendhisi2}
     (nil))
(insn 139 138 140 16 (parallel [
            (set (reg:SI 0 ax [orig:106 _25 ] [106])
                (and:SI (reg:SI 0 ax [orig:105 _24 ] [105])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":64:9 490 {*andsi_1}
     (nil))
(insn 140 139 141 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:106 _25 ] [106])
            (const_int 8192 [0x2000]))) "fs/open.c":64:8 11 {*cmpsi_1}
     (nil))
(jump_insn 141 140 142 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":64:8 806 {*jcc}
     (nil)
 -> 215)
(note 142 141 143 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 17 (set (reg/f:SI 0 ax [orig:107 inode.11_26 ] [107])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":65:13 75 {*movsi_internal}
     (nil))
(insn 144 143 145 17 (set (reg:HI 0 ax [orig:108 _27 ] [108])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:107 inode.11_26 ] [107])
                (const_int 14 [0xe])) [8 inode.11_26->i_zone[0]+0 S2 A16])) "fs/open.c":65:13 76 {*movhi_internal}
     (nil))
(insn 145 144 146 17 (parallel [
            (set (reg:HI 0 ax [orig:109 _28 ] [109])
                (lshiftrt:HI (reg:HI 0 ax [orig:108 _27 ] [108])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":65:37 711 {*lshrhi3_1}
     (nil))
(insn 146 145 147 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:109 _28 ] [109])
            (const_int 4 [0x4]))) "fs/open.c":65:12 10 {*cmphi_1}
     (nil))
(jump_insn 147 146 148 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "fs/open.c":65:12 806 {*jcc}
     (nil)
 -> 183)
(note 148 147 149 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 18 (set (reg/f:SI 0 ax [166])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":66:24 75 {*movsi_internal}
     (nil))
(insn 150 149 151 18 (set (reg/f:SI 0 ax [orig:110 current.12_29 ] [110])
        (mem/f/c:SI (reg/f:SI 0 ax [166]) [1 current+0 S4 A32])) "fs/open.c":66:24 75 {*movsi_internal}
     (nil))
(insn 151 150 152 18 (set (reg:SI 0 ax [orig:111 _30 ] [111])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:110 current.12_29 ] [110])
                (const_int 572 [0x23c])) [3 current.12_29->leader+0 S4 A32])) "fs/open.c":66:24 75 {*movsi_internal}
     (nil))
(insn 152 151 153 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:111 _30 ] [111])
            (const_int 0 [0]))) "fs/open.c":66:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 153 152 154 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":66:16 806 {*jcc}
     (nil)
 -> 215)
(note 154 153 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 19 (set (reg/f:SI 0 ax [167])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":66:43 75 {*movsi_internal}
     (nil))
(insn 156 155 157 19 (set (reg/f:SI 0 ax [orig:112 current.13_31 ] [112])
        (mem/f/c:SI (reg/f:SI 0 ax [167]) [1 current+0 S4 A32])) "fs/open.c":66:43 75 {*movsi_internal}
     (nil))
(insn 157 156 160 19 (set (reg:SI 0 ax [orig:113 _32 ] [113])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:112 current.13_31 ] [112])
                (const_int 616 [0x268])) [6 current.13_31->tty+0 S4 A32])) "fs/open.c":66:43 75 {*movsi_internal}
     (nil))
(insn 160 157 161 19 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:113 _32 ] [113])
            (const_int 0 [0]))) "fs/open.c":66:33 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 161 160 162 19 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":66:33 806 {*jcc}
     (nil)
 -> 215)
(note 162 161 163 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 20 (set (reg/f:SI 0 ax [orig:114 inode.14_33 ] [114])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":67:32 75 {*movsi_internal}
     (nil))
(insn 164 163 165 20 (set (reg:HI 0 ax [orig:115 _34 ] [115])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:114 inode.14_33 ] [114])
                (const_int 14 [0xe])) [8 inode.14_33->i_zone[0]+0 S2 A16])) "fs/open.c":67:32 76 {*movhi_internal}
     (nil))
(insn 165 164 166 20 (set (reg:SI 1 dx [orig:116 _35 ] [116])
        (zero_extend:SI (reg:HI 0 ax [orig:115 _34 ] [115]))) "fs/open.c":67:32 144 {*zero_extendhisi2}
     (nil))
(insn 166 165 167 20 (set (reg/f:SI 0 ax [168])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":67:24 75 {*movsi_internal}
     (nil))
(insn 167 166 168 20 (set (reg/f:SI 0 ax [orig:117 current.15_36 ] [117])
        (mem/f/c:SI (reg/f:SI 0 ax [168]) [1 current+0 S4 A32])) "fs/open.c":67:24 75 {*movsi_internal}
     (nil))
(insn 168 167 169 20 (set (reg:SI 1 dx [orig:118 _37 ] [118])
        (zero_extend:SI (reg:QI 1 dx [orig:116 _35 ] [116]))) "fs/open.c":67:32 143 {*zero_extendqisi2}
     (nil))
(insn 169 168 170 20 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:117 current.15_36 ] [117])
                (const_int 616 [0x268])) [6 current.15_36->tty+0 S4 A32])
        (reg:SI 1 dx [orig:118 _37 ] [118])) "fs/open.c":67:30 75 {*movsi_internal}
     (nil))
(insn 170 169 171 20 (set (reg/f:SI 0 ax [169])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":68:55 75 {*movsi_internal}
     (nil))
(insn 171 170 172 20 (set (reg/f:SI 0 ax [orig:119 current.16_38 ] [119])
        (mem/f/c:SI (reg/f:SI 0 ax [169]) [1 current+0 S4 A32])) "fs/open.c":68:55 75 {*movsi_internal}
     (nil))
(insn 172 171 173 20 (set (reg/f:SI 1 dx [170])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":68:34 75 {*movsi_internal}
     (nil))
(insn 173 172 174 20 (set (reg/f:SI 1 dx [orig:120 current.17_39 ] [120])
        (mem/f/c:SI (reg/f:SI 1 dx [170]) [1 current+0 S4 A32])) "fs/open.c":68:34 75 {*movsi_internal}
     (nil))
(insn 174 173 175 20 (set (reg:SI 1 dx [orig:121 _40 ] [121])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:120 current.17_39 ] [120])
                (const_int 616 [0x268])) [6 current.17_39->tty+0 S4 A32])) "fs/open.c":68:34 75 {*movsi_internal}
     (nil))
(insn 175 174 176 20 (set (reg:SI 0 ax [orig:122 _41 ] [122])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:119 current.16_38 ] [119])
                (const_int 564 [0x234])) [3 current.16_38->pgrp+0 S4 A32])) "fs/open.c":68:55 75 {*movsi_internal}
     (nil))
(insn 176 175 177 20 (set (reg/f:SI 2 cx [171])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("tty_table") [flags 0x40]  <var_decl 0x714aafb2e480 tty_table>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":68:46 75 {*movsi_internal}
     (nil))
(insn 177 176 178 20 (parallel [
            (set (reg:SI 1 dx [172])
                (mult:SI (reg:SI 1 dx [orig:121 _40 ] [121])
                    (const_int 3168 [0xc60])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":68:46 408 {*mulsi3_1}
     (nil))
(insn 178 177 179 20 (parallel [
            (set (reg:SI 1 dx [173])
                (plus:SI (reg:SI 1 dx [172])
                    (reg/f:SI 2 cx [171])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":68:46 209 {*addsi_1}
     (nil))
(insn 179 178 180 20 (parallel [
            (set (reg/f:SI 1 dx [174])
                (plus:SI (reg:SI 1 dx [173])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":68:46 209 {*addsi_1}
     (nil))
(insn 180 179 271 20 (set (mem:SI (reg/f:SI 1 dx [174]) [6 tty_table[_40].pgrp+0 S4 A32])
        (reg:SI 0 ax [orig:122 _41 ] [122])) "fs/open.c":68:46 75 {*movsi_internal}
     (nil))
(jump_insn 271 180 272 20 (set (pc)
        (label_ref 215)) 807 {jump}
     (nil)
 -> 215)
(barrier 272 271 183)
(code_label 183 272 184 21 23 (nil) [1 uses])
(note 184 183 185 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 21 (set (reg/f:SI 0 ax [orig:123 inode.18_42 ] [123])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":70:20 75 {*movsi_internal}
     (nil))
(insn 186 185 187 21 (set (reg:HI 0 ax [orig:124 _43 ] [124])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:123 inode.18_42 ] [123])
                (const_int 14 [0xe])) [8 inode.18_42->i_zone[0]+0 S2 A16])) "fs/open.c":70:20 76 {*movhi_internal}
     (nil))
(insn 187 186 188 21 (parallel [
            (set (reg:HI 0 ax [orig:125 _44 ] [125])
                (lshiftrt:HI (reg:HI 0 ax [orig:124 _43 ] [124])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":70:44 711 {*lshrhi3_1}
     (nil))
(insn 188 187 189 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:125 _44 ] [125])
            (const_int 5 [0x5]))) "fs/open.c":70:19 10 {*cmphi_1}
     (nil))
(jump_insn 189 188 190 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":70:19 806 {*jcc}
     (nil)
 -> 215)
(note 190 189 191 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 22 (set (reg/f:SI 0 ax [175])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":71:24 75 {*movsi_internal}
     (nil))
(insn 192 191 193 22 (set (reg/f:SI 0 ax [orig:126 current.19_45 ] [126])
        (mem/f/c:SI (reg/f:SI 0 ax [175]) [1 current+0 S4 A32])) "fs/open.c":71:24 75 {*movsi_internal}
     (nil))
(insn 193 192 196 22 (set (reg:SI 0 ax [orig:127 _46 ] [127])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:126 current.19_45 ] [126])
                (const_int 616 [0x268])) [6 current.19_45->tty+0 S4 A32])) "fs/open.c":71:24 75 {*movsi_internal}
     (nil))
(insn 196 193 197 22 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:127 _46 ] [127])
            (const_int 0 [0]))) "fs/open.c":71:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 197 196 198 22 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":71:16 806 {*jcc}
     (nil)
 -> 215)
(note 198 197 199 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 23 (set (reg/f:SI 0 ax [orig:128 inode.20_47 ] [128])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":72:17 75 {*movsi_internal}
     (nil))
(insn 200 199 201 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":72:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 201 200 203 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 0 ax [orig:128 inode.20_47 ] [128])) "fs/open.c":72:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 203 201 204 23 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":72:17 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 204 203 205 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":72:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 205 204 206 23 (set (reg/f:SI 0 ax [176])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":73:24 75 {*movsi_internal}
     (nil))
(insn 206 205 207 23 (set (reg/f:SI 0 ax [orig:129 current.21_48 ] [129])
        (mem/f/c:SI (reg/f:SI 0 ax [176]) [1 current+0 S4 A32])) "fs/open.c":73:24 75 {*movsi_internal}
     (nil))
(insn 207 206 208 23 (set (reg:SI 1 dx [178])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])) "fs/open.c":73:35 75 {*movsi_internal}
     (nil))
(insn 208 207 209 23 (parallel [
            (set (reg:SI 1 dx [177])
                (plus:SI (reg:SI 1 dx [178])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":73:35 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
            (const_int 160 [0xa0]))
        (nil)))
(insn 209 208 210 23 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [177])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [orig:129 current.21_48 ] [129])) [10 current.21_48->filp[fd_62]+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":73:35 75 {*movsi_internal}
     (nil))
(insn 210 209 211 23 (set (reg/f:SI 0 ax [179])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":74:28 75 {*movsi_internal}
     (nil))
(insn 211 210 212 23 (set (mem:HI (plus:SI (reg/f:SI 0 ax [179])
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/open.c":74:28 76 {*movhi_internal}
     (nil))
(insn 212 211 273 23 (set (reg:SI 0 ax [orig:141 _63 ] [141])
        (const_int -1 [0xffffffffffffffff])) "fs/open.c":75:24 75 {*movsi_internal}
     (nil))
(jump_insn 273 212 274 23 (set (pc)
        (label_ref 252)) "fs/open.c":75:24 807 {jump}
     (nil)
 -> 252)
(barrier 274 273 215)
(code_label 215 274 216 24 22 (nil) [6 uses])
(note 216 215 217 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 24 (set (reg/f:SI 0 ax [orig:130 inode.22_49 ] [130])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":79:9 75 {*movsi_internal}
     (nil))
(insn 218 217 219 24 (set (reg:HI 0 ax [orig:131 _50 ] [131])
        (mem:HI (reg/f:SI 0 ax [orig:130 inode.22_49 ] [130]) [8 inode.22_49->i_mode+0 S2 A32])) "fs/open.c":79:9 76 {*movhi_internal}
     (nil))
(insn 219 218 220 24 (set (reg:SI 0 ax [orig:132 _51 ] [132])
        (zero_extend:SI (reg:HI 0 ax [orig:131 _50 ] [131]))) "fs/open.c":79:9 144 {*zero_extendhisi2}
     (nil))
(insn 220 219 221 24 (parallel [
            (set (reg:SI 0 ax [orig:133 _52 ] [133])
                (and:SI (reg:SI 0 ax [orig:132 _51 ] [132])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":79:9 490 {*andsi_1}
     (nil))
(insn 221 220 222 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:133 _52 ] [133])
            (const_int 24576 [0x6000]))) "fs/open.c":79:8 11 {*cmpsi_1}
     (nil))
(jump_insn 222 221 223 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "fs/open.c":79:8 806 {*jcc}
     (nil)
 -> 232)
(note 223 222 224 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 25 (set (reg/f:SI 0 ax [orig:134 inode.23_53 ] [134])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":80:32 75 {*movsi_internal}
     (nil))
(insn 225 224 226 25 (set (reg:HI 0 ax [orig:135 _54 ] [135])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:134 inode.23_53 ] [134])
                (const_int 14 [0xe])) [8 inode.23_53->i_zone[0]+0 S2 A16])) "fs/open.c":80:40 76 {*movhi_internal}
     (nil))
(insn 226 225 227 25 (set (reg:SI 0 ax [orig:136 _55 ] [136])
        (zero_extend:SI (reg:HI 0 ax [orig:135 _54 ] [135]))) "fs/open.c":80:9 144 {*zero_extendhisi2}
     (nil))
(insn 227 226 228 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":80:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 228 227 230 25 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:136 _55 ] [136])) "fs/open.c":80:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 230 228 231 25 (call (mem:QI (symbol_ref:SI ("check_disk_change") [flags 0x41]  <function_decl 0x714aafb0ea00 check_disk_change>) [0 check_disk_change S1 A8])
        (const_int 16 [0x10])) "fs/open.c":80:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 231 230 232 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":80:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 232 231 233 26 24 (nil) [1 uses])
(note 233 232 234 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 26 (set (reg/f:SI 0 ax [orig:137 inode.24_56 ] [137])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":81:23 75 {*movsi_internal}
     (nil))
(insn 235 234 236 26 (set (reg:HI 1 dx [orig:138 _57 ] [138])
        (mem:HI (reg/f:SI 0 ax [orig:137 inode.24_56 ] [137]) [8 inode.24_56->i_mode+0 S2 A32])) "fs/open.c":81:23 76 {*movhi_internal}
     (nil))
(insn 236 235 237 26 (set (reg/f:SI 0 ax [180])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":81:16 75 {*movsi_internal}
     (nil))
(insn 237 236 238 26 (set (mem:HI (reg/f:SI 0 ax [180]) [8 f_60->f_mode+0 S2 A32])
        (reg:HI 1 dx [orig:138 _57 ] [138])) "fs/open.c":81:16 76 {*movhi_internal}
     (nil))
(insn 238 237 239 26 (set (reg:SI 0 ax [181])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [6 flag+0 S4 A32])) "fs/open.c":82:16 75 {*movsi_internal}
     (nil))
(insn 239 238 240 26 (set (reg:HI 1 dx [orig:139 _58 ] [139])
        (reg:HI 0 ax [181])) "fs/open.c":82:16 76 {*movhi_internal}
     (nil))
(insn 240 239 241 26 (set (reg/f:SI 0 ax [182])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":82:16 75 {*movsi_internal}
     (nil))
(insn 241 240 242 26 (set (mem:HI (plus:SI (reg/f:SI 0 ax [182])
                (const_int 2 [0x2])) [8 f_60->f_flags+0 S2 A16])
        (reg:HI 1 dx [orig:139 _58 ] [139])) "fs/open.c":82:16 76 {*movhi_internal}
     (nil))
(insn 242 241 243 26 (set (reg/f:SI 0 ax [183])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":83:16 75 {*movsi_internal}
     (nil))
(insn 243 242 244 26 (set (mem:HI (plus:SI (reg/f:SI 0 ax [183])
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])
        (const_int 1 [0x1])) "fs/open.c":83:16 76 {*movhi_internal}
     (nil))
(insn 244 243 245 26 (set (reg/f:SI 1 dx [orig:140 inode.25_59 ] [140])
        (mem/f/c:SI (reg/f:SI 7 sp) [9 inode+0 S4 A32])) "fs/open.c":84:16 75 {*movsi_internal}
     (nil))
(insn 245 244 246 26 (set (reg/f:SI 0 ax [184])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":84:16 75 {*movsi_internal}
     (nil))
(insn 246 245 247 26 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [184])
                (const_int 8 [0x8])) [9 f_60->f_inode+0 S4 A32])
        (reg/f:SI 1 dx [orig:140 inode.25_59 ] [140])) "fs/open.c":84:16 75 {*movsi_internal}
     (nil))
(insn 247 246 248 26 (set (reg/f:SI 0 ax [185])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 f+0 S4 A32])) "fs/open.c":85:16 75 {*movsi_internal}
     (nil))
(insn 248 247 249 26 (set (mem:SI (plus:SI (reg/f:SI 0 ax [185])
                (const_int 12 [0xc])) [3 f_60->f_pos+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":85:16 75 {*movsi_internal}
     (nil))
(insn 249 248 252 26 (set (reg:SI 0 ax [orig:141 _63 ] [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 fd+0 S4 A32])) "fs/open.c":86:12 75 {*movsi_internal}
     (nil))
(code_label 252 249 253 27 25 (nil) [4 uses])
(note 253 252 259 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 259 253 288 27 (use (reg/i:SI 0 ax)) "fs/open.c":87:1 -1
     (nil))
(note 288 259 0 NOTE_INSN_DELETED)

;; Function sys_creat (sys_creat, funcdef_no=10, decl_uid=1442, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 14: point = 1, n_alt = -2
   Insn 11: point = 3, n_alt = -2
   Insn 10: point = 4, n_alt = 0
   Insn 9: point = 4, n_alt = 0
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 4, n_alt = 0
   Insn 5: point = 4, n_alt = 0
   Insn 21: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 21
changing reg in insn 11
changing reg in insn 14
changing reg in insn 14
changing reg in insn 18
deleting insn with uid = 11.
deleting insn with uid = 14.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns


sys_creat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r7={6d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 96{82d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 21 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":91:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 mode+0 S4 A32])) "fs/open.c":91:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 576 [0x240])) "fs/open.c":91:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [22 pathname+0 S4 A32])) "fs/open.c":91:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_open") [flags 0x3]  <function_decl 0x714aafb5a200 sys_open>) [0 sys_open S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":91:12 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 19 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":91:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 10 22 2 (use (reg/i:SI 0 ax)) "fs/open.c":92:1 -1
     (nil))
(note 22 19 0 NOTE_INSN_DELETED)

;; Function sys_chmod (sys_chmod, funcdef_no=11, decl_uid=1446, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 22:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) rn {*andhi_1}
      Creating newreg=107 from oldreg=88, assigning class GENERAL_REGS to r107
   46: {r107:HI=r107:HI&0xfff;clobber flags:CC;}
      REG_DEAD r88:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   78: r107:HI=r88:HI
    Inserting insn reload after:
   79: r89:HI=r107:HI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) rn {*andhi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 51
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) rn {*iorhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 56:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 70: point = 0, n_alt = -1
   Insn 69: point = 0, n_alt = -2
   Insn 65: point = 1, n_alt = -2
  BB 6
   Insn 74: point = 4, n_alt = -1
   Insn 39: point = 4, n_alt = 0
   Insn 38: point = 5, n_alt = 0
   Insn 37: point = 5, n_alt = 0
   Insn 36: point = 5, n_alt = -2
   Insn 35: point = 6, n_alt = 0
   Insn 34: point = 6, n_alt = 0
  BB 3
   Insn 72: point = 7, n_alt = -1
   Insn 15: point = 7, n_alt = 0
  BB 7
   Insn 62: point = 8, n_alt = 0
   Insn 61: point = 9, n_alt = 0
   Insn 60: point = 9, n_alt = 0
   Insn 59: point = 9, n_alt = -2
   Insn 58: point = 10, n_alt = 0
   Insn 57: point = 10, n_alt = 0
   Insn 56: point = 10, n_alt = 8
   Insn 55: point = 11, n_alt = 0
   Insn 54: point = 12, n_alt = 3
   Insn 53: point = 13, n_alt = 0
   Insn 52: point = 14, n_alt = -2
   Insn 51: point = 16, n_alt = 0
   Insn 50: point = 18, n_alt = 0
   Insn 49: point = 20, n_alt = -2
   Insn 48: point = 22, n_alt = 2
   Insn 47: point = 24, n_alt = 0
   Insn 79: point = 25, n_alt = -2
	Hard reg 1 is preferable by r107 with profit 1000
   Insn 46: point = 27, n_alt = 0
   Insn 78: point = 28, n_alt = -2
	Hard reg 1 is preferable by r107 with profit 1000
	Hard reg 0 is preferable by r107 with profit 1000
   Insn 45: point = 30, n_alt = 0
   Insn 44: point = 32, n_alt = 0
  BB 5
   Insn 32: point = 34, n_alt = -1
   Insn 31: point = 34, n_alt = 0
   Insn 30: point = 35, n_alt = 2
   Insn 29: point = 37, n_alt = 0
   Insn 28: point = 39, n_alt = 0
  BB 4
   Insn 26: point = 41, n_alt = -1
   Insn 25: point = 41, n_alt = 0
   Insn 24: point = 42, n_alt = 2
   Insn 23: point = 44, n_alt = 0
   Insn 22: point = 45, n_alt = 2
   Insn 21: point = 47, n_alt = 0
   Insn 20: point = 49, n_alt = 0
  BB 2
   Insn 13: point = 51, n_alt = -1
   Insn 12: point = 51, n_alt = 1
   Insn 11: point = 51, n_alt = 1
   Insn 10: point = 52, n_alt = -2
   Insn 9: point = 53, n_alt = 0
   Insn 8: point = 53, n_alt = 0
   Insn 7: point = 53, n_alt = -2
   Insn 6: point = 53, n_alt = 0
   Insn 5: point = 53, n_alt = 0
   Insn 76: point = 53, n_alt = 0
 r82: [9..53] [5..6]
 r83: [46..47]
 r84: [41..45]
 r85: [41..42]
 r86: [36..37]
 r87: [34..35]
 r88: [29..30]
 r89: [17..25]
 r90: [21..22]
 r91: [19..20]
 r92: [17..18]
 r93: [15..16]
 r94: [12..14]
 r95: [7..8] [2..4]
 r96: [0..1]
 r97: [51..52]
 r98: [48..49]
 r99: [43..44]
 r100: [38..39]
 r101: [31..32]
 r102: [23..24]
 r103: [12..13]
 r104: [10..11]
 r107: [26..28]
Compressing live ranges: from 54 to 44 - 81%
Ranges after the compression:
 r82: [8..43] [4..5]
 r83: [38..39]
 r84: [34..37]
 r85: [34..35]
 r86: [30..31]
 r87: [28..29]
 r88: [24..25]
 r89: [14..21]
 r90: [18..19]
 r91: [16..17]
 r92: [14..15]
 r93: [12..13]
 r94: [10..11]
 r95: [6..7] [2..3]
 r96: [0..1]
 r97: [42..43]
 r98: [40..41]
 r99: [36..37]
 r100: [32..33]
 r101: [26..27]
 r102: [20..21]
 r103: [10..11]
 r104: [8..9]
 r107: [22..23]

********** Assignment #1: **********

	 Assigning to 107 (cl=GENERAL_REGS, orig=88, freq=3000, tfirst=107, tfreq=3000)...
	   Assign 0 to reload r107 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 76
changing reg in insn 59
changing reg in insn 36
changing reg in insn 28
changing reg in insn 20
changing reg in insn 7
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 25
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 54
changing reg in insn 62
changing reg in insn 39
changing reg in insn 15
changing reg in insn 65
changing reg in insn 65
changing reg in insn 69
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 29
changing reg in insn 44
changing reg in insn 47
changing reg in insn 48
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 36.
deleting insn with uid = 45.
deleting insn with uid = 78.
deleting insn with uid = 49.
deleting insn with uid = 59.
deleting insn with uid = 65.
deleting insn with uid = 69.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 60.


sys_chmod

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={22d,18u} r1={7d,3u} r2={4d} r3={1d,5u} r7={10d,36u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={16d,3u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 320{255d,65u,0e} in 46{43 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 76 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 76 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 76 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":98:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [22 filename+0 S4 A32])) "fs/open.c":98:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 6 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x714aafb10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":98:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":98:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])
        (reg:SI 0 ax [97])) "fs/open.c":98:19 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":98:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":98:8 806 {*jcc}
     (nil)
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 72 3 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":99:16 75 {*movsi_internal}
     (nil))
(jump_insn 72 15 73 3 (set (pc)
        (label_ref 63)) "fs/open.c":99:16 807 {jump}
     (nil)
 -> 63)
(barrier 73 72 18)
(code_label 18 73 19 4 31 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [98])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":100:17 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 0 ax [orig:83 current.26_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [98]) [1 current+0 S4 A32])) "fs/open.c":100:17 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:HI 1 dx [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:83 current.26_1 ] [83])
                (const_int 578 [0x242])) [8 current.26_1->euid+0 S2 A16])) "fs/open.c":100:17 76 {*movhi_internal}
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 0 ax [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":100:32 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [99])
                (const_int 2 [0x2])) [8 inode_18->i_uid+0 S2 A16])) "fs/open.c":100:32 76 {*movhi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:84 _2 ] [84])
            (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/open.c":100:8 10 {*cmphi_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/open.c":100:8 806 {*jcc}
     (nil)
 -> 42)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 0 ax [100])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":100:45 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 0 ax [orig:86 current.27_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [100]) [1 current+0 S4 A32])) "fs/open.c":100:45 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:86 current.27_4 ] [86])
                (const_int 578 [0x242])) [8 current.27_4->euid+0 S2 A16])) "fs/open.c":100:45 76 {*movhi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "fs/open.c":100:41 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/open.c":100:41 806 {*jcc}
     (nil)
 -> 42)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":101:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 35 34 37 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 inode+0 S4 A32])) "fs/open.c":101:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 37 35 38 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":101:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 38 37 39 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":101:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 39 38 74 6 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":102:16 75 {*movsi_internal}
     (nil))
(jump_insn 74 39 75 6 (set (pc)
        (label_ref 63)) "fs/open.c":102:16 807 {jump}
     (nil)
 -> 63)
(barrier 75 74 42)
(code_label 42 75 43 7 33 (nil) [2 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 46 7 (set (reg:SI 0 ax [101])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [6 mode+0 S4 A32])) "fs/open.c":104:27 75 {*movsi_internal}
     (nil))
(insn 46 44 79 7 (parallel [
            (set (reg:HI 0 ax [orig:88 _6 ] [88])
                (and:HI (reg:HI 0 ax [orig:88 _6 ] [88])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":104:27 489 {*andhi_1}
     (nil))
(insn 79 46 47 7 (set (reg:HI 1 dx [orig:89 _7 ] [89])
        (reg:HI 0 ax [orig:88 _6 ] [88])) "fs/open.c":104:27 76 {*movhi_internal}
     (nil))
(insn 47 79 48 7 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":104:44 75 {*movsi_internal}
     (nil))
(insn 48 47 50 7 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (reg/f:SI 0 ax [102]) [8 inode_18->i_mode+0 S2 A32])) "fs/open.c":104:44 76 {*movhi_internal}
     (nil))
(insn 50 48 51 7 (parallel [
            (set (reg:HI 0 ax [orig:92 _10 ] [92])
                (and:HI (reg:HI 0 ax [orig:91 _9 ] [91])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":104:53 489 {*andhi_1}
     (nil))
(insn 51 50 52 7 (parallel [
            (set (reg:HI 0 ax [orig:93 _11 ] [93])
                (ior:HI (reg:HI 0 ax [orig:92 _10 ] [92])
                    (reg:HI 1 dx [orig:89 _7 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":104:36 518 {*iorhi_1}
     (nil))
(insn 52 51 53 7 (set (reg:HI 1 dx [orig:94 _12 ] [94])
        (reg:HI 0 ax [orig:93 _11 ] [93])) "fs/open.c":104:36 76 {*movhi_internal}
     (nil))
(insn 53 52 54 7 (set (reg/f:SI 0 ax [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":104:19 75 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (mem:HI (reg/f:SI 0 ax [103]) [8 inode_18->i_mode+0 S2 A32])
        (reg:HI 1 dx [orig:94 _12 ] [94])) "fs/open.c":104:19 76 {*movhi_internal}
     (nil))
(insn 55 54 56 7 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":105:19 75 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (mem:QI (plus:SI (reg/f:SI 0 ax [104])
                (const_int 51 [0x33])) [0 inode_18->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/open.c":105:19 77 {*movqi_internal}
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":106:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 58 57 60 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 inode+0 S4 A32])) "fs/open.c":106:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 60 58 61 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":106:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 61 60 62 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":106:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 62 61 63 7 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (const_int 0 [0])) "fs/open.c":107:12 75 {*movsi_internal}
     (nil))
(code_label 63 62 64 8 32 (nil) [2 uses])
(note 64 63 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 64 77 8 (use (reg/i:SI 0 ax)) "fs/open.c":108:1 -1
     (nil))
(note 77 70 0 NOTE_INSN_DELETED)

;; Function sys_chown (sys_chown, funcdef_no=12, decl_uid=1452, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 22:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 43:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 45:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 59: point = 0, n_alt = -1
   Insn 58: point = 0, n_alt = -2
   Insn 54: point = 1, n_alt = -2
  BB 5
   Insn 63: point = 4, n_alt = -1
   Insn 31: point = 4, n_alt = 0
   Insn 30: point = 5, n_alt = 0
   Insn 29: point = 5, n_alt = 0
   Insn 28: point = 5, n_alt = -2
   Insn 27: point = 6, n_alt = 0
   Insn 26: point = 6, n_alt = 0
  BB 3
   Insn 61: point = 7, n_alt = -1
   Insn 15: point = 7, n_alt = 0
  BB 6
   Insn 51: point = 8, n_alt = 0
   Insn 50: point = 9, n_alt = 0
   Insn 49: point = 9, n_alt = 0
   Insn 48: point = 9, n_alt = -2
   Insn 47: point = 10, n_alt = 0
   Insn 46: point = 10, n_alt = 0
   Insn 45: point = 10, n_alt = 8
   Insn 44: point = 11, n_alt = 0
   Insn 43: point = 12, n_alt = 8
   Insn 42: point = 13, n_alt = 0
   Insn 41: point = 14, n_alt = 0
   Insn 40: point = 16, n_alt = 0
   Insn 39: point = 17, n_alt = 3
   Insn 38: point = 18, n_alt = 0
   Insn 37: point = 19, n_alt = 0
   Insn 36: point = 21, n_alt = 0
  BB 4
   Insn 24: point = 23, n_alt = -1
   Insn 23: point = 23, n_alt = 0
   Insn 22: point = 24, n_alt = 2
   Insn 21: point = 26, n_alt = 0
   Insn 20: point = 28, n_alt = 0
  BB 2
   Insn 13: point = 30, n_alt = -1
   Insn 12: point = 30, n_alt = 1
   Insn 11: point = 30, n_alt = 1
   Insn 10: point = 31, n_alt = -2
   Insn 9: point = 32, n_alt = 0
   Insn 8: point = 32, n_alt = 0
   Insn 7: point = 32, n_alt = -2
   Insn 6: point = 32, n_alt = 0
   Insn 5: point = 32, n_alt = 0
   Insn 65: point = 32, n_alt = 0
 r82: [9..32] [5..6]
 r83: [25..26]
 r84: [23..24]
 r85: [17..19]
 r86: [12..14]
 r87: [7..8] [2..4]
 r88: [0..1]
 r89: [30..31]
 r90: [27..28]
 r91: [20..21]
 r92: [17..18]
 r93: [15..16]
 r94: [12..13]
 r95: [10..11]
Compressing live ranges: from 33 to 26 - 78%
Ranges after the compression:
 r82: [8..25] [4..5]
 r83: [20..21]
 r84: [18..19]
 r85: [14..15]
 r86: [10..11]
 r87: [6..7] [2..3]
 r88: [0..1]
 r89: [24..25]
 r90: [22..23]
 r91: [16..17]
 r92: [14..15]
 r93: [12..13]
 r94: [10..11]
 r95: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 65
changing reg in insn 48
changing reg in insn 28
changing reg in insn 20
changing reg in insn 7
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 37
changing reg in insn 39
changing reg in insn 41
changing reg in insn 43
changing reg in insn 51
changing reg in insn 31
changing reg in insn 15
changing reg in insn 54
changing reg in insn 54
changing reg in insn 58
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 28.
deleting insn with uid = 48.
deleting insn with uid = 54.
deleting insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 49.


sys_chown

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={15d,11u} r1={6d,2u} r2={4d} r3={1d,4u} r7={10d,35u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={12d,2u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 297{243d,54u,0e} in 37{34 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 65 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 65 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":114:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [22 filename+0 S4 A32])) "fs/open.c":114:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 6 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x714aafb10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":114:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":114:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])
        (reg:SI 0 ax [89])) "fs/open.c":114:19 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":114:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":114:8 806 {*jcc}
     (nil)
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 61 3 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":115:16 75 {*movsi_internal}
     (nil))
(jump_insn 61 15 62 3 (set (pc)
        (label_ref 52)) "fs/open.c":115:16 807 {jump}
     (nil)
 -> 52)
(barrier 62 61 18)
(code_label 18 62 19 4 35 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [90])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":116:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 0 ax [orig:83 current.28_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [90]) [1 current+0 S4 A32])) "fs/open.c":116:10 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:83 current.28_1 ] [83])
                (const_int 578 [0x242])) [8 current.28_1->euid+0 S2 A16])) "fs/open.c":116:10 76 {*movhi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/open.c":116:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "fs/open.c":116:8 806 {*jcc}
     (nil)
 -> 34)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":117:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 27 26 29 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 inode+0 S4 A32])) "fs/open.c":117:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 29 27 30 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":117:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":117:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 31 30 63 5 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":118:16 75 {*movsi_internal}
     (nil))
(jump_insn 63 31 64 5 (set (pc)
        (label_ref 52)) "fs/open.c":118:16 807 {jump}
     (nil)
 -> 52)
(barrier 64 63 34)
(code_label 34 64 35 6 37 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:SI 0 ax [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [6 uid+0 S4 A32])) "fs/open.c":120:18 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:HI 1 dx [orig:85 _3 ] [85])
        (reg:HI 0 ax [91])) "fs/open.c":120:18 76 {*movhi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":120:18 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (mem:HI (plus:SI (reg/f:SI 0 ax [92])
                (const_int 2 [0x2])) [8 inode_10->i_uid+0 S2 A16])
        (reg:HI 1 dx [orig:85 _3 ] [85])) "fs/open.c":120:18 76 {*movhi_internal}
     (nil))
(insn 40 39 41 6 (set (reg:SI 0 ax [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [6 gid+0 S4 A32])) "fs/open.c":121:18 75 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:QI 1 dx [orig:86 _4 ] [86])
        (reg:QI 0 ax [93])) "fs/open.c":121:18 77 {*movqi_internal}
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 0 ax [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":121:18 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (mem:QI (plus:SI (reg/f:SI 0 ax [94])
                (const_int 12 [0xc])) [0 inode_10->i_gid+0 S1 A32])
        (reg:QI 1 dx [orig:86 _4 ] [86])) "fs/open.c":121:18 77 {*movqi_internal}
     (nil))
(insn 44 43 45 6 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":122:19 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (mem:QI (plus:SI (reg/f:SI 0 ax [95])
                (const_int 51 [0x33])) [0 inode_10->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/open.c":122:19 77 {*movqi_internal}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":123:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 47 46 49 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 inode+0 S4 A32])) "fs/open.c":123:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 49 47 50 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":123:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 50 49 51 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":123:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 51 50 52 6 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (const_int 0 [0])) "fs/open.c":124:12 75 {*movsi_internal}
     (nil))
(code_label 52 51 53 7 36 (nil) [2 uses])
(note 53 52 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 53 66 7 (use (reg/i:SI 0 ax)) "fs/open.c":125:1 -1
     (nil))
(note 66 59 0 NOTE_INSN_DELETED)

;; Function sys_chdir (sys_chdir, funcdef_no=13, decl_uid=1456, cgraph_uid=14, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 21:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 57: point = 0, n_alt = -1
   Insn 56: point = 0, n_alt = -2
   Insn 52: point = 1, n_alt = -2
  BB 5
   Insn 61: point = 4, n_alt = -1
   Insn 32: point = 4, n_alt = 0
   Insn 31: point = 5, n_alt = 0
   Insn 30: point = 5, n_alt = 0
   Insn 29: point = 5, n_alt = -2
   Insn 28: point = 6, n_alt = 0
   Insn 27: point = 6, n_alt = 0
  BB 3
   Insn 59: point = 7, n_alt = -1
   Insn 15: point = 7, n_alt = 0
  BB 6
   Insn 49: point = 8, n_alt = 0
   Insn 48: point = 9, n_alt = 1
   Insn 47: point = 10, n_alt = 0
   Insn 46: point = 11, n_alt = 0
   Insn 45: point = 13, n_alt = 0
   Insn 44: point = 15, n_alt = 0
   Insn 43: point = 15, n_alt = 0
   Insn 42: point = 15, n_alt = -2
   Insn 41: point = 15, n_alt = 0
   Insn 40: point = 16, n_alt = 0
   Insn 39: point = 16, n_alt = 0
   Insn 38: point = 18, n_alt = 0
   Insn 37: point = 20, n_alt = 0
  BB 4
   Insn 25: point = 22, n_alt = -1
   Insn 24: point = 22, n_alt = 0
   Insn 23: point = 23, n_alt = 0
   Insn 22: point = 25, n_alt = 0
   Insn 21: point = 27, n_alt = 2
   Insn 20: point = 29, n_alt = 0
  BB 2
   Insn 13: point = 31, n_alt = -1
   Insn 12: point = 31, n_alt = 1
   Insn 11: point = 31, n_alt = 1
   Insn 10: point = 32, n_alt = -2
   Insn 9: point = 33, n_alt = 0
   Insn 8: point = 33, n_alt = 0
   Insn 7: point = 33, n_alt = -2
   Insn 6: point = 33, n_alt = 0
   Insn 5: point = 33, n_alt = 0
   Insn 63: point = 33, n_alt = 0
 r82: [14..33] [5..6]
 r83: [26..27]
 r84: [24..25]
 r85: [22..23]
 r86: [17..18]
 r87: [15..16]
 r88: [9..11]
 r89: [7..8] [2..4]
 r90: [0..1]
 r91: [31..32]
 r92: [28..29]
 r93: [19..20]
 r94: [12..13]
 r95: [9..10]
Compressing live ranges: from 34 to 28 - 82%
Ranges after the compression:
 r82: [12..27] [4..5]
 r83: [22..23]
 r84: [20..21]
 r85: [18..19]
 r86: [14..15]
 r87: [12..13]
 r88: [8..9]
 r89: [6..7] [2..3]
 r90: [0..1]
 r91: [26..27]
 r92: [24..25]
 r93: [16..17]
 r94: [10..11]
 r95: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 63
changing reg in insn 45
changing reg in insn 42
changing reg in insn 37
changing reg in insn 29
changing reg in insn 7
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 41
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 32
changing reg in insn 15
changing reg in insn 52
changing reg in insn 52
changing reg in insn 56
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 37
changing reg in insn 38
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 29.
deleting insn with uid = 42.
deleting insn with uid = 52.
deleting insn with uid = 56.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 43.


sys_chdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,12u} r1={5d,1u} r2={4d} r3={1d,5u} r7={10d,31u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={13d,2u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 295{244d,51u,0e} in 35{32 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 63 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 63 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 63 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":131:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [22 filename+0 S4 A32])) "fs/open.c":131:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 6 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x714aafb10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":131:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":131:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])
        (reg:SI 0 ax [91])) "fs/open.c":131:19 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":131:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":131:8 806 {*jcc}
     (nil)
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 59 3 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":132:16 75 {*movsi_internal}
     (nil))
(jump_insn 59 15 60 3 (set (pc)
        (label_ref 50)) "fs/open.c":132:16 807 {jump}
     (nil)
 -> 50)
(barrier 60 59 18)
(code_label 18 60 19 4 39 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":133:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [92]) [8 inode_12->i_mode+0 S2 A32])) "fs/open.c":133:10 76 {*movhi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/open.c":133:10 144 {*zero_extendhisi2}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (and:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":133:10 490 {*andsi_1}
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 16384 [0x4000]))) "fs/open.c":133:8 11 {*cmpsi_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/open.c":133:8 806 {*jcc}
     (nil)
 -> 35)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":134:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 28 27 30 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 inode+0 S4 A32])) "fs/open.c":134:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 30 28 31 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":134:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":134:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 32 31 61 5 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (const_int -20 [0xffffffffffffffec])) "fs/open.c":135:16 75 {*movsi_internal}
     (nil))
(jump_insn 61 32 62 5 (set (pc)
        (label_ref 50)) "fs/open.c":135:16 807 {jump}
     (nil)
 -> 50)
(barrier 62 61 35)
(code_label 35 62 36 6 41 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:SI 0 ax [93])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":137:17 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 0 ax [orig:86 current.29_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [93]) [1 current+0 S4 A32])) "fs/open.c":137:17 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:86 current.29_4 ] [86])
                (const_int 624 [0x270])) [9 current.29_4->pwd+0 S4 A32])) "fs/open.c":137:5 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":137:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 41 40 43 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 0 ax [orig:87 _5 ] [87])) "fs/open.c":137:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 43 41 44 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":137:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":137:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 44 46 6 (set (reg/f:SI 0 ax [94])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":138:12 75 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg/f:SI 0 ax [orig:88 current.30_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [94]) [1 current+0 S4 A32])) "fs/open.c":138:12 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg/f:SI 1 dx [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":138:18 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:88 current.30_6 ] [88])
                (const_int 624 [0x270])) [9 current.30_6->pwd+0 S4 A32])
        (reg/f:SI 1 dx [95])) "fs/open.c":138:18 75 {*movsi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (const_int 0 [0])) "fs/open.c":139:12 75 {*movsi_internal}
     (nil))
(code_label 50 49 51 7 40 (nil) [2 uses])
(note 51 50 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 51 64 7 (use (reg/i:SI 0 ax)) "fs/open.c":140:1 -1
     (nil))
(note 64 57 0 NOTE_INSN_DELETED)

;; Function sys_utime (sys_utime, funcdef_no=14, decl_uid=1461, cgraph_uid=15, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 45:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=110 from oldreg=108, assigning class AREG to r110
   45: {r97:SI=trunc(sign_extend(r110:SI)*sign_extend(r98:SI) 0>>0x20);clobber r110:SI;clobber flags:CC;}
      REG_DEAD r98:SI
      REG_UNUSED r108:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   86: r110:SI=r87:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 46:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=111 from oldreg=97, assigning class GENERAL_REGS to r111
   46: {r111:SI=r111:SI>>0x5;clobber flags:CC;}
      REG_DEAD r97:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   87: r111:SI=r97:SI
    Inserting insn reload after:
   88: r99:SI=r111:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=112 from oldreg=99, assigning class GENERAL_REGS to r112
   48: {r112:SI=r112:SI-r100:SI;clobber flags:CC;}
      REG_DEAD r100:SI
      REG_DEAD r99:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   89: r112:SI=r99:SI
    Inserting insn reload after:
   90: r88:SI=r112:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 51
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 64:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 78: point = 0, n_alt = -1
   Insn 77: point = 0, n_alt = -2
   Insn 73: point = 1, n_alt = -2
  BB 3
   Insn 80: point = 4, n_alt = -1
   Insn 15: point = 4, n_alt = 0
  BB 7
   Insn 70: point = 5, n_alt = 0
   Insn 69: point = 6, n_alt = 0
   Insn 68: point = 6, n_alt = 0
   Insn 67: point = 6, n_alt = -2
   Insn 66: point = 7, n_alt = 0
   Insn 65: point = 7, n_alt = 0
   Insn 64: point = 7, n_alt = 8
   Insn 63: point = 8, n_alt = 0
   Insn 62: point = 9, n_alt = 1
   Insn 61: point = 10, n_alt = 0
   Insn 60: point = 11, n_alt = 0
   Insn 59: point = 12, n_alt = 1
   Insn 58: point = 13, n_alt = 0
   Insn 57: point = 14, n_alt = 0
  BB 5
   Insn 82: point = 16, n_alt = -1
   Insn 37: point = 16, n_alt = 1
   Insn 36: point = 17, n_alt = -2
   Insn 35: point = 18, n_alt = 0
   Insn 34: point = 18, n_alt = 0
   Insn 33: point = 18, n_alt = 0
   Insn 32: point = 19, n_alt = 0
   Insn 31: point = 19, n_alt = 0
   Insn 30: point = 21, n_alt = 0
   Insn 29: point = 22, n_alt = 1
   Insn 28: point = 23, n_alt = -2
   Insn 27: point = 24, n_alt = 0
   Insn 26: point = 24, n_alt = 0
   Insn 25: point = 24, n_alt = 0
   Insn 24: point = 25, n_alt = 0
   Insn 23: point = 25, n_alt = 0
  BB 6
   Insn 54: point = 27, n_alt = 1
   Insn 53: point = 28, n_alt = 0
   Insn 52: point = 29, n_alt = 1
   Insn 51: point = 30, n_alt = 0
   Insn 50: point = 32, n_alt = 0
   Insn 49: point = 34, n_alt = 0
   Insn 90: point = 35, n_alt = -2
	Hard reg 1 is preferable by r112 with profit 1000
   Insn 48: point = 37, n_alt = 0
   Insn 89: point = 39, n_alt = -2
	Hard reg 1 is preferable by r112 with profit 1000
	Hard reg 0 is preferable by r112 with profit 1000
   Insn 47: point = 41, n_alt = 1
   Insn 88: point = 43, n_alt = -2
	Hard reg 0 is preferable by r111 with profit 1000
   Insn 46: point = 45, n_alt = 0
   Insn 87: point = 46, n_alt = -2
	Hard reg 0 is preferable by r111 with profit 1000
	Hard reg 1 is preferable by r111 with profit 1000
   Insn 45: point = 48, n_alt = 0
   Insn 86: point = 50, n_alt = -2
	Hard reg 2 is preferable by r110 with profit 1000
   Insn 44: point = 51, n_alt = 0
   Insn 43: point = 52, n_alt = 0
   Insn 42: point = 54, n_alt = 0
  BB 4
   Insn 21: point = 56, n_alt = -1
   Insn 20: point = 56, n_alt = 1
  BB 2
   Insn 13: point = 57, n_alt = -1
   Insn 12: point = 57, n_alt = 1
   Insn 11: point = 57, n_alt = 1
   Insn 10: point = 58, n_alt = -2
   Insn 9: point = 59, n_alt = 0
   Insn 8: point = 59, n_alt = 0
   Insn 7: point = 59, n_alt = -2
   Insn 6: point = 59, n_alt = 0
   Insn 5: point = 59, n_alt = 0
   Insn 84: point = 59, n_alt = 0
 r82: [6..59]
 r83: [24..25]
 r84: [22..23]
 r85: [18..19]
 r86: [16..17]
 r87: [42..52]
 r88: [31..35]
 r89: [31..32]
 r90: [12..14]
 r91: [9..11]
 r92: [2..5]
 r93: [0..1]
 r94: [57..58]
 r95: [20..21]
 r96: [53..54]
 r97: [47..48]
 r98: [49..51]
 r99: [40..43]
 r100: [38..41]
 r101: [33..34]
 r102: [29..30]
 r103: [27..28]
 r104: [12..13]
 r105: [9..10]
 r106: [7..8]
 r110: [48..50]
 r111: [44..46]
 r112: [36..39]
Compressing live ranges: from 60 to 44 - 73%
Ranges after the compression:
 r82: [4..43]
 r83: [18..19]
 r84: [16..17]
 r85: [12..13]
 r86: [10..11]
 r87: [32..39]
 r88: [24..27]
 r89: [24..25]
 r90: [8..9]
 r91: [6..7]
 r92: [2..3]
 r93: [0..1]
 r94: [42..43]
 r95: [14..15]
 r96: [40..41]
 r97: [36..37]
 r98: [38..39]
 r99: [30..33]
 r100: [28..31]
 r101: [26..27]
 r102: [22..23]
 r103: [20..21]
 r104: [8..9]
 r105: [6..7]
 r106: [4..5]
 r110: [37..39]
 r111: [34..35]
 r112: [28..29]

********** Assignment #1: **********

	 Assigning to 110 (cl=AREG, orig=108, freq=2000, tfirst=110, tfreq=2000)...
	   Assign 0 to reload r110 (freq=2000)
	 Assigning to 111 (cl=GENERAL_REGS, orig=97, freq=3000, tfirst=111, tfreq=3000)...
	   Assign 0 to reload r111 (freq=3000)
	 Assigning to 112 (cl=GENERAL_REGS, orig=99, freq=3000, tfirst=112, tfreq=3000)...
	   Assign 0 to reload r112 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 84
changing reg in insn 67
changing reg in insn 49
changing reg in insn 42
changing reg in insn 7
changing reg in insn 23
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 33
changing reg in insn 36
changing reg in insn 37
changing reg in insn 43
changing reg in insn 47
changing reg in insn 50
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 62
changing reg in insn 70
changing reg in insn 15
changing reg in insn 73
changing reg in insn 73
changing reg in insn 77
changing reg in insn 10
changing reg in insn 11
changing reg in insn 30
changing reg in insn 31
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 44
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 58
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 28.
deleting insn with uid = 36.
deleting insn with uid = 88.
deleting insn with uid = 89.
deleting insn with uid = 67.
deleting insn with uid = 73.
deleting insn with uid = 77.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 68.


sys_utime

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={23d,20u} r1={10d,5u} r2={7d,3u} r3={1d,4u} r7={13d,49u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1e} r17={21d,2u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 419{335d,83u,1e} in 56{52 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 84 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 84 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 84 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":147:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [22 filename+0 S4 A32])) "fs/open.c":147:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 6 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x714aafb10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":147:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":147:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 inode+0 S4 A32])
        (reg:SI 0 ax [94])) "fs/open.c":147:19 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":147:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":147:8 806 {*jcc}
     (nil)
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 80 3 (set (reg:SI 0 ax [orig:92 _12 ] [92])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":148:16 75 {*movsi_internal}
     (nil))
(jump_insn 80 15 81 3 (set (pc)
        (label_ref 71)) "fs/open.c":148:16 807 {jump}
     (nil)
 -> 71)
(barrier 81 80 18)
(code_label 18 81 19 4 43 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [24 times+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":149:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/open.c":149:8 806 {*jcc}
     (nil)
 -> 40)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [24 times+0 S4 A32])) "fs/open.c":150:49 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":150:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 25 24 26 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/open.c":150:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x714aafb4da00 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":150:19 823 {*call_value}
     (nil)
    (nil))
(insn 27 26 29 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":150:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 29 27 30 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 actime+0 S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "fs/open.c":150:17 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [24 times+0 S4 A32])) "fs/open.c":151:49 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 0 ax [95])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":151:49 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [24 times+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":151:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/open.c":151:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x714aafb4da00 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":151:19 823 {*call_value}
     (nil)
    (nil))
(insn 35 34 37 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":151:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 37 35 82 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 modtime+0 S4 A32])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "fs/open.c":151:17 75 {*movsi_internal}
     (nil))
(jump_insn 82 37 83 5 (set (pc)
        (label_ref 55)) 807 {jump}
     (nil)
 -> 55)
(barrier 83 82 40)
(code_label 40 83 41 6 45 (nil) [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 0 ax [96])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x714aafb2e360 jiffies>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 2 cx [orig:87 jiffies.31_5 ] [87])
        (mem/v/c:SI (reg/f:SI 0 ax [96]) [3 jiffies+0 S4 A32])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 44 43 86 6 (set (reg:SI 1 dx [98])
        (const_int 1374389535 [0x51eb851f])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 86 44 45 6 (set (reg:SI 0 ax [108])
        (reg:SI 2 cx [orig:87 jiffies.31_5 ] [87])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 45 86 87 6 (parallel [
            (set (reg:SI 1 dx [97])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [108]))
                            (sign_extend:DI (reg:SI 1 dx [98])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [108]))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 435 {*smulsi3_highpart_1}
     (nil))
(insn 87 45 46 6 (set (reg:SI 0 ax [97])
        (reg:SI 1 dx [97])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 46 87 47 6 (parallel [
            (set (reg:SI 0 ax [97])
                (ashiftrt:SI (reg:SI 0 ax [97])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 702 {*ashrsi3_1}
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg:SI 2 cx [100])
                (ashiftrt:SI (reg:SI 2 cx [orig:87 jiffies.31_5 ] [87])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 694 {ashrsi3_cvt}
     (nil))
(insn 48 47 90 6 (parallel [
            (set (reg:SI 0 ax [99])
                (minus:SI (reg:SI 0 ax [99])
                    (reg:SI 2 cx [100])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 282 {*subsi_1}
     (nil))
(insn 90 48 49 6 (set (reg:SI 1 dx [orig:88 _6 ] [88])
        (reg:SI 0 ax [99])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 49 90 50 6 (set (reg/f:SI 0 ax [101])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x714aafb2e3f0 startup_time>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:SI 0 ax [orig:89 startup_time.32_7 ] [89])
        (mem/c:SI (reg/f:SI 0 ax [101]) [3 startup_time+0 S4 A32])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:SI 0 ax [102])
                (plus:SI (reg:SI 0 ax [orig:89 startup_time.32_7 ] [89])
                    (reg:SI 1 dx [orig:88 _6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:26 209 {*addsi_1}
     (nil))
(insn 52 51 53 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 modtime+0 S4 A32])
        (reg:SI 0 ax [102])) "fs/open.c":153:26 75 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 modtime+0 S4 A32])) "fs/open.c":153:16 75 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 actime+0 S4 A32])
        (reg:SI 0 ax [103])) "fs/open.c":153:16 75 {*movsi_internal}
     (nil))
(code_label 55 54 56 7 46 (nil) [1 uses])
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (set (reg:SI 1 dx [orig:90 actime.33_8 ] [90])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 actime+0 S4 A32])) "fs/open.c":154:20 75 {*movsi_internal}
     (nil))
(insn 58 57 59 7 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 inode+0 S4 A32])) "fs/open.c":154:20 75 {*movsi_internal}
     (nil))
(insn 59 58 60 7 (set (mem:SI (plus:SI (reg/f:SI 0 ax [104])
                (const_int 36 [0x24])) [3 inode_18->i_atime+0 S4 A32])
        (reg:SI 1 dx [orig:90 actime.33_8 ] [90])) "fs/open.c":154:20 75 {*movsi_internal}
     (nil))
(insn 60 59 61 7 (set (reg:SI 1 dx [orig:91 modtime.34_9 ] [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [3 modtime+0 S4 A32])) "fs/open.c":155:20 75 {*movsi_internal}
     (nil))
(insn 61 60 62 7 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 inode+0 S4 A32])) "fs/open.c":155:20 75 {*movsi_internal}
     (nil))
(insn 62 61 63 7 (set (mem:SI (plus:SI (reg/f:SI 0 ax [105])
                (const_int 8 [0x8])) [3 inode_18->i_mtime+0 S4 A32])
        (reg:SI 1 dx [orig:91 modtime.34_9 ] [91])) "fs/open.c":155:20 75 {*movsi_internal}
     (nil))
(insn 63 62 64 7 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [9 inode+0 S4 A32])) "fs/open.c":156:20 75 {*movsi_internal}
     (nil))
(insn 64 63 65 7 (set (mem:QI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 51 [0x33])) [0 inode_18->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/open.c":156:20 77 {*movqi_internal}
     (nil))
(insn 65 64 66 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":157:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 66 65 68 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 inode+0 S4 A32])) "fs/open.c":157:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 68 66 69 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":157:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 69 68 70 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":157:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 70 69 71 7 (set (reg:SI 0 ax [orig:92 _12 ] [92])
        (const_int 0 [0])) "fs/open.c":158:12 75 {*movsi_internal}
     (nil))
(code_label 71 70 72 8 44 (nil) [1 uses])
(note 72 71 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 78 72 85 8 (use (reg/i:SI 0 ax)) "fs/open.c":159:1 -1
     (nil))
(note 85 78 0 NOTE_INSN_DELETED)

;; Function sys_access (sys_access, funcdef_no=15, decl_uid=1468, cgraph_uid=16, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 22:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 37:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 50:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) qm {*zero_extendqihi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*andsi_1}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            alt=2: Bad operand -- refuse
	 Choosing alt 1 in insn 60:  (0) r  (1) 0  (2) m {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 71:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10 11 12
EBB 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 99: point = 0, n_alt = -1
   Insn 98: point = 0, n_alt = -2
   Insn 94: point = 1, n_alt = -2
  BB 13
   Insn 107: point = 4, n_alt = -1
   Insn 86: point = 4, n_alt = 0
  BB 9
   Insn 105: point = 5, n_alt = -1
   Insn 64: point = 5, n_alt = 0
  BB 3
   Insn 101: point = 6, n_alt = -1
   Insn 16: point = 6, n_alt = 0
  BB 14
   Insn 91: point = 7, n_alt = 0
  BB 12
   Insn 83: point = 8, n_alt = -1
   Insn 82: point = 8, n_alt = 0
   Insn 81: point = 9, n_alt = 0
   Insn 80: point = 11, n_alt = 0
  BB 11
   Insn 78: point = 12, n_alt = -1
   Insn 77: point = 12, n_alt = 0
   Insn 76: point = 13, n_alt = 0
   Insn 75: point = 15, n_alt = 0
  BB 10
   Insn 73: point = 16, n_alt = -1
   Insn 72: point = 16, n_alt = 0
   Insn 71: point = 17, n_alt = 2
   Insn 70: point = 19, n_alt = 0
   Insn 69: point = 21, n_alt = 0
  BB 8
   Insn 62: point = 24, n_alt = -1
   Insn 61: point = 24, n_alt = 0
   Insn 60: point = 25, n_alt = 1
   Insn 59: point = 27, n_alt = 0
   Insn 58: point = 29, n_alt = 0
  BB 5
   Insn 103: point = 31, n_alt = -1
   Insn 41: point = 31, n_alt = 0
  BB 7
   Insn 55: point = 32, n_alt = 0
  BB 6
   Insn 53: point = 33, n_alt = -1
   Insn 52: point = 33, n_alt = 0
   Insn 51: point = 34, n_alt = 0
   Insn 50: point = 36, n_alt = 4
   Insn 49: point = 38, n_alt = 0
   Insn 48: point = 39, n_alt = 2
   Insn 47: point = 41, n_alt = 0
   Insn 46: point = 43, n_alt = 0
  BB 4
   Insn 39: point = 45, n_alt = -1
   Insn 38: point = 45, n_alt = 0
   Insn 37: point = 46, n_alt = 2
   Insn 36: point = 48, n_alt = 0
   Insn 35: point = 49, n_alt = 2
   Insn 34: point = 51, n_alt = 0
   Insn 33: point = 53, n_alt = 0
   Insn 32: point = 54, n_alt = 0
   Insn 31: point = 54, n_alt = 0
   Insn 30: point = 54, n_alt = -2
   Insn 29: point = 54, n_alt = 0
   Insn 28: point = 54, n_alt = 0
   Insn 27: point = 54, n_alt = 1
   Insn 26: point = 55, n_alt = 0
   Insn 25: point = 56, n_alt = 1
   Insn 24: point = 57, n_alt = 0
   Insn 23: point = 59, n_alt = 0
   Insn 22: point = 61, n_alt = 2
   Insn 21: point = 63, n_alt = 0
  BB 2
   Insn 14: point = 65, n_alt = -1
   Insn 13: point = 65, n_alt = 1
   Insn 12: point = 65, n_alt = 1
   Insn 11: point = 66, n_alt = -2
   Insn 10: point = 67, n_alt = 0
   Insn 9: point = 67, n_alt = 0
   Insn 8: point = 67, n_alt = -2
   Insn 7: point = 67, n_alt = 0
   Insn 6: point = 67, n_alt = 0
   Insn 5: point = 67, n_alt = 0
   Insn 109: point = 67, n_alt = 0
 r82: [22..67]
 r83: [60..61]
 r84: [58..59]
 r85: [50..51]
 r86: [45..49]
 r87: [45..46]
 r88: [40..41]
 r89: [33..39]
 r90: [35..36]
 r91: [33..34]
 r92: [26..27]
 r93: [24..25]
 r94: [18..19]
 r95: [16..17]
 r96: [12..13]
 r97: [8..9]
 r98: [2..7]
 r99: [0..1]
 r100: [65..66]
 r101: [62..63]
 r102: [56..57]
 r103: [54..55]
 r104: [52..53]
 r105: [47..48]
 r106: [42..43]
 r107: [37..38]
 r108: [28..29]
 r109: [20..21]
 r110: [14..15]
 r111: [10..11]
Compressing live ranges: from 68 to 54 - 79%
Ranges after the compression:
 r82: [18..53]
 r83: [48..49]
 r84: [46..47]
 r85: [38..39]
 r86: [34..37]
 r87: [34..35]
 r88: [30..31]
 r89: [24..29]
 r90: [26..27]
 r91: [24..25]
 r92: [20..21]
 r93: [18..19]
 r94: [14..15]
 r95: [12..13]
 r96: [8..9]
 r97: [4..5]
 r98: [2..3]
 r99: [0..1]
 r100: [52..53]
 r101: [50..51]
 r102: [44..45]
 r103: [42..43]
 r104: [40..41]
 r105: [36..37]
 r106: [32..33]
 r107: [28..29]
 r108: [22..23]
 r109: [16..17]
 r110: [10..11]
 r111: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 109
changing reg in insn 69
changing reg in insn 46
changing reg in insn 33
changing reg in insn 30
changing reg in insn 8
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 52
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 72
changing reg in insn 76
changing reg in insn 77
changing reg in insn 81
changing reg in insn 82
changing reg in insn 91
changing reg in insn 86
changing reg in insn 64
changing reg in insn 16
changing reg in insn 94
changing reg in insn 94
changing reg in insn 98
changing reg in insn 11
changing reg in insn 12
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 46
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 58
changing reg in insn 59
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 80
changing reg in insn 81
deleting insn with uid = 8.
deleting insn with uid = 11.
deleting insn with uid = 30.
deleting insn with uid = 94.
deleting insn with uid = 98.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 31.


sys_access

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={31d,27u} r1={5d,2u} r2={3d} r3={1d,5u} r7={7d,48u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={22d,7u} r18={2d} r19={2e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 291{199d,89u,3e} in 64{62 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 109 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 109 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 109 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 36 [0x24])) [6 mode+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 36 [0x24])) [6 mode+0 S4 A32])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":170:10 490 {*andsi_1}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":171:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 7 6 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [22 filename+0 S4 A32])) "fs/open.c":171:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 7 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x714aafb10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":171:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":171:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 12 10 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 inode+0 S4 A32])
        (reg:SI 0 ax [100])) "fs/open.c":171:19 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":171:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "fs/open.c":171:8 806 {*jcc}
     (nil)
 -> 19)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 101 3 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":172:16 75 {*movsi_internal}
     (nil))
(jump_insn 101 16 102 3 (set (pc)
        (label_ref 92)) "fs/open.c":172:16 807 {jump}
     (nil)
 -> 92)
(barrier 102 101 19)
(code_label 19 102 20 4 48 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 inode+0 S4 A32])) "fs/open.c":173:25 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [101]) [8 inode_24->i_mode+0 S2 A32])) "fs/open.c":173:25 76 {*movhi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/open.c":173:34 144 {*zero_extendhisi2}
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 0 ax [102])
                (and:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":173:18 490 {*andsi_1}
     (nil))
(insn 25 24 26 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 res+0 S4 A32])
        (reg:SI 0 ax [102])) "fs/open.c":173:18 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 res+0 S4 A32])) "fs/open.c":173:12 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 i_mode+0 S4 A32])
        (reg:SI 0 ax [103])) "fs/open.c":173:12 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":174:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 29 28 31 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 inode+0 S4 A32])) "fs/open.c":174:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 31 29 32 4 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":174:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":174:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 33 32 34 4 (set (reg/f:SI 0 ax [104])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":175:16 75 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg/f:SI 0 ax [orig:85 current.35_3 ] [85])
        (mem/f/c:SI (reg/f:SI 0 ax [104]) [1 current+0 S4 A32])) "fs/open.c":175:16 75 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:HI 1 dx [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:85 current.35_3 ] [85])
                (const_int 576 [0x240])) [8 current.35_3->uid+0 S2 A32])) "fs/open.c":175:16 76 {*movhi_internal}
     (nil))
(insn 36 35 37 4 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 inode+0 S4 A32])) "fs/open.c":175:30 75 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [105])
                (const_int 2 [0x2])) [8 inode_24->i_uid+0 S2 A16])) "fs/open.c":175:30 76 {*movhi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:86 _4 ] [86])
            (reg:HI 0 ax [orig:87 _5 ] [87]))) "fs/open.c":175:8 10 {*cmphi_1}
     (nil))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/open.c":175:8 806 {*jcc}
     (nil)
 -> 44)
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 103 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [6 res+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [6 res+0 S4 A32])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":176:13 702 {*ashrsi3_1}
     (nil))
(jump_insn 103 41 104 5 (set (pc)
        (label_ref 56)) 807 {jump}
     (nil)
 -> 56)
(barrier 104 103 44)
(code_label 44 104 45 6 50 (nil) [1 uses])
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg/f:SI 0 ax [106])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":177:21 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg/f:SI 0 ax [orig:88 current.36_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [106]) [1 current+0 S4 A32])) "fs/open.c":177:21 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:HI 1 dx [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:88 current.36_6 ] [88])
                (const_int 582 [0x246])) [8 current.36_6->gid+0 S2 A16])) "fs/open.c":177:21 76 {*movhi_internal}
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 inode+0 S4 A32])) "fs/open.c":177:35 75 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:QI 0 ax [orig:90 _8 ] [90])
        (mem:QI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 12 [0xc])) [0 inode_24->i_gid+0 S1 A32])) "fs/open.c":177:35 77 {*movqi_internal}
     (nil))
(insn 51 50 52 6 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (zero_extend:HI (reg:QI 0 ax [orig:90 _8 ] [90]))) "fs/open.c":177:35 146 {*zero_extendqihi2}
     (nil))
(insn 52 51 53 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:89 _7 ] [89])
            (reg:HI 0 ax [orig:91 _9 ] [91]))) "fs/open.c":177:13 10 {*cmphi_1}
     (nil))
(jump_insn 53 52 54 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "fs/open.c":177:13 806 {*jcc}
     (nil)
 -> 56)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [6 res+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [6 res+0 S4 A32])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":178:13 702 {*ashrsi3_1}
     (nil))
(code_label 56 55 57 8 51 (nil) [2 uses])
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 res+0 S4 A32])) "fs/open.c":179:14 75 {*movsi_internal}
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg:SI 0 ax [orig:92 _10 ] [92])
                (and:SI (reg:SI 0 ax [108])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":179:14 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 60 59 61 8 (parallel [
            (set (reg:SI 0 ax [orig:93 _11 ] [93])
                (and:SI (reg:SI 0 ax [orig:92 _10 ] [92])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 36 [0x24])) [6 mode+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":179:21 490 {*andsi_1}
     (nil))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [6 mode+0 S4 A32])
            (reg:SI 0 ax [orig:93 _11 ] [93]))) "fs/open.c":179:8 11 {*cmpsi_1}
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/open.c":179:8 806 {*jcc}
     (nil)
 -> 67)
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 105 9 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int 0 [0])) "fs/open.c":180:16 75 {*movsi_internal}
     (nil))
(jump_insn 105 64 106 9 (set (pc)
        (label_ref 92)) "fs/open.c":180:16 807 {jump}
     (nil)
 -> 92)
(barrier 106 105 67)
(code_label 67 106 68 10 52 (nil) [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg/f:SI 0 ax [109])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":187:18 75 {*movsi_internal}
     (nil))
(insn 70 69 71 10 (set (reg/f:SI 0 ax [orig:94 current.37_12 ] [94])
        (mem/f/c:SI (reg/f:SI 0 ax [109]) [1 current+0 S4 A32])) "fs/open.c":187:18 75 {*movsi_internal}
     (nil))
(insn 71 70 72 10 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:94 current.37_12 ] [94])
                (const_int 576 [0x240])) [8 current.37_12->uid+0 S2 A32])) "fs/open.c":187:18 76 {*movhi_internal}
     (nil))
(insn 72 71 73 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "fs/open.c":187:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 73 72 74 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "fs/open.c":187:8 806 {*jcc}
     (nil)
 -> 89)
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [6 mode+0 S4 A32])) "fs/open.c":188:17 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (parallel [
            (set (reg:SI 0 ax [orig:96 _14 ] [96])
                (and:SI (reg:SI 0 ax [110])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":188:17 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [6 mode+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 77 76 78 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 _14 ] [96])
            (const_int 0 [0]))) "fs/open.c":187:25 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 78 77 79 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "fs/open.c":187:25 806 {*jcc}
     (nil)
 -> 84)
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg:SI 0 ax [111])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 i_mode+0 S4 A32])) "fs/open.c":188:33 75 {*movsi_internal}
     (nil))
(insn 81 80 82 12 (parallel [
            (set (reg:SI 0 ax [orig:97 _15 ] [97])
                (and:SI (reg:SI 0 ax [111])
                    (const_int 73 [0x49])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":188:33 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 i_mode+0 S4 A32])
            (const_int 73 [0x49]))
        (nil)))
(insn 82 81 83 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:97 _15 ] [97])
            (const_int 0 [0]))) "fs/open.c":188:22 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 83 82 84 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "fs/open.c":188:22 806 {*jcc}
     (nil)
 -> 89)
(code_label 84 83 85 13 54 (nil) [1 uses])
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 107 13 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int 0 [0])) "fs/open.c":189:16 75 {*movsi_internal}
     (nil))
(jump_insn 107 86 108 13 (set (pc)
        (label_ref 92)) "fs/open.c":189:16 807 {jump}
     (nil)
 -> 92)
(barrier 108 107 89)
(code_label 89 108 90 14 53 (nil) [2 uses])
(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 14 (set (reg:SI 0 ax [orig:98 _17 ] [98])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":190:12 75 {*movsi_internal}
     (nil))
(code_label 92 91 93 15 49 (nil) [3 uses])
(note 93 92 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 93 110 15 (use (reg/i:SI 0 ax)) "fs/open.c":191:1 -1
     (nil))
(note 110 99 0 NOTE_INSN_DELETED)

;; Function sys_chroot (sys_chroot, funcdef_no=16, decl_uid=1474, cgraph_uid=17, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 21:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 57: point = 0, n_alt = -1
   Insn 56: point = 0, n_alt = -2
   Insn 52: point = 1, n_alt = -2
  BB 5
   Insn 61: point = 4, n_alt = -1
   Insn 32: point = 4, n_alt = 0
   Insn 31: point = 5, n_alt = 0
   Insn 30: point = 5, n_alt = 0
   Insn 29: point = 5, n_alt = -2
   Insn 28: point = 6, n_alt = 0
   Insn 27: point = 6, n_alt = 0
  BB 3
   Insn 59: point = 7, n_alt = -1
   Insn 15: point = 7, n_alt = 0
  BB 6
   Insn 49: point = 8, n_alt = 0
   Insn 48: point = 9, n_alt = 1
   Insn 47: point = 10, n_alt = 0
   Insn 46: point = 11, n_alt = 0
   Insn 45: point = 13, n_alt = 0
   Insn 44: point = 15, n_alt = 0
   Insn 43: point = 15, n_alt = 0
   Insn 42: point = 15, n_alt = -2
   Insn 41: point = 15, n_alt = 0
   Insn 40: point = 16, n_alt = 0
   Insn 39: point = 16, n_alt = 0
   Insn 38: point = 18, n_alt = 0
   Insn 37: point = 20, n_alt = 0
  BB 4
   Insn 25: point = 22, n_alt = -1
   Insn 24: point = 22, n_alt = 0
   Insn 23: point = 23, n_alt = 0
   Insn 22: point = 25, n_alt = 0
   Insn 21: point = 27, n_alt = 2
   Insn 20: point = 29, n_alt = 0
  BB 2
   Insn 13: point = 31, n_alt = -1
   Insn 12: point = 31, n_alt = 1
   Insn 11: point = 31, n_alt = 1
   Insn 10: point = 32, n_alt = -2
   Insn 9: point = 33, n_alt = 0
   Insn 8: point = 33, n_alt = 0
   Insn 7: point = 33, n_alt = -2
   Insn 6: point = 33, n_alt = 0
   Insn 5: point = 33, n_alt = 0
   Insn 63: point = 33, n_alt = 0
 r82: [14..33] [5..6]
 r83: [26..27]
 r84: [24..25]
 r85: [22..23]
 r86: [17..18]
 r87: [15..16]
 r88: [9..11]
 r89: [7..8] [2..4]
 r90: [0..1]
 r91: [31..32]
 r92: [28..29]
 r93: [19..20]
 r94: [12..13]
 r95: [9..10]
Compressing live ranges: from 34 to 28 - 82%
Ranges after the compression:
 r82: [12..27] [4..5]
 r83: [22..23]
 r84: [20..21]
 r85: [18..19]
 r86: [14..15]
 r87: [12..13]
 r88: [8..9]
 r89: [6..7] [2..3]
 r90: [0..1]
 r91: [26..27]
 r92: [24..25]
 r93: [16..17]
 r94: [10..11]
 r95: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 63
changing reg in insn 45
changing reg in insn 42
changing reg in insn 37
changing reg in insn 29
changing reg in insn 7
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 41
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 32
changing reg in insn 15
changing reg in insn 52
changing reg in insn 52
changing reg in insn 56
changing reg in insn 10
changing reg in insn 11
changing reg in insn 20
changing reg in insn 21
changing reg in insn 37
changing reg in insn 38
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 29.
deleting insn with uid = 42.
deleting insn with uid = 52.
deleting insn with uid = 56.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 43.


sys_chroot

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,12u} r1={5d,1u} r2={4d} r3={1d,5u} r7={10d,31u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={13d,2u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 295{244d,51u,0e} in 35{32 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 63 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 63 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 63 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":197:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [22 filename+0 S4 A32])) "fs/open.c":197:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 8 6 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x714aafb10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":197:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":197:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])
        (reg:SI 0 ax [91])) "fs/open.c":197:19 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":197:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":197:8 806 {*jcc}
     (nil)
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 59 3 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":198:16 75 {*movsi_internal}
     (nil))
(jump_insn 59 15 60 3 (set (pc)
        (label_ref 50)) "fs/open.c":198:16 807 {jump}
     (nil)
 -> 50)
(barrier 60 59 18)
(code_label 18 60 19 4 56 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":199:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [92]) [8 inode_12->i_mode+0 S2 A32])) "fs/open.c":199:10 76 {*movhi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/open.c":199:10 144 {*zero_extendhisi2}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (and:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":199:10 490 {*andsi_1}
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 16384 [0x4000]))) "fs/open.c":199:8 11 {*cmpsi_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/open.c":199:8 806 {*jcc}
     (nil)
 -> 35)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":200:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 28 27 30 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 inode+0 S4 A32])) "fs/open.c":200:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 30 28 31 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":200:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":200:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 32 31 61 5 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (const_int -20 [0xffffffffffffffec])) "fs/open.c":201:16 75 {*movsi_internal}
     (nil))
(jump_insn 61 32 62 5 (set (pc)
        (label_ref 50)) "fs/open.c":201:16 807 {jump}
     (nil)
 -> 50)
(barrier 62 61 35)
(code_label 35 62 36 6 58 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:SI 0 ax [93])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":203:17 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 0 ax [orig:86 current.38_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [93]) [1 current+0 S4 A32])) "fs/open.c":203:17 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:86 current.38_4 ] [86])
                (const_int 628 [0x274])) [9 current.38_4->root+0 S4 A32])) "fs/open.c":203:5 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":203:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 41 40 43 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 0 ax [orig:87 _5 ] [87])) "fs/open.c":203:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 43 41 44 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x714aafad2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":203:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":203:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 44 46 6 (set (reg/f:SI 0 ax [94])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x714aafb2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":204:12 75 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg/f:SI 0 ax [orig:88 current.39_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [94]) [1 current+0 S4 A32])) "fs/open.c":204:12 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg/f:SI 1 dx [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 inode+0 S4 A32])) "fs/open.c":204:19 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:88 current.39_6 ] [88])
                (const_int 628 [0x274])) [9 current.39_6->root+0 S4 A32])
        (reg/f:SI 1 dx [95])) "fs/open.c":204:19 75 {*movsi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (const_int 0 [0])) "fs/open.c":205:12 75 {*movsi_internal}
     (nil))
(code_label 50 49 51 7 57 (nil) [2 uses])
(note 51 50 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 51 64 7 (use (reg/i:SI 0 ax)) "fs/open.c":206:1 -1
     (nil))
(note 64 57 0 NOTE_INSN_DELETED)

;; Function sys_ustat (sys_ustat, funcdef_no=17, decl_uid=1479, cgraph_uid=18, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_ustat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "fs/open.c":210:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "fs/open.c":211:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)
