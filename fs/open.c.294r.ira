
;; Function get_fs_long (get_fs_long, funcdef_no=4, decl_uid=1401, cgraph_uid=5, symbol_order=4)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 5(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 18(l0): point = 14
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [9..10]
 a3(r86): [11..12]
 a4(r82): [14..14]
Compressing live ranges: from 17 to 9 - 52%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
 a3(r86): [6..7]
 a4(r82): [8..8]
  pref0:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=9
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
    3:r86  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={2d} r19={1d,4u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 31{15d,16u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [20 addr+0 S4 A32])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 85 [ _v ])
                (asm_operands:SI ("movl %%fs:%1, %0") ("=r") 0 [
                        (mem:SI (reg/f:SI 86) [3 *addr_2(D)+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") include/asm/segment.h:26)
                    ]
                     [] include/asm/segment.h:26))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":26:5 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 _v+0 S4 A32])
        (reg:SI 85 [ _v ])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ _v ])
        (nil)))
(insn 8 5 11 2 (set (reg:SI 83 [ _4 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 _v+0 S4 A32])) "include/asm/segment.h":27:12 75 {*movsi_internal}
     (nil))
(insn 11 8 15 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _4 ])) "include/asm/segment.h":27:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _4 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "include/asm/segment.h":28:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":28:1 -1
     (nil))

;; Function sys_close (sys_close, funcdef_no=8, decl_uid=1420, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 97.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 12 n_edges 15 count 12 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 5 6 }
;; 5 succs { 11 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r100,l0) best CREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:9000
  a2(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:48000
  a3(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a26(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a27(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a29(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a30(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a31(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a32(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 89(l0): point = 0
   Insn 88(l0): point = 2
   Insn 84(l0): point = 4
   Insn 81(l0): point = 7
   Insn 80(l0): point = 9
   Insn 79(l0): point = 11
   Insn 78(l0): point = 13
   Insn 77(l0): point = 15
   Insn 76(l0): point = 17
   Insn 75(l0): point = 19
   Insn 74(l0): point = 21
   Insn 95(l0): point = 24
   Insn 69(l0): point = 26
   Insn 67(l0): point = 29
   Insn 66(l0): point = 31
   Insn 65(l0): point = 33
   Insn 64(l0): point = 35
   Insn 63(l0): point = 37
   Insn 62(l0): point = 39
   Insn 61(l0): point = 41
   Insn 60(l0): point = 43
   Insn 59(l0): point = 45
   Insn 56(l0): point = 48
   Insn 55(l0): point = 50
   Insn 54(l0): point = 52
   Insn 53(l0): point = 54
   Insn 52(l0): point = 56
   Insn 51(l0): point = 58
   Insn 49(l0): point = 61
   Insn 48(l0): point = 63
   Insn 47(l0): point = 65
   Insn 46(l0): point = 67
   Insn 45(l0): point = 69
   Insn 44(l0): point = 71
   Insn 43(l0): point = 73
   Insn 42(l0): point = 75
   Insn 41(l0): point = 77
   Insn 93(l0): point = 80
   Insn 36(l0): point = 82
   Insn 34(l0): point = 85
   Insn 33(l0): point = 87
   Insn 32(l0): point = 89
   Insn 31(l0): point = 91
   Insn 30(l0): point = 93
   Insn 29(l0): point = 95
   Insn 28(l0): point = 97
   Insn 27(l0): point = 99
   Insn 26(l0): point = 101
   Insn 25(l0): point = 103
   Insn 24(l0): point = 105
   Insn 23(l0): point = 107
   Insn 22(l0): point = 109
   Insn 21(l0): point = 111
   Insn 20(l0): point = 113
   Insn 19(l0): point = 115
   Insn 18(l0): point = 117
   Insn 17(l0): point = 119
   Insn 16(l0): point = 121
   Insn 15(l0): point = 123
   Insn 91(l0): point = 126
   Insn 10(l0): point = 128
   Insn 8(l0): point = 131
   Insn 7(l0): point = 133
   Insn 97(l0): point = 135
 a0(r98): [3..4]
 a1(r97): [126..128] [80..82] [24..26] [5..7]
 a2(r82): [131..135] [85..125] [29..79] [14..23]
 a3(r96): [16..19]
 a4(r115): [20..21]
 a5(r95): [32..33]
 a6(r114): [34..35]
 a7(r113): [38..39]
 a8(r94): [38..41]
 a9(r93): [42..43]
 a10(r112): [44..45]
 a11(r111): [55..56]
 a12(r92): [64..65]
 a13(r110): [66..67]
 a14(r91): [70..75]
 a15(r108): [70..71]
 a16(r109): [72..73]
 a17(r107): [76..77]
 a18(r106): [90..91]
 a19(r90): [92..97]
 a20(r104): [92..93]
 a21(r105): [94..95]
 a22(r103): [98..99]
 a23(r88): [102..105]
 a24(r89): [102..103]
 a25(r87): [104..109]
 a26(r84): [104..119]
 a27(r102): [106..107]
 a28(r86): [110..111]
 a29(r85): [112..113]
 a30(r100): [114..117]
 a31(r101): [114..115]
 a32(r83): [120..121]
 a33(r99): [122..123]
Compressing live ranges: from 138 to 62 - 44%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r97): [58..59] [32..33] [8..9] [2..3]
 a2(r82): [60..61] [34..57] [10..31] [4..7]
 a3(r96): [4..5]
 a4(r115): [6..7]
 a5(r95): [10..11]
 a6(r114): [12..13]
 a7(r113): [14..15]
 a8(r94): [14..15]
 a9(r93): [16..17]
 a10(r112): [18..19]
 a11(r111): [20..21]
 a12(r92): [22..23]
 a13(r110): [24..25]
 a14(r91): [26..29]
 a15(r108): [26..27]
 a16(r109): [28..29]
 a17(r107): [30..31]
 a18(r106): [34..35]
 a19(r90): [36..39]
 a20(r104): [36..37]
 a21(r105): [38..39]
 a22(r103): [40..41]
 a23(r88): [42..45]
 a24(r89): [42..43]
 a25(r87): [44..47]
 a26(r84): [44..53]
 a27(r102): [46..47]
 a28(r86): [48..49]
 a29(r85): [50..51]
 a30(r100): [52..53]
 a31(r101): [52..53]
 a32(r83): [54..55]
 a33(r99): [56..57]
  pref0:a30(r100)<-hr2@1000
  pref1:a0(r98)<-hr0@1500
  pref2:a2(r82)<-hr3@1500
  regions=1, blocks=12, points=62
    allocnos=34 (big 0), copies=0, conflicts=0, ranges=40
Disposition:
    2:r82  l0     3   32:r83  l0     0   26:r84  l0     1   29:r85  l0     0
   28:r86  l0     0   25:r87  l0     2   23:r88  l0     0   24:r89  l0     1
   19:r90  l0     0   14:r91  l0     0   12:r92  l0     0    9:r93  l0     0
    8:r94  l0     1    5:r95  l0     0    3:r96  l0     0    1:r97  l0     0
    0:r98  l0     0   33:r99  l0     0   30:r100 l0     0   31:r101 l0     4
   27:r102 l0     0   22:r103 l0     0   20:r104 l0     1   21:r105 l0     1
   18:r106 l0     0   17:r107 l0     0   15:r108 l0     1   16:r109 l0     1
   13:r110 l0     0   11:r111 l0     0   10:r112 l0     0    7:r113 l0     0
    6:r114 l0     0    4:r115 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_close

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r3={2d,2u} r6={1d,11u} r7={7d,23u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,14u,2e} r17={16d,4u} r18={2d} r19={1d,18u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={4d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} 
;;    total ref usage 321{205d,114u,2e} in 64{62 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 97 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 97 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 97 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/open.c":24:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "fs/open.c":24:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 13)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 91 3 (set (reg:SI 97 [ _15 ])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":25:16 75 {*movsi_internal}
     (nil))
(jump_insn 91 10 92 3 (set (pc)
        (label_ref 82)) "fs/open.c":25:16 807 {jump}
     (nil)
 -> 82)
(barrier 92 91 13)
(code_label 13 92 14 4 4 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 99)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 83 [ current.0_1 ])
        (mem/f/c:SI (reg/f:SI 99) [1 current+0 S4 A32])) "fs/open.c":26:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 17 16 18 4 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 83 [ current.0_1 ])
                (const_int 636 [0x27c])) [3 current.0_1->close_on_exec+0 S4 A32])) "fs/open.c":26:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.0_1 ])
        (nil)))
(insn 18 17 19 4 (set (reg:SI 100)
        (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])) "fs/open.c":26:35 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:SI 101)
        (const_int 1 [0x1])) "fs/open.c":26:35 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:SI 85 [ _3 ])
                (ashift:SI (reg:SI 101)
                    (subreg:QI (reg:SI 100) 0)))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":26:35 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 101)
        (expr_list:REG_DEAD (reg:SI 100)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 21 20 22 4 (set (reg:SI 86 [ _4 ])
        (not:SI (reg:SI 85 [ _3 ]))) "fs/open.c":26:31 632 {*one_cmplsi2_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(insn 22 21 23 4 (set (reg:SI 87 [ _5 ])
        (reg:SI 86 [ _4 ])) "fs/open.c":26:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 23 22 24 4 (set (reg/f:SI 102)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":26:28 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 88 [ current.1_6 ])
        (mem/f/c:SI (reg/f:SI 102) [1 current+0 S4 A32])) "fs/open.c":26:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:SI 89 [ _7 ])
                (and:SI (reg:SI 84 [ _2 ])
                    (reg:SI 87 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":26:28 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 26 25 27 4 (set (mem:SI (plus:SI (reg/f:SI 88 [ current.1_6 ])
                (const_int 636 [0x27c])) [3 current.1_6->close_on_exec+0 S4 A32])
        (reg:SI 89 [ _7 ])) "fs/open.c":26:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_DEAD (reg/f:SI 88 [ current.1_6 ])
            (nil))))
(insn 27 26 28 4 (set (reg/f:SI 103)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":27:25 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:SI 90 [ current.2_8 ])
        (mem/f/c:SI (reg/f:SI 103) [1 current+0 S4 A32])) "fs/open.c":27:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 29 28 30 4 (set (reg:SI 105)
        (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])) "fs/open.c":27:16 75 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:SI 104)
                (plus:SI (reg:SI 105)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":27:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 31 30 32 4 (set (reg/f:SI 106)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 104)
                    (const_int 4 [0x4]))
                (reg/f:SI 90 [ current.2_8 ])) [10 current.2_8->filp[fd_18(D)]+0 S4 A32])) "fs/open.c":27:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (expr_list:REG_DEAD (reg/f:SI 90 [ current.2_8 ])
            (nil))))
(insn 32 31 33 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 filp+0 S4 A32])
        (reg/f:SI 106)) "fs/open.c":27:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [10 filp+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":27:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/open.c":27:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 93 5 (set (reg:SI 97 [ _15 ])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":28:16 75 {*movsi_internal}
     (nil))
(jump_insn 93 36 94 5 (set (pc)
        (label_ref 82)) "fs/open.c":28:16 807 {jump}
     (nil)
 -> 82)
(barrier 94 93 39)
(code_label 39 94 40 6 6 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:SI 107)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":29:12 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 91 [ current.3_9 ])
        (mem/f/c:SI (reg/f:SI 107) [1 current+0 S4 A32])) "fs/open.c":29:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 43 42 44 6 (set (reg:SI 109)
        (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])) "fs/open.c":29:23 75 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:SI 108)
                (plus:SI (reg:SI 109)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":29:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 45 44 46 6 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 108)
                    (const_int 4 [0x4]))
                (reg/f:SI 91 [ current.3_9 ])) [10 current.3_9->filp[fd_18(D)]+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":29:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg/f:SI 91 [ current.3_9 ])
            (nil))))
(insn 46 45 47 6 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 filp+0 S4 A32])) "fs/open.c":30:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:HI 92 [ _10 ])
        (mem:HI (plus:SI (reg/f:SI 110)
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])) "fs/open.c":30:13 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 92 [ _10 ])
            (const_int 0 [0]))) "fs/open.c":30:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (nil)))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/open.c":30:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":31:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 52 51 53 7 (set (reg/f:SI 111)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7987efd7fb40 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/open.c":31:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7987efd7fb40 *.LC0>)
        (nil)))
(insn 53 52 54 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 111)) "fs/open.c":31:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 54 53 55 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":31:9 75 {*movsi_internal}
     (nil))
(call_insn 55 54 56 7 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7987efd38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/open.c":31:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 56 55 57 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":31:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 57 56 58 8 7 (nil) [1 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 filp+0 S4 A32])) "fs/open.c":32:15 75 {*movsi_internal}
     (nil))
(insn 60 59 61 8 (set (reg:HI 93 [ _11 ])
        (mem:HI (plus:SI (reg/f:SI 112)
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])) "fs/open.c":32:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 61 60 62 8 (parallel [
            (set (reg:HI 94 [ _12 ])
                (plus:HI (reg:HI 93 [ _11 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":32:9 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 8 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 filp+0 S4 A32])) "fs/open.c":32:8 75 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (mem:HI (plus:SI (reg/f:SI 113)
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])
        (reg:HI 94 [ _12 ])) "fs/open.c":32:8 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
            (nil))))
(insn 64 63 65 8 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 filp+0 S4 A32])) "fs/open.c":32:15 75 {*movsi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:HI 95 [ _13 ])
        (mem:HI (plus:SI (reg/f:SI 114)
                (const_int 4 [0x4])) [8 filp_21->f_count+0 S2 A32])) "fs/open.c":32:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 66 65 67 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 95 [ _13 ])
            (const_int 0 [0]))) "fs/open.c":32:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
        (nil)))
(jump_insn 67 66 68 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "fs/open.c":32:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 72)
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 95 9 (set (reg:SI 97 [ _15 ])
        (const_int 0 [0])) "fs/open.c":33:16 75 {*movsi_internal}
     (nil))
(jump_insn 95 69 96 9 (set (pc)
        (label_ref 82)) "fs/open.c":33:16 807 {jump}
     (nil)
 -> 82)
(barrier 96 95 72)
(code_label 72 96 73 10 8 (nil) [1 uses])
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 filp+0 S4 A32])) "fs/open.c":34:5 75 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (reg/f:SI 96 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 115)
                (const_int 8 [0x8])) [9 filp_21->f_inode+0 S4 A32])) "fs/open.c":34:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 76 75 77 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":34:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 77 76 78 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 96 [ _14 ])) "fs/open.c":34:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 78 77 79 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":34:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 79 78 80 10 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":34:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 80 79 81 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":34:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 81 80 82 10 (set (reg:SI 97 [ _15 ])
        (const_int 0 [0])) "fs/open.c":35:12 75 {*movsi_internal}
     (nil))
(code_label 82 81 83 11 5 (nil) [3 uses])
(note 83 82 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 88 11 (set (reg:SI 98 [ <retval> ])
        (reg:SI 97 [ _15 ])) "fs/open.c":36:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (nil)))
(insn 88 84 89 11 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) "fs/open.c":36:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ <retval> ])
        (nil)))
(insn 89 88 0 11 (use (reg/i:SI 0 ax)) "fs/open.c":36:1 -1
     (nil))

;; Function sys_open (sys_open, funcdef_no=9, decl_uid=1426, cgraph_uid=10, symbol_order=9)

scanning new insn with uid = 287.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 32 n_edges 45 count 36 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 28 29 6 7 8 9 10 11 30 31 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 2
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 9
;;
;; Loop 1
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 29 4 }
;; 4 succs { 5 }
;; 5 succs { 3 28 }
;; 28 succs { 6 }
;; 29 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 27 }
;; 8 succs { 11 }
;; 9 succs { 31 10 }
;; 10 succs { 11 }
;; 11 succs { 9 30 }
;; 30 succs { 12 }
;; 31 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 27 }
;; 14 succs { 15 16 }
;; 15 succs { 27 }
;; 16 succs { 17 24 }
;; 17 succs { 18 21 }
;; 18 succs { 19 24 }
;; 19 succs { 20 24 }
;; 20 succs { 24 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a66 (r161,l0) best AREG, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r148,l0) best CREG, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r142,l0) best AREG, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a44 (r116,l0) best Q_REGS, allocno Q_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:20000
  a2(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a8(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:114000
  a13(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a17(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a30(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a35(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a36(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a37(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a45(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a55(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a56(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a58(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a59(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a60(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a64(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a65(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a66(r161,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a67(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a68(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a69(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a70(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a71(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a72(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a73(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a74(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a75(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a76(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a77(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a78(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a79(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a80(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a81(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a82(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a83(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a84(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a85(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a86(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a87(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a88(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a89(r148,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a90(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a91(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a92(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a93(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a94(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a95(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a96(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a97(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a98(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a99(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a100(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a101(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a102(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a103(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 259(l0): point = 0
   Insn 258(l0): point = 2
   Insn 254(l0): point = 4
   Insn 249(l0): point = 7
   Insn 248(l0): point = 9
   Insn 247(l0): point = 11
   Insn 246(l0): point = 13
   Insn 245(l0): point = 15
   Insn 244(l0): point = 17
   Insn 243(l0): point = 19
   Insn 242(l0): point = 21
   Insn 241(l0): point = 23
   Insn 240(l0): point = 25
   Insn 239(l0): point = 27
   Insn 238(l0): point = 29
   Insn 237(l0): point = 31
   Insn 236(l0): point = 33
   Insn 235(l0): point = 35
   Insn 234(l0): point = 37
   Insn 231(l0): point = 40
   Insn 230(l0): point = 42
   Insn 229(l0): point = 44
   Insn 228(l0): point = 46
   Insn 227(l0): point = 48
   Insn 226(l0): point = 50
   Insn 225(l0): point = 52
   Insn 224(l0): point = 54
   Insn 222(l0): point = 57
   Insn 221(l0): point = 59
   Insn 220(l0): point = 61
   Insn 219(l0): point = 63
   Insn 218(l0): point = 65
   Insn 217(l0): point = 67
   Insn 273(l0): point = 70
   Insn 212(l0): point = 72
   Insn 211(l0): point = 74
   Insn 210(l0): point = 76
   Insn 209(l0): point = 78
   Insn 208(l0): point = 80
   Insn 207(l0): point = 82
   Insn 206(l0): point = 84
   Insn 205(l0): point = 86
   Insn 204(l0): point = 88
   Insn 203(l0): point = 90
   Insn 202(l0): point = 92
   Insn 201(l0): point = 94
   Insn 200(l0): point = 96
   Insn 199(l0): point = 98
   Insn 197(l0): point = 101
   Insn 196(l0): point = 103
   Insn 193(l0): point = 105
   Insn 192(l0): point = 107
   Insn 191(l0): point = 109
   Insn 189(l0): point = 112
   Insn 188(l0): point = 114
   Insn 187(l0): point = 116
   Insn 186(l0): point = 118
   Insn 185(l0): point = 120
   Insn 271(l0): point = 123
   Insn 180(l0): point = 125
   Insn 179(l0): point = 127
   Insn 178(l0): point = 129
   Insn 177(l0): point = 131
   Insn 176(l0): point = 133
   Insn 175(l0): point = 135
   Insn 174(l0): point = 137
   Insn 173(l0): point = 139
   Insn 172(l0): point = 141
   Insn 171(l0): point = 143
   Insn 170(l0): point = 145
   Insn 169(l0): point = 147
   Insn 168(l0): point = 149
   Insn 167(l0): point = 151
   Insn 166(l0): point = 153
   Insn 165(l0): point = 155
   Insn 164(l0): point = 157
   Insn 163(l0): point = 159
   Insn 161(l0): point = 162
   Insn 160(l0): point = 164
   Insn 157(l0): point = 166
   Insn 156(l0): point = 168
   Insn 155(l0): point = 170
   Insn 153(l0): point = 173
   Insn 152(l0): point = 175
   Insn 151(l0): point = 177
   Insn 150(l0): point = 179
   Insn 149(l0): point = 181
   Insn 147(l0): point = 184
   Insn 146(l0): point = 186
   Insn 145(l0): point = 188
   Insn 144(l0): point = 190
   Insn 143(l0): point = 192
   Insn 141(l0): point = 195
   Insn 140(l0): point = 197
   Insn 139(l0): point = 199
   Insn 138(l0): point = 201
   Insn 137(l0): point = 203
   Insn 136(l0): point = 205
   Insn 269(l0): point = 208
   Insn 131(l0): point = 210
   Insn 130(l0): point = 212
   Insn 129(l0): point = 214
   Insn 128(l0): point = 216
   Insn 127(l0): point = 218
   Insn 126(l0): point = 220
   Insn 125(l0): point = 222
   Insn 124(l0): point = 224
   Insn 122(l0): point = 227
   Insn 121(l0): point = 229
   Insn 118(l0): point = 231
   Insn 117(l0): point = 233
   Insn 116(l0): point = 235
   Insn 115(l0): point = 237
   Insn 114(l0): point = 239
   Insn 113(l0): point = 241
   Insn 112(l0): point = 243
   Insn 111(l0): point = 245
   Insn 110(l0): point = 247
   Insn 109(l0): point = 249
   Insn 108(l0): point = 251
   Insn 107(l0): point = 253
   Insn 106(l0): point = 255
   Insn 105(l0): point = 257
   Insn 104(l0): point = 259
   Insn 103(l0): point = 261
   Insn 102(l0): point = 263
   Insn 101(l0): point = 265
   Insn 100(l0): point = 267
   Insn 99(l0): point = 269
   Insn 98(l0): point = 271
   Insn 97(l0): point = 273
   Insn 267(l0): point = 276
   Insn 92(l0): point = 278
   Insn 90(l0): point = 281
   Insn 89(l0): point = 283
   Insn 286(l0): point = 286
   Insn 282(l0): point = 289
   Insn 70(l0): point = 292
   Insn 69(l0): point = 294
   Insn 68(l0): point = 296
   Insn 67(l0): point = 298
   Insn 84(l0): point = 301
   Insn 83(l0): point = 303
   Insn 77(l0): point = 306
   Insn 76(l0): point = 308
   Insn 265(l0): point = 311
   Insn 63(l0): point = 313
   Insn 62(l0): point = 315
   Insn 61(l0): point = 317
   Insn 60(l0): point = 319
   Insn 59(l0): point = 321
   Insn 58(l0): point = 323
   Insn 57(l0): point = 325
   Insn 56(l0): point = 327
   Insn 55(l0): point = 329
   Insn 54(l0): point = 331
   Insn 53(l0): point = 333
   Insn 52(l0): point = 335
   Insn 51(l0): point = 337
   Insn 50(l0): point = 339
   Insn 49(l0): point = 341
   Insn 48(l0): point = 343
   Insn 263(l0): point = 346
   Insn 43(l0): point = 348
   Insn 41(l0): point = 351
   Insn 40(l0): point = 353
   Insn 280(l0): point = 356
   Insn 276(l0): point = 359
   Insn 22(l0): point = 362
   Insn 21(l0): point = 364
   Insn 20(l0): point = 366
   Insn 19(l0): point = 368
   Insn 18(l0): point = 370
   Insn 17(l0): point = 372
   Insn 16(l0): point = 374
   Insn 35(l0): point = 377
   Insn 34(l0): point = 379
   Insn 28(l0): point = 382
   Insn 261(l0): point = 385
   Insn 12(l0): point = 387
   Insn 11(l0): point = 389
   Insn 10(l0): point = 391
   Insn 9(l0): point = 393
   Insn 8(l0): point = 395
   Insn 7(l0): point = 397
   Insn 6(l0): point = 399
   Insn 5(l0): point = 401
   Insn 287(l0): point = 403
 a0(r142): [3..4]
 a1(r141): [346..348] [276..278] [208..210] [70..72] [5..7]
 a2(r185): [10..11]
 a3(r184): [14..15]
 a4(r140): [14..17]
 a5(r183): [20..21]
 a6(r182): [24..25]
 a7(r139): [24..27]
 a8(r181): [28..29]
 a9(r180): [32..33]
 a10(r138): [32..35]
 a11(r137): [36..37]
 a12(r82): [351..403] [281..345] [225..275] [87..207] [45..69]
 a13(r136): [47..50]
 a14(r135): [51..52]
 a15(r134): [53..54]
 a16(r133): [60..61]
 a17(r132): [62..63]
 a18(r131): [64..65]
 a19(r130): [66..67]
 a20(r179): [75..76]
 a21(r129): [79..84]
 a22(r177): [79..80]
 a23(r178): [81..82]
 a24(r176): [85..86]
 a25(r128): [95..98]
 a26(r127): [104..105]
 a27(r126): [106..107]
 a28(r175): [108..109]
 a29(r125): [115..116]
 a30(r124): [117..118]
 a31(r123): [119..120]
 a32(r174): [126..127]
 a33(r122): [126..135]
 a34(r173): [128..129]
 a35(r172): [130..131]
 a36(r171): [130..133]
 a37(r121): [132..137]
 a38(r119): [136..143]
 a39(r120): [138..139]
 a40(r170): [140..141]
 a41(r169): [144..145]
 a42(r117): [148..151]
 a43(r118): [148..149]
 a44(r116): [150..155]
 a45(r168): [152..153]
 a46(r115): [156..157]
 a47(r114): [158..159]
 a48(r113): [165..166]
 a49(r112): [167..168]
 a50(r167): [169..170]
 a51(r111): [176..177]
 a52(r110): [178..179]
 a53(r166): [180..181]
 a54(r109): [187..188]
 a55(r108): [189..190]
 a56(r107): [191..192]
 a57(r106): [198..199]
 a58(r105): [200..201]
 a59(r104): [202..203]
 a60(r103): [204..205]
 a61(r165): [213..214]
 a62(r102): [217..222]
 a63(r163): [217..218]
 a64(r164): [219..220]
 a65(r162): [223..224]
 a66(r161): [232..233]
 a67(r160): [248..249]
 a68(r99): [252..257]
 a69(r101): [252..253]
 a70(r100): [254..255]
 a71(r98): [258..271]
 a72(r158): [258..259]
 a73(r159): [260..261]
 a74(r155): [264..267]
 a75(r157): [264..265]
 a76(r156): [268..269]
 a77(r154): [272..273]
 a78(r97): [295..296]
 a79(r153): [297..298]
 a80(r151): [316..317]
 a81(r152): [318..319]
 a82(r95): [322..325]
 a83(r96): [322..323]
 a84(r94): [324..329]
 a85(r91): [324..339]
 a86(r150): [326..327]
 a87(r93): [330..331]
 a88(r92): [332..333]
 a89(r148): [334..337]
 a90(r149): [334..335]
 a91(r90): [340..341]
 a92(r147): [342..343]
 a93(r89): [365..366]
 a94(r88): [367..372]
 a95(r145): [367..368]
 a96(r146): [369..370]
 a97(r144): [373..374]
 a98(r87): [390..391]
 a99(r86): [392..393]
 a100(r85): [394..395]
 a101(r84): [396..397]
 a102(r83): [398..399]
 a103(r143): [400..401]
Compressing live ranges: from 406 to 184 - 45%
Ranges after the compression:
 a0(r142): [0..1]
 a1(r141): [162..163] [136..137] [108..109] [32..33] [2..3]
 a2(r185): [4..5]
 a3(r184): [6..7]
 a4(r140): [6..7]
 a5(r183): [8..9]
 a6(r182): [10..11]
 a7(r139): [10..11]
 a8(r181): [12..13]
 a9(r180): [14..15]
 a10(r138): [14..15]
 a11(r137): [16..17]
 a12(r82): [164..183] [138..161] [118..135] [42..107] [18..31]
 a13(r136): [18..19]
 a14(r135): [20..21]
 a15(r134): [22..23]
 a16(r133): [24..25]
 a17(r132): [26..27]
 a18(r131): [28..29]
 a19(r130): [30..31]
 a20(r179): [34..35]
 a21(r129): [36..39]
 a22(r177): [36..37]
 a23(r178): [38..39]
 a24(r176): [40..41]
 a25(r128): [42..43]
 a26(r127): [44..45]
 a27(r126): [46..47]
 a28(r175): [48..49]
 a29(r125): [50..51]
 a30(r124): [52..53]
 a31(r123): [54..55]
 a32(r174): [56..57]
 a33(r122): [56..63]
 a34(r173): [58..59]
 a35(r172): [60..61]
 a36(r171): [60..63]
 a37(r121): [62..65]
 a38(r119): [64..69]
 a39(r120): [66..67]
 a40(r170): [68..69]
 a41(r169): [70..71]
 a42(r117): [72..75]
 a43(r118): [72..73]
 a44(r116): [74..77]
 a45(r168): [76..77]
 a46(r115): [78..79]
 a47(r114): [80..81]
 a48(r113): [82..83]
 a49(r112): [84..85]
 a50(r167): [86..87]
 a51(r111): [88..89]
 a52(r110): [90..91]
 a53(r166): [92..93]
 a54(r109): [94..95]
 a55(r108): [96..97]
 a56(r107): [98..99]
 a57(r106): [100..101]
 a58(r105): [102..103]
 a59(r104): [104..105]
 a60(r103): [106..107]
 a61(r165): [110..111]
 a62(r102): [112..115]
 a63(r163): [112..113]
 a64(r164): [114..115]
 a65(r162): [116..117]
 a66(r161): [118..119]
 a67(r160): [120..121]
 a68(r99): [122..125]
 a69(r101): [122..123]
 a70(r100): [124..125]
 a71(r98): [126..133]
 a72(r158): [126..127]
 a73(r159): [128..129]
 a74(r155): [130..131]
 a75(r157): [130..131]
 a76(r156): [132..133]
 a77(r154): [134..135]
 a78(r97): [138..139]
 a79(r153): [140..141]
 a80(r151): [142..143]
 a81(r152): [144..145]
 a82(r95): [146..149]
 a83(r96): [146..147]
 a84(r94): [148..151]
 a85(r91): [148..157]
 a86(r150): [150..151]
 a87(r93): [152..153]
 a88(r92): [154..155]
 a89(r148): [156..157]
 a90(r149): [156..157]
 a91(r90): [158..159]
 a92(r147): [160..161]
 a93(r89): [164..165]
 a94(r88): [166..169]
 a95(r145): [166..167]
 a96(r146): [168..169]
 a97(r144): [170..171]
 a98(r87): [172..173]
 a99(r86): [174..175]
 a100(r85): [176..177]
 a101(r84): [178..179]
 a102(r83): [180..181]
 a103(r143): [182..183]
  pref0:a66(r161)<-hr0@1500
  pref1:a89(r148)<-hr2@1000
  pref2:a0(r142)<-hr0@1500
  pref3:a12(r82)<-hr3@1500
  regions=1, blocks=32, points=184
    allocnos=104 (big 0), copies=0, conflicts=0, ranges=112
Disposition:
   12:r82  l0     3  102:r83  l0     0  101:r84  l0     0  100:r85  l0     0
   99:r86  l0     0   98:r87  l0     0   94:r88  l0     0   93:r89  l0     0
   91:r90  l0     0   85:r91  l0     1   88:r92  l0     0   87:r93  l0     0
   84:r94  l0     2   82:r95  l0     0   83:r96  l0     1   78:r97  l0     0
   71:r98  l0     0   68:r99  l0     0   70:r100 l0     1   69:r101 l0     1
   62:r102 l0     0   60:r103 l0     0   59:r104 l0     0   58:r105 l0     0
   57:r106 l0     0   56:r107 l0     0   55:r108 l0     0   54:r109 l0     0
   52:r110 l0     0   51:r111 l0     0   49:r112 l0     0   48:r113 l0     0
   47:r114 l0     0   46:r115 l0     0   44:r116 l0     1   42:r117 l0     0
   43:r118 l0     1   38:r119 l0     0   39:r120 l0     1   37:r121 l0     1
   33:r122 l0     0   31:r123 l0     0   30:r124 l0     0   29:r125 l0     0
   27:r126 l0     0   26:r127 l0     0   25:r128 l0     0   21:r129 l0     0
   19:r130 l0     0   18:r131 l0     0   17:r132 l0     0   16:r133 l0     0
   15:r134 l0     0   14:r135 l0     0   13:r136 l0     0   11:r137 l0     0
   10:r138 l0     1    7:r139 l0     1    4:r140 l0     1    1:r141 l0     0
    0:r142 l0     0  103:r143 l0     0   97:r144 l0     0   95:r145 l0     1
   96:r146 l0     1   92:r147 l0     0   89:r148 l0     0   90:r149 l0     4
   86:r150 l0     0   80:r151 l0     0   81:r152 l0     0   79:r153 l0     0
   77:r154 l0     0   74:r155 l0     2   76:r156 l0     1   75:r157 l0     1
   72:r158 l0     1   73:r159 l0     1   67:r160 l0     0   66:r161 l0     0
   65:r162 l0     0   63:r163 l0     1   64:r164 l0     1   61:r165 l0     0
   53:r166 l0     0   50:r167 l0     0   45:r168 l0     0   41:r169 l0     0
   40:r170 l0     1   36:r171 l0     2   35:r172 l0     1   34:r173 l0     1
   32:r174 l0     1   28:r175 l0     0   24:r176 l0     0   22:r177 l0     1
   23:r178 l0     1   20:r179 l0     0    9:r180 l0     0    8:r181 l0     0
    6:r182 l0     0    5:r183 l0     0    3:r184 l0     0    2:r185 l0     0
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_open

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={3d,3u} r6={1d,31u} r7={12d,50u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,36u} r17={44d,14u} r18={3d} r19={1d,73u,5e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,18u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,2u} r99={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={5d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} 
;;    total ref usage 716{378d,333u,5e} in 188{185 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 287 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 287 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 287 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 143)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":44:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 83 [ current.4_1 ])
        (mem/f/c:SI (reg/f:SI 143) [1 current+0 S4 A32])) "fs/open.c":44:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (nil)))
(insn 7 6 8 2 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 83 [ current.4_1 ])
                (const_int 620 [0x26c])) [8 current.4_1->umask+0 S2 A32])) "fs/open.c":44:28 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.4_1 ])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 85 [ _3 ])
        (zero_extend:SI (reg:HI 84 [ _2 ]))) "fs/open.c":44:28 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(insn 9 8 10 2 (set (reg:SI 86 [ _4 ])
        (not:SI (reg:SI 85 [ _3 ]))) "fs/open.c":44:20 632 {*one_cmplsi2_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 87 [ _5 ])
                (and:SI (reg:SI 86 [ _4 ])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":44:18 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [6 mode+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [6 mode+0 S4 A32])
                    (reg:SI 87 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":44:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 261 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":45:13 75 {*movsi_internal}
     (nil))
(jump_insn 261 12 262 2 (set (pc)
        (label_ref 29)) "fs/open.c":45:5 807 {jump}
     (nil)
 -> 29)
(barrier 262 261 31)
(code_label 31 262 15 3 13 (nil) [1 uses])
(note 15 31 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg/f:SI 144)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":46:21 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 88 [ current.5_6 ])
        (mem/f/c:SI (reg/f:SI 144) [1 current+0 S4 A32])) "fs/open.c":46:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 144)
        (nil)))
(insn 18 17 19 3 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])) "fs/open.c":46:27 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (parallel [
            (set (reg:SI 145)
                (plus:SI (reg:SI 146)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":46:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 20 19 21 3 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 4 [0x4]))
                (reg/f:SI 88 [ current.5_6 ])) [10 current.5_6->filp[fd_62]+0 S4 A32])) "fs/open.c":46:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/f:SI 88 [ current.5_6 ])
            (nil))))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 89 [ _7 ])
            (const_int 0 [0]))) "fs/open.c":46:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(jump_insn 22 21 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 279)
            (pc))) "fs/open.c":46:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 279)
(note 27 22 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":45:34 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 29 28 30 5 10 (nil) [1 uses])
(note 30 29 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 30 35 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/open.c":45:21 11 {*cmpsi_1}
     (nil))
(jump_insn 35 34 275 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/open.c":45:21 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 31)
(note 275 35 276 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 276 275 277 28 (set (pc)
        (label_ref 36)) 807 {jump}
     (nil)
 -> 36)
(barrier 277 276 279)
(code_label 279 277 278 29 26 (nil) [1 uses])
(note 278 279 280 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 280 278 36 29 (const_int 0 [0]) "fs/open.c":47:13 843 {nop}
     (nil))
(code_label 36 280 37 6 12 (nil) [1 uses])
(note 37 36 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 37 41 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/open.c":48:8 11 {*cmpsi_1}
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "fs/open.c":48:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 46)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 263 7 (set (reg:SI 141 [ _63 ])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":49:16 75 {*movsi_internal}
     (nil))
(jump_insn 263 43 264 7 (set (pc)
        (label_ref 252)) "fs/open.c":49:16 807 {jump}
     (nil)
 -> 252)
(barrier 264 263 46)
(code_label 46 264 47 8 14 (nil) [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:SI 147)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (set (reg/f:SI 90 [ current.6_8 ])
        (mem/f/c:SI (reg/f:SI 147) [1 current+0 S4 A32])) "fs/open.c":50:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 50 49 51 8 (set (reg:SI 91 [ _9 ])
        (mem:SI (plus:SI (reg/f:SI 90 [ current.6_8 ])
                (const_int 636 [0x27c])) [3 current.6_8->close_on_exec+0 S4 A32])) "fs/open.c":50:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ current.6_8 ])
        (nil)))
(insn 51 50 52 8 (set (reg:SI 148)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])) "fs/open.c":50:35 75 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:SI 149)
        (const_int 1 [0x1])) "fs/open.c":50:35 75 {*movsi_internal}
     (nil))
(insn 53 52 54 8 (parallel [
            (set (reg:SI 92 [ _10 ])
                (ashift:SI (reg:SI 149)
                    (subreg:QI (reg:SI 148) 0)))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":50:35 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg:SI 148)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 54 53 55 8 (set (reg:SI 93 [ _11 ])
        (not:SI (reg:SI 92 [ _10 ]))) "fs/open.c":50:31 632 {*one_cmplsi2_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(insn 55 54 56 8 (set (reg:SI 94 [ _12 ])
        (reg:SI 93 [ _11 ])) "fs/open.c":50:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(insn 56 55 57 8 (set (reg/f:SI 150)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":50:28 75 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg/f:SI 95 [ current.7_13 ])
        (mem/f/c:SI (reg/f:SI 150) [1 current+0 S4 A32])) "fs/open.c":50:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 150)
        (nil)))
(insn 58 57 59 8 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 91 [ _9 ])
                    (reg:SI 94 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":50:28 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 59 58 60 8 (set (mem:SI (plus:SI (reg/f:SI 95 [ current.7_13 ])
                (const_int 636 [0x27c])) [3 current.7_13->close_on_exec+0 S4 A32])
        (reg:SI 96 [ _14 ])) "fs/open.c":50:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (expr_list:REG_DEAD (reg/f:SI 95 [ current.7_13 ])
            (nil))))
(insn 60 59 61 8 (set (reg:SI 152)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x7987f1664bd0 file_table>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":51:7 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg/f:SI 151)
        (reg:SI 152)) "fs/open.c":51:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x7987f1664bd0 file_table>)
            (nil))))
(insn 62 61 63 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])
        (reg/f:SI 151)) "fs/open.c":51:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 151)
        (nil)))
(insn 63 62 265 8 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":52:12 75 {*movsi_internal}
     (nil))
(jump_insn 265 63 266 8 (set (pc)
        (label_ref 78)) "fs/open.c":52:5 807 {jump}
     (nil)
 -> 78)
(barrier 266 265 80)
(code_label 80 266 66 9 19 (nil) [1 uses])
(note 66 80 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:SI 153)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":53:15 75 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (set (reg:HI 97 [ _15 ])
        (mem:HI (plus:SI (reg/f:SI 153)
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])) "fs/open.c":53:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))
(insn 69 68 70 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 97 [ _15 ])
            (const_int 0 [0]))) "fs/open.c":53:12 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 97 [ _15 ])
        (nil)))
(jump_insn 70 69 75 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 285)
            (pc))) "fs/open.c":53:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 285)
(note 75 70 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":52:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 77 76 78 10 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":52:36 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 78 77 79 11 16 (nil) [1 uses])
(note 79 78 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 79 84 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/open.c":52:19 11 {*cmpsi_1}
     (nil))
(jump_insn 84 83 281 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/open.c":52:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 80)
(note 281 84 282 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 282 281 283 30 (set (pc)
        (label_ref 85)) 807 {jump}
     (nil)
 -> 85)
(barrier 283 282 285)
(code_label 285 283 284 31 27 (nil) [1 uses])
(note 284 285 286 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 286 284 85 31 (const_int 0 [0]) "fs/open.c":54:13 843 {nop}
     (nil))
(code_label 85 286 86 12 18 (nil) [1 uses])
(note 86 85 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 86 90 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/open.c":55:8 11 {*cmpsi_1}
     (nil))
(jump_insn 90 89 91 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "fs/open.c":55:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 95)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 267 13 (set (reg:SI 141 [ _63 ])
        (const_int -22 [0xffffffffffffffea])) "fs/open.c":56:16 75 {*movsi_internal}
     (nil))
(jump_insn 267 92 268 13 (set (pc)
        (label_ref 252)) "fs/open.c":56:16 807 {jump}
     (nil)
 -> 252)
(barrier 268 267 95)
(code_label 95 268 96 14 20 (nil) [1 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg/f:SI 154)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":57:13 75 {*movsi_internal}
     (nil))
(insn 98 97 99 14 (set (reg/f:SI 98 [ current.8_16 ])
        (mem/f/c:SI (reg/f:SI 154) [1 current+0 S4 A32])) "fs/open.c":57:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 154)
        (nil)))
(insn 99 98 100 14 (set (reg:SI 156)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])) "fs/open.c":57:24 75 {*movsi_internal}
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg:SI 155)
                (plus:SI (reg:SI 156)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":57:24 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 101 100 102 14 (set (reg/f:SI 157)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":57:24 75 {*movsi_internal}
     (nil))
(insn 102 101 103 14 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 155)
                    (const_int 4 [0x4]))
                (reg/f:SI 98 [ current.8_16 ])) [10 current.8_16->filp[fd_62]+0 S4 A32])
        (reg/f:SI 157)) "fs/open.c":57:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_DEAD (reg:SI 155)
            (nil))))
(insn 103 102 104 14 (set (reg:SI 159)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])) "fs/open.c":57:19 75 {*movsi_internal}
     (nil))
(insn 104 103 105 14 (parallel [
            (set (reg:SI 158)
                (plus:SI (reg:SI 159)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":57:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 105 104 106 14 (set (reg/f:SI 99 [ _17 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 158)
                    (const_int 4 [0x4]))
                (reg/f:SI 98 [ current.8_16 ])) [10 current.8_16->filp[fd_62]+0 S4 A32])) "fs/open.c":57:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/f:SI 98 [ current.8_16 ])
            (nil))))
(insn 106 105 107 14 (set (reg:HI 100 [ _18 ])
        (mem:HI (plus:SI (reg/f:SI 99 [ _17 ])
                (const_int 4 [0x4])) [8 _17->f_count+0 S2 A32])) "fs/open.c":57:28 76 {*movhi_internal}
     (nil))
(insn 107 106 108 14 (parallel [
            (set (reg:HI 101 [ _20 ])
                (plus:HI (reg:HI 100 [ _18 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":57:37 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 14 (set (mem:HI (plus:SI (reg/f:SI 99 [ _17 ])
                (const_int 4 [0x4])) [8 _17->f_count+0 S2 A32])
        (reg:HI 101 [ _20 ])) "fs/open.c":57:37 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 101 [ _20 ])
        (expr_list:REG_DEAD (reg/f:SI 99 [ _17 ])
            (nil))))
(insn 109 108 110 14 (parallel [
            (set (reg:SI 160)
                (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":58:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 109 111 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 160)) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 111 110 112 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 mode+0 S4 A32])) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 112 111 113 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 flag+0 S4 A32])) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 113 112 114 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 filename+0 S4 A32])) "fs/open.c":58:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 114 113 115 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":58:14 75 {*movsi_internal}
     (nil))
(call_insn 115 114 116 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("open_namei") [flags 0x41]  <function_decl 0x7987efd10400 open_namei>) [0 open_namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":58:14 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 116 115 117 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":58:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 117 116 118 14 (set (reg:SI 161)
        (reg:SI 0 ax)) "fs/open.c":58:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 118 117 121 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
        (reg:SI 161)) "fs/open.c":58:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 121 118 122 14 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":58:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 14 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) "fs/open.c":58:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 134)
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 15 (set (reg/f:SI 162)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":59:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 125 124 126 15 (set (reg/f:SI 102 [ current.9_21 ])
        (mem/f/c:SI (reg/f:SI 162) [1 current+0 S4 A32])) "fs/open.c":59:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 162)
        (nil)))
(insn 126 125 127 15 (set (reg:SI 164)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])) "fs/open.c":59:27 75 {*movsi_internal}
     (nil))
(insn 127 126 128 15 (parallel [
            (set (reg:SI 163)
                (plus:SI (reg:SI 164)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":59:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 128 127 129 15 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 163)
                    (const_int 4 [0x4]))
                (reg/f:SI 102 [ current.9_21 ])) [10 current.9_21->filp[fd_62]+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":59:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg/f:SI 102 [ current.9_21 ])
            (nil))))
(insn 129 128 130 15 (set (reg/f:SI 165)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":60:20 75 {*movsi_internal}
     (nil))
(insn 130 129 131 15 (set (mem:HI (plus:SI (reg/f:SI 165)
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/open.c":60:20 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 165)
        (nil)))
(insn 131 130 269 15 (set (reg:SI 141 [ _63 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 i+0 S4 A32])) "fs/open.c":61:16 75 {*movsi_internal}
     (nil))
(jump_insn 269 131 270 15 (set (pc)
        (label_ref 252)) "fs/open.c":61:16 807 {jump}
     (nil)
 -> 252)
(barrier 270 269 134)
(code_label 134 270 135 16 21 (nil) [1 uses])
(note 135 134 136 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 16 (set (reg/f:SI 103 [ inode.10_22 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":64:9 75 {*movsi_internal}
     (nil))
(insn 137 136 138 16 (set (reg:HI 104 [ _23 ])
        (mem:HI (reg/f:SI 103 [ inode.10_22 ]) [8 inode.10_22->i_mode+0 S2 A32])) "fs/open.c":64:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ inode.10_22 ])
        (nil)))
(insn 138 137 139 16 (set (reg:SI 105 [ _24 ])
        (zero_extend:SI (reg:HI 104 [ _23 ]))) "fs/open.c":64:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 104 [ _23 ])
        (nil)))
(insn 139 138 140 16 (parallel [
            (set (reg:SI 106 [ _25 ])
                (and:SI (reg:SI 105 [ _24 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":64:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ _25 ])
            (const_int 8192 [0x2000]))) "fs/open.c":64:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 106 [ _25 ])
        (nil)))
(jump_insn 141 140 142 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":64:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 215)
(note 142 141 143 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 17 (set (reg/f:SI 107 [ inode.11_26 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":65:13 75 {*movsi_internal}
     (nil))
(insn 144 143 145 17 (set (reg:HI 108 [ _27 ])
        (mem:HI (plus:SI (reg/f:SI 107 [ inode.11_26 ])
                (const_int 14 [0xe])) [8 inode.11_26->i_zone[0]+0 S2 A16])) "fs/open.c":65:13 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107 [ inode.11_26 ])
        (nil)))
(insn 145 144 146 17 (parallel [
            (set (reg:HI 109 [ _28 ])
                (lshiftrt:HI (reg:HI 108 [ _27 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":65:37 711 {*lshrhi3_1}
     (expr_list:REG_DEAD (reg:HI 108 [ _27 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 146 145 147 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 109 [ _28 ])
            (const_int 4 [0x4]))) "fs/open.c":65:12 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 109 [ _28 ])
        (nil)))
(jump_insn 147 146 148 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "fs/open.c":65:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 183)
(note 148 147 149 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 18 (set (reg/f:SI 166)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":66:24 75 {*movsi_internal}
     (nil))
(insn 150 149 151 18 (set (reg/f:SI 110 [ current.12_29 ])
        (mem/f/c:SI (reg/f:SI 166) [1 current+0 S4 A32])) "fs/open.c":66:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))
(insn 151 150 152 18 (set (reg:SI 111 [ _30 ])
        (mem:SI (plus:SI (reg/f:SI 110 [ current.12_29 ])
                (const_int 572 [0x23c])) [3 current.12_29->leader+0 S4 A32])) "fs/open.c":66:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ current.12_29 ])
        (nil)))
(insn 152 151 153 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ _30 ])
            (const_int 0 [0]))) "fs/open.c":66:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 111 [ _30 ])
        (nil)))
(jump_insn 153 152 154 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":66:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 215)
(note 154 153 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 19 (set (reg/f:SI 167)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":66:43 75 {*movsi_internal}
     (nil))
(insn 156 155 157 19 (set (reg/f:SI 112 [ current.13_31 ])
        (mem/f/c:SI (reg/f:SI 167) [1 current+0 S4 A32])) "fs/open.c":66:43 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 167)
        (nil)))
(insn 157 156 160 19 (set (reg:SI 113 [ _32 ])
        (mem:SI (plus:SI (reg/f:SI 112 [ current.13_31 ])
                (const_int 616 [0x268])) [6 current.13_31->tty+0 S4 A32])) "fs/open.c":66:43 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112 [ current.13_31 ])
        (nil)))
(insn 160 157 161 19 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ _32 ])
            (const_int 0 [0]))) "fs/open.c":66:33 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 113 [ _32 ])
        (nil)))
(jump_insn 161 160 162 19 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":66:33 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 215)
(note 162 161 163 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 20 (set (reg/f:SI 114 [ inode.14_33 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":67:32 75 {*movsi_internal}
     (nil))
(insn 164 163 165 20 (set (reg:HI 115 [ _34 ])
        (mem:HI (plus:SI (reg/f:SI 114 [ inode.14_33 ])
                (const_int 14 [0xe])) [8 inode.14_33->i_zone[0]+0 S2 A16])) "fs/open.c":67:32 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114 [ inode.14_33 ])
        (nil)))
(insn 165 164 166 20 (set (reg:SI 116 [ _35 ])
        (zero_extend:SI (reg:HI 115 [ _34 ]))) "fs/open.c":67:32 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 115 [ _34 ])
        (nil)))
(insn 166 165 167 20 (set (reg/f:SI 168)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":67:24 75 {*movsi_internal}
     (nil))
(insn 167 166 168 20 (set (reg/f:SI 117 [ current.15_36 ])
        (mem/f/c:SI (reg/f:SI 168) [1 current+0 S4 A32])) "fs/open.c":67:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 168)
        (nil)))
(insn 168 167 169 20 (set (reg:SI 118 [ _37 ])
        (zero_extend:SI (subreg:QI (reg:SI 116 [ _35 ]) 0))) "fs/open.c":67:32 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 116 [ _35 ])
        (nil)))
(insn 169 168 170 20 (set (mem:SI (plus:SI (reg/f:SI 117 [ current.15_36 ])
                (const_int 616 [0x268])) [6 current.15_36->tty+0 S4 A32])
        (reg:SI 118 [ _37 ])) "fs/open.c":67:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118 [ _37 ])
        (expr_list:REG_DEAD (reg/f:SI 117 [ current.15_36 ])
            (nil))))
(insn 170 169 171 20 (set (reg/f:SI 169)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":68:55 75 {*movsi_internal}
     (nil))
(insn 171 170 172 20 (set (reg/f:SI 119 [ current.16_38 ])
        (mem/f/c:SI (reg/f:SI 169) [1 current+0 S4 A32])) "fs/open.c":68:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 169)
        (nil)))
(insn 172 171 173 20 (set (reg/f:SI 170)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":68:34 75 {*movsi_internal}
     (nil))
(insn 173 172 174 20 (set (reg/f:SI 120 [ current.17_39 ])
        (mem/f/c:SI (reg/f:SI 170) [1 current+0 S4 A32])) "fs/open.c":68:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 170)
        (nil)))
(insn 174 173 175 20 (set (reg:SI 121 [ _40 ])
        (mem:SI (plus:SI (reg/f:SI 120 [ current.17_39 ])
                (const_int 616 [0x268])) [6 current.17_39->tty+0 S4 A32])) "fs/open.c":68:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120 [ current.17_39 ])
        (nil)))
(insn 175 174 176 20 (set (reg:SI 122 [ _41 ])
        (mem:SI (plus:SI (reg/f:SI 119 [ current.16_38 ])
                (const_int 564 [0x234])) [3 current.16_38->pgrp+0 S4 A32])) "fs/open.c":68:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119 [ current.16_38 ])
        (nil)))
(insn 176 175 177 20 (set (reg/f:SI 171)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("tty_table") [flags 0x40]  <var_decl 0x7987efd2e480 tty_table>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":68:46 75 {*movsi_internal}
     (nil))
(insn 177 176 178 20 (parallel [
            (set (reg:SI 172)
                (mult:SI (reg:SI 121 [ _40 ])
                    (const_int 3168 [0xc60])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":68:46 408 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 121 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 178 177 179 20 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg/f:SI 171)
                    (reg:SI 172)))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":68:46 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg/f:SI 171)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 179 178 180 20 (parallel [
            (set (reg/f:SI 174)
                (plus:SI (reg:SI 173)
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":68:46 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 271 20 (set (mem:SI (reg/f:SI 174) [6 tty_table[_40].pgrp+0 S4 A32])
        (reg:SI 122 [ _41 ])) "fs/open.c":68:46 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 174)
        (expr_list:REG_DEAD (reg:SI 122 [ _41 ])
            (nil))))
(jump_insn 271 180 272 20 (set (pc)
        (label_ref 215)) 807 {jump}
     (nil)
 -> 215)
(barrier 272 271 183)
(code_label 183 272 184 21 23 (nil) [1 uses])
(note 184 183 185 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 21 (set (reg/f:SI 123 [ inode.18_42 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":70:20 75 {*movsi_internal}
     (nil))
(insn 186 185 187 21 (set (reg:HI 124 [ _43 ])
        (mem:HI (plus:SI (reg/f:SI 123 [ inode.18_42 ])
                (const_int 14 [0xe])) [8 inode.18_42->i_zone[0]+0 S2 A16])) "fs/open.c":70:20 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123 [ inode.18_42 ])
        (nil)))
(insn 187 186 188 21 (parallel [
            (set (reg:HI 125 [ _44 ])
                (lshiftrt:HI (reg:HI 124 [ _43 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":70:44 711 {*lshrhi3_1}
     (expr_list:REG_DEAD (reg:HI 124 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 188 187 189 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 125 [ _44 ])
            (const_int 5 [0x5]))) "fs/open.c":70:19 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 125 [ _44 ])
        (nil)))
(jump_insn 189 188 190 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":70:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 215)
(note 190 189 191 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 22 (set (reg/f:SI 175)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":71:24 75 {*movsi_internal}
     (nil))
(insn 192 191 193 22 (set (reg/f:SI 126 [ current.19_45 ])
        (mem/f/c:SI (reg/f:SI 175) [1 current+0 S4 A32])) "fs/open.c":71:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 175)
        (nil)))
(insn 193 192 196 22 (set (reg:SI 127 [ _46 ])
        (mem:SI (plus:SI (reg/f:SI 126 [ current.19_45 ])
                (const_int 616 [0x268])) [6 current.19_45->tty+0 S4 A32])) "fs/open.c":71:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126 [ current.19_45 ])
        (nil)))
(insn 196 193 197 22 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 127 [ _46 ])
            (const_int 0 [0]))) "fs/open.c":71:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 127 [ _46 ])
        (nil)))
(jump_insn 197 196 198 22 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "fs/open.c":71:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 215)
(note 198 197 199 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 23 (set (reg/f:SI 128 [ inode.20_47 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":72:17 75 {*movsi_internal}
     (nil))
(insn 200 199 201 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":72:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 201 200 202 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 128 [ inode.20_47 ])) "fs/open.c":72:17 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 128 [ inode.20_47 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 202 201 203 23 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":72:17 75 {*movsi_internal}
     (nil))
(call_insn 203 202 204 23 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":72:17 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 204 203 205 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":72:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 205 204 206 23 (set (reg/f:SI 176)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":73:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 206 205 207 23 (set (reg/f:SI 129 [ current.21_48 ])
        (mem/f/c:SI (reg/f:SI 176) [1 current+0 S4 A32])) "fs/open.c":73:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 176)
        (nil)))
(insn 207 206 208 23 (set (reg:SI 178)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])) "fs/open.c":73:35 75 {*movsi_internal}
     (nil))
(insn 208 207 209 23 (parallel [
            (set (reg:SI 177)
                (plus:SI (reg:SI 178)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":73:35 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 209 208 210 23 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 177)
                    (const_int 4 [0x4]))
                (reg/f:SI 129 [ current.21_48 ])) [10 current.21_48->filp[fd_62]+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":73:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_DEAD (reg/f:SI 129 [ current.21_48 ])
            (nil))))
(insn 210 209 211 23 (set (reg/f:SI 179)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":74:28 75 {*movsi_internal}
     (nil))
(insn 211 210 212 23 (set (mem:HI (plus:SI (reg/f:SI 179)
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/open.c":74:28 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))
(insn 212 211 273 23 (set (reg:SI 141 [ _63 ])
        (const_int -1 [0xffffffffffffffff])) "fs/open.c":75:24 75 {*movsi_internal}
     (nil))
(jump_insn 273 212 274 23 (set (pc)
        (label_ref 252)) "fs/open.c":75:24 807 {jump}
     (nil)
 -> 252)
(barrier 274 273 215)
(code_label 215 274 216 24 22 (nil) [6 uses])
(note 216 215 217 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 24 (set (reg/f:SI 130 [ inode.22_49 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":79:9 75 {*movsi_internal}
     (nil))
(insn 218 217 219 24 (set (reg:HI 131 [ _50 ])
        (mem:HI (reg/f:SI 130 [ inode.22_49 ]) [8 inode.22_49->i_mode+0 S2 A32])) "fs/open.c":79:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130 [ inode.22_49 ])
        (nil)))
(insn 219 218 220 24 (set (reg:SI 132 [ _51 ])
        (zero_extend:SI (reg:HI 131 [ _50 ]))) "fs/open.c":79:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 131 [ _50 ])
        (nil)))
(insn 220 219 221 24 (parallel [
            (set (reg:SI 133 [ _52 ])
                (and:SI (reg:SI 132 [ _51 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":79:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 132 [ _51 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 221 220 222 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ _52 ])
            (const_int 24576 [0x6000]))) "fs/open.c":79:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 133 [ _52 ])
        (nil)))
(jump_insn 222 221 223 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) "fs/open.c":79:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 232)
(note 223 222 224 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 25 (set (reg/f:SI 134 [ inode.23_53 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":80:32 75 {*movsi_internal}
     (nil))
(insn 225 224 226 25 (set (reg:HI 135 [ _54 ])
        (mem:HI (plus:SI (reg/f:SI 134 [ inode.23_53 ])
                (const_int 14 [0xe])) [8 inode.23_53->i_zone[0]+0 S2 A16])) "fs/open.c":80:40 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134 [ inode.23_53 ])
        (nil)))
(insn 226 225 227 25 (set (reg:SI 136 [ _55 ])
        (zero_extend:SI (reg:HI 135 [ _54 ]))) "fs/open.c":80:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 135 [ _54 ])
        (nil)))
(insn 227 226 228 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":80:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 228 227 229 25 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 136 [ _55 ])) "fs/open.c":80:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 136 [ _55 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 229 228 230 25 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":80:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 230 229 231 25 (call (mem:QI (symbol_ref:SI ("check_disk_change") [flags 0x41]  <function_decl 0x7987efd0ea00 check_disk_change>) [0 check_disk_change S1 A8])
        (const_int 16 [0x10])) "fs/open.c":80:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 231 230 232 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":80:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 232 231 233 26 24 (nil) [1 uses])
(note 233 232 234 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 26 (set (reg/f:SI 137 [ inode.24_56 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":81:23 75 {*movsi_internal}
     (nil))
(insn 235 234 236 26 (set (reg:HI 138 [ _57 ])
        (mem:HI (reg/f:SI 137 [ inode.24_56 ]) [8 inode.24_56->i_mode+0 S2 A32])) "fs/open.c":81:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 137 [ inode.24_56 ])
        (nil)))
(insn 236 235 237 26 (set (reg/f:SI 180)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":81:16 75 {*movsi_internal}
     (nil))
(insn 237 236 238 26 (set (mem:HI (reg/f:SI 180) [8 f_60->f_mode+0 S2 A32])
        (reg:HI 138 [ _57 ])) "fs/open.c":81:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 180)
        (expr_list:REG_DEAD (reg:HI 138 [ _57 ])
            (nil))))
(insn 238 237 239 26 (set (reg:SI 181)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 flag+0 S4 A32])) "fs/open.c":82:16 75 {*movsi_internal}
     (nil))
(insn 239 238 240 26 (set (reg:HI 139 [ _58 ])
        (subreg:HI (reg:SI 181) 0)) "fs/open.c":82:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 181)
        (nil)))
(insn 240 239 241 26 (set (reg/f:SI 182)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":82:16 75 {*movsi_internal}
     (nil))
(insn 241 240 242 26 (set (mem:HI (plus:SI (reg/f:SI 182)
                (const_int 2 [0x2])) [8 f_60->f_flags+0 S2 A16])
        (reg:HI 139 [ _58 ])) "fs/open.c":82:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_DEAD (reg:HI 139 [ _58 ])
            (nil))))
(insn 242 241 243 26 (set (reg/f:SI 183)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":83:16 75 {*movsi_internal}
     (nil))
(insn 243 242 244 26 (set (mem:HI (plus:SI (reg/f:SI 183)
                (const_int 4 [0x4])) [8 f_60->f_count+0 S2 A32])
        (const_int 1 [0x1])) "fs/open.c":83:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 183)
        (nil)))
(insn 244 243 245 26 (set (reg/f:SI 140 [ inode.25_59 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 inode+0 S4 A32])) "fs/open.c":84:16 75 {*movsi_internal}
     (nil))
(insn 245 244 246 26 (set (reg/f:SI 184)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":84:16 75 {*movsi_internal}
     (nil))
(insn 246 245 247 26 (set (mem/f:SI (plus:SI (reg/f:SI 184)
                (const_int 8 [0x8])) [9 f_60->f_inode+0 S4 A32])
        (reg/f:SI 140 [ inode.25_59 ])) "fs/open.c":84:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 184)
        (expr_list:REG_DEAD (reg/f:SI 140 [ inode.25_59 ])
            (nil))))
(insn 247 246 248 26 (set (reg/f:SI 185)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [10 f+0 S4 A32])) "fs/open.c":85:16 75 {*movsi_internal}
     (nil))
(insn 248 247 249 26 (set (mem:SI (plus:SI (reg/f:SI 185)
                (const_int 12 [0xc])) [3 f_60->f_pos+0 S4 A32])
        (const_int 0 [0])) "fs/open.c":85:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 185)
        (nil)))
(insn 249 248 252 26 (set (reg:SI 141 [ _63 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 fd+0 S4 A32])) "fs/open.c":86:12 75 {*movsi_internal}
     (nil))
(code_label 252 249 253 27 25 (nil) [4 uses])
(note 253 252 254 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 258 27 (set (reg:SI 142 [ <retval> ])
        (reg:SI 141 [ _63 ])) "fs/open.c":87:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141 [ _63 ])
        (nil)))
(insn 258 254 259 27 (set (reg/i:SI 0 ax)
        (reg:SI 142 [ <retval> ])) "fs/open.c":87:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142 [ <retval> ])
        (nil)))
(insn 259 258 0 27 (use (reg/i:SI 0 ax)) "fs/open.c":87:1 -1
     (nil))

;; Function sys_creat (sys_creat, funcdef_no=10, decl_uid=1442, cgraph_uid=11, symbol_order=10)

scanning new insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 5(l0): point = 18
   Insn 21(l0): point = 20
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [20..20]
Compressing live ranges: from 23 to 5 - 21%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  pref1:a1(r83)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_creat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={6d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={4d} r18={1d} r19={1d,2u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 110{88d,22u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 21 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":91:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 mode+0 S4 A32])) "fs/open.c":91:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 576 [0x240])) "fs/open.c":91:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 pathname+0 S4 A32])) "fs/open.c":91:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_open") [flags 0x3]  <function_decl 0x7987efd5a200 sys_open>) [0 sys_open S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":91:12 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":91:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 14 2 (set (reg:SI 83 [ _5 ])
        (reg:SI 0 ax)) "fs/open.c":91:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 11 18 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _5 ])) "fs/open.c":91:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _5 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/open.c":92:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:SI 0 ax)) "fs/open.c":92:1 -1
     (nil))

;; Function sys_chmod (sys_chmod, funcdef_no=11, decl_uid=1446, cgraph_uid=12, symbol_order=11)

scanning new insn with uid = 76.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 11 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8000
  a2(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:36000
  a3(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a8(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a9(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a10(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a13(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 70(l0): point = 0
   Insn 69(l0): point = 2
   Insn 65(l0): point = 4
   Insn 62(l0): point = 7
   Insn 61(l0): point = 9
   Insn 60(l0): point = 11
   Insn 59(l0): point = 13
   Insn 58(l0): point = 15
   Insn 57(l0): point = 17
   Insn 56(l0): point = 19
   Insn 55(l0): point = 21
   Insn 54(l0): point = 23
   Insn 53(l0): point = 25
   Insn 52(l0): point = 27
   Insn 51(l0): point = 29
   Insn 50(l0): point = 31
   Insn 49(l0): point = 33
   Insn 48(l0): point = 35
   Insn 47(l0): point = 37
   Insn 46(l0): point = 39
   Insn 45(l0): point = 41
   Insn 44(l0): point = 43
   Insn 74(l0): point = 46
   Insn 39(l0): point = 48
   Insn 38(l0): point = 50
   Insn 37(l0): point = 52
   Insn 36(l0): point = 54
   Insn 35(l0): point = 56
   Insn 34(l0): point = 58
   Insn 32(l0): point = 61
   Insn 31(l0): point = 63
   Insn 30(l0): point = 65
   Insn 29(l0): point = 67
   Insn 28(l0): point = 69
   Insn 26(l0): point = 72
   Insn 25(l0): point = 74
   Insn 24(l0): point = 76
   Insn 23(l0): point = 78
   Insn 22(l0): point = 80
   Insn 21(l0): point = 82
   Insn 20(l0): point = 84
   Insn 72(l0): point = 87
   Insn 15(l0): point = 89
   Insn 13(l0): point = 92
   Insn 12(l0): point = 94
   Insn 11(l0): point = 96
   Insn 10(l0): point = 98
   Insn 9(l0): point = 100
   Insn 8(l0): point = 102
   Insn 7(l0): point = 104
   Insn 6(l0): point = 106
   Insn 5(l0): point = 108
   Insn 76(l0): point = 110
 a0(r96): [3..4]
 a1(r95): [87..89] [46..48] [5..7]
 a2(r82): [92..110] [55..86] [14..45]
 a3(r104): [20..21]
 a4(r103): [24..25]
 a5(r94): [24..27]
 a6(r93): [28..29]
 a7(r92): [30..31]
 a8(r89): [30..39]
 a9(r91): [32..33]
 a10(r90): [34..35]
 a11(r102): [36..37]
 a12(r88): [40..41]
 a13(r101): [42..43]
 a14(r87): [64..65]
 a15(r86): [66..67]
 a16(r100): [68..69]
 a17(r85): [75..76]
 a18(r84): [75..80]
 a19(r99): [77..78]
 a20(r83): [81..82]
 a21(r98): [83..84]
 a22(r97): [97..98]
Compressing live ranges: from 113 to 42 - 37%
Ranges after the compression:
 a0(r96): [0..1]
 a1(r95): [38..39] [22..23] [2..3]
 a2(r82): [40..41] [24..37] [4..21]
 a3(r104): [4..5]
 a4(r103): [6..7]
 a5(r94): [6..7]
 a6(r93): [8..9]
 a7(r92): [10..11]
 a8(r89): [10..17]
 a9(r91): [12..13]
 a10(r90): [14..15]
 a11(r102): [16..17]
 a12(r88): [18..19]
 a13(r101): [20..21]
 a14(r87): [24..25]
 a15(r86): [26..27]
 a16(r100): [28..29]
 a17(r85): [30..31]
 a18(r84): [30..33]
 a19(r99): [32..33]
 a20(r83): [34..35]
 a21(r98): [36..37]
 a22(r97): [40..41]
  pref0:a22(r97)<-hr0@1500
  pref1:a0(r96)<-hr0@1500
  pref2:a2(r82)<-hr3@3000
  regions=1, blocks=9, points=42
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=27
Disposition:
    2:r82  l0     3   20:r83  l0     0   18:r84  l0     1   17:r85  l0     0
   15:r86  l0     0   14:r87  l0     0   12:r88  l0     0    8:r89  l0     1
   10:r90  l0     0    9:r91  l0     0    7:r92  l0     0    6:r93  l0     0
    5:r94  l0     1    1:r95  l0     0    0:r96  l0     0   22:r97  l0     0
   21:r98  l0     0   19:r99  l0     0   16:r100 l0     0   13:r101 l0     0
   11:r102 l0     0    4:r103 l0     0    3:r104 l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_chmod

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={3d,3u} r6={1d,8u} r7={10d,26u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,9u} r17={16d,3u} r18={3d} r19={1d,16u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={3d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} 
;;    total ref usage 360{265d,95u,0e} in 53{50 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 76 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 76 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 76 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":98:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 filename+0 S4 A32])) "fs/open.c":98:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":98:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7987efd10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":98:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":98:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 97)
        (reg:SI 0 ax)) "fs/open.c":98:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
        (reg:SI 97)) "fs/open.c":98:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":98:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":98:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 72 3 (set (reg:SI 95 [ _13 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":99:16 75 {*movsi_internal}
     (nil))
(jump_insn 72 15 73 3 (set (pc)
        (label_ref 63)) "fs/open.c":99:16 807 {jump}
     (nil)
 -> 63)
(barrier 73 72 18)
(code_label 18 73 19 4 31 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 98)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":100:17 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 83 [ current.26_1 ])
        (mem/f/c:SI (reg/f:SI 98) [1 current+0 S4 A32])) "fs/open.c":100:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98)
        (nil)))
(insn 22 21 23 4 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 83 [ current.26_1 ])
                (const_int 578 [0x242])) [8 current.26_1->euid+0 S2 A16])) "fs/open.c":100:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.26_1 ])
        (nil)))
(insn 23 22 24 4 (set (reg/f:SI 99)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":100:32 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 99)
                (const_int 2 [0x2])) [8 inode_18->i_uid+0 S2 A16])) "fs/open.c":100:32 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 84 [ _2 ])
            (reg:HI 85 [ _3 ]))) "fs/open.c":100:8 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
            (nil))))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/open.c":100:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 100)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":100:45 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 86 [ current.27_4 ])
        (mem/f/c:SI (reg/f:SI 100) [1 current+0 S4 A32])) "fs/open.c":100:45 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (nil)))
(insn 30 29 31 5 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 86 [ current.27_4 ])
                (const_int 578 [0x242])) [8 current.27_4->euid+0 S2 A16])) "fs/open.c":100:45 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ current.27_4 ])
        (nil)))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 87 [ _5 ])
            (const_int 0 [0]))) "fs/open.c":100:41 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/open.c":100:41 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":101:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 35 34 36 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":101:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 36 35 37 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":101:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 37 36 38 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":101:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 38 37 39 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":101:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 39 38 74 6 (set (reg:SI 95 [ _13 ])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":102:16 75 {*movsi_internal}
     (nil))
(jump_insn 74 39 75 6 (set (pc)
        (label_ref 63)) "fs/open.c":102:16 807 {jump}
     (nil)
 -> 63)
(barrier 75 74 42)
(code_label 42 75 43 7 33 (nil) [2 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (reg:SI 101)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 mode+0 S4 A32])) "fs/open.c":104:27 75 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:HI 88 [ _6 ])
        (subreg:HI (reg:SI 101) 0)) "fs/open.c":104:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 101)
        (nil)))
(insn 46 45 47 7 (parallel [
            (set (reg:HI 89 [ _7 ])
                (and:HI (reg:HI 88 [ _6 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":104:27 489 {*andhi_1}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 7 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":104:44 75 {*movsi_internal}
     (nil))
(insn 48 47 49 7 (set (reg:HI 90 [ _8 ])
        (mem:HI (reg/f:SI 102) [8 inode_18->i_mode+0 S2 A32])) "fs/open.c":104:44 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 49 48 50 7 (set (reg:HI 91 [ _9 ])
        (reg:HI 90 [ _8 ])) "fs/open.c":104:44 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 50 49 51 7 (parallel [
            (set (reg:HI 92 [ _10 ])
                (and:HI (reg:HI 91 [ _9 ])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":104:53 489 {*andhi_1}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 7 (parallel [
            (set (reg:HI 93 [ _11 ])
                (ior:HI (reg:HI 89 [ _7 ])
                    (reg:HI 92 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":104:36 518 {*iorhi_1}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 52 51 53 7 (set (reg:HI 94 [ _12 ])
        (reg:HI 93 [ _11 ])) "fs/open.c":104:36 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
        (nil)))
(insn 53 52 54 7 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":104:19 75 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (mem:HI (reg/f:SI 103) [8 inode_18->i_mode+0 S2 A32])
        (reg:HI 94 [ _12 ])) "fs/open.c":104:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
            (nil))))
(insn 55 54 56 7 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":105:19 75 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (mem:QI (plus:SI (reg/f:SI 104)
                (const_int 51 [0x33])) [0 inode_18->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/open.c":105:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 57 56 58 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":106:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 58 57 59 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":106:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 59 58 60 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":106:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 60 59 61 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":106:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 61 60 62 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":106:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 62 61 63 7 (set (reg:SI 95 [ _13 ])
        (const_int 0 [0])) "fs/open.c":107:12 75 {*movsi_internal}
     (nil))
(code_label 63 62 64 8 32 (nil) [2 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 69 8 (set (reg:SI 96 [ <retval> ])
        (reg:SI 95 [ _13 ])) "fs/open.c":108:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (nil)))
(insn 69 65 70 8 (set (reg/i:SI 0 ax)
        (reg:SI 96 [ <retval> ])) "fs/open.c":108:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ <retval> ])
        (nil)))
(insn 70 69 0 8 (use (reg/i:SI 0 ax)) "fs/open.c":108:1 -1
     (nil))

;; Function sys_chown (sys_chown, funcdef_no=12, decl_uid=1452, cgraph_uid=13, symbol_order=12)

scanning new insn with uid = 65.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a5 (r86,l0) best Q_REGS, allocno Q_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8000
  a2(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:30000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a9(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 59(l0): point = 0
   Insn 58(l0): point = 2
   Insn 54(l0): point = 4
   Insn 51(l0): point = 7
   Insn 50(l0): point = 9
   Insn 49(l0): point = 11
   Insn 48(l0): point = 13
   Insn 47(l0): point = 15
   Insn 46(l0): point = 17
   Insn 45(l0): point = 19
   Insn 44(l0): point = 21
   Insn 43(l0): point = 23
   Insn 42(l0): point = 25
   Insn 41(l0): point = 27
   Insn 40(l0): point = 29
   Insn 39(l0): point = 31
   Insn 38(l0): point = 33
   Insn 37(l0): point = 35
   Insn 36(l0): point = 37
   Insn 63(l0): point = 40
   Insn 31(l0): point = 42
   Insn 30(l0): point = 44
   Insn 29(l0): point = 46
   Insn 28(l0): point = 48
   Insn 27(l0): point = 50
   Insn 26(l0): point = 52
   Insn 24(l0): point = 55
   Insn 23(l0): point = 57
   Insn 22(l0): point = 59
   Insn 21(l0): point = 61
   Insn 20(l0): point = 63
   Insn 61(l0): point = 66
   Insn 15(l0): point = 68
   Insn 13(l0): point = 71
   Insn 12(l0): point = 73
   Insn 11(l0): point = 75
   Insn 10(l0): point = 77
   Insn 9(l0): point = 79
   Insn 8(l0): point = 81
   Insn 7(l0): point = 83
   Insn 6(l0): point = 85
   Insn 5(l0): point = 87
   Insn 65(l0): point = 89
 a0(r88): [3..4]
 a1(r87): [66..68] [40..42] [5..7]
 a2(r82): [71..89] [49..65] [14..39]
 a3(r95): [20..21]
 a4(r94): [24..25]
 a5(r86): [24..27]
 a6(r93): [28..29]
 a7(r92): [32..33]
 a8(r85): [32..35]
 a9(r91): [36..37]
 a10(r84): [58..59]
 a11(r83): [60..61]
 a12(r90): [62..63]
 a13(r89): [76..77]
Compressing live ranges: from 92 to 26 - 28%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [22..23] [14..15] [2..3]
 a2(r82): [24..25] [16..21] [4..13]
 a3(r95): [4..5]
 a4(r94): [6..7]
 a5(r86): [6..7]
 a6(r93): [8..9]
 a7(r92): [10..11]
 a8(r85): [10..11]
 a9(r91): [12..13]
 a10(r84): [16..17]
 a11(r83): [18..19]
 a12(r90): [20..21]
 a13(r89): [24..25]
  pref0:a13(r89)<-hr0@1500
  pref1:a0(r88)<-hr0@1500
  pref2:a2(r82)<-hr3@3000
  regions=1, blocks=8, points=26
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
    2:r82  l0     3   11:r83  l0     0   10:r84  l0     0    8:r85  l0     1
    5:r86  l0     1    1:r87  l0     0    0:r88  l0     0   13:r89  l0     0
   12:r90  l0     0    9:r91  l0     0    7:r92  l0     0    6:r93  l0     0
    4:r94  l0     0    3:r95  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_chown

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={3d,3u} r6={1d,7u} r7={10d,25u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,9u} r17={12d,2u} r18={3d} r19={1d,14u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,4u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={3d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 332{252d,80u,0e} in 43{40 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 65 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 65 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":114:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 filename+0 S4 A32])) "fs/open.c":114:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":114:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7987efd10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":114:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":114:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 89)
        (reg:SI 0 ax)) "fs/open.c":114:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
        (reg:SI 89)) "fs/open.c":114:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":114:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":114:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 61 3 (set (reg:SI 87 [ _5 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":115:16 75 {*movsi_internal}
     (nil))
(jump_insn 61 15 62 3 (set (pc)
        (label_ref 52)) "fs/open.c":115:16 807 {jump}
     (nil)
 -> 52)
(barrier 62 61 18)
(code_label 18 62 19 4 35 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 90)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":116:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 83 [ current.28_1 ])
        (mem/f/c:SI (reg/f:SI 90) [1 current+0 S4 A32])) "fs/open.c":116:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 22 21 23 4 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 83 [ current.28_1 ])
                (const_int 578 [0x242])) [8 current.28_1->euid+0 S2 A16])) "fs/open.c":116:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.28_1 ])
        (nil)))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 84 [ _2 ])
            (const_int 0 [0]))) "fs/open.c":116:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "fs/open.c":116:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 34)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":117:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 27 26 28 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":117:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 28 27 29 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":117:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 29 28 30 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":117:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":117:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 31 30 63 5 (set (reg:SI 87 [ _5 ])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":118:16 75 {*movsi_internal}
     (nil))
(jump_insn 63 31 64 5 (set (pc)
        (label_ref 52)) "fs/open.c":118:16 807 {jump}
     (nil)
 -> 52)
(barrier 64 63 34)
(code_label 34 64 35 6 37 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:SI 91)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 uid+0 S4 A32])) "fs/open.c":120:18 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:HI 85 [ _3 ])
        (subreg:HI (reg:SI 91) 0)) "fs/open.c":120:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 38 37 39 6 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":120:18 75 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (mem:HI (plus:SI (reg/f:SI 92)
                (const_int 2 [0x2])) [8 inode_10->i_uid+0 S2 A16])
        (reg:HI 85 [ _3 ])) "fs/open.c":120:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
            (nil))))
(insn 40 39 41 6 (set (reg:SI 93)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 gid+0 S4 A32])) "fs/open.c":121:18 75 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:QI 86 [ _4 ])
        (subreg:QI (reg:SI 93) 0)) "fs/open.c":121:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 42 41 43 6 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":121:18 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (mem:QI (plus:SI (reg/f:SI 94)
                (const_int 12 [0xc])) [0 inode_10->i_gid+0 S1 A32])
        (reg:QI 86 [ _4 ])) "fs/open.c":121:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (expr_list:REG_DEAD (reg:QI 86 [ _4 ])
            (nil))))
(insn 44 43 45 6 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":122:19 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (mem:QI (plus:SI (reg/f:SI 95)
                (const_int 51 [0x33])) [0 inode_10->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/open.c":122:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":123:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 47 46 48 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":123:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 48 47 49 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":123:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 49 48 50 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":123:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 50 49 51 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":123:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 51 50 52 6 (set (reg:SI 87 [ _5 ])
        (const_int 0 [0])) "fs/open.c":124:12 75 {*movsi_internal}
     (nil))
(code_label 52 51 53 7 36 (nil) [2 uses])
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 58 7 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ _5 ])) "fs/open.c":125:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(insn 58 54 59 7 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) "fs/open.c":125:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ <retval> ])
        (nil)))
(insn 59 58 0 7 (use (reg/i:SI 0 ax)) "fs/open.c":125:1 -1
     (nil))

;; Function sys_chdir (sys_chdir, funcdef_no=13, decl_uid=1456, cgraph_uid=14, symbol_order=13)

scanning new insn with uid = 63.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8000
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:36000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a10(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 57(l0): point = 0
   Insn 56(l0): point = 2
   Insn 52(l0): point = 4
   Insn 49(l0): point = 7
   Insn 48(l0): point = 9
   Insn 47(l0): point = 11
   Insn 46(l0): point = 13
   Insn 45(l0): point = 15
   Insn 44(l0): point = 17
   Insn 43(l0): point = 19
   Insn 42(l0): point = 21
   Insn 41(l0): point = 23
   Insn 40(l0): point = 25
   Insn 39(l0): point = 27
   Insn 38(l0): point = 29
   Insn 37(l0): point = 31
   Insn 61(l0): point = 34
   Insn 32(l0): point = 36
   Insn 31(l0): point = 38
   Insn 30(l0): point = 40
   Insn 29(l0): point = 42
   Insn 28(l0): point = 44
   Insn 27(l0): point = 46
   Insn 25(l0): point = 49
   Insn 24(l0): point = 51
   Insn 23(l0): point = 53
   Insn 22(l0): point = 55
   Insn 21(l0): point = 57
   Insn 20(l0): point = 59
   Insn 59(l0): point = 62
   Insn 15(l0): point = 64
   Insn 13(l0): point = 67
   Insn 12(l0): point = 69
   Insn 11(l0): point = 71
   Insn 10(l0): point = 73
   Insn 9(l0): point = 75
   Insn 8(l0): point = 77
   Insn 7(l0): point = 79
   Insn 6(l0): point = 81
   Insn 5(l0): point = 83
   Insn 63(l0): point = 85
 a0(r90): [3..4]
 a1(r89): [62..64] [34..36] [5..7]
 a2(r88): [10..13]
 a3(r95): [10..11]
 a4(r94): [14..15]
 a5(r82): [67..85] [43..61] [16..33]
 a6(r87): [24..27]
 a7(r86): [28..29]
 a8(r93): [30..31]
 a9(r85): [52..53]
 a10(r84): [54..55]
 a11(r83): [56..57]
 a12(r92): [58..59]
 a13(r91): [72..73]
Compressing live ranges: from 88 to 28 - 31%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [24..25] [14..15] [2..3]
 a2(r88): [4..5]
 a3(r95): [4..5]
 a4(r94): [6..7]
 a5(r82): [26..27] [16..23] [8..13]
 a6(r87): [8..9]
 a7(r86): [10..11]
 a8(r93): [12..13]
 a9(r85): [16..17]
 a10(r84): [18..19]
 a11(r83): [20..21]
 a12(r92): [22..23]
 a13(r91): [26..27]
  pref0:a13(r91)<-hr0@1500
  pref1:a0(r90)<-hr0@1500
  pref2:a5(r82)<-hr3@1500
  regions=1, blocks=8, points=28
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
    5:r82  l0     3   11:r83  l0     0   10:r84  l0     0    9:r85  l0     0
    7:r86  l0     0    6:r87  l0     0    2:r88  l0     0    1:r89  l0     0
    0:r90  l0     0   13:r91  l0     0   12:r92  l0     0    8:r93  l0     0
    4:r94  l0     0    3:r95  l0     1
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_chdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={3d,3u} r6={1d,7u} r7={10d,25u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,7u} r17={13d,2u} r18={3d} r19={1d,12u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={3d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 330{253d,77u,0e} in 41{38 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 63 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 63 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 63 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":131:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 filename+0 S4 A32])) "fs/open.c":131:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":131:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7987efd10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":131:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":131:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 91)
        (reg:SI 0 ax)) "fs/open.c":131:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
        (reg:SI 91)) "fs/open.c":131:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":131:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":131:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 59 3 (set (reg:SI 89 [ _7 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":132:16 75 {*movsi_internal}
     (nil))
(jump_insn 59 15 60 3 (set (pc)
        (label_ref 50)) "fs/open.c":132:16 807 {jump}
     (nil)
 -> 50)
(barrier 60 59 18)
(code_label 18 60 19 4 39 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":133:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 83 [ _1 ])
        (mem:HI (reg/f:SI 92) [8 inode_12->i_mode+0 S2 A32])) "fs/open.c":133:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 22 21 23 4 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/open.c":133:10 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 85 [ _3 ])
                (and:SI (reg:SI 84 [ _2 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":133:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (const_int 16384 [0x4000]))) "fs/open.c":133:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/open.c":133:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":134:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 28 27 29 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":134:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 29 28 30 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":134:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 30 29 31 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":134:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":134:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 32 31 61 5 (set (reg:SI 89 [ _7 ])
        (const_int -20 [0xffffffffffffffec])) "fs/open.c":135:16 75 {*movsi_internal}
     (nil))
(jump_insn 61 32 62 5 (set (pc)
        (label_ref 50)) "fs/open.c":135:16 807 {jump}
     (nil)
 -> 50)
(barrier 62 61 35)
(code_label 35 62 36 6 41 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:SI 93)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":137:17 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 86 [ current.29_4 ])
        (mem/f/c:SI (reg/f:SI 93) [1 current+0 S4 A32])) "fs/open.c":137:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 39 38 40 6 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (plus:SI (reg/f:SI 86 [ current.29_4 ])
                (const_int 624 [0x270])) [9 current.29_4->pwd+0 S4 A32])) "fs/open.c":137:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ current.29_4 ])
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":137:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 41 40 42 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 87 [ _5 ])) "fs/open.c":137:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 42 41 43 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":137:5 75 {*movsi_internal}
     (nil))
(call_insn 43 42 44 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":137:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":137:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 45 44 46 6 (set (reg/f:SI 94)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":138:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 46 45 47 6 (set (reg/f:SI 88 [ current.30_6 ])
        (mem/f/c:SI (reg/f:SI 94) [1 current+0 S4 A32])) "fs/open.c":138:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 47 46 48 6 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":138:18 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f:SI (plus:SI (reg/f:SI 88 [ current.30_6 ])
                (const_int 624 [0x270])) [9 current.30_6->pwd+0 S4 A32])
        (reg/f:SI 95)) "fs/open.c":138:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg/f:SI 88 [ current.30_6 ])
            (nil))))
(insn 49 48 50 6 (set (reg:SI 89 [ _7 ])
        (const_int 0 [0])) "fs/open.c":139:12 75 {*movsi_internal}
     (nil))
(code_label 50 49 51 7 40 (nil) [2 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 56 7 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ _7 ])) "fs/open.c":140:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(insn 56 52 57 7 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) "fs/open.c":140:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ <retval> ])
        (nil)))
(insn 57 56 0 7 (use (reg/i:SI 0 ax)) "fs/open.c":140:1 -1
     (nil))

;; Function sys_utime (sys_utime, funcdef_no=14, decl_uid=1461, cgraph_uid=15, symbol_order=14)

scanning new insn with uid = 84.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Removing SCRATCH to p108 in insn #45 (nop 3)
rescanning insn with uid = 45.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)

Pass 0 for finding pseudo/allocno costs

    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r97,l0) best DREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a2(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:30000
  a3(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a12(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a14(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a15(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:18000
  a16(r97,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a17(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a18(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a19(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a21(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a24(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 78(l0): point = 0
   Insn 77(l0): point = 2
   Insn 73(l0): point = 4
   Insn 70(l0): point = 7
   Insn 69(l0): point = 9
   Insn 68(l0): point = 11
   Insn 67(l0): point = 13
   Insn 66(l0): point = 15
   Insn 65(l0): point = 17
   Insn 64(l0): point = 19
   Insn 63(l0): point = 21
   Insn 62(l0): point = 23
   Insn 61(l0): point = 25
   Insn 60(l0): point = 27
   Insn 59(l0): point = 29
   Insn 58(l0): point = 31
   Insn 57(l0): point = 33
   Insn 54(l0): point = 36
   Insn 53(l0): point = 38
   Insn 52(l0): point = 40
   Insn 51(l0): point = 42
   Insn 50(l0): point = 44
   Insn 49(l0): point = 46
   Insn 48(l0): point = 48
   Insn 47(l0): point = 51
   Insn 46(l0): point = 53
   Insn 45(l0): point = 55
   Insn 44(l0): point = 57
   Insn 43(l0): point = 59
   Insn 42(l0): point = 61
   Insn 82(l0): point = 64
   Insn 37(l0): point = 66
   Insn 36(l0): point = 68
   Insn 35(l0): point = 70
   Insn 34(l0): point = 72
   Insn 33(l0): point = 74
   Insn 32(l0): point = 76
   Insn 31(l0): point = 78
   Insn 30(l0): point = 80
   Insn 29(l0): point = 82
   Insn 28(l0): point = 84
   Insn 27(l0): point = 86
   Insn 26(l0): point = 88
   Insn 25(l0): point = 90
   Insn 24(l0): point = 92
   Insn 23(l0): point = 94
   Insn 21(l0): point = 97
   Insn 20(l0): point = 99
   Insn 80(l0): point = 102
   Insn 15(l0): point = 104
   Insn 13(l0): point = 107
   Insn 12(l0): point = 109
   Insn 11(l0): point = 111
   Insn 10(l0): point = 113
   Insn 9(l0): point = 115
   Insn 8(l0): point = 117
   Insn 7(l0): point = 119
   Insn 6(l0): point = 121
   Insn 5(l0): point = 123
   Insn 84(l0): point = 125
 a0(r93): [3..4]
 a1(r92): [102..104] [5..7]
 a2(r82): [107..125] [14..101]
 a3(r106): [20..21]
 a4(r105): [24..25]
 a5(r91): [24..27]
 a6(r104): [30..31]
 a7(r90): [30..33]
 a8(r103): [37..38]
 a9(r102): [41..42]
 a10(r89): [43..44]
 a11(r88): [43..49]
 a12(r101): [45..46]
 a13(r100): [49..51]
 a14(r99): [50..53]
 a15(r87): [52..59]
 a16(r97): [54..55]
 a17(r98): [56..57]
 a18(r108): [55..55]
 a19(r96): [60..61]
 a20(r86): [67..68]
 a21(r85): [75..78]
 a22(r95): [79..80]
 a23(r84): [83..84]
 a24(r83): [91..94]
 a25(r94): [112..113]
Compressing live ranges: from 128 to 43 - 33%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [39..40] [2..3]
 a2(r82): [41..42] [4..38]
 a3(r106): [4..5]
 a4(r105): [6..7]
 a5(r91): [6..7]
 a6(r104): [8..9]
 a7(r90): [8..9]
 a8(r103): [10..11]
 a9(r102): [12..13]
 a10(r89): [14..15]
 a11(r88): [14..18]
 a12(r101): [16..17]
 a13(r100): [18..20]
 a14(r99): [19..22]
 a15(r87): [21..26]
 a16(r97): [23..24]
 a17(r98): [25..26]
 a18(r108): [24..24]
 a19(r96): [27..28]
 a20(r86): [29..30]
 a21(r85): [31..32]
 a22(r95): [33..34]
 a23(r84): [35..36]
 a24(r83): [37..38]
 a25(r94): [41..42]
  pref0:a16(r97)<-hr1@1000
  pref1:a25(r94)<-hr0@1500
  pref2:a0(r93)<-hr0@1500
  pref3:a20(r86)<-hr0@1500
  pref4:a23(r84)<-hr0@1500
  pref5:a2(r82)<-hr3@1500
  regions=1, blocks=9, points=43
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=28
Disposition:
    2:r82  l0     3   24:r83  l0     0   23:r84  l0     0   21:r85  l0     0
   20:r86  l0     0   15:r87  l0     2   11:r88  l0     1   10:r89  l0     0
    7:r90  l0     1    5:r91  l0     1    1:r92  l0     0    0:r93  l0     0
   25:r94  l0     0   22:r95  l0     0   19:r96  l0     0   16:r97  l0     1
   17:r98  l0     1   14:r99  l0     0   13:r100 l0     2   12:r101 l0     0
    9:r102 l0     0    8:r103 l0     0    6:r104 l0     0    4:r105 l0     0
    3:r106 l0     0   18:r108 l0     0
+++Costs: overall 5000, reg 5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_utime

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={5d} r2={5d} r3={2d,2u} r6={1d,8u} r7={13d,32u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,11u,1e} r17={21d,2u} r18={4d} r19={1d,21u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,4u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,2u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={2d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r108={1d} 
;;    total ref usage 453{342d,110u,1e} in 60{56 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 84 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 84 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 84 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":147:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 filename+0 S4 A32])) "fs/open.c":147:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":147:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7987efd10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":147:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":147:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 94)
        (reg:SI 0 ax)) "fs/open.c":147:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 inode+0 S4 A32])
        (reg:SI 94)) "fs/open.c":147:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":147:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":147:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 80 3 (set (reg:SI 92 [ _12 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":148:16 75 {*movsi_internal}
     (nil))
(jump_insn 80 15 81 3 (set (pc)
        (label_ref 71)) "fs/open.c":148:16 807 {jump}
     (nil)
 -> 71)
(barrier 81 80 18)
(code_label 18 81 19 4 43 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [24 times+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":149:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/open.c":149:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg/f:SI 83 [ _1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [24 times+0 S4 A32])) "fs/open.c":150:49 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":150:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 25 24 26 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/open.c":150:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x7987efd4da00 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":150:19 823 {*call_value}
     (nil)
    (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":150:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 28 27 29 5 (set (reg:SI 84 [ _2 ])
        (reg:SI 0 ax)) "fs/open.c":150:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 29 28 30 5 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 actime+0 S4 A32])
        (reg:SI 84 [ _2 ])) "fs/open.c":150:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(insn 30 29 31 5 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [24 times+0 S4 A32])) "fs/open.c":151:49 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg/f:SI 95)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":151:49 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [24 times+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":151:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 33 32 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg/f:SI 85 [ _3 ])) "fs/open.c":151:19 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x7987efd4da00 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":151:19 823 {*call_value}
     (nil)
    (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":151:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 37 5 (set (reg:SI 86 [ _4 ])
        (reg:SI 0 ax)) "fs/open.c":151:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 37 36 82 5 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 modtime+0 S4 A32])
        (reg:SI 86 [ _4 ])) "fs/open.c":151:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 82 37 83 5 (set (pc)
        (label_ref 55)) 807 {jump}
     (nil)
 -> 55)
(barrier 83 82 40)
(code_label 40 83 41 6 45 (nil) [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:SI 96)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7987efd2e360 jiffies>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 87 [ jiffies.31_5 ])
        (mem/v/c:SI (reg/f:SI 96) [3 jiffies+0 S4 A32])) "fs/open.c":153:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96)
        (nil)))
(insn 44 43 45 6 (set (reg:SI 98)
        (const_int 1374389535 [0x51eb851f])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:SI 97)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 87 [ jiffies.31_5 ]))
                            (sign_extend:DI (reg:SI 98)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 108))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 435 {*smulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_UNUSED (reg:SI 108)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 99)
                (ashiftrt:SI (reg:SI 97)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 6 (parallel [
            (set (reg:SI 100)
                (ashiftrt:SI (reg:SI 87 [ jiffies.31_5 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 694 {ashrsi3_cvt}
     (expr_list:REG_DEAD (reg:SI 87 [ jiffies.31_5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 6 (parallel [
            (set (reg:SI 88 [ _6 ])
                (minus:SI (reg:SI 99)
                    (reg:SI 100)))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:28 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 100)
        (expr_list:REG_DEAD (reg:SI 99)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 6 (set (reg/f:SI 101)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7987efd2e3f0 startup_time>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":153:28 75 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:SI 89 [ startup_time.32_7 ])
        (mem/c:SI (reg/f:SI 101) [3 startup_time+0 S4 A32])) "fs/open.c":153:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 51 50 52 6 (parallel [
            (set (reg:SI 102)
                (plus:SI (reg:SI 88 [ _6 ])
                    (reg:SI 89 [ startup_time.32_7 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":153:26 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ startup_time.32_7 ])
        (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 52 51 53 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 modtime+0 S4 A32])
        (reg:SI 102)) "fs/open.c":153:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 53 52 54 6 (set (reg:SI 103)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 modtime+0 S4 A32])) "fs/open.c":153:16 75 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 actime+0 S4 A32])
        (reg:SI 103)) "fs/open.c":153:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(code_label 55 54 56 7 46 (nil) [1 uses])
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (set (reg:SI 90 [ actime.33_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [3 actime+0 S4 A32])) "fs/open.c":154:20 75 {*movsi_internal}
     (nil))
(insn 58 57 59 7 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 inode+0 S4 A32])) "fs/open.c":154:20 75 {*movsi_internal}
     (nil))
(insn 59 58 60 7 (set (mem:SI (plus:SI (reg/f:SI 104)
                (const_int 36 [0x24])) [3 inode_18->i_atime+0 S4 A32])
        (reg:SI 90 [ actime.33_8 ])) "fs/open.c":154:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (expr_list:REG_DEAD (reg:SI 90 [ actime.33_8 ])
            (nil))))
(insn 60 59 61 7 (set (reg:SI 91 [ modtime.34_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 modtime+0 S4 A32])) "fs/open.c":155:20 75 {*movsi_internal}
     (nil))
(insn 61 60 62 7 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 inode+0 S4 A32])) "fs/open.c":155:20 75 {*movsi_internal}
     (nil))
(insn 62 61 63 7 (set (mem:SI (plus:SI (reg/f:SI 105)
                (const_int 8 [0x8])) [3 inode_18->i_mtime+0 S4 A32])
        (reg:SI 91 [ modtime.34_9 ])) "fs/open.c":155:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (expr_list:REG_DEAD (reg:SI 91 [ modtime.34_9 ])
            (nil))))
(insn 63 62 64 7 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 inode+0 S4 A32])) "fs/open.c":156:20 75 {*movsi_internal}
     (nil))
(insn 64 63 65 7 (set (mem:QI (plus:SI (reg/f:SI 106)
                (const_int 51 [0x33])) [0 inode_18->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/open.c":156:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 65 64 66 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":157:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 66 65 67 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 inode+0 S4 A32])) "fs/open.c":157:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 67 66 68 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":157:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 68 67 69 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":157:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 69 68 70 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":157:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 70 69 71 7 (set (reg:SI 92 [ _12 ])
        (const_int 0 [0])) "fs/open.c":158:12 75 {*movsi_internal}
     (nil))
(code_label 71 70 72 8 44 (nil) [1 uses])
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 77 8 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ _12 ])) "fs/open.c":159:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _12 ])
        (nil)))
(insn 77 73 78 8 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) "fs/open.c":159:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ <retval> ])
        (nil)))
(insn 78 77 0 8 (use (reg/i:SI 0 ax)) "fs/open.c":159:1 -1
     (nil))

;; Function sys_access (sys_access, funcdef_no=15, decl_uid=1468, cgraph_uid=16, symbol_order=15)

scanning new insn with uid = 109.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 22 count 16 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 15 }
;; 4 succs { 5 6 }
;; 5 succs { 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 15 }
;; 10 succs { 11 14 }
;; 11 succs { 13 12 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a15 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:9000
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:36000
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a16(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 99(l0): point = 0
   Insn 98(l0): point = 2
   Insn 94(l0): point = 4
   Insn 91(l0): point = 7
   Insn 107(l0): point = 10
   Insn 86(l0): point = 12
   Insn 83(l0): point = 15
   Insn 82(l0): point = 17
   Insn 81(l0): point = 19
   Insn 80(l0): point = 21
   Insn 78(l0): point = 24
   Insn 77(l0): point = 26
   Insn 76(l0): point = 28
   Insn 75(l0): point = 30
   Insn 73(l0): point = 33
   Insn 72(l0): point = 35
   Insn 71(l0): point = 37
   Insn 70(l0): point = 39
   Insn 69(l0): point = 41
   Insn 105(l0): point = 44
   Insn 64(l0): point = 46
   Insn 62(l0): point = 49
   Insn 61(l0): point = 51
   Insn 60(l0): point = 53
   Insn 59(l0): point = 55
   Insn 58(l0): point = 57
   Insn 55(l0): point = 60
   Insn 53(l0): point = 63
   Insn 52(l0): point = 65
   Insn 51(l0): point = 67
   Insn 50(l0): point = 69
   Insn 49(l0): point = 71
   Insn 48(l0): point = 73
   Insn 47(l0): point = 75
   Insn 46(l0): point = 77
   Insn 103(l0): point = 80
   Insn 41(l0): point = 82
   Insn 39(l0): point = 85
   Insn 38(l0): point = 87
   Insn 37(l0): point = 89
   Insn 36(l0): point = 91
   Insn 35(l0): point = 93
   Insn 34(l0): point = 95
   Insn 33(l0): point = 97
   Insn 32(l0): point = 99
   Insn 31(l0): point = 101
   Insn 30(l0): point = 103
   Insn 29(l0): point = 105
   Insn 28(l0): point = 107
   Insn 27(l0): point = 109
   Insn 26(l0): point = 111
   Insn 25(l0): point = 113
   Insn 24(l0): point = 115
   Insn 23(l0): point = 117
   Insn 22(l0): point = 119
   Insn 21(l0): point = 121
   Insn 101(l0): point = 124
   Insn 16(l0): point = 126
   Insn 14(l0): point = 129
   Insn 13(l0): point = 131
   Insn 12(l0): point = 133
   Insn 11(l0): point = 135
   Insn 10(l0): point = 137
   Insn 9(l0): point = 139
   Insn 8(l0): point = 141
   Insn 7(l0): point = 143
   Insn 6(l0): point = 145
   Insn 5(l0): point = 147
   Insn 109(l0): point = 149
 a0(r99): [3..4]
 a1(r98): [124..126] [44..46] [10..12] [5..7]
 a2(r97): [18..19]
 a3(r111): [20..21]
 a4(r96): [27..28]
 a5(r110): [29..30]
 a6(r95): [36..37]
 a7(r94): [38..39]
 a8(r109): [40..41]
 a9(r82): [129..149] [49..123] [42..43]
 a10(r93): [52..53]
 a11(r92): [54..55]
 a12(r108): [56..57]
 a13(r91): [66..67]
 a14(r89): [66..73]
 a15(r90): [68..69]
 a16(r107): [70..71]
 a17(r88): [74..75]
 a18(r106): [76..77]
 a19(r87): [88..89]
 a20(r86): [88..93]
 a21(r105): [90..91]
 a22(r85): [94..95]
 a23(r104): [96..97]
 a24(r103): [110..111]
 a25(r102): [114..115]
 a26(r84): [116..117]
 a27(r83): [118..119]
 a28(r101): [120..121]
 a29(r100): [134..135]
Compressing live ranges: from 152 to 62 - 40%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r98): [58..59] [22..23] [2..5]
 a2(r97): [6..7]
 a3(r111): [8..9]
 a4(r96): [10..11]
 a5(r110): [12..13]
 a6(r95): [14..15]
 a7(r94): [16..17]
 a8(r109): [18..19]
 a9(r82): [60..61] [24..57] [20..21]
 a10(r93): [24..25]
 a11(r92): [26..27]
 a12(r108): [28..29]
 a13(r91): [30..31]
 a14(r89): [30..35]
 a15(r90): [32..33]
 a16(r107): [34..35]
 a17(r88): [36..37]
 a18(r106): [38..39]
 a19(r87): [40..41]
 a20(r86): [40..43]
 a21(r105): [42..43]
 a22(r85): [44..45]
 a23(r104): [46..47]
 a24(r103): [48..49]
 a25(r102): [50..51]
 a26(r84): [52..53]
 a27(r83): [54..55]
 a28(r101): [56..57]
 a29(r100): [60..61]
  pref0:a29(r100)<-hr0@1500
  pref1:a0(r99)<-hr0@1500
  regions=1, blocks=16, points=62
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=34
Disposition:
    9:r82  l0     3   27:r83  l0     0   26:r84  l0     0   22:r85  l0     0
   20:r86  l0     1   19:r87  l0     0   17:r88  l0     0   14:r89  l0     1
   15:r90  l0     0   13:r91  l0     0   11:r92  l0     0   10:r93  l0     0
    7:r94  l0     0    6:r95  l0     0    4:r96  l0     0    2:r97  l0     0
    1:r98  l0     0    0:r99  l0     0   29:r100 l0     0   28:r101 l0     0
   25:r102 l0     0   24:r103 l0     0   23:r104 l0     0   21:r105 l0     0
   18:r106 l0     0   16:r107 l0     0   12:r108 l0     0    8:r109 l0     0
    5:r110 l0     0    3:r111 l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_access

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r3={2d,2u} r6={1d,15u} r7={7d,27u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,20u,1e} r17={22d,7u} r18={2d} r19={1d,30u,2e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={4d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} 
;;    total ref usage 348{207d,138u,3e} in 69{67 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 109 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 109 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 109 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [6 mode+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [6 mode+0 S4 A32])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":170:10 490 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":171:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 7 6 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 filename+0 S4 A32])) "fs/open.c":171:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":171:19 75 {*movsi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7987efd10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":171:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":171:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 12 2 (set (reg:SI 100)
        (reg:SI 0 ax)) "fs/open.c":171:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 inode+0 S4 A32])
        (reg:SI 100)) "fs/open.c":171:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":171:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "fs/open.c":171:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 101 3 (set (reg:SI 98 [ _17 ])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":172:16 75 {*movsi_internal}
     (nil))
(jump_insn 101 16 102 3 (set (pc)
        (label_ref 92)) "fs/open.c":172:16 807 {jump}
     (nil)
 -> 92)
(barrier 102 101 19)
(code_label 19 102 20 4 48 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 inode+0 S4 A32])) "fs/open.c":173:25 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:HI 83 [ _1 ])
        (mem:HI (reg/f:SI 101) [8 inode_24->i_mode+0 S2 A32])) "fs/open.c":173:25 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 23 22 24 4 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/open.c":173:34 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 102)
                (and:SI (reg:SI 84 [ _2 ])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":173:18 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])
        (reg:SI 102)) "fs/open.c":173:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 26 25 27 4 (set (reg:SI 103)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])) "fs/open.c":173:12 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 i_mode+0 S4 A32])
        (reg:SI 103)) "fs/open.c":173:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":174:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 29 28 30 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 inode+0 S4 A32])) "fs/open.c":174:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 30 29 31 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":174:5 75 {*movsi_internal}
     (nil))
(call_insn 31 30 32 4 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":174:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":174:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 33 32 34 4 (set (reg/f:SI 104)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":175:16 75 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg/f:SI 85 [ current.35_3 ])
        (mem/f/c:SI (reg/f:SI 104) [1 current+0 S4 A32])) "fs/open.c":175:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 35 34 36 4 (set (reg:HI 86 [ _4 ])
        (mem:HI (plus:SI (reg/f:SI 85 [ current.35_3 ])
                (const_int 576 [0x240])) [8 current.35_3->uid+0 S2 A32])) "fs/open.c":175:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ current.35_3 ])
        (nil)))
(insn 36 35 37 4 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 inode+0 S4 A32])) "fs/open.c":175:30 75 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 105)
                (const_int 2 [0x2])) [8 inode_24->i_uid+0 S2 A16])) "fs/open.c":175:30 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 38 37 39 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 86 [ _4 ])
            (reg:HI 87 [ _5 ]))) "fs/open.c":175:8 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (expr_list:REG_DEAD (reg:HI 86 [ _4 ])
            (nil))))
(jump_insn 39 38 40 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/open.c":175:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 103 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":176:13 702 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 103 41 104 5 (set (pc)
        (label_ref 56)) 807 {jump}
     (nil)
 -> 56)
(barrier 104 103 44)
(code_label 44 104 45 6 50 (nil) [1 uses])
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg/f:SI 106)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":177:21 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg/f:SI 88 [ current.36_6 ])
        (mem/f/c:SI (reg/f:SI 106) [1 current+0 S4 A32])) "fs/open.c":177:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 48 47 49 6 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 88 [ current.36_6 ])
                (const_int 582 [0x246])) [8 current.36_6->gid+0 S2 A16])) "fs/open.c":177:21 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ current.36_6 ])
        (nil)))
(insn 49 48 50 6 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 inode+0 S4 A32])) "fs/open.c":177:35 75 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:QI 90 [ _8 ])
        (mem:QI (plus:SI (reg/f:SI 107)
                (const_int 12 [0xc])) [0 inode_24->i_gid+0 S1 A32])) "fs/open.c":177:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 51 50 52 6 (set (reg:HI 91 [ _9 ])
        (zero_extend:HI (reg:QI 90 [ _8 ]))) "fs/open.c":177:35 146 {*zero_extendqihi2}
     (expr_list:REG_DEAD (reg:QI 90 [ _8 ])
        (nil)))
(insn 52 51 53 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 89 [ _7 ])
            (reg:HI 91 [ _9 ]))) "fs/open.c":177:13 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
            (nil))))
(jump_insn 53 52 54 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "fs/open.c":177:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 56)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":178:13 702 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 56 55 57 8 51 (nil) [2 uses])
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:SI 108)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])) "fs/open.c":179:14 75 {*movsi_internal}
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg:SI 92 [ _10 ])
                (and:SI (reg:SI 108)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":179:14 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [6 res+0 S4 A32])
                    (const_int 7 [0x7]))
                (nil)))))
(insn 60 59 61 8 (parallel [
            (set (reg:SI 93 [ _11 ])
                (and:SI (reg:SI 92 [ _10 ])
                    (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [6 mode+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":179:21 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [6 mode+0 S4 A32])
            (reg:SI 93 [ _11 ]))) "fs/open.c":179:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/open.c":179:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 67)
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 105 9 (set (reg:SI 98 [ _17 ])
        (const_int 0 [0])) "fs/open.c":180:16 75 {*movsi_internal}
     (nil))
(jump_insn 105 64 106 9 (set (pc)
        (label_ref 92)) "fs/open.c":180:16 807 {jump}
     (nil)
 -> 92)
(barrier 106 105 67)
(code_label 67 106 68 10 52 (nil) [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (reg/f:SI 109)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":187:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 70 69 71 10 (set (reg/f:SI 94 [ current.37_12 ])
        (mem/f/c:SI (reg/f:SI 109) [1 current+0 S4 A32])) "fs/open.c":187:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 71 70 72 10 (set (reg:HI 95 [ _13 ])
        (mem:HI (plus:SI (reg/f:SI 94 [ current.37_12 ])
                (const_int 576 [0x240])) [8 current.37_12->uid+0 S2 A32])) "fs/open.c":187:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94 [ current.37_12 ])
        (nil)))
(insn 72 71 73 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 95 [ _13 ])
            (const_int 0 [0]))) "fs/open.c":187:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
        (nil)))
(jump_insn 73 72 74 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "fs/open.c":187:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 mode+0 S4 A32])) "fs/open.c":188:17 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 110)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":188:17 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [6 mode+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 77 76 78 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (const_int 0 [0]))) "fs/open.c":187:25 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 78 77 79 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "fs/open.c":187:25 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 i_mode+0 S4 A32])) "fs/open.c":188:33 75 {*movsi_internal}
     (nil))
(insn 81 80 82 12 (parallel [
            (set (reg:SI 97 [ _15 ])
                (and:SI (reg:SI 111)
                    (const_int 73 [0x49])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":188:33 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [6 i_mode+0 S4 A32])
                    (const_int 73 [0x49]))
                (nil)))))
(insn 82 81 83 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _15 ])
            (const_int 0 [0]))) "fs/open.c":188:22 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (nil)))
(jump_insn 83 82 84 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "fs/open.c":188:22 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
(code_label 84 83 85 13 54 (nil) [1 uses])
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 107 13 (set (reg:SI 98 [ _17 ])
        (const_int 0 [0])) "fs/open.c":189:16 75 {*movsi_internal}
     (nil))
(jump_insn 107 86 108 13 (set (pc)
        (label_ref 92)) "fs/open.c":189:16 807 {jump}
     (nil)
 -> 92)
(barrier 108 107 89)
(code_label 89 108 90 14 53 (nil) [2 uses])
(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 14 (set (reg:SI 98 [ _17 ])
        (const_int -13 [0xfffffffffffffff3])) "fs/open.c":190:12 75 {*movsi_internal}
     (nil))
(code_label 92 91 93 15 49 (nil) [3 uses])
(note 93 92 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 98 15 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ _17 ])) "fs/open.c":191:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _17 ])
        (nil)))
(insn 98 94 99 15 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) "fs/open.c":191:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ <retval> ])
        (nil)))
(insn 99 98 0 15 (use (reg/i:SI 0 ax)) "fs/open.c":191:1 -1
     (nil))

;; Function sys_chroot (sys_chroot, funcdef_no=16, decl_uid=1474, cgraph_uid=17, symbol_order=16)

scanning new insn with uid = 63.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8000
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:36000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a10(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 57(l0): point = 0
   Insn 56(l0): point = 2
   Insn 52(l0): point = 4
   Insn 49(l0): point = 7
   Insn 48(l0): point = 9
   Insn 47(l0): point = 11
   Insn 46(l0): point = 13
   Insn 45(l0): point = 15
   Insn 44(l0): point = 17
   Insn 43(l0): point = 19
   Insn 42(l0): point = 21
   Insn 41(l0): point = 23
   Insn 40(l0): point = 25
   Insn 39(l0): point = 27
   Insn 38(l0): point = 29
   Insn 37(l0): point = 31
   Insn 61(l0): point = 34
   Insn 32(l0): point = 36
   Insn 31(l0): point = 38
   Insn 30(l0): point = 40
   Insn 29(l0): point = 42
   Insn 28(l0): point = 44
   Insn 27(l0): point = 46
   Insn 25(l0): point = 49
   Insn 24(l0): point = 51
   Insn 23(l0): point = 53
   Insn 22(l0): point = 55
   Insn 21(l0): point = 57
   Insn 20(l0): point = 59
   Insn 59(l0): point = 62
   Insn 15(l0): point = 64
   Insn 13(l0): point = 67
   Insn 12(l0): point = 69
   Insn 11(l0): point = 71
   Insn 10(l0): point = 73
   Insn 9(l0): point = 75
   Insn 8(l0): point = 77
   Insn 7(l0): point = 79
   Insn 6(l0): point = 81
   Insn 5(l0): point = 83
   Insn 63(l0): point = 85
 a0(r90): [3..4]
 a1(r89): [62..64] [34..36] [5..7]
 a2(r88): [10..13]
 a3(r95): [10..11]
 a4(r94): [14..15]
 a5(r82): [67..85] [43..61] [16..33]
 a6(r87): [24..27]
 a7(r86): [28..29]
 a8(r93): [30..31]
 a9(r85): [52..53]
 a10(r84): [54..55]
 a11(r83): [56..57]
 a12(r92): [58..59]
 a13(r91): [72..73]
Compressing live ranges: from 88 to 28 - 31%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [24..25] [14..15] [2..3]
 a2(r88): [4..5]
 a3(r95): [4..5]
 a4(r94): [6..7]
 a5(r82): [26..27] [16..23] [8..13]
 a6(r87): [8..9]
 a7(r86): [10..11]
 a8(r93): [12..13]
 a9(r85): [16..17]
 a10(r84): [18..19]
 a11(r83): [20..21]
 a12(r92): [22..23]
 a13(r91): [26..27]
  pref0:a13(r91)<-hr0@1500
  pref1:a0(r90)<-hr0@1500
  pref2:a5(r82)<-hr3@1500
  regions=1, blocks=8, points=28
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
    5:r82  l0     3   11:r83  l0     0   10:r84  l0     0    9:r85  l0     0
    7:r86  l0     0    6:r87  l0     0    2:r88  l0     0    1:r89  l0     0
    0:r90  l0     0   13:r91  l0     0   12:r92  l0     0    8:r93  l0     0
    4:r94  l0     0    3:r95  l0     1
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_chroot

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={3d,3u} r6={1d,7u} r7={10d,25u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,7u} r17={13d,2u} r18={3d} r19={1d,12u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={3d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 330{253d,77u,0e} in 41{38 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 63 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 63 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 63 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":197:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [22 filename+0 S4 A32])) "fs/open.c":197:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":197:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7987efd10500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/open.c":197:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":197:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 91)
        (reg:SI 0 ax)) "fs/open.c":197:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
        (reg:SI 91)) "fs/open.c":197:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/open.c":197:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/open.c":197:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 59 3 (set (reg:SI 89 [ _7 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/open.c":198:16 75 {*movsi_internal}
     (nil))
(jump_insn 59 15 60 3 (set (pc)
        (label_ref 50)) "fs/open.c":198:16 807 {jump}
     (nil)
 -> 50)
(barrier 60 59 18)
(code_label 18 60 19 4 56 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":199:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 83 [ _1 ])
        (mem:HI (reg/f:SI 92) [8 inode_12->i_mode+0 S2 A32])) "fs/open.c":199:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 22 21 23 4 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/open.c":199:10 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 85 [ _3 ])
                (and:SI (reg:SI 84 [ _2 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":199:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (const_int 16384 [0x4000]))) "fs/open.c":199:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/open.c":199:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":200:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 28 27 29 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":200:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 29 28 30 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":200:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 30 29 31 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":200:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":200:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 32 31 61 5 (set (reg:SI 89 [ _7 ])
        (const_int -20 [0xffffffffffffffec])) "fs/open.c":201:16 75 {*movsi_internal}
     (nil))
(jump_insn 61 32 62 5 (set (pc)
        (label_ref 50)) "fs/open.c":201:16 807 {jump}
     (nil)
 -> 50)
(barrier 62 61 35)
(code_label 35 62 36 6 58 (nil) [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:SI 93)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":203:17 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:SI 86 [ current.38_4 ])
        (mem/f/c:SI (reg/f:SI 93) [1 current+0 S4 A32])) "fs/open.c":203:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(insn 39 38 40 6 (set (reg/f:SI 87 [ _5 ])
        (mem/f:SI (plus:SI (reg/f:SI 86 [ current.38_4 ])
                (const_int 628 [0x274])) [9 current.38_4->root+0 S4 A32])) "fs/open.c":203:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ current.38_4 ])
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":203:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 41 40 42 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg/f:SI 87 [ _5 ])) "fs/open.c":203:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 42 41 43 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/open.c":203:5 75 {*movsi_internal}
     (nil))
(call_insn 43 42 44 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7987efcd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/open.c":203:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/open.c":203:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 45 44 46 6 (set (reg/f:SI 94)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7987efd2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/open.c":204:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 46 45 47 6 (set (reg/f:SI 88 [ current.39_6 ])
        (mem/f/c:SI (reg/f:SI 94) [1 current+0 S4 A32])) "fs/open.c":204:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 94)
        (nil)))
(insn 47 46 48 6 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 inode+0 S4 A32])) "fs/open.c":204:19 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f:SI (plus:SI (reg/f:SI 88 [ current.39_6 ])
                (const_int 628 [0x274])) [9 current.39_6->root+0 S4 A32])
        (reg/f:SI 95)) "fs/open.c":204:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (expr_list:REG_DEAD (reg/f:SI 88 [ current.39_6 ])
            (nil))))
(insn 49 48 50 6 (set (reg:SI 89 [ _7 ])
        (const_int 0 [0])) "fs/open.c":205:12 75 {*movsi_internal}
     (nil))
(code_label 50 49 51 7 57 (nil) [2 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 56 7 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ _7 ])) "fs/open.c":206:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(insn 56 52 57 7 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) "fs/open.c":206:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ <retval> ])
        (nil)))
(insn 57 56 0 7 (use (reg/i:SI 0 ax)) "fs/open.c":206:1 -1
     (nil))

;; Function sys_ustat (sys_ustat, funcdef_no=17, decl_uid=1479, cgraph_uid=18, symbol_order=17)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 8(l0): point = 4
   Insn 5(l0): point = 6
   Insn 15(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [8..8]
Compressing live ranges: from 11 to 5 - 45%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_ustat

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 83 [ _1 ])
        (const_int -38 [0xffffffffffffffda])) "fs/open.c":210:12 75 {*movsi_internal}
     (nil))
(insn 8 5 12 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _1 ])) "fs/open.c":210:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/open.c":211:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) "fs/open.c":211:1 -1
     (nil))
