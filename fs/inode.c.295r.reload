
;; Function wait_on_inode (wait_on_inode, funcdef_no=1, decl_uid=1397, cgraph_uid=2, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) q {*cmpqi_ccno_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 30: point = 0, n_alt = -1
  BB 5
   Insn 24: point = 0, n_alt = -1
  BB 4
   Insn 22: point = 0, n_alt = -1
   Insn 21: point = 0, n_alt = 0
   Insn 19: point = 1, n_alt = 4
   Insn 18: point = 3, n_alt = 0
  BB 2
   Insn 27: point = 5, n_alt = -1
   Insn 5: point = 5, n_alt = -1
   Insn 31: point = 5, n_alt = 0
  BB 3
   Insn 15: point = 6, n_alt = 0
   Insn 14: point = 6, n_alt = 0
   Insn 13: point = 6, n_alt = -2
   Insn 12: point = 6, n_alt = 0
   Insn 11: point = 7, n_alt = 0
   Insn 10: point = 7, n_alt = 0
   Insn 9: point = 9, n_alt = 0
 r82: [0..10]
 r83: [6..7]
 r84: [0..1]
 r85: [8..9]
 r86: [2..3]
Compressing live ranges: from 11 to 8 - 72%
Ranges after the compression:
 r82: [0..7]
 r83: [4..5]
 r84: [0..1]
 r85: [6..7]
 r86: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 31
changing reg in insn 13
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 21
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.


wait_on_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,4u} r1={2d} r2={2d} r3={1d,1u} r7={4d,14u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={8d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 109{88d,20u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 27 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/inode.c:21)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":21:5 -1
     (nil))
(jump_insn 27 5 28 2 (set (pc)
        (label_ref 16)) "fs/inode.c":22:11 807 {jump}
     (nil)
 -> 16)
(barrier 28 27 20)
(code_label 20 28 8 3 3 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":23:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [85])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":23:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":23:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/inode.c":23:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7341ee515b00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":23:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":23:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 2 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":22:17 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 50 [0x32])) [0 inode_5(D)->i_lock+0 S1 A16])) "fs/inode.c":22:17 77 {*movqi_internal}
     (nil))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/inode.c":22:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/inode.c":22:12 806 {*jcc}
     (nil)
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 29 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/inode.c:24)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":24:5 -1
     (nil))
(note 29 24 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 6 (const_int 0 [0]) "fs/inode.c":25:1 843 {nop}
     (nil))
(note 32 30 0 NOTE_INSN_DELETED)

;; Function lock_inode (lock_inode, funcdef_no=2, decl_uid=1403, cgraph_uid=3, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) qn {*movqi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 32: point = 0, n_alt = -1
  BB 5
   Insn 26: point = 0, n_alt = -1
   Insn 25: point = 0, n_alt = 8
   Insn 24: point = 1, n_alt = 0
  BB 4
   Insn 22: point = 2, n_alt = -1
   Insn 21: point = 2, n_alt = 0
   Insn 19: point = 3, n_alt = 4
   Insn 18: point = 5, n_alt = 0
  BB 2
   Insn 29: point = 7, n_alt = -1
   Insn 5: point = 7, n_alt = -1
   Insn 33: point = 7, n_alt = 0
  BB 3
   Insn 15: point = 8, n_alt = 0
   Insn 14: point = 8, n_alt = 0
   Insn 13: point = 8, n_alt = -2
   Insn 12: point = 8, n_alt = 0
   Insn 11: point = 9, n_alt = 0
   Insn 10: point = 9, n_alt = 0
   Insn 9: point = 11, n_alt = 0
 r82: [2..12]
 r83: [8..9]
 r84: [2..3]
 r85: [10..11]
 r86: [4..5]
 r87: [0..1]
Compressing live ranges: from 13 to 10 - 76%
Ranges after the compression:
 r82: [2..9]
 r83: [6..7]
 r84: [2..3]
 r85: [8..9]
 r86: [4..5]
 r87: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 33
changing reg in insn 13
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 21
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.


lock_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={2d} r2={2d} r3={1d,1u} r7={4d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={8d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 112{89d,22u,1e} in 17{16 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 33 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 33 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 29 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/inode.c:29)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":29:5 -1
     (nil))
(jump_insn 29 5 30 2 (set (pc)
        (label_ref 16)) "fs/inode.c":30:11 807 {jump}
     (nil)
 -> 16)
(barrier 30 29 20)
(code_label 20 30 8 3 6 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 0 ax [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":31:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [85])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":31:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":31:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/inode.c":31:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x7341ee515b00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":31:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":31:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 5 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":30:17 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 50 [0x32])) [0 inode_5(D)->i_lock+0 S1 A16])) "fs/inode.c":30:17 77 {*movqi_internal}
     (nil))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/inode.c":30:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/inode.c":30:12 806 {*jcc}
     (nil)
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":32:19 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (mem:QI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 50 [0x32])) [0 inode_5(D)->i_lock+0 S1 A16])
        (const_int 1 [0x1])) "fs/inode.c":32:19 77 {*movqi_internal}
     (nil))
(insn 26 25 31 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/inode.c:33)
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":33:5 -1
     (nil))
(note 31 26 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 34 6 (const_int 0 [0]) "fs/inode.c":34:1 843 {nop}
     (nil))
(note 34 32 0 NOTE_INSN_DELETED)

;; Function unlock_inode (unlock_inode, funcdef_no=3, decl_uid=1409, cgraph_uid=4, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 6:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 17: point = 0, n_alt = -1
  BB 2
   Insn 13: point = 0, n_alt = 0
   Insn 12: point = 0, n_alt = 0
   Insn 11: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = 0
   Insn 9: point = 2, n_alt = 0
   Insn 8: point = 2, n_alt = 0
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 5, n_alt = 8
   Insn 5: point = 6, n_alt = 0
   Insn 18: point = 7, n_alt = 0
 r82: [0..7]
 r83: [1..2]
 r84: [5..6]
 r85: [3..4]
Compressing live ranges: from 8 to 6 - 75%
Ranges after the compression:
 r82: [0..5]
 r83: [0..1]
 r84: [4..5]
 r85: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 18
changing reg in insn 11
changing reg in insn 8
changing reg in insn 10
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.


unlock_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={5d,3u} r2={2d} r3={1d,1u} r7={4d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={5d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 102{85d,16u,1e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":38:19 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem:QI (plus:SI (reg/f:SI 1 dx [84])
                (const_int 50 [0x32])) [0 inode_3(D)->i_lock+0 S1 A16])
        (const_int 0 [0])) "fs/inode.c":38:19 77 {*movqi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":39:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 1 dx [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 1 dx [85])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":39:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":39:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 10 9 11 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 1 dx [orig:83 _1 ] [83])) "fs/inode.c":39:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 11 10 12 2 (set (reg:SI 3 bx)
        (reg:SI 0 ax [82])) "fs/inode.c":39:5 75 {*movsi_internal}
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7341ee515f00 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":39:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 13 12 16 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":39:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 16 13 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 19 3 (const_int 0 [0]) "fs/inode.c":40:1 843 {nop}
     (nil))
(note 19 17 0 NOTE_INSN_DELETED)

;; Function invalidate_inodes (invalidate_inodes, funcdef_no=4, decl_uid=1137, cgraph_uid=5, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 22:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 35:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5
EBB 6
EBB 7
EBB 8 10 9 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 57: point = 0, n_alt = -1
  BB 9
  BB 10
   Insn 55: point = 0, n_alt = -1
  BB 8
   Insn 48: point = 0, n_alt = -1
   Insn 47: point = 0, n_alt = 0
  BB 2
   Insn 52: point = 1, n_alt = -1
   Insn 7: point = 1, n_alt = 1
   Insn 6: point = 1, n_alt = 1
   Insn 5: point = 2, n_alt = 0
   Insn 58: point = 3, n_alt = 0
  BB 7
   Insn 41: point = 4, n_alt = 0
   Insn 40: point = 4, n_alt = 0
  BB 6
   Insn 37: point = 5, n_alt = 3
   Insn 36: point = 6, n_alt = 0
   Insn 35: point = 7, n_alt = 8
   Insn 34: point = 8, n_alt = 0
  BB 5
   Insn 31: point = 10, n_alt = 0
   Insn 30: point = 10, n_alt = 0
   Insn 29: point = 10, n_alt = -2
   Insn 28: point = 10, n_alt = 0
   Insn 27: point = 11, n_alt = 0
   Insn 26: point = 12, n_alt = 0
  BB 4
   Insn 24: point = 13, n_alt = -1
   Insn 23: point = 13, n_alt = 0
   Insn 22: point = 14, n_alt = 2
   Insn 21: point = 16, n_alt = 0
  BB 3
   Insn 19: point = 18, n_alt = -1
   Insn 18: point = 18, n_alt = 0
   Insn 17: point = 19, n_alt = 0
   Insn 16: point = 21, n_alt = 2
   Insn 15: point = 23, n_alt = 0
   Insn 14: point = 24, n_alt = 0
   Insn 13: point = 24, n_alt = 0
   Insn 12: point = 24, n_alt = 0
   Insn 11: point = 24, n_alt = 0
 r82: [0..24]
 r83: [20..21]
 r84: [18..19]
 r85: [13..14]
 r86: [1..2]
 r87: [22..23]
 r88: [15..16]
 r89: [10..11]
 r90: [7..8]
 r91: [5..6]
Compressing live ranges: from 25 to 18 - 72%
Ranges after the compression:
 r82: [0..17]
 r83: [14..15]
 r84: [12..13]
 r85: [8..9]
 r86: [0..1]
 r87: [16..17]
 r88: [10..11]
 r89: [6..7]
 r90: [4..5]
 r91: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 58
changing reg in insn 29
changing reg in insn 27
changing reg in insn 5
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 5
changing reg in insn 6
changing reg in insn 15
changing reg in insn 16
changing reg in insn 21
changing reg in insn 22
changing reg in insn 27
changing reg in insn 28
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
deleting insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns


invalidate_inodes

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={12d,9u} r1={3d} r2={3d} r3={1d,3u} r7={7d,36u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={12d,3u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 219{168d,51u,0e} in 33{31 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 58 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [86])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":47:11 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [86])) "fs/inode.c":47:11 75 {*movsi_internal}
     (nil))
(insn 7 6 52 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":48:12 75 {*movsi_internal}
     (nil))
(jump_insn 52 7 53 2 (set (pc)
        (label_ref 42)) "fs/inode.c":48:5 807 {jump}
     (nil)
 -> 42)
(barrier 53 52 44)
(code_label 44 53 10 3 12 (nil) [1 uses])
(note 10 44 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":49:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [5 inode+0 S4 A32])) "fs/inode.c":49:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":49:9 812 {*call}
     (nil)
    (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":49:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 15 14 16 3 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])) "fs/inode.c":50:18 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 44 [0x2c])) [2 inode_5->i_dev+0 S2 A32])) "fs/inode.c":50:18 76 {*movhi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/inode.c":50:18 144 {*zero_extendhisi2}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:84 _2 ] [84]))) "fs/inode.c":50:12 11 {*cmpsi_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fs/inode.c":50:12 806 {*jcc}
     (nil)
 -> 38)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])) "fs/inode.c":51:22 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [88])
                (const_int 48 [0x30])) [2 inode_5->i_count+0 S2 A32])) "fs/inode.c":51:22 76 {*movhi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:85 _3 ] [85])
            (const_int 0 [0]))) "fs/inode.c":51:16 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "fs/inode.c":51:16 806 {*jcc}
     (nil)
 -> 32)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":52:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 27 26 28 5 (set (reg/f:SI 0 ax [89])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7341ee5b71b0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":52:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7341ee5b71b0 *.LC0>)
        (nil)))
(insn 28 27 30 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [89])) "fs/inode.c":52:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 30 28 31 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7341ee538f00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":52:17 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":52:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 32 31 33 6 11 (nil) [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])) "fs/inode.c":53:42 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (mem:QI (plus:SI (reg/f:SI 0 ax [90])
                (const_int 51 [0x33])) [0 inode_5->i_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/inode.c":53:42 77 {*movqi_internal}
     (nil))
(insn 36 35 37 6 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])) "fs/inode.c":53:26 75 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (mem:HI (plus:SI (reg/f:SI 0 ax [91])
                (const_int 44 [0x2c])) [2 inode_5->i_dev+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":53:26 76 {*movhi_internal}
     (nil))
(code_label 38 37 39 7 10 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":48:32 209 {*addsi_1}
     (nil))
(insn 41 40 42 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":48:41 209 {*addsi_1}
     (nil))
(code_label 42 41 43 8 9 (nil) [1 uses])
(note 43 42 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 43 48 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/inode.c":48:19 11 {*cmpsi_1}
     (nil))
(jump_insn 48 47 54 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/inode.c":48:19 806 {*jcc}
     (nil)
 -> 44)
(note 54 48 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 49 10 (const_int 0 [0]) "fs/inode.c":56:1 843 {nop}
     (nil))
(note 49 55 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 56 49 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 59 11 (const_int 0 [0]) "fs/inode.c":56:1 843 {nop}
     (nil))
(note 59 57 0 NOTE_INSN_DELETED)

;; Function iput (iput, funcdef_no=5, decl_uid=1108, cgraph_uid=6, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 42:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 43:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 65:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 67:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 73:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 78:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 79:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 87:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 94:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 100:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 101:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 109:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 116:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 117:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 119:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 125:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 129:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 134:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 144:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 151:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 152:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 155:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 162:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 163:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 165:  (0) m  (1) rn {*movhi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6 7
EBB 8 9
EBB 10 11
EBB 23
EBB 12
EBB 13 14
EBB 15 16
EBB 17 18
EBB 19
EBB 21
EBB 22
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
  BB 21
   Insn 185: point = 0, n_alt = -1
   Insn 184: point = 0, n_alt = -1
  BB 9
   Insn 172: point = 0, n_alt = -1
   Insn 81: point = 0, n_alt = 3
   Insn 80: point = 1, n_alt = 0
   Insn 79: point = 2, n_alt = 3
   Insn 78: point = 4, n_alt = 2
   Insn 77: point = 6, n_alt = 0
  BB 7
   Insn 170: point = 7, n_alt = -1
   Insn 67: point = 7, n_alt = 8
   Insn 66: point = 8, n_alt = 0
   Insn 65: point = 9, n_alt = 8
   Insn 64: point = 10, n_alt = 0
   Insn 63: point = 11, n_alt = 3
   Insn 62: point = 12, n_alt = 0
   Insn 61: point = 13, n_alt = 0
   Insn 60: point = 13, n_alt = 0
   Insn 59: point = 13, n_alt = -2
   Insn 58: point = 14, n_alt = 0
   Insn 57: point = 15, n_alt = 0
   Insn 56: point = 15, n_alt = 0
   Insn 55: point = 17, n_alt = 0
  BB 14
   Insn 174: point = 19, n_alt = -1
   Insn 119: point = 19, n_alt = 3
   Insn 118: point = 20, n_alt = 0
   Insn 117: point = 21, n_alt = 3
   Insn 116: point = 23, n_alt = 2
   Insn 115: point = 25, n_alt = 0
  BB 22
   Insn 189: point = 26, n_alt = -1
  BB 6
   Insn 49: point = 26, n_alt = -1
   Insn 48: point = 26, n_alt = 0
   Insn 47: point = 27, n_alt = 2
   Insn 46: point = 29, n_alt = 0
   Insn 45: point = 30, n_alt = 3
   Insn 44: point = 31, n_alt = 0
   Insn 43: point = 32, n_alt = 3
   Insn 42: point = 34, n_alt = 2
   Insn 41: point = 36, n_alt = 0
   Insn 40: point = 37, n_alt = 0
   Insn 39: point = 37, n_alt = 0
   Insn 38: point = 37, n_alt = -2
   Insn 37: point = 37, n_alt = 0
   Insn 36: point = 38, n_alt = 0
   Insn 35: point = 38, n_alt = 0
   Insn 34: point = 40, n_alt = 0
  BB 19
   Insn 180: point = 42, n_alt = -1
   Insn 165: point = 42, n_alt = 3
   Insn 164: point = 43, n_alt = 0
   Insn 163: point = 44, n_alt = 3
   Insn 162: point = 46, n_alt = 2
   Insn 161: point = 48, n_alt = 0
  BB 16
   Insn 176: point = 49, n_alt = -1
   Insn 138: point = 49, n_alt = 0
   Insn 137: point = 49, n_alt = 0
   Insn 136: point = 49, n_alt = -2
   Insn 135: point = 50, n_alt = 0
   Insn 134: point = 50, n_alt = 0
   Insn 133: point = 50, n_alt = 0
   Insn 132: point = 50, n_alt = 0
   Insn 131: point = 50, n_alt = -2
   Insn 130: point = 50, n_alt = 0
   Insn 129: point = 50, n_alt = 0
  BB 15
   Insn 127: point = 51, n_alt = -1
   Insn 126: point = 51, n_alt = 0
   Insn 125: point = 52, n_alt = 4
   Insn 124: point = 54, n_alt = 0
  BB 13
   Insn 113: point = 56, n_alt = -1
   Insn 112: point = 56, n_alt = 0
   Insn 109: point = 57, n_alt = 2
   Insn 108: point = 59, n_alt = 0
  BB 18
   Insn 178: point = 61, n_alt = -1
   Insn 155: point = 61, n_alt = 0
   Insn 154: point = 61, n_alt = 0
   Insn 153: point = 61, n_alt = 0
   Insn 152: point = 61, n_alt = 0
   Insn 151: point = 61, n_alt = 0
   Insn 150: point = 61, n_alt = 0
   Insn 149: point = 61, n_alt = 0
   Insn 148: point = 61, n_alt = 0
  BB 17
   Insn 146: point = 62, n_alt = -1
   Insn 145: point = 62, n_alt = 0
   Insn 144: point = 63, n_alt = 4
   Insn 143: point = 65, n_alt = 0
  BB 12
  BB 11
   Insn 190: point = 68, n_alt = -1
   Insn 104: point = 68, n_alt = 0
   Insn 103: point = 68, n_alt = 0
   Insn 102: point = 68, n_alt = 0
   Insn 101: point = 68, n_alt = 0
   Insn 100: point = 68, n_alt = 0
   Insn 99: point = 68, n_alt = 0
   Insn 98: point = 68, n_alt = -2
   Insn 97: point = 68, n_alt = 0
   Insn 96: point = 69, n_alt = 0
   Insn 95: point = 69, n_alt = 0
   Insn 94: point = 71, n_alt = 2
   Insn 93: point = 73, n_alt = 0
  BB 23
   Insn 194: point = 75, n_alt = -1
  BB 10
   Insn 91: point = 76, n_alt = -1
   Insn 90: point = 76, n_alt = 0
   Insn 89: point = 77, n_alt = 0
   Insn 88: point = 79, n_alt = 0
   Insn 87: point = 81, n_alt = 2
   Insn 86: point = 83, n_alt = 0
  BB 8
   Insn 75: point = 85, n_alt = -1
   Insn 74: point = 85, n_alt = 0
   Insn 73: point = 86, n_alt = 2
   Insn 72: point = 88, n_alt = 0
  BB 5
   Insn 32: point = 90, n_alt = -1
   Insn 31: point = 90, n_alt = 0
   Insn 30: point = 91, n_alt = 4
   Insn 29: point = 93, n_alt = 0
  BB 4
   Insn 26: point = 95, n_alt = 0
   Insn 25: point = 95, n_alt = 0
   Insn 24: point = 95, n_alt = -2
   Insn 23: point = 95, n_alt = 0
   Insn 22: point = 96, n_alt = 0
   Insn 21: point = 97, n_alt = 0
  BB 3
   Insn 19: point = 98, n_alt = -1
   Insn 18: point = 98, n_alt = 0
   Insn 17: point = 99, n_alt = 2
   Insn 16: point = 101, n_alt = 0
   Insn 15: point = 102, n_alt = 0
   Insn 14: point = 102, n_alt = 0
   Insn 13: point = 102, n_alt = 0
   Insn 12: point = 102, n_alt = 0
  BB 2
   Insn 6: point = 103, n_alt = -1
   Insn 5: point = 103, n_alt = 1
   Insn 195: point = 103, n_alt = 0
 r82: [49..103] [26..41] [13..18]
 r83: [98..99]
 r84: [90..91]
 r85: [37..38]
 r86: [33..34]
 r87: [30..32]
 r88: [26..27]
 r89: [14..15]
 r90: [85..86]
 r91: [3..4]
 r92: [0..2]
 r93: [80..81]
 r94: [78..79]
 r95: [76..77]
 r96: [70..71]
 r97: [68..69]
 r98: [56..57]
 r99: [22..23]
 r100: [19..21]
 r101: [51..52]
 r102: [62..63]
 r103: [45..46]
 r104: [42..44]
 r105: [100..101]
 r106: [95..96]
 r107: [92..93]
 r108: [39..40]
 r109: [35..36]
 r110: [30..31]
 r111: [28..29]
 r112: [16..17]
 r113: [11..12]
 r114: [9..10]
 r115: [7..8]
 r116: [87..88]
 r117: [5..6]
 r118: [0..1]
 r119: [82..83]
 r120: [72..73]
 r121: [58..59]
 r122: [24..25]
 r123: [19..20]
 r124: [53..54]
 r125: [64..65]
 r126: [47..48]
 r127: [42..43]
Compressing live ranges: from 104 to 82 - 78%
Ranges after the compression:
 r82: [42..81] [22..35] [12..15]
 r83: [78..79]
 r84: [72..73]
 r85: [32..33]
 r86: [28..29]
 r87: [26..27]
 r88: [22..23]
 r89: [12..13]
 r90: [68..69]
 r91: [2..3]
 r92: [0..1]
 r93: [64..65]
 r94: [62..63]
 r95: [60..61]
 r96: [56..57]
 r97: [54..55]
 r98: [46..47]
 r99: [18..19]
 r100: [16..17]
 r101: [42..43]
 r102: [50..51]
 r103: [38..39]
 r104: [36..37]
 r105: [80..81]
 r106: [76..77]
 r107: [74..75]
 r108: [34..35]
 r109: [30..31]
 r110: [26..27]
 r111: [24..25]
 r112: [14..15]
 r113: [10..11]
 r114: [8..9]
 r115: [6..7]
 r116: [70..71]
 r117: [4..5]
 r118: [0..1]
 r119: [66..67]
 r120: [58..59]
 r121: [48..49]
 r122: [20..21]
 r123: [16..17]
 r124: [44..45]
 r125: [52..53]
 r126: [40..41]
 r127: [36..37]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 195
changing reg in insn 136
changing reg in insn 131
changing reg in insn 98
changing reg in insn 59
changing reg in insn 38
changing reg in insn 24
changing reg in insn 22
changing reg in insn 17
changing reg in insn 18
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 37
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 56
changing reg in insn 58
changing reg in insn 73
changing reg in insn 74
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 81
changing reg in insn 87
changing reg in insn 88
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 90
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 97
changing reg in insn 109
changing reg in insn 112
changing reg in insn 116
changing reg in insn 117
changing reg in insn 117
changing reg in insn 119
changing reg in insn 125
changing reg in insn 126
changing reg in insn 144
changing reg in insn 145
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 165
changing reg in insn 16
changing reg in insn 17
changing reg in insn 22
changing reg in insn 23
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 55
changing reg in insn 56
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 72
changing reg in insn 73
changing reg in insn 77
changing reg in insn 78
changing reg in insn 80
changing reg in insn 81
changing reg in insn 86
changing reg in insn 87
changing reg in insn 93
changing reg in insn 94
changing reg in insn 108
changing reg in insn 109
changing reg in insn 115
changing reg in insn 116
changing reg in insn 118
changing reg in insn 119
changing reg in insn 124
changing reg in insn 125
changing reg in insn 143
changing reg in insn 144
changing reg in insn 161
changing reg in insn 162
changing reg in insn 164
changing reg in insn 165
deleting insn with uid = 24.
deleting insn with uid = 38.
deleting insn with uid = 59.
deleting insn with uid = 98.
deleting insn with uid = 131.
deleting insn with uid = 136.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 150.
verify found no changes in insn with uid = 154.


iput

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={52d,41u} r1={15d,4u} r2={11d} r3={1d,7u} r7={31d,112u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1e} r17={46d,9u} r18={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 980{806d,173u,1e} in 122{112 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 195 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 195 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 195 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":60:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 183)
            (pc))) "fs/inode.c":60:8 806 {*jcc}
     (nil)
 -> 183)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":62:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 13 12 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":62:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":62:5 812 {*call}
     (nil)
    (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":62:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 16 15 17 3 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":63:15 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [105])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":63:15 76 {*movhi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/inode.c":63:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/inode.c":63:8 806 {*jcc}
     (nil)
 -> 27)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":64:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 22 21 23 4 (set (reg/f:SI 0 ax [106])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7341ee5b7360 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":64:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7341ee5b7360 *.LC1>)
        (nil)))
(insn 23 22 25 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [106])) "fs/inode.c":64:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 25 23 26 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":64:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":64:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 27 26 28 5 16 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":65:14 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 52 [0x34])) [0 inode_29(D)->i_pipe+0 S1 A32])) "fs/inode.c":65:14 77 {*movqi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/inode.c":65:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/inode.c":65:8 806 {*jcc}
     (nil)
 -> 70)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":66:8 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 0 ax [108])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":66:8 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [5 inode+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 36 35 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":66:8 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 37 36 39 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/inode.c":66:8 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 39 37 40 6 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x7341ee515f00 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":66:8 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":66:8 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 41 40 42 6 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":67:19 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:HI 0 ax [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 0 ax [109])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":67:19 76 {*movhi_internal}
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:HI 1 dx [orig:87 _5 ] [87])
                (plus:HI (reg:HI 0 ax [orig:86 _4 ] [86])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":67:12 212 {*addhi_1}
     (nil))
(insn 44 43 45 6 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":67:11 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (mem:HI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:87 _5 ] [87])) "fs/inode.c":67:11 76 {*movhi_internal}
     (nil))
(insn 46 45 47 6 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":67:19 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":67:19 76 {*movhi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:88 _6 ] [88])
            (const_int 0 [0]))) "fs/inode.c":67:11 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 49 48 54 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 188)
            (pc))) "fs/inode.c":67:11 806 {*jcc}
     (nil)
 -> 188)
(note 54 49 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":69:8 75 {*movsi_internal}
     (nil))
(insn 56 55 57 7 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 4 [0x4])) [3 inode_29(D)->i_size+0 S4 A32])) "fs/inode.c":69:8 75 {*movsi_internal}
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":69:8 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 58 57 60 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:89 _7 ] [89])) "fs/inode.c":69:8 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 60 58 61 7 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x7341ee538800 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":69:8 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 61 60 62 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":69:8 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 62 61 63 7 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":70:23 75 {*movsi_internal}
     (nil))
(insn 63 62 64 7 (set (mem:HI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":70:23 76 {*movhi_internal}
     (nil))
(insn 64 63 65 7 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":71:23 75 {*movsi_internal}
     (nil))
(insn 65 64 66 7 (set (mem:QI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 51 [0x33])) [0 inode_29(D)->i_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/inode.c":71:23 77 {*movqi_internal}
     (nil))
(insn 66 65 67 7 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":72:23 75 {*movsi_internal}
     (nil))
(insn 67 66 170 7 (set (mem:QI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 52 [0x34])) [0 inode_29(D)->i_pipe+0 S1 A32])
        (const_int 0 [0])) "fs/inode.c":72:23 77 {*movqi_internal}
     (nil))
(jump_insn 170 67 171 7 (set (pc)
        (label_ref 168)) "fs/inode.c":73:8 807 {jump}
     (nil)
 -> 168)
(barrier 171 170 70)
(code_label 70 171 71 8 17 (nil) [1 uses])
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":75:15 75 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 44 [0x2c])) [2 inode_29(D)->i_dev+0 S2 A32])) "fs/inode.c":75:15 76 {*movhi_internal}
     (nil))
(insn 74 73 75 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "fs/inode.c":75:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 75 74 76 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "fs/inode.c":75:8 806 {*jcc}
     (nil)
 -> 84)
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":76:14 75 {*movsi_internal}
     (nil))
(insn 78 77 79 9 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":76:14 76 {*movhi_internal}
     (nil))
(insn 79 78 80 9 (parallel [
            (set (reg:HI 1 dx [orig:92 _11 ] [92])
                (plus:HI (reg:HI 0 ax [orig:91 _9 ] [91])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":76:23 212 {*addhi_1}
     (nil))
(insn 80 79 81 9 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":76:23 75 {*movsi_internal}
     (nil))
(insn 81 80 172 9 (set (mem:HI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:92 _11 ] [92])) "fs/inode.c":76:23 76 {*movhi_internal}
     (nil))
(jump_insn 172 81 173 9 (set (pc)
        (label_ref 168)) "fs/inode.c":77:9 807 {jump}
     (nil)
 -> 168)
(barrier 173 172 84)
(code_label 84 173 85 10 19 (nil) [1 uses])
(note 85 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 10 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":79:9 75 {*movsi_internal}
     (nil))
(insn 87 86 88 10 (set (reg:HI 0 ax [orig:93 _12 ] [93])
        (mem:HI (reg/f:SI 0 ax [119]) [2 inode_29(D)->i_mode+0 S2 A32])) "fs/inode.c":79:9 76 {*movhi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:SI 0 ax [orig:94 _13 ] [94])
        (zero_extend:SI (reg:HI 0 ax [orig:93 _12 ] [93]))) "fs/inode.c":79:9 144 {*zero_extendhisi2}
     (nil))
(insn 89 88 90 10 (parallel [
            (set (reg:SI 0 ax [orig:95 _14 ] [95])
                (and:SI (reg:SI 0 ax [orig:94 _13 ] [94])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":79:9 490 {*andsi_1}
     (nil))
(insn 90 89 91 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 _14 ] [95])
            (const_int 24576 [0x6000]))) "fs/inode.c":79:8 11 {*cmpsi_1}
     (nil))
(jump_insn 91 90 92 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 193)
            (pc))) "fs/inode.c":79:8 806 {*jcc}
     (nil)
 -> 193)
(note 92 91 93 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 11 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":80:31 75 {*movsi_internal}
     (nil))
(insn 94 93 95 11 (set (reg:HI 0 ax [orig:96 _15 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 14 [0xe])) [2 inode_29(D)->i_zone[0]+0 S2 A16])) "fs/inode.c":80:31 76 {*movhi_internal}
     (nil))
(insn 95 94 96 11 (set (reg:SI 0 ax [orig:97 _16 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _15 ] [96]))) "fs/inode.c":80:9 144 {*zero_extendhisi2}
     (nil))
(insn 96 95 97 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":80:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 97 96 99 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:97 _16 ] [97])) "fs/inode.c":80:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 99 97 100 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sync_dev") [flags 0x41]  <function_decl 0x7341ee4d2f00 sync_dev>) [0 sync_dev S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":80:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 100 99 101 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":80:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 101 100 102 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":81:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 102 101 103 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":81:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 103 102 104 11 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":81:9 812 {*call}
     (nil)
    (nil))
(insn 104 103 190 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":81:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 190 104 191 11 (set (pc)
        (label_ref 105)) 807 {jump}
     (nil)
 -> 105)
(barrier 191 190 193)
(code_label 193 191 192 23 27 (nil) [1 uses])
(note 192 193 194 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 194 192 105 23 (const_int 0 [0]) "fs/inode.c":83:1 843 {nop}
     (nil))
(code_label 105 194 106 12 20 ("repeat") [1 uses])
(note 106 105 156 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 156 106 107 13 24 (nil) [1 uses])
(note 107 156 108 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 13 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":84:14 75 {*movsi_internal}
     (nil))
(insn 109 108 112 13 (set (reg:HI 0 ax [orig:98 _17 ] [98])
        (mem:HI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":84:14 76 {*movhi_internal}
     (nil))
(insn 112 109 113 13 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 0 ax [orig:98 _17 ] [98])
            (const_int 1 [0x1]))) "fs/inode.c":84:8 10 {*cmphi_1}
     (nil))
(jump_insn 113 112 114 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "fs/inode.c":84:8 806 {*jcc}
     (nil)
 -> 122)
(note 114 113 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 14 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":85:14 75 {*movsi_internal}
     (nil))
(insn 116 115 117 14 (set (reg:HI 0 ax [orig:99 _18 ] [99])
        (mem:HI (plus:SI (reg/f:SI 0 ax [122])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":85:14 76 {*movhi_internal}
     (nil))
(insn 117 116 118 14 (parallel [
            (set (reg:HI 1 dx [orig:100 _20 ] [100])
                (plus:HI (reg:HI 0 ax [orig:99 _18 ] [99])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":85:23 212 {*addhi_1}
     (nil))
(insn 118 117 119 14 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":85:23 75 {*movsi_internal}
     (nil))
(insn 119 118 174 14 (set (mem:HI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:100 _20 ] [100])) "fs/inode.c":85:23 76 {*movhi_internal}
     (nil))
(jump_insn 174 119 175 14 (set (pc)
        (label_ref 168)) "fs/inode.c":86:9 807 {jump}
     (nil)
 -> 168)
(barrier 175 174 122)
(code_label 122 175 123 15 21 (nil) [1 uses])
(note 123 122 124 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 15 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":88:15 75 {*movsi_internal}
     (nil))
(insn 125 124 126 15 (set (reg:QI 0 ax [orig:101 _21 ] [101])
        (mem:QI (plus:SI (reg/f:SI 0 ax [124])
                (const_int 13 [0xd])) [0 inode_29(D)->i_nlinks+0 S1 A8])) "fs/inode.c":88:15 77 {*movqi_internal}
     (nil))
(insn 126 125 127 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:101 _21 ] [101])
            (const_int 0 [0]))) "fs/inode.c":88:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 127 126 128 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) "fs/inode.c":88:8 806 {*jcc}
     (nil)
 -> 141)
(note 128 127 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":89:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 130 129 132 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":89:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 132 130 133 16 (call (mem:QI (symbol_ref:SI ("truncate") [flags 0x41]  <function_decl 0x7341ee4d2600 truncate>) [0 truncate S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":89:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 133 132 134 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":89:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 134 133 135 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":90:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 135 134 137 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":90:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 137 135 138 16 (call (mem:QI (symbol_ref:SI ("free_inode") [flags 0x41]  <function_decl 0x7341ee4d2800 free_inode>) [0 free_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":90:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 138 137 176 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":90:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 176 138 177 16 (set (pc)
        (label_ref 168)) "fs/inode.c":91:9 807 {jump}
     (nil)
 -> 168)
(barrier 177 176 141)
(code_label 141 177 142 17 22 (nil) [1 uses])
(note 142 141 143 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 17 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":93:14 75 {*movsi_internal}
     (nil))
(insn 144 143 145 17 (set (reg:QI 0 ax [orig:102 _22 ] [102])
        (mem:QI (plus:SI (reg/f:SI 0 ax [125])
                (const_int 51 [0x33])) [0 inode_29(D)->i_dirt+0 S1 A8])) "fs/inode.c":93:14 77 {*movqi_internal}
     (nil))
(insn 145 144 146 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:102 _22 ] [102])
            (const_int 0 [0]))) "fs/inode.c":93:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 146 145 147 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) "fs/inode.c":93:8 806 {*jcc}
     (nil)
 -> 159)
(note 147 146 148 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":94:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 149 148 150 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":94:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 150 149 151 18 (call (mem:QI (symbol_ref:SI ("write_inode") [flags 0x3]  <function_decl 0x7341ee540c00 write_inode>) [0 write_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":94:9 812 {*call}
     (nil)
    (nil))
(insn 151 150 152 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":94:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 152 151 153 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":95:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 153 152 154 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":95:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 154 153 155 18 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":95:9 812 {*call}
     (nil)
    (nil))
(insn 155 154 178 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":95:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 178 155 179 18 (set (pc)
        (label_ref 156)) "fs/inode.c":96:9 807 {jump}
     (nil)
 -> 156)
(barrier 179 178 159)
(code_label 159 179 160 19 23 (nil) [1 uses])
(note 160 159 161 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 19 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":98:10 75 {*movsi_internal}
     (nil))
(insn 162 161 163 19 (set (reg:HI 0 ax [orig:103 _23 ] [103])
        (mem:HI (plus:SI (reg/f:SI 0 ax [126])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])) "fs/inode.c":98:10 76 {*movhi_internal}
     (nil))
(insn 163 162 164 19 (parallel [
            (set (reg:HI 1 dx [orig:104 _25 ] [104])
                (plus:HI (reg:HI 0 ax [orig:103 _23 ] [103])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":98:19 212 {*addhi_1}
     (nil))
(insn 164 163 165 19 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 inode+0 S4 A32])) "fs/inode.c":98:19 75 {*movsi_internal}
     (nil))
(insn 165 164 180 19 (set (mem:HI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 48 [0x30])) [2 inode_29(D)->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:104 _25 ] [104])) "fs/inode.c":98:19 76 {*movhi_internal}
     (nil))
(jump_insn 180 165 181 19 (set (pc)
        (label_ref 168)) "fs/inode.c":99:5 807 {jump}
     (nil)
 -> 168)
(barrier 181 180 183)
(code_label 183 181 182 21 25 (nil) [1 uses])
(note 182 183 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 184 182 185 21 (const_int 0 [0]) "fs/inode.c":61:9 843 {nop}
     (nil))
(jump_insn 185 184 186 21 (set (pc)
        (label_ref 168)) 807 {jump}
     (nil)
 -> 168)
(barrier 186 185 188)
(code_label 188 186 187 22 26 (nil) [1 uses])
(note 187 188 189 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 189 187 168 22 (const_int 0 [0]) "fs/inode.c":68:12 843 {nop}
     (nil))
(code_label 168 189 169 20 13 (nil) [6 uses])
(note 169 168 196 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(note 196 169 0 NOTE_INSN_DELETED)

;; Function write_inode (write_inode, funcdef_no=6, decl_uid=1395, cgraph_uid=7, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 10:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 50:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 52:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 54:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 56
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 59:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 64
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 67:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 85:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 91:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 95:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 116:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 118:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 119:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 123:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 124:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 127:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 7 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
  BB 4
   Insn 132: point = 0, n_alt = -1
   Insn 23: point = 0, n_alt = 0
   Insn 22: point = 0, n_alt = 0
   Insn 21: point = 0, n_alt = 0
   Insn 20: point = 0, n_alt = 0
  BB 9
   Insn 127: point = 0, n_alt = 0
   Insn 126: point = 0, n_alt = 0
   Insn 125: point = 0, n_alt = 0
   Insn 124: point = 0, n_alt = 0
   Insn 123: point = 0, n_alt = 0
   Insn 122: point = 0, n_alt = 0
   Insn 121: point = 0, n_alt = -2
   Insn 120: point = 1, n_alt = 0
   Insn 119: point = 1, n_alt = 0
   Insn 118: point = 1, n_alt = 8
   Insn 117: point = 2, n_alt = 0
   Insn 116: point = 3, n_alt = 8
   Insn 115: point = 4, n_alt = 0
   Insn 114: point = 5, n_alt = 1
   Insn 113: point = 6, n_alt = 0
   Insn 112: point = 8, n_alt = 1
   Insn 111: point = 9, n_alt = 0
   Insn 110: point = 10, n_alt = 1
   Insn 109: point = 11, n_alt = 0
   Insn 108: point = 12, n_alt = 1
   Insn 107: point = 13, n_alt = 0
   Insn 106: point = 14, n_alt = 1
   Insn 105: point = 15, n_alt = 0
   Insn 104: point = 16, n_alt = 1
   Insn 103: point = 17, n_alt = 0
   Insn 102: point = 18, n_alt = 1
   Insn 101: point = 19, n_alt = 0
   Insn 100: point = 20, n_alt = 1
   Insn 99: point = 21, n_alt = 0
   Insn 98: point = 22, n_alt = 0
   Insn 97: point = 23, n_alt = 0
   Insn 96: point = 25, n_alt = 0
   Insn 95: point = 27, n_alt = 0
   Insn 94: point = 29, n_alt = -2
   Insn 93: point = 31, n_alt = 0
   Insn 92: point = 33, n_alt = 0
   Insn 91: point = 35, n_alt = 2
   Insn 90: point = 37, n_alt = 0
   Insn 89: point = 38, n_alt = 0
   Insn 88: point = 40, n_alt = 0
  BB 8
   Insn 85: point = 42, n_alt = 0
   Insn 84: point = 42, n_alt = 0
   Insn 83: point = 42, n_alt = -2
   Insn 82: point = 42, n_alt = 0
   Insn 81: point = 43, n_alt = 0
   Insn 80: point = 44, n_alt = 0
  BB 7
   Insn 78: point = 45, n_alt = -1
   Insn 77: point = 45, n_alt = 1
   Insn 76: point = 45, n_alt = 1
   Insn 75: point = 46, n_alt = -2
   Insn 74: point = 47, n_alt = 0
   Insn 73: point = 47, n_alt = 0
   Insn 72: point = 47, n_alt = -2
   Insn 71: point = 47, n_alt = 0
   Insn 70: point = 48, n_alt = 0
   Insn 69: point = 48, n_alt = 0
   Insn 68: point = 48, n_alt = 0
   Insn 67: point = 50, n_alt = 2
   Insn 66: point = 52, n_alt = 0
   Insn 65: point = 53, n_alt = 1
   Insn 64: point = 54, n_alt = 0
   Insn 63: point = 56, n_alt = 0
   Insn 62: point = 58, n_alt = -2
   Insn 61: point = 60, n_alt = 0
   Insn 60: point = 62, n_alt = 0
   Insn 59: point = 64, n_alt = 2
   Insn 58: point = 66, n_alt = 0
   Insn 57: point = 67, n_alt = -2
   Insn 56: point = 69, n_alt = 0
   Insn 55: point = 71, n_alt = 0
   Insn 54: point = 73, n_alt = 2
   Insn 53: point = 75, n_alt = 0
   Insn 52: point = 76, n_alt = 3
   Insn 51: point = 78, n_alt = 0
   Insn 50: point = 80, n_alt = 2
   Insn 49: point = 82, n_alt = 0
  BB 6
   Insn 46: point = 84, n_alt = 0
   Insn 45: point = 84, n_alt = 0
   Insn 44: point = 84, n_alt = -2
   Insn 43: point = 84, n_alt = 0
   Insn 42: point = 85, n_alt = 0
   Insn 41: point = 86, n_alt = 0
  BB 5
   Insn 39: point = 87, n_alt = -1
   Insn 38: point = 87, n_alt = 1
   Insn 37: point = 87, n_alt = 1
   Insn 36: point = 88, n_alt = -2
   Insn 35: point = 89, n_alt = 0
   Insn 34: point = 89, n_alt = 0
   Insn 33: point = 89, n_alt = -2
   Insn 32: point = 89, n_alt = 0
   Insn 31: point = 90, n_alt = 0
   Insn 30: point = 90, n_alt = 0
   Insn 29: point = 92, n_alt = 2
   Insn 28: point = 94, n_alt = 0
  BB 3
   Insn 17: point = 96, n_alt = -1
   Insn 16: point = 96, n_alt = 0
   Insn 15: point = 97, n_alt = 2
   Insn 14: point = 99, n_alt = 0
  BB 2
   Insn 12: point = 101, n_alt = -1
   Insn 11: point = 101, n_alt = 0
   Insn 10: point = 102, n_alt = 4
   Insn 9: point = 104, n_alt = 0
   Insn 8: point = 105, n_alt = 0
   Insn 7: point = 105, n_alt = 0
   Insn 6: point = 105, n_alt = 0
   Insn 5: point = 105, n_alt = 0
   Insn 134: point = 105, n_alt = 0
 r82: [0..105]
 r83: [101..102]
 r84: [96..97]
 r85: [91..92]
 r86: [89..90]
 r87: [79..80]
 r88: [77..78]
 r89: [70..76]
 r90: [72..73]
 r91: [70..71]
 r92: [68..69]
 r93: [55..67]
 r94: [63..64]
 r95: [61..62]
 r96: [59..60]
 r97: [57..58]
 r98: [55..56]
 r99: [53..54]
 r100: [49..50]
 r101: [47..48]
 r102: [24..38]
 r103: [34..35]
 r104: [32..33]
 r105: [30..31]
 r106: [28..29]
 r107: [26..27]
 r108: [24..25]
 r109: [5..23]
 r110: [103..104]
 r111: [98..99]
 r112: [93..94]
 r113: [87..88]
 r114: [84..85]
 r115: [81..82]
 r116: [74..75]
 r117: [65..66]
 r118: [51..52]
 r119: [45..46]
 r120: [42..43]
 r121: [39..40]
 r122: [36..37]
 r123: [7..22]
 r124: [20..21]
 r125: [18..19]
 r126: [16..17]
 r127: [14..15]
 r128: [12..13]
 r129: [10..11]
 r130: [8..9]
 r131: [5..6]
 r132: [3..4]
 r133: [1..2]
Compressing live ranges: from 106 to 92 - 86%
Ranges after the compression:
 r82: [0..91]
 r83: [88..89]
 r84: [84..85]
 r85: [80..81]
 r86: [78..79]
 r87: [70..71]
 r88: [68..69]
 r89: [62..67]
 r90: [64..65]
 r91: [62..63]
 r92: [60..61]
 r93: [48..59]
 r94: [56..57]
 r95: [54..55]
 r96: [52..53]
 r97: [50..51]
 r98: [48..49]
 r99: [46..47]
 r100: [42..43]
 r101: [40..41]
 r102: [20..33]
 r103: [30..31]
 r104: [28..29]
 r105: [26..27]
 r106: [24..25]
 r107: [22..23]
 r108: [20..21]
 r109: [4..19]
 r110: [90..91]
 r111: [86..87]
 r112: [82..83]
 r113: [76..77]
 r114: [74..75]
 r115: [72..73]
 r116: [66..67]
 r117: [58..59]
 r118: [44..45]
 r119: [38..39]
 r120: [36..37]
 r121: [34..35]
 r122: [32..33]
 r123: [6..19]
 r124: [18..19]
 r125: [16..17]
 r126: [14..15]
 r127: [12..13]
 r128: [10..11]
 r129: [8..9]
 r130: [6..7]
 r131: [4..5]
 r132: [2..3]
 r133: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 134
changing reg in insn 121
changing reg in insn 83
changing reg in insn 81
changing reg in insn 72
changing reg in insn 44
changing reg in insn 42
changing reg in insn 33
changing reg in insn 10
changing reg in insn 11
changing reg in insn 15
changing reg in insn 16
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 32
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 71
changing reg in insn 89
changing reg in insn 97
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 114
changing reg in insn 112
changing reg in insn 110
changing reg in insn 108
changing reg in insn 106
changing reg in insn 104
changing reg in insn 102
changing reg in insn 100
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 28
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 42
changing reg in insn 43
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 54
changing reg in insn 58
changing reg in insn 59
changing reg in insn 66
changing reg in insn 67
changing reg in insn 75
changing reg in insn 76
changing reg in insn 81
changing reg in insn 82
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 98
changing reg in insn 113
changing reg in insn 111
changing reg in insn 109
changing reg in insn 107
changing reg in insn 105
changing reg in insn 103
changing reg in insn 101
changing reg in insn 99
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
deleting insn with uid = 33.
deleting insn with uid = 36.
deleting insn with uid = 44.
deleting insn with uid = 62.
deleting insn with uid = 72.
deleting insn with uid = 75.
deleting insn with uid = 83.
deleting insn with uid = 94.
deleting insn with uid = 121.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 126.


write_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={45d,45u,1e} r1={13d,11u} r2={16d,7u} r3={1d,7u} r7={26d,81u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={38d,4u} r18={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 815{659d,155u,1e} in 103{95 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 134 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 134 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 134 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":108:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [5 inode+0 S4 A32])) "fs/inode.c":108:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:SI ("lock_inode") [flags 0x3]  <function_decl 0x7341ee540f00 lock_inode>) [0 lock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":108:5 812 {*call}
     (nil)
    (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":108:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":109:15 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 51 [0x33])) [0 inode_32(D)->i_dirt+0 S1 A8])) "fs/inode.c":109:15 77 {*movqi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/inode.c":109:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/inode.c":109:8 806 {*jcc}
     (nil)
 -> 18)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":109:33 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/inode.c":109:33 76 {*movhi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/inode.c":109:24 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "fs/inode.c":109:24 806 {*jcc}
     (nil)
 -> 26)
(code_label 18 17 19 4 29 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":110:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [5 inode+0 S4 A32])) "fs/inode.c":110:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:SI ("unlock_inode") [flags 0x3]  <function_decl 0x7341ee540100 unlock_inode>) [0 unlock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":110:9 812 {*call}
     (nil)
    (nil))
(insn 23 22 132 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":110:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 132 23 133 4 (set (pc)
        (label_ref 130)) "fs/inode.c":111:9 807 {jump}
     (nil)
 -> 130)
(barrier 133 132 26)
(code_label 26 133 27 5 30 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":113:31 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/inode.c":113:31 76 {*movhi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/inode.c":113:16 144 {*zero_extendhisi2}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":113:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 34 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "fs/inode.c":113:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 32 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7341ee510000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":113:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 37 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":113:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 37 35 38 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 sb+0 S4 A32])
        (reg:SI 0 ax [113])) "fs/inode.c":113:16 75 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [11 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":113:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "fs/inode.c":113:8 806 {*jcc}
     (nil)
 -> 47)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":114:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 42 41 43 6 (set (reg/f:SI 0 ax [114])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7341ee5b7510 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":114:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7341ee5b7510 *.LC2>)
        (nil)))
(insn 43 42 45 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [114])) "fs/inode.c":114:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 45 43 46 6 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":114:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":114:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 47 46 48 7 32 (nil) [1 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 sb+0 S4 A32])) "fs/inode.c":115:19 75 {*movsi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 4 [0x4])) [2 sb_35->s_imap_blocks+0 S2 A32])) "fs/inode.c":115:19 76 {*movhi_internal}
     (nil))
(insn 51 50 52 7 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (zero_extend:SI (reg:HI 0 ax [orig:87 _5 ] [87]))) "fs/inode.c":115:19 144 {*zero_extendhisi2}
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg:SI 1 dx [orig:89 _7 ] [89])
                (plus:SI (reg:SI 0 ax [orig:88 _6 ] [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":115:15 209 {*addsi_1}
     (nil))
(insn 53 52 54 7 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 sb+0 S4 A32])) "fs/inode.c":115:39 75 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 6 [0x6])) [2 sb_35->s_zmap_blocks+0 S2 A16])) "fs/inode.c":115:39 76 {*movhi_internal}
     (nil))
(insn 55 54 56 7 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/inode.c":115:39 144 {*zero_extendhisi2}
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:SI 0 ax [orig:92 _10 ] [92])
                (plus:SI (reg:SI 0 ax [orig:91 _9 ] [91])
                    (reg:SI 1 dx [orig:89 _7 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":115:35 209 {*addsi_1}
     (nil))
(insn 57 56 58 7 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (reg:SI 0 ax [orig:92 _10 ] [92])) "fs/inode.c":115:35 75 {*movsi_internal}
     (nil))
(insn 58 57 59 7 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":116:18 75 {*movsi_internal}
     (nil))
(insn 59 58 60 7 (set (reg:HI 0 ax [orig:94 _12 ] [94])
        (mem:HI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 46 [0x2e])) [2 inode_32(D)->i_num+0 S2 A16])) "fs/inode.c":116:18 76 {*movhi_internal}
     (nil))
(insn 60 59 61 7 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (zero_extend:SI (reg:HI 0 ax [orig:94 _12 ] [94]))) "fs/inode.c":116:18 144 {*zero_extendhisi2}
     (nil))
(insn 61 60 63 7 (parallel [
            (set (reg:SI 0 ax [orig:96 _14 ] [96])
                (plus:SI (reg:SI 0 ax [orig:95 _13 ] [95])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":116:26 209 {*addsi_1}
     (nil))
(insn 63 61 64 7 (parallel [
            (set (reg:SI 0 ax [orig:98 _16 ] [98])
                (lshiftrt:SI (reg:SI 0 ax [orig:97 _15 ] [97])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":116:31 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [orig:97 _15 ] [97])
            (const_int 32 [0x20]))
        (nil)))
(insn 64 63 65 7 (parallel [
            (set (reg:SI 0 ax [orig:99 _17 ] [99])
                (plus:SI (reg:SI 0 ax [orig:98 _16 ] [98])
                    (reg:SI 1 dx [orig:93 _11 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":115:55 209 {*addsi_1}
     (nil))
(insn 65 64 66 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 block+0 S4 A32])
        (reg:SI 0 ax [orig:99 _17 ] [99])) "fs/inode.c":115:11 75 {*movsi_internal}
     (nil))
(insn 66 65 67 7 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":117:27 75 {*movsi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:HI 0 ax [orig:100 _18 ] [100])
        (mem:HI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/inode.c":117:27 76 {*movhi_internal}
     (nil))
(insn 68 67 69 7 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (zero_extend:SI (reg:HI 0 ax [orig:100 _18 ] [100]))) "fs/inode.c":117:16 144 {*zero_extendhisi2}
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":117:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 70 69 71 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 block+0 S4 A32])) "fs/inode.c":117:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 71 70 73 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:101 _19 ] [101])) "fs/inode.c":117:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 73 71 74 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":117:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 74 73 76 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":117:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 76 74 77 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])
        (reg:SI 0 ax [119])) "fs/inode.c":117:16 75 {*movsi_internal}
     (nil))
(insn 77 76 78 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":117:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 78 77 79 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "fs/inode.c":117:8 806 {*jcc}
     (nil)
 -> 86)
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":118:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 81 80 82 8 (set (reg/f:SI 0 ax [120])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7341ee5b75a0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":118:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7341ee5b75a0 *.LC3>)
        (nil)))
(insn 82 81 84 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [120])) "fs/inode.c":118:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 84 82 85 8 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":118:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 85 84 86 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":118:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 86 85 87 9 33 (nil) [1 uses])
(note 87 86 88 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 9 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])) "fs/inode.c":119:26 75 {*movsi_internal}
     (nil))
(insn 89 88 90 9 (set (reg/f:SI 1 dx [orig:102 _20 ] [102])
        (mem/f:SI (reg/f:SI 0 ax [121]) [10 bh_39->b_data+0 S4 A32])) "fs/inode.c":119:26 75 {*movsi_internal}
     (nil))
(insn 90 89 91 9 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":120:21 75 {*movsi_internal}
     (nil))
(insn 91 90 92 9 (set (reg:HI 0 ax [orig:103 _21 ] [103])
        (mem:HI (plus:SI (reg/f:SI 0 ax [122])
                (const_int 46 [0x2e])) [2 inode_32(D)->i_num+0 S2 A16])) "fs/inode.c":120:21 76 {*movhi_internal}
     (nil))
(insn 92 91 93 9 (set (reg:SI 0 ax [orig:104 _22 ] [104])
        (zero_extend:SI (reg:HI 0 ax [orig:103 _21 ] [103]))) "fs/inode.c":120:21 144 {*zero_extendhisi2}
     (nil))
(insn 93 92 95 9 (parallel [
            (set (reg:SI 0 ax [orig:105 _23 ] [105])
                (plus:SI (reg:SI 0 ax [orig:104 _22 ] [104])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:29 209 {*addsi_1}
     (nil))
(insn 95 93 96 9 (parallel [
            (set (reg:SI 0 ax [orig:107 _25 ] [107])
                (and:SI (reg:SI 0 ax [orig:106 _24 ] [106])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:34 490 {*andsi_1}
     (nil))
(insn 96 95 97 9 (parallel [
            (set (reg:SI 0 ax [orig:108 _26 ] [108])
                (ashift:SI (reg:SI 0 ax [orig:107 _25 ] [107])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:14 655 {*ashlsi3_1}
     (nil))
(insn 97 96 98 9 (parallel [
            (set (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (plus:SI (reg/f:SI 1 dx [orig:102 _20 ] [102])
                    (reg:SI 0 ax [orig:108 _26 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":120:14 209 {*addsi_1}
     (nil))
(insn 98 97 99 9 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 99 98 100 9 (set (reg:SI 2 cx [124])
        (mem:SI (reg/f:SI 0 ax [123]) [13 MEM[(struct d_inode *)inode_32(D)]+0 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 100 99 101 9 (set (mem:SI (reg/f:SI 1 dx [orig:109 _27 ] [109]) [13 *_27+0 S4 A32])
        (reg:SI 2 cx [124])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 101 100 102 9 (set (reg:SI 2 cx [125])
        (mem:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 4 [0x4])) [13 MEM[(struct d_inode *)inode_32(D)]+4 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 102 101 103 9 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (const_int 4 [0x4])) [13 *_27+4 S4 A32])
        (reg:SI 2 cx [125])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 103 102 104 9 (set (reg:SI 2 cx [126])
        (mem:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 8 [0x8])) [13 MEM[(struct d_inode *)inode_32(D)]+8 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 104 103 105 9 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (const_int 8 [0x8])) [13 *_27+8 S4 A32])
        (reg:SI 2 cx [126])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 105 104 106 9 (set (reg:SI 2 cx [127])
        (mem:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 12 [0xc])) [13 MEM[(struct d_inode *)inode_32(D)]+12 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 106 105 107 9 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (const_int 12 [0xc])) [13 *_27+12 S4 A32])
        (reg:SI 2 cx [127])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 107 106 108 9 (set (reg:SI 2 cx [128])
        (mem:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 16 [0x10])) [13 MEM[(struct d_inode *)inode_32(D)]+16 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 108 107 109 9 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (const_int 16 [0x10])) [13 *_27+16 S4 A32])
        (reg:SI 2 cx [128])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 109 108 110 9 (set (reg:SI 2 cx [129])
        (mem:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 20 [0x14])) [13 MEM[(struct d_inode *)inode_32(D)]+20 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 110 109 111 9 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (const_int 20 [0x14])) [13 *_27+20 S4 A32])
        (reg:SI 2 cx [129])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 111 110 112 9 (set (reg:SI 2 cx [130])
        (mem:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 24 [0x18])) [13 MEM[(struct d_inode *)inode_32(D)]+24 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 112 111 113 9 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (const_int 24 [0x18])) [13 *_27+24 S4 A32])
        (reg:SI 2 cx [130])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 113 112 114 9 (set (reg:SI 0 ax [131])
        (mem:SI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 28 [0x1c])) [13 MEM[(struct d_inode *)inode_32(D)]+28 S4 A32])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 114 113 115 9 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:109 _27 ] [109])
                (const_int 28 [0x1c])) [13 *_27+28 S4 A32])
        (reg:SI 0 ax [131])) "fs/inode.c":120:54 75 {*movsi_internal}
     (nil))
(insn 115 114 116 9 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])) "fs/inode.c":122:16 75 {*movsi_internal}
     (nil))
(insn 116 115 117 9 (set (mem:QI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 11 [0xb])) [0 bh_39->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":122:16 77 {*movqi_internal}
     (nil))
(insn 117 116 118 9 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":123:19 75 {*movsi_internal}
     (nil))
(insn 118 117 119 9 (set (mem:QI (plus:SI (reg/f:SI 0 ax [133])
                (const_int 51 [0x33])) [0 inode_32(D)->i_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/inode.c":123:19 77 {*movqi_internal}
     (nil))
(insn 119 118 120 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":124:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 120 119 122 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 bh+0 S4 A32])) "fs/inode.c":124:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 122 120 123 9 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":124:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 123 122 124 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":124:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 124 123 125 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":125:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 125 124 126 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [5 inode+0 S4 A32])) "fs/inode.c":125:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 126 125 127 9 (call (mem:QI (symbol_ref:SI ("unlock_inode") [flags 0x3]  <function_decl 0x7341ee540100 unlock_inode>) [0 unlock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":125:5 812 {*call}
     (nil)
    (nil))
(insn 127 126 130 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":125:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 130 127 131 10 28 (nil) [1 uses])
(note 131 130 135 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 135 131 0 NOTE_INSN_DELETED)

;; Function sync_inodes (sync_inodes, funcdef_no=7, decl_uid=1110, cgraph_uid=8, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4 5
EBB 6
EBB 7 9 8 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 48: point = 0, n_alt = -1
  BB 8
  BB 9
   Insn 46: point = 0, n_alt = -1
  BB 7
   Insn 39: point = 0, n_alt = -1
   Insn 38: point = 0, n_alt = 0
  BB 2
   Insn 43: point = 0, n_alt = -1
   Insn 7: point = 0, n_alt = 1
   Insn 6: point = 0, n_alt = 1
   Insn 5: point = 1, n_alt = 0
   Insn 49: point = 3, n_alt = 0
  BB 6
   Insn 32: point = 4, n_alt = 0
   Insn 31: point = 4, n_alt = 0
  BB 5
   Insn 28: point = 4, n_alt = 0
   Insn 27: point = 4, n_alt = 0
   Insn 26: point = 4, n_alt = 0
   Insn 25: point = 4, n_alt = 0
  BB 4
   Insn 23: point = 4, n_alt = -1
   Insn 22: point = 4, n_alt = 0
   Insn 21: point = 5, n_alt = 4
   Insn 20: point = 7, n_alt = 0
  BB 3
   Insn 18: point = 8, n_alt = -1
   Insn 17: point = 8, n_alt = 0
   Insn 16: point = 9, n_alt = 4
   Insn 15: point = 11, n_alt = 0
   Insn 14: point = 12, n_alt = 0
   Insn 13: point = 12, n_alt = 0
   Insn 12: point = 12, n_alt = 0
   Insn 11: point = 12, n_alt = 0
 r82: [2..3]
 r83: [8..9]
 r84: [4..5]
 r85: [0..1]
 r86: [10..11]
 r87: [6..7]
Compressing live ranges: from 12 to 12 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [8..9]
 r84: [4..5]
 r85: [0..1]
 r86: [10..11]
 r87: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 49
changing reg in insn 5
changing reg in insn 16
changing reg in insn 17
changing reg in insn 21
changing reg in insn 22
changing reg in insn 5
changing reg in insn 6
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 27.


sync_inodes

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,6u} r1={3d} r2={3d} r7={7d,33u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={12d,3u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 206{164d,42u,0e} in 27{25 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 49 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 49 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [85])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":133:11 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [85])) "fs/inode.c":133:11 75 {*movsi_internal}
     (nil))
(insn 7 6 43 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":134:12 75 {*movsi_internal}
     (nil))
(jump_insn 43 7 44 2 (set (pc)
        (label_ref 33)) "fs/inode.c":134:5 807 {jump}
     (nil)
 -> 33)
(barrier 44 43 35)
(code_label 35 44 10 3 37 (nil) [1 uses])
(note 10 35 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":135:8 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [5 inode+0 S4 A32])) "fs/inode.c":135:8 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":135:8 812 {*call}
     (nil)
    (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":135:8 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 15 14 16 3 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])) "fs/inode.c":136:17 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:QI 0 ax [orig:83 _1 ] [83])
        (mem:QI (plus:SI (reg/f:SI 0 ax [86])
                (const_int 51 [0x33])) [0 inode_4->i_dirt+0 S1 A8])) "fs/inode.c":136:17 77 {*movqi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/inode.c":136:11 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/inode.c":136:11 806 {*jcc}
     (nil)
 -> 29)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [5 inode+0 S4 A32])) "fs/inode.c":136:35 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (plus:SI (reg/f:SI 0 ax [87])
                (const_int 52 [0x34])) [0 inode_4->i_pipe+0 S1 A32])) "fs/inode.c":136:35 77 {*movqi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/inode.c":136:26 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/inode.c":136:26 806 {*jcc}
     (nil)
 -> 29)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":137:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 26 25 27 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [5 inode+0 S4 A32])) "fs/inode.c":137:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 27 26 28 5 (call (mem:QI (symbol_ref:SI ("write_inode") [flags 0x3]  <function_decl 0x7341ee540c00 write_inode>) [0 write_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":137:11 812 {*call}
     (nil)
    (nil))
(insn 28 27 29 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":137:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 29 28 30 6 36 (nil) [2 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":134:32 209 {*addsi_1}
     (nil))
(insn 32 31 33 6 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":134:41 209 {*addsi_1}
     (nil))
(code_label 33 32 34 7 35 (nil) [1 uses])
(note 34 33 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 34 39 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/inode.c":134:19 11 {*cmpsi_1}
     (nil))
(jump_insn 39 38 45 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/inode.c":134:19 806 {*jcc}
     (nil)
 -> 35)
(note 45 39 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 40 9 (const_int 0 [0]) "fs/inode.c":139:1 843 {nop}
     (nil))
(note 40 46 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 47 40 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 50 10 (const_int 0 [0]) "fs/inode.c":139:1 843 {nop}
     (nil))
(note 50 48 0 NOTE_INSN_DELETED)

;; Function get_empty_inode (get_empty_inode, funcdef_no=8, decl_uid=1172, cgraph_uid=9, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 35:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 60:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 63:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 70:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 79:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 100:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 107:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 111:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 115:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 121:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 126:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 132:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 134:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6 7 8
EBB 9
EBB 10 21
EBB 22
EBB 11 12
EBB 13
EBB 14 15
EBB 16
EBB 17
EBB 18 19 20

********** Pseudo live ranges #1: **********

  BB 20
   Insn 143: point = 0, n_alt = -1
   Insn 142: point = 0, n_alt = -2
   Insn 138: point = 1, n_alt = -2
   Insn 135: point = 3, n_alt = 0
   Insn 134: point = 4, n_alt = 3
   Insn 133: point = 5, n_alt = 0
   Insn 132: point = 6, n_alt = 0
   Insn 131: point = 6, n_alt = 0
   Insn 130: point = 6, n_alt = -2
   Insn 129: point = 7, n_alt = 0
   Insn 128: point = 7, n_alt = 0
   Insn 127: point = 7, n_alt = 0
   Insn 126: point = 7, n_alt = 0
  BB 19
   Insn 124: point = 8, n_alt = -1
   Insn 123: point = 8, n_alt = 0
   Insn 121: point = 9, n_alt = 2
   Insn 120: point = 11, n_alt = 0
  BB 18
   Insn 118: point = 13, n_alt = -1
   Insn 117: point = 13, n_alt = 0
   Insn 115: point = 14, n_alt = 4
   Insn 114: point = 16, n_alt = 0
  BB 16
   Insn 149: point = 18, n_alt = -1
   Insn 100: point = 18, n_alt = 0
   Insn 99: point = 18, n_alt = 0
   Insn 98: point = 18, n_alt = 0
   Insn 97: point = 18, n_alt = 0
  BB 15
   Insn 94: point = 19, n_alt = 0
   Insn 93: point = 19, n_alt = 0
   Insn 92: point = 19, n_alt = -2
   Insn 91: point = 19, n_alt = 0
   Insn 90: point = 20, n_alt = 0
   Insn 89: point = 21, n_alt = 0
  BB 14
   Insn 87: point = 22, n_alt = -1
   Insn 86: point = 22, n_alt = 0
  BB 12
   Insn 147: point = 23, n_alt = -1
   Insn 54: point = 23, n_alt = 1
  BB 13
   Insn 80: point = 24, n_alt = 0
   Insn 79: point = 24, n_alt = 0
   Insn 78: point = 24, n_alt = 0
   Insn 77: point = 24, n_alt = -2
   Insn 76: point = 24, n_alt = 0
   Insn 75: point = 25, n_alt = 0
   Insn 74: point = 26, n_alt = 0
   Insn 73: point = 27, n_alt = 0
   Insn 72: point = 28, n_alt = 0
   Insn 71: point = 28, n_alt = 0
   Insn 70: point = 30, n_alt = 2
   Insn 69: point = 32, n_alt = 0
   Insn 68: point = 34, n_alt = 0
   Insn 67: point = 36, n_alt = 0
   Insn 66: point = 38, n_alt = 0
   Insn 65: point = 39, n_alt = 0
   Insn 64: point = 40, n_alt = 0
   Insn 63: point = 42, n_alt = 2
   Insn 62: point = 44, n_alt = 0
   Insn 61: point = 46, n_alt = 0
   Insn 60: point = 48, n_alt = 0
   Insn 59: point = 50, n_alt = 0
   Insn 58: point = 51, n_alt = 0
  BB 11
   Insn 52: point = 53, n_alt = -1
   Insn 51: point = 53, n_alt = 1
  BB 21
   Insn 152: point = 54, n_alt = -1
  BB 22
   Insn 156: point = 55, n_alt = -1
  BB 8
   Insn 37: point = 56, n_alt = -1
   Insn 36: point = 56, n_alt = 0
   Insn 35: point = 57, n_alt = 4
   Insn 34: point = 59, n_alt = 0
  BB 7
   Insn 32: point = 61, n_alt = -1
   Insn 31: point = 61, n_alt = 0
   Insn 30: point = 62, n_alt = 4
   Insn 29: point = 64, n_alt = 0
   Insn 28: point = 65, n_alt = 1
   Insn 27: point = 66, n_alt = 0
  BB 6
   Insn 25: point = 68, n_alt = -1
   Insn 24: point = 68, n_alt = 0
   Insn 23: point = 69, n_alt = 2
   Insn 22: point = 71, n_alt = 0
  BB 5
   Insn 19: point = 73, n_alt = 1
   Insn 18: point = 74, n_alt = 0
  BB 4
   Insn 16: point = 76, n_alt = -1
   Insn 15: point = 76, n_alt = 0
   Insn 14: point = 77, n_alt = 0
   Insn 13: point = 78, n_alt = 0
   Insn 12: point = 79, n_alt = 1
   Insn 11: point = 80, n_alt = 0
   Insn 10: point = 82, n_alt = 0
  BB 10
   Insn 48: point = 84, n_alt = -1
   Insn 47: point = 84, n_alt = 1
  BB 3
   Insn 145: point = 85, n_alt = -1
   Insn 6: point = 85, n_alt = 1
   Insn 5: point = 85, n_alt = 1
  BB 2
   Insn 157: point = 86, n_alt = 0
  BB 9
   Insn 43: point = 87, n_alt = 0
  BB 17
   Insn 111: point = 88, n_alt = 0
   Insn 110: point = 88, n_alt = 0
   Insn 109: point = 88, n_alt = 0
   Insn 108: point = 88, n_alt = 0
   Insn 107: point = 88, n_alt = 0
   Insn 106: point = 88, n_alt = 0
   Insn 105: point = 88, n_alt = 0
   Insn 104: point = 88, n_alt = 0
 r82: [6..88]
 r83: [81..82]
 r84: [79..80]
 r85: [76..78]
 r86: [76..77]
 r87: [70..71]
 r88: [68..69]
 r89: [61..62]
 r90: [56..57]
 r91: [41..42]
 r92: [27..40]
 r93: [29..30]
 r94: [26..28]
 r95: [13..14]
 r96: [8..9]
 r97: [2..3]
 r98: [0..1]
 r99: [73..74]
 r100: [65..66]
 r101: [63..64]
 r102: [58..59]
 r103: [49..51]
 r104: [47..50]
 r105: [47..48]
 r106: [45..46]
 r107: [43..44]
 r108: [37..39]
 r109: [35..38]
 r110: [35..36]
 r111: [33..34]
 r112: [31..32]
 r113: [24..25]
 r114: [19..20]
 r115: [15..16]
 r116: [10..11]
 r117: [4..5]
Compressing live ranges: from 89 to 62 - 69%
Ranges after the compression:
 r82: [6..61]
 r83: [60..61]
 r84: [58..59]
 r85: [56..57]
 r86: [56..57]
 r87: [52..53]
 r88: [50..51]
 r89: [44..45]
 r90: [40..41]
 r91: [30..31]
 r92: [18..29]
 r93: [20..21]
 r94: [18..19]
 r95: [10..11]
 r96: [6..7]
 r97: [2..3]
 r98: [0..1]
 r99: [54..55]
 r100: [48..49]
 r101: [46..47]
 r102: [42..43]
 r103: [38..39]
 r104: [36..39]
 r105: [36..37]
 r106: [34..35]
 r107: [32..33]
 r108: [28..29]
 r109: [26..29]
 r110: [26..27]
 r111: [24..25]
 r112: [22..23]
 r113: [16..17]
 r114: [14..15]
 r115: [12..13]
 r116: [8..9]
 r117: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 157
changing reg in insn 130
changing reg in insn 92
changing reg in insn 90
changing reg in insn 77
changing reg in insn 75
changing reg in insn 66
changing reg in insn 59
changing reg in insn 27
changing reg in insn 22
changing reg in insn 19
changing reg in insn 18
changing reg in insn 14
changing reg in insn 13
changing reg in insn 12
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 73
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 74
changing reg in insn 115
changing reg in insn 117
changing reg in insn 121
changing reg in insn 123
changing reg in insn 135
changing reg in insn 138
changing reg in insn 138
changing reg in insn 142
changing reg in insn 18
changing reg in insn 19
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 58
changing reg in insn 60
changing reg in insn 59
changing reg in insn 61
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 68
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 90
changing reg in insn 91
changing reg in insn 114
changing reg in insn 115
changing reg in insn 120
changing reg in insn 121
changing reg in insn 133
changing reg in insn 134
deleting insn with uid = 77.
deleting insn with uid = 92.
deleting insn with uid = 130.
deleting insn with uid = 138.
deleting insn with uid = 142.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 131.


get_empty_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={37d,31u} r1={10d,3u} r2={8d,1u} r3={1d,15u} r7={23d,85u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={37d,9u} r18={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 650{506d,144u,0e} in 96{90 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 157 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 157 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 157 122 2 NOTE_INSN_FUNCTION_BEG)
(code_label 122 2 4 3 49 (nil) [1 uses])
(note 4 122 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":148:15 75 {*movsi_internal}
     (nil))
(insn 6 5 145 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 32 [0x20])) "fs/inode.c":149:16 75 {*movsi_internal}
     (nil))
(jump_insn 145 6 146 3 (set (pc)
        (label_ref 44)) "fs/inode.c":149:9 807 {jump}
     (nil)
 -> 44)
(barrier 146 145 46)
(code_label 46 146 9 4 43 (nil) [1 uses])
(note 9 46 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:SI 0 ax [orig:83 last_inode.0_1 ] [83])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":150:17 75 {*movsi_internal}
     (nil))
(insn 11 10 12 4 (parallel [
            (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [orig:83 last_inode.0_1 ] [83])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":150:17 209 {*addsi_1}
     (nil))
(insn 12 11 13 4 (set (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])
        (reg/f:SI 0 ax [orig:84 _2 ] [84])) "fs/inode.c":150:16 75 {*movsi_internal}
     (nil))
(insn 13 12 14 4 (set (reg/f:SI 1 dx [orig:85 last_inode.1_3 ] [85])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":150:17 75 {*movsi_internal}
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 1792 [0x700]))))) "fs/inode.c":150:45 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                (const_int 1792 [0x700])))
        (nil)))
(insn 15 14 16 4 (set (reg:CC 17 flags)
        (compare:CC (reg/f:SI 1 dx [orig:85 last_inode.1_3 ] [85])
            (reg/f:SI 0 ax [orig:86 _4 ] [86]))) "fs/inode.c":150:16 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/inode.c":150:16 806 {*jcc}
     (nil)
 -> 20)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 0 ax [99])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":151:28 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 19 18 20 5 (set (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])
        (reg/f:SI 0 ax [99])) "fs/inode.c":151:28 75 {*movsi_internal}
     (nil))
(code_label 20 19 21 6 40 (nil) [1 uses])
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg/f:SI 0 ax [orig:87 last_inode.2_5 ] [87])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":152:28 75 {*movsi_internal}
     (nil))
(insn 23 22 24 6 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:87 last_inode.2_5 ] [87])
                (const_int 48 [0x30])) [2 last_inode.2_5->i_count+0 S2 A32])) "fs/inode.c":152:28 76 {*movhi_internal}
     (nil))
(insn 24 23 25 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:88 _6 ] [88])
            (const_int 0 [0]))) "fs/inode.c":152:16 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 25 24 26 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "fs/inode.c":152:16 806 {*jcc}
     (nil)
 -> 41)
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg/f:SI 0 ax [100])
        (mem/f/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_inode.0") [flags 0x2]  <var_decl 0x7341ee52ecf0 last_inode>)
                        ] UNSPEC_GOTOFF))) [5 last_inode+0 S4 A32])) "fs/inode.c":153:23 75 {*movsi_internal}
     (nil))
(insn 28 27 29 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [100])) "fs/inode.c":153:23 75 {*movsi_internal}
     (nil))
(insn 29 28 30 7 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":154:27 75 {*movsi_internal}
     (nil))
(insn 30 29 31 7 (set (reg:QI 0 ax [orig:89 _7 ] [89])
        (mem:QI (plus:SI (reg/f:SI 0 ax [101])
                (const_int 51 [0x33])) [0 inode_32->i_dirt+0 S1 A8])) "fs/inode.c":154:27 77 {*movqi_internal}
     (nil))
(insn 31 30 32 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:89 _7 ] [89])
            (const_int 0 [0]))) "fs/inode.c":154:20 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 32 31 33 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) "fs/inode.c":154:20 806 {*jcc}
     (nil)
 -> 41)
(note 33 32 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":154:45 75 {*movsi_internal}
     (nil))
(insn 35 34 36 8 (set (reg:QI 0 ax [orig:90 _8 ] [90])
        (mem:QI (plus:SI (reg/f:SI 0 ax [102])
                (const_int 50 [0x32])) [0 inode_32->i_lock+0 S1 A16])) "fs/inode.c":154:45 77 {*movqi_internal}
     (nil))
(insn 36 35 37 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "fs/inode.c":154:36 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 37 36 41 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 155)
            (pc))) "fs/inode.c":154:36 806 {*jcc}
     (nil)
 -> 155)
(code_label 41 37 42 9 41 (nil) [2 uses])
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":149:32 209 {*addsi_1}
     (nil))
(code_label 44 43 45 10 39 (nil) [1 uses])
(note 45 44 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 45 48 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":149:28 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 151 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "fs/inode.c":149:28 806 {*jcc}
     (nil)
 -> 46)
(note 151 48 152 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 152 151 153 21 (set (pc)
        (label_ref 49)) 807 {jump}
     (nil)
 -> 49)
(barrier 153 152 155)
(code_label 155 153 154 22 51 (nil) [1 uses])
(note 154 155 156 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 156 154 49 22 (const_int 0 [0]) "fs/inode.c":155:21 843 {nop}
     (nil))
(code_label 49 156 50 11 42 (nil) [1 uses])
(note 50 49 51 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":158:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "fs/inode.c":158:12 806 {*jcc}
     (nil)
 -> 95)
(note 53 52 54 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 147 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":159:20 75 {*movsi_internal}
     (nil))
(jump_insn 147 54 148 12 (set (pc)
        (label_ref 81)) "fs/inode.c":159:13 807 {jump}
     (nil)
 -> 81)
(barrier 148 147 83)
(code_label 83 148 57 13 46 (nil) [1 uses])
(note 57 83 58 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 13 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/inode.c":161:38 75 {*movsi_internal}
     (nil))
(insn 59 58 60 13 (set (reg:SI 1 dx [104])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 14 [0xe]))))) "fs/inode.c":161:38 205 {*leasi}
     (nil))
(insn 60 59 61 13 (parallel [
            (set (reg:SI 0 ax [105])
                (mult:SI (reg:SI 0 ax [103])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":161:38 408 {*mulsi3_1}
     (nil))
(insn 61 60 62 13 (parallel [
            (set (reg:SI 0 ax [106])
                (plus:SI (reg:SI 0 ax [105])
                    (reg:SI 1 dx [104])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":161:38 209 {*addsi_1}
     (nil))
(insn 62 61 63 13 (parallel [
            (set (reg/f:SI 0 ax [107])
                (plus:SI (reg:SI 0 ax [106])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":161:38 209 {*addsi_1}
     (nil))
(insn 63 62 64 13 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (mem:HI (reg/f:SI 0 ax [107]) [2 inode_table[i_19].i_num+0 S2 A16])) "fs/inode.c":161:38 76 {*movhi_internal}
     (nil))
(insn 64 63 65 13 (set (reg:SI 1 dx [orig:92 _10 ] [92])
        (zero_extend:SI (reg:HI 0 ax [orig:91 _9 ] [91]))) "fs/inode.c":160:17 144 {*zero_extendhisi2}
     (nil))
(insn 65 64 66 13 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/inode.c":160:52 75 {*movsi_internal}
     (nil))
(insn 66 65 67 13 (set (reg:SI 2 cx [109])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 12 [0xc]))))) "fs/inode.c":160:52 205 {*leasi}
     (nil))
(insn 67 66 68 13 (parallel [
            (set (reg:SI 0 ax [110])
                (mult:SI (reg:SI 0 ax [108])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:52 408 {*mulsi3_1}
     (nil))
(insn 68 67 69 13 (parallel [
            (set (reg:SI 0 ax [111])
                (plus:SI (reg:SI 0 ax [110])
                    (reg:SI 2 cx [109])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:52 209 {*addsi_1}
     (nil))
(insn 69 68 70 13 (parallel [
            (set (reg/f:SI 0 ax [112])
                (plus:SI (reg:SI 0 ax [111])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:52 209 {*addsi_1}
     (nil))
(insn 70 69 71 13 (set (reg:HI 0 ax [orig:93 _11 ] [93])
        (mem:HI (reg/f:SI 0 ax [112]) [2 inode_table[i_19].i_dev+0 S2 A32])) "fs/inode.c":160:52 76 {*movhi_internal}
     (nil))
(insn 71 70 72 13 (set (reg:SI 0 ax [orig:94 _12 ] [94])
        (zero_extend:SI (reg:HI 0 ax [orig:93 _11 ] [93]))) "fs/inode.c":160:17 144 {*zero_extendhisi2}
     (nil))
(insn 72 71 73 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 73 72 74 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 1 dx [orig:92 _10 ] [92])) "fs/inode.c":160:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 74 73 75 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:94 _12 ] [94])) "fs/inode.c":160:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 75 74 76 13 (set (reg/f:SI 0 ax [113])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7341ee5b76c0 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":160:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7341ee5b76c0 *.LC4>)
        (nil)))
(insn 76 75 78 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [113])) "fs/inode.c":160:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 78 76 79 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7341ee538f00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":160:17 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 79 78 80 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":160:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 80 79 81 13 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":159:40 209 {*addsi_1}
     (nil))
(code_label 81 80 82 14 45 (nil) [1 uses])
(note 82 81 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 82 87 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/inode.c":159:27 11 {*cmpsi_1}
     (nil))
(jump_insn 87 86 88 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "fs/inode.c":159:27 806 {*jcc}
     (nil)
 -> 83)
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":162:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 90 89 91 15 (set (reg/f:SI 0 ax [114])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7341ee5b7750 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":162:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7341ee5b7750 *.LC5>)
        (nil)))
(insn 91 90 93 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [114])) "fs/inode.c":162:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 93 91 94 15 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":162:17 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 94 93 95 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":162:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 95 94 96 16 44 (nil) [1 uses])
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":164:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 98 97 99 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/inode.c":164:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 99 98 100 16 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":164:9 812 {*call}
     (nil)
    (nil))
(insn 100 99 149 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":164:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 149 100 150 16 (set (pc)
        (label_ref 112)) "fs/inode.c":165:15 807 {jump}
     (nil)
 -> 112)
(barrier 150 149 116)
(code_label 116 150 103 17 48 (nil) [1 uses])
(note 103 116 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":166:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 105 104 106 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/inode.c":166:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 106 105 107 17 (call (mem:QI (symbol_ref:SI ("write_inode") [flags 0x3]  <function_decl 0x7341ee540c00 write_inode>) [0 write_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":166:13 812 {*call}
     (nil)
    (nil))
(insn 107 106 108 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":166:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 108 107 109 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":167:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 109 108 110 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/inode.c":167:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 110 109 111 17 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":167:13 812 {*call}
     (nil)
    (nil))
(insn 111 110 112 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":167:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 112 111 113 18 47 (nil) [1 uses])
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":165:21 75 {*movsi_internal}
     (nil))
(insn 115 114 117 18 (set (reg:QI 0 ax [orig:95 _13 ] [95])
        (mem:QI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 51 [0x33])) [0 inode_17->i_dirt+0 S1 A8])) "fs/inode.c":165:21 77 {*movqi_internal}
     (nil))
(insn 117 115 118 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "fs/inode.c":165:16 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 118 117 119 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/inode.c":165:16 806 {*jcc}
     (nil)
 -> 116)
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 19 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":169:19 75 {*movsi_internal}
     (nil))
(insn 121 120 123 19 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 48 [0x30])) [2 inode_17->i_count+0 S2 A32])) "fs/inode.c":169:19 76 {*movhi_internal}
     (nil))
(insn 123 121 124 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:96 _14 ] [96])
            (const_int 0 [0]))) "fs/inode.c":169:14 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 124 123 125 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) "fs/inode.c":169:14 806 {*jcc}
     (nil)
 -> 122)
(note 125 124 126 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":170:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 127 126 128 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 56 [0x38])) "fs/inode.c":170:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 128 127 129 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/inode.c":170:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 129 128 131 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/inode.c":170:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 131 129 132 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x7341ee540a00 memset>) [0 memset S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":170:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 132 131 133 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":170:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 133 132 134 20 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":171:20 75 {*movsi_internal}
     (nil))
(insn 134 133 135 20 (set (mem:HI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 48 [0x30])) [2 inode_17->i_count+0 S2 A32])
        (const_int 1 [0x1])) "fs/inode.c":171:20 76 {*movhi_internal}
     (nil))
(insn 135 134 143 20 (set (reg/f:SI 0 ax [orig:97 _41 ] [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":172:12 75 {*movsi_internal}
     (nil))
(insn 143 135 158 20 (use (reg/i:SI 0 ax)) "fs/inode.c":173:1 -1
     (nil))
(note 158 143 0 NOTE_INSN_DELETED)

;; Function read_inode (read_inode, funcdef_no=9, decl_uid=1460, cgraph_uid=10, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 10:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 33:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 37
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 45
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 72:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 100:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 101:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 108: point = 0, n_alt = -1
  BB 6
   Insn 104: point = 0, n_alt = 0
   Insn 103: point = 0, n_alt = 0
   Insn 102: point = 0, n_alt = 0
   Insn 101: point = 0, n_alt = 0
   Insn 100: point = 0, n_alt = 0
   Insn 99: point = 0, n_alt = 0
   Insn 98: point = 0, n_alt = -2
   Insn 97: point = 1, n_alt = 0
   Insn 96: point = 1, n_alt = 0
   Insn 95: point = 1, n_alt = 1
   Insn 94: point = 2, n_alt = 0
   Insn 93: point = 4, n_alt = 1
   Insn 92: point = 5, n_alt = 0
   Insn 91: point = 6, n_alt = 1
   Insn 90: point = 7, n_alt = 0
   Insn 89: point = 8, n_alt = 1
   Insn 88: point = 9, n_alt = 0
   Insn 87: point = 10, n_alt = 1
   Insn 86: point = 11, n_alt = 0
   Insn 85: point = 12, n_alt = 1
   Insn 84: point = 13, n_alt = 0
   Insn 83: point = 14, n_alt = 1
   Insn 82: point = 15, n_alt = 0
   Insn 81: point = 16, n_alt = 1
   Insn 80: point = 17, n_alt = 0
   Insn 79: point = 18, n_alt = 0
   Insn 78: point = 19, n_alt = 0
   Insn 77: point = 21, n_alt = 0
   Insn 76: point = 23, n_alt = 0
   Insn 75: point = 25, n_alt = -2
   Insn 74: point = 27, n_alt = 0
   Insn 73: point = 29, n_alt = 0
   Insn 72: point = 31, n_alt = 2
   Insn 71: point = 33, n_alt = 0
   Insn 70: point = 34, n_alt = 0
   Insn 69: point = 36, n_alt = 0
  BB 5
   Insn 66: point = 38, n_alt = 0
   Insn 65: point = 38, n_alt = 0
   Insn 64: point = 38, n_alt = -2
   Insn 63: point = 38, n_alt = 0
   Insn 62: point = 39, n_alt = 0
   Insn 61: point = 40, n_alt = 0
  BB 4
   Insn 59: point = 41, n_alt = -1
   Insn 58: point = 41, n_alt = 1
   Insn 57: point = 41, n_alt = 1
   Insn 56: point = 42, n_alt = -2
   Insn 55: point = 43, n_alt = 0
   Insn 54: point = 43, n_alt = 0
   Insn 53: point = 43, n_alt = -2
   Insn 52: point = 43, n_alt = 0
   Insn 51: point = 44, n_alt = 0
   Insn 50: point = 44, n_alt = 0
   Insn 49: point = 44, n_alt = 0
   Insn 48: point = 46, n_alt = 2
   Insn 47: point = 48, n_alt = 0
   Insn 46: point = 49, n_alt = 1
   Insn 45: point = 50, n_alt = 0
   Insn 44: point = 52, n_alt = 0
   Insn 43: point = 54, n_alt = -2
   Insn 42: point = 56, n_alt = 0
   Insn 41: point = 58, n_alt = 0
   Insn 40: point = 60, n_alt = 2
   Insn 39: point = 62, n_alt = 0
   Insn 38: point = 63, n_alt = -2
   Insn 37: point = 65, n_alt = 0
   Insn 36: point = 67, n_alt = 0
   Insn 35: point = 69, n_alt = 2
   Insn 34: point = 71, n_alt = 0
   Insn 33: point = 72, n_alt = 3
   Insn 32: point = 74, n_alt = 0
   Insn 31: point = 76, n_alt = 2
   Insn 30: point = 78, n_alt = 0
  BB 3
   Insn 27: point = 80, n_alt = 0
   Insn 26: point = 80, n_alt = 0
   Insn 25: point = 80, n_alt = -2
   Insn 24: point = 80, n_alt = 0
   Insn 23: point = 81, n_alt = 0
   Insn 22: point = 82, n_alt = 0
  BB 2
   Insn 20: point = 83, n_alt = -1
   Insn 19: point = 83, n_alt = 1
   Insn 18: point = 83, n_alt = 1
   Insn 17: point = 84, n_alt = -2
   Insn 16: point = 85, n_alt = 0
   Insn 15: point = 85, n_alt = 0
   Insn 14: point = 85, n_alt = -2
   Insn 13: point = 85, n_alt = 0
   Insn 12: point = 86, n_alt = 0
   Insn 11: point = 86, n_alt = 0
   Insn 10: point = 88, n_alt = 2
   Insn 9: point = 90, n_alt = 0
   Insn 8: point = 91, n_alt = 0
   Insn 7: point = 91, n_alt = 0
   Insn 6: point = 91, n_alt = 0
   Insn 5: point = 91, n_alt = 0
   Insn 109: point = 91, n_alt = 0
 r82: [0..91]
 r83: [87..88]
 r84: [85..86]
 r85: [75..76]
 r86: [73..74]
 r87: [66..72]
 r88: [68..69]
 r89: [66..67]
 r90: [64..65]
 r91: [51..63]
 r92: [59..60]
 r93: [57..58]
 r94: [55..56]
 r95: [53..54]
 r96: [51..52]
 r97: [49..50]
 r98: [45..46]
 r99: [43..44]
 r100: [20..34]
 r101: [30..31]
 r102: [28..29]
 r103: [26..27]
 r104: [24..25]
 r105: [22..23]
 r106: [20..21]
 r107: [3..19]
 r108: [89..90]
 r109: [83..84]
 r110: [80..81]
 r111: [77..78]
 r112: [70..71]
 r113: [61..62]
 r114: [47..48]
 r115: [41..42]
 r116: [38..39]
 r117: [35..36]
 r118: [32..33]
 r119: [1..18]
 r120: [16..17]
 r121: [14..15]
 r122: [12..13]
 r123: [10..11]
 r124: [8..9]
 r125: [6..7]
 r126: [4..5]
 r127: [1..2]
Compressing live ranges: from 92 to 80 - 86%
Ranges after the compression:
 r82: [0..79]
 r83: [76..77]
 r84: [74..75]
 r85: [66..67]
 r86: [64..65]
 r87: [58..63]
 r88: [60..61]
 r89: [58..59]
 r90: [56..57]
 r91: [44..55]
 r92: [52..53]
 r93: [50..51]
 r94: [48..49]
 r95: [46..47]
 r96: [44..45]
 r97: [42..43]
 r98: [38..39]
 r99: [36..37]
 r100: [16..29]
 r101: [26..27]
 r102: [24..25]
 r103: [22..23]
 r104: [20..21]
 r105: [18..19]
 r106: [16..17]
 r107: [2..15]
 r108: [78..79]
 r109: [72..73]
 r110: [70..71]
 r111: [68..69]
 r112: [62..63]
 r113: [54..55]
 r114: [40..41]
 r115: [34..35]
 r116: [32..33]
 r117: [30..31]
 r118: [28..29]
 r119: [0..15]
 r120: [14..15]
 r121: [12..13]
 r122: [10..11]
 r123: [8..9]
 r124: [6..7]
 r125: [4..5]
 r126: [2..3]
 r127: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 109
changing reg in insn 98
changing reg in insn 64
changing reg in insn 62
changing reg in insn 53
changing reg in insn 25
changing reg in insn 23
changing reg in insn 14
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 13
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 52
changing reg in insn 70
changing reg in insn 78
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 94
changing reg in insn 92
changing reg in insn 90
changing reg in insn 88
changing reg in insn 86
changing reg in insn 84
changing reg in insn 82
changing reg in insn 80
changing reg in insn 9
changing reg in insn 10
changing reg in insn 17
changing reg in insn 18
changing reg in insn 23
changing reg in insn 24
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 47
changing reg in insn 48
changing reg in insn 56
changing reg in insn 57
changing reg in insn 62
changing reg in insn 63
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 79
changing reg in insn 95
changing reg in insn 93
changing reg in insn 91
changing reg in insn 89
changing reg in insn 87
changing reg in insn 85
changing reg in insn 83
changing reg in insn 81
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
deleting insn with uid = 14.
deleting insn with uid = 17.
deleting insn with uid = 25.
deleting insn with uid = 43.
deleting insn with uid = 53.
deleting insn with uid = 56.
deleting insn with uid = 64.
deleting insn with uid = 75.
deleting insn with uid = 98.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 103.


read_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={37d,38u,1e} r1={13d,12u} r2={15d,7u} r3={1d,7u} r7={23d,67u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={33d,2u} r18={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 711{577d,133u,1e} in 87{80 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 109 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 109 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 109 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":181:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [5 inode+0 S4 A32])) "fs/inode.c":181:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:SI ("lock_inode") [flags 0x3]  <function_decl 0x7341ee540f00 lock_inode>) [0 lock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":181:5 812 {*call}
     (nil)
    (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":181:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":182:31 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 44 [0x2c])) [2 inode_29(D)->i_dev+0 S2 A32])) "fs/inode.c":182:31 76 {*movhi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/inode.c":182:16 144 {*zero_extendhisi2}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":182:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 13 12 15 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "fs/inode.c":182:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 15 13 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7341ee510000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":182:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 16 15 18 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":182:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 18 16 19 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 sb+0 S4 A32])
        (reg:SI 0 ax [109])) "fs/inode.c":182:16 75 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [11 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":182:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/inode.c":182:8 806 {*jcc}
     (nil)
 -> 28)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":183:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 23 22 24 3 (set (reg/f:SI 0 ax [110])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7341ee5b7870 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":183:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7341ee5b7870 *.LC6>)
        (nil)))
(insn 24 23 26 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [110])) "fs/inode.c":183:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 24 27 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":183:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":183:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 28 27 29 4 53 (nil) [1 uses])
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 sb+0 S4 A32])) "fs/inode.c":184:19 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 4 [0x4])) [2 sb_32->s_imap_blocks+0 S2 A32])) "fs/inode.c":184:19 76 {*movhi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/inode.c":184:19 144 {*zero_extendhisi2}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (plus:SI (reg:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":184:15 209 {*addsi_1}
     (nil))
(insn 34 33 35 4 (set (reg/f:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 sb+0 S4 A32])) "fs/inode.c":184:39 75 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [112])
                (const_int 6 [0x6])) [2 sb_32->s_zmap_blocks+0 S2 A16])) "fs/inode.c":184:39 76 {*movhi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 0 ax [orig:88 _6 ] [88]))) "fs/inode.c":184:39 144 {*zero_extendhisi2}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (plus:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (reg:SI 1 dx [orig:87 _5 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":184:35 209 {*addsi_1}
     (nil))
(insn 38 37 39 4 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (reg:SI 0 ax [orig:90 _8 ] [90])) "fs/inode.c":184:35 75 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":185:19 75 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 46 [0x2e])) [2 inode_29(D)->i_num+0 S2 A16])) "fs/inode.c":185:19 76 {*movhi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (zero_extend:SI (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/inode.c":185:19 144 {*zero_extendhisi2}
     (nil))
(insn 42 41 44 4 (parallel [
            (set (reg:SI 0 ax [orig:94 _12 ] [94])
                (plus:SI (reg:SI 0 ax [orig:93 _11 ] [93])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":185:27 209 {*addsi_1}
     (nil))
(insn 44 42 45 4 (parallel [
            (set (reg:SI 0 ax [orig:96 _14 ] [96])
                (lshiftrt:SI (reg:SI 0 ax [orig:95 _13 ] [95])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":185:32 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [orig:95 _13 ] [95])
            (const_int 32 [0x20]))
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:SI 0 ax [orig:97 _15 ] [97])
                (plus:SI (reg:SI 0 ax [orig:96 _14 ] [96])
                    (reg:SI 1 dx [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":184:55 209 {*addsi_1}
     (nil))
(insn 46 45 47 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 block+0 S4 A32])
        (reg:SI 0 ax [orig:97 _15 ] [97])) "fs/inode.c":184:11 75 {*movsi_internal}
     (nil))
(insn 47 46 48 4 (set (reg/f:SI 0 ax [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":186:27 75 {*movsi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:HI 0 ax [orig:98 _16 ] [98])
        (mem:HI (plus:SI (reg/f:SI 0 ax [114])
                (const_int 44 [0x2c])) [2 inode_29(D)->i_dev+0 S2 A32])) "fs/inode.c":186:27 76 {*movhi_internal}
     (nil))
(insn 49 48 50 4 (set (reg:SI 0 ax [orig:99 _17 ] [99])
        (zero_extend:SI (reg:HI 0 ax [orig:98 _16 ] [98]))) "fs/inode.c":186:16 144 {*zero_extendhisi2}
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":186:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 51 50 52 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 block+0 S4 A32])) "fs/inode.c":186:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 52 51 54 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:99 _17 ] [99])) "fs/inode.c":186:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 54 52 55 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":186:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 55 54 57 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":186:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 57 55 58 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])
        (reg:SI 0 ax [115])) "fs/inode.c":186:16 75 {*movsi_internal}
     (nil))
(insn 58 57 59 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":186:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 60 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/inode.c":186:8 806 {*jcc}
     (nil)
 -> 67)
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":187:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 63 5 (set (reg/f:SI 0 ax [116])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7341ee5b7900 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":187:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7341ee5b7900 *.LC7>)
        (nil)))
(insn 63 62 65 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [116])) "fs/inode.c":187:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 65 63 66 5 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":187:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 66 65 67 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":187:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 67 66 68 6 54 (nil) [1 uses])
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])) "fs/inode.c":189:30 75 {*movsi_internal}
     (nil))
(insn 70 69 71 6 (set (reg/f:SI 1 dx [orig:100 _18 ] [100])
        (mem/f:SI (reg/f:SI 0 ax [117]) [10 bh_36->b_data+0 S4 A32])) "fs/inode.c":189:30 75 {*movsi_internal}
     (nil))
(insn 71 70 72 6 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":190:20 75 {*movsi_internal}
     (nil))
(insn 72 71 73 6 (set (reg:HI 0 ax [orig:101 _19 ] [101])
        (mem:HI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 46 [0x2e])) [2 inode_29(D)->i_num+0 S2 A16])) "fs/inode.c":190:20 76 {*movhi_internal}
     (nil))
(insn 73 72 74 6 (set (reg:SI 0 ax [orig:102 _20 ] [102])
        (zero_extend:SI (reg:HI 0 ax [orig:101 _19 ] [101]))) "fs/inode.c":190:20 144 {*zero_extendhisi2}
     (nil))
(insn 74 73 76 6 (parallel [
            (set (reg:SI 0 ax [orig:103 _21 ] [103])
                (plus:SI (reg:SI 0 ax [orig:102 _20 ] [102])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:28 209 {*addsi_1}
     (nil))
(insn 76 74 77 6 (parallel [
            (set (reg:SI 0 ax [orig:105 _23 ] [105])
                (and:SI (reg:SI 0 ax [orig:104 _22 ] [104])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:33 490 {*andsi_1}
     (nil))
(insn 77 76 78 6 (parallel [
            (set (reg:SI 0 ax [orig:106 _24 ] [106])
                (ashift:SI (reg:SI 0 ax [orig:105 _23 ] [105])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:13 655 {*ashlsi3_1}
     (nil))
(insn 78 77 79 6 (parallel [
            (set (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (plus:SI (reg/f:SI 1 dx [orig:100 _18 ] [100])
                    (reg:SI 0 ax [orig:106 _24 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":190:13 209 {*addsi_1}
     (nil))
(insn 79 78 80 6 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 80 79 81 6 (set (reg:SI 2 cx [120])
        (mem:SI (reg/f:SI 1 dx [orig:107 _25 ] [107]) [13 *_25+0 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 81 80 82 6 (set (mem:SI (reg/f:SI 0 ax [119]) [13 MEM[(struct d_inode *)inode_29(D)]+0 S4 A32])
        (reg:SI 2 cx [120])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 82 81 83 6 (set (reg:SI 2 cx [121])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (const_int 4 [0x4])) [13 *_25+4 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 83 82 84 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 4 [0x4])) [13 MEM[(struct d_inode *)inode_29(D)]+4 S4 A32])
        (reg:SI 2 cx [121])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 84 83 85 6 (set (reg:SI 2 cx [122])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (const_int 8 [0x8])) [13 *_25+8 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 85 84 86 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 8 [0x8])) [13 MEM[(struct d_inode *)inode_29(D)]+8 S4 A32])
        (reg:SI 2 cx [122])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 86 85 87 6 (set (reg:SI 2 cx [123])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (const_int 12 [0xc])) [13 *_25+12 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 87 86 88 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 12 [0xc])) [13 MEM[(struct d_inode *)inode_29(D)]+12 S4 A32])
        (reg:SI 2 cx [123])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 88 87 89 6 (set (reg:SI 2 cx [124])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (const_int 16 [0x10])) [13 *_25+16 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 89 88 90 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 16 [0x10])) [13 MEM[(struct d_inode *)inode_29(D)]+16 S4 A32])
        (reg:SI 2 cx [124])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 90 89 91 6 (set (reg:SI 2 cx [125])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (const_int 20 [0x14])) [13 *_25+20 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 91 90 92 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 20 [0x14])) [13 MEM[(struct d_inode *)inode_29(D)]+20 S4 A32])
        (reg:SI 2 cx [125])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 92 91 93 6 (set (reg:SI 2 cx [126])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (const_int 24 [0x18])) [13 *_25+24 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 93 92 94 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 24 [0x18])) [13 MEM[(struct d_inode *)inode_29(D)]+24 S4 A32])
        (reg:SI 2 cx [126])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 94 93 95 6 (set (reg:SI 1 dx [127])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:107 _25 ] [107])
                (const_int 28 [0x1c])) [13 *_25+28 S4 A32])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 95 94 96 6 (set (mem:SI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 28 [0x1c])) [13 MEM[(struct d_inode *)inode_29(D)]+28 S4 A32])
        (reg:SI 1 dx [127])) "fs/inode.c":188:30 75 {*movsi_internal}
     (nil))
(insn 96 95 97 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":191:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 97 96 99 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 bh+0 S4 A32])) "fs/inode.c":191:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 99 97 100 6 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":191:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 100 99 101 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":191:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 101 100 102 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":192:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 102 101 103 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [5 inode+0 S4 A32])) "fs/inode.c":192:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 103 102 104 6 (call (mem:QI (symbol_ref:SI ("unlock_inode") [flags 0x3]  <function_decl 0x7341ee540100 unlock_inode>) [0 unlock_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":192:5 812 {*call}
     (nil)
    (nil))
(insn 104 103 107 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":192:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 107 104 108 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 110 7 (const_int 0 [0]) "fs/inode.c":193:1 843 {nop}
     (nil))
(note 110 108 0 NOTE_INSN_DELETED)

;; Function iget (iget, funcdef_no=10, decl_uid=1142, cgraph_uid=11, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 53:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 66:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 67:  (0) Yp  (1) Yp  (2) ln {*addhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 71:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 0 in insn 82:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 107:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 112:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 119:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 127:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 130:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 134
	 Choosing alt 0 in insn 134:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 135:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 136:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 146:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 152:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 178:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 182:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 183:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 7
EBB 8 9
EBB 10
EBB 11 12
EBB 13 14
EBB 15 29
EBB 30
EBB 16 17 18
EBB 19
EBB 20
EBB 21 22
EBB 23
EBB 24 25 26
EBB 27
EBB 28

********** Pseudo live ranges #1: **********

  BB 28
   Insn 195: point = 0, n_alt = -1
   Insn 194: point = 0, n_alt = -2
   Insn 190: point = 1, n_alt = -2
  BB 26
   Insn 211: point = 4, n_alt = -1
   Insn 168: point = 4, n_alt = 0
  BB 23
   Insn 209: point = 5, n_alt = -1
   Insn 155: point = 5, n_alt = 0
  BB 22
   Insn 152: point = 6, n_alt = 0
   Insn 151: point = 6, n_alt = 0
   Insn 150: point = 6, n_alt = 0
   Insn 149: point = 6, n_alt = 0
  BB 21
   Insn 147: point = 6, n_alt = -1
   Insn 146: point = 6, n_alt = 1
  BB 19
   Insn 205: point = 6, n_alt = -1
   Insn 122: point = 6, n_alt = 0
  BB 18
   Insn 119: point = 7, n_alt = 0
   Insn 118: point = 7, n_alt = 0
   Insn 117: point = 7, n_alt = 0
   Insn 116: point = 7, n_alt = 0
  BB 17
   Insn 114: point = 7, n_alt = -1
   Insn 113: point = 7, n_alt = 1
   Insn 112: point = 7, n_alt = 0
   Insn 111: point = 7, n_alt = 0
   Insn 110: point = 7, n_alt = -2
   Insn 109: point = 8, n_alt = 0
   Insn 108: point = 9, n_alt = 0
   Insn 107: point = 10, n_alt = 0
  BB 27
   Insn 187: point = 11, n_alt = 0
   Insn 186: point = 12, n_alt = 0
   Insn 185: point = 12, n_alt = 0
   Insn 184: point = 12, n_alt = 0
   Insn 183: point = 12, n_alt = 0
   Insn 182: point = 12, n_alt = 3
   Insn 181: point = 13, n_alt = 0
   Insn 180: point = 14, n_alt = 0
   Insn 179: point = 16, n_alt = 0
   Insn 178: point = 17, n_alt = 3
   Insn 177: point = 18, n_alt = 0
   Insn 176: point = 19, n_alt = 0
   Insn 175: point = 21, n_alt = 0
   Insn 174: point = 22, n_alt = 1
   Insn 173: point = 23, n_alt = 0
  BB 25
   Insn 166: point = 24, n_alt = -1
   Insn 165: point = 24, n_alt = 1
  BB 24
   Insn 163: point = 24, n_alt = -1
   Insn 162: point = 24, n_alt = 0
   Insn 160: point = 25, n_alt = 0
  BB 20
   Insn 207: point = 27, n_alt = -1
   Insn 141: point = 27, n_alt = 1
   Insn 140: point = 28, n_alt = 0
   Insn 139: point = 29, n_alt = 1
   Insn 138: point = 29, n_alt = 1
   Insn 137: point = 30, n_alt = 0
   Insn 136: point = 32, n_alt = 2
   Insn 135: point = 34, n_alt = 0
   Insn 134: point = 36, n_alt = 0
   Insn 133: point = 38, n_alt = 0
   Insn 132: point = 40, n_alt = 0
   Insn 131: point = 41, n_alt = 0
   Insn 130: point = 42, n_alt = 0
   Insn 129: point = 42, n_alt = 0
   Insn 128: point = 42, n_alt = 0
   Insn 127: point = 42, n_alt = 0
  BB 16
   Insn 105: point = 43, n_alt = -1
   Insn 104: point = 43, n_alt = 0
  BB 29
   Insn 214: point = 44, n_alt = -1
  BB 30
   Insn 218: point = 45, n_alt = -1
  BB 13
   Insn 86: point = 46, n_alt = -1
   Insn 85: point = 46, n_alt = 0
   Insn 84: point = 47, n_alt = 0
   Insn 83: point = 49, n_alt = 0
   Insn 82: point = 51, n_alt = 0
   Insn 81: point = 53, n_alt = 0
   Insn 80: point = 55, n_alt = 0
   Insn 79: point = 56, n_alt = 0
  BB 15
   Insn 99: point = 58, n_alt = -1
   Insn 98: point = 58, n_alt = 0
  BB 12
   Insn 203: point = 59, n_alt = -1
   Insn 75: point = 59, n_alt = 1
  BB 11
   Insn 73: point = 60, n_alt = -1
   Insn 72: point = 60, n_alt = 0
   Insn 71: point = 61, n_alt = 4
   Insn 70: point = 63, n_alt = 0
   Insn 69: point = 64, n_alt = 3
   Insn 68: point = 65, n_alt = 0
   Insn 67: point = 66, n_alt = 3
   Insn 66: point = 68, n_alt = 2
   Insn 65: point = 70, n_alt = 0
  BB 14
   Insn 92: point = 72, n_alt = 0
  BB 7
   Insn 199: point = 73, n_alt = -1
   Insn 37: point = 73, n_alt = 0
  BB 4
   Insn 197: point = 74, n_alt = -1
   Insn 20: point = 74, n_alt = 1
   Insn 19: point = 75, n_alt = 0
   Insn 18: point = 76, n_alt = 1
   Insn 17: point = 77, n_alt = -2
   Insn 16: point = 78, n_alt = 0
  BB 3
   Insn 13: point = 79, n_alt = 0
   Insn 12: point = 79, n_alt = 0
   Insn 11: point = 79, n_alt = -2
   Insn 10: point = 79, n_alt = 0
   Insn 9: point = 80, n_alt = 0
   Insn 8: point = 81, n_alt = 0
  BB 2
   Insn 6: point = 82, n_alt = -1
   Insn 5: point = 82, n_alt = 1
   Insn 219: point = 82, n_alt = 0
  BB 10
   Insn 201: point = 83, n_alt = -1
   Insn 60: point = 83, n_alt = 1
   Insn 59: point = 84, n_alt = 0
  BB 9
   Insn 56: point = 86, n_alt = -1
   Insn 55: point = 86, n_alt = 0
   Insn 54: point = 87, n_alt = 0
   Insn 53: point = 89, n_alt = 2
   Insn 52: point = 91, n_alt = 0
  BB 8
   Insn 50: point = 93, n_alt = -1
   Insn 49: point = 93, n_alt = 0
   Insn 48: point = 94, n_alt = 0
   Insn 47: point = 96, n_alt = 2
   Insn 46: point = 98, n_alt = 0
   Insn 45: point = 99, n_alt = 0
   Insn 44: point = 99, n_alt = 0
   Insn 43: point = 99, n_alt = 0
   Insn 42: point = 99, n_alt = 0
  BB 6
   Insn 34: point = 100, n_alt = -1
   Insn 33: point = 100, n_alt = 0
   Insn 32: point = 101, n_alt = 0
   Insn 31: point = 103, n_alt = 2
   Insn 30: point = 105, n_alt = 0
  BB 5
   Insn 28: point = 107, n_alt = -1
   Insn 27: point = 107, n_alt = 0
   Insn 26: point = 108, n_alt = 0
   Insn 25: point = 110, n_alt = 2
   Insn 24: point = 112, n_alt = 0
 r82: [24..113] [7..10]
 r83: [109..110]
 r84: [107..108]
 r85: [102..103]
 r86: [100..101]
 r87: [95..96]
 r88: [93..94]
 r89: [88..89]
 r90: [86..87]
 r91: [67..68]
 r92: [64..66]
 r93: [60..61]
 r94: [46..47]
 r95: [31..32]
 r96: [24..25]
 r97: [17..19]
 r98: [12..14]
 r99: [11..11] [2..6]
 r100: [0..1]
 r101: [79..80]
 r102: [76..77]
 r103: [74..75]
 r104: [111..112]
 r105: [104..105]
 r106: [97..98]
 r107: [90..91]
 r108: [83..84]
 r109: [69..70]
 r110: [64..65]
 r111: [62..63]
 r112: [52..56]
 r113: [54..55]
 r114: [52..53]
 r115: [50..51]
 r116: [48..49]
 r117: [8..9]
 r118: [37..41]
 r119: [39..40]
 r120: [37..38]
 r121: [35..36]
 r122: [33..34]
 r123: [29..30]
 r124: [27..28]
 r125: [22..23]
 r126: [20..21]
 r127: [17..18]
 r128: [15..16]
 r129: [12..13]
Compressing live ranges: from 114 to 85 - 74%
Ranges after the compression:
 r82: [17..84] [4..5]
 r83: [81..82]
 r84: [79..80]
 r85: [75..76]
 r86: [73..74]
 r87: [69..70]
 r88: [67..68]
 r89: [63..64]
 r90: [61..62]
 r91: [49..50]
 r92: [47..48]
 r93: [43..44]
 r94: [33..34]
 r95: [23..24]
 r96: [17..18]
 r97: [11..12]
 r98: [7..8]
 r99: [6..6] [2..3]
 r100: [0..1]
 r101: [57..58]
 r102: [55..56]
 r103: [53..54]
 r104: [83..84]
 r105: [77..78]
 r106: [71..72]
 r107: [65..66]
 r108: [59..60]
 r109: [51..52]
 r110: [47..48]
 r111: [45..46]
 r112: [39..42]
 r113: [41..42]
 r114: [39..40]
 r115: [37..38]
 r116: [35..36]
 r117: [4..5]
 r118: [29..32]
 r119: [31..32]
 r120: [29..30]
 r121: [27..28]
 r122: [25..26]
 r123: [21..22]
 r124: [19..20]
 r125: [15..16]
 r126: [13..14]
 r127: [11..12]
 r128: [9..10]
 r129: [7..8]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 219
changing reg in insn 160
changing reg in insn 140
changing reg in insn 131
changing reg in insn 110
changing reg in insn 108
changing reg in insn 79
changing reg in insn 59
changing reg in insn 19
changing reg in insn 11
changing reg in insn 9
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 55
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 84
changing reg in insn 85
changing reg in insn 136
changing reg in insn 137
changing reg in insn 160
changing reg in insn 162
changing reg in insn 176
changing reg in insn 178
changing reg in insn 180
changing reg in insn 182
changing reg in insn 187
changing reg in insn 168
changing reg in insn 155
changing reg in insn 122
changing reg in insn 190
changing reg in insn 190
changing reg in insn 194
changing reg in insn 9
changing reg in insn 10
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 31
changing reg in insn 46
changing reg in insn 47
changing reg in insn 52
changing reg in insn 53
changing reg in insn 59
changing reg in insn 60
changing reg in insn 65
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 108
changing reg in insn 109
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 140
changing reg in insn 141
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 181
changing reg in insn 182
deleting insn with uid = 11.
deleting insn with uid = 17.
deleting insn with uid = 110.
deleting insn with uid = 190.
deleting insn with uid = 194.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 151.
verify found no changes in insn with uid = 185.


iget

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={52d,42u} r1={14d,5u} r2={9d} r3={1d,10u} r7={22d,119u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={45d,13u} r18={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 852{663d,189u,0e} in 128{120 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 219 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 219 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 219 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":199:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "fs/inode.c":199:8 806 {*jcc}
     (nil)
 -> 14)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":200:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 9 8 10 3 (set (reg/f:SI 0 ax [101])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7341ee5b7ab0 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":200:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7341ee5b7ab0 *.LC8>)
        (nil)))
(insn 10 9 12 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [101])) "fs/inode.c":200:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 12 10 13 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":200:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 13 12 14 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":200:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 14 13 15 4 56 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 16 15 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_empty_inode") [flags 0x3]  <function_decl 0x7341ee515300 get_empty_inode>) [0 get_empty_inode S1 A8])
            (const_int 0 [0]))) "fs/inode.c":201:13 823 {*call_value}
     (nil)
    (nil))
(insn 18 16 19 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 empty+0 S4 A32])
        (reg:SI 0 ax [102])) "fs/inode.c":201:13 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 0 ax [103])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":202:11 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 20 19 197 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [103])) "fs/inode.c":202:11 75 {*movsi_internal}
     (nil))
(jump_insn 197 20 198 4 (set (pc)
        (label_ref 158)) "fs/inode.c":203:11 807 {jump}
     (nil)
 -> 158)
(barrier 198 197 161)
(code_label 161 198 23 5 71 (nil) [1 uses])
(note 23 161 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":204:18 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [104])
                (const_int 44 [0x2c])) [2 inode_20->i_dev+0 S2 A32])) "fs/inode.c":204:18 76 {*movhi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/inode.c":204:18 144 {*zero_extendhisi2}
     (nil))
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:84 _2 ] [84]))) "fs/inode.c":204:12 11 {*cmpsi_1}
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/inode.c":204:12 806 {*jcc}
     (nil)
 -> 35)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg/f:SI 0 ax [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":204:41 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [105])
                (const_int 46 [0x2e])) [2 inode_20->i_num+0 S2 A16])) "fs/inode.c":204:41 76 {*movhi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/inode.c":204:41 144 {*zero_extendhisi2}
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [9 nr+0 S4 A32])
            (reg:SI 0 ax [orig:86 _4 ] [86]))) "fs/inode.c":204:33 11 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/inode.c":204:33 806 {*jcc}
     (nil)
 -> 40)
(code_label 35 34 36 7 58 (nil) [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 199 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":205:18 209 {*addsi_1}
     (nil))
(jump_insn 199 37 200 7 (set (pc)
        (label_ref 158)) "fs/inode.c":206:13 807 {jump}
     (nil)
 -> 158)
(barrier 200 199 40)
(code_label 40 200 41 8 59 (nil) [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":208:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 43 42 44 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/inode.c":208:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 44 43 45 8 (call (mem:QI (symbol_ref:SI ("wait_on_inode") [flags 0x3]  <function_decl 0x7341ee540d00 wait_on_inode>) [0 wait_on_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":208:9 812 {*call}
     (nil)
    (nil))
(insn 45 44 46 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":208:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 46 45 47 8 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":209:18 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [106])
                (const_int 44 [0x2c])) [2 inode_20->i_dev+0 S2 A32])) "fs/inode.c":209:18 76 {*movhi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (zero_extend:SI (reg:HI 0 ax [orig:87 _5 ] [87]))) "fs/inode.c":209:18 144 {*zero_extendhisi2}
     (nil))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [9 dev+0 S4 A32])
            (reg:SI 0 ax [orig:88 _6 ] [88]))) "fs/inode.c":209:12 11 {*cmpsi_1}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/inode.c":209:12 806 {*jcc}
     (nil)
 -> 57)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":209:41 75 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 0 ax [107])
                (const_int 46 [0x2e])) [2 inode_20->i_num+0 S2 A16])) "fs/inode.c":209:41 76 {*movhi_internal}
     (nil))
(insn 54 53 55 9 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (zero_extend:SI (reg:HI 0 ax [orig:89 _7 ] [89]))) "fs/inode.c":209:41 144 {*zero_extendhisi2}
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [9 nr+0 S4 A32])
            (reg:SI 0 ax [orig:90 _8 ] [90]))) "fs/inode.c":209:33 11 {*cmpsi_1}
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "fs/inode.c":209:33 806 {*jcc}
     (nil)
 -> 63)
(code_label 57 56 58 10 60 (nil) [1 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (set (reg/f:SI 0 ax [108])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":210:19 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 60 59 201 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [108])) "fs/inode.c":210:19 75 {*movsi_internal}
     (nil))
(jump_insn 201 60 202 10 (set (pc)
        (label_ref 158)) "fs/inode.c":211:13 807 {jump}
     (nil)
 -> 158)
(barrier 202 201 63)
(code_label 63 202 64 11 61 (nil) [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":213:14 75 {*movsi_internal}
     (nil))
(insn 66 65 67 11 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [109])
                (const_int 48 [0x30])) [2 inode_20->i_count+0 S2 A32])) "fs/inode.c":213:14 76 {*movhi_internal}
     (nil))
(insn 67 66 68 11 (parallel [
            (set (reg:HI 1 dx [orig:92 _11 ] [92])
                (plus:HI (reg:HI 0 ax [orig:91 _9 ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":213:23 212 {*addhi_1}
     (nil))
(insn 68 67 69 11 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":213:23 75 {*movsi_internal}
     (nil))
(insn 69 68 70 11 (set (mem:HI (plus:SI (reg/f:SI 0 ax [110])
                (const_int 48 [0x30])) [2 inode_20->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:92 _11 ] [92])) "fs/inode.c":213:23 76 {*movhi_internal}
     (nil))
(insn 70 69 71 11 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":214:18 75 {*movsi_internal}
     (nil))
(insn 71 70 72 11 (set (reg:QI 0 ax [orig:93 _12 ] [93])
        (mem:QI (plus:SI (reg/f:SI 0 ax [111])
                (const_int 53 [0x35])) [0 inode_20->i_mount+0 S1 A8])) "fs/inode.c":214:18 77 {*movqi_internal}
     (nil))
(insn 72 71 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:93 _12 ] [93])
            (const_int 0 [0]))) "fs/inode.c":214:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/inode.c":214:12 806 {*jcc}
     (nil)
 -> 144)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 203 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/inode.c":217:20 75 {*movsi_internal}
     (nil))
(jump_insn 203 75 204 12 (set (pc)
        (label_ref 93)) "fs/inode.c":217:13 807 {jump}
     (nil)
 -> 93)
(barrier 204 203 95)
(code_label 95 204 78 13 66 (nil) [1 uses])
(note 78 95 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg/f:SI 1 dx [112])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x7341ef90ae10 super_block>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":218:35 75 {*movsi_internal}
     (nil))
(insn 80 79 81 13 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/inode.c":218:35 75 {*movsi_internal}
     (nil))
(insn 81 80 82 13 (parallel [
            (set (reg:SI 0 ax [114])
                (mult:SI (reg:SI 0 ax [113])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":218:35 408 {*mulsi3_1}
     (nil))
(insn 82 81 83 13 (parallel [
            (set (reg:SI 0 ax [115])
                (plus:SI (reg:SI 0 ax [114])
                    (reg/f:SI 1 dx [112])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":218:35 209 {*addsi_1}
     (nil))
(insn 83 82 84 13 (parallel [
            (set (reg/f:SI 0 ax [116])
                (plus:SI (reg:SI 0 ax [115])
                    (const_int 92 [0x5c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":218:35 209 {*addsi_1}
     (nil))
(insn 84 83 85 13 (set (reg/f:SI 0 ax [orig:94 _13 ] [94])
        (mem/f:SI (reg/f:SI 0 ax [116]) [5 super_block[i_21].s_imount+0 S4 A32])) "fs/inode.c":218:35 75 {*movsi_internal}
     (nil))
(insn 85 84 86 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 inode+0 S4 A32])
            (reg/f:SI 0 ax [orig:94 _13 ] [94]))) "fs/inode.c":218:20 11 {*cmpsi_1}
     (nil))
(jump_insn 86 85 91 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 217)
            (pc))) "fs/inode.c":218:20 806 {*jcc}
     (nil)
 -> 217)
(note 91 86 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":217:40 209 {*addsi_1}
     (nil))
(code_label 93 92 94 15 63 (nil) [1 uses])
(note 94 93 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 94 99 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/inode.c":217:27 11 {*cmpsi_1}
     (nil))
(jump_insn 99 98 213 15 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "fs/inode.c":217:27 806 {*jcc}
     (nil)
 -> 95)
(note 213 99 214 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(jump_insn 214 213 215 29 (set (pc)
        (label_ref 100)) 807 {jump}
     (nil)
 -> 100)
(barrier 215 214 217)
(code_label 217 215 216 30 73 (nil) [1 uses])
(note 216 217 218 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 218 216 100 30 (const_int 0 [0]) "fs/inode.c":219:21 843 {nop}
     (nil))
(code_label 100 218 101 16 65 (nil) [1 uses])
(note 101 100 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 101 105 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/inode.c":220:16 11 {*cmpsi_1}
     (nil))
(jump_insn 105 104 106 16 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "fs/inode.c":220:16 806 {*jcc}
     (nil)
 -> 125)
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":221:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 108 107 109 17 (set (reg/f:SI 0 ax [117])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7341ee5b7b40 *.LC9>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":221:17 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7341ee5b7b40 *.LC9>)
        (nil)))
(insn 109 108 111 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [117])) "fs/inode.c":221:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 111 109 112 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7341ee538f00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":221:17 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 112 111 113 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":221:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 113 112 114 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 empty+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":222:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 114 113 115 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "fs/inode.c":222:20 806 {*jcc}
     (nil)
 -> 120)
(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":223:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 117 116 118 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 empty+0 S4 A32])) "fs/inode.c":223:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 118 117 119 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x3]  <function_decl 0x7341ee4d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":223:21 812 {*call}
     (nil)
    (nil))
(insn 119 118 120 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":223:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 120 119 121 19 68 (nil) [1 uses])
(note 121 120 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 205 19 (set (reg/f:SI 0 ax [orig:99 _22 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":224:24 75 {*movsi_internal}
     (nil))
(jump_insn 205 122 206 19 (set (pc)
        (label_ref 188)) "fs/inode.c":224:24 807 {jump}
     (nil)
 -> 188)
(barrier 206 205 125)
(code_label 125 206 126 20 67 (nil) [1 uses])
(note 126 125 127 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":226:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 128 127 129 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/inode.c":226:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 129 128 130 20 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x3]  <function_decl 0x7341ee4d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":226:13 812 {*call}
     (nil)
    (nil))
(insn 130 129 131 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":226:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 131 130 132 20 (set (reg/f:SI 1 dx [118])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x40]  <var_decl 0x7341ef90ae10 super_block>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":227:33 75 {*movsi_internal}
     (nil))
(insn 132 131 133 20 (set (reg:SI 0 ax [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 i+0 S4 A32])) "fs/inode.c":227:33 75 {*movsi_internal}
     (nil))
(insn 133 132 134 20 (parallel [
            (set (reg:SI 0 ax [120])
                (mult:SI (reg:SI 0 ax [119])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":227:33 408 {*mulsi3_1}
     (nil))
(insn 134 133 135 20 (parallel [
            (set (reg:SI 0 ax [121])
                (plus:SI (reg:SI 0 ax [120])
                    (reg/f:SI 1 dx [118])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":227:33 209 {*addsi_1}
     (nil))
(insn 135 134 136 20 (parallel [
            (set (reg/f:SI 0 ax [122])
                (plus:SI (reg:SI 0 ax [121])
                    (const_int 84 [0x54])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":227:33 209 {*addsi_1}
     (nil))
(insn 136 135 137 20 (set (reg:HI 0 ax [orig:95 _14 ] [95])
        (mem:HI (reg/f:SI 0 ax [122]) [2 super_block[i_21].s_dev+0 S2 A32])) "fs/inode.c":227:33 76 {*movhi_internal}
     (nil))
(insn 137 136 138 20 (set (reg:SI 0 ax [123])
        (zero_extend:SI (reg:HI 0 ax [orig:95 _14 ] [95]))) "fs/inode.c":227:17 144 {*zero_extendhisi2}
     (nil))
(insn 138 137 139 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [9 dev+0 S4 A32])
        (reg:SI 0 ax [123])) "fs/inode.c":227:17 75 {*movsi_internal}
     (nil))
(insn 139 138 140 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 nr+0 S4 A32])
        (const_int 1 [0x1])) "fs/inode.c":228:16 75 {*movsi_internal}
     (nil))
(insn 140 139 141 20 (set (reg/f:SI 0 ax [124])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":229:19 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
        (nil)))
(insn 141 140 207 20 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [124])) "fs/inode.c":229:19 75 {*movsi_internal}
     (nil))
(jump_insn 207 141 208 20 (set (pc)
        (label_ref 158)) "fs/inode.c":230:13 807 {jump}
     (nil)
 -> 158)
(barrier 208 207 144)
(code_label 144 208 145 21 62 (nil) [1 uses])
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 empty+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":232:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 147 146 148 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) "fs/inode.c":232:12 806 {*jcc}
     (nil)
 -> 153)
(note 148 147 149 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":233:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 150 149 151 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [5 empty+0 S4 A32])) "fs/inode.c":233:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 151 150 152 22 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x3]  <function_decl 0x7341ee4d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":233:13 812 {*call}
     (nil)
    (nil))
(insn 152 151 153 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":233:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 153 152 154 23 70 (nil) [1 uses])
(note 154 153 155 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 209 23 (set (reg/f:SI 0 ax [orig:99 _22 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":234:16 75 {*movsi_internal}
     (nil))
(jump_insn 209 155 210 23 (set (pc)
        (label_ref 188)) "fs/inode.c":234:16 807 {jump}
     (nil)
 -> 188)
(barrier 210 209 158)
(code_label 158 210 159 24 57 (nil) [4 uses])
(note 159 158 160 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 162 24 (set (reg/f:SI 0 ax [orig:96 _15 ] [96])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                        ] UNSPEC_GOTOFF)
                    (const_int 1792 [0x700]))))) "fs/inode.c":203:29 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("inode_table") [flags 0x2]  <var_decl 0x7341ef90aea0 inode_table>)
                (const_int 1792 [0x700])))
        (nil)))
(insn 162 160 163 24 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 inode+0 S4 A32])
            (reg/f:SI 0 ax [orig:96 _15 ] [96]))) "fs/inode.c":203:18 11 {*cmpsi_1}
     (nil))
(jump_insn 163 162 164 24 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) "fs/inode.c":203:18 806 {*jcc}
     (nil)
 -> 161)
(note 164 163 165 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [5 empty+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":236:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 166 165 167 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) "fs/inode.c":236:8 806 {*jcc}
     (nil)
 -> 171)
(note 167 166 168 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 211 26 (set (reg/f:SI 0 ax [orig:99 _22 ] [99])
        (const_int 0 [0])) "fs/inode.c":237:16 75 {*movsi_internal}
     (nil))
(jump_insn 211 168 212 26 (set (pc)
        (label_ref 188)) "fs/inode.c":237:16 807 {jump}
     (nil)
 -> 188)
(barrier 212 211 171)
(code_label 171 212 172 27 72 (nil) [1 uses])
(note 172 171 173 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 27 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [5 empty+0 S4 A32])) "fs/inode.c":238:11 75 {*movsi_internal}
     (nil))
(insn 174 173 175 27 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg/f:SI 0 ax [125])) "fs/inode.c":238:11 75 {*movsi_internal}
     (nil))
(insn 175 174 176 27 (set (reg:SI 0 ax [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [9 dev+0 S4 A32])) "fs/inode.c":239:18 75 {*movsi_internal}
     (nil))
(insn 176 175 177 27 (set (reg:HI 1 dx [orig:97 _16 ] [97])
        (reg:HI 0 ax [126])) "fs/inode.c":239:18 76 {*movhi_internal}
     (nil))
(insn 177 176 178 27 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":239:18 75 {*movsi_internal}
     (nil))
(insn 178 177 179 27 (set (mem:HI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 44 [0x2c])) [2 inode_35->i_dev+0 S2 A32])
        (reg:HI 1 dx [orig:97 _16 ] [97])) "fs/inode.c":239:18 76 {*movhi_internal}
     (nil))
(insn 179 178 180 27 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 nr+0 S4 A32])) "fs/inode.c":240:18 75 {*movsi_internal}
     (nil))
(insn 180 179 181 27 (set (reg:HI 1 dx [orig:98 _17 ] [98])
        (reg:HI 0 ax [128])) "fs/inode.c":240:18 76 {*movhi_internal}
     (nil))
(insn 181 180 182 27 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":240:18 75 {*movsi_internal}
     (nil))
(insn 182 181 183 27 (set (mem:HI (plus:SI (reg/f:SI 0 ax [129])
                (const_int 46 [0x2e])) [2 inode_35->i_num+0 S2 A16])
        (reg:HI 1 dx [orig:98 _17 ] [98])) "fs/inode.c":240:18 76 {*movhi_internal}
     (nil))
(insn 183 182 184 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":241:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 184 183 185 27 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [5 inode+0 S4 A32])) "fs/inode.c":241:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 185 184 186 27 (call (mem:QI (symbol_ref:SI ("read_inode") [flags 0x3]  <function_decl 0x7341ee548b00 read_inode>) [0 read_inode S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":241:5 812 {*call}
     (nil)
    (nil))
(insn 186 185 187 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":241:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 187 186 188 27 (set (reg/f:SI 0 ax [orig:99 _22 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":242:12 75 {*movsi_internal}
     (nil))
(code_label 188 187 189 28 69 (nil) [3 uses])
(note 189 188 195 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 195 189 220 28 (use (reg/i:SI 0 ax)) "fs/inode.c":243:1 -1
     (nil))
(note 220 195 0 NOTE_INSN_DELETED)

;; Function _bmap (_bmap, funcdef_no=11, decl_uid=1482, cgraph_uid=12, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 41:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 46:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 67:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=252 from oldreg=248, assigning class AREG to r252
   67: {r181:SI=trunc(sign_extend(r252:SI)*sign_extend(r182:SI) 0>>0x20);clobber r252:SI;clobber flags:CC;}
      REG_DEAD r182:SI
      REG_UNUSED r248:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  442: r252:SI=r89:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 68:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=253 from oldreg=181, assigning class GENERAL_REGS to r253
   68: {r253:SI=r253:SI>>0x5;clobber flags:CC;}
      REG_DEAD r181:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  443: r253:SI=r181:SI
    Inserting insn reload after:
  444: r183:SI=r253:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=254 from oldreg=183, assigning class GENERAL_REGS to r254
   70: {r254:SI=r254:SI-r184:SI;clobber flags:CC;}
      REG_DEAD r184:SI
      REG_DEAD r183:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  445: r254:SI=r183:SI
    Inserting insn reload after:
  446: r90:SI=r254:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 73
	 Choosing alt 0 in insn 73:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 78:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 83:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 99:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 104:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 106:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 110:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 114:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 116:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 121:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 125:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=255 from oldreg=249, assigning class AREG to r255
  125: {r196:SI=trunc(sign_extend(r255:SI)*sign_extend(r197:SI) 0>>0x20);clobber r255:SI;clobber flags:CC;}
      REG_DEAD r197:SI
      REG_UNUSED r249:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  447: r255:SI=r101:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 126:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=256 from oldreg=196, assigning class GENERAL_REGS to r256
  126: {r256:SI=r256:SI>>0x5;clobber flags:CC;}
      REG_DEAD r196:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  448: r256:SI=r196:SI
    Inserting insn reload after:
  449: r198:SI=r256:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 128:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=257 from oldreg=198, assigning class GENERAL_REGS to r257
  128: {r257:SI=r257:SI-r199:SI;clobber flags:CC;}
      REG_DEAD r199:SI
      REG_DEAD r198:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  450: r257:SI=r198:SI
    Inserting insn reload after:
  451: r102:SI=r257:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 131
	 Choosing alt 0 in insn 131:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 138:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 148:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 151:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 153:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 158:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 173
	 Choosing alt 0 in insn 173:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 174:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 184:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 190:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 193:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 200
	 Choosing alt 0 in insn 200:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 203:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 205:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 208:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 212:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 219:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 223:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 228:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 230:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 234:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 238:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 240:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 245:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 249:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=258 from oldreg=250, assigning class AREG to r258
  249: {r219:SI=trunc(sign_extend(r258:SI)*sign_extend(r220:SI) 0>>0x20);clobber r258:SI;clobber flags:CC;}
      REG_DEAD r220:SI
      REG_UNUSED r250:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  452: r258:SI=r129:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 250:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=259 from oldreg=219, assigning class GENERAL_REGS to r259
  250: {r259:SI=r259:SI>>0x5;clobber flags:CC;}
      REG_DEAD r219:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  453: r259:SI=r219:SI
    Inserting insn reload after:
  454: r221:SI=r259:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 252:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=260 from oldreg=221, assigning class GENERAL_REGS to r260
  252: {r260:SI=r260:SI-r222:SI;clobber flags:CC;}
      REG_DEAD r222:SI
      REG_DEAD r221:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  455: r260:SI=r221:SI
    Inserting insn reload after:
  456: r130:SI=r260:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 255
	 Choosing alt 0 in insn 255:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 262:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 272:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 275:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 276:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 277:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 282:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 285:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 299
	 Choosing alt 0 in insn 299:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 300:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 302:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 303:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 306:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 310:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 312:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 315:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 316:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 318:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 328
	 Choosing alt 0 in insn 328:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 331:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 333:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 336:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 340:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 341:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 350:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 352:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 357:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 359:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 360:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 371:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 373
	 Choosing alt 0 in insn 373:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 374:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 375:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 376:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 377:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 380:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 383:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 384:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 386:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 390:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 392:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 393:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 399:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 401
	 Choosing alt 0 in insn 401:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 402:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 404:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 405:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 406:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 409:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 412:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 413:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7 8 9 10
EBB 11
EBB 12 13 14 15 16
EBB 17 18
EBB 19 20
EBB 21 22 23 24
EBB 25
EBB 26 27 28 29
EBB 30 31
EBB 32 33
EBB 34 35 36 37
EBB 38 39
EBB 40 41
EBB 42 43 44 45
EBB 46
EBB 47

********** Pseudo live ranges #1: **********

  BB 47
   Insn 422: point = 0, n_alt = -1
   Insn 421: point = 0, n_alt = -2
   Insn 417: point = 1, n_alt = -2
  BB 41
   Insn 438: point = 4, n_alt = -1
   Insn 363: point = 4, n_alt = 0
  BB 39
   Insn 436: point = 5, n_alt = -1
   Insn 344: point = 5, n_alt = 0
  BB 33
   Insn 434: point = 6, n_alt = -1
   Insn 288: point = 6, n_alt = 0
  BB 31
   Insn 432: point = 7, n_alt = -1
   Insn 266: point = 7, n_alt = 0
  BB 25
   Insn 430: point = 8, n_alt = -1
   Insn 213: point = 8, n_alt = 0
   Insn 212: point = 9, n_alt = 0
   Insn 211: point = 9, n_alt = 0
   Insn 210: point = 9, n_alt = -2
   Insn 209: point = 10, n_alt = 0
   Insn 208: point = 10, n_alt = 0
  BB 24
   Insn 205: point = 11, n_alt = 8
   Insn 204: point = 12, n_alt = 0
   Insn 203: point = 13, n_alt = 3
   Insn 202: point = 14, n_alt = 0
   Insn 201: point = 16, n_alt = 0
   Insn 200: point = 17, n_alt = 0
   Insn 199: point = 19, n_alt = 0
   Insn 198: point = 21, n_alt = 0
   Insn 197: point = 22, n_alt = 0
   Insn 196: point = 24, n_alt = 0
  BB 23
   Insn 194: point = 26, n_alt = -1
   Insn 193: point = 26, n_alt = 1
   Insn 192: point = 26, n_alt = 1
   Insn 191: point = 27, n_alt = -2
   Insn 190: point = 28, n_alt = 0
   Insn 189: point = 28, n_alt = 0
   Insn 188: point = 28, n_alt = -2
   Insn 187: point = 28, n_alt = 0
   Insn 186: point = 29, n_alt = 0
   Insn 185: point = 29, n_alt = 0
   Insn 184: point = 31, n_alt = 2
   Insn 183: point = 33, n_alt = 0
  BB 22
   Insn 181: point = 35, n_alt = -1
   Insn 180: point = 35, n_alt = 1
  BB 21
   Insn 178: point = 36, n_alt = -1
   Insn 177: point = 36, n_alt = 1
   Insn 176: point = 36, n_alt = 1
   Insn 175: point = 37, n_alt = 0
   Insn 174: point = 39, n_alt = 2
   Insn 173: point = 41, n_alt = 0
   Insn 172: point = 43, n_alt = 0
   Insn 171: point = 45, n_alt = 0
   Insn 170: point = 46, n_alt = 0
   Insn 169: point = 48, n_alt = 0
  BB 20
   Insn 428: point = 50, n_alt = -1
   Insn 164: point = 50, n_alt = 0
  BB 19
   Insn 162: point = 51, n_alt = -1
   Insn 161: point = 51, n_alt = 1
   Insn 160: point = 51, n_alt = 1
   Insn 159: point = 52, n_alt = -2
   Insn 158: point = 53, n_alt = 0
   Insn 157: point = 53, n_alt = 0
   Insn 156: point = 53, n_alt = -2
   Insn 155: point = 53, n_alt = 0
   Insn 154: point = 54, n_alt = 0
   Insn 153: point = 55, n_alt = 0
   Insn 152: point = 55, n_alt = 0
   Insn 151: point = 57, n_alt = 2
   Insn 150: point = 59, n_alt = 0
   Insn 149: point = 60, n_alt = 0
   Insn 148: point = 62, n_alt = 2
   Insn 147: point = 64, n_alt = 0
  BB 18
   Insn 426: point = 66, n_alt = -1
   Insn 142: point = 66, n_alt = 0
  BB 17
   Insn 140: point = 67, n_alt = -1
   Insn 139: point = 67, n_alt = 0
   Insn 138: point = 68, n_alt = 2
   Insn 137: point = 70, n_alt = 0
  BB 16
   Insn 134: point = 72, n_alt = 1
   Insn 133: point = 73, n_alt = 0
   Insn 132: point = 74, n_alt = -2
   Insn 131: point = 76, n_alt = 0
   Insn 130: point = 78, n_alt = 0
   Insn 129: point = 80, n_alt = 0
   Insn 451: point = 81, n_alt = -2
	Hard reg 1 is preferable by r257 with profit 1000
   Insn 128: point = 83, n_alt = 0
   Insn 450: point = 85, n_alt = -2
	Hard reg 1 is preferable by r257 with profit 1000
	Hard reg 0 is preferable by r257 with profit 1000
   Insn 127: point = 87, n_alt = 1
   Insn 449: point = 89, n_alt = -2
	Hard reg 0 is preferable by r256 with profit 1000
   Insn 126: point = 91, n_alt = 0
   Insn 448: point = 92, n_alt = -2
	Hard reg 0 is preferable by r256 with profit 1000
	Hard reg 1 is preferable by r256 with profit 1000
   Insn 125: point = 94, n_alt = 0
   Insn 447: point = 96, n_alt = -2
	Hard reg 2 is preferable by r255 with profit 1000
   Insn 124: point = 97, n_alt = 0
   Insn 123: point = 98, n_alt = 0
   Insn 122: point = 100, n_alt = 0
   Insn 121: point = 101, n_alt = 8
   Insn 120: point = 102, n_alt = 0
  BB 15
   Insn 118: point = 104, n_alt = -1
   Insn 117: point = 104, n_alt = 0
   Insn 116: point = 105, n_alt = 2
   Insn 115: point = 107, n_alt = 0
   Insn 114: point = 108, n_alt = 3
   Insn 113: point = 109, n_alt = 0
   Insn 112: point = 110, n_alt = 0
   Insn 111: point = 112, n_alt = -2
   Insn 110: point = 113, n_alt = 0
   Insn 109: point = 113, n_alt = 0
   Insn 108: point = 113, n_alt = -2
   Insn 107: point = 113, n_alt = 0
   Insn 106: point = 114, n_alt = 0
   Insn 105: point = 114, n_alt = 0
   Insn 104: point = 116, n_alt = 2
   Insn 103: point = 118, n_alt = 0
  BB 14
   Insn 101: point = 120, n_alt = -1
   Insn 100: point = 120, n_alt = 0
   Insn 99: point = 121, n_alt = 2
   Insn 98: point = 123, n_alt = 0
  BB 13
   Insn 96: point = 125, n_alt = -1
   Insn 95: point = 125, n_alt = 1
  BB 11
   Insn 424: point = 126, n_alt = -1
   Insn 84: point = 126, n_alt = 0
   Insn 83: point = 128, n_alt = 2
   Insn 82: point = 130, n_alt = 0
   Insn 81: point = 131, n_alt = 0
  BB 10
   Insn 78: point = 132, n_alt = 8
   Insn 77: point = 133, n_alt = 0
   Insn 76: point = 134, n_alt = 1
   Insn 75: point = 135, n_alt = 0
   Insn 74: point = 136, n_alt = -2
   Insn 73: point = 138, n_alt = 0
   Insn 72: point = 140, n_alt = 0
   Insn 71: point = 142, n_alt = 0
   Insn 446: point = 144, n_alt = -2
	Hard reg 1 is preferable by r254 with profit 1000
   Insn 70: point = 146, n_alt = 0
   Insn 445: point = 148, n_alt = -2
	Hard reg 1 is preferable by r254 with profit 1000
	Hard reg 0 is preferable by r254 with profit 1000
   Insn 69: point = 150, n_alt = 1
   Insn 444: point = 152, n_alt = -2
	Hard reg 0 is preferable by r253 with profit 1000
   Insn 68: point = 154, n_alt = 0
   Insn 443: point = 155, n_alt = -2
	Hard reg 0 is preferable by r253 with profit 1000
	Hard reg 1 is preferable by r253 with profit 1000
   Insn 67: point = 157, n_alt = 0
   Insn 442: point = 159, n_alt = -2
	Hard reg 2 is preferable by r252 with profit 1000
   Insn 66: point = 160, n_alt = 0
   Insn 65: point = 161, n_alt = 0
   Insn 64: point = 163, n_alt = 0
  BB 9
   Insn 62: point = 165, n_alt = -1
   Insn 61: point = 165, n_alt = 0
   Insn 60: point = 166, n_alt = 2
   Insn 59: point = 168, n_alt = 0
   Insn 58: point = 169, n_alt = 0
   Insn 57: point = 170, n_alt = 3
   Insn 56: point = 171, n_alt = 0
   Insn 55: point = 172, n_alt = 0
   Insn 54: point = 173, n_alt = 0
   Insn 53: point = 175, n_alt = -2
   Insn 52: point = 176, n_alt = 0
   Insn 51: point = 176, n_alt = 0
   Insn 50: point = 176, n_alt = -2
   Insn 49: point = 176, n_alt = 0
   Insn 48: point = 177, n_alt = 0
   Insn 47: point = 177, n_alt = 0
   Insn 46: point = 179, n_alt = 2
   Insn 45: point = 181, n_alt = 0
  BB 8
   Insn 43: point = 183, n_alt = -1
   Insn 42: point = 183, n_alt = 0
   Insn 41: point = 184, n_alt = 2
   Insn 40: point = 186, n_alt = 0
   Insn 39: point = 187, n_alt = 0
  BB 7
   Insn 37: point = 189, n_alt = -1
   Insn 36: point = 189, n_alt = 1
  BB 46
   Insn 414: point = 190, n_alt = 0
   Insn 413: point = 191, n_alt = 0
   Insn 412: point = 191, n_alt = 0
   Insn 411: point = 191, n_alt = -2
   Insn 410: point = 192, n_alt = 0
   Insn 409: point = 192, n_alt = 0
  BB 45
   Insn 406: point = 193, n_alt = 8
   Insn 405: point = 194, n_alt = 0
   Insn 404: point = 195, n_alt = 3
   Insn 403: point = 196, n_alt = 0
   Insn 402: point = 198, n_alt = 0
   Insn 401: point = 199, n_alt = 0
   Insn 400: point = 201, n_alt = 0
   Insn 399: point = 203, n_alt = 0
   Insn 398: point = 205, n_alt = 0
   Insn 397: point = 206, n_alt = 0
   Insn 396: point = 208, n_alt = 0
  BB 44
   Insn 394: point = 210, n_alt = -1
   Insn 393: point = 210, n_alt = 1
   Insn 392: point = 210, n_alt = 1
   Insn 391: point = 211, n_alt = -2
   Insn 390: point = 212, n_alt = 0
   Insn 389: point = 212, n_alt = 0
   Insn 388: point = 212, n_alt = -2
   Insn 387: point = 212, n_alt = 0
   Insn 386: point = 213, n_alt = 0
   Insn 385: point = 213, n_alt = 0
   Insn 384: point = 215, n_alt = 2
   Insn 383: point = 217, n_alt = 0
  BB 43
   Insn 381: point = 219, n_alt = -1
   Insn 380: point = 219, n_alt = 1
  BB 42
   Insn 378: point = 220, n_alt = -1
   Insn 377: point = 220, n_alt = 1
   Insn 376: point = 220, n_alt = 1
   Insn 375: point = 221, n_alt = 0
   Insn 374: point = 223, n_alt = 2
   Insn 373: point = 225, n_alt = 0
   Insn 372: point = 227, n_alt = 0
   Insn 371: point = 229, n_alt = 0
   Insn 370: point = 231, n_alt = 0
   Insn 369: point = 232, n_alt = 0
   Insn 368: point = 234, n_alt = 0
  BB 40
   Insn 361: point = 236, n_alt = -1
   Insn 360: point = 236, n_alt = 1
   Insn 359: point = 236, n_alt = 1
   Insn 358: point = 237, n_alt = -2
   Insn 357: point = 238, n_alt = 0
   Insn 356: point = 238, n_alt = 0
   Insn 355: point = 238, n_alt = -2
   Insn 354: point = 238, n_alt = 0
   Insn 353: point = 239, n_alt = 0
   Insn 352: point = 239, n_alt = 0
   Insn 351: point = 239, n_alt = 0
   Insn 350: point = 241, n_alt = 2
   Insn 349: point = 243, n_alt = 0
  BB 38
   Insn 342: point = 245, n_alt = -1
   Insn 341: point = 245, n_alt = 1
   Insn 340: point = 245, n_alt = 0
   Insn 339: point = 245, n_alt = 0
   Insn 338: point = 245, n_alt = -2
   Insn 337: point = 245, n_alt = 0
   Insn 336: point = 245, n_alt = 0
  BB 37
   Insn 333: point = 246, n_alt = 8
   Insn 332: point = 247, n_alt = 0
   Insn 331: point = 248, n_alt = 3
   Insn 330: point = 249, n_alt = 0
   Insn 329: point = 251, n_alt = 0
   Insn 328: point = 252, n_alt = 0
   Insn 327: point = 254, n_alt = 0
   Insn 326: point = 256, n_alt = -2
   Insn 325: point = 258, n_alt = 0
   Insn 324: point = 260, n_alt = 0
   Insn 323: point = 261, n_alt = 0
   Insn 322: point = 263, n_alt = 0
  BB 36
   Insn 320: point = 265, n_alt = -1
   Insn 319: point = 265, n_alt = 1
   Insn 318: point = 265, n_alt = 1
   Insn 317: point = 266, n_alt = -2
   Insn 316: point = 267, n_alt = 0
   Insn 315: point = 267, n_alt = 0
   Insn 314: point = 267, n_alt = -2
   Insn 313: point = 267, n_alt = 0
   Insn 312: point = 268, n_alt = 0
   Insn 311: point = 268, n_alt = 0
   Insn 310: point = 270, n_alt = 2
   Insn 309: point = 272, n_alt = 0
  BB 35
   Insn 307: point = 274, n_alt = -1
   Insn 306: point = 274, n_alt = 1
  BB 34
   Insn 304: point = 275, n_alt = -1
   Insn 303: point = 275, n_alt = 1
   Insn 302: point = 275, n_alt = 1
   Insn 301: point = 276, n_alt = 0
   Insn 300: point = 278, n_alt = 2
   Insn 299: point = 280, n_alt = 0
   Insn 298: point = 282, n_alt = 0
   Insn 297: point = 284, n_alt = -2
   Insn 296: point = 286, n_alt = 0
   Insn 295: point = 288, n_alt = 0
   Insn 294: point = 289, n_alt = 0
   Insn 293: point = 291, n_alt = 0
  BB 32
   Insn 286: point = 293, n_alt = -1
   Insn 285: point = 293, n_alt = 1
   Insn 284: point = 293, n_alt = 1
   Insn 283: point = 294, n_alt = -2
   Insn 282: point = 295, n_alt = 0
   Insn 281: point = 295, n_alt = 0
   Insn 280: point = 295, n_alt = -2
   Insn 279: point = 295, n_alt = 0
   Insn 278: point = 296, n_alt = 0
   Insn 277: point = 297, n_alt = 0
   Insn 276: point = 297, n_alt = 0
   Insn 275: point = 299, n_alt = 2
   Insn 274: point = 301, n_alt = 0
   Insn 273: point = 302, n_alt = 0
   Insn 272: point = 304, n_alt = 2
   Insn 271: point = 306, n_alt = 0
  BB 30
   Insn 264: point = 308, n_alt = -1
   Insn 263: point = 308, n_alt = 0
   Insn 262: point = 309, n_alt = 2
   Insn 261: point = 311, n_alt = 0
  BB 29
   Insn 258: point = 313, n_alt = 1
   Insn 257: point = 314, n_alt = 0
   Insn 256: point = 315, n_alt = -2
   Insn 255: point = 317, n_alt = 0
   Insn 254: point = 319, n_alt = 0
   Insn 253: point = 321, n_alt = 0
   Insn 456: point = 322, n_alt = -2
	Hard reg 1 is preferable by r260 with profit 1000
   Insn 252: point = 324, n_alt = 0
   Insn 455: point = 326, n_alt = -2
	Hard reg 1 is preferable by r260 with profit 1000
	Hard reg 0 is preferable by r260 with profit 1000
   Insn 251: point = 328, n_alt = 1
   Insn 454: point = 330, n_alt = -2
	Hard reg 0 is preferable by r259 with profit 1000
   Insn 250: point = 332, n_alt = 0
   Insn 453: point = 333, n_alt = -2
	Hard reg 0 is preferable by r259 with profit 1000
	Hard reg 1 is preferable by r259 with profit 1000
   Insn 249: point = 335, n_alt = 0
   Insn 452: point = 337, n_alt = -2
	Hard reg 2 is preferable by r258 with profit 1000
   Insn 248: point = 338, n_alt = 0
   Insn 247: point = 339, n_alt = 0
   Insn 246: point = 341, n_alt = 0
   Insn 245: point = 342, n_alt = 8
   Insn 244: point = 343, n_alt = 0
  BB 28
   Insn 242: point = 345, n_alt = -1
   Insn 241: point = 345, n_alt = 0
   Insn 240: point = 346, n_alt = 2
   Insn 239: point = 348, n_alt = 0
   Insn 238: point = 349, n_alt = 3
   Insn 237: point = 350, n_alt = 0
   Insn 236: point = 351, n_alt = 0
   Insn 235: point = 353, n_alt = -2
   Insn 234: point = 354, n_alt = 0
   Insn 233: point = 354, n_alt = 0
   Insn 232: point = 354, n_alt = -2
   Insn 231: point = 354, n_alt = 0
   Insn 230: point = 355, n_alt = 0
   Insn 229: point = 355, n_alt = 0
   Insn 228: point = 357, n_alt = 2
   Insn 227: point = 359, n_alt = 0
  BB 27
   Insn 225: point = 361, n_alt = -1
   Insn 224: point = 361, n_alt = 0
   Insn 223: point = 362, n_alt = 2
   Insn 222: point = 364, n_alt = 0
  BB 26
   Insn 220: point = 366, n_alt = -1
   Insn 219: point = 366, n_alt = 1
   Insn 218: point = 366, n_alt = 0
  BB 12
   Insn 93: point = 367, n_alt = -1
   Insn 92: point = 367, n_alt = 0
   Insn 89: point = 367, n_alt = 0
  BB 6
   Insn 34: point = 368, n_alt = -1
   Insn 33: point = 368, n_alt = 0
  BB 5
   Insn 28: point = 369, n_alt = 0
   Insn 27: point = 369, n_alt = 0
   Insn 26: point = 369, n_alt = -2
   Insn 25: point = 369, n_alt = 0
   Insn 24: point = 370, n_alt = 0
   Insn 23: point = 371, n_alt = 0
  BB 4
   Insn 21: point = 372, n_alt = -1
   Insn 20: point = 372, n_alt = 0
  BB 3
   Insn 15: point = 373, n_alt = 0
   Insn 14: point = 373, n_alt = 0
   Insn 13: point = 373, n_alt = -2
   Insn 12: point = 373, n_alt = 0
   Insn 11: point = 374, n_alt = 0
   Insn 10: point = 375, n_alt = 0
  BB 2
   Insn 8: point = 376, n_alt = -1
   Insn 7: point = 376, n_alt = 1
   Insn 440: point = 376, n_alt = 0
 r82: [191..376] [143..189] [67..125] [51..65] [9..49]
 r83: [183..184]
 r84: [178..179]
 r85: [176..177]
 r86: [174..175]
 r87: [170..173]
 r88: [165..166]
 r89: [151..161]
 r90: [139..144]
 r91: [139..140]
 r92: [137..138]
 r93: [134..136]
 r94: [127..128]
 r95: [120..121]
 r96: [115..116]
 r97: [113..114]
 r98: [111..112]
 r99: [108..110]
 r100: [104..105]
 r101: [88..98]
 r102: [77..81]
 r103: [77..78]
 r104: [75..76]
 r105: [72..74]
 r106: [67..68]
 r107: [61..62]
 r108: [54..60]
 r109: [56..57]
 r110: [53..55]
 r111: [42..46]
 r112: [44..45]
 r113: [42..43]
 r114: [40..41]
 r115: [38..39]
 r116: [30..31]
 r117: [28..29]
 r118: [18..22]
 r119: [20..21]
 r120: [18..19]
 r121: [13..17]
 r122: [13..14]
 r123: [361..362]
 r124: [356..357]
 r125: [354..355]
 r126: [352..353]
 r127: [349..351]
 r128: [345..346]
 r129: [329..339]
 r130: [318..322]
 r131: [318..319]
 r132: [316..317]
 r133: [313..315]
 r134: [308..309]
 r135: [303..304]
 r136: [296..302]
 r137: [298..299]
 r138: [295..297]
 r139: [281..289]
 r140: [285..286]
 r141: [283..284]
 r142: [281..282]
 r143: [279..280]
 r144: [277..278]
 r145: [269..270]
 r146: [267..268]
 r147: [253..261]
 r148: [257..258]
 r149: [255..256]
 r150: [253..254]
 r151: [248..252]
 r152: [248..249]
 r153: [240..241]
 r154: [238..239]
 r155: [226..232]
 r156: [230..231]
 r157: [228..229]
 r158: [226..227]
 r159: [224..225]
 r160: [222..223]
 r161: [214..215]
 r162: [212..213]
 r163: [200..206]
 r164: [204..205]
 r165: [202..203]
 r166: [200..201]
 r167: [195..199]
 r168: [195..196]
 r169: [190..190] [126..126] [66..66] [50..50] [2..8]
 r170: [0..1]
 r171: [373..374]
 r172: [369..370]
 r173: [185..187]
 r174: [185..186]
 r175: [180..181]
 r176: [170..172]
 r177: [170..171]
 r178: [167..169]
 r179: [167..168]
 r180: [162..163]
 r181: [156..157]
 r182: [158..160]
 r183: [149..152]
 r184: [147..150]
 r185: [141..142]
 r186: [134..135]
 r187: [132..133]
 r188: [129..131]
 r189: [129..130]
 r190: [122..123]
 r191: [117..118]
 r192: [108..109]
 r193: [106..107]
 r194: [101..102]
 r195: [99..100]
 r196: [93..94]
 r197: [95..97]
 r198: [86..89]
 r199: [84..87]
 r200: [79..80]
 r201: [72..73]
 r202: [69..70]
 r203: [63..64]
 r204: [58..59]
 r205: [51..52]
 r206: [47..48]
 r207: [36..37]
 r208: [32..33]
 r209: [26..27]
 r210: [23..24]
 r211: [15..16]
 r212: [11..12]
 r213: [363..364]
 r214: [358..359]
 r215: [349..350]
 r216: [347..348]
 r217: [342..343]
 r218: [340..341]
 r219: [334..335]
 r220: [336..338]
 r221: [327..330]
 r222: [325..328]
 r223: [320..321]
 r224: [313..314]
 r225: [310..311]
 r226: [305..306]
 r227: [300..301]
 r228: [293..294]
 r229: [290..291]
 r230: [287..288]
 r231: [275..276]
 r232: [271..272]
 r233: [265..266]
 r234: [262..263]
 r235: [259..260]
 r236: [250..251]
 r237: [246..247]
 r238: [242..243]
 r239: [236..237]
 r240: [233..234]
 r241: [220..221]
 r242: [216..217]
 r243: [210..211]
 r244: [207..208]
 r245: [197..198]
 r246: [193..194]
 r252: [157..159]
 r253: [153..155]
 r254: [145..148]
 r255: [94..96]
 r256: [90..92]
 r257: [82..85]
 r258: [335..337]
 r259: [331..333]
 r260: [323..326]
Compressing live ranges: from 377 to 292 - 77%
Ranges after the compression:
 r82: [146..291] [111..144] [50..95] [37..48] [4..35]
 r83: [141..142]
 r84: [137..138]
 r85: [135..136]
 r86: [133..134]
 r87: [131..132]
 r88: [127..128]
 r89: [117..124]
 r90: [107..112]
 r91: [107..108]
 r92: [105..106]
 r93: [103..104]
 r94: [97..98]
 r95: [92..93]
 r96: [88..89]
 r97: [86..87]
 r98: [84..85]
 r99: [82..83]
 r100: [78..79]
 r101: [66..73]
 r102: [58..61]
 r103: [58..59]
 r104: [56..57]
 r105: [54..55]
 r106: [50..51]
 r107: [45..46]
 r108: [39..44]
 r109: [41..42]
 r110: [39..40]
 r111: [30..33]
 r112: [32..33]
 r113: [30..31]
 r114: [28..29]
 r115: [26..27]
 r116: [20..21]
 r117: [18..19]
 r118: [10..13]
 r119: [12..13]
 r120: [10..11]
 r121: [6..9]
 r122: [6..7]
 r123: [284..285]
 r124: [280..281]
 r125: [278..279]
 r126: [276..277]
 r127: [274..275]
 r128: [270..271]
 r129: [258..265]
 r130: [250..253]
 r131: [250..251]
 r132: [248..249]
 r133: [246..247]
 r134: [242..243]
 r135: [238..239]
 r136: [232..237]
 r137: [234..235]
 r138: [232..233]
 r139: [220..227]
 r140: [224..225]
 r141: [222..223]
 r142: [220..221]
 r143: [218..219]
 r144: [216..217]
 r145: [210..211]
 r146: [208..209]
 r147: [196..203]
 r148: [200..201]
 r149: [198..199]
 r150: [196..197]
 r151: [192..195]
 r152: [192..193]
 r153: [186..187]
 r154: [184..185]
 r155: [174..179]
 r156: [178..179]
 r157: [176..177]
 r158: [174..175]
 r159: [172..173]
 r160: [170..171]
 r161: [164..165]
 r162: [162..163]
 r163: [152..157]
 r164: [156..157]
 r165: [154..155]
 r166: [152..153]
 r167: [148..151]
 r168: [148..149]
 r169: [145..145] [96..96] [49..49] [36..36] [2..3]
 r170: [0..1]
 r171: [290..291]
 r172: [288..289]
 r173: [143..144]
 r174: [143..144]
 r175: [139..140]
 r176: [131..132]
 r177: [131..132]
 r178: [129..130]
 r179: [129..130]
 r180: [125..126]
 r181: [121..122]
 r182: [123..124]
 r183: [115..118]
 r184: [113..116]
 r185: [109..110]
 r186: [103..104]
 r187: [101..102]
 r188: [99..100]
 r189: [99..100]
 r190: [94..95]
 r191: [90..91]
 r192: [82..83]
 r193: [80..81]
 r194: [76..77]
 r195: [74..75]
 r196: [70..71]
 r197: [72..73]
 r198: [64..67]
 r199: [62..65]
 r200: [60..61]
 r201: [54..55]
 r202: [52..53]
 r203: [47..48]
 r204: [43..44]
 r205: [37..38]
 r206: [34..35]
 r207: [24..25]
 r208: [22..23]
 r209: [16..17]
 r210: [14..15]
 r211: [8..9]
 r212: [4..5]
 r213: [286..287]
 r214: [282..283]
 r215: [274..275]
 r216: [272..273]
 r217: [268..269]
 r218: [266..267]
 r219: [262..263]
 r220: [264..265]
 r221: [256..259]
 r222: [254..257]
 r223: [252..253]
 r224: [246..247]
 r225: [244..245]
 r226: [240..241]
 r227: [236..237]
 r228: [230..231]
 r229: [228..229]
 r230: [226..227]
 r231: [214..215]
 r232: [212..213]
 r233: [206..207]
 r234: [204..205]
 r235: [202..203]
 r236: [194..195]
 r237: [190..191]
 r238: [188..189]
 r239: [182..183]
 r240: [180..181]
 r241: [168..169]
 r242: [166..167]
 r243: [160..161]
 r244: [158..159]
 r245: [150..151]
 r246: [146..147]
 r252: [122..124]
 r253: [119..120]
 r254: [113..114]
 r255: [71..73]
 r256: [68..69]
 r257: [62..63]
 r258: [263..265]
 r259: [260..261]
 r260: [254..255]

********** Assignment #1: **********

	 Assigning to 252 (cl=AREG, orig=248, freq=2000, tfirst=252, tfreq=2000)...
	   Assign 0 to reload r252 (freq=2000)
	 Assigning to 255 (cl=AREG, orig=249, freq=2000, tfirst=255, tfreq=2000)...
	   Assign 0 to reload r255 (freq=2000)
	 Assigning to 258 (cl=AREG, orig=250, freq=2000, tfirst=258, tfreq=2000)...
	   Assign 0 to reload r258 (freq=2000)
	 Assigning to 253 (cl=GENERAL_REGS, orig=181, freq=3000, tfirst=253, tfreq=3000)...
	   Assign 0 to reload r253 (freq=3000)
	 Assigning to 254 (cl=GENERAL_REGS, orig=183, freq=3000, tfirst=254, tfreq=3000)...
	   Assign 0 to reload r254 (freq=3000)
	 Assigning to 256 (cl=GENERAL_REGS, orig=196, freq=3000, tfirst=256, tfreq=3000)...
	   Assign 0 to reload r256 (freq=3000)
	 Assigning to 257 (cl=GENERAL_REGS, orig=198, freq=3000, tfirst=257, tfreq=3000)...
	   Assign 0 to reload r257 (freq=3000)
	 Assigning to 259 (cl=GENERAL_REGS, orig=219, freq=3000, tfirst=259, tfreq=3000)...
	   Assign 0 to reload r259 (freq=3000)
	 Assigning to 260 (cl=GENERAL_REGS, orig=221, freq=3000, tfirst=260, tfreq=3000)...
	   Assign 0 to reload r260 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 440
changing reg in insn 411
changing reg in insn 388
changing reg in insn 355
changing reg in insn 338
changing reg in insn 314
changing reg in insn 280
changing reg in insn 253
changing reg in insn 246
changing reg in insn 232
changing reg in insn 210
changing reg in insn 188
changing reg in insn 156
changing reg in insn 129
changing reg in insn 122
changing reg in insn 108
changing reg in insn 71
changing reg in insn 64
changing reg in insn 50
changing reg in insn 26
changing reg in insn 24
changing reg in insn 13
changing reg in insn 11
changing reg in insn 41
changing reg in insn 42
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 49
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 76
changing reg in insn 83
changing reg in insn 84
changing reg in insn 99
changing reg in insn 100
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 107
changing reg in insn 111
changing reg in insn 112
changing reg in insn 114
changing reg in insn 116
changing reg in insn 117
changing reg in insn 123
changing reg in insn 127
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 134
changing reg in insn 138
changing reg in insn 139
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 154
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 155
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 175
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 187
changing reg in insn 197
changing reg in insn 198
changing reg in insn 199
changing reg in insn 199
changing reg in insn 200
changing reg in insn 203
changing reg in insn 202
changing reg in insn 203
changing reg in insn 223
changing reg in insn 224
changing reg in insn 228
changing reg in insn 229
changing reg in insn 229
changing reg in insn 231
changing reg in insn 235
changing reg in insn 236
changing reg in insn 238
changing reg in insn 240
changing reg in insn 241
changing reg in insn 247
changing reg in insn 251
changing reg in insn 254
changing reg in insn 255
changing reg in insn 256
changing reg in insn 256
changing reg in insn 258
changing reg in insn 262
changing reg in insn 263
changing reg in insn 272
changing reg in insn 273
changing reg in insn 273
changing reg in insn 278
changing reg in insn 275
changing reg in insn 276
changing reg in insn 276
changing reg in insn 279
changing reg in insn 294
changing reg in insn 296
changing reg in insn 297
changing reg in insn 297
changing reg in insn 298
changing reg in insn 298
changing reg in insn 299
changing reg in insn 300
changing reg in insn 300
changing reg in insn 301
changing reg in insn 310
changing reg in insn 311
changing reg in insn 311
changing reg in insn 313
changing reg in insn 323
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 327
changing reg in insn 327
changing reg in insn 328
changing reg in insn 331
changing reg in insn 330
changing reg in insn 331
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 354
changing reg in insn 369
changing reg in insn 370
changing reg in insn 371
changing reg in insn 371
changing reg in insn 372
changing reg in insn 372
changing reg in insn 373
changing reg in insn 374
changing reg in insn 374
changing reg in insn 375
changing reg in insn 384
changing reg in insn 385
changing reg in insn 385
changing reg in insn 387
changing reg in insn 397
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 400
changing reg in insn 400
changing reg in insn 401
changing reg in insn 404
changing reg in insn 403
changing reg in insn 404
changing reg in insn 414
changing reg in insn 363
changing reg in insn 344
changing reg in insn 288
changing reg in insn 266
changing reg in insn 213
changing reg in insn 164
changing reg in insn 142
changing reg in insn 84
changing reg in insn 417
changing reg in insn 417
changing reg in insn 421
changing reg in insn 11
changing reg in insn 12
changing reg in insn 24
changing reg in insn 25
changing reg in insn 39
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 60
changing reg in insn 59
changing reg in insn 60
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 98
changing reg in insn 99
changing reg in insn 103
changing reg in insn 104
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 120
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 125
changing reg in insn 124
changing reg in insn 125
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 133
changing reg in insn 134
changing reg in insn 137
changing reg in insn 138
changing reg in insn 147
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 159
changing reg in insn 160
changing reg in insn 169
changing reg in insn 170
changing reg in insn 175
changing reg in insn 176
changing reg in insn 183
changing reg in insn 184
changing reg in insn 191
changing reg in insn 192
changing reg in insn 196
changing reg in insn 197
changing reg in insn 201
changing reg in insn 204
changing reg in insn 205
changing reg in insn 222
changing reg in insn 223
changing reg in insn 227
changing reg in insn 228
changing reg in insn 237
changing reg in insn 238
changing reg in insn 239
changing reg in insn 240
changing reg in insn 244
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 249
changing reg in insn 248
changing reg in insn 249
changing reg in insn 251
changing reg in insn 252
changing reg in insn 253
changing reg in insn 254
changing reg in insn 257
changing reg in insn 258
changing reg in insn 261
changing reg in insn 262
changing reg in insn 271
changing reg in insn 272
changing reg in insn 274
changing reg in insn 275
changing reg in insn 283
changing reg in insn 284
changing reg in insn 293
changing reg in insn 294
changing reg in insn 295
changing reg in insn 296
changing reg in insn 301
changing reg in insn 302
changing reg in insn 309
changing reg in insn 310
changing reg in insn 317
changing reg in insn 318
changing reg in insn 322
changing reg in insn 323
changing reg in insn 324
changing reg in insn 325
changing reg in insn 329
changing reg in insn 332
changing reg in insn 333
changing reg in insn 349
changing reg in insn 350
changing reg in insn 358
changing reg in insn 359
changing reg in insn 368
changing reg in insn 369
changing reg in insn 375
changing reg in insn 376
changing reg in insn 383
changing reg in insn 384
changing reg in insn 391
changing reg in insn 392
changing reg in insn 396
changing reg in insn 397
changing reg in insn 402
changing reg in insn 405
changing reg in insn 406
deleting insn with uid = 13.
deleting insn with uid = 26.
deleting insn with uid = 50.
deleting insn with uid = 53.
deleting insn with uid = 444.
deleting insn with uid = 445.
deleting insn with uid = 108.
deleting insn with uid = 111.
deleting insn with uid = 449.
deleting insn with uid = 450.
deleting insn with uid = 156.
deleting insn with uid = 159.
deleting insn with uid = 188.
deleting insn with uid = 191.
deleting insn with uid = 202.
deleting insn with uid = 210.
deleting insn with uid = 232.
deleting insn with uid = 235.
deleting insn with uid = 454.
deleting insn with uid = 455.
deleting insn with uid = 280.
deleting insn with uid = 283.
deleting insn with uid = 297.
deleting insn with uid = 314.
deleting insn with uid = 317.
deleting insn with uid = 326.
deleting insn with uid = 330.
deleting insn with uid = 338.
deleting insn with uid = 355.
deleting insn with uid = 358.
deleting insn with uid = 388.
deleting insn with uid = 391.
deleting insn with uid = 403.
deleting insn with uid = 411.
deleting insn with uid = 417.
deleting insn with uid = 421.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 233.
verify found no changes in insn with uid = 281.
verify found no changes in insn with uid = 315.
verify found no changes in insn with uid = 339.
verify found no changes in insn with uid = 356.
verify found no changes in insn with uid = 389.
verify found no changes in insn with uid = 412.


_bmap

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={148d,132u} r1={44d,29u} r2={22d,10u} r3={1d,22u} r7={46d,224u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={2e} r17={104d,28u} r18={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} 
;;    total ref usage 1722{1275d,445u,2e} in 317{303 regular + 14 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 440 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 440 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 440 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [9 block+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":250:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "fs/inode.c":250:8 806 {*jcc}
     (nil)
 -> 16)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":251:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 11 10 12 3 (set (reg/f:SI 0 ax [171])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7341ee5b7cf0 *.LC10>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":251:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7341ee5b7cf0 *.LC10>)
        (nil)))
(insn 12 11 14 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [171])) "fs/inode.c":251:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 14 12 15 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":251:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":251:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 16 15 17 4 75 (nil) [1 uses])
(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 17 21 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [9 block+0 S4 A32])
            (const_int 262662 [0x40206]))) "fs/inode.c":252:8 11 {*cmpsi_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/inode.c":252:8 806 {*jcc}
     (nil)
 -> 29)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":253:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 24 23 25 5 (set (reg/f:SI 0 ax [172])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x7341ee5b7d80 *.LC11>)
                    ] UNSPEC_GOTOFF)))) "fs/inode.c":253:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x7341ee5b7d80 *.LC11>)
        (nil)))
(insn 25 24 27 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg/f:SI 0 ax [172])) "fs/inode.c":253:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 27 25 28 5 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7341ee538700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":253:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 28 27 29 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":253:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 29 28 30 6 76 (nil) [1 uses])
(note 30 29 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 30 34 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [9 block+0 S4 A32])
            (const_int 6 [0x6]))) "fs/inode.c":254:8 11 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "fs/inode.c":254:8 806 {*jcc}
     (nil)
 -> 87)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":255:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/inode.c":255:12 806 {*jcc}
     (nil)
 -> 79)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:SI 0 ax [173])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":255:37 75 {*movsi_internal}
     (nil))
(insn 40 39 41 8 (set (reg:SI 1 dx [174])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":255:37 75 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [174])
                        (const_int 2 [0x2]))
                    (reg/f:SI 0 ax [173]))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])) "fs/inode.c":255:37 76 {*movhi_internal}
     (nil))
(insn 42 41 43 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/inode.c":255:20 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/inode.c":255:20 806 {*jcc}
     (nil)
 -> 79)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (set (reg/f:SI 0 ax [175])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":256:56 75 {*movsi_internal}
     (nil))
(insn 46 45 47 9 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [175])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":256:56 76 {*movhi_internal}
     (nil))
(insn 47 46 48 9 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/inode.c":256:41 144 {*zero_extendhisi2}
     (nil))
(insn 48 47 49 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":256:41 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 49 48 51 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:85 _3 ] [85])) "fs/inode.c":256:41 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 51 49 52 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":256:41 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 52 51 54 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":256:41 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 54 52 55 9 (set (reg:HI 2 cx [orig:87 _5 ] [87])
        (reg:HI 0 ax [orig:86 _4 ] [86])) "fs/inode.c":256:39 76 {*movhi_internal}
     (nil))
(insn 55 54 56 9 (set (reg/f:SI 0 ax [176])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":256:39 75 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:SI 1 dx [177])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":256:39 75 {*movsi_internal}
     (nil))
(insn 57 56 58 9 (set (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [177])
                        (const_int 2 [0x2]))
                    (reg/f:SI 0 ax [176]))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])
        (reg:HI 2 cx [orig:87 _5 ] [87])) "fs/inode.c":256:39 76 {*movhi_internal}
     (nil))
(insn 58 57 59 9 (set (reg/f:SI 0 ax [178])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":256:31 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:SI 1 dx [179])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":256:31 75 {*movsi_internal}
     (nil))
(insn 60 59 61 9 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [179])
                        (const_int 2 [0x2]))
                    (reg/f:SI 0 ax [178]))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])) "fs/inode.c":256:31 76 {*movhi_internal}
     (nil))
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:88 _6 ] [88])
            (const_int 0 [0]))) "fs/inode.c":256:16 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/inode.c":256:16 806 {*jcc}
     (nil)
 -> 79)
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:SI 0 ax [180])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7341ee52e360 jiffies>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 65 64 66 10 (set (reg:SI 2 cx [orig:89 jiffies.3_7 ] [89])
        (mem/v/c:SI (reg/f:SI 0 ax [180]) [3 jiffies+0 S4 A32])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 66 65 442 10 (set (reg:SI 1 dx [182])
        (const_int 1374389535 [0x51eb851f])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 442 66 67 10 (set (reg:SI 0 ax [248])
        (reg:SI 2 cx [orig:89 jiffies.3_7 ] [89])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 67 442 443 10 (parallel [
            (set (reg:SI 1 dx [181])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [248]))
                            (sign_extend:DI (reg:SI 1 dx [182])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [248]))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 435 {*smulsi3_highpart_1}
     (nil))
(insn 443 67 68 10 (set (reg:SI 0 ax [181])
        (reg:SI 1 dx [181])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 68 443 69 10 (parallel [
            (set (reg:SI 0 ax [181])
                (ashiftrt:SI (reg:SI 0 ax [181])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 702 {*ashrsi3_1}
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg:SI 2 cx [184])
                (ashiftrt:SI (reg:SI 2 cx [orig:89 jiffies.3_7 ] [89])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 694 {ashrsi3_cvt}
     (nil))
(insn 70 69 446 10 (parallel [
            (set (reg:SI 0 ax [183])
                (minus:SI (reg:SI 0 ax [183])
                    (reg:SI 2 cx [184])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 282 {*subsi_1}
     (nil))
(insn 446 70 71 10 (set (reg:SI 1 dx [orig:90 _8 ] [90])
        (reg:SI 0 ax [183])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 71 446 72 10 (set (reg/f:SI 0 ax [185])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7341ee52e3f0 startup_time>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 72 71 73 10 (set (reg:SI 0 ax [orig:91 startup_time.4_9 ] [91])
        (mem/c:SI (reg/f:SI 0 ax [185]) [3 startup_time+0 S4 A32])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:SI 0 ax [orig:92 _10 ] [92])
                (plus:SI (reg:SI 0 ax [orig:91 startup_time.4_9 ] [91])
                    (reg:SI 1 dx [orig:90 _8 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":257:34 209 {*addsi_1}
     (nil))
(insn 74 73 75 10 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (reg:SI 0 ax [orig:92 _10 ] [92])) "fs/inode.c":257:34 75 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (reg/f:SI 0 ax [186])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":257:32 75 {*movsi_internal}
     (nil))
(insn 76 75 77 10 (set (mem:SI (plus:SI (reg/f:SI 0 ax [186])
                (const_int 40 [0x28])) [3 inode_107(D)->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:93 _11 ] [93])) "fs/inode.c":257:32 75 {*movsi_internal}
     (nil))
(insn 77 76 78 10 (set (reg/f:SI 0 ax [187])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":258:31 75 {*movsi_internal}
     (nil))
(insn 78 77 79 10 (set (mem:QI (plus:SI (reg/f:SI 0 ax [187])
                (const_int 51 [0x33])) [0 inode_107(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":258:31 77 {*movqi_internal}
     (nil))
(code_label 79 78 80 11 78 (nil) [3 uses])
(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 11 (set (reg/f:SI 0 ax [188])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":260:29 75 {*movsi_internal}
     (nil))
(insn 82 81 83 11 (set (reg:SI 1 dx [189])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":260:29 75 {*movsi_internal}
     (nil))
(insn 83 82 84 11 (set (reg:HI 0 ax [orig:94 _12 ] [94])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [189])
                        (const_int 2 [0x2]))
                    (reg/f:SI 0 ax [188]))
                (const_int 14 [0xe])) [2 inode_107(D)->i_zone[block_100(D)]+0 S2 A16])) "fs/inode.c":260:29 76 {*movhi_internal}
     (nil))
(insn 84 83 424 11 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (zero_extend:SI (reg:HI 0 ax [orig:94 _12 ] [94]))) "fs/inode.c":260:29 144 {*zero_extendhisi2}
     (nil))
(jump_insn 424 84 425 11 (set (pc)
        (label_ref 415)) "fs/inode.c":260:29 807 {jump}
     (nil)
 -> 415)
(barrier 425 424 87)
(code_label 87 425 88 12 77 (nil) [1 uses])
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 92 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 36 [0x24])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 36 [0x24])) [9 block+0 S4 A32])
                    (const_int -7 [0xfffffffffffffff9])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":262:11 209 {*addsi_1}
     (nil))
(insn 92 89 93 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [9 block+0 S4 A32])
            (const_int 511 [0x1ff]))) "fs/inode.c":263:8 11 {*cmpsi_1}
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) "fs/inode.c":263:8 806 {*jcc}
     (nil)
 -> 216)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":264:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 96 95 97 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/inode.c":264:12 806 {*jcc}
     (nil)
 -> 135)
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:SI 0 ax [190])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":264:37 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (plus:SI (reg/f:SI 0 ax [190])
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":264:37 76 {*movhi_internal}
     (nil))
(insn 100 99 101 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "fs/inode.c":264:20 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 101 100 102 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/inode.c":264:20 806 {*jcc}
     (nil)
 -> 135)
(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 15 (set (reg/f:SI 0 ax [191])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":265:52 75 {*movsi_internal}
     (nil))
(insn 104 103 105 15 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [191])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":265:52 76 {*movhi_internal}
     (nil))
(insn 105 104 106 15 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _14 ] [96]))) "fs/inode.c":265:37 144 {*zero_extendhisi2}
     (nil))
(insn 106 105 107 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":265:37 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 107 106 109 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:97 _15 ] [97])) "fs/inode.c":265:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 109 107 110 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":265:37 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 110 109 112 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":265:37 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 112 110 113 15 (set (reg:HI 1 dx [orig:99 _17 ] [99])
        (reg:HI 0 ax [orig:98 _16 ] [98])) "fs/inode.c":265:35 76 {*movhi_internal}
     (nil))
(insn 113 112 114 15 (set (reg/f:SI 0 ax [192])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":265:35 75 {*movsi_internal}
     (nil))
(insn 114 113 115 15 (set (mem:HI (plus:SI (reg/f:SI 0 ax [192])
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])
        (reg:HI 1 dx [orig:99 _17 ] [99])) "fs/inode.c":265:35 76 {*movhi_internal}
     (nil))
(insn 115 114 116 15 (set (reg/f:SI 0 ax [193])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":265:31 75 {*movsi_internal}
     (nil))
(insn 116 115 117 15 (set (reg:HI 0 ax [orig:100 _18 ] [100])
        (mem:HI (plus:SI (reg/f:SI 0 ax [193])
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":265:31 76 {*movhi_internal}
     (nil))
(insn 117 116 118 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:100 _18 ] [100])
            (const_int 0 [0]))) "fs/inode.c":265:16 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 118 117 119 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/inode.c":265:16 806 {*jcc}
     (nil)
 -> 135)
(note 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 16 (set (reg/f:SI 0 ax [194])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":266:31 75 {*movsi_internal}
     (nil))
(insn 121 120 122 16 (set (mem:QI (plus:SI (reg/f:SI 0 ax [194])
                (const_int 51 [0x33])) [0 inode_107(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":266:31 77 {*movqi_internal}
     (nil))
(insn 122 121 123 16 (set (reg/f:SI 0 ax [195])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7341ee52e360 jiffies>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 123 122 124 16 (set (reg:SI 2 cx [orig:101 jiffies.5_19 ] [101])
        (mem/v/c:SI (reg/f:SI 0 ax [195]) [3 jiffies+0 S4 A32])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 124 123 447 16 (set (reg:SI 1 dx [197])
        (const_int 1374389535 [0x51eb851f])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 447 124 125 16 (set (reg:SI 0 ax [249])
        (reg:SI 2 cx [orig:101 jiffies.5_19 ] [101])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 125 447 448 16 (parallel [
            (set (reg:SI 1 dx [196])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [249]))
                            (sign_extend:DI (reg:SI 1 dx [197])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [249]))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 435 {*smulsi3_highpart_1}
     (nil))
(insn 448 125 126 16 (set (reg:SI 0 ax [196])
        (reg:SI 1 dx [196])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 126 448 127 16 (parallel [
            (set (reg:SI 0 ax [196])
                (ashiftrt:SI (reg:SI 0 ax [196])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 702 {*ashrsi3_1}
     (nil))
(insn 127 126 128 16 (parallel [
            (set (reg:SI 2 cx [199])
                (ashiftrt:SI (reg:SI 2 cx [orig:101 jiffies.5_19 ] [101])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 694 {ashrsi3_cvt}
     (nil))
(insn 128 127 451 16 (parallel [
            (set (reg:SI 0 ax [198])
                (minus:SI (reg:SI 0 ax [198])
                    (reg:SI 2 cx [199])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 282 {*subsi_1}
     (nil))
(insn 451 128 129 16 (set (reg:SI 1 dx [orig:102 _20 ] [102])
        (reg:SI 0 ax [198])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 129 451 130 16 (set (reg/f:SI 0 ax [200])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7341ee52e3f0 startup_time>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 130 129 131 16 (set (reg:SI 0 ax [orig:103 startup_time.6_21 ] [103])
        (mem/c:SI (reg/f:SI 0 ax [200]) [3 startup_time+0 S4 A32])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 131 130 132 16 (parallel [
            (set (reg:SI 0 ax [orig:104 _22 ] [104])
                (plus:SI (reg:SI 0 ax [orig:103 startup_time.6_21 ] [103])
                    (reg:SI 1 dx [orig:102 _20 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":267:34 209 {*addsi_1}
     (nil))
(insn 132 131 133 16 (set (reg:SI 1 dx [orig:105 _23 ] [105])
        (reg:SI 0 ax [orig:104 _22 ] [104])) "fs/inode.c":267:34 75 {*movsi_internal}
     (nil))
(insn 133 132 134 16 (set (reg/f:SI 0 ax [201])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":267:32 75 {*movsi_internal}
     (nil))
(insn 134 133 135 16 (set (mem:SI (plus:SI (reg/f:SI 0 ax [201])
                (const_int 40 [0x28])) [3 inode_107(D)->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:105 _23 ] [105])) "fs/inode.c":267:32 75 {*movsi_internal}
     (nil))
(code_label 135 134 136 17 81 (nil) [3 uses])
(note 136 135 137 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 17 (set (reg/f:SI 0 ax [202])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":269:27 75 {*movsi_internal}
     (nil))
(insn 138 137 139 17 (set (reg:HI 0 ax [orig:106 _24 ] [106])
        (mem:HI (plus:SI (reg/f:SI 0 ax [202])
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":269:27 76 {*movhi_internal}
     (nil))
(insn 139 138 140 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:106 _24 ] [106])
            (const_int 0 [0]))) "fs/inode.c":269:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 140 139 141 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "fs/inode.c":269:12 806 {*jcc}
     (nil)
 -> 145)
(note 141 140 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 426 18 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (const_int 0 [0])) "fs/inode.c":270:20 75 {*movsi_internal}
     (nil))
(jump_insn 426 142 427 18 (set (pc)
        (label_ref 415)) "fs/inode.c":270:20 807 {jump}
     (nil)
 -> 415)
(barrier 427 426 145)
(code_label 145 427 146 19 82 (nil) [1 uses])
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 19 (set (reg/f:SI 0 ax [203])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":271:53 75 {*movsi_internal}
     (nil))
(insn 148 147 149 19 (set (reg:HI 0 ax [orig:107 _25 ] [107])
        (mem:HI (plus:SI (reg/f:SI 0 ax [203])
                (const_int 28 [0x1c])) [2 inode_107(D)->i_zone[7]+0 S2 A32])) "fs/inode.c":271:53 76 {*movhi_internal}
     (nil))
(insn 149 148 150 19 (set (reg:SI 1 dx [orig:108 _26 ] [108])
        (zero_extend:SI (reg:HI 0 ax [orig:107 _25 ] [107]))) "fs/inode.c":271:20 144 {*zero_extendhisi2}
     (nil))
(insn 150 149 151 19 (set (reg/f:SI 0 ax [204])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":271:31 75 {*movsi_internal}
     (nil))
(insn 151 150 152 19 (set (reg:HI 0 ax [orig:109 _27 ] [109])
        (mem:HI (plus:SI (reg/f:SI 0 ax [204])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":271:31 76 {*movhi_internal}
     (nil))
(insn 152 151 153 19 (set (reg:SI 0 ax [orig:110 _28 ] [110])
        (zero_extend:SI (reg:HI 0 ax [orig:109 _27 ] [109]))) "fs/inode.c":271:20 144 {*zero_extendhisi2}
     (nil))
(insn 153 152 154 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":271:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 154 153 155 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 1 dx [orig:108 _26 ] [108])) "fs/inode.c":271:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 155 154 157 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:110 _28 ] [110])) "fs/inode.c":271:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 157 155 158 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":271:20 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 158 157 160 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":271:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 160 158 161 19 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])
        (reg:SI 0 ax [205])) "fs/inode.c":271:20 75 {*movsi_internal}
     (nil))
(insn 161 160 162 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":271:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 162 161 163 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "fs/inode.c":271:12 806 {*jcc}
     (nil)
 -> 167)
(note 163 162 164 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 428 20 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (const_int 0 [0])) "fs/inode.c":272:20 75 {*movsi_internal}
     (nil))
(jump_insn 428 164 429 20 (set (pc)
        (label_ref 415)) "fs/inode.c":272:20 807 {jump}
     (nil)
 -> 415)
(barrier 429 428 167)
(code_label 167 429 168 21 83 (nil) [1 uses])
(note 168 167 169 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 21 (set (reg/f:SI 0 ax [206])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":273:35 75 {*movsi_internal}
     (nil))
(insn 170 169 171 21 (set (reg/f:SI 1 dx [orig:111 _29 ] [111])
        (mem/f:SI (reg/f:SI 0 ax [206]) [10 bh_138->b_data+0 S4 A32])) "fs/inode.c":273:35 75 {*movsi_internal}
     (nil))
(insn 171 170 172 21 (set (reg:SI 0 ax [orig:112 block.7_30 ] [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":273:45 75 {*movsi_internal}
     (nil))
(insn 172 171 173 21 (parallel [
            (set (reg:SI 0 ax [orig:113 _31 ] [113])
                (ashift:SI (reg:SI 0 ax [orig:112 block.7_30 ] [112])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":273:45 655 {*ashlsi3_1}
     (nil))
(insn 173 172 174 21 (parallel [
            (set (reg/f:SI 0 ax [orig:114 _32 ] [114])
                (plus:SI (reg:SI 0 ax [orig:113 _31 ] [113])
                    (reg/f:SI 1 dx [orig:111 _29 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":273:45 209 {*addsi_1}
     (nil))
(insn 174 173 175 21 (set (reg:HI 0 ax [orig:115 _33 ] [115])
        (mem:HI (reg/f:SI 0 ax [orig:114 _32 ] [114]) [2 *_32+0 S2 A16])) "fs/inode.c":273:45 76 {*movhi_internal}
     (nil))
(insn 175 174 176 21 (set (reg:SI 0 ax [207])
        (zero_extend:SI (reg:HI 0 ax [orig:115 _33 ] [115]))) "fs/inode.c":273:11 144 {*zero_extendhisi2}
     (nil))
(insn 176 175 177 21 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [207])) "fs/inode.c":273:11 75 {*movsi_internal}
     (nil))
(insn 177 176 178 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":274:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 178 177 179 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/inode.c":274:12 806 {*jcc}
     (nil)
 -> 206)
(note 179 178 180 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":274:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 181 180 182 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/inode.c":274:20 806 {*jcc}
     (nil)
 -> 206)
(note 182 181 183 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 23 (set (reg/f:SI 0 ax [208])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":275:37 75 {*movsi_internal}
     (nil))
(insn 184 183 185 23 (set (reg:HI 0 ax [orig:116 _34 ] [116])
        (mem:HI (plus:SI (reg/f:SI 0 ax [208])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":275:37 76 {*movhi_internal}
     (nil))
(insn 185 184 186 23 (set (reg:SI 0 ax [orig:117 _35 ] [117])
        (zero_extend:SI (reg:HI 0 ax [orig:116 _34 ] [116]))) "fs/inode.c":275:22 144 {*zero_extendhisi2}
     (nil))
(insn 186 185 187 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":275:22 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 187 186 189 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:117 _35 ] [117])) "fs/inode.c":275:22 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 189 187 190 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":275:22 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 190 189 192 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":275:22 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 192 190 193 23 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [209])) "fs/inode.c":275:22 75 {*movsi_internal}
     (nil))
(insn 193 192 194 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":275:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 194 193 195 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/inode.c":275:16 806 {*jcc}
     (nil)
 -> 206)
(note 195 194 196 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 24 (set (reg/f:SI 0 ax [210])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":276:39 75 {*movsi_internal}
     (nil))
(insn 197 196 198 24 (set (reg/f:SI 1 dx [orig:118 _36 ] [118])
        (mem/f:SI (reg/f:SI 0 ax [210]) [10 bh_138->b_data+0 S4 A32])) "fs/inode.c":276:39 75 {*movsi_internal}
     (nil))
(insn 198 197 199 24 (set (reg:SI 0 ax [orig:119 block.8_37 ] [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":276:49 75 {*movsi_internal}
     (nil))
(insn 199 198 200 24 (parallel [
            (set (reg:SI 0 ax [orig:120 _38 ] [120])
                (ashift:SI (reg:SI 0 ax [orig:119 block.8_37 ] [119])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":276:49 655 {*ashlsi3_1}
     (nil))
(insn 200 199 201 24 (parallel [
            (set (reg/f:SI 0 ax [orig:121 _39 ] [121])
                (plus:SI (reg:SI 0 ax [orig:120 _38 ] [120])
                    (reg/f:SI 1 dx [orig:118 _36 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":276:49 209 {*addsi_1}
     (nil))
(insn 201 200 203 24 (set (reg:SI 1 dx [211])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/inode.c":276:57 75 {*movsi_internal}
     (nil))
(insn 203 201 204 24 (set (mem:HI (reg/f:SI 0 ax [orig:121 _39 ] [121]) [2 *_39+0 S2 A16])
        (reg:HI 1 dx [orig:122 _40 ] [122])) "fs/inode.c":276:57 76 {*movhi_internal}
     (nil))
(insn 204 203 205 24 (set (reg/f:SI 0 ax [212])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":277:28 75 {*movsi_internal}
     (nil))
(insn 205 204 206 24 (set (mem:QI (plus:SI (reg/f:SI 0 ax [212])
                (const_int 11 [0xb])) [0 bh_138->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":277:28 77 {*movqi_internal}
     (nil))
(code_label 206 205 207 25 84 (nil) [3 uses])
(note 207 206 208 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":279:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 209 208 211 25 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 bh+0 S4 A32])) "fs/inode.c":279:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 211 209 212 25 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":279:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 212 211 213 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":279:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 213 212 430 25 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/inode.c":280:16 75 {*movsi_internal}
     (nil))
(jump_insn 430 213 431 25 (set (pc)
        (label_ref 415)) "fs/inode.c":280:16 807 {jump}
     (nil)
 -> 415)
(barrier 431 430 216)
(code_label 216 431 217 26 80 (nil) [1 uses])
(note 217 216 218 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 26 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 36 [0x24])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 36 [0x24])) [9 block+0 S4 A32])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":282:11 209 {*addsi_1}
     (nil))
(insn 219 218 220 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":283:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 220 219 221 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "fs/inode.c":283:8 806 {*jcc}
     (nil)
 -> 259)
(note 221 220 222 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 27 (set (reg/f:SI 0 ax [213])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":283:33 75 {*movsi_internal}
     (nil))
(insn 223 222 224 27 (set (reg:HI 0 ax [orig:123 _41 ] [123])
        (mem:HI (plus:SI (reg/f:SI 0 ax [213])
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":283:33 76 {*movhi_internal}
     (nil))
(insn 224 223 225 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:123 _41 ] [123])
            (const_int 0 [0]))) "fs/inode.c":283:16 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 225 224 226 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "fs/inode.c":283:16 806 {*jcc}
     (nil)
 -> 259)
(note 226 225 227 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 28 (set (reg/f:SI 0 ax [214])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":284:48 75 {*movsi_internal}
     (nil))
(insn 228 227 229 28 (set (reg:HI 0 ax [orig:124 _42 ] [124])
        (mem:HI (plus:SI (reg/f:SI 0 ax [214])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":284:48 76 {*movhi_internal}
     (nil))
(insn 229 228 230 28 (set (reg:SI 0 ax [orig:125 _43 ] [125])
        (zero_extend:SI (reg:HI 0 ax [orig:124 _42 ] [124]))) "fs/inode.c":284:33 144 {*zero_extendhisi2}
     (nil))
(insn 230 229 231 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":284:33 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 231 230 233 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:125 _43 ] [125])) "fs/inode.c":284:33 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 233 231 234 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":284:33 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 234 233 236 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":284:33 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 236 234 237 28 (set (reg:HI 1 dx [orig:127 _45 ] [127])
        (reg:HI 0 ax [orig:126 _44 ] [126])) "fs/inode.c":284:31 76 {*movhi_internal}
     (nil))
(insn 237 236 238 28 (set (reg/f:SI 0 ax [215])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":284:31 75 {*movsi_internal}
     (nil))
(insn 238 237 239 28 (set (mem:HI (plus:SI (reg/f:SI 0 ax [215])
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])
        (reg:HI 1 dx [orig:127 _45 ] [127])) "fs/inode.c":284:31 76 {*movhi_internal}
     (nil))
(insn 239 238 240 28 (set (reg/f:SI 0 ax [216])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":284:27 75 {*movsi_internal}
     (nil))
(insn 240 239 241 28 (set (reg:HI 0 ax [orig:128 _46 ] [128])
        (mem:HI (plus:SI (reg/f:SI 0 ax [216])
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":284:27 76 {*movhi_internal}
     (nil))
(insn 241 240 242 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:128 _46 ] [128])
            (const_int 0 [0]))) "fs/inode.c":284:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 242 241 243 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "fs/inode.c":284:12 806 {*jcc}
     (nil)
 -> 259)
(note 243 242 244 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 29 (set (reg/f:SI 0 ax [217])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":285:27 75 {*movsi_internal}
     (nil))
(insn 245 244 246 29 (set (mem:QI (plus:SI (reg/f:SI 0 ax [217])
                (const_int 51 [0x33])) [0 inode_107(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":285:27 77 {*movqi_internal}
     (nil))
(insn 246 245 247 29 (set (reg/f:SI 0 ax [218])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7341ee52e360 jiffies>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 247 246 248 29 (set (reg:SI 2 cx [orig:129 jiffies.9_47 ] [129])
        (mem/v/c:SI (reg/f:SI 0 ax [218]) [3 jiffies+0 S4 A32])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 248 247 452 29 (set (reg:SI 1 dx [220])
        (const_int 1374389535 [0x51eb851f])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 452 248 249 29 (set (reg:SI 0 ax [250])
        (reg:SI 2 cx [orig:129 jiffies.9_47 ] [129])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 249 452 453 29 (parallel [
            (set (reg:SI 1 dx [219])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [250]))
                            (sign_extend:DI (reg:SI 1 dx [220])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [250]))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 435 {*smulsi3_highpart_1}
     (nil))
(insn 453 249 250 29 (set (reg:SI 0 ax [219])
        (reg:SI 1 dx [219])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 250 453 251 29 (parallel [
            (set (reg:SI 0 ax [219])
                (ashiftrt:SI (reg:SI 0 ax [219])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 702 {*ashrsi3_1}
     (nil))
(insn 251 250 252 29 (parallel [
            (set (reg:SI 2 cx [222])
                (ashiftrt:SI (reg:SI 2 cx [orig:129 jiffies.9_47 ] [129])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 694 {ashrsi3_cvt}
     (nil))
(insn 252 251 456 29 (parallel [
            (set (reg:SI 0 ax [221])
                (minus:SI (reg:SI 0 ax [221])
                    (reg:SI 2 cx [222])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 282 {*subsi_1}
     (nil))
(insn 456 252 253 29 (set (reg:SI 1 dx [orig:130 _48 ] [130])
        (reg:SI 0 ax [221])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 253 456 254 29 (set (reg/f:SI 0 ax [223])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7341ee52e3f0 startup_time>)
                        ] UNSPEC_GOT))) [14  S4 A8])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 254 253 255 29 (set (reg:SI 0 ax [orig:131 startup_time.10_49 ] [131])
        (mem/c:SI (reg/f:SI 0 ax [223]) [3 startup_time+0 S4 A32])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 255 254 256 29 (parallel [
            (set (reg:SI 0 ax [orig:132 _50 ] [132])
                (plus:SI (reg:SI 0 ax [orig:131 startup_time.10_49 ] [131])
                    (reg:SI 1 dx [orig:130 _48 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":286:30 209 {*addsi_1}
     (nil))
(insn 256 255 257 29 (set (reg:SI 1 dx [orig:133 _51 ] [133])
        (reg:SI 0 ax [orig:132 _50 ] [132])) "fs/inode.c":286:30 75 {*movsi_internal}
     (nil))
(insn 257 256 258 29 (set (reg/f:SI 0 ax [224])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":286:28 75 {*movsi_internal}
     (nil))
(insn 258 257 259 29 (set (mem:SI (plus:SI (reg/f:SI 0 ax [224])
                (const_int 40 [0x28])) [3 inode_107(D)->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:133 _51 ] [133])) "fs/inode.c":286:28 75 {*movsi_internal}
     (nil))
(code_label 259 258 260 30 85 (nil) [3 uses])
(note 260 259 261 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 30 (set (reg/f:SI 0 ax [225])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":288:23 75 {*movsi_internal}
     (nil))
(insn 262 261 263 30 (set (reg:HI 0 ax [orig:134 _52 ] [134])
        (mem:HI (plus:SI (reg/f:SI 0 ax [225])
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":288:23 76 {*movhi_internal}
     (nil))
(insn 263 262 264 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:134 _52 ] [134])
            (const_int 0 [0]))) "fs/inode.c":288:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 264 263 265 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) "fs/inode.c":288:8 806 {*jcc}
     (nil)
 -> 269)
(note 265 264 266 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 432 31 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (const_int 0 [0])) "fs/inode.c":289:16 75 {*movsi_internal}
     (nil))
(jump_insn 432 266 433 31 (set (pc)
        (label_ref 415)) "fs/inode.c":289:16 807 {jump}
     (nil)
 -> 415)
(barrier 433 432 269)
(code_label 269 433 270 32 86 (nil) [1 uses])
(note 270 269 271 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 32 (set (reg/f:SI 0 ax [226])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":290:49 75 {*movsi_internal}
     (nil))
(insn 272 271 273 32 (set (reg:HI 0 ax [orig:135 _53 ] [135])
        (mem:HI (plus:SI (reg/f:SI 0 ax [226])
                (const_int 30 [0x1e])) [2 inode_107(D)->i_zone[8]+0 S2 A16])) "fs/inode.c":290:49 76 {*movhi_internal}
     (nil))
(insn 273 272 274 32 (set (reg:SI 1 dx [orig:136 _54 ] [136])
        (zero_extend:SI (reg:HI 0 ax [orig:135 _53 ] [135]))) "fs/inode.c":290:16 144 {*zero_extendhisi2}
     (nil))
(insn 274 273 275 32 (set (reg/f:SI 0 ax [227])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":290:27 75 {*movsi_internal}
     (nil))
(insn 275 274 276 32 (set (reg:HI 0 ax [orig:137 _55 ] [137])
        (mem:HI (plus:SI (reg/f:SI 0 ax [227])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":290:27 76 {*movhi_internal}
     (nil))
(insn 276 275 277 32 (set (reg:SI 0 ax [orig:138 _56 ] [138])
        (zero_extend:SI (reg:HI 0 ax [orig:137 _55 ] [137]))) "fs/inode.c":290:16 144 {*zero_extendhisi2}
     (nil))
(insn 277 276 278 32 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":290:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 278 277 279 32 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 1 dx [orig:136 _54 ] [136])) "fs/inode.c":290:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 279 278 281 32 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:138 _56 ] [138])) "fs/inode.c":290:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 281 279 282 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":290:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 282 281 284 32 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":290:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 284 282 285 32 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])
        (reg:SI 0 ax [228])) "fs/inode.c":290:16 75 {*movsi_internal}
     (nil))
(insn 285 284 286 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":290:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 286 285 287 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "fs/inode.c":290:8 806 {*jcc}
     (nil)
 -> 291)
(note 287 286 288 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 434 33 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (const_int 0 [0])) "fs/inode.c":291:16 75 {*movsi_internal}
     (nil))
(jump_insn 434 288 435 33 (set (pc)
        (label_ref 415)) "fs/inode.c":291:16 807 {jump}
     (nil)
 -> 415)
(barrier 435 434 291)
(code_label 291 435 292 34 87 (nil) [1 uses])
(note 292 291 293 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 34 (set (reg/f:SI 0 ax [229])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":292:30 75 {*movsi_internal}
     (nil))
(insn 294 293 295 34 (set (reg/f:SI 1 dx [orig:139 _57 ] [139])
        (mem/f:SI (reg/f:SI 0 ax [229]) [10 bh_113->b_data+0 S4 A32])) "fs/inode.c":292:30 75 {*movsi_internal}
     (nil))
(insn 295 294 296 34 (set (reg:SI 0 ax [230])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":292:46 75 {*movsi_internal}
     (nil))
(insn 296 295 298 34 (parallel [
            (set (reg:SI 0 ax [orig:140 _58 ] [140])
                (ashiftrt:SI (reg:SI 0 ax [230])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":292:46 702 {*ashrsi3_1}
     (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 block+0 S4 A32])
            (const_int 9 [0x9]))
        (nil)))
(insn 298 296 299 34 (parallel [
            (set (reg:SI 0 ax [orig:142 _60 ] [142])
                (ashift:SI (reg:SI 0 ax [orig:141 _59 ] [141])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":292:39 655 {*ashlsi3_1}
     (nil))
(insn 299 298 300 34 (parallel [
            (set (reg/f:SI 0 ax [orig:143 _61 ] [143])
                (plus:SI (reg:SI 0 ax [orig:142 _60 ] [142])
                    (reg/f:SI 1 dx [orig:139 _57 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":292:39 209 {*addsi_1}
     (nil))
(insn 300 299 301 34 (set (reg:HI 0 ax [orig:144 _62 ] [144])
        (mem:HI (reg/f:SI 0 ax [orig:143 _61 ] [143]) [2 *_61+0 S2 A16])) "fs/inode.c":292:39 76 {*movhi_internal}
     (nil))
(insn 301 300 302 34 (set (reg:SI 0 ax [231])
        (zero_extend:SI (reg:HI 0 ax [orig:144 _62 ] [144]))) "fs/inode.c":292:7 144 {*zero_extendhisi2}
     (nil))
(insn 302 301 303 34 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [231])) "fs/inode.c":292:7 75 {*movsi_internal}
     (nil))
(insn 303 302 304 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":293:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 304 303 305 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "fs/inode.c":293:8 806 {*jcc}
     (nil)
 -> 334)
(note 305 304 306 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":293:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 307 306 308 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "fs/inode.c":293:16 806 {*jcc}
     (nil)
 -> 334)
(note 308 307 309 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 36 (set (reg/f:SI 0 ax [232])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":294:33 75 {*movsi_internal}
     (nil))
(insn 310 309 311 36 (set (reg:HI 0 ax [orig:145 _63 ] [145])
        (mem:HI (plus:SI (reg/f:SI 0 ax [232])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":294:33 76 {*movhi_internal}
     (nil))
(insn 311 310 312 36 (set (reg:SI 0 ax [orig:146 _64 ] [146])
        (zero_extend:SI (reg:HI 0 ax [orig:145 _63 ] [145]))) "fs/inode.c":294:18 144 {*zero_extendhisi2}
     (nil))
(insn 312 311 313 36 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":294:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 313 312 315 36 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:146 _64 ] [146])) "fs/inode.c":294:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 315 313 316 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":294:18 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 316 315 318 36 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":294:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 318 316 319 36 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [233])) "fs/inode.c":294:18 75 {*movsi_internal}
     (nil))
(insn 319 318 320 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":294:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 320 319 321 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) "fs/inode.c":294:12 806 {*jcc}
     (nil)
 -> 334)
(note 321 320 322 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 37 (set (reg/f:SI 0 ax [234])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":295:35 75 {*movsi_internal}
     (nil))
(insn 323 322 324 37 (set (reg/f:SI 1 dx [orig:147 _65 ] [147])
        (mem/f:SI (reg/f:SI 0 ax [234]) [10 bh_113->b_data+0 S4 A32])) "fs/inode.c":295:35 75 {*movsi_internal}
     (nil))
(insn 324 323 325 37 (set (reg:SI 0 ax [235])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":295:52 75 {*movsi_internal}
     (nil))
(insn 325 324 327 37 (parallel [
            (set (reg:SI 0 ax [orig:148 _66 ] [148])
                (ashiftrt:SI (reg:SI 0 ax [235])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":295:52 702 {*ashrsi3_1}
     (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [9 block+0 S4 A32])
            (const_int 9 [0x9]))
        (nil)))
(insn 327 325 328 37 (parallel [
            (set (reg:SI 0 ax [orig:150 _68 ] [150])
                (ashift:SI (reg:SI 0 ax [orig:149 _67 ] [149])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":295:45 655 {*ashlsi3_1}
     (nil))
(insn 328 327 329 37 (parallel [
            (set (reg/f:SI 0 ax [orig:151 _69 ] [151])
                (plus:SI (reg:SI 0 ax [orig:150 _68 ] [150])
                    (reg/f:SI 1 dx [orig:147 _65 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":295:45 209 {*addsi_1}
     (nil))
(insn 329 328 331 37 (set (reg:SI 1 dx [236])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/inode.c":295:58 75 {*movsi_internal}
     (nil))
(insn 331 329 332 37 (set (mem:HI (reg/f:SI 0 ax [orig:151 _69 ] [151]) [2 *_69+0 S2 A16])
        (reg:HI 1 dx [orig:152 _70 ] [152])) "fs/inode.c":295:58 76 {*movhi_internal}
     (nil))
(insn 332 331 333 37 (set (reg/f:SI 0 ax [237])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":296:24 75 {*movsi_internal}
     (nil))
(insn 333 332 334 37 (set (mem:QI (plus:SI (reg/f:SI 0 ax [237])
                (const_int 11 [0xb])) [0 bh_113->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":296:24 77 {*movqi_internal}
     (nil))
(code_label 334 333 335 38 88 (nil) [3 uses])
(note 335 334 336 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 38 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":298:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 337 336 339 38 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 bh+0 S4 A32])) "fs/inode.c":298:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 339 337 340 38 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":298:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 340 339 341 38 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":298:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 341 340 342 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":299:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 342 341 343 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 347)
            (pc))) "fs/inode.c":299:8 806 {*jcc}
     (nil)
 -> 347)
(note 343 342 344 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 436 39 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (const_int 0 [0])) "fs/inode.c":300:16 75 {*movsi_internal}
     (nil))
(jump_insn 436 344 437 39 (set (pc)
        (label_ref 415)) "fs/inode.c":300:16 807 {jump}
     (nil)
 -> 415)
(barrier 437 436 347)
(code_label 347 437 348 40 89 (nil) [1 uses])
(note 348 347 349 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 40 (set (reg/f:SI 0 ax [238])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":301:27 75 {*movsi_internal}
     (nil))
(insn 350 349 351 40 (set (reg:HI 0 ax [orig:153 _71 ] [153])
        (mem:HI (plus:SI (reg/f:SI 0 ax [238])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":301:27 76 {*movhi_internal}
     (nil))
(insn 351 350 352 40 (set (reg:SI 0 ax [orig:154 _72 ] [154])
        (zero_extend:SI (reg:HI 0 ax [orig:153 _71 ] [153]))) "fs/inode.c":301:16 144 {*zero_extendhisi2}
     (nil))
(insn 352 351 353 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":301:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 353 352 354 40 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 i+0 S4 A32])) "fs/inode.c":301:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 354 353 356 40 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:154 _72 ] [154])) "fs/inode.c":301:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 356 354 357 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7341ee510100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":301:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 357 356 359 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":301:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 359 357 360 40 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])
        (reg:SI 0 ax [239])) "fs/inode.c":301:16 75 {*movsi_internal}
     (nil))
(insn 360 359 361 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":301:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 361 360 362 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 366)
            (pc))) "fs/inode.c":301:8 806 {*jcc}
     (nil)
 -> 366)
(note 362 361 363 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 438 41 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (const_int 0 [0])) "fs/inode.c":302:16 75 {*movsi_internal}
     (nil))
(jump_insn 438 363 439 41 (set (pc)
        (label_ref 415)) "fs/inode.c":302:16 807 {jump}
     (nil)
 -> 415)
(barrier 439 438 366)
(code_label 366 439 367 42 90 (nil) [1 uses])
(note 367 366 368 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 42 (set (reg/f:SI 0 ax [240])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":303:30 75 {*movsi_internal}
     (nil))
(insn 369 368 370 42 (set (reg/f:SI 1 dx [orig:155 _73 ] [155])
        (mem/f:SI (reg/f:SI 0 ax [240]) [10 bh_121->b_data+0 S4 A32])) "fs/inode.c":303:30 75 {*movsi_internal}
     (nil))
(insn 370 369 371 42 (set (reg:SI 0 ax [orig:156 block.11_74 ] [156])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":303:46 75 {*movsi_internal}
     (nil))
(insn 371 370 372 42 (parallel [
            (set (reg:SI 0 ax [orig:157 _75 ] [157])
                (and:SI (reg:SI 0 ax [orig:156 block.11_74 ] [156])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":303:46 490 {*andsi_1}
     (nil))
(insn 372 371 373 42 (parallel [
            (set (reg:SI 0 ax [orig:158 _76 ] [158])
                (ashift:SI (reg:SI 0 ax [orig:157 _75 ] [157])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":303:39 655 {*ashlsi3_1}
     (nil))
(insn 373 372 374 42 (parallel [
            (set (reg/f:SI 0 ax [orig:159 _77 ] [159])
                (plus:SI (reg:SI 0 ax [orig:158 _76 ] [158])
                    (reg/f:SI 1 dx [orig:155 _73 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":303:39 209 {*addsi_1}
     (nil))
(insn 374 373 375 42 (set (reg:HI 0 ax [orig:160 _78 ] [160])
        (mem:HI (reg/f:SI 0 ax [orig:159 _77 ] [159]) [2 *_77+0 S2 A16])) "fs/inode.c":303:39 76 {*movhi_internal}
     (nil))
(insn 375 374 376 42 (set (reg:SI 0 ax [241])
        (zero_extend:SI (reg:HI 0 ax [orig:160 _78 ] [160]))) "fs/inode.c":303:7 144 {*zero_extendhisi2}
     (nil))
(insn 376 375 377 42 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [241])) "fs/inode.c":303:7 75 {*movsi_internal}
     (nil))
(insn 377 376 378 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [9 create+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":304:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 378 377 379 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "fs/inode.c":304:8 806 {*jcc}
     (nil)
 -> 407)
(note 379 378 380 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":304:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 381 380 382 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "fs/inode.c":304:16 806 {*jcc}
     (nil)
 -> 407)
(note 382 381 383 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 44 (set (reg/f:SI 0 ax [242])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [5 inode+0 S4 A32])) "fs/inode.c":305:33 75 {*movsi_internal}
     (nil))
(insn 384 383 385 44 (set (reg:HI 0 ax [orig:161 _79 ] [161])
        (mem:HI (plus:SI (reg/f:SI 0 ax [242])
                (const_int 44 [0x2c])) [2 inode_107(D)->i_dev+0 S2 A32])) "fs/inode.c":305:33 76 {*movhi_internal}
     (nil))
(insn 385 384 386 44 (set (reg:SI 0 ax [orig:162 _80 ] [162])
        (zero_extend:SI (reg:HI 0 ax [orig:161 _79 ] [161]))) "fs/inode.c":305:18 144 {*zero_extendhisi2}
     (nil))
(insn 386 385 387 44 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":305:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 387 386 389 44 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:162 _80 ] [162])) "fs/inode.c":305:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 389 387 390 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7341ee510c00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":305:18 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 390 389 392 44 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":305:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 392 390 393 44 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (reg:SI 0 ax [243])) "fs/inode.c":305:18 75 {*movsi_internal}
     (nil))
(insn 393 392 394 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":305:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 394 393 395 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) "fs/inode.c":305:12 806 {*jcc}
     (nil)
 -> 407)
(note 395 394 396 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 45 (set (reg/f:SI 0 ax [244])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":306:35 75 {*movsi_internal}
     (nil))
(insn 397 396 398 45 (set (reg/f:SI 1 dx [orig:163 _81 ] [163])
        (mem/f:SI (reg/f:SI 0 ax [244]) [10 bh_121->b_data+0 S4 A32])) "fs/inode.c":306:35 75 {*movsi_internal}
     (nil))
(insn 398 397 399 45 (set (reg:SI 0 ax [orig:164 block.12_82 ] [164])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 block+0 S4 A32])) "fs/inode.c":306:52 75 {*movsi_internal}
     (nil))
(insn 399 398 400 45 (parallel [
            (set (reg:SI 0 ax [orig:165 _83 ] [165])
                (and:SI (reg:SI 0 ax [orig:164 block.12_82 ] [164])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":306:52 490 {*andsi_1}
     (nil))
(insn 400 399 401 45 (parallel [
            (set (reg:SI 0 ax [orig:166 _84 ] [166])
                (ashift:SI (reg:SI 0 ax [orig:165 _83 ] [165])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":306:45 655 {*ashlsi3_1}
     (nil))
(insn 401 400 402 45 (parallel [
            (set (reg/f:SI 0 ax [orig:167 _85 ] [167])
                (plus:SI (reg:SI 0 ax [orig:166 _84 ] [166])
                    (reg/f:SI 1 dx [orig:163 _81 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":306:45 209 {*addsi_1}
     (nil))
(insn 402 401 404 45 (set (reg:SI 1 dx [245])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/inode.c":306:59 75 {*movsi_internal}
     (nil))
(insn 404 402 405 45 (set (mem:HI (reg/f:SI 0 ax [orig:167 _85 ] [167]) [2 *_85+0 S2 A16])
        (reg:HI 1 dx [orig:168 _86 ] [168])) "fs/inode.c":306:59 76 {*movhi_internal}
     (nil))
(insn 405 404 406 45 (set (reg/f:SI 0 ax [246])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [7 bh+0 S4 A32])) "fs/inode.c":307:24 75 {*movsi_internal}
     (nil))
(insn 406 405 407 45 (set (mem:QI (plus:SI (reg/f:SI 0 ax [246])
                (const_int 11 [0xb])) [0 bh_121->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/inode.c":307:24 77 {*movqi_internal}
     (nil))
(code_label 407 406 408 46 91 (nil) [3 uses])
(note 408 407 409 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 46 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":309:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 410 409 412 46 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [7 bh+0 S4 A32])) "fs/inode.c":309:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 412 410 413 46 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7341ee510200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/inode.c":309:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 413 412 414 46 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":309:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 414 413 415 46 (set (reg:SI 0 ax [orig:169 _90 ] [169])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/inode.c":310:12 75 {*movsi_internal}
     (nil))
(code_label 415 414 416 47 79 (nil) [8 uses])
(note 416 415 422 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 422 416 441 47 (use (reg/i:SI 0 ax)) "fs/inode.c":311:1 -1
     (nil))
(note 441 422 0 NOTE_INSN_DELETED)

;; Function bmap (bmap, funcdef_no=12, decl_uid=1151, cgraph_uid=13, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 14: point = 1, n_alt = -2
   Insn 11: point = 3, n_alt = -2
   Insn 10: point = 4, n_alt = 0
   Insn 9: point = 4, n_alt = 0
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 4, n_alt = 0
   Insn 5: point = 4, n_alt = 0
   Insn 21: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 21
changing reg in insn 11
changing reg in insn 14
changing reg in insn 14
changing reg in insn 18
deleting insn with uid = 11.
deleting insn with uid = 14.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns


bmap

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r7={6d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 96{82d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 21 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":315:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/inode.c":315:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 block+0 S4 A32])) "fs/inode.c":315:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":315:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_bmap") [flags 0x3]  <function_decl 0x7341ee548f00 _bmap>) [0 _bmap S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":315:12 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 19 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":315:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 10 22 2 (use (reg/i:SI 0 ax)) "fs/inode.c":316:1 -1
     (nil))
(note 22 19 0 NOTE_INSN_DELETED)

;; Function create_block (create_block, funcdef_no=13, decl_uid=1154, cgraph_uid=14, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 14: point = 1, n_alt = -2
   Insn 11: point = 3, n_alt = -2
   Insn 10: point = 4, n_alt = 0
   Insn 9: point = 4, n_alt = 0
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 4, n_alt = 0
   Insn 5: point = 4, n_alt = 0
   Insn 21: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 21
changing reg in insn 11
changing reg in insn 14
changing reg in insn 14
changing reg in insn 18
deleting insn with uid = 11.
deleting insn with uid = 14.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns


create_block

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r7={6d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 96{82d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 21 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":320:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/inode.c":320:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 block+0 S4 A32])) "fs/inode.c":320:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [5 inode+0 S4 A32])) "fs/inode.c":320:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_bmap") [flags 0x3]  <function_decl 0x7341ee548f00 _bmap>) [0 _bmap S1 A8])
            (const_int 16 [0x10]))) "fs/inode.c":320:12 823 {*call_value}
     (nil)
    (nil))
(insn 10 9 19 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/inode.c":320:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 10 22 2 (use (reg/i:SI 0 ax)) "fs/inode.c":321:1 -1
     (nil))
(note 22 19 0 NOTE_INSN_DELETED)

;; Function get_pipe_inode (get_pipe_inode, funcdef_no=14, decl_uid=1181, cgraph_uid=15, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) lBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 38:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 42:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 51: point = 0, n_alt = -1
   Insn 50: point = 0, n_alt = -2
   Insn 46: point = 1, n_alt = -2
  BB 5
   Insn 55: point = 4, n_alt = -1
   Insn 28: point = 4, n_alt = 0
   Insn 27: point = 5, n_alt = 3
   Insn 26: point = 6, n_alt = 0
  BB 3
   Insn 53: point = 7, n_alt = -1
   Insn 11: point = 7, n_alt = 0
  BB 6
   Insn 43: point = 8, n_alt = 0
   Insn 42: point = 9, n_alt = 8
   Insn 41: point = 10, n_alt = 0
   Insn 40: point = 11, n_alt = 3
   Insn 39: point = 12, n_alt = 0
   Insn 38: point = 13, n_alt = 2
   Insn 37: point = 15, n_alt = 0
   Insn 36: point = 16, n_alt = 3
   Insn 35: point = 17, n_alt = 0
   Insn 34: point = 18, n_alt = 3
   Insn 33: point = 19, n_alt = 0
  BB 4
   Insn 24: point = 20, n_alt = -1
   Insn 23: point = 20, n_alt = 0
   Insn 22: point = 21, n_alt = 0
   Insn 21: point = 23, n_alt = 0
   Insn 20: point = 24, n_alt = 1
   Insn 19: point = 25, n_alt = 0
   Insn 18: point = 26, n_alt = -2
   Insn 17: point = 27, n_alt = 0
   Insn 16: point = 27, n_alt = -2
  BB 2
   Insn 9: point = 29, n_alt = -1
   Insn 8: point = 29, n_alt = 1
   Insn 7: point = 29, n_alt = 1
   Insn 6: point = 30, n_alt = -2
   Insn 5: point = 31, n_alt = 0
   Insn 57: point = 31, n_alt = 0
 r82: [27..31]
 r83: [24..26]
 r84: [20..21]
 r85: [11..13]
 r86: [7..8] [2..4]
 r87: [0..1]
 r88: [29..30]
 r89: [24..25]
 r90: [22..23]
 r91: [5..6]
 r92: [18..19]
 r93: [16..17]
 r94: [14..15]
 r95: [11..12]
 r96: [9..10]
Compressing live ranges: from 32 to 26 - 81%
Ranges after the compression:
 r82: [24..25]
 r83: [22..23]
 r84: [18..19]
 r85: [10..11]
 r86: [6..7] [2..3]
 r87: [0..1]
 r88: [24..25]
 r89: [22..23]
 r90: [20..21]
 r91: [4..5]
 r92: [16..17]
 r93: [14..15]
 r94: [12..13]
 r95: [10..11]
 r96: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 57
changing reg in insn 16
changing reg in insn 18
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 38
changing reg in insn 40
changing reg in insn 43
changing reg in insn 28
changing reg in insn 11
changing reg in insn 46
changing reg in insn 46
changing reg in insn 50
changing reg in insn 6
changing reg in insn 7
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 27
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
deleting insn with uid = 6.
deleting insn with uid = 16.
deleting insn with uid = 18.
deleting insn with uid = 46.
deleting insn with uid = 50.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 17.


get_pipe_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,12u} r1={5d,2u} r2={3d} r3={1d,1u} r7={1d,20u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={5d,2u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 196{159d,37u,0e} in 30{28 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 57 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 57 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 57 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_empty_inode") [flags 0x3]  <function_decl 0x7341ee515300 get_empty_inode>) [0 get_empty_inode S1 A8])
            (const_int 0 [0]))) "fs/inode.c":327:19 823 {*call_value}
     (nil)
    (nil))
(insn 7 5 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])
        (reg:SI 0 ax [88])) "fs/inode.c":327:19 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/inode.c":327:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "fs/inode.c":327:8 806 {*jcc}
     (nil)
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 53 3 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (const_int 0 [0])) "fs/inode.c":328:16 75 {*movsi_internal}
     (nil))
(jump_insn 53 11 54 3 (set (pc)
        (label_ref 44)) "fs/inode.c":328:16 807 {jump}
     (nil)
 -> 44)
(barrier 54 53 14)
(code_label 14 54 15 4 97 (nil) [1 uses])
(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 15 19 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x7341ee538900 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "fs/inode.c":329:27 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 19 17 20 4 (set (reg/f:SI 1 dx [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":329:25 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (mem:SI (plus:SI (reg/f:SI 1 dx [89])
                (const_int 4 [0x4])) [3 inode_8->i_size+0 S4 A32])
        (reg:SI 0 ax [orig:83 _1 ] [83])) "fs/inode.c":329:25 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":329:16 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 0 ax [90])
                (const_int 4 [0x4])) [3 inode_8->i_size+0 S4 A32])) "fs/inode.c":329:16 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/inode.c":329:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/inode.c":329:8 806 {*jcc}
     (nil)
 -> 31)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":330:24 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (mem:HI (plus:SI (reg/f:SI 0 ax [91])
                (const_int 48 [0x30])) [2 inode_8->i_count+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":330:24 76 {*movhi_internal}
     (nil))
(insn 28 27 55 5 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (const_int 0 [0])) "fs/inode.c":331:16 75 {*movsi_internal}
     (nil))
(jump_insn 55 28 56 5 (set (pc)
        (label_ref 44)) "fs/inode.c":331:16 807 {jump}
     (nil)
 -> 44)
(barrier 56 55 31)
(code_label 31 56 32 6 99 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":333:20 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (mem:HI (plus:SI (reg/f:SI 0 ax [92])
                (const_int 48 [0x30])) [2 inode_8->i_count+0 S2 A32])
        (const_int 2 [0x2])) "fs/inode.c":333:20 76 {*movhi_internal}
     (nil))
(insn 35 34 36 6 (set (reg/f:SI 0 ax [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":334:43 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (mem:HI (plus:SI (reg/f:SI 0 ax [93])
                (const_int 16 [0x10])) [2 inode_8->i_zone[1]+0 S2 A32])
        (const_int 0 [0])) "fs/inode.c":334:43 76 {*movhi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:SI 0 ax [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":334:25 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:HI 1 dx [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [94])
                (const_int 16 [0x10])) [2 inode_8->i_zone[1]+0 S2 A32])) "fs/inode.c":334:25 76 {*movhi_internal}
     (nil))
(insn 39 38 40 6 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":334:23 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (set (mem:HI (plus:SI (reg/f:SI 0 ax [95])
                (const_int 14 [0xe])) [2 inode_8->i_zone[0]+0 S2 A16])
        (reg:HI 1 dx [orig:85 _3 ] [85])) "fs/inode.c":334:23 76 {*movhi_internal}
     (nil))
(insn 41 40 42 6 (set (reg/f:SI 0 ax [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":335:19 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (mem:QI (plus:SI (reg/f:SI 0 ax [96])
                (const_int 52 [0x34])) [0 inode_8->i_pipe+0 S1 A32])
        (const_int 1 [0x1])) "fs/inode.c":335:19 77 {*movqi_internal}
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 inode+0 S4 A32])) "fs/inode.c":336:12 75 {*movsi_internal}
     (nil))
(code_label 44 43 45 7 98 (nil) [2 uses])
(note 45 44 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 45 58 7 (use (reg/i:SI 0 ax)) "fs/inode.c":337:1 -1
     (nil))
(note 58 51 0 NOTE_INSN_DELETED)
