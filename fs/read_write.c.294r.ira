
;; Function sys_read (sys_read, funcdef_no=1, decl_uid=1370, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 220.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 25 n_edges 36 count 25 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 6 }
;; 5 succs { 24 }
;; 6 succs { 7 8 }
;; 7 succs { 24 }
;; 8 succs { 9 12 }
;; 9 succs { 10 11 }
;; 10 succs { 24 }
;; 11 succs { 24 }
;; 12 succs { 13 14 }
;; 13 succs { 24 }
;; 14 succs { 15 16 }
;; 15 succs { 24 }
;; 16 succs { 18 17 }
;; 17 succs { 18 23 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 24 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a50 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r117,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r116,l0) costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 CLOBBERED_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 TLS_GOTBASE_REGS:8000 GENERAL_REGS:8000 MEM:34000
  a2(r82,l0) costs: AREG:12000 DREG:12000 CREG:12000 BREG:12000 SIREG:12000 DIREG:12000 AD_REGS:12000 CLOBBERED_REGS:12000 Q_REGS:12000 NON_Q_REGS:12000 TLS_GOTBASE_REGS:12000 GENERAL_REGS:12000 MEM:54000
  a3(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a9(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a15(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a17(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a19(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a21(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a25(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a34(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a43(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a48(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a49(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a51(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a57(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a58(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 202(l0): point = 0
   Insn 201(l0): point = 2
   Insn 197(l0): point = 4
   Insn 194(l0): point = 7
   Insn 193(l0): point = 9
   Insn 192(l0): point = 11
   Insn 191(l0): point = 13
   Insn 190(l0): point = 15
   Insn 189(l0): point = 17
   Insn 188(l0): point = 19
   Insn 187(l0): point = 21
   Insn 186(l0): point = 23
   Insn 185(l0): point = 25
   Insn 184(l0): point = 27
   Insn 218(l0): point = 30
   Insn 179(l0): point = 32
   Insn 178(l0): point = 34
   Insn 177(l0): point = 36
   Insn 176(l0): point = 38
   Insn 175(l0): point = 40
   Insn 174(l0): point = 42
   Insn 173(l0): point = 44
   Insn 172(l0): point = 46
   Insn 216(l0): point = 49
   Insn 167(l0): point = 51
   Insn 165(l0): point = 54
   Insn 164(l0): point = 56
   Insn 159(l0): point = 59
   Insn 158(l0): point = 61
   Insn 157(l0): point = 64
   Insn 156(l0): point = 66
   Insn 155(l0): point = 68
   Insn 154(l0): point = 70
   Insn 153(l0): point = 72
   Insn 151(l0): point = 75
   Insn 150(l0): point = 77
   Insn 149(l0): point = 79
   Insn 148(l0): point = 81
   Insn 147(l0): point = 83
   Insn 146(l0): point = 85
   Insn 145(l0): point = 87
   Insn 144(l0): point = 89
   Insn 143(l0): point = 91
   Insn 140(l0): point = 94
   Insn 139(l0): point = 96
   Insn 138(l0): point = 98
   Insn 137(l0): point = 100
   Insn 136(l0): point = 102
   Insn 135(l0): point = 104
   Insn 133(l0): point = 107
   Insn 132(l0): point = 109
   Insn 131(l0): point = 111
   Insn 130(l0): point = 113
   Insn 129(l0): point = 115
   Insn 128(l0): point = 117
   Insn 214(l0): point = 120
   Insn 123(l0): point = 122
   Insn 122(l0): point = 124
   Insn 121(l0): point = 126
   Insn 120(l0): point = 128
   Insn 119(l0): point = 130
   Insn 118(l0): point = 132
   Insn 117(l0): point = 134
   Insn 116(l0): point = 136
   Insn 115(l0): point = 138
   Insn 114(l0): point = 140
   Insn 113(l0): point = 142
   Insn 112(l0): point = 144
   Insn 111(l0): point = 146
   Insn 109(l0): point = 149
   Insn 108(l0): point = 151
   Insn 107(l0): point = 153
   Insn 106(l0): point = 155
   Insn 105(l0): point = 157
   Insn 104(l0): point = 159
   Insn 212(l0): point = 162
   Insn 99(l0): point = 164
   Insn 98(l0): point = 166
   Insn 97(l0): point = 168
   Insn 96(l0): point = 170
   Insn 95(l0): point = 172
   Insn 94(l0): point = 174
   Insn 93(l0): point = 176
   Insn 92(l0): point = 178
   Insn 91(l0): point = 180
   Insn 90(l0): point = 182
   Insn 89(l0): point = 184
   Insn 88(l0): point = 186
   Insn 87(l0): point = 188
   Insn 86(l0): point = 190
   Insn 85(l0): point = 192
   Insn 83(l0): point = 195
   Insn 82(l0): point = 197
   Insn 81(l0): point = 199
   Insn 80(l0): point = 201
   Insn 79(l0): point = 203
   Insn 78(l0): point = 205
   Insn 210(l0): point = 208
   Insn 71(l0): point = 210
   Insn 208(l0): point = 213
   Insn 66(l0): point = 215
   Insn 65(l0): point = 217
   Insn 64(l0): point = 219
   Insn 63(l0): point = 221
   Insn 62(l0): point = 223
   Insn 61(l0): point = 225
   Insn 60(l0): point = 227
   Insn 59(l0): point = 229
   Insn 57(l0): point = 232
   Insn 56(l0): point = 234
   Insn 55(l0): point = 236
   Insn 54(l0): point = 238
   Insn 53(l0): point = 240
   Insn 52(l0): point = 242
   Insn 50(l0): point = 245
   Insn 49(l0): point = 247
   Insn 48(l0): point = 249
   Insn 47(l0): point = 251
   Insn 46(l0): point = 253
   Insn 45(l0): point = 255
   Insn 44(l0): point = 257
   Insn 43(l0): point = 259
   Insn 42(l0): point = 261
   Insn 41(l0): point = 263
   Insn 40(l0): point = 265
   Insn 39(l0): point = 267
   Insn 38(l0): point = 269
   Insn 206(l0): point = 272
   Insn 33(l0): point = 274
   Insn 31(l0): point = 277
   Insn 30(l0): point = 279
   Insn 204(l0): point = 282
   Insn 25(l0): point = 284
   Insn 22(l0): point = 287
   Insn 21(l0): point = 289
   Insn 20(l0): point = 291
   Insn 19(l0): point = 293
   Insn 18(l0): point = 295
   Insn 17(l0): point = 297
   Insn 16(l0): point = 299
   Insn 15(l0): point = 301
   Insn 13(l0): point = 304
   Insn 12(l0): point = 306
   Insn 8(l0): point = 309
   Insn 7(l0): point = 311
   Insn 220(l0): point = 313
 a0(r117): [3..4]
 a1(r116): [282..284] [272..274] [213..215] [208..210] [162..164] [120..122] [49..51] [30..32] [5..7]
 a2(r82): [287..313] [277..281] [222..271] [171..207] [129..161] [54..119] [39..48] [14..29]
 a3(r140): [16..17]
 a4(r115): [20..23]
 a5(r114): [24..25]
 a6(r139): [26..27]
 a7(r113): [60..62]
 a8(r112): [62..64]
 a9(r110): [63..70]
 a10(r111): [65..66]
 a11(r138): [67..68]
 a12(r137): [71..72]
 a13(r109): [78..79]
 a14(r108): [78..83]
 a15(r136): [80..81]
 a16(r107): [84..85]
 a17(r135): [86..87]
 a18(r106): [86..89]
 a19(r134): [90..91]
 a20(r105): [97..98]
 a21(r104): [99..100]
 a22(r103): [101..102]
 a23(r133): [103..104]
 a24(r102): [110..111]
 a25(r101): [112..113]
 a26(r100): [114..115]
 a27(r132): [116..117]
 a28(r99): [131..138]
 a29(r97): [133..144]
 a30(r98): [139..140]
 a31(r131): [141..142]
 a32(r130): [145..146]
 a33(r96): [152..153]
 a34(r95): [154..155]
 a35(r94): [156..157]
 a36(r129): [158..159]
 a37(r93): [175..184]
 a38(r91): [181..190]
 a39(r92): [185..186]
 a40(r128): [187..188]
 a41(r127): [191..192]
 a42(r90): [198..199]
 a43(r89): [200..201]
 a44(r88): [202..203]
 a45(r126): [204..205]
 a46(r87): [235..236]
 a47(r86): [237..238]
 a48(r85): [239..240]
 a49(r125): [241..242]
 a50(r84): [248..249]
 a51(r124): [250..251]
 a52(r123): [254..255]
 a53(r122): [256..257]
 a54(r121): [292..293]
 a55(r83): [294..299]
 a56(r119): [294..295]
 a57(r120): [296..297]
 a58(r118): [300..301]
Compressing live ranges: from 316 to 124 - 39%
Ranges after the compression:
 a0(r117): [0..1]
 a1(r116): [114..115] [110..111] [90..93] [72..73] [54..55] [16..17] [12..13] [2..3]
 a2(r82): [116..123] [112..113] [94..109] [74..89] [56..71] [18..53] [14..15] [4..11]
 a3(r140): [4..5]
 a4(r115): [6..7]
 a5(r114): [8..9]
 a6(r139): [10..11]
 a7(r113): [18..19]
 a8(r112): [19..21]
 a9(r110): [20..25]
 a10(r111): [22..23]
 a11(r138): [24..25]
 a12(r137): [26..27]
 a13(r109): [28..29]
 a14(r108): [28..31]
 a15(r136): [30..31]
 a16(r107): [32..33]
 a17(r135): [34..35]
 a18(r106): [34..35]
 a19(r134): [36..37]
 a20(r105): [38..39]
 a21(r104): [40..41]
 a22(r103): [42..43]
 a23(r133): [44..45]
 a24(r102): [46..47]
 a25(r101): [48..49]
 a26(r100): [50..51]
 a27(r132): [52..53]
 a28(r99): [56..57]
 a29(r97): [56..61]
 a30(r98): [58..59]
 a31(r131): [60..61]
 a32(r130): [62..63]
 a33(r96): [64..65]
 a34(r95): [66..67]
 a35(r94): [68..69]
 a36(r129): [70..71]
 a37(r93): [74..75]
 a38(r91): [74..79]
 a39(r92): [76..77]
 a40(r128): [78..79]
 a41(r127): [80..81]
 a42(r90): [82..83]
 a43(r89): [84..85]
 a44(r88): [86..87]
 a45(r126): [88..89]
 a46(r87): [94..95]
 a47(r86): [96..97]
 a48(r85): [98..99]
 a49(r125): [100..101]
 a50(r84): [102..103]
 a51(r124): [104..105]
 a52(r123): [106..107]
 a53(r122): [108..109]
 a54(r121): [116..117]
 a55(r83): [118..121]
 a56(r119): [118..119]
 a57(r120): [120..121]
 a58(r118): [122..123]
  pref0:a0(r117)<-hr0@1500
  pref1:a1(r116)<-hr0@6000
  pref2:a2(r82)<-hr3@7500
  regions=1, blocks=25, points=124
    allocnos=59 (big 0), copies=0, conflicts=0, ranges=73
Disposition:
    2:r82  l0     3   55:r83  l0     0   50:r84  l0     0   48:r85  l0     0
   47:r86  l0     0   46:r87  l0     0   44:r88  l0     0   43:r89  l0     0
   42:r90  l0     0   38:r91  l0     1   39:r92  l0     0   37:r93  l0     0
   35:r94  l0     0   34:r95  l0     0   33:r96  l0     0   29:r97  l0     1
   30:r98  l0     0   28:r99  l0     0   26:r100 l0     0   25:r101 l0     0
   24:r102 l0     0   22:r103 l0     0   21:r104 l0     0   20:r105 l0     0
   18:r106 l0     1   16:r107 l0     0   14:r108 l0     1   13:r109 l0     0
    9:r110 l0     1   10:r111 l0     0    8:r112 l0     2    7:r113 l0     0
    5:r114 l0     0    4:r115 l0     0    1:r116 l0     0    0:r117 l0     0
   58:r118 l0     0   56:r119 l0     1   57:r120 l0     1   54:r121 l0     0
   53:r122 l0     0   52:r123 l0     0   51:r124 l0     0   49:r125 l0     0
   45:r126 l0     0   41:r127 l0     0   40:r128 l0     0   36:r129 l0     0
   32:r130 l0     0   31:r131 l0     0   27:r132 l0     0   23:r133 l0     0
   19:r134 l0     0   17:r135 l0     0   15:r136 l0     0   12:r137 l0     0
   11:r138 l0     0    6:r139 l0     0    3:r140 l0     0
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,6u} r1={7d} r2={7d} r3={6d,6u} r6={1d,24u} r7={31d,70u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,40u,2e} r17={39d,12u} r18={6d} r19={1d,46u,2e} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,8u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u,1e} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={9d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 833{558d,270u,5e} in 146{140 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 220 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 220 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 220 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/read_write.c":25:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":25:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 23)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 9 13 3 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":25:23 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":25:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 23)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 118)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x78f44172e120 current>)
                        ] UNSPEC_GOT))) [9  S4 A8])) "fs/read_write.c":25:55 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 83 [ current.0_1 ])
        (mem/f/c:SI (reg/f:SI 118) [8 current+0 S4 A32])) "fs/read_write.c":25:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 17 16 18 4 (set (reg:SI 120)
        (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])) "fs/read_write.c":25:46 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 119)
                (plus:SI (reg:SI 120)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":25:46 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 19 18 20 4 (set (reg/f:SI 121)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 119)
                    (const_int 4 [0x4]))
                (reg/f:SI 83 [ current.0_1 ])) [5 current.0_1->filp[fd_39(D)]+0 S4 A32])) "fs/read_write.c":25:46 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_DEAD (reg/f:SI 83 [ current.0_1 ])
            (nil))))
(insn 20 19 21 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
        (reg/f:SI 121)) "fs/read_write.c":25:46 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":25:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/read_write.c":25:36 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
(code_label 23 22 24 5 2 (nil) [2 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 204 5 (set (reg:SI 116 [ iftmp.1_36 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":26:16 75 {*movsi_internal}
     (nil))
(jump_insn 204 25 205 5 (set (pc)
        (label_ref 195)) "fs/read_write.c":26:16 807 {jump}
     (nil)
 -> 195)
(barrier 205 204 28)
(code_label 28 205 29 6 3 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":27:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "fs/read_write.c":27:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 36)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 206 7 (set (reg:SI 116 [ iftmp.1_36 ])
        (const_int 0 [0])) "fs/read_write.c":28:16 75 {*movsi_internal}
     (nil))
(jump_insn 206 33 207 7 (set (pc)
        (label_ref 195)) "fs/read_write.c":28:16 807 {jump}
     (nil)
 -> 195)
(barrier 207 206 36)
(code_label 36 207 37 8 5 (nil) [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":29:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 39 38 40 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":29:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 40 39 41 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":29:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 41 40 42 8 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":29:5 75 {*movsi_internal}
     (nil))
(call_insn 42 41 43 8 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x78f441738500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "fs/read_write.c":29:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 43 42 44 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":29:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 44 43 45 8 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":30:11 75 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg/f:SI 123)
        (mem/f:SI (plus:SI (reg/f:SI 122)
                (const_int 8 [0x8])) [3 file_42->f_inode+0 S4 A32])) "fs/read_write.c":30:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 46 45 47 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])
        (reg/f:SI 123)) "fs/read_write.c":30:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 47 46 48 8 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":31:14 75 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 124)
                (const_int 52 [0x34])) [0 inode_45->i_pipe+0 S1 A32])) "fs/read_write.c":31:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/read_write.c":31:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "fs/read_write.c":31:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 76)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":32:21 75 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:HI 85 [ _3 ])
        (mem:HI (reg/f:SI 125) [2 file_42->f_mode+0 S2 A32])) "fs/read_write.c":32:21 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 54 53 55 9 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/read_write.c":32:30 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 55 54 56 9 (parallel [
            (set (reg:SI 87 [ _5 ])
                (and:SI (reg:SI 86 [ _4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":32:30 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _5 ])
            (const_int 0 [0]))) "fs/read_write.c":32:66 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/read_write.c":32:66 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 69)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":32:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 60 59 61 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":32:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 61 60 62 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":32:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 63 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":32:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 63 62 64 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":32:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 64 63 65 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("read_pipe") [flags 0x41]  <function_decl 0x78f441738d00 read_pipe>) [0 read_pipe S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":32:37 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 65 64 66 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":32:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 66 65 208 10 (set (reg:SI 116 [ iftmp.1_36 ])
        (reg:SI 0 ax)) "fs/read_write.c":32:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 208 66 209 10 (set (pc)
        (label_ref 195)) "fs/read_write.c":32:66 807 {jump}
     (nil)
 -> 195)
(barrier 209 208 69)
(code_label 69 209 70 11 7 (nil) [1 uses])
(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 210 11 (set (reg:SI 116 [ iftmp.1_36 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/read_write.c":32:66 75 {*movsi_internal}
     (nil))
(jump_insn 210 71 211 11 (set (pc)
        (label_ref 195)) "fs/read_write.c":32:66 807 {jump}
     (nil)
 -> 195)
(barrier 211 210 76)
(code_label 76 211 77 12 6 (nil) [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 12 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":33:9 75 {*movsi_internal}
     (nil))
(insn 79 78 80 12 (set (reg:HI 88 [ _6 ])
        (mem:HI (reg/f:SI 126) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":33:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 80 79 81 12 (set (reg:SI 89 [ _7 ])
        (zero_extend:SI (reg:HI 88 [ _6 ]))) "fs/read_write.c":33:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(insn 81 80 82 12 (parallel [
            (set (reg:SI 90 [ _8 ])
                (and:SI (reg:SI 89 [ _7 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":33:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _8 ])
            (const_int 8192 [0x2000]))) "fs/read_write.c":33:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(jump_insn 83 82 84 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "fs/read_write.c":33:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 102)
(note 84 83 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 13 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":34:16 75 {*movsi_internal}
     (nil))
(insn 86 85 87 13 (parallel [
            (set (reg/f:SI 91 [ _9 ])
                (plus:SI (reg/f:SI 127)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":34:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 87 86 88 13 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":34:43 75 {*movsi_internal}
     (nil))
(insn 88 87 89 13 (set (reg:HI 92 [ _10 ])
        (mem:HI (plus:SI (reg/f:SI 128)
                (const_int 14 [0xe])) [2 inode_45->i_zone[0]+0 S2 A16])) "fs/read_write.c":34:43 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))
(insn 89 88 90 13 (set (reg:SI 93 [ _11 ])
        (zero_extend:SI (reg:HI 92 [ _10 ]))) "fs/read_write.c":34:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (nil)))
(insn 90 89 91 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":34:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 91 90 92 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 91 [ _9 ])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 92 91 93 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 93 92 94 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 94 93 95 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 93 [ _11 ])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 95 94 96 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 0 [0])) "fs/read_write.c":34:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 96 95 97 13 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":34:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 97 96 98 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_char") [flags 0x41]  <function_decl 0x78f441738e00 rw_char>) [0 rw_char S1 A8])
            (const_int 32 [0x20]))) "fs/read_write.c":34:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 98 97 99 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":34:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 99 98 212 13 (set (reg:SI 116 [ iftmp.1_36 ])
        (reg:SI 0 ax)) "fs/read_write.c":34:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 212 99 213 13 (set (pc)
        (label_ref 195)) "fs/read_write.c":34:16 807 {jump}
     (nil)
 -> 195)
(barrier 213 212 102)
(code_label 102 213 103 14 9 (nil) [1 uses])
(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 14 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":35:9 75 {*movsi_internal}
     (nil))
(insn 105 104 106 14 (set (reg:HI 94 [ _12 ])
        (mem:HI (reg/f:SI 129) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":35:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 106 105 107 14 (set (reg:SI 95 [ _13 ])
        (zero_extend:SI (reg:HI 94 [ _12 ]))) "fs/read_write.c":35:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
        (nil)))
(insn 107 106 108 14 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 95 [ _13 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":35:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (const_int 24576 [0x6000]))) "fs/read_write.c":35:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 109 108 110 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "fs/read_write.c":35:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 126)
(note 110 109 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 15 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":37:48 75 {*movsi_internal}
     (nil))
(insn 112 111 113 15 (parallel [
            (set (reg/f:SI 97 [ _15 ])
                (plus:SI (reg/f:SI 130)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":37:48 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 113 112 114 15 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":36:40 75 {*movsi_internal}
     (nil))
(insn 114 113 115 15 (set (reg:HI 98 [ _16 ])
        (mem:HI (plus:SI (reg/f:SI 131)
                (const_int 14 [0xe])) [2 inode_45->i_zone[0]+0 S2 A16])) "fs/read_write.c":36:40 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 115 114 116 15 (set (reg:SI 99 [ _17 ])
        (zero_extend:SI (reg:HI 98 [ _16 ]))) "fs/read_write.c":36:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 98 [ _16 ])
        (nil)))
(insn 116 115 117 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 117 116 118 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 118 117 119 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 97 [ _15 ])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 119 118 120 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 99 [ _17 ])) "fs/read_write.c":36:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 120 119 121 15 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":36:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 121 120 122 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("block_read") [flags 0x41]  <function_decl 0x78f441738a00 block_read>) [0 block_read S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":36:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 122 121 123 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":36:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 123 122 214 15 (set (reg:SI 116 [ iftmp.1_36 ])
        (reg:SI 0 ax)) "fs/read_write.c":36:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 214 123 215 15 (set (pc)
        (label_ref 195)) "fs/read_write.c":36:16 807 {jump}
     (nil)
 -> 195)
(barrier 215 214 126)
(code_label 126 215 127 16 10 (nil) [1 uses])
(note 127 126 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 16 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":38:9 75 {*movsi_internal}
     (nil))
(insn 129 128 130 16 (set (reg:HI 100 [ _18 ])
        (mem:HI (reg/f:SI 132) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":38:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 130 129 131 16 (set (reg:SI 101 [ _19 ])
        (zero_extend:SI (reg:HI 100 [ _18 ]))) "fs/read_write.c":38:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
        (nil)))
(insn 131 130 132 16 (parallel [
            (set (reg:SI 102 [ _20 ])
                (and:SI (reg:SI 101 [ _19 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":38:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 133 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ _20 ])
            (const_int 16384 [0x4000]))) "fs/read_write.c":38:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (nil)))
(jump_insn 133 132 134 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) "fs/read_write.c":38:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 141)
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 17 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":38:35 75 {*movsi_internal}
     (nil))
(insn 136 135 137 17 (set (reg:HI 103 [ _21 ])
        (mem:HI (reg/f:SI 133) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":38:35 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 137 136 138 17 (set (reg:SI 104 [ _22 ])
        (zero_extend:SI (reg:HI 103 [ _21 ]))) "fs/read_write.c":38:35 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 103 [ _21 ])
        (nil)))
(insn 138 137 139 17 (parallel [
            (set (reg:SI 105 [ _23 ])
                (and:SI (reg:SI 104 [ _22 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":38:35 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ _23 ])
            (const_int 32768 [0x8000]))) "fs/read_write.c":38:32 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
        (nil)))
(jump_insn 140 139 141 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "fs/read_write.c":38:32 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 182)
(code_label 141 140 142 18 11 (nil) [1 uses])
(note 142 141 143 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 18 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":39:25 75 {*movsi_internal}
     (nil))
(insn 144 143 145 18 (set (reg:SI 106 [ _24 ])
        (mem:SI (plus:SI (reg/f:SI 134)
                (const_int 12 [0xc])) [4 file_42->f_pos+0 S4 A32])) "fs/read_write.c":39:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 145 144 146 18 (set (reg:SI 135)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":39:19 75 {*movsi_internal}
     (nil))
(insn 146 145 147 18 (parallel [
            (set (reg:SI 107 [ _25 ])
                (plus:SI (reg:SI 106 [ _24 ])
                    (reg:SI 135)))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":39:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_DEAD (reg:SI 106 [ _24 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 106 [ _24 ])
                        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 8 [0x8])) [6 count+0 S4 A32]))
                    (nil))))))
(insn 147 146 148 18 (set (reg:SI 108 [ _26 ])
        (reg:SI 107 [ _25 ])) "fs/read_write.c":39:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ _25 ])
        (nil)))
(insn 148 147 149 18 (set (reg/f:SI 136)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":39:40 75 {*movsi_internal}
     (nil))
(insn 149 148 150 18 (set (reg:SI 109 [ _27 ])
        (mem:SI (plus:SI (reg/f:SI 136)
                (const_int 4 [0x4])) [4 inode_45->i_size+0 S4 A32])) "fs/read_write.c":39:40 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))
(insn 150 149 151 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ _26 ])
            (reg:SI 109 [ _27 ]))) "fs/read_write.c":39:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ _27 ])
        (expr_list:REG_DEAD (reg:SI 108 [ _26 ])
            (nil))))
(jump_insn 151 150 152 18 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "fs/read_write.c":39:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 160)
(note 152 151 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 19 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":40:26 75 {*movsi_internal}
     (nil))
(insn 154 153 155 19 (set (reg:SI 110 [ _28 ])
        (mem:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [4 inode_45->i_size+0 S4 A32])) "fs/read_write.c":40:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))
(insn 155 154 156 19 (set (reg/f:SI 138)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":40:41 75 {*movsi_internal}
     (nil))
(insn 156 155 157 19 (set (reg:SI 111 [ _29 ])
        (mem:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [4 file_42->f_pos+0 S4 A32])) "fs/read_write.c":40:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))
(insn 157 156 158 19 (set (reg:SI 112 [ _30 ])
        (reg:SI 111 [ _29 ])) "fs/read_write.c":40:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111 [ _29 ])
        (nil)))
(insn 158 157 159 19 (parallel [
            (set (reg:SI 113 [ _31 ])
                (minus:SI (reg:SI 110 [ _28 ])
                    (reg:SI 112 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":40:35 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 112 [ _30 ])
        (expr_list:REG_DEAD (reg:SI 110 [ _28 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 159 158 160 19 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])
        (reg:SI 113 [ _31 ])) "fs/read_write.c":40:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ _31 ])
        (nil)))
(code_label 160 159 161 20 13 (nil) [1 uses])
(note 161 160 164 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 164 161 165 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":41:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 165 164 166 20 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "fs/read_write.c":41:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 170)
(note 166 165 167 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 216 21 (set (reg:SI 116 [ iftmp.1_36 ])
        (const_int 0 [0])) "fs/read_write.c":42:20 75 {*movsi_internal}
     (nil))
(jump_insn 216 167 217 21 (set (pc)
        (label_ref 195)) "fs/read_write.c":42:20 807 {jump}
     (nil)
 -> 195)
(barrier 217 216 170)
(code_label 170 217 171 22 14 (nil) [1 uses])
(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 22 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 173 172 174 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 174 173 175 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 175 174 176 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":43:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 176 175 177 22 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":43:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 177 176 178 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("file_read") [flags 0x41]  <function_decl 0x78f441738f00 file_read>) [0 file_read S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":43:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 178 177 179 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":43:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 179 178 218 22 (set (reg:SI 116 [ iftmp.1_36 ])
        (reg:SI 0 ax)) "fs/read_write.c":43:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 218 179 219 22 (set (pc)
        (label_ref 195)) "fs/read_write.c":43:16 807 {jump}
     (nil)
 -> 195)
(barrier 219 218 182)
(code_label 182 219 183 23 12 (nil) [1 uses])
(note 183 182 184 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 23 (set (reg/f:SI 139)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":45:49 75 {*movsi_internal}
     (nil))
(insn 185 184 186 23 (set (reg:HI 114 [ _32 ])
        (mem:HI (reg/f:SI 139) [2 inode_45->i_mode+0 S2 A32])) "fs/read_write.c":45:49 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (nil)))
(insn 186 185 187 23 (set (reg:SI 115 [ _33 ])
        (zero_extend:SI (reg:HI 114 [ _32 ]))) "fs/read_write.c":45:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 114 [ _32 ])
        (nil)))
(insn 187 186 188 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":45:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 188 187 189 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 115 [ _33 ])) "fs/read_write.c":45:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 115 [ _33 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 189 188 190 23 (set (reg/f:SI 140)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x78f44172e2d0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/read_write.c":45:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x78f44172e2d0 *.LC0>)
        (nil)))
(insn 190 189 191 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 140)) "fs/read_write.c":45:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 191 190 192 23 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":45:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 192 191 193 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x78f441738900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":45:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 193 192 194 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":45:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 194 193 195 23 (set (reg:SI 116 [ iftmp.1_36 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":46:12 75 {*movsi_internal}
     (nil))
(code_label 195 194 196 24 4 (nil) [8 uses])
(note 196 195 197 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 201 24 (set (reg:SI 117 [ <retval> ])
        (reg:SI 116 [ iftmp.1_36 ])) "fs/read_write.c":47:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116 [ iftmp.1_36 ])
        (nil)))
(insn 201 197 202 24 (set (reg/i:SI 0 ax)
        (reg:SI 117 [ <retval> ])) "fs/read_write.c":47:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 117 [ <retval> ])
        (nil)))
(insn 202 201 0 24 (use (reg/i:SI 0 ax)) "fs/read_write.c":47:1 -1
     (nil))

;; Function sys_lseek (sys_lseek, funcdef_no=2, decl_uid=1377, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 176.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 27 n_edges 39 count 27 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;; 2 succs { 7 3 }
;; 3 succs { 7 4 }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 26 }
;; 8 succs { 9 10 }
;; 9 succs { 26 }
;; 10 succs { 11 21 }
;; 11 succs { 12 24 }
;; 12 succs { 13 15 }
;; 13 succs { 14 18 }
;; 14 succs { 24 }
;; 15 succs { 16 17 }
;; 16 succs { 26 }
;; 17 succs { 25 }
;; 18 succs { 19 20 }
;; 19 succs { 26 }
;; 20 succs { 25 }
;; 21 succs { 22 23 }
;; 22 succs { 26 }
;; 23 succs { 25 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a21 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a2(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a8(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a14(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a22(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a25(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a29(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 153(l0): point = 0
   Insn 152(l0): point = 2
   Insn 148(l0): point = 4
   Insn 145(l0): point = 7
   Insn 144(l0): point = 9
   Insn 174(l0): point = 12
   Insn 139(l0): point = 14
   Insn 172(l0): point = 17
   Insn 134(l0): point = 19
   Insn 133(l0): point = 21
   Insn 132(l0): point = 23
   Insn 170(l0): point = 26
   Insn 127(l0): point = 28
   Insn 125(l0): point = 31
   Insn 124(l0): point = 33
   Insn 121(l0): point = 35
   Insn 120(l0): point = 37
   Insn 119(l0): point = 39
   Insn 118(l0): point = 41
   Insn 117(l0): point = 43
   Insn 116(l0): point = 45
   Insn 168(l0): point = 48
   Insn 111(l0): point = 50
   Insn 110(l0): point = 52
   Insn 109(l0): point = 54
   Insn 108(l0): point = 56
   Insn 107(l0): point = 58
   Insn 106(l0): point = 60
   Insn 166(l0): point = 63
   Insn 101(l0): point = 65
   Insn 99(l0): point = 68
   Insn 98(l0): point = 70
   Insn 95(l0): point = 72
   Insn 94(l0): point = 74
   Insn 93(l0): point = 76
   Insn 92(l0): point = 78
   Insn 164(l0): point = 81
   Insn 87(l0): point = 83
   Insn 86(l0): point = 85
   Insn 85(l0): point = 87
   Insn 162(l0): point = 90
   Insn 80(l0): point = 92
   Insn 78(l0): point = 95
   Insn 77(l0): point = 97
   Insn 160(l0): point = 100
   Insn 69(l0): point = 103
   Insn 68(l0): point = 105
   Insn 66(l0): point = 108
   Insn 65(l0): point = 110
   Insn 63(l0): point = 113
   Insn 62(l0): point = 115
   Insn 58(l0): point = 118
   Insn 57(l0): point = 120
   Insn 157(l0): point = 123
   Insn 52(l0): point = 125
   Insn 50(l0): point = 128
   Insn 49(l0): point = 130
   Insn 48(l0): point = 132
   Insn 47(l0): point = 134
   Insn 46(l0): point = 136
   Insn 155(l0): point = 139
   Insn 41(l0): point = 141
   Insn 38(l0): point = 144
   Insn 37(l0): point = 146
   Insn 34(l0): point = 148
   Insn 33(l0): point = 150
   Insn 32(l0): point = 152
   Insn 31(l0): point = 154
   Insn 29(l0): point = 157
   Insn 28(l0): point = 159
   Insn 27(l0): point = 161
   Insn 26(l0): point = 163
   Insn 25(l0): point = 165
   Insn 24(l0): point = 167
   Insn 22(l0): point = 170
   Insn 21(l0): point = 172
   Insn 20(l0): point = 174
   Insn 19(l0): point = 176
   Insn 17(l0): point = 179
   Insn 16(l0): point = 181
   Insn 15(l0): point = 183
   Insn 14(l0): point = 185
   Insn 13(l0): point = 187
   Insn 12(l0): point = 189
   Insn 11(l0): point = 191
   Insn 10(l0): point = 193
   Insn 8(l0): point = 196
   Insn 7(l0): point = 198
   Insn 176(l0): point = 200
 a0(r102): [3..4]
 a1(r101): [139..141] [123..125] [90..92] [63..65] [26..28] [12..14] [5..7]
 a2(r121): [8..9]
 a3(r119): [20..23]
 a4(r120): [20..21]
 a5(r100): [36..37]
 a6(r99): [38..39]
 a7(r98): [38..41]
 a8(r97): [42..43]
 a9(r118): [44..45]
 a10(r117): [51..52]
 a11(r96): [51..54]
 a12(r116): [55..56]
 a13(r95): [55..58]
 a14(r115): [59..60]
 a15(r94): [71..72]
 a16(r114): [73..74]
 a17(r93): [73..76]
 a18(r113): [77..78]
 a19(r111): [84..87]
 a20(r112): [84..85]
 a21(r92): [131..132]
 a22(r91): [133..134]
 a23(r110): [135..136]
 a24(r90): [147..148]
 a25(r89): [149..150]
 a26(r88): [151..152]
 a27(r109): [153..154]
 a28(r87): [160..161]
 a29(r86): [162..163]
 a30(r85): [164..165]
 a31(r108): [166..167]
 a32(r84): [173..174]
 a33(r107): [175..176]
 a34(r106): [184..185]
 a35(r83): [186..191]
 a36(r104): [186..187]
 a37(r105): [188..189]
 a38(r103): [192..193]
 a39(r82): [194..200]
Compressing live ranges: from 203 to 78 - 38%
Ranges after the compression:
 a0(r102): [0..1]
 a1(r101): [46..47] [36..39] [26..27] [10..11] [6..7] [2..3]
 a2(r121): [4..5]
 a3(r119): [8..9]
 a4(r120): [8..9]
 a5(r100): [12..13]
 a6(r99): [14..15]
 a7(r98): [14..15]
 a8(r97): [16..17]
 a9(r118): [18..19]
 a10(r117): [20..21]
 a11(r96): [20..21]
 a12(r116): [22..23]
 a13(r95): [22..23]
 a14(r115): [24..25]
 a15(r94): [28..29]
 a16(r114): [30..31]
 a17(r93): [30..31]
 a18(r113): [32..33]
 a19(r111): [34..35]
 a20(r112): [34..35]
 a21(r92): [40..41]
 a22(r91): [42..43]
 a23(r110): [44..45]
 a24(r90): [48..49]
 a25(r89): [50..51]
 a26(r88): [52..53]
 a27(r109): [54..55]
 a28(r87): [56..57]
 a29(r86): [58..59]
 a30(r85): [60..61]
 a31(r108): [62..63]
 a32(r84): [64..65]
 a33(r107): [66..67]
 a34(r106): [68..69]
 a35(r83): [70..73]
 a36(r104): [70..71]
 a37(r105): [72..73]
 a38(r103): [74..75]
 a39(r82): [76..77]
  pref0:a0(r102)<-hr0@1500
  regions=1, blocks=27, points=78
    allocnos=40 (big 0), copies=0, conflicts=0, ranges=45
Disposition:
   39:r82  l0     0   35:r83  l0     0   32:r84  l0     0   30:r85  l0     0
   29:r86  l0     0   28:r87  l0     0   26:r88  l0     0   25:r89  l0     0
   24:r90  l0     0   22:r91  l0     0   21:r92  l0     0   17:r93  l0     1
   15:r94  l0     0   13:r95  l0     1   11:r96  l0     1    8:r97  l0     0
    7:r98  l0     1    6:r99  l0     0    5:r100 l0     0    1:r101 l0     0
    0:r102 l0     0   38:r103 l0     0   36:r104 l0     1   37:r105 l0     1
   34:r106 l0     0   33:r107 l0     0   31:r108 l0     0   27:r109 l0     0
   23:r110 l0     0   19:r111 l0     0   20:r112 l0     1   18:r113 l0     0
   16:r114 l0     0   14:r115 l0     0   12:r116 l0     0   10:r117 l0     0
    9:r118 l0     0    3:r119 l0     0    4:r120 l0     1    2:r121 l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_lseek

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,26u} r7={1d,26u} r16={1d,36u,3e} r17={20d,13u} r19={1d,42u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={7d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} 
;;    total ref usage 264{74d,185u,5e} in 89{89 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 176 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 176 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 176 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/read_write.c":54:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":54:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 39)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 103)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x78f44172e120 current>)
                        ] UNSPEC_GOT))) [9  S4 A8])) "fs/read_write.c":54:42 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 11 10 12 3 (set (reg/f:SI 83 [ current.2_1 ])
        (mem/f/c:SI (reg/f:SI 103) [8 current+0 S4 A32])) "fs/read_write.c":54:42 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 12 11 13 3 (set (reg:SI 105)
        (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])) "fs/read_write.c":54:33 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 104)
                (plus:SI (reg:SI 105)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":54:33 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 14 13 15 3 (set (reg/f:SI 106)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 104)
                    (const_int 4 [0x4]))
                (reg/f:SI 83 [ current.2_1 ])) [5 current.2_1->filp[fd_22(D)]+0 S4 A32])) "fs/read_write.c":54:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (expr_list:REG_DEAD (reg/f:SI 83 [ current.2_1 ])
            (nil))))
(insn 15 14 16 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
        (reg/f:SI 106)) "fs/read_write.c":54:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":54:23 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":54:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":54:63 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":54:63 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 84 [ _2 ])
            (const_int 0 [0]))) "fs/read_write.c":54:54 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":54:54 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 85 [ _3 ])
        (mem/f:SI (plus:SI (reg/f:SI 108)
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 26 25 27 5 (set (reg:HI 86 [ _4 ])
        (mem:HI (plus:SI (reg/f:SI 85 [ _3 ])
                (const_int 44 [0x2c])) [2 _3->i_dev+0 S2 A32])) "fs/read_write.c":55:13 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (nil)))
(insn 27 26 28 5 (parallel [
            (set (reg:HI 87 [ _5 ])
                (lshiftrt:HI (reg:HI 86 [ _4 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":55:13 711 {*lshrhi3_1}
     (expr_list:REG_DEAD (reg:HI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 87 [ _5 ])
            (const_int 0 [0]))) "fs/read_write.c":55:9 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/read_write.c":55:9 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (reg/f:SI 109)
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":55:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 33 32 34 6 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 88 [ _6 ])
                (const_int 44 [0x2c])) [2 _6->i_dev+0 S2 A32])) "fs/read_write.c":55:13 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (nil)))
(insn 34 33 37 6 (parallel [
            (set (reg:HI 90 [ _8 ])
                (lshiftrt:HI (reg:HI 89 [ _7 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":55:13 711 {*lshrhi3_1}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 34 38 6 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 90 [ _8 ])
            (const_int 3 [0x3]))) "fs/read_write.c":55:12 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/read_write.c":55:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 44)
(code_label 39 38 40 7 16 (nil) [4 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 155 7 (set (reg:SI 101 [ _19 ])
        (const_int -9 [0xfffffffffffffff7])) "fs/read_write.c":56:16 75 {*movsi_internal}
     (nil))
(jump_insn 155 41 156 7 (set (pc)
        (label_ref 146)) "fs/read_write.c":56:16 807 {jump}
     (nil)
 -> 146)
(barrier 156 155 44)
(code_label 44 156 45 8 17 (nil) [1 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":57:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (set (reg/f:SI 91 [ _9 ])
        (mem/f:SI (plus:SI (reg/f:SI 110)
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":57:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 48 47 49 8 (set (reg:QI 92 [ _10 ])
        (mem:QI (plus:SI (reg/f:SI 91 [ _9 ])
                (const_int 52 [0x34])) [0 _9->i_pipe+0 S1 A32])) "fs/read_write.c":57:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
        (nil)))
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ _10 ])
            (const_int 0 [0]))) "fs/read_write.c":57:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 92 [ _10 ])
        (nil)))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/read_write.c":57:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 55)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 157 9 (set (reg:SI 101 [ _19 ])
        (const_int -29 [0xffffffffffffffe3])) "fs/read_write.c":58:16 75 {*movsi_internal}
     (nil))
(jump_insn 157 52 158 9 (set (pc)
        (label_ref 146)) "fs/read_write.c":58:16 807 {jump}
     (nil)
 -> 146)
(barrier 158 157 55)
(code_label 55 158 56 10 19 (nil) [1 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 origin+0 S4 A32])
            (const_int 2 [0x2]))) "fs/read_write.c":59:5 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 59 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 114)
(note 59 58 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 59 63 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 origin+0 S4 A32])
            (const_int 2 [0x2]))) "fs/read_write.c":59:5 11 {*cmpsi_1}
     (nil))
(jump_insn 63 62 64 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 137)
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 origin+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":59:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 66 65 67 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
(note 67 66 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 origin+0 S4 A32])
            (const_int 1 [0x1]))) "fs/read_write.c":59:5 11 {*cmpsi_1}
     (nil))
(jump_insn 69 68 159 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "fs/read_write.c":59:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 90)
(note 159 69 160 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 160 159 161 14 (set (pc)
        (label_ref 137)) "fs/read_write.c":59:5 807 {jump}
     (nil)
 -> 137)
(barrier 161 160 73)
(code_label 73 161 74 15 22 (nil) [1 uses])
(note 74 73 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 74 78 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [4 offset+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":61:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 78 77 79 15 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "fs/read_write.c":61:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 83)
(note 79 78 80 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 162 16 (set (reg:SI 101 [ _19 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":62:20 75 {*movsi_internal}
     (nil))
(jump_insn 162 80 163 16 (set (pc)
        (label_ref 146)) "fs/read_write.c":62:20 807 {jump}
     (nil)
 -> 146)
(barrier 163 162 83)
(code_label 83 163 84 17 24 (nil) [1 uses])
(note 84 83 85 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 17 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":63:21 75 {*movsi_internal}
     (nil))
(insn 86 85 87 17 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 offset+0 S4 A32])) "fs/read_write.c":63:21 75 {*movsi_internal}
     (nil))
(insn 87 86 164 17 (set (mem:SI (plus:SI (reg/f:SI 111)
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])
        (reg:SI 112)) "fs/read_write.c":63:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_DEAD (reg/f:SI 111)
            (nil))))
(jump_insn 164 87 165 17 (set (pc)
        (label_ref 142)) "fs/read_write.c":64:9 807 {jump}
     (nil)
 -> 142)
(barrier 165 164 90)
(code_label 90 165 91 18 23 (nil) [1 uses])
(note 91 90 92 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 18 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":66:17 75 {*movsi_internal}
     (nil))
(insn 93 92 94 18 (set (reg:SI 93 [ _11 ])
        (mem:SI (plus:SI (reg/f:SI 113)
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])) "fs/read_write.c":66:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 94 93 95 18 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 offset+0 S4 A32])) "fs/read_write.c":66:25 75 {*movsi_internal}
     (nil))
(insn 95 94 98 18 (parallel [
            (set (reg:SI 94 [ _12 ])
                (plus:SI (reg:SI 93 [ _11 ])
                    (reg:SI 114)))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":66:25 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 93 [ _11 ])
                        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [4 offset+0 S4 A32]))
                    (nil))))))
(insn 98 95 99 18 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 94 [ _12 ])
            (const_int 0 [0]))) "fs/read_write.c":66:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (nil)))
(jump_insn 99 98 100 18 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "fs/read_write.c":66:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 104)
(note 100 99 101 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 166 19 (set (reg:SI 101 [ _19 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":67:20 75 {*movsi_internal}
     (nil))
(jump_insn 166 101 167 19 (set (pc)
        (label_ref 146)) "fs/read_write.c":67:20 807 {jump}
     (nil)
 -> 146)
(barrier 167 166 104)
(code_label 104 167 105 20 26 (nil) [1 uses])
(note 105 104 106 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 20 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(insn 107 106 108 20 (set (reg:SI 95 [ _13 ])
        (mem:SI (plus:SI (reg/f:SI 115)
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 108 107 109 20 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 offset+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(insn 109 108 110 20 (parallel [
            (set (reg:SI 96 [ _14 ])
                (plus:SI (reg:SI 95 [ _13 ])
                    (reg:SI 116)))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":68:21 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 95 [ _13 ])
                        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [4 offset+0 S4 A32]))
                    (nil))))))
(insn 110 109 111 20 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (nil))
(insn 111 110 168 20 (set (mem:SI (plus:SI (reg/f:SI 117)
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])
        (reg:SI 96 [ _14 ])) "fs/read_write.c":68:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
            (nil))))
(jump_insn 168 111 169 20 (set (pc)
        (label_ref 142)) "fs/read_write.c":69:9 807 {jump}
     (nil)
 -> 142)
(barrier 169 168 114)
(code_label 114 169 115 21 20 (nil) [1 uses])
(note 115 114 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 21 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":71:24 75 {*movsi_internal}
     (nil))
(insn 117 116 118 21 (set (reg/f:SI 97 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [3 file_24->f_inode+0 S4 A32])) "fs/read_write.c":71:24 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 118 117 119 21 (set (reg:SI 98 [ _16 ])
        (mem:SI (plus:SI (reg/f:SI 97 [ _15 ])
                (const_int 4 [0x4])) [4 _15->i_size+0 S4 A32])) "fs/read_write.c":71:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (nil)))
(insn 119 118 120 21 (set (reg:SI 99 [ offset.3_17 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [4 offset+0 S4 A32])) "fs/read_write.c":71:42 75 {*movsi_internal}
     (nil))
(insn 120 119 121 21 (parallel [
            (set (reg:SI 100 [ _18 ])
                (plus:SI (reg:SI 98 [ _16 ])
                    (reg:SI 99 [ offset.3_17 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":71:42 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ offset.3_17 ])
        (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 121 120 124 21 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 tmp+0 S4 A32])
        (reg:SI 100 [ _18 ])) "fs/read_write.c":71:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (nil)))
(insn 124 121 125 21 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":71:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 125 124 126 21 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) "fs/read_write.c":71:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 130)
(note 126 125 127 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 170 22 (set (reg:SI 101 [ _19 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":72:20 75 {*movsi_internal}
     (nil))
(jump_insn 170 127 171 22 (set (pc)
        (label_ref 146)) "fs/read_write.c":72:20 807 {jump}
     (nil)
 -> 146)
(barrier 171 170 130)
(code_label 130 171 131 23 27 (nil) [1 uses])
(note 131 130 132 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 23 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":73:21 75 {*movsi_internal}
     (nil))
(insn 133 132 134 23 (set (reg:SI 120)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 tmp+0 S4 A32])) "fs/read_write.c":73:21 75 {*movsi_internal}
     (nil))
(insn 134 133 172 23 (set (mem:SI (plus:SI (reg/f:SI 119)
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])
        (reg:SI 120)) "fs/read_write.c":73:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg/f:SI 119)
            (nil))))
(jump_insn 172 134 173 23 (set (pc)
        (label_ref 142)) "fs/read_write.c":74:9 807 {jump}
     (nil)
 -> 142)
(barrier 173 172 137)
(code_label 137 173 138 24 21 (nil) [2 uses])
(note 138 137 139 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 174 24 (set (reg:SI 101 [ _19 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":76:16 75 {*movsi_internal}
     (nil))
(jump_insn 174 139 175 24 (set (pc)
        (label_ref 146)) "fs/read_write.c":76:16 807 {jump}
     (nil)
 -> 146)
(barrier 175 174 142)
(code_label 142 175 143 25 25 (nil) [3 uses])
(note 143 142 144 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 25 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":78:16 75 {*movsi_internal}
     (nil))
(insn 145 144 146 25 (set (reg:SI 101 [ _19 ])
        (mem:SI (plus:SI (reg/f:SI 121)
                (const_int 12 [0xc])) [4 file_24->f_pos+0 S4 A32])) "fs/read_write.c":78:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(code_label 146 145 147 26 18 (nil) [6 uses])
(note 147 146 148 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 152 26 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ _19 ])) "fs/read_write.c":79:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (nil)))
(insn 152 148 153 26 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) "fs/read_write.c":79:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ <retval> ])
        (nil)))
(insn 153 152 0 26 (use (reg/i:SI 0 ax)) "fs/read_write.c":79:1 -1
     (nil))

;; Function sys_write (sys_write, funcdef_no=3, decl_uid=1389, cgraph_uid=4, symbol_order=3)

scanning new insn with uid = 175.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 20 n_edges 28 count 20 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 6 }
;; 5 succs { 19 }
;; 6 succs { 7 8 }
;; 7 succs { 19 }
;; 8 succs { 9 12 }
;; 9 succs { 10 11 }
;; 10 succs { 19 }
;; 11 succs { 19 }
;; 12 succs { 13 14 }
;; 13 succs { 19 }
;; 14 succs { 15 16 }
;; 15 succs { 19 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r106,l0) best AREG, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a33 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r105,l0) costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 CLOBBERED_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 TLS_GOTBASE_REGS:8000 GENERAL_REGS:8000 MEM:33000
  a2(r82,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 MEM:48000
  a3(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a8(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a13(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a26(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a34(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 159(l0): point = 0
   Insn 158(l0): point = 2
   Insn 154(l0): point = 4
   Insn 151(l0): point = 7
   Insn 150(l0): point = 9
   Insn 149(l0): point = 11
   Insn 148(l0): point = 13
   Insn 147(l0): point = 15
   Insn 146(l0): point = 17
   Insn 145(l0): point = 19
   Insn 144(l0): point = 21
   Insn 143(l0): point = 23
   Insn 142(l0): point = 25
   Insn 141(l0): point = 27
   Insn 173(l0): point = 30
   Insn 136(l0): point = 32
   Insn 135(l0): point = 34
   Insn 134(l0): point = 36
   Insn 133(l0): point = 38
   Insn 132(l0): point = 40
   Insn 131(l0): point = 42
   Insn 130(l0): point = 44
   Insn 129(l0): point = 46
   Insn 127(l0): point = 49
   Insn 126(l0): point = 51
   Insn 125(l0): point = 53
   Insn 124(l0): point = 55
   Insn 123(l0): point = 57
   Insn 122(l0): point = 59
   Insn 171(l0): point = 62
   Insn 117(l0): point = 64
   Insn 116(l0): point = 66
   Insn 115(l0): point = 68
   Insn 114(l0): point = 70
   Insn 113(l0): point = 72
   Insn 112(l0): point = 74
   Insn 111(l0): point = 76
   Insn 110(l0): point = 78
   Insn 109(l0): point = 80
   Insn 108(l0): point = 82
   Insn 107(l0): point = 84
   Insn 106(l0): point = 86
   Insn 105(l0): point = 88
   Insn 103(l0): point = 91
   Insn 102(l0): point = 93
   Insn 101(l0): point = 95
   Insn 100(l0): point = 97
   Insn 99(l0): point = 99
   Insn 98(l0): point = 101
   Insn 169(l0): point = 104
   Insn 93(l0): point = 106
   Insn 92(l0): point = 108
   Insn 91(l0): point = 110
   Insn 90(l0): point = 112
   Insn 89(l0): point = 114
   Insn 88(l0): point = 116
   Insn 87(l0): point = 118
   Insn 86(l0): point = 120
   Insn 85(l0): point = 122
   Insn 84(l0): point = 124
   Insn 83(l0): point = 126
   Insn 82(l0): point = 128
   Insn 81(l0): point = 130
   Insn 80(l0): point = 132
   Insn 79(l0): point = 134
   Insn 77(l0): point = 137
   Insn 76(l0): point = 139
   Insn 75(l0): point = 141
   Insn 74(l0): point = 143
   Insn 73(l0): point = 145
   Insn 72(l0): point = 147
   Insn 167(l0): point = 150
   Insn 65(l0): point = 152
   Insn 165(l0): point = 155
   Insn 60(l0): point = 157
   Insn 59(l0): point = 159
   Insn 58(l0): point = 161
   Insn 57(l0): point = 163
   Insn 56(l0): point = 165
   Insn 55(l0): point = 167
   Insn 54(l0): point = 169
   Insn 53(l0): point = 171
   Insn 51(l0): point = 174
   Insn 50(l0): point = 176
   Insn 49(l0): point = 178
   Insn 48(l0): point = 180
   Insn 47(l0): point = 182
   Insn 46(l0): point = 184
   Insn 44(l0): point = 187
   Insn 43(l0): point = 189
   Insn 42(l0): point = 191
   Insn 41(l0): point = 193
   Insn 40(l0): point = 195
   Insn 39(l0): point = 197
   Insn 38(l0): point = 199
   Insn 163(l0): point = 202
   Insn 33(l0): point = 204
   Insn 31(l0): point = 207
   Insn 30(l0): point = 209
   Insn 161(l0): point = 212
   Insn 25(l0): point = 214
   Insn 22(l0): point = 217
   Insn 21(l0): point = 219
   Insn 20(l0): point = 221
   Insn 19(l0): point = 223
   Insn 18(l0): point = 225
   Insn 17(l0): point = 227
   Insn 16(l0): point = 229
   Insn 15(l0): point = 231
   Insn 13(l0): point = 234
   Insn 12(l0): point = 236
   Insn 8(l0): point = 239
   Insn 7(l0): point = 241
   Insn 175(l0): point = 243
 a0(r106): [3..4]
 a1(r105): [212..214] [202..204] [155..157] [150..152] [104..106] [62..64] [30..32] [5..7]
 a2(r82): [217..243] [207..211] [164..201] [113..149] [71..103] [39..61] [14..29]
 a3(r123): [16..17]
 a4(r104): [20..23]
 a5(r103): [24..25]
 a6(r122): [26..27]
 a7(r102): [52..53]
 a8(r101): [54..55]
 a9(r100): [56..57]
 a10(r121): [58..59]
 a11(r99): [73..80]
 a12(r97): [75..86]
 a13(r98): [81..82]
 a14(r120): [83..84]
 a15(r119): [87..88]
 a16(r96): [94..95]
 a17(r95): [96..97]
 a18(r94): [98..99]
 a19(r118): [100..101]
 a20(r93): [117..126]
 a21(r91): [123..132]
 a22(r92): [127..128]
 a23(r117): [129..130]
 a24(r116): [133..134]
 a25(r90): [140..141]
 a26(r89): [142..143]
 a27(r88): [144..145]
 a28(r115): [146..147]
 a29(r87): [177..178]
 a30(r86): [179..180]
 a31(r85): [181..182]
 a32(r114): [183..184]
 a33(r84): [190..191]
 a34(r113): [192..193]
 a35(r112): [196..197]
 a36(r111): [198..199]
 a37(r110): [222..223]
 a38(r83): [224..229]
 a39(r108): [224..225]
 a40(r109): [226..227]
 a41(r107): [230..231]
Compressing live ranges: from 246 to 92 - 37%
Ranges after the compression:
 a0(r106): [0..1]
 a1(r105): [82..83] [78..79] [58..61] [40..41] [22..23] [12..13] [2..3]
 a2(r82): [84..91] [80..81] [62..77] [42..57] [24..39] [14..21] [4..11]
 a3(r123): [4..5]
 a4(r104): [6..7]
 a5(r103): [8..9]
 a6(r122): [10..11]
 a7(r102): [14..15]
 a8(r101): [16..17]
 a9(r100): [18..19]
 a10(r121): [20..21]
 a11(r99): [24..25]
 a12(r97): [24..29]
 a13(r98): [26..27]
 a14(r120): [28..29]
 a15(r119): [30..31]
 a16(r96): [32..33]
 a17(r95): [34..35]
 a18(r94): [36..37]
 a19(r118): [38..39]
 a20(r93): [42..43]
 a21(r91): [42..47]
 a22(r92): [44..45]
 a23(r117): [46..47]
 a24(r116): [48..49]
 a25(r90): [50..51]
 a26(r89): [52..53]
 a27(r88): [54..55]
 a28(r115): [56..57]
 a29(r87): [62..63]
 a30(r86): [64..65]
 a31(r85): [66..67]
 a32(r114): [68..69]
 a33(r84): [70..71]
 a34(r113): [72..73]
 a35(r112): [74..75]
 a36(r111): [76..77]
 a37(r110): [84..85]
 a38(r83): [86..89]
 a39(r108): [86..87]
 a40(r109): [88..89]
 a41(r107): [90..91]
  pref0:a0(r106)<-hr0@1500
  pref1:a1(r105)<-hr0@6000
  pref2:a2(r82)<-hr3@7500
  regions=1, blocks=20, points=92
    allocnos=42 (big 0), copies=0, conflicts=0, ranges=54
Disposition:
    2:r82  l0     0   38:r83  l0     1   33:r84  l0     1   31:r85  l0     1
   30:r86  l0     1   29:r87  l0     1   27:r88  l0     1   26:r89  l0     1
   25:r90  l0     1   21:r91  l0     2   22:r92  l0     1   20:r93  l0     1
   18:r94  l0     1   17:r95  l0     1   16:r96  l0     1   12:r97  l0     2
   13:r98  l0     1   11:r99  l0     1    9:r100 l0     1    8:r101 l0     1
    7:r102 l0     1    5:r103 l0     1    4:r104 l0     1    1:r105 l0     0
    0:r106 l0     0   41:r107 l0     1   39:r108 l0     2   40:r109 l0     2
   37:r110 l0     1   36:r111 l0     1   35:r112 l0     1   34:r113 l0     1
   32:r114 l0     1   28:r115 l0     1   24:r116 l0     1   23:r117 l0     1
   19:r118 l0     1   15:r119 l0     1   14:r120 l0     1   10:r121 l0     1
    6:r122 l0     1    3:r123 l0     1
+++Costs: overall -10000, reg -10000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,6u} r1={6d} r2={6d} r3={5d,5u} r6={1d,19u} r7={27d,58u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,30u,1e} r17={30d,9u} r18={5d} r19={1d,36u,2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={8d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 672{458d,211u,3e} in 114{109 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 175 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 175 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 175 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
            (const_int 19 [0x13]))) "fs/read_write.c":86:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":86:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 23)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 9 13 3 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":86:23 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "fs/read_write.c":86:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 23)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 107)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x78f44172e120 current>)
                        ] UNSPEC_GOT))) [9  S4 A8])) "fs/read_write.c":86:55 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 83 [ current.4_1 ])
        (mem/f/c:SI (reg/f:SI 107) [8 current+0 S4 A32])) "fs/read_write.c":86:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 17 16 18 4 (set (reg:SI 109)
        (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])) "fs/read_write.c":86:46 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 108)
                (plus:SI (reg:SI 109)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":86:46 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [6 fd+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 19 18 20 4 (set (reg/f:SI 110)
        (mem/f:SI (plus:SI (mult:SI (reg:SI 108)
                    (const_int 4 [0x4]))
                (reg/f:SI 83 [ current.4_1 ])) [5 current.4_1->filp[fd_27(D)]+0 S4 A32])) "fs/read_write.c":86:46 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg/f:SI 83 [ current.4_1 ])
            (nil))))
(insn 20 19 21 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
        (reg/f:SI 110)) "fs/read_write.c":86:46 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":86:36 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "fs/read_write.c":86:36 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
(code_label 23 22 24 5 29 (nil) [2 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 161 5 (set (reg:SI 105 [ iftmp.5_24 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":87:16 75 {*movsi_internal}
     (nil))
(jump_insn 161 25 162 5 (set (pc)
        (label_ref 152)) "fs/read_write.c":87:16 807 {jump}
     (nil)
 -> 152)
(barrier 162 161 28)
(code_label 28 162 29 6 30 (nil) [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [6 count+0 S4 A32])
            (const_int 0 [0]))) "fs/read_write.c":88:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "fs/read_write.c":88:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 36)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 163 7 (set (reg:SI 105 [ iftmp.5_24 ])
        (const_int 0 [0])) "fs/read_write.c":89:16 75 {*movsi_internal}
     (nil))
(jump_insn 163 33 164 7 (set (pc)
        (label_ref 152)) "fs/read_write.c":89:16 807 {jump}
     (nil)
 -> 152)
(barrier 164 163 36)
(code_label 36 164 37 8 32 (nil) [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":90:11 75 {*movsi_internal}
     (nil))
(insn 39 38 40 8 (set (reg/f:SI 112)
        (mem/f:SI (plus:SI (reg/f:SI 111)
                (const_int 8 [0x8])) [3 file_30->f_inode+0 S4 A32])) "fs/read_write.c":90:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 40 39 41 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])
        (reg/f:SI 112)) "fs/read_write.c":90:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 41 40 42 8 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":91:14 75 {*movsi_internal}
     (nil))
(insn 42 41 43 8 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 113)
                (const_int 52 [0x34])) [0 inode_31->i_pipe+0 S1 A32])) "fs/read_write.c":91:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 43 42 44 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/read_write.c":91:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 44 43 45 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/read_write.c":91:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 70)
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":92:21 75 {*movsi_internal}
     (nil))
(insn 47 46 48 9 (set (reg:HI 85 [ _3 ])
        (mem:HI (reg/f:SI 114) [2 file_30->f_mode+0 S2 A32])) "fs/read_write.c":92:21 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 48 47 49 9 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/read_write.c":92:30 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 49 48 50 9 (parallel [
            (set (reg:SI 87 [ _5 ])
                (and:SI (reg:SI 86 [ _4 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":92:30 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _5 ])
            (const_int 0 [0]))) "fs/read_write.c":92:67 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (nil)))
(jump_insn 51 50 52 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "fs/read_write.c":92:67 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 63)
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":92:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 54 53 55 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":92:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 55 54 56 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":92:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 56 55 57 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":92:37 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 57 56 58 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":92:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 58 57 59 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("write_pipe") [flags 0x41]  <function_decl 0x78f441710100 write_pipe>) [0 write_pipe S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":92:37 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 59 58 60 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":92:37 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 60 59 165 10 (set (reg:SI 105 [ iftmp.5_24 ])
        (reg:SI 0 ax)) "fs/read_write.c":92:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 165 60 166 10 (set (pc)
        (label_ref 152)) "fs/read_write.c":92:67 807 {jump}
     (nil)
 -> 152)
(barrier 166 165 63)
(code_label 63 166 64 11 34 (nil) [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 167 11 (set (reg:SI 105 [ iftmp.5_24 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/read_write.c":92:67 75 {*movsi_internal}
     (nil))
(jump_insn 167 65 168 11 (set (pc)
        (label_ref 152)) "fs/read_write.c":92:67 807 {jump}
     (nil)
 -> 152)
(barrier 168 167 70)
(code_label 70 168 71 12 33 (nil) [1 uses])
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":93:9 75 {*movsi_internal}
     (nil))
(insn 73 72 74 12 (set (reg:HI 88 [ _6 ])
        (mem:HI (reg/f:SI 115) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":93:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 74 73 75 12 (set (reg:SI 89 [ _7 ])
        (zero_extend:SI (reg:HI 88 [ _6 ]))) "fs/read_write.c":93:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(insn 75 74 76 12 (parallel [
            (set (reg:SI 90 [ _8 ])
                (and:SI (reg:SI 89 [ _7 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":93:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _8 ])
            (const_int 8192 [0x2000]))) "fs/read_write.c":93:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (nil)))
(jump_insn 77 76 78 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "fs/read_write.c":93:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 96)
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":94:16 75 {*movsi_internal}
     (nil))
(insn 80 79 81 13 (parallel [
            (set (reg/f:SI 91 [ _9 ])
                (plus:SI (reg/f:SI 116)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":94:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 81 80 82 13 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":94:44 75 {*movsi_internal}
     (nil))
(insn 82 81 83 13 (set (reg:HI 92 [ _10 ])
        (mem:HI (plus:SI (reg/f:SI 117)
                (const_int 14 [0xe])) [2 inode_31->i_zone[0]+0 S2 A16])) "fs/read_write.c":94:44 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 83 82 84 13 (set (reg:SI 93 [ _11 ])
        (zero_extend:SI (reg:HI 92 [ _10 ]))) "fs/read_write.c":94:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (nil)))
(insn 84 83 85 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":94:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 85 84 86 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 91 [ _9 ])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _9 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 86 85 87 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 87 86 88 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 88 87 89 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 93 [ _11 ])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 89 88 90 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 1 [0x1])) "fs/read_write.c":94:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 90 89 91 13 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":94:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 91 90 92 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_char") [flags 0x41]  <function_decl 0x78f441738e00 rw_char>) [0 rw_char S1 A8])
            (const_int 32 [0x20]))) "fs/read_write.c":94:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 92 91 93 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":94:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 93 92 169 13 (set (reg:SI 105 [ iftmp.5_24 ])
        (reg:SI 0 ax)) "fs/read_write.c":94:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 169 93 170 13 (set (pc)
        (label_ref 152)) "fs/read_write.c":94:16 807 {jump}
     (nil)
 -> 152)
(barrier 170 169 96)
(code_label 96 170 97 14 36 (nil) [1 uses])
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":95:9 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 94 [ _12 ])
        (mem:HI (reg/f:SI 118) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":95:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 100 99 101 14 (set (reg:SI 95 [ _13 ])
        (zero_extend:SI (reg:HI 94 [ _12 ]))) "fs/read_write.c":95:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
        (nil)))
(insn 101 100 102 14 (parallel [
            (set (reg:SI 96 [ _14 ])
                (and:SI (reg:SI 95 [ _13 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":95:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _14 ])
            (const_int 24576 [0x6000]))) "fs/read_write.c":95:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "fs/read_write.c":95:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 120)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":96:46 75 {*movsi_internal}
     (nil))
(insn 106 105 107 15 (parallel [
            (set (reg/f:SI 97 [ _15 ])
                (plus:SI (reg/f:SI 119)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":96:46 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 107 106 108 15 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":96:41 75 {*movsi_internal}
     (nil))
(insn 108 107 109 15 (set (reg:HI 98 [ _16 ])
        (mem:HI (plus:SI (reg/f:SI 120)
                (const_int 14 [0xe])) [2 inode_31->i_zone[0]+0 S2 A16])) "fs/read_write.c":96:41 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 109 108 110 15 (set (reg:SI 99 [ _17 ])
        (zero_extend:SI (reg:HI 98 [ _16 ]))) "fs/read_write.c":96:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 98 [ _16 ])
        (nil)))
(insn 110 109 111 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 111 110 112 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 112 111 113 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 97 [ _15 ])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 113 112 114 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 99 [ _17 ])) "fs/read_write.c":96:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 114 113 115 15 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":96:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 115 114 116 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("block_write") [flags 0x41]  <function_decl 0x78f441710000 block_write>) [0 block_write S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":96:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 116 115 117 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":96:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 117 116 171 15 (set (reg:SI 105 [ iftmp.5_24 ])
        (reg:SI 0 ax)) "fs/read_write.c":96:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 171 117 172 15 (set (pc)
        (label_ref 152)) "fs/read_write.c":96:16 807 {jump}
     (nil)
 -> 152)
(barrier 172 171 120)
(code_label 120 172 121 16 37 (nil) [1 uses])
(note 121 120 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 16 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":97:9 75 {*movsi_internal}
     (nil))
(insn 123 122 124 16 (set (reg:HI 100 [ _18 ])
        (mem:HI (reg/f:SI 121) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":97:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 124 123 125 16 (set (reg:SI 101 [ _19 ])
        (zero_extend:SI (reg:HI 100 [ _18 ]))) "fs/read_write.c":97:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
        (nil)))
(insn 125 124 126 16 (parallel [
            (set (reg:SI 102 [ _20 ])
                (and:SI (reg:SI 101 [ _19 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":97:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ _20 ])
            (const_int 32768 [0x8000]))) "fs/read_write.c":97:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (nil)))
(jump_insn 127 126 128 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "fs/read_write.c":97:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 139)
(note 128 127 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [6 count+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 130 129 131 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [7 buf+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 131 130 132 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 file+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 132 131 133 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":98:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 133 132 134 17 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":98:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 134 133 135 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("file_write") [flags 0x41]  <function_decl 0x78f44170ef00 file_write>) [0 file_write S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":98:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 135 134 136 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":98:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 136 135 173 17 (set (reg:SI 105 [ iftmp.5_24 ])
        (reg:SI 0 ax)) "fs/read_write.c":98:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 173 136 174 17 (set (pc)
        (label_ref 152)) "fs/read_write.c":98:16 807 {jump}
     (nil)
 -> 152)
(barrier 174 173 139)
(code_label 139 174 140 18 38 (nil) [1 uses])
(note 140 139 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 18 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 inode+0 S4 A32])) "fs/read_write.c":99:50 75 {*movsi_internal}
     (nil))
(insn 142 141 143 18 (set (reg:HI 103 [ _21 ])
        (mem:HI (reg/f:SI 122) [2 inode_31->i_mode+0 S2 A32])) "fs/read_write.c":99:50 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 143 142 144 18 (set (reg:SI 104 [ _22 ])
        (zero_extend:SI (reg:HI 103 [ _21 ]))) "fs/read_write.c":99:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 103 [ _21 ])
        (nil)))
(insn 144 143 145 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":99:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 145 144 146 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 104 [ _22 ])) "fs/read_write.c":99:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 146 145 147 18 (set (reg/f:SI 123)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x78f44177f090 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/read_write.c":99:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x78f44177f090 *.LC1>)
        (nil)))
(insn 147 146 148 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 123)) "fs/read_write.c":99:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 148 147 149 18 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/read_write.c":99:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 149 148 150 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x78f441738900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/read_write.c":99:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 150 149 151 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/read_write.c":99:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 151 150 152 18 (set (reg:SI 105 [ iftmp.5_24 ])
        (const_int -22 [0xffffffffffffffea])) "fs/read_write.c":100:12 75 {*movsi_internal}
     (nil))
(code_label 152 151 153 19 31 (nil) [7 uses])
(note 153 152 154 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 158 19 (set (reg:SI 106 [ <retval> ])
        (reg:SI 105 [ iftmp.5_24 ])) "fs/read_write.c":101:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ iftmp.5_24 ])
        (nil)))
(insn 158 154 159 19 (set (reg/i:SI 0 ax)
        (reg:SI 106 [ <retval> ])) "fs/read_write.c":101:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106 [ <retval> ])
        (nil)))
(insn 159 158 0 19 (use (reg/i:SI 0 ax)) "fs/read_write.c":101:1 -1
     (nil))
