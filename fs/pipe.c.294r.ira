
;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1332, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 5(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 18(l0): point = 14
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..10]
 a4(r87): [11..12]
 a5(r82): [14..14]
Compressing live ranges: from 17 to 11 - 64%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [8..9]
 a5(r82): [10..10]
  pref0:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    4:r87  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 31{16d,15u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [16 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 86 [ _v ])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 87) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 7 8 2 (set (reg/v:QI 83 [ _v ])
        (reg:QI 86 [ _v ])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86 [ _v ])
        (nil)))
(insn 8 5 11 2 (set (reg:QI 84 [ _4 ])
        (reg/v:QI 83 [ _v ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 83 [ _v ])
        (nil)))
(insn 11 8 15 2 (set (reg:QI 85 [ <retval> ])
        (reg:QI 84 [ _4 ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84 [ _4 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:QI 0 ax)
        (reg:QI 85 [ <retval> ])) "include/asm/segment.h":10:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 85 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))

;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1337, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r85,l0) best Q_REGS, allocno Q_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 14(l0): point = 0
   Insn 10(l0): point = 3
   Insn 9(l0): point = 5
   Insn 8(l0): point = 7
   Insn 4(l0): point = 9
   Insn 3(l0): point = 11
   Insn 2(l0): point = 13
   Insn 15(l0): point = 15
 a0(r85): [4..7]
 a1(r86): [4..5]
 a2(r84): [10..11]
 a3(r83): [12..13]
 a4(r82): [15..15]
Compressing live ranges: from 18 to 7 - 38%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r86): [0..1]
 a2(r84): [2..3]
 a3(r83): [4..5]
 a4(r82): [6..6]
  regions=1, blocks=4, points=7
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    3:r83  l0     0    2:r84  l0     0    0:r85  l0     0
    1:r86  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,5u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 33{14d,19u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 15 3 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 84)
        (subreg:QI (reg:SI 83) 0)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 83)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])
        (reg:QI 84)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 85)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [16 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 85)
                    (mem:QI (reg/f:SI 86) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_DEAD (reg:QI 85)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))

;; Function put_fs_long (put_fs_long, funcdef_no=3, decl_uid=1341, cgraph_uid=4, symbol_order=3)

scanning new insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 11(l0): point = 0
   Insn 7(l0): point = 3
   Insn 6(l0): point = 5
   Insn 5(l0): point = 7
   Insn 12(l0): point = 9
 a0(r83): [4..7]
 a1(r84): [4..5]
 a2(r82): [9..9]
Compressing live ranges: from 12 to 3 - 25%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r84): [0..1]
 a2(r82): [2..2]
  regions=1, blocks=4, points=3
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    0:r83  l0     0    1:r84  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,3u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 27{12d,15u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [3 val+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 84)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [17 addr+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("movl %0, %%fs:%1") ("") 0 [
                    (reg:SI 83)
                    (mem:SI (reg/f:SI 84) [3 *addr_3(D)+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("r") include/asm/segment.h:19)
                    (asm_input:SI ("m") include/asm/segment.h:19)
                ]
                 [] include/asm/segment.h:19)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":19:5 -1
     (expr_list:REG_DEAD (reg/f:SI 84)
        (expr_list:REG_DEAD (reg:SI 83)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 0 3 (const_int 0 [0]) "include/asm/segment.h":20:1 843 {nop}
     (nil))

;; Function read_pipe (read_pipe, funcdef_no=8, decl_uid=1361, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 156.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 18 n_edges 23 count 28 (  1.6)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14 13 12 10 11 8 9 7 6 3 4
;;
;; Loop 3
;;  header 14, latch 13
;;  depth 2, outer 1
;;  nodes: 14 13
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 2, outer 1
;;  nodes: 7 6 4
;; 2 succs { 15 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 17 }
;; 6 succs { 7 }
;; 7 succs { 4 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 13 15 }
;; 15 succs { 3 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a9 (r104,l0) best Q_REGS, allocno Q_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a2(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:24000
  a3(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a6(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a9(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a10(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a11(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a12(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a13(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a14(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a16(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a25(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a26(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a39(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a40(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a44(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a45(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a46(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a50(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a54(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 146(l0): point = 0
   Insn 145(l0): point = 2
   Insn 141(l0): point = 4
   Insn 138(l0): point = 7
   Insn 137(l0): point = 9
   Insn 136(l0): point = 11
   Insn 135(l0): point = 13
   Insn 134(l0): point = 15
   Insn 133(l0): point = 17
   Insn 132(l0): point = 19
   Insn 131(l0): point = 21
   Insn 152(l0): point = 24
   Insn 24(l0): point = 26
   Insn 150(l0): point = 29
   Insn 129(l0): point = 32
   Insn 128(l0): point = 34
   Insn 122(l0): point = 37
   Insn 121(l0): point = 39
   Insn 117(l0): point = 41
   Insn 116(l0): point = 43
   Insn 115(l0): point = 45
   Insn 112(l0): point = 48
   Insn 111(l0): point = 50
   Insn 110(l0): point = 52
   Insn 109(l0): point = 54
   Insn 108(l0): point = 56
   Insn 107(l0): point = 58
   Insn 106(l0): point = 60
   Insn 105(l0): point = 62
   Insn 104(l0): point = 64
   Insn 103(l0): point = 66
   Insn 102(l0): point = 68
   Insn 101(l0): point = 70
   Insn 100(l0): point = 72
   Insn 99(l0): point = 74
   Insn 98(l0): point = 76
   Insn 97(l0): point = 78
   Insn 96(l0): point = 80
   Insn 95(l0): point = 82
   Insn 154(l0): point = 85
   Insn 91(l0): point = 87
   Insn 90(l0): point = 89
   Insn 89(l0): point = 91
   Insn 88(l0): point = 93
   Insn 87(l0): point = 95
   Insn 86(l0): point = 97
   Insn 85(l0): point = 99
   Insn 84(l0): point = 101
   Insn 83(l0): point = 103
   Insn 82(l0): point = 105
   Insn 81(l0): point = 107
   Insn 80(l0): point = 109
   Insn 79(l0): point = 111
   Insn 78(l0): point = 113
   Insn 77(l0): point = 115
   Insn 76(l0): point = 117
   Insn 75(l0): point = 119
   Insn 74(l0): point = 121
   Insn 73(l0): point = 123
   Insn 72(l0): point = 125
   Insn 66(l0): point = 128
   Insn 65(l0): point = 130
   Insn 64(l0): point = 132
   Insn 58(l0): point = 135
   Insn 57(l0): point = 137
   Insn 56(l0): point = 139
   Insn 55(l0): point = 141
   Insn 54(l0): point = 143
   Insn 53(l0): point = 146
   Insn 52(l0): point = 148
   Insn 51(l0): point = 150
   Insn 50(l0): point = 152
   Insn 48(l0): point = 155
   Insn 47(l0): point = 157
   Insn 45(l0): point = 159
   Insn 44(l0): point = 161
   Insn 43(l0): point = 163
   Insn 42(l0): point = 165
   Insn 41(l0): point = 168
   Insn 40(l0): point = 170
   Insn 39(l0): point = 172
   Insn 38(l0): point = 174
   Insn 35(l0): point = 177
   Insn 34(l0): point = 179
   Insn 33(l0): point = 181
   Insn 32(l0): point = 183
   Insn 31(l0): point = 185
   Insn 30(l0): point = 187
   Insn 29(l0): point = 189
   Insn 22(l0): point = 192
   Insn 21(l0): point = 194
   Insn 20(l0): point = 196
   Insn 19(l0): point = 198
   Insn 18(l0): point = 200
   Insn 17(l0): point = 202
   Insn 16(l0): point = 204
   Insn 15(l0): point = 206
   Insn 14(l0): point = 208
   Insn 13(l0): point = 210
   Insn 12(l0): point = 212
   Insn 61(l0): point = 215
   Insn 60(l0): point = 217
   Insn 69(l0): point = 220
   Insn 68(l0): point = 222
   Insn 148(l0): point = 225
   Insn 5(l0): point = 227
   Insn 156(l0): point = 229
 a0(r109): [3..4]
 a1(r108): [24..26] [5..7]
 a2(r82): [29..229] [14..23]
 a3(r107): [16..19]
 a4(r136): [20..21]
 a5(r106): [40..45]
 a6(r135): [42..43]
 a7(r105): [53..58]
 a8(r98): [55..82]
 a9(r104): [59..60]
 a10(r103): [61..62]
 a11(r102): [63..64]
 a12(r101): [65..66]
 a13(r100): [65..70]
 a14(r134): [67..68]
 a15(r99): [71..76]
 a16(r133): [73..74]
 a17(r132): [79..80]
 a18(r131): [88..89]
 a19(r97): [88..91]
 a20(r96): [92..93]
 a21(r130): [94..95]
 a22(r129): [98..99]
 a23(r95): [98..101]
 a24(r94): [102..103]
 a25(r93): [102..107]
 a26(r128): [104..105]
 a27(r127): [108..109]
 a28(r126): [112..113]
 a29(r92): [114..115]
 a30(r125): [116..117]
 a31(r124): [120..121]
 a32(r123): [124..125]
 a33(r122): [221..222]
 a34(r121): [131..132]
 a35(r120): [216..217]
 a36(r119): [138..139]
 a37(r118): [142..144]
 a38(r91): [144..148]
 a39(r117): [145..146]
 a40(r90): [149..150]
 a41(r116): [151..152]
 a42(r115): [160..161]
 a43(r89): [162..163]
 a44(r88): [164..166]
 a45(r87): [166..168]
 a46(r86): [167..172]
 a47(r114): [169..170]
 a48(r113): [173..174]
 a49(r85): [184..187]
 a50(r112): [188..189]
 a51(r84): [195..196]
 a52(r111): [197..198]
 a53(r83): [207..210]
 a54(r110): [211..212]
Compressing live ranges: from 232 to 92 - 39%
Ranges after the compression:
 a0(r109): [0..1]
 a1(r108): [8..9] [2..3]
 a2(r82): [10..91] [4..7]
 a3(r107): [4..5]
 a4(r136): [6..7]
 a5(r106): [10..11]
 a6(r135): [10..11]
 a7(r105): [12..13]
 a8(r98): [12..27]
 a9(r104): [14..15]
 a10(r103): [16..17]
 a11(r102): [18..19]
 a12(r101): [20..21]
 a13(r100): [20..23]
 a14(r134): [22..23]
 a15(r99): [24..25]
 a16(r133): [24..25]
 a17(r132): [26..27]
 a18(r131): [28..29]
 a19(r97): [28..29]
 a20(r96): [30..31]
 a21(r130): [32..33]
 a22(r129): [34..35]
 a23(r95): [34..35]
 a24(r94): [36..37]
 a25(r93): [36..39]
 a26(r128): [38..39]
 a27(r127): [40..41]
 a28(r126): [42..43]
 a29(r92): [44..45]
 a30(r125): [46..47]
 a31(r124): [48..49]
 a32(r123): [50..51]
 a33(r122): [90..91]
 a34(r121): [52..53]
 a35(r120): [88..89]
 a36(r119): [54..55]
 a37(r118): [56..57]
 a38(r91): [57..59]
 a39(r117): [58..59]
 a40(r90): [60..61]
 a41(r116): [62..63]
 a42(r115): [64..65]
 a43(r89): [66..67]
 a44(r88): [68..69]
 a45(r87): [69..71]
 a46(r86): [70..73]
 a47(r114): [72..73]
 a48(r113): [74..75]
 a49(r85): [76..77]
 a50(r112): [78..79]
 a51(r84): [80..81]
 a52(r111): [82..83]
 a53(r83): [84..85]
 a54(r110): [86..87]
  pref0:a0(r109)<-hr0@1500
  pref1:a2(r82)<-hr3@1500
  regions=1, blocks=18, points=92
    allocnos=55 (big 0), copies=0, conflicts=0, ranges=57
Disposition:
    2:r82  l0     3   53:r83  l0     0   51:r84  l0     0   49:r85  l0     0
   46:r86  l0     1   45:r87  l0     2   44:r88  l0     0   43:r89  l0     0
   40:r90  l0     0   38:r91  l0     1   29:r92  l0     0   25:r93  l0     1
   24:r94  l0     0   23:r95  l0     1   20:r96  l0     0   19:r97  l0     1
    8:r98  l0     0   15:r99  l0     1   13:r100 l0     2   12:r101 l0     1
   11:r102 l0     1   10:r103 l0     1    9:r104 l0     1    7:r105 l0     1
    5:r106 l0     0    3:r107 l0     0    1:r108 l0     0    0:r109 l0     0
   54:r110 l0     0   52:r111 l0     0   50:r112 l0     0   48:r113 l0     0
   47:r114 l0     0   42:r115 l0     0   41:r116 l0     0   39:r117 l0     0
   37:r118 l0     0   36:r119 l0     0   35:r120 l0     0   34:r121 l0     0
   33:r122 l0     0   32:r123 l0     0   31:r124 l0     0   30:r125 l0     0
   28:r126 l0     0   27:r127 l0     0   26:r128 l0     0   22:r129 l0     0
   21:r130 l0     0   18:r131 l0     0   17:r132 l0     1   16:r133 l0     2
   14:r134 l0     1    6:r135 l0     1    4:r136 l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


read_pipe

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r3={3d,3u} r6={1d,17u} r7={14d,42u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,36u,3e} r17={33d,6u} r18={4d} r19={1d,39u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,2u} r99={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,2u} r107={1d,1u} r108={2d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 593{385d,205u,3e} in 107{103 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 156 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 156 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 156 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 148 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [11 read+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":13:22 75 {*movsi_internal}
     (nil))
(jump_insn 148 5 149 2 (set (pc)
        (label_ref 123)) "fs/pipe.c":15:11 807 {jump}
     (nil)
 -> 123)
(barrier 149 148 125)
(code_label 125 149 8 3 15 (nil) [1 uses])
(note 8 125 150 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 150 8 151 3 (set (pc)
        (label_ref 36)) "fs/pipe.c":16:15 807 {jump}
     (nil)
 -> 36)
(barrier 151 150 46)
(code_label 46 151 11 4 10 (nil) [1 uses])
(note 11 46 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":17:13 75 {*movsi_internal}
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 110)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":17:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 14 13 15 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":17:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 15 14 16 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/pipe.c":17:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 16 15 17 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/pipe.c":17:13 75 {*movsi_internal}
     (nil))
(call_insn 17 16 18 4 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x71a46b338400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":17:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":17:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 19 18 20 4 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":18:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 111)
                (const_int 48 [0x30])) [2 inode_43(D)->i_count+0 S2 A32])) "fs/pipe.c":18:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 84 [ _2 ])
            (const_int 2 [0x2]))) "fs/pipe.c":18:16 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/pipe.c":18:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 152 5 (set (reg:SI 108 [ _34 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [11 read+0 S4 A32])) "fs/pipe.c":19:24 75 {*movsi_internal}
     (nil))
(jump_insn 152 24 153 5 (set (pc)
        (label_ref 139)) "fs/pipe.c":19:24 807 {jump}
     (nil)
 -> 139)
(barrier 153 152 27)
(code_label 27 153 28 6 8 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":20:13 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:SI 85 [ _3 ])
                (plus:SI (reg/f:SI 112)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":20:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 31 30 32 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":20:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 32 31 33 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 85 [ _3 ])) "fs/pipe.c":20:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 33 32 34 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/pipe.c":20:13 75 {*movsi_internal}
     (nil))
(call_insn 34 33 35 6 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x71a46b338000 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":20:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 36 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":20:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 36 35 37 7 7 (nil) [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":16:25 75 {*movsi_internal}
     (nil))
(insn 39 38 40 7 (set (reg:HI 86 [ _4 ])
        (mem:HI (plus:SI (reg/f:SI 113)
                (const_int 14 [0xe])) [2 inode_43(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":16:25 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 40 39 41 7 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":16:25 75 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 114)
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":16:25 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 42 41 43 7 (parallel [
            (set (reg:HI 88 [ _6 ])
                (minus:HI (reg:HI 86 [ _4 ])
                    (reg:HI 87 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":16:25 281 {*subhi_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (expr_list:REG_DEAD (reg:HI 86 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 43 42 44 7 (set (reg:SI 89 [ _7 ])
        (zero_extend:SI (reg:HI 88 [ _6 ]))) "fs/pipe.c":16:25 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(insn 44 43 45 7 (parallel [
            (set (reg:SI 115)
                (and:SI (reg:SI 89 [ _7 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":16:23 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 47 7 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
        (reg:SI 115)) "fs/pipe.c":16:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 47 45 48 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":16:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "fs/pipe.c":16:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 46)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":22:29 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":22:29 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 52 51 53 8 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:HI 90 [ _8 ]))) "fs/pipe.c":22:29 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 53 52 54 8 (set (reg:SI 117)
        (const_int 4096 [0x1000])) "fs/pipe.c":22:15 75 {*movsi_internal}
     (nil))
(insn 54 53 55 8 (parallel [
            (set (reg:SI 118)
                (minus:SI (reg:SI 117)
                    (reg:SI 91 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":22:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 54 56 8 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 118)) "fs/pipe.c":22:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 56 55 57 8 (set (reg:SI 119)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":23:12 75 {*movsi_internal}
     (nil))
(insn 57 56 58 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 119)
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [11 count+0 S4 A32]))) "fs/pipe.c":23:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "fs/pipe.c":23:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 62)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg:SI 120)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [11 count+0 S4 A32])) "fs/pipe.c":24:19 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 120)) "fs/pipe.c":24:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 120)
        (nil)))
(code_label 62 61 63 10 11 (nil) [1 uses])
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg:SI 121)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":25:12 75 {*movsi_internal}
     (nil))
(insn 65 64 66 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 121)
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32]))) "fs/pipe.c":25:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(jump_insn 66 65 67 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/pipe.c":25:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 70)
(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 11 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])) "fs/pipe.c":26:19 75 {*movsi_internal}
     (nil))
(insn 69 68 70 11 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 122)) "fs/pipe.c":26:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(code_label 70 69 71 12 12 (nil) [1 uses])
(note 71 70 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg:SI 123)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":27:15 75 {*movsi_internal}
     (nil))
(insn 73 72 74 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [11 count+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [11 count+0 S4 A32])
                    (reg:SI 123)))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":27:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 123)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 75 12 (set (reg:SI 124)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":28:15 75 {*movsi_internal}
     (nil))
(insn 75 74 76 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [11 read+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [11 read+0 S4 A32])
                    (reg:SI 124)))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":28:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 12 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":29:16 75 {*movsi_internal}
     (nil))
(insn 77 76 78 12 (set (reg:HI 92 [ _10 ])
        (mem:HI (plus:SI (reg/f:SI 125)
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":29:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 78 77 79 12 (set (reg:SI 126)
        (zero_extend:SI (reg:HI 92 [ _10 ]))) "fs/pipe.c":29:14 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (nil)))
(insn 79 78 80 12 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
        (reg:SI 126)) "fs/pipe.c":29:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 80 79 81 12 (set (reg/f:SI 127)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":30:27 75 {*movsi_internal}
     (nil))
(insn 81 80 82 12 (set (reg:HI 93 [ _11 ])
        (mem:HI (plus:SI (reg/f:SI 127)
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":30:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 82 81 83 12 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":30:27 75 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (reg:HI 94 [ _12 ])
        (subreg:HI (reg:SI 128) 0)) "fs/pipe.c":30:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 84 83 85 12 (parallel [
            (set (reg:HI 95 [ _13 ])
                (plus:HI (reg:HI 93 [ _11 ])
                    (reg:HI 94 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":30:27 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
        (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 85 84 86 12 (set (reg/f:SI 129)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":30:27 75 {*movsi_internal}
     (nil))
(insn 86 85 87 12 (set (mem:HI (plus:SI (reg/f:SI 129)
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])
        (reg:HI 95 [ _13 ])) "fs/pipe.c":30:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
            (nil))))
(insn 87 86 88 12 (set (reg/f:SI 130)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":31:27 75 {*movsi_internal}
     (nil))
(insn 88 87 89 12 (set (reg:HI 96 [ _14 ])
        (mem:HI (plus:SI (reg/f:SI 130)
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":31:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 89 88 90 12 (parallel [
            (set (reg:HI 97 [ _15 ])
                (and:HI (reg:HI 96 [ _14 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":31:27 489 {*andhi_1}
     (expr_list:REG_DEAD (reg:HI 96 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 12 (set (reg/f:SI 131)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":31:27 75 {*movsi_internal}
     (nil))
(insn 91 90 154 12 (set (mem:HI (plus:SI (reg/f:SI 131)
                (const_int 16 [0x10])) [2 inode_43(D)->i_zone[1]+0 S2 A32])
        (reg:HI 97 [ _15 ])) "fs/pipe.c":31:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (expr_list:REG_DEAD (reg:HI 97 [ _15 ])
            (nil))))
(jump_insn 154 91 155 12 (set (pc)
        (label_ref 113)) "fs/pipe.c":32:15 807 {jump}
     (nil)
 -> 113)
(barrier 155 154 118)
(code_label 118 155 94 13 14 (nil) [1 uses])
(note 94 118 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg/f:SI 98 [ buf.0_16 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [16 buf+0 S4 A32])) "fs/pipe.c":33:13 75 {*movsi_internal}
     (nil))
(insn 96 95 97 13 (parallel [
            (set (reg:SI 132)
                (plus:SI (reg/f:SI 98 [ buf.0_16 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 97 96 98 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [16 buf+0 S4 A32])
        (reg:SI 132)) "fs/pipe.c":33:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 98 97 99 13 (set (reg:SI 99 [ size.1_17 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])) "fs/pipe.c":33:53 75 {*movsi_internal}
     (nil))
(insn 99 98 100 13 (parallel [
            (set (reg:SI 133)
                (plus:SI (reg:SI 99 [ size.1_17 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:53 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 101 13 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
        (reg:SI 133)) "fs/pipe.c":33:53 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 101 100 102 13 (set (reg:SI 100 [ size.2_18 ])
        (reg:SI 99 [ size.1_17 ])) "fs/pipe.c":33:48 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ size.1_17 ])
        (nil)))
(insn 102 101 103 13 (set (reg/f:SI 134)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":33:39 75 {*movsi_internal}
     (nil))
(insn 103 102 104 13 (set (reg:SI 101 [ _19 ])
        (mem:SI (plus:SI (reg/f:SI 134)
                (const_int 4 [0x4])) [3 inode_43(D)->i_size+0 S4 A32])) "fs/pipe.c":33:39 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 104 103 105 13 (parallel [
            (set (reg:SI 102 [ _20 ])
                (plus:SI (reg:SI 100 [ size.2_18 ])
                    (reg:SI 101 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:48 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_DEAD (reg:SI 100 [ size.2_18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 105 104 106 13 (set (reg/f:SI 103 [ _21 ])
        (reg:SI 102 [ _20 ])) "fs/pipe.c":33:48 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (nil)))
(insn 106 105 107 13 (set (reg:QI 104 [ _22 ])
        (mem:QI (reg/f:SI 103 [ _21 ]) [0 *_21+0 S1 A8])) "fs/pipe.c":33:48 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103 [ _21 ])
        (nil)))
(insn 107 106 108 13 (set (reg:SI 105 [ _23 ])
        (sign_extend:SI (reg:QI 104 [ _22 ]))) "fs/pipe.c":33:13 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 104 [ _22 ])
        (nil)))
(insn 108 107 109 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 109 108 110 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 98 [ buf.0_16 ])) "fs/pipe.c":33:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 98 [ buf.0_16 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 110 109 111 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 105 [ _23 ])) "fs/pipe.c":33:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 111 110 112 13 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x71a46b338f00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":33:13 812 {*call}
     (nil)
    (nil))
(insn 112 111 113 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":33:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 113 112 114 14 13 (nil) [1 uses])
(note 114 113 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 14 (set (reg:SI 106 [ chars.3_24 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":32:21 75 {*movsi_internal}
     (nil))
(insn 116 115 117 14 (parallel [
            (set (reg:SI 135)
                (plus:SI (reg:SI 106 [ chars.3_24 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":32:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 117 116 121 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 135)) "fs/pipe.c":32:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 121 117 122 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 106 [ chars.3_24 ])
            (const_int 0 [0]))) "fs/pipe.c":32:24 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 106 [ chars.3_24 ])
        (nil)))
(jump_insn 122 121 123 14 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "fs/pipe.c":32:24 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 118)
(code_label 123 122 124 15 6 (nil) [1 uses])
(note 124 123 128 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 128 124 129 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [11 count+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":15:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 129 128 130 15 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "fs/pipe.c":15:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 125)
(note 130 129 131 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 16 (set (reg/f:SI 136)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":35:5 75 {*movsi_internal}
     (nil))
(insn 132 131 133 16 (parallel [
            (set (reg/f:SI 107 [ _25 ])
                (plus:SI (reg/f:SI 136)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":35:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 133 132 134 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":35:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 134 133 135 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 107 [ _25 ])) "fs/pipe.c":35:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 107 [ _25 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 135 134 136 16 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/pipe.c":35:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 136 135 137 16 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x71a46b338400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":35:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 137 136 138 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":35:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 138 137 139 16 (set (reg:SI 108 [ _34 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [11 read+0 S4 A32])) "fs/pipe.c":36:12 75 {*movsi_internal}
     (nil))
(code_label 139 138 140 17 9 (nil) [1 uses])
(note 140 139 141 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 145 17 (set (reg:SI 109 [ <retval> ])
        (reg:SI 108 [ _34 ])) "fs/pipe.c":37:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ _34 ])
        (nil)))
(insn 145 141 146 17 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) "fs/pipe.c":37:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109 [ <retval> ])
        (nil)))
(insn 146 145 0 17 (use (reg/i:SI 0 ax)) "fs/pipe.c":37:1 -1
     (nil))

;; Function write_pipe (write_pipe, funcdef_no=9, decl_uid=1180, cgraph_uid=10, symbol_order=9)

scanning new insn with uid = 176.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 20 n_edges 26 count 30 (  1.5)
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 1
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 15 14 12 13 10 11 9 8 3 4
;;
;; Loop 3
;;  header 16, latch 15
;;  depth 2, outer 1
;;  nodes: 16 15
;;
;; Loop 2
;;  header 9, latch 8
;;  depth 2, outer 1
;;  nodes: 9 8 4
;; 2 succs { 17 }
;; 3 succs { 9 }
;; 4 succs { 5 8 }
;; 5 succs { 6 7 }
;; 6 succs { 19 }
;; 7 succs { 19 }
;; 8 succs { 9 }
;; 9 succs { 4 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 17 }
;; 17 succs { 3 18 }
;; 18 succs { 19 }
;; 19 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a8 (r110,l0) best Q_REGS, allocno Q_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a2(r82,l0) costs: AREG:6000 DREG:6000 CREG:6000 BREG:6000 SIREG:6000 DIREG:6000 AD_REGS:6000 CLOBBERED_REGS:6000 Q_REGS:6000 NON_Q_REGS:6000 TLS_GOTBASE_REGS:6000 GENERAL_REGS:6000 MEM:36000
  a3(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a6(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a8(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a9(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a10(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a11(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a13(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a15(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a17(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a25(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a26(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a39(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a40(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a44(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a46(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a47(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a48(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a54(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a55(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a59(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a60(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a61(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 164(l0): point = 0
   Insn 163(l0): point = 2
   Insn 159(l0): point = 4
   Insn 156(l0): point = 7
   Insn 155(l0): point = 9
   Insn 154(l0): point = 11
   Insn 153(l0): point = 13
   Insn 152(l0): point = 15
   Insn 151(l0): point = 17
   Insn 150(l0): point = 19
   Insn 149(l0): point = 21
   Insn 172(l0): point = 24
   Insn 39(l0): point = 26
   Insn 170(l0): point = 29
   Insn 34(l0): point = 31
   Insn 32(l0): point = 34
   Insn 31(l0): point = 36
   Insn 30(l0): point = 38
   Insn 29(l0): point = 40
   Insn 28(l0): point = 42
   Insn 27(l0): point = 44
   Insn 26(l0): point = 46
   Insn 25(l0): point = 48
   Insn 24(l0): point = 50
   Insn 168(l0): point = 53
   Insn 147(l0): point = 56
   Insn 146(l0): point = 58
   Insn 140(l0): point = 61
   Insn 139(l0): point = 63
   Insn 135(l0): point = 65
   Insn 134(l0): point = 67
   Insn 133(l0): point = 69
   Insn 130(l0): point = 72
   Insn 129(l0): point = 74
   Insn 128(l0): point = 76
   Insn 127(l0): point = 78
   Insn 126(l0): point = 80
   Insn 125(l0): point = 82
   Insn 124(l0): point = 84
   Insn 123(l0): point = 86
   Insn 122(l0): point = 88
   Insn 121(l0): point = 90
   Insn 120(l0): point = 92
   Insn 119(l0): point = 94
   Insn 118(l0): point = 96
   Insn 117(l0): point = 98
   Insn 116(l0): point = 100
   Insn 115(l0): point = 102
   Insn 114(l0): point = 104
   Insn 113(l0): point = 106
   Insn 174(l0): point = 109
   Insn 109(l0): point = 111
   Insn 108(l0): point = 113
   Insn 107(l0): point = 115
   Insn 106(l0): point = 117
   Insn 105(l0): point = 119
   Insn 104(l0): point = 121
   Insn 103(l0): point = 123
   Insn 102(l0): point = 125
   Insn 101(l0): point = 127
   Insn 100(l0): point = 129
   Insn 99(l0): point = 131
   Insn 98(l0): point = 133
   Insn 97(l0): point = 135
   Insn 96(l0): point = 137
   Insn 95(l0): point = 139
   Insn 94(l0): point = 141
   Insn 93(l0): point = 143
   Insn 92(l0): point = 145
   Insn 91(l0): point = 147
   Insn 90(l0): point = 149
   Insn 84(l0): point = 152
   Insn 83(l0): point = 154
   Insn 82(l0): point = 156
   Insn 76(l0): point = 159
   Insn 75(l0): point = 161
   Insn 74(l0): point = 163
   Insn 73(l0): point = 165
   Insn 72(l0): point = 167
   Insn 71(l0): point = 170
   Insn 70(l0): point = 172
   Insn 69(l0): point = 174
   Insn 68(l0): point = 176
   Insn 66(l0): point = 179
   Insn 65(l0): point = 181
   Insn 63(l0): point = 183
   Insn 62(l0): point = 185
   Insn 61(l0): point = 187
   Insn 60(l0): point = 189
   Insn 59(l0): point = 191
   Insn 58(l0): point = 194
   Insn 57(l0): point = 196
   Insn 56(l0): point = 198
   Insn 55(l0): point = 200
   Insn 52(l0): point = 203
   Insn 51(l0): point = 205
   Insn 50(l0): point = 207
   Insn 49(l0): point = 209
   Insn 48(l0): point = 211
   Insn 47(l0): point = 213
   Insn 46(l0): point = 215
   Insn 22(l0): point = 218
   Insn 21(l0): point = 220
   Insn 20(l0): point = 222
   Insn 19(l0): point = 224
   Insn 18(l0): point = 226
   Insn 17(l0): point = 228
   Insn 16(l0): point = 230
   Insn 15(l0): point = 232
   Insn 14(l0): point = 234
   Insn 13(l0): point = 236
   Insn 12(l0): point = 238
   Insn 79(l0): point = 241
   Insn 78(l0): point = 243
   Insn 87(l0): point = 246
   Insn 86(l0): point = 248
   Insn 166(l0): point = 251
   Insn 5(l0): point = 253
   Insn 176(l0): point = 255
 a0(r114): [3..4]
 a1(r113): [29..31] [24..26] [5..7]
 a2(r82): [45..255] [14..23]
 a3(r112): [16..19]
 a4(r143): [20..21]
 a5(r111): [64..69]
 a6(r142): [66..67]
 a7(r109): [73..76]
 a8(r110): [73..74]
 a9(r104): [75..92]
 a10(r108): [77..78]
 a11(r107): [79..80]
 a12(r106): [79..84]
 a13(r141): [81..82]
 a14(r105): [85..90]
 a15(r140): [87..88]
 a16(r103): [99..106]
 a17(r139): [103..104]
 a18(r138): [112..113]
 a19(r102): [112..115]
 a20(r101): [116..117]
 a21(r137): [118..119]
 a22(r136): [122..123]
 a23(r100): [122..125]
 a24(r99): [126..127]
 a25(r98): [126..131]
 a26(r135): [128..129]
 a27(r134): [132..133]
 a28(r133): [136..137]
 a29(r97): [138..139]
 a30(r132): [140..141]
 a31(r131): [144..145]
 a32(r130): [148..149]
 a33(r129): [247..248]
 a34(r128): [155..156]
 a35(r127): [242..243]
 a36(r126): [162..163]
 a37(r125): [166..168]
 a38(r96): [168..172]
 a39(r124): [169..170]
 a40(r95): [173..174]
 a41(r123): [175..176]
 a42(r122): [184..185]
 a43(r94): [186..187]
 a44(r93): [188..189]
 a45(r92): [190..192]
 a46(r91): [192..194]
 a47(r90): [193..198]
 a48(r121): [195..196]
 a49(r120): [199..200]
 a50(r89): [210..213]
 a51(r119): [214..215]
 a52(r87): [39..42]
 a53(r88): [39..40]
 a54(r86): [41..46]
 a55(r118): [43..44]
 a56(r85): [47..48]
 a57(r117): [49..50]
 a58(r84): [221..222]
 a59(r116): [223..224]
 a60(r83): [233..236]
 a61(r115): [237..238]
Compressing live ranges: from 258 to 106 - 41%
Ranges after the compression:
 a0(r114): [0..1]
 a1(r113): [8..11] [2..3]
 a2(r82): [18..105] [4..7]
 a3(r112): [4..5]
 a4(r143): [6..7]
 a5(r111): [24..25]
 a6(r142): [24..25]
 a7(r109): [26..29]
 a8(r110): [26..27]
 a9(r104): [28..37]
 a10(r108): [30..31]
 a11(r107): [32..33]
 a12(r106): [32..35]
 a13(r141): [34..35]
 a14(r105): [36..37]
 a15(r140): [36..37]
 a16(r103): [38..39]
 a17(r139): [38..39]
 a18(r138): [40..41]
 a19(r102): [40..41]
 a20(r101): [42..43]
 a21(r137): [44..45]
 a22(r136): [46..47]
 a23(r100): [46..47]
 a24(r99): [48..49]
 a25(r98): [48..51]
 a26(r135): [50..51]
 a27(r134): [52..53]
 a28(r133): [54..55]
 a29(r97): [56..57]
 a30(r132): [58..59]
 a31(r131): [60..61]
 a32(r130): [62..63]
 a33(r129): [104..105]
 a34(r128): [64..65]
 a35(r127): [102..103]
 a36(r126): [66..67]
 a37(r125): [68..69]
 a38(r96): [69..71]
 a39(r124): [70..71]
 a40(r95): [72..73]
 a41(r123): [74..75]
 a42(r122): [76..77]
 a43(r94): [78..79]
 a44(r93): [80..81]
 a45(r92): [82..83]
 a46(r91): [83..85]
 a47(r90): [84..87]
 a48(r121): [86..87]
 a49(r120): [88..89]
 a50(r89): [90..91]
 a51(r119): [92..93]
 a52(r87): [12..15]
 a53(r88): [12..13]
 a54(r86): [14..19]
 a55(r118): [16..17]
 a56(r85): [20..21]
 a57(r117): [22..23]
 a58(r84): [94..95]
 a59(r116): [96..97]
 a60(r83): [98..99]
 a61(r115): [100..101]
  pref0:a0(r114)<-hr0@1500
  pref1:a9(r104)<-hr0@1500
  pref2:a2(r82)<-hr3@1500
  regions=1, blocks=20, points=106
    allocnos=62 (big 0), copies=0, conflicts=0, ranges=64
Disposition:
    2:r82  l0     3   60:r83  l0     0   58:r84  l0     0   56:r85  l0     0
   54:r86  l0     1   52:r87  l0     0   53:r88  l0     1   50:r89  l0     0
   47:r90  l0     1   46:r91  l0     2   45:r92  l0     0   44:r93  l0     0
   43:r94  l0     0   40:r95  l0     0   38:r96  l0     1   29:r97  l0     0
   25:r98  l0     1   24:r99  l0     0   23:r100 l0     1   20:r101 l0     0
   19:r102 l0     1   16:r103 l0     0    9:r104 l0     2   14:r105 l0     0
   12:r106 l0     1   11:r107 l0     0   10:r108 l0     0    7:r109 l0     0
    8:r110 l0     1    5:r111 l0     0    3:r112 l0     0    1:r113 l0     0
    0:r114 l0     0   61:r115 l0     0   59:r116 l0     0   57:r117 l0     0
   55:r118 l0     0   51:r119 l0     0   49:r120 l0     0   48:r121 l0     0
   42:r122 l0     0   41:r123 l0     0   39:r124 l0     0   37:r125 l0     0
   36:r126 l0     0   35:r127 l0     0   34:r128 l0     0   33:r129 l0     0
   32:r130 l0     0   31:r131 l0     0   30:r132 l0     0   28:r133 l0     0
   27:r134 l0     0   26:r135 l0     0   22:r136 l0     0   21:r137 l0     0
   18:r138 l0     0   17:r139 l0     1   15:r140 l0     1   13:r141 l0     0
    6:r142 l0     1    4:r143 l0     0
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


write_pipe

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,3u} r1={5d} r2={5d} r3={3d,3u} r6={1d,19u} r7={13d,43u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,38u,3e} r17={35d,7u} r18={4d} r19={1d,42u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,5u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,2u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,2u} r112={1d,1u} r113={3d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 621{394d,224u,3e} in 119{115 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 176 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 176 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 176 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 166 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [11 written+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":41:22 75 {*movsi_internal}
     (nil))
(jump_insn 166 5 167 2 (set (pc)
        (label_ref 141)) "fs/pipe.c":43:11 807 {jump}
     (nil)
 -> 141)
(barrier 167 166 143)
(code_label 143 167 8 3 28 (nil) [1 uses])
(note 8 143 168 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 168 8 169 3 (set (pc)
        (label_ref 53)) "fs/pipe.c":44:15 807 {jump}
     (nil)
 -> 53)
(barrier 169 168 64)
(code_label 64 169 11 4 23 (nil) [1 uses])
(note 11 64 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":45:13 75 {*movsi_internal}
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 115)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":45:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 14 13 15 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":45:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 15 14 16 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/pipe.c":45:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 16 15 17 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/pipe.c":45:13 75 {*movsi_internal}
     (nil))
(call_insn 17 16 18 4 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x71a46b338400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":45:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":45:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 19 18 20 4 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":46:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 48 [0x30])) [2 inode_49(D)->i_count+0 S2 A32])) "fs/pipe.c":46:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 84 [ _2 ])
            (const_int 2 [0x2]))) "fs/pipe.c":46:16 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/pipe.c":46:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 117)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x71a46b32f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 85 [ current.4_3 ])
        (mem/f/c:SI (reg/f:SI 117) [4 current+0 S4 A32])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 26 25 27 5 (set (reg:SI 86 [ _4 ])
        (mem:SI (plus:SI (reg/f:SI 85 [ current.4_3 ])
                (const_int 12 [0xc])) [3 current.4_3->signal+0 S4 A32])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ current.4_3 ])
        (nil)))
(insn 27 26 28 5 (set (reg/f:SI 118)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x71a46b32f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 28 27 29 5 (set (reg/f:SI 87 [ current.5_5 ])
        (mem/f/c:SI (reg/f:SI 118) [4 current+0 S4 A32])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 29 28 30 5 (parallel [
            (set (reg:SI 88 [ _6 ])
                (ior:SI (reg:SI 86 [ _4 ])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":47:33 520 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 5 (set (mem:SI (plus:SI (reg/f:SI 87 [ current.5_5 ])
                (const_int 12 [0xc])) [3 current.5_5->signal+0 S4 A32])
        (reg:SI 88 [ _6 ])) "fs/pipe.c":47:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_DEAD (reg/f:SI 87 [ current.5_5 ])
            (nil))))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [11 written+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":48:42 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "fs/pipe.c":48:42 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 37)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 170 6 (set (reg:SI 113 [ iftmp.6_40 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [11 written+0 S4 A32])) "fs/pipe.c":48:42 75 {*movsi_internal}
     (nil))
(jump_insn 170 34 171 6 (set (pc)
        (label_ref 157)) "fs/pipe.c":48:42 807 {jump}
     (nil)
 -> 157)
(barrier 171 170 37)
(code_label 37 171 38 7 20 (nil) [1 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 172 7 (set (reg:SI 113 [ iftmp.6_40 ])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":48:42 75 {*movsi_internal}
     (nil))
(jump_insn 172 39 173 7 (set (pc)
        (label_ref 157)) "fs/pipe.c":48:42 807 {jump}
     (nil)
 -> 157)
(barrier 173 172 44)
(code_label 44 173 45 8 19 (nil) [1 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":50:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (parallel [
            (set (reg/f:SI 89 [ _7 ])
                (plus:SI (reg/f:SI 119)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":50:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 48 47 49 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":50:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 49 48 50 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 89 [ _7 ])) "fs/pipe.c":50:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 50 49 51 8 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/pipe.c":50:13 75 {*movsi_internal}
     (nil))
(call_insn 51 50 52 8 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x71a46b338000 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":50:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 52 51 53 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":50:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 53 52 54 9 18 (nil) [1 uses])
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":44:43 75 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 120)
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":44:43 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 57 56 58 9 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":44:43 75 {*movsi_internal}
     (nil))
(insn 58 57 59 9 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 121)
                (const_int 16 [0x10])) [2 inode_49(D)->i_zone[1]+0 S2 A32])) "fs/pipe.c":44:43 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 59 58 60 9 (parallel [
            (set (reg:HI 92 [ _10 ])
                (minus:HI (reg:HI 90 [ _8 ])
                    (reg:HI 91 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":44:43 281 {*subhi_1}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 60 59 61 9 (set (reg:SI 93 [ _11 ])
        (zero_extend:SI (reg:HI 92 [ _10 ]))) "fs/pipe.c":44:43 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (nil)))
(insn 61 60 62 9 (set (reg:SI 94 [ _12 ])
        (not:SI (reg:SI 93 [ _11 ]))) "fs/pipe.c":44:41 632 {*one_cmplsi2_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
        (nil)))
(insn 62 61 63 9 (parallel [
            (set (reg:SI 122)
                (and:SI (reg:SI 94 [ _12 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":44:23 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 63 62 65 9 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
        (reg:SI 122)) "fs/pipe.c":44:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 65 63 66 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":44:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 66 65 67 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "fs/pipe.c":44:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 10 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":52:29 75 {*movsi_internal}
     (nil))
(insn 69 68 70 10 (set (reg:HI 95 [ _13 ])
        (mem:HI (plus:SI (reg/f:SI 123)
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":52:29 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 70 69 71 10 (set (reg:SI 96 [ _14 ])
        (zero_extend:SI (reg:HI 95 [ _13 ]))) "fs/pipe.c":52:29 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
        (nil)))
(insn 71 70 72 10 (set (reg:SI 124)
        (const_int 4096 [0x1000])) "fs/pipe.c":52:15 75 {*movsi_internal}
     (nil))
(insn 72 71 73 10 (parallel [
            (set (reg:SI 125)
                (minus:SI (reg:SI 124)
                    (reg:SI 96 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":52:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 73 72 74 10 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 125)) "fs/pipe.c":52:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 74 73 75 10 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":53:12 75 {*movsi_internal}
     (nil))
(insn 75 74 76 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 126)
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [11 count+0 S4 A32]))) "fs/pipe.c":53:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(jump_insn 76 75 77 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/pipe.c":53:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 80)
(note 77 76 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 11 (set (reg:SI 127)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [11 count+0 S4 A32])) "fs/pipe.c":54:19 75 {*movsi_internal}
     (nil))
(insn 79 78 80 11 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 127)) "fs/pipe.c":54:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 127)
        (nil)))
(code_label 80 79 81 12 24 (nil) [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":55:12 75 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 128)
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32]))) "fs/pipe.c":55:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(jump_insn 84 83 85 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "fs/pipe.c":55:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 88)
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 13 (set (reg:SI 129)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])) "fs/pipe.c":56:19 75 {*movsi_internal}
     (nil))
(insn 87 86 88 13 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 129)) "fs/pipe.c":56:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(code_label 88 87 89 14 25 (nil) [1 uses])
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 14 (set (reg:SI 130)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":57:15 75 {*movsi_internal}
     (nil))
(insn 91 90 92 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 8 [0x8])) [11 count+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 8 [0x8])) [11 count+0 S4 A32])
                    (reg:SI 130)))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":57:15 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 130)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 92 91 93 14 (set (reg:SI 131)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":58:17 75 {*movsi_internal}
     (nil))
(insn 93 92 94 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [11 written+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [11 written+0 S4 A32])
                    (reg:SI 131)))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":58:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 94 93 95 14 (set (reg/f:SI 132)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":59:16 75 {*movsi_internal}
     (nil))
(insn 95 94 96 14 (set (reg:HI 97 [ _15 ])
        (mem:HI (plus:SI (reg/f:SI 132)
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":59:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (nil)))
(insn 96 95 97 14 (set (reg:SI 133)
        (zero_extend:SI (reg:HI 97 [ _15 ]))) "fs/pipe.c":59:14 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 97 [ _15 ])
        (nil)))
(insn 97 96 98 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
        (reg:SI 133)) "fs/pipe.c":59:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 98 97 99 14 (set (reg/f:SI 134)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":60:27 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 98 [ _16 ])
        (mem:HI (plus:SI (reg/f:SI 134)
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":60:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 100 99 101 14 (set (reg:SI 135)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":60:27 75 {*movsi_internal}
     (nil))
(insn 101 100 102 14 (set (reg:HI 99 [ _17 ])
        (subreg:HI (reg:SI 135) 0)) "fs/pipe.c":60:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 102 101 103 14 (parallel [
            (set (reg:HI 100 [ _18 ])
                (plus:HI (reg:HI 98 [ _16 ])
                    (reg:HI 99 [ _17 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":60:27 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 99 [ _17 ])
        (expr_list:REG_DEAD (reg:HI 98 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 103 102 104 14 (set (reg/f:SI 136)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":60:27 75 {*movsi_internal}
     (nil))
(insn 104 103 105 14 (set (mem:HI (plus:SI (reg/f:SI 136)
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])
        (reg:HI 100 [ _18 ])) "fs/pipe.c":60:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
            (nil))))
(insn 105 104 106 14 (set (reg/f:SI 137)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":61:27 75 {*movsi_internal}
     (nil))
(insn 106 105 107 14 (set (reg:HI 101 [ _19 ])
        (mem:HI (plus:SI (reg/f:SI 137)
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])) "fs/pipe.c":61:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))
(insn 107 106 108 14 (parallel [
            (set (reg:HI 102 [ _20 ])
                (and:HI (reg:HI 101 [ _19 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":61:27 489 {*andhi_1}
     (expr_list:REG_DEAD (reg:HI 101 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 14 (set (reg/f:SI 138)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":61:27 75 {*movsi_internal}
     (nil))
(insn 109 108 174 14 (set (mem:HI (plus:SI (reg/f:SI 138)
                (const_int 14 [0xe])) [2 inode_49(D)->i_zone[0]+0 S2 A16])
        (reg:HI 102 [ _20 ])) "fs/pipe.c":61:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_DEAD (reg:HI 102 [ _20 ])
            (nil))))
(jump_insn 174 109 175 14 (set (pc)
        (label_ref 131)) "fs/pipe.c":62:15 807 {jump}
     (nil)
 -> 131)
(barrier 175 174 136)
(code_label 136 175 112 15 27 (nil) [1 uses])
(note 112 136 113 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 15 (set (reg/f:SI 103 [ buf.7_21 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [16 buf+0 S4 A32])) "fs/pipe.c":63:47 75 {*movsi_internal}
     (nil))
(insn 114 113 115 15 (parallel [
            (set (reg:SI 139)
                (plus:SI (reg/f:SI 103 [ buf.7_21 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:47 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 115 114 116 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [16 buf+0 S4 A32])
        (reg:SI 139)) "fs/pipe.c":63:47 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 116 115 117 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:47 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 117 116 118 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 103 [ buf.7_21 ])) "fs/pipe.c":63:47 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 103 [ buf.7_21 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 118 117 119 15 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x71a46b338d00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/pipe.c":63:47 823 {*call_value}
     (nil)
    (nil))
(insn 119 118 120 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:47 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 120 119 121 15 (set (reg:QI 104 [ _22 ])
        (reg:QI 0 ax)) "fs/pipe.c":63:47 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 121 120 122 15 (set (reg:SI 105 [ size.8_23 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])) "fs/pipe.c":63:41 75 {*movsi_internal}
     (nil))
(insn 122 121 123 15 (parallel [
            (set (reg:SI 140)
                (plus:SI (reg:SI 105 [ size.8_23 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:41 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 123 122 124 15 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 size+0 S4 A32])
        (reg:SI 140)) "fs/pipe.c":63:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 124 123 125 15 (set (reg:SI 106 [ size.9_24 ])
        (reg:SI 105 [ size.8_23 ])) "fs/pipe.c":63:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ size.8_23 ])
        (nil)))
(insn 125 124 126 15 (set (reg/f:SI 141)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":63:27 75 {*movsi_internal}
     (nil))
(insn 126 125 127 15 (set (reg:SI 107 [ _25 ])
        (mem:SI (plus:SI (reg/f:SI 141)
                (const_int 4 [0x4])) [3 inode_49(D)->i_size+0 S4 A32])) "fs/pipe.c":63:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))
(insn 127 126 128 15 (parallel [
            (set (reg:SI 108 [ _26 ])
                (plus:SI (reg:SI 106 [ size.9_24 ])
                    (reg:SI 107 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":63:36 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ _25 ])
        (expr_list:REG_DEAD (reg:SI 106 [ size.9_24 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 128 127 129 15 (set (reg/f:SI 109 [ _27 ])
        (reg:SI 108 [ _26 ])) "fs/pipe.c":63:36 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ _26 ])
        (nil)))
(insn 129 128 130 15 (set (reg:QI 110 [ _28 ])
        (reg:QI 104 [ _22 ])) "fs/pipe.c":63:47 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ _22 ])
        (nil)))
(insn 130 129 131 15 (set (mem:QI (reg/f:SI 109 [ _27 ]) [0 *_27+0 S1 A8])
        (reg:QI 110 [ _28 ])) "fs/pipe.c":63:45 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 110 [ _28 ])
        (expr_list:REG_DEAD (reg/f:SI 109 [ _27 ])
            (nil))))
(code_label 131 130 132 16 26 (nil) [1 uses])
(note 132 131 133 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 16 (set (reg:SI 111 [ chars.10_29 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])) "fs/pipe.c":62:21 75 {*movsi_internal}
     (nil))
(insn 134 133 135 16 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 111 [ chars.10_29 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":62:21 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 135 134 139 16 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 chars+0 S4 A32])
        (reg:SI 142)) "fs/pipe.c":62:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
(insn 139 135 140 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 111 [ chars.10_29 ])
            (const_int 0 [0]))) "fs/pipe.c":62:24 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 111 [ chars.10_29 ])
        (nil)))
(jump_insn 140 139 141 16 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "fs/pipe.c":62:24 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 136)
(code_label 141 140 142 17 17 (nil) [1 uses])
(note 142 141 146 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 146 142 147 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [11 count+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":43:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 147 146 148 17 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "fs/pipe.c":43:18 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 143)
(note 148 147 149 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 18 (set (reg/f:SI 143)
        (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])) "fs/pipe.c":65:5 75 {*movsi_internal}
     (nil))
(insn 150 149 151 18 (parallel [
            (set (reg/f:SI 112 [ _30 ])
                (plus:SI (reg/f:SI 143)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":65:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [6 inode+0 S4 A32])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 151 150 152 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":65:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 152 151 153 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (reg/f:SI 112 [ _30 ])) "fs/pipe.c":65:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 112 [ _30 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 153 152 154 18 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/pipe.c":65:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 154 153 155 18 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x71a46b338400 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":65:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 155 154 156 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":65:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 156 155 157 18 (set (reg:SI 113 [ iftmp.6_40 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [11 written+0 S4 A32])) "fs/pipe.c":66:12 75 {*movsi_internal}
     (nil))
(code_label 157 156 158 19 22 (nil) [2 uses])
(note 158 157 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 163 19 (set (reg:SI 114 [ <retval> ])
        (reg:SI 113 [ iftmp.6_40 ])) "fs/pipe.c":67:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ iftmp.6_40 ])
        (nil)))
(insn 163 159 164 19 (set (reg/i:SI 0 ax)
        (reg:SI 114 [ <retval> ])) "fs/pipe.c":67:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114 [ <retval> ])
        (nil)))
(insn 164 163 0 19 (use (reg/i:SI 0 ax)) "fs/pipe.c":67:1 -1
     (nil))

;; Function sys_pipe (sys_pipe, funcdef_no=10, decl_uid=1393, cgraph_uid=11, symbol_order=10)

scanning new insn with uid = 215.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 26 n_edges 36 count 32 (  1.2)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 2
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 17
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4 7
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 3 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 25 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 13 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 25 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:9000
  a2(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a3(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a7(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a13(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a16(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a20(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a22(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a25(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a27(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:54000
  a29(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a32(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a35(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a41(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a52(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a54(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a55(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a56(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a57(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:23000
  a58(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a59(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a60(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a61(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a62(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a64(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a66(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a67(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a68(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a69(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 203(l0): point = 0
   Insn 202(l0): point = 2
   Insn 198(l0): point = 4
   Insn 193(l0): point = 7
   Insn 192(l0): point = 9
   Insn 191(l0): point = 11
   Insn 190(l0): point = 13
   Insn 189(l0): point = 15
   Insn 188(l0): point = 17
   Insn 187(l0): point = 19
   Insn 186(l0): point = 21
   Insn 185(l0): point = 23
   Insn 184(l0): point = 25
   Insn 183(l0): point = 27
   Insn 182(l0): point = 29
   Insn 181(l0): point = 31
   Insn 180(l0): point = 33
   Insn 179(l0): point = 35
   Insn 178(l0): point = 37
   Insn 177(l0): point = 39
   Insn 176(l0): point = 41
   Insn 175(l0): point = 43
   Insn 174(l0): point = 45
   Insn 173(l0): point = 47
   Insn 172(l0): point = 49
   Insn 171(l0): point = 51
   Insn 170(l0): point = 53
   Insn 169(l0): point = 55
   Insn 168(l0): point = 57
   Insn 167(l0): point = 59
   Insn 166(l0): point = 61
   Insn 165(l0): point = 63
   Insn 164(l0): point = 65
   Insn 163(l0): point = 67
   Insn 162(l0): point = 69
   Insn 213(l0): point = 72
   Insn 157(l0): point = 74
   Insn 156(l0): point = 76
   Insn 155(l0): point = 78
   Insn 154(l0): point = 80
   Insn 153(l0): point = 82
   Insn 152(l0): point = 84
   Insn 151(l0): point = 86
   Insn 150(l0): point = 88
   Insn 149(l0): point = 90
   Insn 148(l0): point = 92
   Insn 147(l0): point = 94
   Insn 146(l0): point = 96
   Insn 145(l0): point = 98
   Insn 144(l0): point = 100
   Insn 143(l0): point = 102
   Insn 142(l0): point = 104
   Insn 141(l0): point = 106
   Insn 140(l0): point = 108
   Insn 138(l0): point = 111
   Insn 137(l0): point = 113
   Insn 136(l0): point = 115
   Insn 135(l0): point = 117
   Insn 134(l0): point = 119
   Insn 133(l0): point = 121
   Insn 211(l0): point = 124
   Insn 128(l0): point = 126
   Insn 127(l0): point = 128
   Insn 126(l0): point = 130
   Insn 125(l0): point = 132
   Insn 124(l0): point = 134
   Insn 123(l0): point = 136
   Insn 121(l0): point = 139
   Insn 120(l0): point = 141
   Insn 115(l0): point = 144
   Insn 114(l0): point = 146
   Insn 113(l0): point = 148
   Insn 112(l0): point = 150
   Insn 111(l0): point = 152
   Insn 109(l0): point = 155
   Insn 108(l0): point = 157
   Insn 77(l0): point = 160
   Insn 76(l0): point = 162
   Insn 75(l0): point = 164
   Insn 74(l0): point = 166
   Insn 73(l0): point = 168
   Insn 72(l0): point = 170
   Insn 71(l0): point = 172
   Insn 105(l0): point = 175
   Insn 104(l0): point = 177
   Insn 99(l0): point = 180
   Insn 98(l0): point = 182
   Insn 93(l0): point = 185
   Insn 90(l0): point = 188
   Insn 89(l0): point = 190
   Insn 88(l0): point = 192
   Insn 87(l0): point = 194
   Insn 86(l0): point = 196
   Insn 85(l0): point = 198
   Insn 84(l0): point = 200
   Insn 83(l0): point = 202
   Insn 82(l0): point = 204
   Insn 81(l0): point = 206
   Insn 80(l0): point = 208
   Insn 79(l0): point = 210
   Insn 209(l0): point = 213
   Insn 67(l0): point = 215
   Insn 66(l0): point = 217
   Insn 207(l0): point = 220
   Insn 61(l0): point = 222
   Insn 59(l0): point = 225
   Insn 58(l0): point = 227
   Insn 53(l0): point = 230
   Insn 52(l0): point = 232
   Insn 50(l0): point = 235
   Insn 49(l0): point = 237
   Insn 17(l0): point = 240
   Insn 16(l0): point = 242
   Insn 15(l0): point = 244
   Insn 14(l0): point = 246
   Insn 13(l0): point = 248
   Insn 12(l0): point = 250
   Insn 11(l0): point = 252
   Insn 10(l0): point = 254
   Insn 46(l0): point = 257
   Insn 45(l0): point = 259
   Insn 40(l0): point = 262
   Insn 39(l0): point = 264
   Insn 34(l0): point = 267
   Insn 31(l0): point = 270
   Insn 30(l0): point = 272
   Insn 29(l0): point = 274
   Insn 28(l0): point = 276
   Insn 27(l0): point = 278
   Insn 26(l0): point = 280
   Insn 25(l0): point = 282
   Insn 24(l0): point = 284
   Insn 23(l0): point = 286
   Insn 22(l0): point = 288
   Insn 21(l0): point = 290
   Insn 20(l0): point = 292
   Insn 19(l0): point = 294
   Insn 205(l0): point = 297
   Insn 6(l0): point = 299
   Insn 5(l0): point = 301
   Insn 215(l0): point = 303
 a0(r124): [3..4]
 a1(r123): [220..222] [124..126] [72..74] [5..7]
 a2(r122): [14..19]
 a3(r120): [16..23]
 a4(r121): [20..21]
 a5(r151): [24..25]
 a6(r119): [32..37]
 a7(r118): [38..39]
 a8(r117): [42..43]
 a9(r116): [46..47]
 a10(r114): [50..53]
 a11(r115): [50..51]
 a12(r113): [52..57]
 a13(r111): [60..63]
 a14(r112): [60..61]
 a15(r110): [62..69]
 a16(r150): [66..67]
 a17(r108): [77..80]
 a18(r109): [77..78]
 a19(r107): [79..84]
 a20(r104): [87..96]
 a21(r149): [87..88]
 a22(r106): [87..90]
 a23(r105): [89..94]
 a24(r102): [91..106]
 a25(r148): [91..92]
 a26(r103): [93..104]
 a27(r147): [97..98]
 a28(r82): [225..303] [139..219] [99..123]
 a29(r146): [101..102]
 a30(r145): [107..108]
 a31(r144): [116..117]
 a32(r100): [129..132]
 a33(r101): [129..130]
 a34(r99): [131..136]
 a35(r97): [145..150]
 a36(r143): [145..146]
 a37(r98): [147..148]
 a38(r142): [151..152]
 a39(r94): [191..208]
 a40(r141): [191..192]
 a41(r96): [191..194]
 a42(r95): [193..198]
 a43(r140): [195..196]
 a44(r139): [199..200]
 a45(r137): [203..206]
 a46(r138): [203..204]
 a47(r136): [209..210]
 a48(r93): [163..164]
 a49(r92): [165..170]
 a50(r134): [165..166]
 a51(r135): [167..168]
 a52(r133): [171..172]
 a53(r91): [231..232]
 a54(r88): [271..276]
 a55(r90): [271..272]
 a56(r89): [273..274]
 a57(r86): [277..290]
 a58(r87): [279..280]
 a59(r131): [281..282]
 a60(r85): [281..292]
 a61(r132): [283..284]
 a62(r130): [287..288]
 a63(r84): [293..294]
 a64(r83): [243..244]
 a65(r129): [245..246]
 a66(r128): [247..248]
 a67(r127): [249..250]
 a68(r125): [249..254]
 a69(r126): [251..252]
Compressing live ranges: from 306 to 110 - 35%
Ranges after the compression:
 a0(r124): [0..1]
 a1(r123): [82..83] [50..51] [28..29] [2..3]
 a2(r122): [4..5]
 a3(r120): [4..7]
 a4(r121): [6..7]
 a5(r151): [8..9]
 a6(r119): [10..11]
 a7(r118): [12..13]
 a8(r117): [14..15]
 a9(r116): [16..17]
 a10(r114): [18..21]
 a11(r115): [18..19]
 a12(r113): [20..21]
 a13(r111): [22..25]
 a14(r112): [22..23]
 a15(r110): [24..27]
 a16(r150): [26..27]
 a17(r108): [30..33]
 a18(r109): [30..31]
 a19(r107): [32..33]
 a20(r104): [34..41]
 a21(r149): [34..35]
 a22(r106): [34..37]
 a23(r105): [36..41]
 a24(r102): [38..45]
 a25(r148): [38..39]
 a26(r103): [40..45]
 a27(r147): [42..43]
 a28(r82): [84..109] [56..81] [44..49]
 a29(r146): [44..45]
 a30(r145): [46..47]
 a31(r144): [48..49]
 a32(r100): [52..55]
 a33(r101): [52..53]
 a34(r99): [54..55]
 a35(r97): [56..59]
 a36(r143): [56..57]
 a37(r98): [58..59]
 a38(r142): [60..61]
 a39(r94): [70..79]
 a40(r141): [70..71]
 a41(r96): [70..73]
 a42(r95): [72..75]
 a43(r140): [74..75]
 a44(r139): [76..77]
 a45(r137): [78..79]
 a46(r138): [78..79]
 a47(r136): [80..81]
 a48(r93): [62..63]
 a49(r92): [64..67]
 a50(r134): [64..65]
 a51(r135): [66..67]
 a52(r133): [68..69]
 a53(r91): [84..85]
 a54(r88): [96..99]
 a55(r90): [96..97]
 a56(r89): [98..99]
 a57(r86): [100..107]
 a58(r87): [100..101]
 a59(r131): [102..103]
 a60(r85): [102..107]
 a61(r132): [104..105]
 a62(r130): [106..107]
 a63(r84): [108..109]
 a64(r83): [86..87]
 a65(r129): [88..89]
 a66(r128): [90..91]
 a67(r127): [92..93]
 a68(r125): [92..95]
 a69(r126): [94..95]
  pref0:a31(r144)<-hr0@1500
  pref1:a0(r124)<-hr0@1500
  regions=1, blocks=26, points=110
    allocnos=70 (big 0), copies=0, conflicts=0, ranges=75
Disposition:
   28:r82  l0     3   64:r83  l0     0   63:r84  l0     0   60:r85  l0     2
   57:r86  l0     0   58:r87  l0     1   54:r88  l0     0   56:r89  l0     1
   55:r90  l0     1   53:r91  l0     0   49:r92  l0     0   48:r93  l0     0
   39:r94  l0     0   42:r95  l0     2   41:r96  l0     1   35:r97  l0     0
   37:r98  l0     1   34:r99  l0     0   32:r100 l0     1   33:r101 l0     0
   24:r102 l0     0   26:r103 l0     1   20:r104 l0     2   23:r105 l0     3
   22:r106 l0     0   19:r107 l0     0   17:r108 l0     1   18:r109 l0     0
   15:r110 l0     0   13:r111 l0     1   14:r112 l0     0   12:r113 l0     0
   10:r114 l0     1   11:r115 l0     0    9:r116 l0     0    8:r117 l0     0
    7:r118 l0     0    6:r119 l0     0    3:r120 l0     0    4:r121 l0     1
    2:r122 l0     1    1:r123 l0     0    0:r124 l0     0   68:r125 l0     1
   69:r126 l0     0   67:r127 l0     0   66:r128 l0     0   65:r129 l0     0
   62:r130 l0     1   59:r131 l0     1   61:r132 l0     1   52:r133 l0     0
   50:r134 l0     1   51:r135 l0     1   47:r136 l0     0   45:r137 l0     1
   46:r138 l0     2   44:r139 l0     1   43:r140 l0     1   40:r141 l0     2
   38:r142 l0     0   36:r143 l0     1   31:r144 l0     0   30:r145 l0     0
   29:r146 l0     2   27:r147 l0     2   25:r148 l0     1   21:r149 l0     1
   16:r150 l0     1    5:r151 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_pipe

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r3={1d,1u} r6={1d,25u} r7={9d,40u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,26u,1e} r17={36d,11u} r18={3d} r19={1d,76u,1e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,8u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,3u} r87={1d,1u} r88={1d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,2u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,2u} r108={1d,1u} r109={1d,1u} r110={1d,2u} r111={1d,1u} r112={1d,1u} r113={1d,2u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={4d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 600{330d,268u,2e} in 141{138 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 215 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 215 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 215 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":76:7 75 {*movsi_internal}
     (nil))
(insn 6 5 205 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":77:12 75 {*movsi_internal}
     (nil))
(jump_insn 205 6 206 2 (set (pc)
        (label_ref 35)) "fs/pipe.c":77:5 807 {jump}
     (nil)
 -> 35)
(barrier 206 205 42)
(code_label 42 206 9 3 33 (nil) [1 uses])
(note 9 42 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 125)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x71a46c782d80 file_table>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":78:27 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])) "fs/pipe.c":78:27 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 127)
                (ashift:SI (reg:SI 126)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":78:27 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 126)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 128)
                (plus:SI (reg/f:SI 125)
                    (reg:SI 127)))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":78:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 127)
        (expr_list:REG_DEAD (reg/f:SI 125)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 129)
                (plus:SI (reg:SI 128)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":78:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 128)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 3 (set (reg:HI 83 [ _1 ])
        (mem:HI (reg/f:SI 129) [2 file_table[i_42].f_count+0 S2 A32])) "fs/pipe.c":78:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 83 [ _1 ])
            (const_int 0 [0]))) "fs/pipe.c":78:12 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "fs/pipe.c":78:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 84 [ i.11_2 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])) "fs/pipe.c":79:25 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:SI 85 [ _3 ])
                (ashift:SI (reg:SI 84 [ i.11_2 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:25 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 84 [ i.11_2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 4 (set (reg:SI 86 [ j.12_4 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])) "fs/pipe.c":79:17 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 130)
                (plus:SI (reg:SI 86 [ j.12_4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
        (reg:SI 130)) "fs/pipe.c":79:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (nil)))
(insn 24 23 25 4 (set (reg:SI 132)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x71a46c782d80 file_table>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":79:25 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:SI 131)
        (reg:SI 132)) "fs/pipe.c":79:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_EQUAL (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x71a46c782d80 file_table>)
            (nil))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:SI 87 [ _5 ])
                (plus:SI (reg:SI 85 [ _3 ])
                    (reg:SI 131)))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:25 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 4 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 86 [ j.12_4 ])
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [7 f[j.12_4]+0 S4 A32])
        (reg/f:SI 87 [ _5 ])) "fs/pipe.c":79:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (nil)))
(insn 28 27 29 4 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 86 [ j.12_4 ])
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [7 f[j.12_4]+0 S4 A32])) "fs/pipe.c":79:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ j.12_4 ])
        (nil)))
(insn 29 28 30 4 (set (reg:HI 89 [ _7 ])
        (mem:HI (plus:SI (reg/f:SI 88 [ _6 ])
                (const_int 4 [0x4])) [2 _6->f_count+0 S2 A32])) "fs/pipe.c":79:38 76 {*movhi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:HI 90 [ _9 ])
                (plus:HI (reg:HI 89 [ _7 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":79:47 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 4 (set (mem:HI (plus:SI (reg/f:SI 88 [ _6 ])
                (const_int 4 [0x4])) [2 _6->f_count+0 S2 A32])
        (reg:HI 90 [ _9 ])) "fs/pipe.c":79:47 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 90 [ _9 ])
        (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
            (nil))))
(code_label 32 31 33 5 31 (nil) [1 uses])
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":77:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 35 34 36 6 30 (nil) [1 uses])
(note 36 35 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 36 40 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":77:23 11 {*cmpsi_1}
     (nil))
(jump_insn 40 39 41 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "fs/pipe.c":77:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 47)
(note 41 40 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 41 46 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/pipe.c":77:23 11 {*cmpsi_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/pipe.c":77:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 42)
(code_label 47 46 48 8 32 (nil) [1 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":80:8 11 {*cmpsi_1}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "fs/pipe.c":80:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 54)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg/f:SI 91 [ _10 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [7 f[0]+0 S4 A32])) "fs/pipe.c":81:10 75 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (mem:HI (plus:SI (reg/f:SI 91 [ _10 ])
                (const_int 4 [0x4])) [2 _10->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/pipe.c":81:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ _10 ])
        (nil)))
(code_label 54 53 55 10 34 (nil) [1 uses])
(note 55 54 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 55 59 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":82:8 11 {*cmpsi_1}
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "fs/pipe.c":82:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 64)
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 207 11 (set (reg:SI 123 [ _48 ])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":83:16 75 {*movsi_internal}
     (nil))
(jump_insn 207 61 208 11 (set (pc)
        (label_ref 196)) "fs/pipe.c":83:16 807 {jump}
     (nil)
 -> 196)
(barrier 208 207 64)
(code_label 64 208 65 12 35 (nil) [1 uses])
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":84:7 75 {*movsi_internal}
     (nil))
(insn 67 66 209 12 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":85:12 75 {*movsi_internal}
     (nil))
(jump_insn 209 67 210 12 (set (pc)
        (label_ref 94)) "fs/pipe.c":85:5 807 {jump}
     (nil)
 -> 94)
(barrier 210 209 101)
(code_label 101 210 70 13 40 (nil) [1 uses])
(note 70 101 71 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 13 (set (reg/f:SI 133)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x71a46b32f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":86:21 75 {*movsi_internal}
     (nil))
(insn 72 71 73 13 (set (reg/f:SI 92 [ current.13_11 ])
        (mem/f/c:SI (reg/f:SI 133) [4 current+0 S4 A32])) "fs/pipe.c":86:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 73 72 74 13 (set (reg:SI 135)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])) "fs/pipe.c":86:27 75 {*movsi_internal}
     (nil))
(insn 74 73 75 13 (parallel [
            (set (reg:SI 134)
                (plus:SI (reg:SI 135)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":86:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
                    (const_int 160 [0xa0]))
                (nil)))))
(insn 75 74 76 13 (set (reg/f:SI 93 [ _12 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 134)
                    (const_int 4 [0x4]))
                (reg/f:SI 92 [ current.13_11 ])) [7 current.13_11->filp[i_43]+0 S4 A32])) "fs/pipe.c":86:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 92 [ current.13_11 ])
            (nil))))
(insn 76 75 77 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 93 [ _12 ])
            (const_int 0 [0]))) "fs/pipe.c":86:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _12 ])
        (nil)))
(jump_insn 77 76 78 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "fs/pipe.c":86:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 91)
(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 14 (set (reg/f:SI 136)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x71a46b32f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":87:20 75 {*movsi_internal}
     (nil))
(insn 80 79 81 14 (set (reg/f:SI 94 [ current.14_13 ])
        (mem/f/c:SI (reg/f:SI 136) [4 current+0 S4 A32])) "fs/pipe.c":87:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))
(insn 81 80 82 14 (set (reg:SI 137)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])) "fs/pipe.c":87:33 75 {*movsi_internal}
     (nil))
(insn 82 81 83 14 (set (reg:SI 138)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])) "fs/pipe.c":87:33 75 {*movsi_internal}
     (nil))
(insn 83 82 84 14 (set (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 137)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -28 [0xffffffffffffffe4])) [11 fd[j_47]+0 S4 A32])
        (reg:SI 138)) "fs/pipe.c":87:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_DEAD (reg:SI 137)
            (nil))))
(insn 84 83 85 14 (set (reg:SI 139)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])) "fs/pipe.c":87:29 75 {*movsi_internal}
     (nil))
(insn 85 84 86 14 (set (reg:SI 95 [ _14 ])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 139)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -28 [0xffffffffffffffe4])) [11 fd[j_47]+0 S4 A32])) "fs/pipe.c":87:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 86 85 87 14 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])) "fs/pipe.c":87:41 75 {*movsi_internal}
     (nil))
(insn 87 86 88 14 (set (reg/f:SI 96 [ _15 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 140)
                        (const_int 4 [0x4]))
                    (reg/f:SI 19 frame))
                (const_int -20 [0xffffffffffffffec])) [7 f[j_47]+0 S4 A32])) "fs/pipe.c":87:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 88 87 89 14 (parallel [
            (set (reg:SI 141)
                (plus:SI (reg:SI 95 [ _14 ])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":87:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 14 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 141)
                    (const_int 4 [0x4]))
                (reg/f:SI 94 [ current.14_13 ])) [7 current.14_13->filp[_14]+0 S4 A32])
        (reg/f:SI 96 [ _15 ])) "fs/pipe.c":87:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/f:SI 96 [ _15 ])
            (expr_list:REG_DEAD (reg/f:SI 94 [ current.14_13 ])
                (nil)))))
(insn 90 89 91 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":88:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 91 90 92 15 38 (nil) [1 uses])
(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":85:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 94 93 95 16 37 (nil) [1 uses])
(note 95 94 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 98 95 99 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":85:23 11 {*cmpsi_1}
     (nil))
(jump_insn 99 98 100 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/pipe.c":85:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 106)
(note 100 99 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 100 105 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
            (const_int 19 [0x13]))) "fs/pipe.c":85:23 11 {*cmpsi_1}
     (nil))
(jump_insn 105 104 106 17 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "fs/pipe.c":85:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 101)
(code_label 106 105 107 18 39 (nil) [1 uses])
(note 107 106 108 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":90:8 11 {*cmpsi_1}
     (nil))
(jump_insn 109 108 110 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/pipe.c":90:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 116)
(note 110 109 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 19 (set (reg/f:SI 142)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x71a46b32f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":91:16 75 {*movsi_internal}
     (nil))
(insn 112 111 113 19 (set (reg/f:SI 97 [ current.15_16 ])
        (mem/f/c:SI (reg/f:SI 142) [4 current+0 S4 A32])) "fs/pipe.c":91:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))
(insn 113 112 114 19 (set (reg:SI 98 [ _17 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [11 fd[0]+0 S4 A32])) "fs/pipe.c":91:25 75 {*movsi_internal}
     (nil))
(insn 114 113 115 19 (parallel [
            (set (reg:SI 143)
                (plus:SI (reg:SI 98 [ _17 ])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":91:30 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 19 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 4 [0x4]))
                (reg/f:SI 97 [ current.15_16 ])) [7 current.15_16->filp[_17]+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":91:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 97 [ current.15_16 ])
            (nil))))
(code_label 116 115 117 20 41 (nil) [1 uses])
(note 117 116 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 117 121 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [11 j+0 S4 A32])
            (const_int 1 [0x1]))) "fs/pipe.c":92:8 11 {*cmpsi_1}
     (nil))
(jump_insn 121 120 122 20 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "fs/pipe.c":92:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 131)
(note 122 121 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 21 (set (reg/f:SI 99 [ _18 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [7 f[1]+0 S4 A32])) "fs/pipe.c":93:26 75 {*movsi_internal}
     (nil))
(insn 124 123 125 21 (set (mem:HI (plus:SI (reg/f:SI 99 [ _18 ])
                (const_int 4 [0x4])) [2 _18->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/pipe.c":93:39 76 {*movhi_internal}
     (nil))
(insn 125 124 126 21 (set (reg/f:SI 100 [ _19 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [7 f[0]+0 S4 A32])) "fs/pipe.c":93:10 75 {*movsi_internal}
     (nil))
(insn 126 125 127 21 (set (reg:HI 101 [ _20 ])
        (mem:HI (plus:SI (reg/f:SI 99 [ _18 ])
                (const_int 4 [0x4])) [2 _18->f_count+0 S2 A32])) "fs/pipe.c":93:29 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99 [ _18 ])
        (nil)))
(insn 127 126 128 21 (set (mem:HI (plus:SI (reg/f:SI 100 [ _19 ])
                (const_int 4 [0x4])) [2 _19->f_count+0 S2 A32])
        (reg:HI 101 [ _20 ])) "fs/pipe.c":93:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 101 [ _20 ])
        (expr_list:REG_DEAD (reg/f:SI 100 [ _19 ])
            (nil))))
(insn 128 127 211 21 (set (reg:SI 123 [ _48 ])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":94:16 75 {*movsi_internal}
     (nil))
(jump_insn 211 128 212 21 (set (pc)
        (label_ref 196)) "fs/pipe.c":94:16 807 {jump}
     (nil)
 -> 196)
(barrier 212 211 131)
(code_label 131 212 132 22 42 (nil) [1 uses])
(note 132 131 133 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 22 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/pipe.c":96:19 75 {*movsi_internal}
     (nil))
(call_insn 134 133 135 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_pipe_inode") [flags 0x41]  <function_decl 0x71a46b316b00 get_pipe_inode>) [0 get_pipe_inode S1 A8])
            (const_int 0 [0]))) "fs/pipe.c":96:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 135 134 136 22 (set (reg:SI 144)
        (reg:SI 0 ax)) "fs/pipe.c":96:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 136 135 137 22 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 inode+0 S4 A32])
        (reg:SI 144)) "fs/pipe.c":96:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 137 136 138 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [6 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/pipe.c":96:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 138 137 139 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) "fs/pipe.c":96:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 160)
(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 23 (set (reg/f:SI 145)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x71a46b32f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":98:20 75 {*movsi_internal}
     (nil))
(insn 141 140 142 23 (set (reg/f:SI 102 [ current.16_21 ])
        (mem/f/c:SI (reg/f:SI 145) [4 current+0 S4 A32])) "fs/pipe.c":98:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(insn 142 141 143 23 (set (reg:SI 103 [ _22 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 fd[1]+0 S4 A32])) "fs/pipe.c":98:29 75 {*movsi_internal}
     (nil))
(insn 143 142 144 23 (parallel [
            (set (reg:SI 146)
                (plus:SI (reg:SI 103 [ _22 ])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":98:34 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 144 143 145 23 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 146)
                    (const_int 4 [0x4]))
                (reg/f:SI 102 [ current.16_21 ])) [7 current.16_21->filp[_22]+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":98:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 146)
        (nil)))
(insn 145 144 146 23 (set (reg/f:SI 147)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x71a46b32f120 current>)
                        ] UNSPEC_GOT))) [19  S4 A8])) "fs/pipe.c":97:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 146 145 147 23 (set (reg/f:SI 104 [ current.17_23 ])
        (mem/f/c:SI (reg/f:SI 147) [4 current+0 S4 A32])) "fs/pipe.c":97:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 147 146 148 23 (set (reg:SI 105 [ _24 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [11 fd[0]+0 S4 A32])) "fs/pipe.c":97:25 75 {*movsi_internal}
     (nil))
(insn 148 147 149 23 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg:SI 103 [ _22 ])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":98:26 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 23 (set (reg/f:SI 106 [ _25 ])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 148)
                    (const_int 4 [0x4]))
                (reg/f:SI 102 [ current.16_21 ])) [7 current.16_21->filp[_22]+0 S4 A32])) "fs/pipe.c":98:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg/f:SI 102 [ current.16_21 ])
            (nil))))
(insn 150 149 151 23 (parallel [
            (set (reg:SI 149)
                (plus:SI (reg:SI 105 [ _24 ])
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":97:30 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 152 23 (set (mem/f:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/f:SI 104 [ current.17_23 ])) [7 current.17_23->filp[_24]+0 S4 A32])
        (reg/f:SI 106 [ _25 ])) "fs/pipe.c":97:30 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg/f:SI 106 [ _25 ])
            (expr_list:REG_DEAD (reg/f:SI 104 [ current.17_23 ])
                (nil)))))
(insn 152 151 153 23 (set (reg/f:SI 107 [ _26 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [7 f[1]+0 S4 A32])) "fs/pipe.c":99:26 75 {*movsi_internal}
     (nil))
(insn 153 152 154 23 (set (mem:HI (plus:SI (reg/f:SI 107 [ _26 ])
                (const_int 4 [0x4])) [2 _26->f_count+0 S2 A32])
        (const_int 0 [0])) "fs/pipe.c":99:39 76 {*movhi_internal}
     (nil))
(insn 154 153 155 23 (set (reg/f:SI 108 [ _27 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [7 f[0]+0 S4 A32])) "fs/pipe.c":99:10 75 {*movsi_internal}
     (nil))
(insn 155 154 156 23 (set (reg:HI 109 [ _28 ])
        (mem:HI (plus:SI (reg/f:SI 107 [ _26 ])
                (const_int 4 [0x4])) [2 _26->f_count+0 S2 A32])) "fs/pipe.c":99:29 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107 [ _26 ])
        (nil)))
(insn 156 155 157 23 (set (mem:HI (plus:SI (reg/f:SI 108 [ _27 ])
                (const_int 4 [0x4])) [2 _27->f_count+0 S2 A32])
        (reg:HI 109 [ _28 ])) "fs/pipe.c":99:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 109 [ _28 ])
        (expr_list:REG_DEAD (reg/f:SI 108 [ _27 ])
            (nil))))
(insn 157 156 213 23 (set (reg:SI 123 [ _48 ])
        (const_int -1 [0xffffffffffffffff])) "fs/pipe.c":100:16 75 {*movsi_internal}
     (nil))
(jump_insn 213 157 214 23 (set (pc)
        (label_ref 196)) "fs/pipe.c":100:16 807 {jump}
     (nil)
 -> 196)
(barrier 214 213 160)
(code_label 160 214 161 24 43 (nil) [1 uses])
(note 161 160 162 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 24 (set (reg/f:SI 110 [ _29 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [7 f[1]+0 S4 A32])) "fs/pipe.c":102:22 75 {*movsi_internal}
     (nil))
(insn 163 162 164 24 (set (reg/f:SI 150)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [6 inode+0 S4 A32])) "fs/pipe.c":102:35 75 {*movsi_internal}
     (nil))
(insn 164 163 165 24 (set (mem/f:SI (plus:SI (reg/f:SI 110 [ _29 ])
                (const_int 8 [0x8])) [6 _29->f_inode+0 S4 A32])
        (reg/f:SI 150)) "fs/pipe.c":102:35 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 150)
        (nil)))
(insn 165 164 166 24 (set (reg/f:SI 111 [ _30 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [7 f[0]+0 S4 A32])) "fs/pipe.c":102:6 75 {*movsi_internal}
     (nil))
(insn 166 165 167 24 (set (reg/f:SI 112 [ _31 ])
        (mem/f:SI (plus:SI (reg/f:SI 110 [ _29 ])
                (const_int 8 [0x8])) [6 _29->f_inode+0 S4 A32])) "fs/pipe.c":102:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ _29 ])
        (nil)))
(insn 167 166 168 24 (set (mem/f:SI (plus:SI (reg/f:SI 111 [ _30 ])
                (const_int 8 [0x8])) [6 _30->f_inode+0 S4 A32])
        (reg/f:SI 112 [ _31 ])) "fs/pipe.c":102:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112 [ _31 ])
        (expr_list:REG_DEAD (reg/f:SI 111 [ _30 ])
            (nil))))
(insn 168 167 169 24 (set (reg/f:SI 113 [ _32 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [7 f[1]+0 S4 A32])) "fs/pipe.c":103:22 75 {*movsi_internal}
     (nil))
(insn 169 168 170 24 (set (mem:SI (plus:SI (reg/f:SI 113 [ _32 ])
                (const_int 12 [0xc])) [3 _32->f_pos+0 S4 A32])
        (const_int 0 [0])) "fs/pipe.c":103:35 75 {*movsi_internal}
     (nil))
(insn 170 169 171 24 (set (reg/f:SI 114 [ _33 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [7 f[0]+0 S4 A32])) "fs/pipe.c":103:6 75 {*movsi_internal}
     (nil))
(insn 171 170 172 24 (set (reg:SI 115 [ _34 ])
        (mem:SI (plus:SI (reg/f:SI 113 [ _32 ])
                (const_int 12 [0xc])) [3 _32->f_pos+0 S4 A32])) "fs/pipe.c":103:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113 [ _32 ])
        (nil)))
(insn 172 171 173 24 (set (mem:SI (plus:SI (reg/f:SI 114 [ _33 ])
                (const_int 12 [0xc])) [3 _33->f_pos+0 S4 A32])
        (reg:SI 115 [ _34 ])) "fs/pipe.c":103:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115 [ _34 ])
        (expr_list:REG_DEAD (reg/f:SI 114 [ _33 ])
            (nil))))
(insn 173 172 174 24 (set (reg/f:SI 116 [ _35 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [7 f[0]+0 S4 A32])) "fs/pipe.c":104:6 75 {*movsi_internal}
     (nil))
(insn 174 173 175 24 (set (mem:HI (reg/f:SI 116 [ _35 ]) [2 _35->f_mode+0 S2 A32])
        (const_int 1 [0x1])) "fs/pipe.c":104:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116 [ _35 ])
        (nil)))
(insn 175 174 176 24 (set (reg/f:SI 117 [ _36 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [7 f[1]+0 S4 A32])) "fs/pipe.c":105:6 75 {*movsi_internal}
     (nil))
(insn 176 175 177 24 (set (mem:HI (reg/f:SI 117 [ _36 ]) [2 _36->f_mode+0 S2 A32])
        (const_int 2 [0x2])) "fs/pipe.c":105:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117 [ _36 ])
        (nil)))
(insn 177 176 178 24 (set (reg:SI 118 [ _37 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [11 fd[0]+0 S4 A32])) "fs/pipe.c":106:19 75 {*movsi_internal}
     (nil))
(insn 178 177 179 24 (set (reg:SI 119 [ _38 ])
        (reg:SI 118 [ _37 ])) "fs/pipe.c":106:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118 [ _37 ])
        (nil)))
(insn 179 178 180 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":106:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 180 179 181 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [17  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [17 fildes+0 S4 A32])) "fs/pipe.c":106:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 181 180 182 24 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 119 [ _38 ])) "fs/pipe.c":106:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 119 [ _38 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 182 181 183 24 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x71a46b33a100 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":106:5 812 {*call}
     (nil)
    (nil))
(insn 183 182 184 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":106:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 184 183 185 24 (set (reg/f:SI 151)
        (mem/f/c:SI (reg/f:SI 16 argp) [17 fildes+0 S4 A32])) "fs/pipe.c":107:5 75 {*movsi_internal}
     (nil))
(insn 185 184 186 24 (parallel [
            (set (reg/f:SI 120 [ _39 ])
                (plus:SI (reg/f:SI 151)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":107:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [17 fildes+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 186 185 187 24 (set (reg:SI 121 [ _40 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 fd[1]+0 S4 A32])) "fs/pipe.c":107:19 75 {*movsi_internal}
     (nil))
(insn 187 186 188 24 (set (reg:SI 122 [ _41 ])
        (reg:SI 121 [ _40 ])) "fs/pipe.c":107:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121 [ _40 ])
        (nil)))
(insn 188 187 189 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":107:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 189 188 190 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [17  S4 A32])
        (reg/f:SI 120 [ _39 ])) "fs/pipe.c":107:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 120 [ _39 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 190 189 191 24 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 122 [ _41 ])) "fs/pipe.c":107:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 122 [ _41 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 191 190 192 24 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x71a46b33a100 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "fs/pipe.c":107:5 812 {*call}
     (nil)
    (nil))
(insn 192 191 193 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/pipe.c":107:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 193 192 196 24 (set (reg:SI 123 [ _48 ])
        (const_int 0 [0])) "fs/pipe.c":108:12 75 {*movsi_internal}
     (nil))
(code_label 196 193 197 25 44 (nil) [3 uses])
(note 197 196 198 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 202 25 (set (reg:SI 124 [ <retval> ])
        (reg:SI 123 [ _48 ])) "fs/pipe.c":109:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ _48 ])
        (nil)))
(insn 202 198 203 25 (set (reg/i:SI 0 ax)
        (reg:SI 124 [ <retval> ])) "fs/pipe.c":109:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124 [ <retval> ])
        (nil)))
(insn 203 202 0 25 (use (reg/i:SI 0 ax)) "fs/pipe.c":109:1 -1
     (nil))
