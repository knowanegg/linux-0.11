
;; Function free_ind (free_ind, funcdef_no=1, decl_uid=1336, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 47:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 60:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 68:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6
EBB 7
EBB 8 9
EBB 10
EBB 12
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
  BB 10
   Insn 75: point = 0, n_alt = -1
   Insn 68: point = 0, n_alt = 0
   Insn 67: point = 0, n_alt = 0
   Insn 66: point = 0, n_alt = -2
   Insn 65: point = 1, n_alt = 0
   Insn 64: point = 1, n_alt = 0
   Insn 63: point = 1, n_alt = 0
  BB 9
   Insn 60: point = 2, n_alt = 0
   Insn 59: point = 2, n_alt = 0
   Insn 58: point = 2, n_alt = -2
   Insn 57: point = 2, n_alt = 0
   Insn 56: point = 2, n_alt = 0
  BB 8
   Insn 54: point = 3, n_alt = -1
   Insn 53: point = 3, n_alt = 0
  BB 4
   Insn 73: point = 4, n_alt = -1
   Insn 26: point = 4, n_alt = 1
   Insn 25: point = 4, n_alt = 1
   Insn 24: point = 5, n_alt = 0
   Insn 23: point = 7, n_alt = 0
  BB 7
   Insn 47: point = 9, n_alt = 0
   Insn 46: point = 9, n_alt = 0
  BB 6
   Insn 43: point = 10, n_alt = 0
   Insn 42: point = 10, n_alt = 0
   Insn 41: point = 10, n_alt = -2
   Insn 40: point = 10, n_alt = 0
   Insn 39: point = 10, n_alt = 0
   Insn 38: point = 11, n_alt = 0
   Insn 37: point = 11, n_alt = 0
   Insn 36: point = 13, n_alt = 2
   Insn 35: point = 15, n_alt = 0
  BB 5
   Insn 33: point = 17, n_alt = -1
   Insn 32: point = 17, n_alt = 0
   Insn 31: point = 18, n_alt = 2
   Insn 30: point = 20, n_alt = 0
  BB 3
   Insn 21: point = 22, n_alt = -1
   Insn 20: point = 22, n_alt = 1
   Insn 19: point = 22, n_alt = 1
   Insn 18: point = 23, n_alt = -2
   Insn 17: point = 24, n_alt = 0
   Insn 16: point = 24, n_alt = 0
   Insn 15: point = 24, n_alt = -2
   Insn 14: point = 24, n_alt = 0
   Insn 13: point = 24, n_alt = 0
   Insn 12: point = 24, n_alt = 0
  BB 12
   Insn 79: point = 25, n_alt = -1
  BB 2
   Insn 6: point = 25, n_alt = -1
   Insn 5: point = 25, n_alt = 1
   Insn 80: point = 25, n_alt = 0
 r82: [0..25]
 r83: [17..18]
 r84: [12..13]
 r85: [10..11]
 r86: [22..23]
 r87: [6..7]
 r88: [4..5]
 r89: [19..20]
 r90: [14..15]
Compressing live ranges: from 26 to 16 - 61%
Ranges after the compression:
 r82: [0..15]
 r83: [10..11]
 r84: [6..7]
 r85: [4..5]
 r86: [14..15]
 r87: [2..3]
 r88: [0..1]
 r89: [12..13]
 r90: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 80
changing reg in insn 66
changing reg in insn 58
changing reg in insn 41
changing reg in insn 15
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 39
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
deleting insn with uid = 15.
deleting insn with uid = 18.
deleting insn with uid = 41.
deleting insn with uid = 58.
deleting insn with uid = 66.
starting the processing of deferred insns
ending the processing of deferred insns


free_ind

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={12d,8u} r1={5d} r2={5d} r3={1d,4u} r7={16d,58u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={19d,4u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 392{318d,74u,0e} in 43{39 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 80 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 80 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 80 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [6 block+0 S4 A32])
            (const_int 0 [0]))) "fs/truncate.c":16:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 78)
            (pc))) "fs/truncate.c":16:8 806 {*jcc}
     (nil)
 -> 78)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":18:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 13 12 14 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 block+0 S4 A32])) "fs/truncate.c":18:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 14 13 16 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 dev+0 S4 A32])) "fs/truncate.c":18:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 16 14 17 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7ccff9f15200 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/truncate.c":18:15 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 17 16 19 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":18:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 17 20 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])
        (reg:SI 0 ax [86])) "fs/truncate.c":18:15 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/truncate.c":18:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "fs/truncate.c":18:8 806 {*jcc}
     (nil)
 -> 61)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])) "fs/truncate.c":19:11 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 0 ax [88])
        (mem/f:SI (reg/f:SI 0 ax [87]) [9 bh_14->b_data+0 S4 A32])) "fs/truncate.c":19:11 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 p+0 S4 A32])
        (reg/f:SI 0 ax [88])) "fs/truncate.c":19:11 75 {*movsi_internal}
     (nil))
(insn 26 25 73 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 i+0 S4 A32])
        (const_int 0 [0])) "fs/truncate.c":20:16 75 {*movsi_internal}
     (nil))
(jump_insn 73 26 74 4 (set (pc)
        (label_ref 48)) "fs/truncate.c":20:9 807 {jump}
     (nil)
 -> 48)
(barrier 74 73 50)
(code_label 50 74 29 5 7 (nil) [1 uses])
(note 29 50 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 p+0 S4 A32])) "fs/truncate.c":21:16 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [89]) [2 *p_4+0 S2 A16])) "fs/truncate.c":21:16 76 {*movhi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/truncate.c":21:15 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "fs/truncate.c":21:15 806 {*jcc}
     (nil)
 -> 44)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 p+0 S4 A32])) "fs/truncate.c":22:31 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (reg/f:SI 0 ax [90]) [2 *p_4+0 S2 A16])) "fs/truncate.c":22:31 76 {*movhi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/truncate.c":22:15 144 {*zero_extendhisi2}
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":22:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:85 _3 ] [85])) "fs/truncate.c":22:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 40 39 42 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 dev+0 S4 A32])) "fs/truncate.c":22:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 42 40 43 6 (call (mem:QI (symbol_ref:SI ("free_block") [flags 0x41]  <function_decl 0x7ccff9f15400 free_block>) [0 free_block S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":22:15 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 43 42 44 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":22:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 44 43 45 7 6 (nil) [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [6 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":20:31 209 {*addsi_1}
     (nil))
(insn 47 46 48 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 p+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":20:36 209 {*addsi_1}
     (nil))
(code_label 48 47 49 8 5 (nil) [1 uses])
(note 49 48 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 49 54 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 i+0 S4 A32])
            (const_int 511 [0x1ff]))) "fs/truncate.c":20:23 11 {*cmpsi_1}
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "fs/truncate.c":20:23 806 {*jcc}
     (nil)
 -> 50)
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":23:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 57 56 59 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 bh+0 S4 A32])) "fs/truncate.c":23:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 59 57 60 9 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7ccff9f15300 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":23:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 60 59 61 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":23:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 61 60 62 10 4 (nil) [1 uses])
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":25:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 64 63 65 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 block+0 S4 A32])) "fs/truncate.c":25:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 65 64 67 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 dev+0 S4 A32])) "fs/truncate.c":25:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 67 65 68 10 (call (mem:QI (symbol_ref:SI ("free_block") [flags 0x41]  <function_decl 0x7ccff9f15400 free_block>) [0 free_block S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":25:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 68 67 75 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":25:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 75 68 76 10 (set (pc)
        (label_ref 71)) 807 {jump}
     (nil)
 -> 71)
(barrier 76 75 78)
(code_label 78 76 77 12 8 (nil) [1 uses])
(note 77 78 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 77 71 12 (const_int 0 [0]) "fs/truncate.c":17:9 843 {nop}
     (nil))
(code_label 71 79 72 11 1 (nil) [1 uses])
(note 72 71 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 81 72 0 NOTE_INSN_DELETED)

;; Function free_dind (free_dind, funcdef_no=2, decl_uid=1347, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 31:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6
EBB 7
EBB 8 9
EBB 10
EBB 12
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
  BB 10
   Insn 74: point = 0, n_alt = -1
   Insn 67: point = 0, n_alt = 0
   Insn 66: point = 0, n_alt = 0
   Insn 65: point = 0, n_alt = -2
   Insn 64: point = 1, n_alt = 0
   Insn 63: point = 1, n_alt = 0
   Insn 62: point = 1, n_alt = 0
  BB 9
   Insn 59: point = 2, n_alt = 0
   Insn 58: point = 2, n_alt = 0
   Insn 57: point = 2, n_alt = -2
   Insn 56: point = 2, n_alt = 0
   Insn 55: point = 2, n_alt = 0
  BB 8
   Insn 53: point = 3, n_alt = -1
   Insn 52: point = 3, n_alt = 0
  BB 4
   Insn 72: point = 4, n_alt = -1
   Insn 26: point = 4, n_alt = 1
   Insn 25: point = 4, n_alt = 1
   Insn 24: point = 5, n_alt = 0
   Insn 23: point = 7, n_alt = 0
  BB 7
   Insn 46: point = 9, n_alt = 0
   Insn 45: point = 9, n_alt = 0
  BB 6
   Insn 42: point = 10, n_alt = 0
   Insn 41: point = 10, n_alt = 0
   Insn 40: point = 10, n_alt = 0
   Insn 39: point = 10, n_alt = 0
   Insn 38: point = 11, n_alt = 0
   Insn 37: point = 11, n_alt = 0
   Insn 36: point = 13, n_alt = 2
   Insn 35: point = 15, n_alt = 0
  BB 5
   Insn 33: point = 17, n_alt = -1
   Insn 32: point = 17, n_alt = 0
   Insn 31: point = 18, n_alt = 2
   Insn 30: point = 20, n_alt = 0
  BB 3
   Insn 21: point = 22, n_alt = -1
   Insn 20: point = 22, n_alt = 1
   Insn 19: point = 22, n_alt = 1
   Insn 18: point = 23, n_alt = -2
   Insn 17: point = 24, n_alt = 0
   Insn 16: point = 24, n_alt = 0
   Insn 15: point = 24, n_alt = -2
   Insn 14: point = 24, n_alt = 0
   Insn 13: point = 24, n_alt = 0
   Insn 12: point = 24, n_alt = 0
  BB 12
   Insn 78: point = 25, n_alt = -1
  BB 2
   Insn 6: point = 25, n_alt = -1
   Insn 5: point = 25, n_alt = 1
   Insn 79: point = 25, n_alt = 0
 r82: [0..25]
 r83: [17..18]
 r84: [12..13]
 r85: [10..11]
 r86: [22..23]
 r87: [6..7]
 r88: [4..5]
 r89: [19..20]
 r90: [14..15]
Compressing live ranges: from 26 to 16 - 61%
Ranges after the compression:
 r82: [0..15]
 r83: [10..11]
 r84: [6..7]
 r85: [4..5]
 r86: [14..15]
 r87: [2..3]
 r88: [0..1]
 r89: [12..13]
 r90: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 79
changing reg in insn 65
changing reg in insn 57
changing reg in insn 15
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 39
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
deleting insn with uid = 15.
deleting insn with uid = 18.
deleting insn with uid = 57.
deleting insn with uid = 65.
starting the processing of deferred insns
ending the processing of deferred insns


free_dind

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={12d,8u} r1={5d} r2={5d} r3={1d,3u} r7={16d,58u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={19d,4u} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 391{318d,73u,0e} in 43{39 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 79 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 79 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 79 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 36 [0x24])) [6 block+0 S4 A32])
            (const_int 0 [0]))) "fs/truncate.c":34:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 77)
            (pc))) "fs/truncate.c":34:8 806 {*jcc}
     (nil)
 -> 77)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":36:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 13 12 14 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 block+0 S4 A32])) "fs/truncate.c":36:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 14 13 16 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 dev+0 S4 A32])) "fs/truncate.c":36:15 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 16 14 17 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7ccff9f15200 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/truncate.c":36:15 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 17 16 19 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":36:15 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 17 20 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])
        (reg:SI 0 ax [86])) "fs/truncate.c":36:15 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [7 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/truncate.c":36:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/truncate.c":36:8 806 {*jcc}
     (nil)
 -> 60)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [7 bh+0 S4 A32])) "fs/truncate.c":37:11 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 0 ax [88])
        (mem/f:SI (reg/f:SI 0 ax [87]) [9 bh_14->b_data+0 S4 A32])) "fs/truncate.c":37:11 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 p+0 S4 A32])
        (reg/f:SI 0 ax [88])) "fs/truncate.c":37:11 75 {*movsi_internal}
     (nil))
(insn 26 25 72 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 i+0 S4 A32])
        (const_int 0 [0])) "fs/truncate.c":38:16 75 {*movsi_internal}
     (nil))
(jump_insn 72 26 73 4 (set (pc)
        (label_ref 47)) "fs/truncate.c":38:9 807 {jump}
     (nil)
 -> 47)
(barrier 73 72 49)
(code_label 49 73 29 5 15 (nil) [1 uses])
(note 29 49 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:SI 0 ax [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 p+0 S4 A32])) "fs/truncate.c":39:17 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [89]) [2 *p_4+0 S2 A16])) "fs/truncate.c":39:17 76 {*movhi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/truncate.c":39:16 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/truncate.c":39:16 806 {*jcc}
     (nil)
 -> 43)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [5 p+0 S4 A32])) "fs/truncate.c":40:31 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (reg/f:SI 0 ax [90]) [2 *p_4+0 S2 A16])) "fs/truncate.c":40:31 76 {*movhi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/truncate.c":40:17 144 {*zero_extendhisi2}
     (nil))
(insn 38 37 39 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":40:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:85 _3 ] [85])) "fs/truncate.c":40:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 40 39 41 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 dev+0 S4 A32])) "fs/truncate.c":40:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 40 42 6 (call (mem:QI (symbol_ref:SI ("free_ind") [flags 0x3]  <function_decl 0x7ccff9f3a900 free_ind>) [0 free_ind S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":40:17 812 {*call}
     (nil)
    (nil))
(insn 42 41 43 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":40:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 43 42 44 7 14 (nil) [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [6 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":38:31 209 {*addsi_1}
     (nil))
(insn 46 45 47 7 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [5 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [5 p+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":38:36 209 {*addsi_1}
     (nil))
(code_label 47 46 48 8 13 (nil) [1 uses])
(note 48 47 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 48 53 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 i+0 S4 A32])
            (const_int 511 [0x1ff]))) "fs/truncate.c":38:23 11 {*cmpsi_1}
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "fs/truncate.c":38:23 806 {*jcc}
     (nil)
 -> 49)
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":41:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 56 55 58 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [7 bh+0 S4 A32])) "fs/truncate.c":41:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 58 56 59 9 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7ccff9f15300 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":41:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 59 58 60 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":41:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 60 59 61 10 12 (nil) [1 uses])
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":43:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 63 62 64 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 block+0 S4 A32])) "fs/truncate.c":43:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 64 63 66 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [6 dev+0 S4 A32])) "fs/truncate.c":43:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 66 64 67 10 (call (mem:QI (symbol_ref:SI ("free_block") [flags 0x41]  <function_decl 0x7ccff9f15400 free_block>) [0 free_block S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":43:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 67 66 74 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":43:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 74 67 75 10 (set (pc)
        (label_ref 70)) 807 {jump}
     (nil)
 -> 70)
(barrier 75 74 77)
(code_label 77 75 76 12 16 (nil) [1 uses])
(note 76 77 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 76 70 12 (const_int 0 [0]) "fs/truncate.c":35:9 843 {nop}
     (nil))
(code_label 70 78 71 11 9 (nil) [1 uses])
(note 71 70 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 80 71 0 NOTE_INSN_DELETED)

;; Function truncate (truncate, funcdef_no=3, decl_uid=1129, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 38:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 61:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 64:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 72:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 75:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 85:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 87:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 91:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 95:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=138 from oldreg=136, assigning class AREG to r138
   95: {r128:SI=trunc(sign_extend(r138:SI)*sign_extend(r129:SI) 0>>0x20);clobber r138:SI;clobber flags:CC;}
      REG_DEAD r129:SI
      REG_UNUSED r136:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  122: r138:SI=r103:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 96:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=139 from oldreg=128, assigning class GENERAL_REGS to r139
   96: {r139:SI=r139:SI>>0x5;clobber flags:CC;}
      REG_DEAD r128:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  123: r139:SI=r128:SI
    Inserting insn reload after:
  124: r130:SI=r139:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 98:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=140 from oldreg=130, assigning class GENERAL_REGS to r140
   98: {r140:SI=r140:SI-r131:SI;clobber flags:CC;}
      REG_DEAD r131:SI
      REG_DEAD r130:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  125: r140:SI=r130:SI
    Inserting insn reload after:
  126: r104:SI=r140:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 101
	 Choosing alt 0 in insn 101:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 7
EBB 8 9
EBB 11
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
  BB 9
   Insn 115: point = 0, n_alt = -1
   Insn 108: point = 0, n_alt = 1
   Insn 107: point = 1, n_alt = 0
   Insn 106: point = 2, n_alt = 0
   Insn 105: point = 4, n_alt = 0
   Insn 104: point = 5, n_alt = 1
   Insn 103: point = 6, n_alt = 0
   Insn 102: point = 7, n_alt = -2
   Insn 101: point = 9, n_alt = 0
   Insn 100: point = 11, n_alt = 0
   Insn 99: point = 13, n_alt = 0
   Insn 126: point = 15, n_alt = -2
	Hard reg 1 is preferable by r140 with profit 1000
   Insn 98: point = 17, n_alt = 0
   Insn 125: point = 19, n_alt = -2
	Hard reg 1 is preferable by r140 with profit 1000
	Hard reg 0 is preferable by r140 with profit 1000
   Insn 97: point = 21, n_alt = 1
   Insn 124: point = 23, n_alt = -2
	Hard reg 0 is preferable by r139 with profit 1000
   Insn 96: point = 25, n_alt = 0
   Insn 123: point = 26, n_alt = -2
	Hard reg 0 is preferable by r139 with profit 1000
	Hard reg 1 is preferable by r139 with profit 1000
   Insn 95: point = 28, n_alt = 0
   Insn 122: point = 30, n_alt = -2
	Hard reg 2 is preferable by r138 with profit 1000
   Insn 94: point = 31, n_alt = 0
   Insn 93: point = 32, n_alt = 0
   Insn 92: point = 34, n_alt = 0
   Insn 91: point = 35, n_alt = 8
   Insn 90: point = 36, n_alt = 0
   Insn 89: point = 37, n_alt = 1
   Insn 88: point = 38, n_alt = 0
   Insn 87: point = 39, n_alt = 3
   Insn 86: point = 40, n_alt = 0
   Insn 85: point = 41, n_alt = 2
   Insn 84: point = 43, n_alt = 0
   Insn 83: point = 44, n_alt = 3
   Insn 82: point = 45, n_alt = 0
   Insn 81: point = 46, n_alt = 0
   Insn 80: point = 46, n_alt = 0
   Insn 79: point = 46, n_alt = 0
   Insn 78: point = 47, n_alt = 0
   Insn 77: point = 48, n_alt = 0
   Insn 76: point = 48, n_alt = 0
   Insn 75: point = 50, n_alt = 2
   Insn 74: point = 52, n_alt = 0
   Insn 73: point = 53, n_alt = 0
   Insn 72: point = 55, n_alt = 2
   Insn 71: point = 57, n_alt = 0
   Insn 70: point = 58, n_alt = 0
   Insn 69: point = 58, n_alt = 0
   Insn 68: point = 58, n_alt = 0
   Insn 67: point = 59, n_alt = 0
   Insn 66: point = 60, n_alt = 0
   Insn 65: point = 60, n_alt = 0
   Insn 64: point = 62, n_alt = 2
   Insn 63: point = 64, n_alt = 0
   Insn 62: point = 65, n_alt = 0
   Insn 61: point = 67, n_alt = 2
   Insn 60: point = 69, n_alt = 0
  BB 8
   Insn 58: point = 71, n_alt = -1
   Insn 57: point = 71, n_alt = 0
  BB 4
   Insn 113: point = 72, n_alt = -1
   Insn 23: point = 72, n_alt = 1
  BB 7
   Insn 51: point = 73, n_alt = 0
  BB 6
   Insn 48: point = 74, n_alt = 3
   Insn 47: point = 75, n_alt = 0
   Insn 46: point = 76, n_alt = 0
   Insn 45: point = 77, n_alt = 0
   Insn 44: point = 77, n_alt = 0
   Insn 43: point = 77, n_alt = -2
   Insn 42: point = 77, n_alt = 0
   Insn 41: point = 78, n_alt = 0
   Insn 40: point = 79, n_alt = 0
   Insn 39: point = 79, n_alt = 0
   Insn 38: point = 81, n_alt = 2
   Insn 37: point = 83, n_alt = 0
   Insn 36: point = 84, n_alt = 0
   Insn 35: point = 86, n_alt = 2
   Insn 34: point = 88, n_alt = 0
   Insn 33: point = 89, n_alt = 0
  BB 5
   Insn 31: point = 91, n_alt = -1
   Insn 30: point = 91, n_alt = 0
   Insn 29: point = 92, n_alt = 2
   Insn 28: point = 94, n_alt = 0
   Insn 27: point = 95, n_alt = 0
  BB 11
   Insn 119: point = 97, n_alt = -1
  BB 3
   Insn 17: point = 97, n_alt = -1
   Insn 16: point = 97, n_alt = 0
   Insn 15: point = 98, n_alt = 0
   Insn 14: point = 100, n_alt = 0
   Insn 13: point = 102, n_alt = 2
   Insn 12: point = 104, n_alt = 0
  BB 2
   Insn 10: point = 106, n_alt = -1
   Insn 9: point = 106, n_alt = 0
   Insn 8: point = 107, n_alt = 0
   Insn 7: point = 109, n_alt = 0
   Insn 6: point = 111, n_alt = 2
   Insn 5: point = 113, n_alt = 0
   Insn 120: point = 114, n_alt = 0
 r82: [14..114]
 r83: [110..111]
 r84: [108..109]
 r85: [106..107]
 r86: [101..102]
 r87: [99..100]
 r88: [97..98]
 r89: [91..92]
 r90: [85..86]
 r91: [78..84]
 r92: [80..81]
 r93: [77..79]
 r94: [66..67]
 r95: [59..65]
 r96: [61..62]
 r97: [58..60]
 r98: [54..55]
 r99: [47..53]
 r100: [49..50]
 r101: [46..48]
 r102: [39..41]
 r103: [22..32]
 r104: [10..15]
 r105: [10..11]
 r106: [8..9]
 r107: [5..7]
 r108: [0..2]
 r109: [112..113]
 r110: [103..104]
 r111: [93..95]
 r112: [93..94]
 r113: [87..89]
 r114: [87..88]
 r115: [82..83]
 r116: [74..76]
 r117: [74..75]
 r118: [68..69]
 r119: [63..64]
 r120: [56..57]
 r121: [51..52]
 r122: [44..45]
 r123: [42..43]
 r124: [39..40]
 r125: [37..38]
 r126: [35..36]
 r127: [33..34]
 r128: [27..28]
 r129: [29..31]
 r130: [20..23]
 r131: [18..21]
 r132: [12..13]
 r133: [5..6]
 r134: [3..4]
 r135: [0..1]
 r138: [28..30]
 r139: [24..26]
 r140: [16..19]
Compressing live ranges: from 115 to 90 - 78%
Ranges after the compression:
 r82: [12..89]
 r83: [86..87]
 r84: [84..85]
 r85: [82..83]
 r86: [78..79]
 r87: [76..77]
 r88: [74..75]
 r89: [70..71]
 r90: [66..67]
 r91: [60..65]
 r92: [62..63]
 r93: [60..61]
 r94: [54..55]
 r95: [48..53]
 r96: [50..51]
 r97: [48..49]
 r98: [44..45]
 r99: [38..43]
 r100: [40..41]
 r101: [38..39]
 r102: [32..33]
 r103: [18..25]
 r104: [8..13]
 r105: [8..9]
 r106: [6..7]
 r107: [4..5]
 r108: [0..1]
 r109: [88..89]
 r110: [80..81]
 r111: [72..73]
 r112: [72..73]
 r113: [68..69]
 r114: [68..69]
 r115: [64..65]
 r116: [58..59]
 r117: [58..59]
 r118: [56..57]
 r119: [52..53]
 r120: [46..47]
 r121: [42..43]
 r122: [36..37]
 r123: [34..35]
 r124: [32..33]
 r125: [30..31]
 r126: [28..29]
 r127: [26..27]
 r128: [22..23]
 r129: [24..25]
 r130: [16..19]
 r131: [14..17]
 r132: [10..11]
 r133: [4..5]
 r134: [2..3]
 r135: [0..1]
 r138: [23..25]
 r139: [20..21]
 r140: [14..15]

********** Assignment #1: **********

	 Assigning to 138 (cl=AREG, orig=136, freq=2000, tfirst=138, tfreq=2000)...
	   Assign 0 to reload r138 (freq=2000)
	 Assigning to 139 (cl=GENERAL_REGS, orig=128, freq=3000, tfirst=139, tfreq=3000)...
	   Assign 0 to reload r139 (freq=3000)
	 Assigning to 140 (cl=GENERAL_REGS, orig=130, freq=3000, tfirst=140, tfreq=3000)...
	   Assign 0 to reload r140 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 120
changing reg in insn 99
changing reg in insn 92
changing reg in insn 43
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 29
changing reg in insn 30
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 41
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 42
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 67
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 68
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 78
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 79
changing reg in insn 85
changing reg in insn 87
changing reg in insn 93
changing reg in insn 97
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 104
changing reg in insn 106
changing reg in insn 108
changing reg in insn 5
changing reg in insn 6
changing reg in insn 12
changing reg in insn 13
changing reg in insn 27
changing reg in insn 29
changing reg in insn 28
changing reg in insn 29
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 38
changing reg in insn 46
changing reg in insn 48
changing reg in insn 47
changing reg in insn 48
changing reg in insn 60
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 75
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 95
changing reg in insn 94
changing reg in insn 95
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
deleting insn with uid = 43.
deleting insn with uid = 124.
deleting insn with uid = 125.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 80.


truncate

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={47d,42u} r1={16d,12u} r2={6d,3u} r3={1d,3u} r7={13d,57u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={22d,4u} r18={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 421{300d,121u,0e} in 92{89 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 120 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 120 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 120 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":50:11 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [109]) [2 inode_32(D)->i_mode+0 S2 A32])) "fs/truncate.c":50:11 76 {*movhi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/truncate.c":50:11 144 {*zero_extendhisi2}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (and:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":50:11 490 {*andsi_1}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 32768 [0x8000]))) "fs/truncate.c":50:8 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "fs/truncate.c":50:8 806 {*jcc}
     (nil)
 -> 21)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:SI 0 ax [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":50:37 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:HI 0 ax [orig:86 _4 ] [86])
        (mem:HI (reg/f:SI 0 ax [110]) [2 inode_32(D)->i_mode+0 S2 A32])) "fs/truncate.c":50:37 76 {*movhi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (zero_extend:SI (reg:HI 0 ax [orig:86 _4 ] [86]))) "fs/truncate.c":50:37 144 {*zero_extendhisi2}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 0 ax [orig:88 _6 ] [88])
                (and:SI (reg:SI 0 ax [orig:87 _5 ] [87])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":50:37 490 {*andsi_1}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 _6 ] [88])
            (const_int 16384 [0x4000]))) "fs/truncate.c":50:9 11 {*cmpsi_1}
     (nil))
(jump_insn 17 16 21 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 118)
            (pc))) "fs/truncate.c":50:9 806 {*jcc}
     (nil)
 -> 118)
(code_label 21 17 22 4 18 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 113 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])
        (const_int 0 [0])) "fs/truncate.c":52:12 75 {*movsi_internal}
     (nil))
(jump_insn 113 23 114 4 (set (pc)
        (label_ref 52)) "fs/truncate.c":52:5 807 {jump}
     (nil)
 -> 52)
(barrier 114 113 54)
(code_label 54 114 26 5 22 (nil) [1 uses])
(note 26 54 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:SI 0 ax [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":53:26 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:SI 1 dx [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "fs/truncate.c":53:26 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:HI 0 ax [orig:89 _7 ] [89])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [112])
                        (const_int 2 [0x2]))
                    (reg/f:SI 0 ax [111]))
                (const_int 14 [0xe])) [2 inode_32(D)->i_zone[i_27]+0 S2 A16])) "fs/truncate.c":53:26 76 {*movhi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:89 _7 ] [89])
            (const_int 0 [0]))) "fs/truncate.c":53:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "fs/truncate.c":53:12 806 {*jcc}
     (nil)
 -> 49)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":54:51 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SI 1 dx [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "fs/truncate.c":54:51 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [114])
                        (const_int 2 [0x2]))
                    (reg/f:SI 0 ax [113]))
                (const_int 14 [0xe])) [2 inode_32(D)->i_zone[i_27]+0 S2 A16])) "fs/truncate.c":54:51 76 {*movhi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:SI 1 dx [orig:91 _9 ] [91])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/truncate.c":54:13 144 {*zero_extendhisi2}
     (nil))
(insn 37 36 38 6 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":54:29 75 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/truncate.c":54:29 76 {*movhi_internal}
     (nil))
(insn 39 38 40 6 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (zero_extend:SI (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/truncate.c":54:13 144 {*zero_extendhisi2}
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":54:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 41 40 42 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 1 dx [orig:91 _9 ] [91])) "fs/truncate.c":54:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 42 41 44 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:93 _11 ] [93])) "fs/truncate.c":54:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 44 42 45 6 (call (mem:QI (symbol_ref:SI ("free_block") [flags 0x41]  <function_decl 0x7ccff9f15400 free_block>) [0 free_block S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":54:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 45 44 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":54:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 46 45 47 6 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":55:30 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:SI 1 dx [117])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "fs/truncate.c":55:30 75 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (mem:HI (plus:SI (plus:SI (mult:SI (reg:SI 1 dx [117])
                        (const_int 2 [0x2]))
                    (reg/f:SI 0 ax [116]))
                (const_int 14 [0xe])) [2 inode_32(D)->i_zone[i_27]+0 S2 A16])
        (const_int 0 [0])) "fs/truncate.c":55:30 76 {*movhi_internal}
     (nil))
(code_label 49 48 50 7 21 (nil) [1 uses])
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [6 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":52:25 209 {*addsi_1}
     (nil))
(code_label 52 51 53 8 20 (nil) [1 uses])
(note 53 52 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 53 58 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [6 i+0 S4 A32])
            (const_int 6 [0x6]))) "fs/truncate.c":52:19 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "fs/truncate.c":52:19 806 {*jcc}
     (nil)
 -> 54)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":57:41 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (reg:HI 0 ax [orig:94 _12 ] [94])
        (mem:HI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 28 [0x1c])) [2 inode_32(D)->i_zone[7]+0 S2 A32])) "fs/truncate.c":57:41 76 {*movhi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (zero_extend:SI (reg:HI 0 ax [orig:94 _12 ] [94]))) "fs/truncate.c":57:5 144 {*zero_extendhisi2}
     (nil))
(insn 63 62 64 9 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":57:19 75 {*movsi_internal}
     (nil))
(insn 64 63 65 9 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/truncate.c":57:19 76 {*movhi_internal}
     (nil))
(insn 65 64 66 9 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _14 ] [96]))) "fs/truncate.c":57:5 144 {*zero_extendhisi2}
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":57:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 67 66 68 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 1 dx [orig:95 _13 ] [95])) "fs/truncate.c":57:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 68 67 69 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:97 _15 ] [97])) "fs/truncate.c":57:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 69 68 70 9 (call (mem:QI (symbol_ref:SI ("free_ind") [flags 0x3]  <function_decl 0x7ccff9f3a900 free_ind>) [0 free_ind S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":57:5 812 {*call}
     (nil)
    (nil))
(insn 70 69 71 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":57:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 71 70 72 9 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":58:42 75 {*movsi_internal}
     (nil))
(insn 72 71 73 9 (set (reg:HI 0 ax [orig:98 _16 ] [98])
        (mem:HI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 30 [0x1e])) [2 inode_32(D)->i_zone[8]+0 S2 A16])) "fs/truncate.c":58:42 76 {*movhi_internal}
     (nil))
(insn 73 72 74 9 (set (reg:SI 1 dx [orig:99 _17 ] [99])
        (zero_extend:SI (reg:HI 0 ax [orig:98 _16 ] [98]))) "fs/truncate.c":58:5 144 {*zero_extendhisi2}
     (nil))
(insn 74 73 75 9 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":58:20 75 {*movsi_internal}
     (nil))
(insn 75 74 76 9 (set (reg:HI 0 ax [orig:100 _18 ] [100])
        (mem:HI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 44 [0x2c])) [2 inode_32(D)->i_dev+0 S2 A32])) "fs/truncate.c":58:20 76 {*movhi_internal}
     (nil))
(insn 76 75 77 9 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (zero_extend:SI (reg:HI 0 ax [orig:100 _18 ] [100]))) "fs/truncate.c":58:5 144 {*zero_extendhisi2}
     (nil))
(insn 77 76 78 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":58:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 78 77 79 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 1 dx [orig:99 _17 ] [99])) "fs/truncate.c":58:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 79 78 80 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:101 _19 ] [101])) "fs/truncate.c":58:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 80 79 81 9 (call (mem:QI (symbol_ref:SI ("free_dind") [flags 0x3]  <function_decl 0x7ccff9f3ab00 free_dind>) [0 free_dind S1 A8])
        (const_int 16 [0x10])) "fs/truncate.c":58:5 812 {*call}
     (nil)
    (nil))
(insn 81 80 82 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":58:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 82 81 83 9 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":59:41 75 {*movsi_internal}
     (nil))
(insn 83 82 84 9 (set (mem:HI (plus:SI (reg/f:SI 0 ax [122])
                (const_int 30 [0x1e])) [2 inode_32(D)->i_zone[8]+0 S2 A16])
        (const_int 0 [0])) "fs/truncate.c":59:41 76 {*movhi_internal}
     (nil))
(insn 84 83 85 9 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":59:37 75 {*movsi_internal}
     (nil))
(insn 85 84 86 9 (set (reg:HI 1 dx [orig:102 _20 ] [102])
        (mem:HI (plus:SI (reg/f:SI 0 ax [123])
                (const_int 30 [0x1e])) [2 inode_32(D)->i_zone[8]+0 S2 A16])) "fs/truncate.c":59:37 76 {*movhi_internal}
     (nil))
(insn 86 85 87 9 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":59:22 75 {*movsi_internal}
     (nil))
(insn 87 86 88 9 (set (mem:HI (plus:SI (reg/f:SI 0 ax [124])
                (const_int 28 [0x1c])) [2 inode_32(D)->i_zone[7]+0 S2 A32])
        (reg:HI 1 dx [orig:102 _20 ] [102])) "fs/truncate.c":59:22 76 {*movhi_internal}
     (nil))
(insn 88 87 89 9 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":60:19 75 {*movsi_internal}
     (nil))
(insn 89 88 90 9 (set (mem:SI (plus:SI (reg/f:SI 0 ax [125])
                (const_int 4 [0x4])) [3 inode_32(D)->i_size+0 S4 A32])
        (const_int 0 [0])) "fs/truncate.c":60:19 75 {*movsi_internal}
     (nil))
(insn 90 89 91 9 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":61:19 75 {*movsi_internal}
     (nil))
(insn 91 90 92 9 (set (mem:QI (plus:SI (reg/f:SI 0 ax [126])
                (const_int 51 [0x33])) [0 inode_32(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/truncate.c":61:19 77 {*movqi_internal}
     (nil))
(insn 92 91 93 9 (set (reg/f:SI 0 ax [127])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7ccff9f34360 jiffies>)
                        ] UNSPEC_GOT))) [11  S4 A8])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 93 92 94 9 (set (reg:SI 2 cx [orig:103 jiffies.0_21 ] [103])
        (mem/v/c:SI (reg/f:SI 0 ax [127]) [3 jiffies+0 S4 A32])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 94 93 122 9 (set (reg:SI 1 dx [129])
        (const_int 1374389535 [0x51eb851f])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 122 94 95 9 (set (reg:SI 0 ax [136])
        (reg:SI 2 cx [orig:103 jiffies.0_21 ] [103])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 95 122 123 9 (parallel [
            (set (reg:SI 1 dx [128])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [136]))
                            (sign_extend:DI (reg:SI 1 dx [129])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [136]))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":62:39 435 {*smulsi3_highpart_1}
     (nil))
(insn 123 95 96 9 (set (reg:SI 0 ax [128])
        (reg:SI 1 dx [128])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 96 123 97 9 (parallel [
            (set (reg:SI 0 ax [128])
                (ashiftrt:SI (reg:SI 0 ax [128])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":62:39 702 {*ashrsi3_1}
     (nil))
(insn 97 96 98 9 (parallel [
            (set (reg:SI 2 cx [131])
                (ashiftrt:SI (reg:SI 2 cx [orig:103 jiffies.0_21 ] [103])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":62:39 694 {ashrsi3_cvt}
     (nil))
(insn 98 97 126 9 (parallel [
            (set (reg:SI 0 ax [130])
                (minus:SI (reg:SI 0 ax [130])
                    (reg:SI 2 cx [131])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":62:39 282 {*subsi_1}
     (nil))
(insn 126 98 99 9 (set (reg:SI 1 dx [orig:104 _22 ] [104])
        (reg:SI 0 ax [130])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 99 126 100 9 (set (reg/f:SI 0 ax [132])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7ccff9f343f0 startup_time>)
                        ] UNSPEC_GOT))) [11  S4 A8])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 100 99 101 9 (set (reg:SI 0 ax [orig:105 startup_time.1_23 ] [105])
        (mem/c:SI (reg/f:SI 0 ax [132]) [3 startup_time+0 S4 A32])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 101 100 102 9 (parallel [
            (set (reg:SI 0 ax [orig:106 _24 ] [106])
                (plus:SI (reg:SI 0 ax [orig:105 startup_time.1_23 ] [105])
                    (reg:SI 1 dx [orig:104 _22 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "fs/truncate.c":62:39 209 {*addsi_1}
     (nil))
(insn 102 101 103 9 (set (reg:SI 1 dx [orig:107 _25 ] [107])
        (reg:SI 0 ax [orig:106 _24 ] [106])) "fs/truncate.c":62:39 75 {*movsi_internal}
     (nil))
(insn 103 102 104 9 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":62:37 75 {*movsi_internal}
     (nil))
(insn 104 103 105 9 (set (mem:SI (plus:SI (reg/f:SI 0 ax [133])
                (const_int 40 [0x28])) [3 inode_32(D)->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:107 _25 ] [107])) "fs/truncate.c":62:37 75 {*movsi_internal}
     (nil))
(insn 105 104 106 9 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":62:27 75 {*movsi_internal}
     (nil))
(insn 106 105 107 9 (set (reg:SI 1 dx [orig:108 _26 ] [108])
        (mem:SI (plus:SI (reg/f:SI 0 ax [134])
                (const_int 40 [0x28])) [3 inode_32(D)->i_ctime+0 S4 A32])) "fs/truncate.c":62:27 75 {*movsi_internal}
     (nil))
(insn 107 106 108 9 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [10 inode+0 S4 A32])) "fs/truncate.c":62:20 75 {*movsi_internal}
     (nil))
(insn 108 107 115 9 (set (mem:SI (plus:SI (reg/f:SI 0 ax [135])
                (const_int 8 [0x8])) [3 inode_32(D)->i_mtime+0 S4 A32])
        (reg:SI 1 dx [orig:108 _26 ] [108])) "fs/truncate.c":62:20 75 {*movsi_internal}
     (nil))
(jump_insn 115 108 116 9 (set (pc)
        (label_ref 111)) 807 {jump}
     (nil)
 -> 111)
(barrier 116 115 118)
(code_label 118 116 117 11 23 (nil) [1 uses])
(note 117 118 119 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 119 117 111 11 (const_int 0 [0]) "fs/truncate.c":51:9 843 {nop}
     (nil))
(code_label 111 119 112 10 17 (nil) [1 uses])
(note 112 111 121 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 121 112 0 NOTE_INSN_DELETED)
