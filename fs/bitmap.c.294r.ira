
;; Function free_inode (free_inode, funcdef_no=1, decl_uid=1109, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 169.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 21 n_edges 29 count 21 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 19
;; 2 succs { 20 3 }
;; 3 succs { 4 5 }
;; 4 succs { 19 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 13 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 20 succs { 19 }
;; 19 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r123,l0) best AREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a34 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:20000 DREG:20000 CREG:20000 BREG:20000 SIREG:20000 DIREG:20000 AD_REGS:20000 CLOBBERED_REGS:20000 Q_REGS:20000 NON_Q_REGS:20000 TLS_GOTBASE_REGS:20000 GENERAL_REGS:20000 MEM:108000
  a1(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a5(r123,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a6(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a9(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a19(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a29(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a30(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a35(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a40(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 167(l0): point = 1
   Insn 163(l0): point = 4
   Insn 156(l0): point = 6
   Insn 155(l0): point = 8
   Insn 154(l0): point = 10
   Insn 153(l0): point = 12
   Insn 152(l0): point = 14
   Insn 151(l0): point = 16
   Insn 150(l0): point = 18
   Insn 149(l0): point = 20
   Insn 148(l0): point = 22
   Insn 145(l0): point = 25
   Insn 144(l0): point = 27
   Insn 143(l0): point = 29
   Insn 142(l0): point = 31
   Insn 141(l0): point = 33
   Insn 140(l0): point = 35
   Insn 138(l0): point = 38
   Insn 137(l0): point = 40
   Insn 136(l0): point = 42
   Insn 133(l0): point = 44
   Insn 135(l0): point = 46
   Insn 168(l0): point = 48
   Insn 134(l0): point = 50
   Insn 132(l0): point = 52
   Insn 131(l0): point = 54
   Insn 130(l0): point = 56
   Insn 129(l0): point = 58
   Insn 128(l0): point = 60
   Insn 127(l0): point = 62
   Insn 124(l0): point = 65
   Insn 123(l0): point = 67
   Insn 122(l0): point = 69
   Insn 121(l0): point = 71
   Insn 120(l0): point = 73
   Insn 119(l0): point = 75
   Insn 117(l0): point = 78
   Insn 116(l0): point = 80
   Insn 115(l0): point = 82
   Insn 114(l0): point = 84
   Insn 113(l0): point = 86
   Insn 112(l0): point = 88
   Insn 111(l0): point = 90
   Insn 110(l0): point = 92
   Insn 109(l0): point = 94
   Insn 108(l0): point = 96
   Insn 105(l0): point = 99
   Insn 104(l0): point = 101
   Insn 103(l0): point = 103
   Insn 102(l0): point = 105
   Insn 101(l0): point = 107
   Insn 100(l0): point = 109
   Insn 97(l0): point = 112
   Insn 96(l0): point = 114
   Insn 95(l0): point = 116
   Insn 94(l0): point = 118
   Insn 93(l0): point = 120
   Insn 92(l0): point = 122
   Insn 90(l0): point = 125
   Insn 89(l0): point = 127
   Insn 88(l0): point = 129
   Insn 87(l0): point = 131
   Insn 84(l0): point = 134
   Insn 83(l0): point = 136
   Insn 82(l0): point = 138
   Insn 81(l0): point = 140
   Insn 80(l0): point = 142
   Insn 79(l0): point = 144
   Insn 77(l0): point = 147
   Insn 76(l0): point = 149
   Insn 75(l0): point = 151
   Insn 74(l0): point = 153
   Insn 73(l0): point = 155
   Insn 72(l0): point = 157
   Insn 71(l0): point = 159
   Insn 70(l0): point = 161
   Insn 69(l0): point = 163
   Insn 68(l0): point = 165
   Insn 67(l0): point = 167
   Insn 66(l0): point = 169
   Insn 63(l0): point = 172
   Insn 62(l0): point = 174
   Insn 61(l0): point = 176
   Insn 60(l0): point = 178
   Insn 59(l0): point = 180
   Insn 58(l0): point = 182
   Insn 56(l0): point = 185
   Insn 55(l0): point = 187
   Insn 54(l0): point = 189
   Insn 53(l0): point = 191
   Insn 50(l0): point = 194
   Insn 49(l0): point = 196
   Insn 48(l0): point = 198
   Insn 47(l0): point = 200
   Insn 46(l0): point = 202
   Insn 45(l0): point = 204
   Insn 44(l0): point = 206
   Insn 43(l0): point = 208
   Insn 42(l0): point = 210
   Insn 41(l0): point = 212
   Insn 40(l0): point = 214
   Insn 39(l0): point = 216
   Insn 38(l0): point = 218
   Insn 37(l0): point = 220
   Insn 36(l0): point = 222
   Insn 35(l0): point = 224
   Insn 33(l0): point = 227
   Insn 32(l0): point = 229
   Insn 29(l0): point = 231
   Insn 28(l0): point = 233
   Insn 161(l0): point = 236
   Insn 23(l0): point = 238
   Insn 22(l0): point = 240
   Insn 21(l0): point = 242
   Insn 20(l0): point = 244
   Insn 19(l0): point = 246
   Insn 18(l0): point = 248
   Insn 17(l0): point = 250
   Insn 15(l0): point = 253
   Insn 14(l0): point = 255
   Insn 13(l0): point = 257
   Insn 12(l0): point = 259
   Insn 6(l0): point = 262
   Insn 5(l0): point = 264
   Insn 169(l0): point = 266
 a0(r82): [243..266] [11..235]
 a1(r126): [21..22]
 a2(r125): [32..33]
 a3(r101): [41..42]
 a4(r100): [43..44]
 a5(r123): [45..48]
 a6(r98): [47..56]
 a7(r99): [47..52]
 a8(r124): [49..50]
 a9(r122): [53..54]
 a10(r97): [57..58]
 a11(r96): [59..60]
 a12(r121): [61..62]
 a13(r120): [72..73]
 a14(r119): [83..84]
 a15(r117): [85..88]
 a16(r118): [85..86]
 a17(r95): [87..90]
 a18(r94): [91..92]
 a19(r93): [93..94]
 a20(r116): [95..96]
 a21(r115): [106..107]
 a22(r92): [115..116]
 a23(r91): [115..120]
 a24(r114): [117..118]
 a25(r113): [121..122]
 a26(r90): [128..129]
 a27(r112): [130..131]
 a28(r111): [141..142]
 a29(r110): [152..153]
 a30(r89): [162..165]
 a31(r88): [166..167]
 a32(r109): [168..169]
 a33(r108): [179..180]
 a34(r87): [188..189]
 a35(r107): [190..191]
 a36(r106): [201..202]
 a37(r105): [213..214]
 a38(r86): [217..220]
 a39(r85): [221..222]
 a40(r104): [223..224]
 a41(r84): [230..231]
 a42(r103): [232..233]
 a43(r83): [256..257]
 a44(r102): [258..259]
Compressing live ranges: from 269 to 80 - 29%
Ranges after the compression:
 a0(r82): [0..79]
 a1(r126): [0..1]
 a2(r125): [2..3]
 a3(r101): [4..5]
 a4(r100): [6..7]
 a5(r123): [8..9]
 a6(r98): [8..13]
 a7(r99): [8..11]
 a8(r124): [10..11]
 a9(r122): [12..13]
 a10(r97): [14..15]
 a11(r96): [16..17]
 a12(r121): [18..19]
 a13(r120): [20..21]
 a14(r119): [22..23]
 a15(r117): [24..27]
 a16(r118): [24..25]
 a17(r95): [26..27]
 a18(r94): [28..29]
 a19(r93): [30..31]
 a20(r116): [32..33]
 a21(r115): [34..35]
 a22(r92): [36..37]
 a23(r91): [36..39]
 a24(r114): [38..39]
 a25(r113): [40..41]
 a26(r90): [42..43]
 a27(r112): [44..45]
 a28(r111): [46..47]
 a29(r110): [48..49]
 a30(r89): [50..51]
 a31(r88): [52..53]
 a32(r109): [54..55]
 a33(r108): [56..57]
 a34(r87): [58..59]
 a35(r107): [60..61]
 a36(r106): [62..63]
 a37(r105): [64..65]
 a38(r86): [66..67]
 a39(r85): [68..69]
 a40(r104): [70..71]
 a41(r84): [72..73]
 a42(r103): [74..75]
 a43(r83): [76..77]
 a44(r102): [78..79]
  pref0:a5(r123)<-hr0@2000
  pref1:a29(r110)<-hr0@1500
  pref2:a0(r82)<-hr3@3000
  regions=1, blocks=21, points=80
    allocnos=45 (big 0), copies=0, conflicts=0, ranges=45
Disposition:
    0:r82  l0     3   43:r83  l0     0   41:r84  l0     0   39:r85  l0     0
   38:r86  l0     0   34:r87  l0     0   31:r88  l0     0   30:r89  l0     0
   26:r90  l0     0   23:r91  l0     1   22:r92  l0     0   19:r93  l0     0
   18:r94  l0     0   17:r95  l0     1   11:r96  l0     0   10:r97  l0     0
    6:r98  l0     2    7:r99  l0     1    4:r100 l0     4    3:r101 l0     0
   44:r102 l0     0   42:r103 l0     0   40:r104 l0     0   37:r105 l0     0
   36:r106 l0     0   35:r107 l0     0   33:r108 l0     0   32:r109 l0     0
   29:r110 l0     0   28:r111 l0     0   27:r112 l0     0   25:r113 l0     0
   24:r114 l0     0   21:r115 l0     0   20:r116 l0     0   15:r117 l0     0
   16:r118 l0     1   14:r119 l0     0   13:r120 l0     0   12:r121 l0     0
    9:r122 l0     0    5:r123 l0     0    8:r124 l0     0    2:r125 l0     0
    1:r126 l0     0
+++Costs: overall 13000, reg 13000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


free_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,1u} r1={11d} r2={11d} r3={10d,10u} r6={1d,20u} r7={36d,85u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,31u} r17={44d,9u} r18={10d} r19={1d,28u} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r82={1d,17u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={2d,2u} r124={1d,1u} r125={1d,1u} r126={1d,1u} 
;;    total ref usage 1068{822d,246u,0e} in 125{115 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 169 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 169 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 169 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":53:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 166)
            (pc))) "fs/bitmap.c":53:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 166)
(note 11 6 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:SI 102)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":55:15 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 102)
                (const_int 44 [0x2c])) [4 inode_25(D)->i_dev+0 S2 A32])) "fs/bitmap.c":55:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 83 [ _1 ])
            (const_int 0 [0]))) "fs/bitmap.c":55:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "fs/bitmap.c":55:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 26)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":56:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 18 17 19 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (const_int 56 [0x38])) "fs/bitmap.c":56:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 19 18 20 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (const_int 0 [0])) "fs/bitmap.c":56:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 20 19 21 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":56:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 21 20 22 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":56:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x7a4f6d73b200 memset>) [0 memset S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":56:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 23 22 161 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":56:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 161 23 162 4 (set (pc)
        (label_ref 159)) "fs/bitmap.c":57:9 807 {jump}
     (nil)
 -> 159)
(barrier 162 161 26)
(code_label 26 162 27 5 4 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":59:14 75 {*movsi_internal}
     (nil))
(insn 29 28 32 5 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 103)
                (const_int 48 [0x30])) [4 inode_25(D)->i_count+0 S2 A32])) "fs/bitmap.c":59:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 32 29 33 5 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 84 [ _2 ])
            (const_int 1 [0x1]))) "fs/bitmap.c":59:8 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "fs/bitmap.c":59:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 51)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg/f:SI 104)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":60:61 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 104)
                (const_int 48 [0x30])) [4 inode_25(D)->i_count+0 S2 A32])) "fs/bitmap.c":60:61 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 37 36 38 6 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/bitmap.c":60:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 38 37 39 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":60:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 39 38 40 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg:SI 86 [ _4 ])) "fs/bitmap.c":60:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 40 39 41 6 (set (reg/f:SI 105)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7a4f6d75d630 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":60:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7a4f6d75d630 *.LC0>)
        (nil)))
(insn 41 40 42 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 105)) "fs/bitmap.c":60:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 42 41 43 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":60:9 75 {*movsi_internal}
     (nil))
(call_insn 43 42 44 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7a4f6d710900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":60:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":60:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 45 44 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":61:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 46 45 47 6 (set (reg/f:SI 106)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7a4f6d75d6c0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":61:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7a4f6d75d6c0 *.LC1>)
        (nil)))
(insn 47 46 48 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 106)) "fs/bitmap.c":61:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 48 47 49 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":61:9 75 {*movsi_internal}
     (nil))
(call_insn 49 48 50 6 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":61:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 50 49 51 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":61:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 51 50 52 7 5 (nil) [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":63:14 75 {*movsi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:QI 87 [ _5 ])
        (mem:QI (plus:SI (reg/f:SI 107)
                (const_int 13 [0xd])) [0 inode_25(D)->i_nlinks+0 S1 A8])) "fs/bitmap.c":63:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 55 54 56 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _5 ])
            (const_int 0 [0]))) "fs/bitmap.c":63:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (nil)))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "fs/bitmap.c":63:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":64:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 59 58 60 8 (set (reg/f:SI 108)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7a4f6d75d750 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":64:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7a4f6d75d750 *.LC2>)
        (nil)))
(insn 60 59 61 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 108)) "fs/bitmap.c":64:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 61 60 62 8 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":64:9 75 {*movsi_internal}
     (nil))
(call_insn 62 61 63 8 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":64:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 63 62 64 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":64:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 64 63 65 9 6 (nil) [1 uses])
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":65:31 75 {*movsi_internal}
     (nil))
(insn 67 66 68 9 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (reg/f:SI 109)
                (const_int 44 [0x2c])) [4 inode_25(D)->i_dev+0 S2 A32])) "fs/bitmap.c":65:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 68 67 69 9 (set (reg:SI 89 [ _7 ])
        (zero_extend:SI (reg:HI 88 [ _6 ]))) "fs/bitmap.c":65:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(insn 69 68 70 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":65:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 70 69 71 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg:SI 89 [ _7 ])) "fs/bitmap.c":65:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 71 70 72 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":65:16 75 {*movsi_internal}
     (nil))
(call_insn 72 71 73 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7a4f6d70e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":65:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 73 72 74 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":65:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 74 73 75 9 (set (reg:SI 110)
        (reg:SI 0 ax)) "fs/bitmap.c":65:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 75 74 76 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])
        (reg:SI 110)) "fs/bitmap.c":65:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(insn 76 75 77 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":65:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 77 76 78 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) "fs/bitmap.c":65:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 85)
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":66:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 80 79 81 10 (set (reg/f:SI 111)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7a4f6d75d7e0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":66:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7a4f6d75d7e0 *.LC3>)
        (nil)))
(insn 81 80 82 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 111)) "fs/bitmap.c":66:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 82 81 83 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":66:9 75 {*movsi_internal}
     (nil))
(call_insn 83 82 84 10 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":66:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 84 83 85 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":66:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 85 84 86 11 7 (nil) [1 uses])
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":67:14 75 {*movsi_internal}
     (nil))
(insn 88 87 89 11 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 112)
                (const_int 46 [0x2e])) [4 inode_25(D)->i_num+0 S2 A16])) "fs/bitmap.c":67:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 89 88 90 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 90 [ _8 ])
            (const_int 0 [0]))) "fs/bitmap.c":67:8 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(jump_insn 90 89 91 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "fs/bitmap.c":67:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 98)
(note 91 90 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 12 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":67:34 75 {*movsi_internal}
     (nil))
(insn 93 92 94 12 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 113)
                (const_int 46 [0x2e])) [4 inode_25(D)->i_num+0 S2 A16])) "fs/bitmap.c":67:34 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 94 93 95 12 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":67:46 75 {*movsi_internal}
     (nil))
(insn 95 94 96 12 (set (reg:HI 92 [ _10 ])
        (mem:HI (reg/f:SI 114) [4 sb_31->s_ninodes+0 S2 A32])) "fs/bitmap.c":67:46 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 96 95 97 12 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 91 [ _9 ])
            (reg:HI 92 [ _10 ]))) "fs/bitmap.c":67:26 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 92 [ _10 ])
        (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
            (nil))))
(jump_insn 97 96 98 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/bitmap.c":67:26 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 106)
(code_label 98 97 99 13 8 (nil) [1 uses])
(note 99 98 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":68:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 101 100 102 13 (set (reg/f:SI 115)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7a4f6d75d870 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":68:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7a4f6d75d870 *.LC4>)
        (nil)))
(insn 102 101 103 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 115)) "fs/bitmap.c":68:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 103 102 104 13 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":68:9 75 {*movsi_internal}
     (nil))
(call_insn 104 103 105 13 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":68:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 105 104 106 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":68:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 106 105 107 14 9 (nil) [1 uses])
(note 107 106 108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 14 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":69:32 75 {*movsi_internal}
     (nil))
(insn 109 108 110 14 (set (reg:HI 93 [ _11 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 46 [0x2e])) [4 inode_25(D)->i_num+0 S2 A16])) "fs/bitmap.c":69:32 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 110 109 111 14 (parallel [
            (set (reg:HI 94 [ _12 ])
                (lshiftrt:HI (reg:HI 93 [ _11 ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":69:40 711 {*lshrhi3_1}
     (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 111 110 112 14 (set (reg:SI 95 [ _13 ])
        (zero_extend:SI (reg:HI 94 [ _12 ]))) "fs/bitmap.c":69:40 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 94 [ _12 ])
        (nil)))
(insn 112 111 113 14 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":69:14 75 {*movsi_internal}
     (nil))
(insn 113 112 114 14 (parallel [
            (set (reg:SI 118)
                (plus:SI (reg:SI 95 [ _13 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":69:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 14 (set (reg/f:SI 119)
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 118)
                        (const_int 4 [0x4]))
                    (reg/f:SI 117))
                (const_int 4 [0x4])) [6 sb_31->s_imap[_13]+0 S4 A32])) "fs/bitmap.c":69:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_DEAD (reg/f:SI 117)
            (nil))))
(insn 115 114 116 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])
        (reg/f:SI 119)) "fs/bitmap.c":69:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 116 115 117 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":69:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 117 116 118 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "fs/bitmap.c":69:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 125)
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":70:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 120 119 121 15 (set (reg/f:SI 120)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7a4f6d75d900 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":70:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7a4f6d75d900 *.LC5>)
        (nil)))
(insn 121 120 122 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 120)) "fs/bitmap.c":70:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 122 121 123 15 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":70:9 75 {*movsi_internal}
     (nil))
(call_insn 123 122 124 15 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":70:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 124 123 125 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":70:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 125 124 126 16 10 (nil) [1 uses])
(note 126 125 127 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 16 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":71:9 75 {*movsi_internal}
     (nil))
(insn 128 127 129 16 (set (reg:HI 96 [ _14 ])
        (mem:HI (plus:SI (reg/f:SI 121)
                (const_int 46 [0x2e])) [4 inode_25(D)->i_num+0 S2 A16])) "fs/bitmap.c":71:9 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 129 128 130 16 (set (reg:SI 97 [ _15 ])
        (zero_extend:SI (reg:HI 96 [ _14 ]))) "fs/bitmap.c":71:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 96 [ _14 ])
        (nil)))
(insn 130 129 131 16 (parallel [
            (set (reg:SI 98 [ _16 ])
                (and:SI (reg:SI 97 [ _15 ])
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":71:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ _15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 131 130 132 16 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])) "fs/bitmap.c":71:9 75 {*movsi_internal}
     (nil))
(insn 132 131 134 16 (set (reg/f:SI 99 [ _17 ])
        (mem/f:SI (reg/f:SI 122) [2 bh_34->b_data+0 S4 A32])) "fs/bitmap.c":71:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 134 132 168 16 (set (reg:SI 124)
        (const_int 0 [0])) "fs/bitmap.c":71:9 75 {*movsi_internal}
     (nil))
(insn 168 134 135 16 (set (reg:SI 123 [ res ])
        (reg:SI 124)) "fs/bitmap.c":71:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 135 168 133 16 (parallel [
            (set (reg:SI 123 [ res ])
                (asm_operands/v:SI ("btrl %2,%3
	setnb %%al") ("=a") 0 [
                        (reg:SI 123 [ res ])
                        (reg:SI 98 [ _16 ])
                        (mem:QI (reg/f:SI 99 [ _17 ]) [0 *_17+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("0") fs/bitmap.c:71)
                        (asm_input:SI ("r") fs/bitmap.c:71)
                        (asm_input:QI ("m") fs/bitmap.c:71)
                    ]
                     [] fs/bitmap.c:71))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":71:9 -1
     (expr_list:REG_DEAD (reg/f:SI 99 [ _17 ])
        (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 133 135 136 16 (set (reg/v:SI 100 [ res ])
        (reg:SI 123 [ res ])) "fs/bitmap.c":71:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ res ])
        (nil)))
(insn 136 133 137 16 (set (reg:SI 101 [ _37 ])
        (reg/v:SI 100 [ res ])) "fs/bitmap.c":71:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 100 [ res ])
        (nil)))
(insn 137 136 138 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ _37 ])
            (const_int 0 [0]))) "fs/bitmap.c":71:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _37 ])
        (nil)))
(jump_insn 138 137 139 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "fs/bitmap.c":71:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 146)
(note 139 138 140 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":72:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 141 140 142 17 (set (reg/f:SI 125)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7a4f6d75da20 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":72:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7a4f6d75da20 *.LC6>)
        (nil)))
(insn 142 141 143 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 125)) "fs/bitmap.c":72:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 143 142 144 17 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":72:9 75 {*movsi_internal}
     (nil))
(call_insn 144 143 145 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7a4f6d710900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":72:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 145 144 146 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":72:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 146 145 147 18 11 (nil) [1 uses])
(note 147 146 148 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 18 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])) "fs/bitmap.c":73:16 75 {*movsi_internal}
     (nil))
(insn 149 148 150 18 (set (mem:QI (plus:SI (reg/f:SI 126)
                (const_int 11 [0xb])) [0 bh_34->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/bitmap.c":73:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 150 149 151 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":74:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 151 150 152 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (const_int 56 [0x38])) "fs/bitmap.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 152 151 153 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (const_int 0 [0])) "fs/bitmap.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 153 152 154 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [8 inode+0 S4 A32])) "fs/bitmap.c":74:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 154 153 155 18 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":74:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 155 154 156 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("memset") [flags 0x41]  <function_decl 0x7a4f6d73b200 memset>) [0 memset S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":74:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 156 155 163 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":74:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 163 156 164 18 (set (pc)
        (label_ref 159)) 807 {jump}
     (nil)
 -> 159)
(barrier 164 163 166)
(code_label 166 164 165 20 12 (nil) [1 uses])
(note 165 166 167 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 167 165 159 20 (const_int 0 [0]) "fs/bitmap.c":54:9 843 {nop}
     (nil))
(code_label 159 167 160 19 1 (nil) [2 uses])
(note 160 159 0 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

;; Function free_block (free_block, funcdef_no=2, decl_uid=1119, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 155.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 20 count 15 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 11 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a40 (r88,l0) best Q_REGS, allocno Q_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a42 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a4(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a5(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:28000
  a6(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r82,l0) costs: AREG:16000 DREG:16000 CREG:16000 BREG:16000 SIREG:16000 DIREG:16000 AD_REGS:16000 CLOBBERED_REGS:16000 Q_REGS:16000 NON_Q_REGS:16000 TLS_GOTBASE_REGS:16000 GENERAL_REGS:16000 MEM:84000
  a9(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a12(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a13(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a14(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a15(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a19(r124,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a21(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a23(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a26(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a27(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a28(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:28000
  a29(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a33(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a41(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a43(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a45(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a48(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a51(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 147(l0): point = 1
   Insn 146(l0): point = 3
   Insn 145(l0): point = 5
   Insn 144(l0): point = 7
   Insn 143(l0): point = 9
   Insn 142(l0): point = 11
   Insn 141(l0): point = 13
   Insn 140(l0): point = 15
   Insn 137(l0): point = 17
   Insn 136(l0): point = 19
   Insn 135(l0): point = 21
   Insn 132(l0): point = 24
   Insn 131(l0): point = 26
   Insn 130(l0): point = 28
   Insn 129(l0): point = 30
   Insn 128(l0): point = 32
   Insn 127(l0): point = 34
   Insn 126(l0): point = 36
   Insn 125(l0): point = 38
   Insn 124(l0): point = 40
   Insn 123(l0): point = 42
   Insn 122(l0): point = 44
   Insn 121(l0): point = 46
   Insn 120(l0): point = 48
   Insn 119(l0): point = 50
   Insn 118(l0): point = 52
   Insn 117(l0): point = 54
   Insn 116(l0): point = 56
   Insn 115(l0): point = 58
   Insn 114(l0): point = 60
   Insn 113(l0): point = 62
   Insn 111(l0): point = 65
   Insn 110(l0): point = 67
   Insn 109(l0): point = 69
   Insn 106(l0): point = 71
   Insn 108(l0): point = 73
   Insn 154(l0): point = 75
   Insn 107(l0): point = 77
   Insn 105(l0): point = 79
   Insn 104(l0): point = 81
   Insn 103(l0): point = 83
   Insn 102(l0): point = 85
   Insn 101(l0): point = 87
   Insn 100(l0): point = 89
   Insn 99(l0): point = 91
   Insn 98(l0): point = 93
   Insn 95(l0): point = 95
   Insn 94(l0): point = 97
   Insn 93(l0): point = 99
   Insn 92(l0): point = 101
   Insn 91(l0): point = 103
   Insn 90(l0): point = 105
   Insn 89(l0): point = 107
   Insn 88(l0): point = 109
   Insn 87(l0): point = 111
   Insn 86(l0): point = 113
   Insn 83(l0): point = 116
   Insn 82(l0): point = 118
   Insn 81(l0): point = 120
   Insn 80(l0): point = 122
   Insn 79(l0): point = 124
   Insn 78(l0): point = 126
   Insn 77(l0): point = 128
   Insn 76(l0): point = 130
   Insn 75(l0): point = 132
   Insn 152(l0): point = 135
   Insn 70(l0): point = 137
   Insn 69(l0): point = 139
   Insn 68(l0): point = 141
   Insn 67(l0): point = 143
   Insn 66(l0): point = 145
   Insn 65(l0): point = 147
   Insn 64(l0): point = 149
   Insn 63(l0): point = 151
   Insn 62(l0): point = 153
   Insn 61(l0): point = 155
   Insn 60(l0): point = 157
   Insn 58(l0): point = 160
   Insn 57(l0): point = 162
   Insn 56(l0): point = 164
   Insn 55(l0): point = 166
   Insn 53(l0): point = 169
   Insn 52(l0): point = 171
   Insn 51(l0): point = 173
   Insn 50(l0): point = 175
   Insn 49(l0): point = 177
   Insn 48(l0): point = 179
   Insn 47(l0): point = 181
   Insn 46(l0): point = 183
   Insn 45(l0): point = 185
   Insn 44(l0): point = 187
   Insn 41(l0): point = 190
   Insn 40(l0): point = 192
   Insn 39(l0): point = 194
   Insn 38(l0): point = 196
   Insn 37(l0): point = 198
   Insn 36(l0): point = 200
   Insn 33(l0): point = 203
   Insn 32(l0): point = 205
   Insn 31(l0): point = 207
   Insn 30(l0): point = 209
   Insn 29(l0): point = 211
   Insn 27(l0): point = 214
   Insn 26(l0): point = 216
   Insn 25(l0): point = 218
   Insn 24(l0): point = 220
   Insn 23(l0): point = 222
   Insn 20(l0): point = 225
   Insn 19(l0): point = 227
   Insn 18(l0): point = 229
   Insn 17(l0): point = 231
   Insn 16(l0): point = 233
   Insn 15(l0): point = 235
   Insn 13(l0): point = 238
   Insn 12(l0): point = 240
   Insn 11(l0): point = 242
   Insn 10(l0): point = 244
   Insn 9(l0): point = 246
   Insn 8(l0): point = 248
   Insn 7(l0): point = 250
   Insn 6(l0): point = 252
   Insn 5(l0): point = 254
   Insn 155(l0): point = 256
 a0(r102): [2..3]
 a1(r134): [4..7]
 a2(r135): [4..5]
 a3(r101): [6..9]
 a4(r133): [10..11]
 a5(r131): [12..19]
 a6(r132): [14..17]
 a7(r130): [20..21]
 a8(r82): [142..256] [29..134]
 a9(r129): [31..32]
 a10(r128): [43..44]
 a11(r100): [49..52]
 a12(r99): [53..54]
 a13(r127): [55..56]
 a14(r98): [55..58]
 a15(r97): [59..60]
 a16(r126): [61..62]
 a17(r104): [68..69]
 a18(r103): [70..71]
 a19(r124): [72..75]
 a20(r93): [74..101]
 a21(r96): [74..79]
 a22(r125): [76..77]
 a23(r95): [80..81]
 a24(r122): [82..85]
 a25(r123): [82..83]
 a26(r94): [84..87]
 a27(r121): [88..89]
 a28(r119): [90..97]
 a29(r120): [92..95]
 a30(r118): [98..99]
 a31(r117): [102..103]
 a32(r92): [106..107]
 a33(r91): [108..109]
 a34(r90): [110..111]
 a35(r116): [112..113]
 a36(r115): [127..128]
 a37(r114): [131..132]
 a38(r113): [144..145]
 a39(r89): [152..153]
 a40(r88): [154..155]
 a41(r112): [156..157]
 a42(r87): [163..164]
 a43(r111): [165..166]
 a44(r110): [174..175]
 a45(r109): [197..198]
 a46(r86): [206..207]
 a47(r85): [208..209]
 a48(r108): [210..211]
 a49(r84): [217..218]
 a50(r83): [219..220]
 a51(r107): [221..222]
 a52(r106): [232..233]
 a53(r105): [243..244]
Compressing live ranges: from 259 to 92 - 35%
Ranges after the compression:
 a0(r102): [0..1]
 a1(r134): [2..5]
 a2(r135): [2..3]
 a3(r101): [4..5]
 a4(r133): [6..7]
 a5(r131): [8..9]
 a6(r132): [8..9]
 a7(r130): [10..11]
 a8(r82): [12..91]
 a9(r129): [12..13]
 a10(r128): [14..15]
 a11(r100): [16..17]
 a12(r99): [18..19]
 a13(r127): [20..21]
 a14(r98): [20..21]
 a15(r97): [22..23]
 a16(r126): [24..25]
 a17(r104): [26..27]
 a18(r103): [28..29]
 a19(r124): [30..31]
 a20(r93): [30..45]
 a21(r96): [30..33]
 a22(r125): [32..33]
 a23(r95): [34..35]
 a24(r122): [36..39]
 a25(r123): [36..37]
 a26(r94): [38..39]
 a27(r121): [40..41]
 a28(r119): [42..43]
 a29(r120): [42..43]
 a30(r118): [44..45]
 a31(r117): [46..47]
 a32(r92): [48..49]
 a33(r91): [50..51]
 a34(r90): [52..53]
 a35(r116): [54..55]
 a36(r115): [56..57]
 a37(r114): [58..59]
 a38(r113): [60..61]
 a39(r89): [62..63]
 a40(r88): [64..65]
 a41(r112): [66..67]
 a42(r87): [68..69]
 a43(r111): [70..71]
 a44(r110): [72..73]
 a45(r109): [74..75]
 a46(r86): [76..77]
 a47(r85): [78..79]
 a48(r108): [80..81]
 a49(r84): [82..83]
 a50(r83): [84..85]
 a51(r107): [86..87]
 a52(r106): [88..89]
 a53(r105): [90..91]
  pref0:a19(r124)<-hr0@2000
  pref1:a44(r110)<-hr0@1500
  pref2:a53(r105)<-hr0@1500
  pref3:a8(r82)<-hr3@3000
  regions=1, blocks=15, points=92
    allocnos=54 (big 0), copies=0, conflicts=0, ranges=54
Disposition:
    8:r82  l0     3   50:r83  l0     0   49:r84  l0     0   47:r85  l0     0
   46:r86  l0     0   42:r87  l0     0   40:r88  l0     0   39:r89  l0     0
   34:r90  l0     0   33:r91  l0     0   32:r92  l0     0   20:r93  l0     2
   26:r94  l0     1   23:r95  l0     0   21:r96  l0     1   15:r97  l0     0
   14:r98  l0     1   12:r99  l0     0   11:r100 l0     0    3:r101 l0     1
    0:r102 l0     0   18:r103 l0     4   17:r104 l0     0   53:r105 l0     0
   52:r106 l0     0   51:r107 l0     0   48:r108 l0     0   45:r109 l0     0
   44:r110 l0     0   43:r111 l0     0   41:r112 l0     0   38:r113 l0     0
   37:r114 l0     0   36:r115 l0     0   35:r116 l0     0   31:r117 l0     0
   30:r118 l0     0   28:r119 l0     0   29:r120 l0     1   27:r121 l0     0
   24:r122 l0     0   25:r123 l0     1   19:r124 l0     0   22:r125 l0     0
   16:r126 l0     0   13:r127 l0     0   10:r128 l0     0    9:r129 l0     0
    7:r130 l0     0    5:r131 l0     0    6:r132 l0     1    4:r133 l0     0
    1:r134 l0     0    2:r135 l0     1
+++Costs: overall 8000, reg 8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


free_block

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,2u} r1={9d} r2={9d} r3={8d,8u} r6={1d,14u} r7={30d,66u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,27u,2e} r17={44d,8u} r18={8d} r19={1d,29u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,13u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={2d,4u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={2d,2u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={2d,4u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 919{689d,227u,3e} in 123{115 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 155 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 155 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 155 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":82:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":82:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":82:16 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7a4f6d70e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":82:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":82:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 105)
        (reg:SI 0 ax)) "fs/bitmap.c":82:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])
        (reg:SI 105)) "fs/bitmap.c":82:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":82:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "fs/bitmap.c":82:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":83:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 16 15 17 3 (set (reg/f:SI 106)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7a4f6d75dbd0 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":83:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7a4f6d75dbd0 *.LC7>)
        (nil)))
(insn 17 16 18 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 106)) "fs/bitmap.c":83:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 18 17 19 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":83:9 75 {*movsi_internal}
     (nil))
(call_insn 19 18 20 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":83:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":83:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 21 20 22 4 14 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":84:19 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 107)
                (const_int 8 [0x8])) [4 sb_29->s_firstdatazone+0 S2 A32])) "fs/bitmap.c":84:19 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (nil)))
(insn 25 24 26 4 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/bitmap.c":84:19 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 26 25 27 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 block+0 S4 A32])
            (reg:SI 84 [ _2 ]))) "fs/bitmap.c":84:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 27 26 28 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "fs/bitmap.c":84:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":84:51 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 108)
                (const_int 2 [0x2])) [4 sb_29->s_nzones+0 S2 A16])) "fs/bitmap.c":84:51 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(insn 31 30 32 5 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/bitmap.c":84:51 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 32 31 33 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [13 block+0 S4 A32])
            (reg:SI 86 [ _4 ]))) "fs/bitmap.c":84:37 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/bitmap.c":84:37 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 42)
(code_label 34 33 35 6 15 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":85:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 37 36 38 6 (set (reg/f:SI 109)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7a4f6d75dc60 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":85:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7a4f6d75dc60 *.LC8>)
        (nil)))
(insn 38 37 39 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 109)) "fs/bitmap.c":85:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 39 38 40 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":85:9 75 {*movsi_internal}
     (nil))
(call_insn 40 39 41 6 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":85:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":85:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 42 41 43 7 16 (nil) [1 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":86:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 45 44 46 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 block+0 S4 A32])) "fs/bitmap.c":86:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 46 45 47 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":86:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 47 46 48 7 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":86:10 75 {*movsi_internal}
     (nil))
(call_insn 48 47 49 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_hash_table") [flags 0x41]  <function_decl 0x7a4f6d70e400 get_hash_table>) [0 get_hash_table S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":86:10 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 49 48 50 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":86:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 50 49 51 7 (set (reg:SI 110)
        (reg:SI 0 ax)) "fs/bitmap.c":86:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 51 50 52 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])
        (reg:SI 110)) "fs/bitmap.c":86:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110)
        (nil)))
(insn 52 51 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":87:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 53 52 54 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "fs/bitmap.c":87:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])) "fs/bitmap.c":88:15 75 {*movsi_internal}
     (nil))
(insn 56 55 57 8 (set (reg:QI 87 [ _5 ])
        (mem:QI (plus:SI (reg/f:SI 111)
                (const_int 12 [0xc])) [0 bh_34->b_count+0 S1 A32])) "fs/bitmap.c":88:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 57 56 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 87 [ _5 ])
            (const_int 1 [0x1]))) "fs/bitmap.c":88:12 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
        (nil)))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "fs/bitmap.c":88:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:SI 112)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])) "fs/bitmap.c":90:35 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (reg:QI 88 [ _6 ])
        (mem:QI (plus:SI (reg/f:SI 112)
                (const_int 12 [0xc])) [0 bh_34->b_count+0 S1 A32])) "fs/bitmap.c":90:35 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (nil)))
(insn 62 61 63 9 (set (reg:SI 89 [ _7 ])
        (zero_extend:SI (reg:QI 88 [ _6 ]))) "fs/bitmap.c":89:13 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 88 [ _6 ])
        (nil)))
(insn 63 62 64 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg:SI 89 [ _7 ])) "fs/bitmap.c":89:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 64 63 65 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 block+0 S4 A32])) "fs/bitmap.c":89:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 65 64 66 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":89:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 66 65 67 9 (set (reg/f:SI 113)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7a4f6d75dcf0 *.LC9>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":89:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x7a4f6d75dcf0 *.LC9>)
        (nil)))
(insn 67 66 68 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 113)) "fs/bitmap.c":89:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 68 67 69 9 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":89:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 69 68 70 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7a4f6d710900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":89:13 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 70 69 152 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":89:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 152 70 153 9 (set (pc)
        (label_ref 150)) "fs/bitmap.c":91:13 807 {jump}
     (nil)
 -> 150)
(barrier 153 152 73)
(code_label 73 153 74 10 18 (nil) [1 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])) "fs/bitmap.c":93:20 75 {*movsi_internal}
     (nil))
(insn 76 75 77 10 (set (mem:QI (plus:SI (reg/f:SI 114)
                (const_int 11 [0xb])) [0 bh_34->b_dirt+0 S1 A8])
        (const_int 0 [0])) "fs/bitmap.c":93:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 77 76 78 10 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])) "fs/bitmap.c":94:24 75 {*movsi_internal}
     (nil))
(insn 78 77 79 10 (set (mem:QI (plus:SI (reg/f:SI 115)
                (const_int 10 [0xa])) [0 bh_34->b_uptodate+0 S1 A16])
        (const_int 0 [0])) "fs/bitmap.c":94:24 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 79 78 80 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":95:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 80 79 81 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [6 bh+0 S4 A32])) "fs/bitmap.c":95:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 81 80 82 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":95:9 75 {*movsi_internal}
     (nil))
(call_insn 82 81 83 10 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7a4f6d70e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":95:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 83 82 84 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":95:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 84 83 85 11 17 (nil) [1 uses])
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":97:16 75 {*movsi_internal}
     (nil))
(insn 87 86 88 11 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 8 [0x8])) [4 sb_29->s_firstdatazone+0 S2 A32])) "fs/bitmap.c":97:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 88 87 89 11 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:HI 90 [ _8 ]))) "fs/bitmap.c":97:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 89 88 90 11 (parallel [
            (set (reg:SI 92 [ _10 ])
                (plus:SI (reg:SI 91 [ _9 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":97:34 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                        (const_int 4 [0x4])) [13 block+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [13 block+0 S4 A32])
                    (reg:SI 92 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":97:11 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 11 (set (reg:SI 117)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 block+0 S4 A32])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (nil))
(insn 92 91 93 11 (parallel [
            (set (reg:SI 93 [ _11 ])
                (and:SI (reg:SI 117)
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":98:9 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                            (const_int 4 [0x4])) [13 block+0 S4 A32])
                    (const_int 8191 [0x1fff]))
                (nil)))))
(insn 93 92 94 11 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 block+0 S4 A32])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (nil))
(insn 94 93 95 11 (set (reg:SI 119)
        (reg:SI 118)) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 95 94 98 11 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 119)
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":98:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 95 99 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 119)
            (const_int 0 [0]))) "fs/bitmap.c":98:9 7 {*cmpsi_ccno_1}
     (nil))
(insn 99 98 100 11 (set (reg:SI 119)
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 120)
            (reg:SI 119))) "fs/bitmap.c":98:9 1100 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 100 99 101 11 (parallel [
            (set (reg:SI 121)
                (ashiftrt:SI (reg:SI 119)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":98:9 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 119)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 101 100 102 11 (set (reg:SI 94 [ _12 ])
        (reg:SI 121)) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 102 101 103 11 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (nil))
(insn 103 102 104 11 (parallel [
            (set (reg:SI 123)
                (plus:SI (reg:SI 94 [ _12 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":98:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 11 (set (reg/f:SI 95 [ _13 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 123)
                        (const_int 4 [0x4]))
                    (reg/f:SI 122))
                (const_int 4 [0x4])) [6 sb_29->s_zmap[_12]+0 S4 A32])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123)
        (expr_list:REG_DEAD (reg/f:SI 122)
            (nil))))
(insn 105 104 107 11 (set (reg/f:SI 96 [ _14 ])
        (mem/f:SI (reg/f:SI 95 [ _13 ]) [2 _13->b_data+0 S4 A32])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
        (nil)))
(insn 107 105 154 11 (set (reg:SI 125)
        (const_int 0 [0])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (nil))
(insn 154 107 108 11 (set (reg:SI 124 [ res ])
        (reg:SI 125)) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 108 154 106 11 (parallel [
            (set (reg:SI 124 [ res ])
                (asm_operands/v:SI ("btrl %2,%3
	setnb %%al") ("=a") 0 [
                        (reg:SI 124 [ res ])
                        (reg:SI 93 [ _11 ])
                        (mem:QI (reg/f:SI 96 [ _14 ]) [0 *_14+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("0") fs/bitmap.c:98)
                        (asm_input:SI ("r") fs/bitmap.c:98)
                        (asm_input:QI ("m") fs/bitmap.c:98)
                    ]
                     [] fs/bitmap.c:98))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":98:9 -1
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (expr_list:REG_DEAD (reg:SI 93 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 106 108 109 11 (set (reg/v:SI 103 [ res ])
        (reg:SI 124 [ res ])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 124 [ res ])
        (nil)))
(insn 109 106 110 11 (set (reg:SI 104 [ _41 ])
        (reg/v:SI 103 [ res ])) "fs/bitmap.c":98:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 103 [ res ])
        (nil)))
(insn 110 109 111 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ _41 ])
            (const_int 0 [0]))) "fs/bitmap.c":98:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 104 [ _41 ])
        (nil)))
(jump_insn 111 110 112 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "fs/bitmap.c":98:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 133)
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":99:51 75 {*movsi_internal}
     (nil))
(insn 114 113 115 12 (set (reg:HI 97 [ _15 ])
        (mem:HI (plus:SI (reg/f:SI 126)
                (const_int 8 [0x8])) [4 sb_29->s_firstdatazone+0 S2 A32])) "fs/bitmap.c":99:51 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 115 114 116 12 (set (reg:SI 98 [ _16 ])
        (zero_extend:SI (reg:HI 97 [ _15 ]))) "fs/bitmap.c":99:51 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 97 [ _15 ])
        (nil)))
(insn 116 115 117 12 (set (reg:SI 127)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 block+0 S4 A32])) "fs/bitmap.c":99:47 75 {*movsi_internal}
     (nil))
(insn 117 116 118 12 (parallel [
            (set (reg:SI 99 [ _17 ])
                (plus:SI (reg:SI 98 [ _16 ])
                    (reg:SI 127)))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":99:47 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 127)
        (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 98 [ _16 ])
                        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                                (const_int 4 [0x4])) [13 block+0 S4 A32]))
                    (nil))))))
(insn 118 117 119 12 (parallel [
            (set (reg:SI 100 [ _18 ])
                (plus:SI (reg:SI 99 [ _17 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":99:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":99:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 120 119 121 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (reg:SI 100 [ _18 ])) "fs/bitmap.c":99:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 121 120 122 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":99:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 122 121 123 12 (set (reg/f:SI 128)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7a4f6d75de10 *.LC10>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":99:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x7a4f6d75de10 *.LC10>)
        (nil)))
(insn 123 122 124 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 128)) "fs/bitmap.c":99:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 124 123 125 12 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":99:9 75 {*movsi_internal}
     (nil))
(call_insn 125 124 126 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7a4f6d710900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":99:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 126 125 127 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":99:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 127 126 128 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":100:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 128 127 129 12 (set (reg/f:SI 129)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x7a4f6d75dea0 *.LC11>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":100:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x7a4f6d75dea0 *.LC11>)
        (nil)))
(insn 129 128 130 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 129)) "fs/bitmap.c":100:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 130 129 131 12 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":100:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 131 130 132 12 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":100:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 132 131 133 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":100:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 133 132 134 13 20 (nil) [1 uses])
(note 134 133 135 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 13 (set (reg:SI 130)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [13 block+0 S4 A32])) "fs/bitmap.c":102:22 75 {*movsi_internal}
     (nil))
(insn 136 135 137 13 (set (reg:SI 131)
        (reg:SI 130)) "fs/bitmap.c":102:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 130)
        (nil)))
(insn 137 136 140 13 (parallel [
            (set (reg:SI 132)
                (plus:SI (reg:SI 131)
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":102:22 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 140 137 141 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 131)
            (const_int 0 [0]))) "fs/bitmap.c":102:22 7 {*cmpsi_ccno_1}
     (nil))
(insn 141 140 142 13 (set (reg:SI 131)
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 132)
            (reg:SI 131))) "fs/bitmap.c":102:22 1100 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 142 141 143 13 (parallel [
            (set (reg:SI 133)
                (ashiftrt:SI (reg:SI 131)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":102:22 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 13 (set (reg:SI 101 [ _19 ])
        (reg:SI 133)) "fs/bitmap.c":102:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 144 143 145 13 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 sb+0 S4 A32])) "fs/bitmap.c":102:15 75 {*movsi_internal}
     (nil))
(insn 145 144 146 13 (parallel [
            (set (reg:SI 135)
                (plus:SI (reg:SI 101 [ _19 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":102:15 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 146 145 147 13 (set (reg/f:SI 102 [ _20 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 135)
                        (const_int 4 [0x4]))
                    (reg/f:SI 134))
                (const_int 4 [0x4])) [6 sb_29->s_zmap[_19]+0 S4 A32])) "fs/bitmap.c":102:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_DEAD (reg/f:SI 134)
            (nil))))
(insn 147 146 150 13 (set (mem:QI (plus:SI (reg/f:SI 102 [ _20 ])
                (const_int 11 [0xb])) [0 _20->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/bitmap.c":102:38 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102 [ _20 ])
        (nil)))
(code_label 150 147 151 14 13 (nil) [1 uses])
(note 151 150 0 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

;; Function new_block (new_block, funcdef_no=3, decl_uid=1141, cgraph_uid=4, symbol_order=3)

scanning new insn with uid = 190.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 25 n_edges 35 count 28 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 23 24 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 24 7 }
;; 7 succs { 8 }
;; 8 succs { 5 23 }
;; 23 succs { 9 }
;; 24 succs { 9 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 13 }
;; 12 succs { 22 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 22 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r124,l0) best CREG, allocno GENERAL_REGS
    r123: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r123,l0) best AREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r108,l0) best CREG, allocno GENERAL_REGS
    r107: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r107,l0) best CREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a11 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r83,l0) best SIREG, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:13000
  a2(r82,l0) costs: AREG:14000 DREG:14000 CREG:14000 BREG:14000 SIREG:14000 DIREG:14000 AD_REGS:14000 CLOBBERED_REGS:14000 Q_REGS:14000 NON_Q_REGS:14000 TLS_GOTBASE_REGS:14000 GENERAL_REGS:14000 MEM:72000
  a3(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a6(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a7(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:11000
  a12(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a15(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a20(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a21(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a22(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a25(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a27(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a28(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a29(r110,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a30(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a33(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a36(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a37(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a38(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 175(l0): point = 0
   Insn 174(l0): point = 2
   Insn 170(l0): point = 4
   Insn 167(l0): point = 7
   Insn 166(l0): point = 9
   Insn 165(l0): point = 11
   Insn 164(l0): point = 13
   Insn 163(l0): point = 15
   Insn 162(l0): point = 17
   Insn 161(l0): point = 19
   Insn 160(l0): point = 21
   Insn 159(l0): point = 23
   Insn 158(l0): point = 25
   Insn 157(l0): point = 27
   Insn 156(l0): point = 29
   Insn 155(l0): point = 31
   Insn 154(l0): point = 33
   Insn 153(l0): point = 35
   Insn 152(l0): point = 37
   Insn 149(l0): point = 40
   Insn 148(l0): point = 42
   Insn 147(l0): point = 44
   Insn 146(l0): point = 46
   Insn 145(l0): point = 48
   Insn 144(l0): point = 50
   Insn 142(l0): point = 53
   Insn 141(l0): point = 55
   Insn 140(l0): point = 57
   Insn 139(l0): point = 59
   Insn 136(l0): point = 62
   Insn 135(l0): point = 64
   Insn 134(l0): point = 66
   Insn 133(l0): point = 68
   Insn 132(l0): point = 70
   Insn 131(l0): point = 72
   Insn 129(l0): point = 75
   Insn 128(l0): point = 77
   Insn 127(l0): point = 79
   Insn 126(l0): point = 81
   Insn 125(l0): point = 83
   Insn 124(l0): point = 85
   Insn 123(l0): point = 87
   Insn 122(l0): point = 89
   Insn 121(l0): point = 91
   Insn 120(l0): point = 93
   Insn 181(l0): point = 96
   Insn 115(l0): point = 98
   Insn 113(l0): point = 101
   Insn 112(l0): point = 103
   Insn 111(l0): point = 105
   Insn 110(l0): point = 107
   Insn 109(l0): point = 109
   Insn 108(l0): point = 111
   Insn 107(l0): point = 113
   Insn 106(l0): point = 115
   Insn 105(l0): point = 117
   Insn 104(l0): point = 119
   Insn 103(l0): point = 121
   Insn 102(l0): point = 123
   Insn 101(l0): point = 125
   Insn 100(l0): point = 127
   Insn 99(l0): point = 129
   Insn 96(l0): point = 132
   Insn 95(l0): point = 134
   Insn 94(l0): point = 136
   Insn 93(l0): point = 138
   Insn 92(l0): point = 140
   Insn 91(l0): point = 142
   Insn 89(l0): point = 145
   Insn 88(l0): point = 147
   Insn 87(l0): point = 149
   Insn 83(l0): point = 151
   Insn 86(l0): point = 153
   Insn 189(l0): point = 155
   Insn 85(l0): point = 157
   Insn 84(l0): point = 159
   Insn 82(l0): point = 161
   Insn 81(l0): point = 163
   Insn 179(l0): point = 166
   Insn 76(l0): point = 168
   Insn 73(l0): point = 171
   Insn 72(l0): point = 173
   Insn 68(l0): point = 176
   Insn 67(l0): point = 178
   Insn 65(l0): point = 181
   Insn 64(l0): point = 183
   Insn 188(l0): point = 186
   Insn 184(l0): point = 189
   Insn 34(l0): point = 192
   Insn 33(l0): point = 194
   Insn 32(l0): point = 196
   Insn 31(l0): point = 198
   Insn 30(l0): point = 200
   Insn 29(l0): point = 202
   Insn 28(l0): point = 204
   Insn 59(l0): point = 207
   Insn 58(l0): point = 209
   Insn 52(l0): point = 212
   Insn 46(l0): point = 215
   Insn 45(l0): point = 217
   Insn 42(l0): point = 219
   Insn 41(l0): point = 221
   Insn 38(l0): point = 223
   Insn 40(l0): point = 225
   Insn 39(l0): point = 227
   Insn 37(l0): point = 229
   Insn 36(l0): point = 231
   Insn 177(l0): point = 234
   Insn 24(l0): point = 236
   Insn 23(l0): point = 238
   Insn 20(l0): point = 241
   Insn 19(l0): point = 243
   Insn 18(l0): point = 245
   Insn 17(l0): point = 247
   Insn 16(l0): point = 249
   Insn 15(l0): point = 251
   Insn 13(l0): point = 254
   Insn 12(l0): point = 256
   Insn 11(l0): point = 258
   Insn 10(l0): point = 260
   Insn 9(l0): point = 262
   Insn 8(l0): point = 264
   Insn 7(l0): point = 266
   Insn 6(l0): point = 268
   Insn 5(l0): point = 270
   Insn 190(l0): point = 272
 a0(r99): [3..4]
 a1(r95): [166..168] [96..98] [5..7]
 a2(r82): [171..272] [101..165] [14..95]
 a3(r126): [20..21]
 a4(r125): [24..25]
 a5(r123): [28..31]
 a6(r124): [28..29]
 a7(r94): [28..33]
 a8(r93): [34..35]
 a9(r122): [36..37]
 a10(r121): [47..48]
 a11(r92): [56..57]
 a12(r120): [58..59]
 a13(r119): [69..70]
 a14(r118): [80..81]
 a15(r91): [104..105]
 a16(r90): [106..107]
 a17(r117): [108..109]
 a18(r89): [112..113]
 a19(r88): [114..115]
 a20(r87): [116..117]
 a21(r85): [116..123]
 a22(r86): [118..119]
 a23(r116): [120..121]
 a24(r115): [124..125]
 a25(r114): [128..129]
 a26(r113): [139..140]
 a27(r98): [148..149]
 a28(r97): [150..151]
 a29(r110): [152..155]
 a30(r112): [154..157]
 a31(r84): [154..161]
 a32(r111): [156..159]
 a33(r109): [162..163]
 a34(r96): [220..221]
 a35(r107): [224..225]
 a36(r108): [226..227]
 a37(r83): [226..229]
 a38(r106): [230..231]
 a39(r105): [197..198]
 a40(r102): [199..204]
 a41(r103): [199..200]
 a42(r104): [201..202]
 a43(r101): [248..249]
 a44(r100): [259..260]
Compressing live ranges: from 275 to 78 - 28%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r95): [58..59] [24..25] [2..3]
 a2(r82): [60..77] [26..57] [4..23]
 a3(r126): [4..5]
 a4(r125): [6..7]
 a5(r123): [8..9]
 a6(r124): [8..9]
 a7(r94): [8..9]
 a8(r93): [10..11]
 a9(r122): [12..13]
 a10(r121): [14..15]
 a11(r92): [16..17]
 a12(r120): [18..19]
 a13(r119): [20..21]
 a14(r118): [22..23]
 a15(r91): [26..27]
 a16(r90): [28..29]
 a17(r117): [30..31]
 a18(r89): [32..33]
 a19(r88): [34..35]
 a20(r87): [36..37]
 a21(r85): [36..41]
 a22(r86): [38..39]
 a23(r116): [40..41]
 a24(r115): [42..43]
 a25(r114): [44..45]
 a26(r113): [46..47]
 a27(r98): [48..49]
 a28(r97): [50..51]
 a29(r110): [52..53]
 a30(r112): [52..55]
 a31(r84): [52..55]
 a32(r111): [54..55]
 a33(r109): [56..57]
 a34(r96): [66..67]
 a35(r107): [68..69]
 a36(r108): [70..71]
 a37(r83): [70..71]
 a38(r106): [72..73]
 a39(r105): [60..61]
 a40(r102): [62..65]
 a41(r103): [62..63]
 a42(r104): [64..65]
 a43(r101): [74..75]
 a44(r100): [76..77]
  pref0:a6(r124)<-hr2@1000
  pref1:a5(r123)<-hr0@1000
  pref2:a14(r118)<-hr0@1500
  pref3:a29(r110)<-hr0@2000
  pref4:a36(r108)<-hr2@1000
  pref5:a35(r107)<-hr2@1000
  pref6:a44(r100)<-hr0@1500
  pref7:a0(r99)<-hr0@1500
  pref8:a7(r94)<-hr5@1000
  pref9:a37(r83)<-hr4@1000
  pref10:a2(r82)<-hr3@1500
  regions=1, blocks=25, points=78
    allocnos=45 (big 0), copies=0, conflicts=0, ranges=49
Disposition:
    2:r82  l0     3   37:r83  l0     0   31:r84  l0     2   21:r85  l0     1
   22:r86  l0     0   20:r87  l0     0   19:r88  l0     0   18:r89  l0     0
   16:r90  l0     0   15:r91  l0     0   11:r92  l0     0    8:r93  l0     0
    7:r94  l0     4    1:r95  l0     0   34:r96  l0     0   28:r97  l0     4
   27:r98  l0     0    0:r99  l0     0   44:r100 l0     0   43:r101 l0     0
   40:r102 l0     0   41:r103 l0     1   42:r104 l0     1   39:r105 l0     0
   38:r106 l0     0   35:r107 l0     0   36:r108 l0     1   33:r109 l0     0
   29:r110 l0     0   32:r111 l0     0   30:r112 l0     1   26:r113 l0     0
   25:r114 l0     0   24:r115 l0     0   23:r116 l0     0   17:r117 l0     0
   14:r118 l0     0   13:r119 l0     0   12:r120 l0     0   10:r121 l0     0
    9:r122 l0     0    5:r123 l0     0    6:r124 l0     1    4:r125 l0     0
    3:r126 l0     0
+++Costs: overall 8000, reg 8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


new_block

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,4u} r1={8d} r2={8d} r3={7d,7u} r6={1d,24u} r7={23d,67u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,25u} r17={42d,11u} r18={7d} r19={1d,61u,2e} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,11u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={3d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={2d,2u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} 
;;    total ref usage 860{603d,255u,2e} in 126{119 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 190 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 190 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 190 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":111:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":111:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":111:16 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7a4f6d70e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":111:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":111:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 100)
        (reg:SI 0 ax)) "fs/bitmap.c":111:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])
        (reg:SI 100)) "fs/bitmap.c":111:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":111:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "fs/bitmap.c":111:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":112:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 16 15 17 3 (set (reg/f:SI 101)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x7a4f6d75d510 *.LC12>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":112:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x7a4f6d75d510 *.LC12>)
        (nil)))
(insn 17 16 18 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 101)) "fs/bitmap.c":112:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 18 17 19 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":112:9 75 {*movsi_internal}
     (nil))
(call_insn 19 18 20 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":112:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":112:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 21 20 22 4 22 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
        (const_int 8192 [0x2000])) "fs/bitmap.c":113:7 75 {*movsi_internal}
     (nil))
(insn 24 23 177 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
        (const_int 0 [0])) "fs/bitmap.c":114:12 75 {*movsi_internal}
     (nil))
(jump_insn 177 24 178 4 (set (pc)
        (label_ref 53)) "fs/bitmap.c":114:5 807 {jump}
     (nil)
 -> 53)
(barrier 178 177 55)
(code_label 55 178 27 5 26 (nil) [1 uses])
(note 27 55 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])) "fs/bitmap.c":115:17 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 104)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])) "fs/bitmap.c":115:17 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:SI 103)
                (plus:SI (reg:SI 104)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":115:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 31 30 32 5 (set (reg/f:SI 105)
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 103)
                        (const_int 4 [0x4]))
                    (reg/f:SI 102))
                (const_int 4 [0x4])) [6 sb_28->s_zmap[i_15]+0 S4 A32])) "fs/bitmap.c":115:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_DEAD (reg/f:SI 102)
            (nil))))
(insn 32 31 33 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
        (reg/f:SI 105)) "fs/bitmap.c":115:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":115:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "fs/bitmap.c":115:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 50)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":116:22 75 {*movsi_internal}
     (nil))
(insn 37 36 39 6 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (reg/f:SI 106) [2 bh_33->b_data+0 S4 A32])) "fs/bitmap.c":116:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 39 37 40 6 (set (reg:SI 108)
        (const_int 0 [0])) "fs/bitmap.c":116:22 75 {*movsi_internal}
     (nil))
(insn 40 39 38 6 (parallel [
            (set (reg:SI 107 [ __res ])
                (asm_operands/v:SI ("cld
1:	lodsl
	notl %%eax
	bsfl %%eax, %%edx
	je 2f
	addl %%edx, %%ecx
	jmp 3f
2:	addl $32, %%ecx
	cmpl $8192, %%ecx
	jl 1b
3:") ("=c") 0 [
                        (reg:SI 108)
                        (reg/f:SI 83 [ _1 ])
                    ]
                     [
                        (asm_input:SI ("c") fs/bitmap.c:116)
                        (asm_input:SI ("S") fs/bitmap.c:116)
                    ]
                     [] fs/bitmap.c:116))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":116:22 -1
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 40 41 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [13 __res+0 S4 A32])
        (reg:SI 107 [ __res ])) "fs/bitmap.c":116:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ __res ])
        (nil)))
(insn 41 38 42 6 (set (reg:SI 96 [ _35 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [13 __res+0 S4 A32])) "fs/bitmap.c":116:22 75 {*movsi_internal}
     (nil))
(insn 42 41 45 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
        (reg:SI 96 [ _35 ])) "fs/bitmap.c":116:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ _35 ])
        (nil)))
(insn 45 42 46 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
            (const_int 8191 [0x1fff]))) "fs/bitmap.c":116:16 11 {*cmpsi_1}
     (nil))
(jump_insn 46 45 50 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 187)
            (pc))) "fs/bitmap.c":116:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 187)
(code_label 50 46 51 7 24 (nil) [1 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":114:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 53 52 54 8 23 (nil) [1 uses])
(note 54 53 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 54 59 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/bitmap.c":114:19 11 {*cmpsi_1}
     (nil))
(jump_insn 59 58 183 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/bitmap.c":114:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 55)
(note 183 59 184 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 184 183 185 23 (set (pc)
        (label_ref 60)) 807 {jump}
     (nil)
 -> 60)
(barrier 185 184 187)
(code_label 187 185 186 24 34 (nil) [1 uses])
(note 186 187 188 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 188 186 60 24 (const_int 0 [0]) "fs/bitmap.c":117:17 843 {nop}
     (nil))
(code_label 60 188 61 9 25 (nil) [1 uses])
(note 61 60 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 61 65 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/bitmap.c":118:8 11 {*cmpsi_1}
     (nil))
(jump_insn 65 64 66 9 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) "fs/bitmap.c":118:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 74)
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":118:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 68 67 69 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) "fs/bitmap.c":118:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 74)
(note 69 68 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 69 73 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
            (const_int 8191 [0x1fff]))) "fs/bitmap.c":118:23 11 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "fs/bitmap.c":118:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 79)
(code_label 74 73 75 12 27 (nil) [2 uses])
(note 75 74 76 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 179 12 (set (reg:SI 95 [ _19 ])
        (const_int 0 [0])) "fs/bitmap.c":119:16 75 {*movsi_internal}
     (nil))
(jump_insn 179 76 180 12 (set (pc)
        (label_ref 168)) "fs/bitmap.c":119:16 807 {jump}
     (nil)
 -> 168)
(barrier 180 179 79)
(code_label 79 180 80 13 28 (nil) [1 uses])
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":120:9 75 {*movsi_internal}
     (nil))
(insn 82 81 84 13 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (reg/f:SI 109) [2 bh_14->b_data+0 S4 A32])) "fs/bitmap.c":120:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 84 82 85 13 (set (reg:SI 111)
        (const_int 0 [0])) "fs/bitmap.c":120:9 75 {*movsi_internal}
     (nil))
(insn 85 84 189 13 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])) "fs/bitmap.c":120:9 75 {*movsi_internal}
     (nil))
(insn 189 85 86 13 (set (reg:SI 110 [ res ])
        (reg:SI 111)) "fs/bitmap.c":120:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 86 189 83 13 (parallel [
            (set (reg:SI 110 [ res ])
                (asm_operands/v:SI ("btsl %2,%3
	setb %%al") ("=a") 0 [
                        (reg:SI 110 [ res ])
                        (reg:SI 112)
                        (mem:QI (reg/f:SI 84 [ _2 ]) [0 *_2+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("0") fs/bitmap.c:120)
                        (asm_input:SI ("r") fs/bitmap.c:120)
                        (asm_input:QI ("m") fs/bitmap.c:120)
                    ]
                     [] fs/bitmap.c:120))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":120:9 -1
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 83 86 87 13 (set (reg/v:SI 97 [ res ])
        (reg:SI 110 [ res ])) "fs/bitmap.c":120:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110 [ res ])
        (nil)))
(insn 87 83 88 13 (set (reg:SI 98 [ _39 ])
        (reg/v:SI 97 [ res ])) "fs/bitmap.c":120:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 97 [ res ])
        (nil)))
(insn 88 87 89 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ _39 ])
            (const_int 0 [0]))) "fs/bitmap.c":120:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _39 ])
        (nil)))
(jump_insn 89 88 90 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "fs/bitmap.c":120:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 97)
(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":121:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 92 91 93 14 (set (reg/f:SI 113)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x7a4f6d797000 *.LC13>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":121:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x7a4f6d797000 *.LC13>)
        (nil)))
(insn 93 92 94 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 113)) "fs/bitmap.c":121:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 94 93 95 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":121:9 75 {*movsi_internal}
     (nil))
(call_insn 95 94 96 14 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":121:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 96 95 97 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":121:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 97 96 98 15 30 (nil) [1 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 15 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":122:16 75 {*movsi_internal}
     (nil))
(insn 100 99 101 15 (set (mem:QI (plus:SI (reg/f:SI 114)
                (const_int 11 [0xb])) [0 bh_14->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/bitmap.c":122:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 101 100 102 15 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])) "fs/bitmap.c":123:12 75 {*movsi_internal}
     (nil))
(insn 102 101 103 15 (parallel [
            (set (reg:SI 85 [ _3 ])
                (ashift:SI (reg:SI 115)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":123:12 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 103 102 104 15 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])) "fs/bitmap.c":123:23 75 {*movsi_internal}
     (nil))
(insn 104 103 105 15 (set (reg:HI 86 [ _4 ])
        (mem:HI (plus:SI (reg/f:SI 116)
                (const_int 8 [0x8])) [4 sb_28->s_firstdatazone+0 S2 A32])) "fs/bitmap.c":123:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 105 104 106 15 (set (reg:SI 87 [ _5 ])
        (zero_extend:SI (reg:HI 86 [ _4 ]))) "fs/bitmap.c":123:23 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 86 [ _4 ])
        (nil)))
(insn 106 105 107 15 (parallel [
            (set (reg:SI 88 [ _6 ])
                (plus:SI (reg:SI 85 [ _3 ])
                    (reg:SI 87 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":123:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 107 106 108 15 (parallel [
            (set (reg:SI 89 [ _7 ])
                (plus:SI (reg:SI 88 [ _6 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":123:41 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 15 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
                    (reg:SI 89 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":123:7 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 110 15 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])) "fs/bitmap.c":124:16 75 {*movsi_internal}
     (nil))
(insn 110 109 111 15 (set (reg:HI 90 [ _8 ])
        (mem:HI (plus:SI (reg/f:SI 117)
                (const_int 2 [0x2])) [4 sb_28->s_nzones+0 S2 A16])) "fs/bitmap.c":124:16 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 111 110 112 15 (set (reg:SI 91 [ _9 ])
        (zero_extend:SI (reg:HI 90 [ _8 ]))) "fs/bitmap.c":124:16 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 90 [ _8 ])
        (nil)))
(insn 112 111 113 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
            (reg:SI 91 [ _9 ]))) "fs/bitmap.c":124:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 113 112 114 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "fs/bitmap.c":124:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 118)
(note 114 113 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 181 16 (set (reg:SI 95 [ _19 ])
        (const_int 0 [0])) "fs/bitmap.c":125:16 75 {*movsi_internal}
     (nil))
(jump_insn 181 115 182 16 (set (pc)
        (label_ref 168)) "fs/bitmap.c":125:16 807 {jump}
     (nil)
 -> 168)
(barrier 182 181 118)
(code_label 118 182 119 17 31 (nil) [1 uses])
(note 119 118 120 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":126:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 121 120 122 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])) "fs/bitmap.c":126:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 122 121 123 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":126:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 123 122 124 17 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":126:16 75 {*movsi_internal}
     (nil))
(call_insn 124 123 125 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getblk") [flags 0x41]  <function_decl 0x7a4f6d70e500 getblk>) [0 getblk S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":126:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 125 124 126 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":126:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 126 125 127 17 (set (reg:SI 118)
        (reg:SI 0 ax)) "fs/bitmap.c":126:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 127 126 128 17 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
        (reg:SI 118)) "fs/bitmap.c":126:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 128 127 129 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":126:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 129 128 130 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "fs/bitmap.c":126:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 137)
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":127:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 132 131 133 18 (set (reg/f:SI 119)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x7a4f6d797090 *.LC14>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":127:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x7a4f6d797090 *.LC14>)
        (nil)))
(insn 133 132 134 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 119)) "fs/bitmap.c":127:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 134 133 135 18 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":127:9 75 {*movsi_internal}
     (nil))
(call_insn 135 134 136 18 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":127:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 136 135 137 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":127:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 137 136 138 19 32 (nil) [1 uses])
(note 138 137 139 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 19 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":128:11 75 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (set (reg:QI 92 [ _10 ])
        (mem:QI (plus:SI (reg/f:SI 120)
                (const_int 12 [0xc])) [0 bh_44->b_count+0 S1 A32])) "fs/bitmap.c":128:11 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 141 140 142 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ _10 ])
            (const_int 1 [0x1]))) "fs/bitmap.c":128:8 9 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 92 [ _10 ])
        (nil)))
(jump_insn 142 141 143 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) "fs/bitmap.c":128:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 150)
(note 143 142 144 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":129:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 145 144 146 20 (set (reg/f:SI 121)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x7a4f6d797120 *.LC15>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":129:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x7a4f6d797120 *.LC15>)
        (nil)))
(insn 146 145 147 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 121)) "fs/bitmap.c":129:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 147 146 148 20 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":129:9 75 {*movsi_internal}
     (nil))
(call_insn 148 147 149 20 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":129:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 149 148 150 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":129:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 150 149 151 21 33 (nil) [1 uses])
(note 151 150 152 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 21 (set (reg/f:SI 122)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":130:5 75 {*movsi_internal}
     (nil))
(insn 153 152 154 21 (set (reg/f:SI 93 [ _11 ])
        (mem/f:SI (reg/f:SI 122) [2 bh_44->b_data+0 S4 A32])) "fs/bitmap.c":130:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 122)
        (nil)))
(insn 154 153 155 21 (set (reg:SI 94 [ _12 ])
        (reg/f:SI 93 [ _11 ])) "fs/bitmap.c":130:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
        (nil)))
(insn 155 154 156 21 (set (reg:SI 123)
        (const_int 0 [0])) "fs/bitmap.c":130:5 75 {*movsi_internal}
     (nil))
(insn 156 155 157 21 (set (reg:SI 124)
        (const_int 256 [0x100])) "fs/bitmap.c":130:5 75 {*movsi_internal}
     (nil))
(insn 157 156 158 21 (parallel [
            (asm_operands/v ("cld
	rep
	stosl") ("") 0 [
                    (reg:SI 123)
                    (reg:SI 124)
                    (reg:SI 94 [ _12 ])
                ]
                 [
                    (asm_input:SI ("a") fs/bitmap.c:130)
                    (asm_input:SI ("c") fs/bitmap.c:130)
                    (asm_input:SI ("D") fs/bitmap.c:130)
                ]
                 [] fs/bitmap.c:130)
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":130:5 -1
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_DEAD (reg:SI 123)
            (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 158 157 159 21 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":131:20 75 {*movsi_internal}
     (nil))
(insn 159 158 160 21 (set (mem:QI (plus:SI (reg/f:SI 125)
                (const_int 10 [0xa])) [0 bh_44->b_uptodate+0 S1 A16])
        (const_int 1 [0x1])) "fs/bitmap.c":131:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 160 159 161 21 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":132:16 75 {*movsi_internal}
     (nil))
(insn 161 160 162 21 (set (mem:QI (plus:SI (reg/f:SI 126)
                (const_int 11 [0xb])) [0 bh_44->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/bitmap.c":132:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 162 161 163 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":133:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 163 162 164 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":133:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 164 163 165 21 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":133:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 165 164 166 21 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7a4f6d70e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":133:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 166 165 167 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":133:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 167 166 168 21 (set (reg:SI 95 [ _19 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])) "fs/bitmap.c":134:12 75 {*movsi_internal}
     (nil))
(code_label 168 167 169 22 29 (nil) [2 uses])
(note 169 168 170 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 174 22 (set (reg:SI 99 [ <retval> ])
        (reg:SI 95 [ _19 ])) "fs/bitmap.c":135:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ _19 ])
        (nil)))
(insn 174 170 175 22 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) "fs/bitmap.c":135:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ <retval> ])
        (nil)))
(insn 175 174 0 22 (use (reg/i:SI 0 ax)) "fs/bitmap.c":135:1 -1
     (nil))

;; Function new_inode (new_inode, funcdef_no=4, decl_uid=1163, cgraph_uid=5, symbol_order=4)

scanning new insn with uid = 196.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 21 n_edges 29 count 24 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 19 20 11 12 13 14 15 16 17 18
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 7 8
;; 2 succs { 3 4 }
;; 3 succs { 18 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 20 9 }
;; 9 succs { 10 }
;; 10 succs { 7 19 }
;; 19 succs { 11 }
;; 20 succs { 11 }
;; 11 succs { 14 12 }
;; 12 succs { 14 13 }
;; 13 succs { 14 15 }
;; 14 succs { 18 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
Removing SCRATCH to p154 in insn #155 (nop 3)
rescanning insn with uid = 155.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 21 n_edges 29 count 24 (  1.1)

Pass 0 for finding pseudo/allocno costs

    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r143,l0) best DREG, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r120,l0) best CREG, allocno GENERAL_REGS
    r119: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r119,l0) best CREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r111,l0) best AREG, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a31 (r94,l0) best Q_REGS, allocno Q_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r83,l0) best SIREG, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:13000
  a2(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a10(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a11(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a12(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a13(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r82,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 MEM:72000
  a15(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a16(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a17(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:18000
  a18(r143,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:13000
  a19(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:8000
  a20(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a21(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a25(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a26(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a28(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a29(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a30(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a32(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a33(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a34(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a41(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a47(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a48(r125,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000
  a49(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a52(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a53(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a54(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a55(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a56(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a57(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a58(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a59(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a60(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a62(r120,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a63(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a64(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a66(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a67(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a68(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a69(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a70(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a71(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 181(l0): point = 0
   Insn 180(l0): point = 2
   Insn 176(l0): point = 4
   Insn 173(l0): point = 7
   Insn 172(l0): point = 9
   Insn 171(l0): point = 11
   Insn 170(l0): point = 13
   Insn 169(l0): point = 15
   Insn 168(l0): point = 17
   Insn 167(l0): point = 19
   Insn 166(l0): point = 21
   Insn 165(l0): point = 23
   Insn 164(l0): point = 25
   Insn 163(l0): point = 27
   Insn 162(l0): point = 29
   Insn 161(l0): point = 31
   Insn 160(l0): point = 33
   Insn 159(l0): point = 35
   Insn 158(l0): point = 37
   Insn 157(l0): point = 40
   Insn 156(l0): point = 42
   Insn 155(l0): point = 44
   Insn 154(l0): point = 46
   Insn 153(l0): point = 48
   Insn 152(l0): point = 50
   Insn 151(l0): point = 52
   Insn 150(l0): point = 54
   Insn 149(l0): point = 56
   Insn 148(l0): point = 58
   Insn 147(l0): point = 60
   Insn 146(l0): point = 62
   Insn 145(l0): point = 64
   Insn 144(l0): point = 66
   Insn 143(l0): point = 68
   Insn 142(l0): point = 70
   Insn 141(l0): point = 72
   Insn 140(l0): point = 74
   Insn 139(l0): point = 76
   Insn 138(l0): point = 78
   Insn 137(l0): point = 80
   Insn 136(l0): point = 82
   Insn 135(l0): point = 84
   Insn 134(l0): point = 86
   Insn 133(l0): point = 88
   Insn 132(l0): point = 90
   Insn 131(l0): point = 92
   Insn 130(l0): point = 94
   Insn 129(l0): point = 96
   Insn 128(l0): point = 98
   Insn 127(l0): point = 100
   Insn 126(l0): point = 102
   Insn 125(l0): point = 104
   Insn 124(l0): point = 106
   Insn 123(l0): point = 108
   Insn 122(l0): point = 110
   Insn 121(l0): point = 112
   Insn 118(l0): point = 115
   Insn 117(l0): point = 117
   Insn 116(l0): point = 119
   Insn 115(l0): point = 121
   Insn 114(l0): point = 123
   Insn 113(l0): point = 125
   Insn 111(l0): point = 128
   Insn 110(l0): point = 130
   Insn 109(l0): point = 132
   Insn 105(l0): point = 134
   Insn 108(l0): point = 136
   Insn 195(l0): point = 138
   Insn 107(l0): point = 140
   Insn 106(l0): point = 142
   Insn 104(l0): point = 144
   Insn 103(l0): point = 146
   Insn 187(l0): point = 149
   Insn 98(l0): point = 151
   Insn 97(l0): point = 153
   Insn 96(l0): point = 155
   Insn 95(l0): point = 157
   Insn 94(l0): point = 159
   Insn 93(l0): point = 161
   Insn 90(l0): point = 164
   Insn 89(l0): point = 166
   Insn 88(l0): point = 168
   Insn 87(l0): point = 170
   Insn 86(l0): point = 172
   Insn 85(l0): point = 174
   Insn 84(l0): point = 176
   Insn 83(l0): point = 178
   Insn 82(l0): point = 180
   Insn 80(l0): point = 183
   Insn 79(l0): point = 185
   Insn 75(l0): point = 188
   Insn 74(l0): point = 190
   Insn 194(l0): point = 193
   Insn 190(l0): point = 196
   Insn 46(l0): point = 199
   Insn 45(l0): point = 201
   Insn 44(l0): point = 203
   Insn 43(l0): point = 205
   Insn 42(l0): point = 207
   Insn 41(l0): point = 209
   Insn 40(l0): point = 211
   Insn 71(l0): point = 214
   Insn 70(l0): point = 216
   Insn 64(l0): point = 219
   Insn 58(l0): point = 222
   Insn 57(l0): point = 224
   Insn 54(l0): point = 226
   Insn 53(l0): point = 228
   Insn 50(l0): point = 230
   Insn 52(l0): point = 232
   Insn 51(l0): point = 234
   Insn 49(l0): point = 236
   Insn 48(l0): point = 238
   Insn 185(l0): point = 241
   Insn 36(l0): point = 243
   Insn 35(l0): point = 245
   Insn 32(l0): point = 248
   Insn 31(l0): point = 250
   Insn 30(l0): point = 252
   Insn 29(l0): point = 254
   Insn 28(l0): point = 256
   Insn 27(l0): point = 258
   Insn 25(l0): point = 261
   Insn 24(l0): point = 263
   Insn 23(l0): point = 265
   Insn 22(l0): point = 267
   Insn 21(l0): point = 269
   Insn 20(l0): point = 271
   Insn 19(l0): point = 273
   Insn 18(l0): point = 275
   Insn 17(l0): point = 277
   Insn 183(l0): point = 280
   Insn 12(l0): point = 282
   Insn 10(l0): point = 285
   Insn 9(l0): point = 287
   Insn 8(l0): point = 289
   Insn 7(l0): point = 291
   Insn 6(l0): point = 293
   Insn 5(l0): point = 295
   Insn 196(l0): point = 297
 a0(r110): [3..4]
 a1(r106): [280..282] [149..151] [5..7]
 a2(r152): [10..11]
 a3(r105): [10..13]
 a4(r151): [14..15]
 a5(r150): [18..19]
 a6(r104): [18..21]
 a7(r149): [22..23]
 a8(r148): [26..27]
 a9(r103): [26..29]
 a10(r102): [30..31]
 a11(r101): [32..33]
 a12(r100): [32..38]
 a13(r147): [34..35]
 a14(r82): [285..297] [158..279] [36..148]
 a15(r146): [38..40]
 a16(r145): [39..42]
 a17(r99): [41..48]
 a18(r143): [43..44]
 a19(r144): [45..46]
 a20(r154): [44..44]
 a21(r142): [49..50]
 a22(r141): [53..54]
 a23(r98): [53..56]
 a24(r97): [57..58]
 a25(r96): [57..62]
 a26(r140): [59..60]
 a27(r95): [63..64]
 a28(r139): [65..66]
 a29(r138): [69..70]
 a30(r137): [73..74]
 a31(r94): [73..76]
 a32(r93): [77..78]
 a33(r92): [79..80]
 a34(r136): [81..82]
 a35(r135): [85..86]
 a36(r91): [85..88]
 a37(r90): [89..90]
 a38(r134): [91..92]
 a39(r133): [95..96]
 a40(r89): [95..98]
 a41(r132): [99..100]
 a42(r131): [103..104]
 a43(r130): [107..108]
 a44(r129): [111..112]
 a45(r128): [122..123]
 a46(r109): [131..132]
 a47(r108): [133..134]
 a48(r125): [135..138]
 a49(r127): [137..140]
 a50(r88): [137..144]
 a51(r126): [139..142]
 a52(r124): [145..146]
 a53(r87): [167..168]
 a54(r85): [167..174]
 a55(r86): [169..170]
 a56(r123): [171..172]
 a57(r122): [175..176]
 a58(r84): [175..178]
 a59(r121): [179..180]
 a60(r107): [227..228]
 a61(r119): [231..232]
 a62(r120): [233..234]
 a63(r83): [233..236]
 a64(r118): [237..238]
 a65(r117): [204..205]
 a66(r114): [206..211]
 a67(r115): [206..207]
 a68(r116): [208..209]
 a69(r113): [255..256]
 a70(r112): [266..267]
 a71(r111): [290..291]
Compressing live ranges: from 300 to 114 - 38%
Ranges after the compression:
 a0(r110): [0..1]
 a1(r106): [110..111] [80..81] [2..3]
 a2(r152): [4..5]
 a3(r105): [4..5]
 a4(r151): [6..7]
 a5(r150): [8..9]
 a6(r104): [8..9]
 a7(r149): [10..11]
 a8(r148): [12..13]
 a9(r103): [12..13]
 a10(r102): [14..15]
 a11(r101): [16..17]
 a12(r100): [16..21]
 a13(r147): [18..19]
 a14(r82): [112..113] [82..109] [20..79]
 a15(r146): [21..23]
 a16(r145): [22..25]
 a17(r99): [24..29]
 a18(r143): [26..27]
 a19(r144): [28..29]
 a20(r154): [27..27]
 a21(r142): [30..31]
 a22(r141): [32..33]
 a23(r98): [32..33]
 a24(r97): [34..35]
 a25(r96): [34..37]
 a26(r140): [36..37]
 a27(r95): [38..39]
 a28(r139): [40..41]
 a29(r138): [42..43]
 a30(r137): [44..45]
 a31(r94): [44..45]
 a32(r93): [46..47]
 a33(r92): [48..49]
 a34(r136): [50..51]
 a35(r135): [52..53]
 a36(r91): [52..53]
 a37(r90): [54..55]
 a38(r134): [56..57]
 a39(r133): [58..59]
 a40(r89): [58..59]
 a41(r132): [60..61]
 a42(r131): [62..63]
 a43(r130): [64..65]
 a44(r129): [66..67]
 a45(r128): [68..69]
 a46(r109): [70..71]
 a47(r108): [72..73]
 a48(r125): [74..75]
 a49(r127): [74..77]
 a50(r88): [74..77]
 a51(r126): [76..77]
 a52(r124): [78..79]
 a53(r87): [82..83]
 a54(r85): [82..87]
 a55(r86): [84..85]
 a56(r123): [86..87]
 a57(r122): [88..89]
 a58(r84): [88..89]
 a59(r121): [90..91]
 a60(r107): [98..99]
 a61(r119): [100..101]
 a62(r120): [102..103]
 a63(r83): [102..103]
 a64(r118): [104..105]
 a65(r117): [92..93]
 a66(r114): [94..97]
 a67(r115): [94..95]
 a68(r116): [96..97]
 a69(r113): [106..107]
 a70(r112): [108..109]
 a71(r111): [112..113]
  pref0:a18(r143)<-hr1@1000
  pref1:a48(r125)<-hr0@2000
  pref2:a62(r120)<-hr2@1000
  pref3:a61(r119)<-hr2@1000
  pref4:a70(r112)<-hr0@1500
  pref5:a71(r111)<-hr0@1500
  pref6:a0(r110)<-hr0@1500
  pref7:a63(r83)<-hr4@1000
  pref8:a14(r82)<-hr3@1500
  regions=1, blocks=21, points=114
    allocnos=72 (big 0), copies=0, conflicts=0, ranges=76
Disposition:
   14:r82  l0     3   63:r83  l0     0   58:r84  l0     1   54:r85  l0     1
   55:r86  l0     0   53:r87  l0     0   50:r88  l0     2   40:r89  l0     1
   37:r90  l0     0   36:r91  l0     1   33:r92  l0     0   32:r93  l0     0
   31:r94  l0     1   27:r95  l0     0   25:r96  l0     1   24:r97  l0     0
   23:r98  l0     1   17:r99  l0     2   12:r100 l0     1   11:r101 l0     0
   10:r102 l0     0    9:r103 l0     1    6:r104 l0     1    3:r105 l0     1
    1:r106 l0     0   60:r107 l0     0   47:r108 l0     4   46:r109 l0     0
    0:r110 l0     0   71:r111 l0     0   70:r112 l0     0   69:r113 l0     0
   66:r114 l0     0   67:r115 l0     1   68:r116 l0     1   65:r117 l0     0
   64:r118 l0     0   61:r119 l0     0   62:r120 l0     1   59:r121 l0     0
   57:r122 l0     0   56:r123 l0     0   52:r124 l0     0   48:r125 l0     0
   51:r126 l0     0   49:r127 l0     1   45:r128 l0     0   44:r129 l0     0
   43:r130 l0     0   42:r131 l0     0   41:r132 l0     0   39:r133 l0     0
   38:r134 l0     0   35:r135 l0     0   34:r136 l0     0   30:r137 l0     0
   29:r138 l0     0   28:r139 l0     0   26:r140 l0     0   22:r141 l0     0
   21:r142 l0     0   18:r143 l0     1   19:r144 l0     1   16:r145 l0     0
   15:r146 l0     2   13:r147 l0     0    8:r148 l0     0    7:r149 l0     0
    5:r150 l0     0    4:r151 l0     0    2:r152 l0     0   20:r154 l0     0
+++Costs: overall 12000, reg 12000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


new_inode

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={6d} r2={6d} r3={5d,5u} r6={1d,20u} r7={13d,45u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,21u} r17={36d,9u} r18={5d} r19={1d,62u,3e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,11u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={3d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={2d,2u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d} 
;;    total ref usage 729{476d,249u,4e} in 140{135 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 196 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 196 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 196 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":144:19 75 {*movsi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_empty_inode") [flags 0x41]  <function_decl 0x7a4f6d710300 get_empty_inode>) [0 get_empty_inode S1 A8])
            (const_int 0 [0]))) "fs/bitmap.c":144:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 7 6 8 2 (set (reg:SI 111)
        (reg:SI 0 ax)) "fs/bitmap.c":144:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])
        (reg:SI 111)) "fs/bitmap.c":144:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":144:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "fs/bitmap.c":144:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 15)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 183 3 (set (reg/f:SI 106 [ _30 ])
        (const_int 0 [0])) "fs/bitmap.c":145:16 75 {*movsi_internal}
     (nil))
(jump_insn 183 12 184 3 (set (pc)
        (label_ref 174)) "fs/bitmap.c":145:16 807 {jump}
     (nil)
 -> 174)
(barrier 184 183 15)
(code_label 15 184 16 4 36 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":146:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 18 17 19 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [13  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":146:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 19 18 20 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":146:16 75 {*movsi_internal}
     (nil))
(call_insn 20 19 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7a4f6d70e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/bitmap.c":146:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":146:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 22 21 23 4 (set (reg:SI 112)
        (reg:SI 0 ax)) "fs/bitmap.c":146:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 23 22 24 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [19 sb+0 S4 A32])
        (reg:SI 112)) "fs/bitmap.c":146:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":146:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/bitmap.c":146:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 33)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":147:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 28 27 29 5 (set (reg/f:SI 113)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x7a4f6d747f30 *.LC16>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":147:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x7a4f6d747f30 *.LC16>)
        (nil)))
(insn 29 28 30 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 113)) "fs/bitmap.c":147:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 30 29 31 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":147:9 75 {*movsi_internal}
     (nil))
(call_insn 31 30 32 5 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":147:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 32 31 33 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":147:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 33 32 34 6 38 (nil) [1 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
        (const_int 8192 [0x2000])) "fs/bitmap.c":148:7 75 {*movsi_internal}
     (nil))
(insn 36 35 185 6 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
        (const_int 0 [0])) "fs/bitmap.c":149:12 75 {*movsi_internal}
     (nil))
(jump_insn 185 36 186 6 (set (pc)
        (label_ref 65)) "fs/bitmap.c":149:5 807 {jump}
     (nil)
 -> 65)
(barrier 186 185 67)
(code_label 67 186 39 7 42 (nil) [1 uses])
(note 39 67 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [19 sb+0 S4 A32])) "fs/bitmap.c":150:17 75 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:SI 116)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])) "fs/bitmap.c":150:17 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg:SI 116)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":150:17 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 43 42 44 7 (set (reg/f:SI 117)
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 115)
                        (const_int 4 [0x4]))
                    (reg/f:SI 114))
                (const_int 4 [0x4])) [6 sb_39->s_imap[i_26]+0 S4 A32])) "fs/bitmap.c":150:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_DEAD (reg/f:SI 114)
            (nil))))
(insn 44 43 45 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
        (reg/f:SI 117)) "fs/bitmap.c":150:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":150:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "fs/bitmap.c":150:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 62)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:SI 118)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":151:22 75 {*movsi_internal}
     (nil))
(insn 49 48 51 8 (set (reg/f:SI 83 [ _1 ])
        (mem/f:SI (reg/f:SI 118) [2 bh_44->b_data+0 S4 A32])) "fs/bitmap.c":151:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(insn 51 49 52 8 (set (reg:SI 120)
        (const_int 0 [0])) "fs/bitmap.c":151:22 75 {*movsi_internal}
     (nil))
(insn 52 51 50 8 (parallel [
            (set (reg:SI 119 [ __res ])
                (asm_operands/v:SI ("cld
1:	lodsl
	notl %%eax
	bsfl %%eax, %%edx
	je 2f
	addl %%edx, %%ecx
	jmp 3f
2:	addl $32, %%ecx
	cmpl $8192, %%ecx
	jl 1b
3:") ("=c") 0 [
                        (reg:SI 120)
                        (reg/f:SI 83 [ _1 ])
                    ]
                     [
                        (asm_input:SI ("c") fs/bitmap.c:151)
                        (asm_input:SI ("S") fs/bitmap.c:151)
                    ]
                     [] fs/bitmap.c:151))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":151:22 -1
     (expr_list:REG_DEAD (reg:SI 120)
        (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 50 52 53 8 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [13 __res+0 S4 A32])
        (reg:SI 119 [ __res ])) "fs/bitmap.c":151:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ __res ])
        (nil)))
(insn 53 50 54 8 (set (reg:SI 107 [ _46 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [13 __res+0 S4 A32])) "fs/bitmap.c":151:22 75 {*movsi_internal}
     (nil))
(insn 54 53 57 8 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
        (reg:SI 107 [ _46 ])) "fs/bitmap.c":151:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ _46 ])
        (nil)))
(insn 57 54 58 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
            (const_int 8191 [0x1fff]))) "fs/bitmap.c":151:16 11 {*cmpsi_1}
     (nil))
(jump_insn 58 57 62 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 193)
            (pc))) "fs/bitmap.c":151:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 193)
(code_label 62 58 63 9 40 (nil) [1 uses])
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":149:25 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 65 64 66 10 39 (nil) [1 uses])
(note 66 65 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 66 71 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/bitmap.c":149:19 11 {*cmpsi_1}
     (nil))
(jump_insn 71 70 189 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/bitmap.c":149:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 67)
(note 189 71 190 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 190 189 191 19 (set (pc)
        (label_ref 72)) 807 {jump}
     (nil)
 -> 72)
(barrier 191 190 193)
(code_label 193 191 192 20 46 (nil) [1 uses])
(note 192 193 194 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 194 192 72 20 (const_int 0 [0]) "fs/bitmap.c":152:17 843 {nop}
     (nil))
(code_label 72 194 73 11 41 (nil) [1 uses])
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/bitmap.c":153:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 75 74 76 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "fs/bitmap.c":153:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 91)
(note 76 75 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 76 80 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])
            (const_int 8191 [0x1fff]))) "fs/bitmap.c":153:13 11 {*cmpsi_1}
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "fs/bitmap.c":153:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 91)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg:SI 121)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])) "fs/bitmap.c":153:35 75 {*movsi_internal}
     (nil))
(insn 83 82 84 13 (parallel [
            (set (reg:SI 84 [ _2 ])
                (ashift:SI (reg:SI 121)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":153:35 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 121)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 84 83 85 13 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])) "fs/bitmap.c":153:31 75 {*movsi_internal}
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg:SI 85 [ _3 ])
                (plus:SI (reg:SI 84 [ _2 ])
                    (reg:SI 122)))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":153:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 84 [ _2 ])
                        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32]))
                    (nil))))))
(insn 86 85 87 13 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [19 sb+0 S4 A32])) "fs/bitmap.c":153:46 75 {*movsi_internal}
     (nil))
(insn 87 86 88 13 (set (reg:HI 86 [ _4 ])
        (mem:HI (reg/f:SI 123) [4 sb_39->s_ninodes+0 S2 A32])) "fs/bitmap.c":153:46 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (nil)))
(insn 88 87 89 13 (set (reg:SI 87 [ _5 ])
        (zero_extend:SI (reg:HI 86 [ _4 ]))) "fs/bitmap.c":153:46 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 86 [ _4 ])
        (nil)))
(insn 89 88 90 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 85 [ _3 ])
            (reg:SI 87 [ _5 ]))) "fs/bitmap.c":153:26 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
            (nil))))
(jump_insn 90 89 91 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "fs/bitmap.c":153:26 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 101)
(code_label 91 90 92 14 43 (nil) [2 uses])
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":154:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 94 93 95 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":154:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 95 94 96 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":154:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 96 95 97 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7a4f6d6d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":154:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 97 96 98 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":154:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 98 97 187 14 (set (reg/f:SI 106 [ _30 ])
        (const_int 0 [0])) "fs/bitmap.c":155:16 75 {*movsi_internal}
     (nil))
(jump_insn 187 98 188 14 (set (pc)
        (label_ref 174)) "fs/bitmap.c":155:16 807 {jump}
     (nil)
 -> 174)
(barrier 188 187 101)
(code_label 101 188 102 15 44 (nil) [1 uses])
(note 102 101 103 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 15 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":157:9 75 {*movsi_internal}
     (nil))
(insn 104 103 106 15 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (reg/f:SI 124) [2 bh_25->b_data+0 S4 A32])) "fs/bitmap.c":157:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 106 104 107 15 (set (reg:SI 126)
        (const_int 0 [0])) "fs/bitmap.c":157:9 75 {*movsi_internal}
     (nil))
(insn 107 106 195 15 (set (reg:SI 127)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])) "fs/bitmap.c":157:9 75 {*movsi_internal}
     (nil))
(insn 195 107 108 15 (set (reg:SI 125 [ res ])
        (reg:SI 126)) "fs/bitmap.c":157:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 108 195 105 15 (parallel [
            (set (reg:SI 125 [ res ])
                (asm_operands/v:SI ("btsl %2,%3
	setb %%al") ("=a") 0 [
                        (reg:SI 125 [ res ])
                        (reg:SI 127)
                        (mem:QI (reg/f:SI 88 [ _6 ]) [0 *_6+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("0") fs/bitmap.c:157)
                        (asm_input:SI ("r") fs/bitmap.c:157)
                        (asm_input:QI ("m") fs/bitmap.c:157)
                    ]
                     [] fs/bitmap.c:157))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":157:9 -1
     (expr_list:REG_DEAD (reg:SI 127)
        (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 105 108 109 15 (set (reg/v:SI 108 [ res ])
        (reg:SI 125 [ res ])) "fs/bitmap.c":157:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ res ])
        (nil)))
(insn 109 105 110 15 (set (reg:SI 109 [ _50 ])
        (reg/v:SI 108 [ res ])) "fs/bitmap.c":157:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 108 [ res ])
        (nil)))
(insn 110 109 111 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ _50 ])
            (const_int 0 [0]))) "fs/bitmap.c":157:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 109 [ _50 ])
        (nil)))
(jump_insn 111 110 112 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) "fs/bitmap.c":157:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 119)
(note 112 111 113 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":158:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 114 113 115 16 (set (reg/f:SI 128)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x7a4f6d7972d0 *.LC17>)
                    ] UNSPEC_GOTOFF)))) "fs/bitmap.c":158:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x7a4f6d7972d0 *.LC17>)
        (nil)))
(insn 115 114 116 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 128)) "fs/bitmap.c":158:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 116 115 117 16 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/bitmap.c":158:9 75 {*movsi_internal}
     (nil))
(call_insn 117 116 118 16 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a4f6d710b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/bitmap.c":158:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 118 117 119 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":158:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 119 118 120 17 45 (nil) [1 uses])
(note 120 119 121 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 17 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [6 bh+0 S4 A32])) "fs/bitmap.c":159:16 75 {*movsi_internal}
     (nil))
(insn 122 121 123 17 (set (mem:QI (plus:SI (reg/f:SI 129)
                (const_int 11 [0xb])) [0 bh_25->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/bitmap.c":159:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (nil)))
(insn 123 122 124 17 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":160:20 75 {*movsi_internal}
     (nil))
(insn 124 123 125 17 (set (mem:HI (plus:SI (reg/f:SI 130)
                (const_int 48 [0x30])) [4 inode_36->i_count+0 S2 A32])
        (const_int 1 [0x1])) "fs/bitmap.c":160:20 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 125 124 126 17 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":161:21 75 {*movsi_internal}
     (nil))
(insn 126 125 127 17 (set (mem:QI (plus:SI (reg/f:SI 131)
                (const_int 13 [0xd])) [0 inode_36->i_nlinks+0 S1 A8])
        (const_int 1 [0x1])) "fs/bitmap.c":161:21 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 127 126 128 17 (set (reg:SI 132)
        (mem/c:SI (reg/f:SI 16 argp) [13 dev+0 S4 A32])) "fs/bitmap.c":162:18 75 {*movsi_internal}
     (nil))
(insn 128 127 129 17 (set (reg:HI 89 [ _7 ])
        (subreg:HI (reg:SI 132) 0)) "fs/bitmap.c":162:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 129 128 130 17 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":162:18 75 {*movsi_internal}
     (nil))
(insn 130 129 131 17 (set (mem:HI (plus:SI (reg/f:SI 133)
                (const_int 44 [0x2c])) [4 inode_36->i_dev+0 S2 A32])
        (reg:HI 89 [ _7 ])) "fs/bitmap.c":162:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
            (nil))))
(insn 131 130 132 17 (set (reg/f:SI 134)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a4f6d72f120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "fs/bitmap.c":163:27 75 {*movsi_internal}
     (nil))
(insn 132 131 133 17 (set (reg/f:SI 90 [ current.0_8 ])
        (mem/f/c:SI (reg/f:SI 134) [5 current+0 S4 A32])) "fs/bitmap.c":163:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 133 132 134 17 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 90 [ current.0_8 ])
                (const_int 578 [0x242])) [4 current.0_8->euid+0 S2 A16])) "fs/bitmap.c":163:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ current.0_8 ])
        (nil)))
(insn 134 133 135 17 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":163:18 75 {*movsi_internal}
     (nil))
(insn 135 134 136 17 (set (mem:HI (plus:SI (reg/f:SI 135)
                (const_int 2 [0x2])) [4 inode_36->i_uid+0 S2 A16])
        (reg:HI 91 [ _9 ])) "fs/bitmap.c":163:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
            (nil))))
(insn 136 135 137 17 (set (reg/f:SI 136)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a4f6d72f120 current>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "fs/bitmap.c":164:27 75 {*movsi_internal}
     (nil))
(insn 137 136 138 17 (set (reg/f:SI 92 [ current.1_10 ])
        (mem/f/c:SI (reg/f:SI 136) [5 current+0 S4 A32])) "fs/bitmap.c":164:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))
(insn 138 137 139 17 (set (reg:HI 93 [ _11 ])
        (mem:HI (plus:SI (reg/f:SI 92 [ current.1_10 ])
                (const_int 584 [0x248])) [4 current.1_10->egid+0 S2 A32])) "fs/bitmap.c":164:27 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92 [ current.1_10 ])
        (nil)))
(insn 139 138 140 17 (set (reg:QI 94 [ _12 ])
        (subreg:QI (reg:HI 93 [ _11 ]) 0)) "fs/bitmap.c":164:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
        (nil)))
(insn 140 139 141 17 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":164:18 75 {*movsi_internal}
     (nil))
(insn 141 140 142 17 (set (mem:QI (plus:SI (reg/f:SI 137)
                (const_int 12 [0xc])) [0 inode_36->i_gid+0 S1 A32])
        (reg:QI 94 [ _12 ])) "fs/bitmap.c":164:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_DEAD (reg:QI 94 [ _12 ])
            (nil))))
(insn 142 141 143 17 (set (reg/f:SI 138)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":165:19 75 {*movsi_internal}
     (nil))
(insn 143 142 144 17 (set (mem:QI (plus:SI (reg/f:SI 138)
                (const_int 51 [0x33])) [0 inode_36->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/bitmap.c":165:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))
(insn 144 143 145 17 (set (reg:SI 139)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 i+0 S4 A32])) "fs/bitmap.c":166:22 75 {*movsi_internal}
     (nil))
(insn 145 144 146 17 (set (reg:HI 95 [ _13 ])
        (subreg:HI (reg:SI 139) 0)) "fs/bitmap.c":166:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 146 145 147 17 (parallel [
            (set (reg:HI 96 [ _14 ])
                (ashift:HI (reg:HI 95 [ _13 ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":166:22 659 {*ashlhi3_1}
     (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 17 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [13 j+0 S4 A32])) "fs/bitmap.c":166:22 75 {*movsi_internal}
     (nil))
(insn 148 147 149 17 (set (reg:HI 97 [ _15 ])
        (subreg:HI (reg:SI 140) 0)) "fs/bitmap.c":166:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 149 148 150 17 (parallel [
            (set (reg:HI 98 [ _16 ])
                (plus:HI (reg:HI 96 [ _14 ])
                    (reg:HI 97 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":166:22 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 97 [ _15 ])
        (expr_list:REG_DEAD (reg:HI 96 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 150 149 151 17 (set (reg/f:SI 141)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":166:18 75 {*movsi_internal}
     (nil))
(insn 151 150 152 17 (set (mem:HI (plus:SI (reg/f:SI 141)
                (const_int 46 [0x2e])) [4 inode_36->i_num+0 S2 A16])
        (reg:HI 98 [ _16 ])) "fs/bitmap.c":166:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:HI 98 [ _16 ])
            (nil))))
(insn 152 151 153 17 (set (reg/f:SI 142)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7a4f6d72f360 jiffies>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "fs/bitmap.c":167:56 75 {*movsi_internal}
     (nil))
(insn 153 152 154 17 (set (reg:SI 99 [ jiffies.2_17 ])
        (mem/v/c:SI (reg/f:SI 142) [3 jiffies+0 S4 A32])) "fs/bitmap.c":167:56 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))
(insn 154 153 155 17 (set (reg:SI 144)
        (const_int 1374389535 [0x51eb851f])) "fs/bitmap.c":167:56 75 {*movsi_internal}
     (nil))
(insn 155 154 156 17 (parallel [
            (set (reg:SI 143)
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 99 [ jiffies.2_17 ]))
                            (sign_extend:DI (reg:SI 144)))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 154))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":167:56 435 {*smulsi3_highpart_1}
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_UNUSED (reg:SI 154)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 156 155 157 17 (parallel [
            (set (reg:SI 145)
                (ashiftrt:SI (reg:SI 143)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":167:56 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 157 156 158 17 (parallel [
            (set (reg:SI 146)
                (ashiftrt:SI (reg:SI 99 [ jiffies.2_17 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":167:56 694 {ashrsi3_cvt}
     (expr_list:REG_DEAD (reg:SI 99 [ jiffies.2_17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 158 157 159 17 (parallel [
            (set (reg:SI 100 [ _18 ])
                (minus:SI (reg:SI 145)
                    (reg:SI 146)))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":167:56 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg:SI 145)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 159 158 160 17 (set (reg/f:SI 147)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7a4f6d72f3f0 startup_time>)
                        ] UNSPEC_GOT))) [20  S4 A8])) "fs/bitmap.c":167:56 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 160 159 161 17 (set (reg:SI 101 [ startup_time.3_19 ])
        (mem/c:SI (reg/f:SI 147) [3 startup_time+0 S4 A32])) "fs/bitmap.c":167:56 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 161 160 162 17 (parallel [
            (set (reg:SI 102 [ _20 ])
                (plus:SI (reg:SI 100 [ _18 ])
                    (reg:SI 101 [ startup_time.3_19 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/bitmap.c":167:56 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ startup_time.3_19 ])
        (expr_list:REG_DEAD (reg:SI 100 [ _18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 162 161 163 17 (set (reg:SI 103 [ _21 ])
        (reg:SI 102 [ _20 ])) "fs/bitmap.c":167:56 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (nil)))
(insn 163 162 164 17 (set (reg/f:SI 148)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":167:54 75 {*movsi_internal}
     (nil))
(insn 164 163 165 17 (set (mem:SI (plus:SI (reg/f:SI 148)
                (const_int 40 [0x28])) [3 inode_36->i_ctime+0 S4 A32])
        (reg:SI 103 [ _21 ])) "fs/bitmap.c":167:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_DEAD (reg:SI 103 [ _21 ])
            (nil))))
(insn 165 164 166 17 (set (reg/f:SI 149)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":167:44 75 {*movsi_internal}
     (nil))
(insn 166 165 167 17 (set (reg:SI 104 [ _22 ])
        (mem:SI (plus:SI (reg/f:SI 149)
                (const_int 40 [0x28])) [3 inode_36->i_ctime+0 S4 A32])) "fs/bitmap.c":167:44 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 149)
        (nil)))
(insn 167 166 168 17 (set (reg/f:SI 150)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":167:37 75 {*movsi_internal}
     (nil))
(insn 168 167 169 17 (set (mem:SI (plus:SI (reg/f:SI 150)
                (const_int 36 [0x24])) [3 inode_36->i_atime+0 S4 A32])
        (reg:SI 104 [ _22 ])) "fs/bitmap.c":167:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_DEAD (reg:SI 104 [ _22 ])
            (nil))))
(insn 169 168 170 17 (set (reg/f:SI 151)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":167:27 75 {*movsi_internal}
     (nil))
(insn 170 169 171 17 (set (reg:SI 105 [ _23 ])
        (mem:SI (plus:SI (reg/f:SI 151)
                (const_int 36 [0x24])) [3 inode_36->i_atime+0 S4 A32])) "fs/bitmap.c":167:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 151)
        (nil)))
(insn 171 170 172 17 (set (reg/f:SI 152)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":167:20 75 {*movsi_internal}
     (nil))
(insn 172 171 173 17 (set (mem:SI (plus:SI (reg/f:SI 152)
                (const_int 8 [0x8])) [3 inode_36->i_mtime+0 S4 A32])
        (reg:SI 105 [ _23 ])) "fs/bitmap.c":167:20 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_DEAD (reg:SI 105 [ _23 ])
            (nil))))
(insn 173 172 174 17 (set (reg/f:SI 106 [ _30 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 inode+0 S4 A32])) "fs/bitmap.c":168:12 75 {*movsi_internal}
     (nil))
(code_label 174 173 175 18 37 (nil) [2 uses])
(note 175 174 176 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 180 18 (set (reg/f:SI 110 [ <retval> ])
        (reg/f:SI 106 [ _30 ])) "fs/bitmap.c":169:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106 [ _30 ])
        (nil)))
(insn 180 176 181 18 (set (reg/i:SI 0 ax)
        (reg/f:SI 110 [ <retval> ])) "fs/bitmap.c":169:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110 [ <retval> ])
        (nil)))
(insn 181 180 0 18 (use (reg/i:SI 0 ax)) "fs/bitmap.c":169:1 -1
     (nil))
