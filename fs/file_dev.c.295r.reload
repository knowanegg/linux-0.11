
;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1332, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = -2
   Insn 5: point = 5, n_alt = -2
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 0
   Insn 18: point = 10, n_alt = 0
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]
Compressing live ranges: from 11 to 11 - 100%
Ranges after the compression:
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 18
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r3={1d,1u} r7={1d,3u} r17={2d} 
;;    total ref usage 19{11d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 0 ax [orig:86 _v ] [86])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 0 ax [87]) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (nil))
(insn 5 7 8 2 (set (reg/v:QI 3 bx [orig:83 _v ] [83])
        (reg:QI 0 ax [orig:86 _v ] [86])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:QI 0 ax [orig:84 _4 ] [84])
        (reg/v:QI 3 bx [orig:83 _v ] [83])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1337, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =Q  (1) Q {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 1, n_alt = 0
   Insn 8: point = 2, n_alt = 4
   Insn 4: point = 3, n_alt = 8
   Insn 3: point = 4, n_alt = 0
   Insn 2: point = 6, n_alt = 0
   Insn 15: point = 7, n_alt = 0
 r82: [7..7]
 r83: [5..6]
 r84: [3..4]
 r85: [0..2]
 r86: [0..1]
Compressing live ranges: from 8 to 7 - 87%
Ranges after the compression:
 r82: [6..6]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=4)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d,1u} r2={1d} r7={1d,7u} r17={2d} 
;;    total ref usage 20{10d,10u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(insn 2 15 4 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])
        (reg:QI 0 ax [84])) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 0 ax [85])
        (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 1 dx [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 0 ax [85])
                    (mem:QI (reg/f:SI 1 dx [86]) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (nil))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 16 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))
(note 16 14 0 NOTE_INSN_DELETED)

;; Function file_read (file_read, funcdef_no=8, decl_uid=1363, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 42:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
            1 Costly set: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =*d  (1) *a {ashrsi3_cvt}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (1) 0  (2) m {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 91
	 Choosing alt 0 in insn 91:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 97:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 100:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 102:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 112:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 120:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 124:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 133:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 135:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 139:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 143:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 160:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=147 from oldreg=145, assigning class AREG to r147
  160: {r136:SI=trunc(sign_extend(r147:SI)*sign_extend(r137:SI) 0>>0x20);clobber r147:SI;clobber flags:CC;}
      REG_DEAD r137:SI
      REG_UNUSED r145:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  211: r147:SI=r100:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 161:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=148 from oldreg=136, assigning class GENERAL_REGS to r148
  161: {r148:SI=r148:SI>>0x5;clobber flags:CC;}
      REG_DEAD r136:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  212: r148:SI=r136:SI
    Inserting insn reload after:
  213: r138:SI=r148:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 163:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=149 from oldreg=138, assigning class GENERAL_REGS to r149
  163: {r149:SI=r149:SI-r139:SI;clobber flags:CC;}
      REG_DEAD r139:SI
      REG_DEAD r138:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  214: r149:SI=r138:SI
    Inserting insn reload after:
  215: r101:SI=r149:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 166
	 Choosing alt 0 in insn 166:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) 0  (2) m {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6 7
EBB 8
EBB 9 10
EBB 11
EBB 12 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18 19
EBB 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
   Insn 190: point = 0, n_alt = -1
   Insn 189: point = 0, n_alt = -2
   Insn 185: point = 1, n_alt = -2
  BB 19
   Insn 205: point = 4, n_alt = -1
   Insn 175: point = 4, n_alt = 1
   Insn 174: point = 6, n_alt = 0
  BB 20
   Insn 180: point = 7, n_alt = 0
  BB 18
   Insn 172: point = 8, n_alt = -1
   Insn 171: point = 8, n_alt = 1
   Insn 170: point = 9, n_alt = 0
   Insn 169: point = 10, n_alt = 1
   Insn 168: point = 11, n_alt = 0
   Insn 167: point = 12, n_alt = -2
   Insn 166: point = 14, n_alt = 0
   Insn 165: point = 16, n_alt = 0
   Insn 164: point = 18, n_alt = 0
   Insn 215: point = 20, n_alt = -2
	Hard reg 1 is preferable by r149 with profit 1000
   Insn 163: point = 22, n_alt = 0
   Insn 214: point = 24, n_alt = -2
	Hard reg 1 is preferable by r149 with profit 1000
	Hard reg 0 is preferable by r149 with profit 1000
   Insn 162: point = 26, n_alt = 1
   Insn 213: point = 28, n_alt = -2
	Hard reg 0 is preferable by r148 with profit 1000
   Insn 161: point = 30, n_alt = 0
   Insn 212: point = 31, n_alt = -2
	Hard reg 0 is preferable by r148 with profit 1000
	Hard reg 1 is preferable by r148 with profit 1000
   Insn 160: point = 33, n_alt = 0
   Insn 211: point = 35, n_alt = -2
	Hard reg 2 is preferable by r147 with profit 1000
   Insn 159: point = 36, n_alt = 0
   Insn 158: point = 37, n_alt = 0
   Insn 157: point = 39, n_alt = 0
  BB 7
   Insn 197: point = 41, n_alt = -1
  BB 17
   Insn 154: point = 42, n_alt = -1
   Insn 153: point = 42, n_alt = 1
  BB 13
   Insn 201: point = 43, n_alt = -1
   Insn 124: point = 43, n_alt = 0
   Insn 123: point = 43, n_alt = 0
   Insn 122: point = 43, n_alt = -2
   Insn 121: point = 43, n_alt = 0
   Insn 120: point = 43, n_alt = 0
  BB 12
   Insn 118: point = 44, n_alt = -1
   Insn 117: point = 44, n_alt = 0
   Insn 113: point = 45, n_alt = 1
   Insn 112: point = 46, n_alt = 3
   Insn 111: point = 47, n_alt = 0
  BB 10
   Insn 199: point = 49, n_alt = -1
   Insn 92: point = 49, n_alt = 1
   Insn 91: point = 50, n_alt = 0
   Insn 90: point = 52, n_alt = 0
   Insn 89: point = 53, n_alt = 0
   Insn 88: point = 55, n_alt = 0
  BB 11
   Insn 108: point = 57, n_alt = 0
   Insn 107: point = 57, n_alt = 0
   Insn 106: point = 57, n_alt = 0
   Insn 105: point = 58, n_alt = 0
   Insn 104: point = 59, n_alt = 0
   Insn 103: point = 59, n_alt = 0
   Insn 102: point = 61, n_alt = 4
   Insn 101: point = 63, n_alt = 1
   Insn 100: point = 64, n_alt = 3
   Insn 99: point = 65, n_alt = 0
   Insn 98: point = 66, n_alt = 1
   Insn 97: point = 67, n_alt = 3
   Insn 96: point = 68, n_alt = 0
  BB 4
   Insn 194: point = 70, n_alt = -1
  BB 16
   Insn 149: point = 71, n_alt = -1
   Insn 148: point = 71, n_alt = 0
   Insn 144: point = 72, n_alt = 1
   Insn 143: point = 73, n_alt = 3
   Insn 142: point = 74, n_alt = 0
  BB 14
   Insn 203: point = 76, n_alt = -1
  BB 9
   Insn 86: point = 77, n_alt = -1
   Insn 85: point = 77, n_alt = 1
   Insn 84: point = 77, n_alt = 0
   Insn 83: point = 78, n_alt = 0
   Insn 82: point = 79, n_alt = 1
   Insn 81: point = 80, n_alt = 0
   Insn 80: point = 81, n_alt = 0
   Insn 79: point = 83, n_alt = 0
   Insn 78: point = 84, n_alt = 0
   Insn 77: point = 86, n_alt = 0
   Insn 76: point = 87, n_alt = 1
   Insn 208: point = 88, n_alt = 0
   Insn 207: point = 90, n_alt = 0
   Insn 74: point = 90, n_alt = 0
   Insn 73: point = 91, n_alt = 1
   Insn 72: point = 93, n_alt = 0
   Insn 71: point = 94, n_alt = 1
   Insn 70: point = 95, n_alt = 0
   Insn 69: point = 97, n_alt = 0
   Insn 68: point = 99, n_alt = 0
   Insn 67: point = 101, n_alt = 0
   Insn 66: point = 103, n_alt = 0
   Insn 63: point = 104, n_alt = 0
   Insn 62: point = 106, n_alt = 0
  BB 8
   Insn 59: point = 108, n_alt = 1
  BB 6
   Insn 53: point = 109, n_alt = -1
   Insn 52: point = 109, n_alt = 1
   Insn 51: point = 109, n_alt = 1
   Insn 50: point = 110, n_alt = -2
   Insn 49: point = 111, n_alt = 0
   Insn 48: point = 111, n_alt = 0
   Insn 47: point = 111, n_alt = -2
   Insn 46: point = 111, n_alt = 0
   Insn 45: point = 112, n_alt = 0
   Insn 44: point = 112, n_alt = 0
   Insn 43: point = 112, n_alt = 0
   Insn 42: point = 114, n_alt = 2
   Insn 41: point = 116, n_alt = 0
  BB 5
   Insn 39: point = 118, n_alt = -1
   Insn 38: point = 118, n_alt = 1
   Insn 37: point = 118, n_alt = 1
   Insn 36: point = 119, n_alt = -2
   Insn 35: point = 120, n_alt = 0
   Insn 34: point = 120, n_alt = 0
   Insn 33: point = 120, n_alt = -2
   Insn 32: point = 120, n_alt = 0
   Insn 31: point = 120, n_alt = 0
   Insn 30: point = 121, n_alt = 0
   Insn 29: point = 121, n_alt = -2
   Insn 28: point = 123, n_alt = 0
   Insn 27: point = 125, n_alt = 0
   Insn 26: point = 127, n_alt = 0
   Insn 23: point = 127, n_alt = 3
   Insn 22: point = 128, n_alt = -2
   Insn 21: point = 130, n_alt = 0
   Insn 20: point = 132, n_alt = 0
  BB 15
   Insn 139: point = 134, n_alt = 0
   Insn 138: point = 134, n_alt = 0
   Insn 137: point = 134, n_alt = 0
   Insn 136: point = 134, n_alt = 0
   Insn 135: point = 135, n_alt = 0
   Insn 134: point = 135, n_alt = 1
   Insn 133: point = 136, n_alt = 3
   Insn 132: point = 137, n_alt = 0
  BB 3
   Insn 192: point = 139, n_alt = -1
   Insn 12: point = 139, n_alt = 0
  BB 2
   Insn 10: point = 140, n_alt = -1
   Insn 9: point = 140, n_alt = 1
   Insn 6: point = 140, n_alt = 1
   Insn 5: point = 141, n_alt = 0
   Insn 209: point = 142, n_alt = 0
 r82: [140..142] [19..138]
 r83: [129..130]
 r84: [120..121]
 r85: [113..114]
 r86: [111..112]
 r87: [100..104]
 r88: [89..91]
 r89: [82..84]
 r90: [79..81]
 r91: [51..53]
 r92: [51..52]
 r93: [58..68]
 r94: [62..65]
 r95: [60..61]
 r96: [57..59]
 r97: [44..47]
 r98: [134..137]
 r99: [71..74]
 r100: [27..37]
 r101: [15..20]
 r102: [15..16]
 r103: [13..14]
 r104: [10..12]
 r105: [139..139] [7..7] [2..4]
 r106: [0..1]
 r107: [140..141]
 r108: [131..132]
 r109: [124..128]
 r110: [126..127]
 r111: [122..123]
 r112: [118..119]
 r113: [115..116]
 r114: [109..110]
 r115: [105..106]
 r116: [102..103]
 r117: [96..101]
 r118: [98..99]
 r119: [96..97]
 r120: [94..95]
 r121: [92..93]
 r122: [87..88]
 r123: [89..90]
 r124: [85..86]
 r125: [82..83]
 r126: [79..80]
 r127: [77..78]
 r128: [54..55]
 r129: [49..50]
 r130: [66..67]
 r131: [63..64]
 r132: [45..46]
 r133: [135..136]
 r134: [72..73]
 r135: [38..39]
 r136: [32..33]
 r137: [34..36]
 r138: [25..28]
 r139: [23..26]
 r140: [17..18]
 r141: [10..11]
 r142: [8..9]
 r143: [5..6]
 r147: [33..35]
 r148: [29..31]
 r149: [21..24]
Compressing live ranges: from 143 to 102 - 71%
Ranges after the compression:
 r82: [100..101] [17..98]
 r83: [93..94]
 r84: [87..88]
 r85: [81..82]
 r86: [79..80]
 r87: [71..74]
 r88: [61..62]
 r89: [55..56]
 r90: [53..54]
 r91: [37..38]
 r92: [37..38]
 r93: [41..48]
 r94: [45..46]
 r95: [43..44]
 r96: [41..42]
 r97: [33..34]
 r98: [97..98]
 r99: [49..50]
 r100: [23..30]
 r101: [13..18]
 r102: [13..14]
 r103: [11..12]
 r104: [9..10]
 r105: [99..99] [6..6] [2..3]
 r106: [0..1]
 r107: [100..101]
 r108: [95..96]
 r109: [91..92]
 r110: [91..92]
 r111: [89..90]
 r112: [85..86]
 r113: [83..84]
 r114: [77..78]
 r115: [75..76]
 r116: [73..74]
 r117: [67..72]
 r118: [69..70]
 r119: [67..68]
 r120: [65..66]
 r121: [63..64]
 r122: [59..60]
 r123: [61..62]
 r124: [57..58]
 r125: [55..56]
 r126: [53..54]
 r127: [51..52]
 r128: [39..40]
 r129: [35..36]
 r130: [47..48]
 r131: [45..46]
 r132: [33..34]
 r133: [97..98]
 r134: [49..50]
 r135: [31..32]
 r136: [27..28]
 r137: [29..30]
 r138: [21..24]
 r139: [19..22]
 r140: [15..16]
 r141: [9..10]
 r142: [7..8]
 r143: [4..5]
 r147: [28..30]
 r148: [25..26]
 r149: [19..20]

********** Assignment #1: **********

	 Assigning to 147 (cl=AREG, orig=145, freq=2000, tfirst=147, tfreq=2000)...
	   Assign 0 to reload r147 (freq=2000)
	 Assigning to 148 (cl=GENERAL_REGS, orig=136, freq=3000, tfirst=148, tfreq=3000)...
	   Assign 0 to reload r148 (freq=3000)
	 Assigning to 149 (cl=GENERAL_REGS, orig=138, freq=3000, tfirst=149, tfreq=3000)...
	   Assign 0 to reload r149 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 209
changing reg in insn 164
changing reg in insn 157
changing reg in insn 122
changing reg in insn 47
changing reg in insn 33
changing reg in insn 21
changing reg in insn 22
changing reg in insn 29
changing reg in insn 31
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 46
changing reg in insn 63
changing reg in insn 68
changing reg in insn 66
changing reg in insn 73
changing reg in insn 208
changing reg in insn 207
changing reg in insn 78
changing reg in insn 80
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 89
changing reg in insn 90
changing reg in insn 96
changing reg in insn 105
changing reg in insn 97
changing reg in insn 99
changing reg in insn 102
changing reg in insn 100
changing reg in insn 102
changing reg in insn 103
changing reg in insn 103
changing reg in insn 106
changing reg in insn 111
changing reg in insn 117
changing reg in insn 112
changing reg in insn 132
changing reg in insn 136
changing reg in insn 133
changing reg in insn 142
changing reg in insn 148
changing reg in insn 143
changing reg in insn 158
changing reg in insn 162
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 167
changing reg in insn 169
changing reg in insn 180
changing reg in insn 175
changing reg in insn 12
changing reg in insn 185
changing reg in insn 185
changing reg in insn 189
changing reg in insn 5
changing reg in insn 6
changing reg in insn 20
changing reg in insn 21
changing reg in insn 27
changing reg in insn 22
changing reg in insn 28
changing reg in insn 27
changing reg in insn 26
changing reg in insn 23
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 50
changing reg in insn 51
changing reg in insn 62
changing reg in insn 63
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 70
changing reg in insn 68
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 208
changing reg in insn 76
changing reg in insn 74
changing reg in insn 208
changing reg in insn 207
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 88
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 97
changing reg in insn 98
changing reg in insn 100
changing reg in insn 101
changing reg in insn 112
changing reg in insn 113
changing reg in insn 133
changing reg in insn 134
changing reg in insn 143
changing reg in insn 144
changing reg in insn 157
changing reg in insn 158
changing reg in insn 160
changing reg in insn 159
changing reg in insn 160
changing reg in insn 162
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 168
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 174
changing reg in insn 175
deleting insn with uid = 22.
deleting insn with uid = 29.
deleting insn with uid = 33.
deleting insn with uid = 36.
deleting insn with uid = 47.
deleting insn with uid = 50.
deleting insn with uid = 122.
deleting insn with uid = 213.
deleting insn with uid = 214.
deleting insn with uid = 185.
deleting insn with uid = 189.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 138.


file_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={48d,50u} r1={24d,21u,1e} r2={9d,4u} r3={1d,5u} r7={20d,99u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1e} r17={48d,10u} r18={5d} r19={2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 668{475d,189u,4e} in 128{123 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 209 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 209 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 209 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [107])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [10 count+0 S4 A32])) "fs/file_dev.c":23:15 75 {*movsi_internal}
     (nil))
(insn 6 5 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [10 left+0 S4 A32])
        (reg:SI 0 ax [107])) "fs/file_dev.c":23:15 75 {*movsi_internal}
     (nil))
(insn 9 6 10 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [10 left+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":23:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "fs/file_dev.c":23:8 806 {*jcc}
     (nil)
 -> 15)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 192 3 (set (reg:SI 0 ax [orig:105 iftmp.8_32 ] [105])
        (const_int 0 [0])) "fs/file_dev.c":24:16 75 {*movsi_internal}
     (nil))
(jump_insn 192 12 193 3 (set (pc)
        (label_ref 183)) "fs/file_dev.c":24:16 807 {jump}
     (nil)
 -> 183)
(barrier 193 192 15)
(code_label 15 193 16 4 5 (nil) [1 uses])
(note 16 15 194 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 194 16 195 4 (set (pc)
        (label_ref 150)) "fs/file_dev.c":25:11 807 {jump}
     (nil)
 -> 150)
(barrier 195 194 152)
(code_label 152 195 19 5 16 (nil) [1 uses])
(note 19 152 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":26:36 75 {*movsi_internal}
     (nil))
(insn 21 20 23 5 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (mem:SI (plus:SI (reg/f:SI 0 ax [108])
                (const_int 12 [0xc])) [4 filp_43(D)->f_pos+0 S4 A32])) "fs/file_dev.c":26:36 75 {*movsi_internal}
     (nil))
(insn 23 21 26 5 (parallel [
            (set (reg:SI 1 dx [110])
                (plus:SI (reg:SI 0 ax [109])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":26:45 209 {*addsi_1}
     (nil))
(insn 26 23 27 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [109])
            (const_int 0 [0]))) "fs/file_dev.c":26:45 7 {*cmpsi_ccno_1}
     (nil))
(insn 27 26 28 5 (set (reg:SI 0 ax [109])
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [110])
            (reg:SI 0 ax [109]))) "fs/file_dev.c":26:45 1100 {*movsicc_noc}
     (nil))
(insn 28 27 30 5 (parallel [
            (set (reg:SI 0 ax [111])
                (ashiftrt:SI (reg:SI 0 ax [109])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":26:45 702 {*ashrsi3_1}
     (nil))
(insn 30 28 31 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":26:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 31 30 32 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "fs/file_dev.c":26:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 34 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [3 inode+0 S4 A32])) "fs/file_dev.c":26:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 32 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bmap") [flags 0x41]  <function_decl 0x726d6e70ed00 bmap>) [0 bmap S1 A8])
            (const_int 16 [0x10]))) "fs/file_dev.c":26:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 37 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":26:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 37 35 38 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 nr+0 S4 A32])
        (reg:SI 0 ax [112])) "fs/file_dev.c":26:19 75 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [10 nr+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":26:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/file_dev.c":26:12 806 {*jcc}
     (nil)
 -> 57)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":27:35 75 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [113])
                (const_int 44 [0x2c])) [2 inode_44(D)->i_dev+0 S2 A32])) "fs/file_dev.c":27:35 76 {*movhi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (zero_extend:SI (reg:HI 0 ax [orig:85 _3 ] [85]))) "fs/file_dev.c":27:24 144 {*zero_extendhisi2}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":27:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 45 44 46 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [10 nr+0 S4 A32])) "fs/file_dev.c":27:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 46 45 48 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "fs/file_dev.c":27:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 48 46 49 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x726d6e70e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/file_dev.c":27:24 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 49 48 51 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":27:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 51 49 52 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 bh+0 S4 A32])
        (reg:SI 0 ax [114])) "fs/file_dev.c":27:24 75 {*movsi_internal}
     (nil))
(insn 52 51 53 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [8 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":27:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 53 52 196 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/file_dev.c":27:16 806 {*jcc}
     (nil)
 -> 60)
(note 196 53 197 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 197 196 198 7 (set (pc)
        (label_ref 155)) "fs/file_dev.c":28:17 807 {jump}
     (nil)
 -> 155)
(barrier 198 197 57)
(code_label 57 198 58 8 8 (nil) [1 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 bh+0 S4 A32])
        (const_int 0 [0])) "fs/file_dev.c":30:16 75 {*movsi_internal}
     (nil))
(code_label 60 59 61 9 9 (nil) [1 uses])
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 9 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":31:18 75 {*movsi_internal}
     (nil))
(insn 63 62 66 9 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 12 [0xc])) [4 filp_43(D)->f_pos+0 S4 A32])) "fs/file_dev.c":31:18 75 {*movsi_internal}
     (nil))
(insn 66 63 67 9 (parallel [
            (set (reg:SI 1 dx [116])
                (ashiftrt:SI (reg:SI 0 ax [orig:87 _5 ] [87])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":31:12 694 {ashrsi3_cvt}
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:SI 1 dx [117])
                (lshiftrt:SI (reg:SI 1 dx [116])
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":31:12 701 {*lshrsi3_1}
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:SI 0 ax [118])
                (plus:SI (reg:SI 0 ax [orig:87 _5 ] [87])
                    (reg:SI 1 dx [117])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":31:12 209 {*addsi_1}
     (nil))
(insn 69 68 70 9 (parallel [
            (set (reg:SI 0 ax [119])
                (and:SI (reg:SI 0 ax [118])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":31:12 490 {*andsi_1}
     (nil))
(insn 70 69 71 9 (parallel [
            (set (reg:SI 0 ax [120])
                (minus:SI (reg:SI 0 ax [119])
                    (reg:SI 1 dx [117])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":31:12 282 {*subsi_1}
     (nil))
(insn 71 70 72 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 nr+0 S4 A32])
        (reg:SI 0 ax [120])) "fs/file_dev.c":31:12 75 {*movsi_internal}
     (nil))
(insn 72 71 73 9 (set (reg:SI 0 ax [121])
        (const_int 1024 [0x400])) "fs/file_dev.c":32:17 75 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (parallel [
            (set (reg:SI 0 ax [orig:88 _6 ] [88])
                (minus:SI (reg:SI 0 ax [121])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [10 nr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":32:17 282 {*subsi_1}
     (nil))
(insn 74 73 207 9 (set (reg:SI 1 dx [123])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [10 left+0 S4 A32])) "fs/file_dev.c":32:15 75 {*movsi_internal}
     (nil))
(insn 207 74 208 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [123])
            (reg:SI 0 ax [orig:88 _6 ] [88]))) "fs/file_dev.c":32:15 11 {*cmpsi_1}
     (nil))
(insn 208 207 76 9 (set (reg:SI 0 ax [122])
        (if_then_else:SI (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [123])
            (reg:SI 0 ax [orig:88 _6 ] [88]))) "fs/file_dev.c":32:15 1100 {*movsicc_noc}
     (nil))
(insn 76 208 77 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 chars+0 S4 A32])
        (reg:SI 0 ax [122])) "fs/file_dev.c":32:15 75 {*movsi_internal}
     (nil))
(insn 77 76 78 9 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":33:21 75 {*movsi_internal}
     (nil))
(insn 78 77 79 9 (set (reg:SI 1 dx [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [124])
                (const_int 12 [0xc])) [4 filp_43(D)->f_pos+0 S4 A32])) "fs/file_dev.c":33:21 75 {*movsi_internal}
     (nil))
(insn 79 78 80 9 (set (reg:SI 0 ax [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 chars+0 S4 A32])) "fs/file_dev.c":33:21 75 {*movsi_internal}
     (nil))
(insn 80 79 81 9 (parallel [
            (set (reg:SI 1 dx [orig:90 _8 ] [90])
                (plus:SI (reg:SI 1 dx [orig:89 _7 ] [89])
                    (reg:SI 0 ax [125])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":33:21 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:89 _7 ] [89])
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [10 chars+0 S4 A32]))
        (nil)))
(insn 81 80 82 9 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":33:21 75 {*movsi_internal}
     (nil))
(insn 82 81 83 9 (set (mem:SI (plus:SI (reg/f:SI 0 ax [126])
                (const_int 12 [0xc])) [4 filp_43(D)->f_pos+0 S4 A32])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "fs/file_dev.c":33:21 75 {*movsi_internal}
     (nil))
(insn 83 82 84 9 (set (reg:SI 0 ax [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 chars+0 S4 A32])) "fs/file_dev.c":34:14 75 {*movsi_internal}
     (nil))
(insn 84 83 85 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [10 left+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [10 left+0 S4 A32])
                    (reg:SI 0 ax [127])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":34:14 282 {*subsi_1}
     (nil))
(insn 85 84 86 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [8 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":35:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 86 85 87 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "fs/file_dev.c":35:12 806 {*jcc}
     (nil)
 -> 127)
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 10 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 bh+0 S4 A32])) "fs/file_dev.c":36:30 75 {*movsi_internal}
     (nil))
(insn 89 88 90 10 (set (reg/f:SI 1 dx [orig:91 _9 ] [91])
        (mem/f:SI (reg/f:SI 0 ax [128]) [6 bh_29->b_data+0 S4 A32])) "fs/file_dev.c":36:30 75 {*movsi_internal}
     (nil))
(insn 90 89 91 10 (set (reg:SI 0 ax [orig:92 nr.0_10 ] [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 nr+0 S4 A32])) "fs/file_dev.c":36:26 75 {*movsi_internal}
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:SI 0 ax [129])
                (plus:SI (reg:SI 0 ax [orig:92 nr.0_10 ] [92])
                    (reg/f:SI 1 dx [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":36:19 209 {*addsi_1}
     (nil))
(insn 92 91 199 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 p+0 S4 A32])
        (reg:SI 0 ax [129])) "fs/file_dev.c":36:19 75 {*movsi_internal}
     (nil))
(jump_insn 199 92 200 10 (set (pc)
        (label_ref 109)) "fs/file_dev.c":38:19 807 {jump}
     (nil)
 -> 109)
(barrier 200 199 114)
(code_label 114 200 95 11 13 (nil) [1 uses])
(note 95 114 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 11 (set (reg/f:SI 0 ax [orig:93 buf.1_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 buf+0 S4 A32])) "fs/file_dev.c":39:17 75 {*movsi_internal}
     (nil))
(insn 97 96 98 11 (parallel [
            (set (reg:SI 1 dx [130])
                (plus:SI (reg/f:SI 0 ax [orig:93 buf.1_11 ] [93])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":39:17 209 {*addsi_1}
     (nil))
(insn 98 97 99 11 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 buf+0 S4 A32])
        (reg:SI 1 dx [130])) "fs/file_dev.c":39:17 75 {*movsi_internal}
     (nil))
(insn 99 98 100 11 (set (reg/f:SI 1 dx [orig:94 p.2_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 p+0 S4 A32])) "fs/file_dev.c":39:32 75 {*movsi_internal}
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg:SI 2 cx [131])
                (plus:SI (reg/f:SI 1 dx [orig:94 p.2_12 ] [94])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":39:32 209 {*addsi_1}
     (nil))
(insn 101 100 102 11 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [6 p+0 S4 A32])
        (reg:SI 2 cx [131])) "fs/file_dev.c":39:32 75 {*movsi_internal}
     (nil))
(insn 102 101 103 11 (set (reg:QI 1 dx [orig:95 _13 ] [95])
        (mem:QI (reg/f:SI 1 dx [orig:94 p.2_12 ] [94]) [0 *p.2_12+0 S1 A8])) "fs/file_dev.c":39:29 77 {*movqi_internal}
     (nil))
(insn 103 102 104 11 (set (reg:SI 1 dx [orig:96 _14 ] [96])
        (sign_extend:SI (reg:QI 1 dx [orig:95 _13 ] [95]))) "fs/file_dev.c":39:17 153 {extendqisi2}
     (nil))
(insn 104 103 105 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":39:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 105 104 106 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg/f:SI 0 ax [orig:93 buf.1_11 ] [93])) "fs/file_dev.c":39:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 106 105 107 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg:SI 1 dx [orig:96 _14 ] [96])) "fs/file_dev.c":39:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 107 106 108 11 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x726d6e738f00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/file_dev.c":39:17 812 {*call}
     (nil)
    (nil))
(insn 108 107 109 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":39:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 109 108 110 12 12 (nil) [1 uses])
(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 12 (set (reg:SI 0 ax [orig:97 chars.3_15 ] [97])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 chars+0 S4 A32])) "fs/file_dev.c":38:25 75 {*movsi_internal}
     (nil))
(insn 112 111 113 12 (parallel [
            (set (reg:SI 1 dx [132])
                (plus:SI (reg:SI 0 ax [orig:97 chars.3_15 ] [97])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":38:25 209 {*addsi_1}
     (nil))
(insn 113 112 117 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 chars+0 S4 A32])
        (reg:SI 1 dx [132])) "fs/file_dev.c":38:25 75 {*movsi_internal}
     (nil))
(insn 117 113 118 12 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:97 chars.3_15 ] [97])
            (const_int 0 [0]))) "fs/file_dev.c":38:28 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 118 117 119 12 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "fs/file_dev.c":38:28 806 {*jcc}
     (nil)
 -> 114)
(note 119 118 120 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":40:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 121 120 123 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [8 bh+0 S4 A32])) "fs/file_dev.c":40:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 123 121 124 13 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x726d6e70e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/file_dev.c":40:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 124 123 201 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":40:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 201 124 202 13 (set (pc)
        (label_ref 150)) 807 {jump}
     (nil)
 -> 150)
(barrier 202 201 127)
(code_label 127 202 128 14 11 (nil) [1 uses])
(note 128 127 203 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 203 128 204 14 (set (pc)
        (label_ref 140)) "fs/file_dev.c":42:19 807 {jump}
     (nil)
 -> 140)
(barrier 204 203 145)
(code_label 145 204 131 15 15 (nil) [1 uses])
(note 131 145 132 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 15 (set (reg/f:SI 0 ax [orig:98 buf.4_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 buf+0 S4 A32])) "fs/file_dev.c":43:17 75 {*movsi_internal}
     (nil))
(insn 133 132 134 15 (parallel [
            (set (reg:SI 1 dx [133])
                (plus:SI (reg/f:SI 0 ax [orig:98 buf.4_16 ] [98])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":43:17 209 {*addsi_1}
     (nil))
(insn 134 133 135 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 buf+0 S4 A32])
        (reg:SI 1 dx [133])) "fs/file_dev.c":43:17 75 {*movsi_internal}
     (nil))
(insn 135 134 136 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":43:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 136 135 137 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg/f:SI 0 ax [orig:98 buf.4_16 ] [98])) "fs/file_dev.c":43:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 137 136 138 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (const_int 0 [0])) "fs/file_dev.c":43:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 138 137 139 15 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x726d6e738f00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/file_dev.c":43:17 812 {*call}
     (nil)
    (nil))
(insn 139 138 140 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":43:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 140 139 141 16 14 (nil) [1 uses])
(note 141 140 142 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 16 (set (reg:SI 0 ax [orig:99 chars.5_17 ] [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 chars+0 S4 A32])) "fs/file_dev.c":42:25 75 {*movsi_internal}
     (nil))
(insn 143 142 144 16 (parallel [
            (set (reg:SI 1 dx [134])
                (plus:SI (reg:SI 0 ax [orig:99 chars.5_17 ] [99])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":42:25 209 {*addsi_1}
     (nil))
(insn 144 143 148 16 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 chars+0 S4 A32])
        (reg:SI 1 dx [134])) "fs/file_dev.c":42:25 75 {*movsi_internal}
     (nil))
(insn 148 144 149 16 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:99 chars.5_17 ] [99])
            (const_int 0 [0]))) "fs/file_dev.c":42:28 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 149 148 150 16 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "fs/file_dev.c":42:28 806 {*jcc}
     (nil)
 -> 145)
(code_label 150 149 151 17 7 (nil) [2 uses])
(note 151 150 153 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 153 151 154 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [10 left+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":25:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 154 153 155 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) "fs/file_dev.c":25:12 806 {*jcc}
     (nil)
 -> 152)
(code_label 155 154 156 18 10 (nil) [1 uses])
(note 156 155 157 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 18 (set (reg/f:SI 0 ax [135])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x726d6e72f360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 158 157 159 18 (set (reg:SI 2 cx [orig:100 jiffies.6_18 ] [100])
        (mem/v/c:SI (reg/f:SI 0 ax [135]) [4 jiffies+0 S4 A32])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 159 158 211 18 (set (reg:SI 1 dx [137])
        (const_int 1374389535 [0x51eb851f])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 211 159 160 18 (set (reg:SI 0 ax [145])
        (reg:SI 2 cx [orig:100 jiffies.6_18 ] [100])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 160 211 212 18 (parallel [
            (set (reg:SI 1 dx [136])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [145]))
                            (sign_extend:DI (reg:SI 1 dx [137])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [145]))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":46:22 435 {*smulsi3_highpart_1}
     (nil))
(insn 212 160 161 18 (set (reg:SI 0 ax [136])
        (reg:SI 1 dx [136])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 161 212 162 18 (parallel [
            (set (reg:SI 0 ax [136])
                (ashiftrt:SI (reg:SI 0 ax [136])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":46:22 702 {*ashrsi3_1}
     (nil))
(insn 162 161 163 18 (parallel [
            (set (reg:SI 2 cx [139])
                (ashiftrt:SI (reg:SI 2 cx [orig:100 jiffies.6_18 ] [100])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":46:22 694 {ashrsi3_cvt}
     (nil))
(insn 163 162 215 18 (parallel [
            (set (reg:SI 0 ax [138])
                (minus:SI (reg:SI 0 ax [138])
                    (reg:SI 2 cx [139])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":46:22 282 {*subsi_1}
     (nil))
(insn 215 163 164 18 (set (reg:SI 1 dx [orig:101 _19 ] [101])
        (reg:SI 0 ax [138])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 164 215 165 18 (set (reg/f:SI 0 ax [140])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x726d6e72f3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 165 164 166 18 (set (reg:SI 0 ax [orig:102 startup_time.7_20 ] [102])
        (mem/c:SI (reg/f:SI 0 ax [140]) [4 startup_time+0 S4 A32])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 166 165 167 18 (parallel [
            (set (reg:SI 0 ax [orig:103 _21 ] [103])
                (plus:SI (reg:SI 0 ax [orig:102 startup_time.7_20 ] [102])
                    (reg:SI 1 dx [orig:101 _19 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":46:22 209 {*addsi_1}
     (nil))
(insn 167 166 168 18 (set (reg:SI 1 dx [orig:104 _22 ] [104])
        (reg:SI 0 ax [orig:103 _21 ] [103])) "fs/file_dev.c":46:22 75 {*movsi_internal}
     (nil))
(insn 168 167 169 18 (set (reg/f:SI 0 ax [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":46:20 75 {*movsi_internal}
     (nil))
(insn 169 168 170 18 (set (mem:SI (plus:SI (reg/f:SI 0 ax [141])
                (const_int 36 [0x24])) [4 inode_44(D)->i_atime+0 S4 A32])
        (reg:SI 1 dx [orig:104 _22 ] [104])) "fs/file_dev.c":46:20 75 {*movsi_internal}
     (nil))
(insn 170 169 171 18 (set (reg:SI 0 ax [142])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [10 count+0 S4 A32])) "fs/file_dev.c":47:44 75 {*movsi_internal}
     (nil))
(insn 171 170 172 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [142])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [10 left+0 S4 A32]))) "fs/file_dev.c":47:44 11 {*cmpsi_1}
     (nil))
(jump_insn 172 171 173 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "fs/file_dev.c":47:44 806 {*jcc}
     (nil)
 -> 178)
(note 173 172 174 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 19 (set (reg:SI 0 ax [143])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [10 count+0 S4 A32])) "fs/file_dev.c":47:44 75 {*movsi_internal}
     (nil))
(insn 175 174 205 19 (parallel [
            (set (reg:SI 0 ax [orig:105 iftmp.8_32 ] [105])
                (minus:SI (reg:SI 0 ax [143])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [10 left+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":47:44 282 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [10 count+0 S4 A32])
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [10 left+0 S4 A32]))
        (nil)))
(jump_insn 205 175 206 19 (set (pc)
        (label_ref 183)) "fs/file_dev.c":47:44 807 {jump}
     (nil)
 -> 183)
(barrier 206 205 178)
(code_label 178 206 179 20 17 (nil) [1 uses])
(note 179 178 180 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 183 20 (set (reg:SI 0 ax [orig:105 iftmp.8_32 ] [105])
        (const_int -99 [0xffffffffffffff9d])) "fs/file_dev.c":47:44 75 {*movsi_internal}
     (nil))
(code_label 183 180 184 21 6 (nil) [2 uses])
(note 184 183 190 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 190 184 210 21 (use (reg/i:SI 0 ax)) "fs/file_dev.c":48:1 -1
     (nil))
(note 210 190 0 NOTE_INSN_DELETED)

;; Function file_write (file_write, funcdef_no=9, decl_uid=1152, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 30:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 53:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 60:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
            1 Costly set: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =*d  (1) *a {ashrsi3_cvt}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 0 in insn 82:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 85:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) 0  (2) m {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) 0  (2) m {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) r  (1) 0  (2) m {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 106:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 117:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 121:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 126:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 128:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 131:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 134:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 137:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 141:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 142:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 153:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 165:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=176 from oldreg=173, assigning class AREG to r176
  165: {r156:SI=trunc(sign_extend(r176:SI)*sign_extend(r157:SI) 0>>0x20);clobber r176:SI;clobber flags:CC;}
      REG_DEAD r157:SI
      REG_UNUSED r173:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  241: r176:SI=r101:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 166:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=177 from oldreg=156, assigning class GENERAL_REGS to r177
  166: {r177:SI=r177:SI>>0x5;clobber flags:CC;}
      REG_DEAD r156:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  242: r177:SI=r156:SI
    Inserting insn reload after:
  243: r158:SI=r177:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 168:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=178 from oldreg=158, assigning class GENERAL_REGS to r178
  168: {r178:SI=r178:SI-r159:SI;clobber flags:CC;}
      REG_DEAD r159:SI
      REG_DEAD r158:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  244: r178:SI=r158:SI
    Inserting insn reload after:
  245: r102:SI=r178:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 171
	 Choosing alt 0 in insn 171:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 176:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 178:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 188:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=179 from oldreg=174, assigning class AREG to r179
  188: {r166:SI=trunc(sign_extend(r179:SI)*sign_extend(r167:SI) 0>>0x20);clobber r179:SI;clobber flags:CC;}
      REG_DEAD r167:SI
      REG_UNUSED r174:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  246: r179:SI=r109:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 189:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=180 from oldreg=166, assigning class GENERAL_REGS to r180
  189: {r180:SI=r180:SI>>0x5;clobber flags:CC;}
      REG_DEAD r166:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  247: r180:SI=r166:SI
    Inserting insn reload after:
  248: r168:SI=r180:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 191:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=181 from oldreg=168, assigning class GENERAL_REGS to r181
  191: {r181:SI=r181:SI-r169:SI;clobber flags:CC;}
      REG_DEAD r169:SI
      REG_DEAD r168:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  249: r181:SI=r168:SI
    Inserting insn reload after:
  250: r110:SI=r181:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 194
	 Choosing alt 0 in insn 194:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 197:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6 7 8 9
EBB 10 11
EBB 12
EBB 13
EBB 14 15
EBB 16 23
EBB 24
EBB 25
EBB 17 18
EBB 19 20
EBB 21
EBB 22

********** Pseudo live ranges #1: **********

  BB 22
   Insn 218: point = 0, n_alt = -1
   Insn 217: point = 0, n_alt = -2
   Insn 213: point = 1, n_alt = -2
  BB 20
   Insn 226: point = 4, n_alt = -1
   Insn 203: point = 4, n_alt = 0
  BB 21
   Insn 208: point = 5, n_alt = 0
  BB 19
   Insn 201: point = 6, n_alt = -1
   Insn 200: point = 6, n_alt = 1
  BB 18
   Insn 197: point = 6, n_alt = 1
   Insn 196: point = 7, n_alt = 0
   Insn 195: point = 8, n_alt = -2
   Insn 194: point = 10, n_alt = 0
   Insn 193: point = 12, n_alt = 0
   Insn 192: point = 14, n_alt = 0
   Insn 250: point = 16, n_alt = -2
	Hard reg 1 is preferable by r181 with profit 1000
   Insn 191: point = 18, n_alt = 0
   Insn 249: point = 20, n_alt = -2
	Hard reg 1 is preferable by r181 with profit 1000
	Hard reg 0 is preferable by r181 with profit 1000
   Insn 190: point = 22, n_alt = 1
   Insn 248: point = 24, n_alt = -2
	Hard reg 0 is preferable by r180 with profit 1000
   Insn 189: point = 26, n_alt = 0
   Insn 247: point = 27, n_alt = -2
	Hard reg 0 is preferable by r180 with profit 1000
	Hard reg 1 is preferable by r180 with profit 1000
   Insn 188: point = 29, n_alt = 0
   Insn 246: point = 31, n_alt = -2
	Hard reg 2 is preferable by r179 with profit 1000
   Insn 187: point = 32, n_alt = 0
   Insn 186: point = 33, n_alt = 0
   Insn 185: point = 35, n_alt = 0
   Insn 184: point = 36, n_alt = 1
   Insn 183: point = 37, n_alt = 0
   Insn 182: point = 38, n_alt = 0
  BB 17
   Insn 180: point = 40, n_alt = -1
   Insn 179: point = 40, n_alt = 0
   Insn 178: point = 41, n_alt = 0
   Insn 177: point = 43, n_alt = 0
   Insn 176: point = 45, n_alt = 2
   Insn 175: point = 47, n_alt = 0
   Insn 174: point = 48, n_alt = 1
   Insn 173: point = 49, n_alt = 0
   Insn 172: point = 50, n_alt = -2
   Insn 171: point = 52, n_alt = 0
   Insn 170: point = 54, n_alt = 0
   Insn 169: point = 56, n_alt = 0
   Insn 245: point = 57, n_alt = -2
	Hard reg 1 is preferable by r178 with profit 1000
   Insn 168: point = 59, n_alt = 0
   Insn 244: point = 61, n_alt = -2
	Hard reg 1 is preferable by r178 with profit 1000
	Hard reg 0 is preferable by r178 with profit 1000
   Insn 167: point = 63, n_alt = 1
   Insn 243: point = 65, n_alt = -2
	Hard reg 0 is preferable by r177 with profit 1000
   Insn 166: point = 67, n_alt = 0
   Insn 242: point = 68, n_alt = -2
	Hard reg 0 is preferable by r177 with profit 1000
	Hard reg 1 is preferable by r177 with profit 1000
   Insn 165: point = 70, n_alt = 0
   Insn 241: point = 72, n_alt = -2
	Hard reg 2 is preferable by r176 with profit 1000
   Insn 164: point = 73, n_alt = 0
   Insn 163: point = 74, n_alt = 0
   Insn 162: point = 76, n_alt = 0
  BB 24
   Insn 234: point = 78, n_alt = -1
   Insn 233: point = 78, n_alt = -1
  BB 25
   Insn 238: point = 79, n_alt = -1
  BB 23
   Insn 229: point = 80, n_alt = -1
  BB 16
   Insn 159: point = 81, n_alt = -1
   Insn 158: point = 81, n_alt = 1
   Insn 157: point = 82, n_alt = 0
  BB 5
   Insn 222: point = 84, n_alt = -1
  BB 3
   Insn 220: point = 85, n_alt = -1
   Insn 15: point = 85, n_alt = 1
   Insn 14: point = 86, n_alt = 0
   Insn 13: point = 88, n_alt = 0
  BB 4
   Insn 22: point = 90, n_alt = 1
   Insn 21: point = 91, n_alt = 0
   Insn 20: point = 93, n_alt = 0
  BB 2
   Insn 11: point = 95, n_alt = -1
   Insn 10: point = 95, n_alt = 0
   Insn 9: point = 96, n_alt = 0
   Insn 8: point = 98, n_alt = 0
   Insn 7: point = 100, n_alt = 2
   Insn 6: point = 102, n_alt = 0
   Insn 5: point = 103, n_alt = 1
   Insn 239: point = 103, n_alt = 0
  BB 15
   Insn 153: point = 104, n_alt = 0
   Insn 152: point = 104, n_alt = 0
   Insn 151: point = 104, n_alt = -2
   Insn 150: point = 104, n_alt = 0
   Insn 149: point = 104, n_alt = 0
  BB 14
   Insn 147: point = 105, n_alt = -1
   Insn 146: point = 105, n_alt = 0
   Insn 142: point = 106, n_alt = 1
   Insn 141: point = 107, n_alt = 3
   Insn 140: point = 108, n_alt = 0
  BB 12
   Insn 224: point = 110, n_alt = -1
   Insn 121: point = 110, n_alt = 0
   Insn 120: point = 111, n_alt = 0
  BB 11
   Insn 117: point = 113, n_alt = 8
   Insn 116: point = 114, n_alt = 0
   Insn 115: point = 115, n_alt = 1
   Insn 114: point = 116, n_alt = 0
   Insn 113: point = 117, n_alt = 0
  BB 10
   Insn 111: point = 119, n_alt = -1
   Insn 110: point = 119, n_alt = 0
   Insn 109: point = 120, n_alt = 0
   Insn 108: point = 121, n_alt = 0
   Insn 107: point = 123, n_alt = 0
   Insn 106: point = 124, n_alt = 0
   Insn 105: point = 125, n_alt = 0
  BB 9
   Insn 102: point = 127, n_alt = 1
   Insn 101: point = 128, n_alt = 1
   Insn 100: point = 130, n_alt = 0
  BB 8
   Insn 95: point = 132, n_alt = -1
   Insn 94: point = 132, n_alt = 0
   Insn 93: point = 133, n_alt = 1
   Insn 92: point = 135, n_alt = 0
   Insn 91: point = 136, n_alt = 1
   Insn 90: point = 137, n_alt = 1
   Insn 89: point = 139, n_alt = 0
   Insn 85: point = 140, n_alt = 8
   Insn 84: point = 141, n_alt = 0
   Insn 83: point = 142, n_alt = 1
   Insn 82: point = 143, n_alt = 0
   Insn 81: point = 145, n_alt = 0
   Insn 80: point = 146, n_alt = 0
   Insn 79: point = 148, n_alt = 0
   Insn 78: point = 149, n_alt = 1
   Insn 77: point = 150, n_alt = 0
   Insn 76: point = 152, n_alt = 0
   Insn 75: point = 154, n_alt = 0
   Insn 74: point = 156, n_alt = 0
   Insn 73: point = 158, n_alt = 0
   Insn 70: point = 159, n_alt = 0
  BB 7
   Insn 64: point = 161, n_alt = -1
   Insn 63: point = 161, n_alt = 1
   Insn 62: point = 161, n_alt = 1
   Insn 61: point = 162, n_alt = -2
   Insn 60: point = 163, n_alt = 0
   Insn 59: point = 163, n_alt = 0
   Insn 58: point = 163, n_alt = -2
   Insn 57: point = 163, n_alt = 0
   Insn 56: point = 164, n_alt = 0
   Insn 55: point = 164, n_alt = 0
   Insn 54: point = 164, n_alt = 0
   Insn 53: point = 166, n_alt = 2
   Insn 52: point = 168, n_alt = 0
  BB 6
   Insn 46: point = 170, n_alt = -1
   Insn 45: point = 170, n_alt = 1
   Insn 44: point = 170, n_alt = 1
   Insn 43: point = 171, n_alt = -2
   Insn 42: point = 172, n_alt = 0
   Insn 41: point = 172, n_alt = 0
   Insn 40: point = 172, n_alt = -2
   Insn 39: point = 172, n_alt = 0
   Insn 38: point = 172, n_alt = 0
   Insn 37: point = 173, n_alt = 0
   Insn 36: point = 173, n_alt = -2
   Insn 35: point = 175, n_alt = 0
   Insn 34: point = 177, n_alt = 0
   Insn 33: point = 179, n_alt = 0
   Insn 30: point = 179, n_alt = 3
   Insn 29: point = 180, n_alt = -2
   Insn 28: point = 182, n_alt = 0
  BB 13
   Insn 137: point = 184, n_alt = 8
   Insn 136: point = 185, n_alt = -2
   Insn 135: point = 187, n_alt = 1
   Insn 134: point = 188, n_alt = 3
   Insn 133: point = 189, n_alt = 0
   Insn 132: point = 190, n_alt = -2
   Insn 131: point = 191, n_alt = 0
   Insn 130: point = 191, n_alt = 0
   Insn 129: point = 191, n_alt = 0
   Insn 128: point = 192, n_alt = 0
   Insn 127: point = 192, n_alt = 1
   Insn 126: point = 193, n_alt = 3
   Insn 125: point = 194, n_alt = 0
 r82: [15..195]
 r83: [99..100]
 r84: [97..98]
 r85: [95..96]
 r86: [85..86]
 r87: [172..173]
 r88: [165..166]
 r89: [163..164]
 r90: [144..146]
 r91: [144..145]
 r92: [132..133]
 r93: [119..121]
 r94: [119..120]
 r95: [115..117]
 r96: [191..194]
 r97: [186..190]
 r98: [184..189]
 r99: [184..185]
 r100: [105..108]
 r101: [64..74]
 r102: [53..57]
 r103: [53..54]
 r104: [51..52]
 r105: [48..50]
 r106: [44..45]
 r107: [42..43]
 r108: [40..41]
 r109: [23..33]
 r110: [11..16]
 r111: [11..12]
 r112: [9..10]
 r113: [6..8]
 r114: [2..5]
 r115: [0..1]
 r116: [101..102]
 r117: [87..88]
 r118: [92..93]
 r119: [90..91]
 r120: [181..182]
 r121: [176..180]
 r122: [178..179]
 r123: [174..175]
 r124: [170..171]
 r125: [167..168]
 r126: [161..162]
 r128: [155..159]
 r129: [157..158]
 r130: [151..156]
 r131: [153..154]
 r132: [151..152]
 r133: [149..150]
 r134: [147..148]
 r135: [142..143]
 r136: [140..141]
 r139: [136..137]
 r140: [138..139]
 r141: [134..135]
 r144: [127..128]
 r145: [129..130]
 r146: [124..125]
 r147: [122..123]
 r148: [115..116]
 r149: [113..114]
 r150: [110..111]
 r151: [192..193]
 r152: [187..188]
 r153: [106..107]
 r154: [81..82]
 r155: [75..76]
 r156: [69..70]
 r157: [71..73]
 r158: [62..65]
 r159: [60..63]
 r160: [55..56]
 r161: [48..49]
 r162: [46..47]
 r163: [36..38]
 r164: [36..37]
 r165: [34..35]
 r166: [28..29]
 r167: [30..32]
 r168: [21..24]
 r169: [19..22]
 r170: [13..14]
 r171: [6..7]
 r176: [70..72]
 r177: [66..68]
 r178: [58..61]
 r179: [29..31]
 r180: [25..27]
 r181: [17..20]
Compressing live ranges: from 196 to 146 - 74%
Ranges after the compression:
 r82: [12..145]
 r83: [74..75]
 r84: [72..73]
 r85: [70..71]
 r86: [62..63]
 r87: [132..133]
 r88: [126..127]
 r89: [124..125]
 r90: [108..109]
 r91: [108..109]
 r92: [96..97]
 r93: [86..87]
 r94: [86..87]
 r95: [84..85]
 r96: [144..145]
 r97: [142..143]
 r98: [140..143]
 r99: [140..141]
 r100: [78..79]
 r101: [50..57]
 r102: [42..45]
 r103: [42..43]
 r104: [40..41]
 r105: [38..39]
 r106: [34..35]
 r107: [32..33]
 r108: [30..31]
 r109: [18..25]
 r110: [8..13]
 r111: [8..9]
 r112: [6..7]
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
 r116: [76..77]
 r117: [64..65]
 r118: [68..69]
 r119: [66..67]
 r120: [138..139]
 r121: [136..137]
 r122: [136..137]
 r123: [134..135]
 r124: [130..131]
 r125: [128..129]
 r126: [122..123]
 r128: [118..121]
 r129: [120..121]
 r130: [114..119]
 r131: [116..117]
 r132: [114..115]
 r133: [112..113]
 r134: [110..111]
 r135: [106..107]
 r136: [104..105]
 r139: [100..101]
 r140: [102..103]
 r141: [98..99]
 r144: [92..93]
 r145: [94..95]
 r146: [90..91]
 r147: [88..89]
 r148: [84..85]
 r149: [82..83]
 r150: [80..81]
 r151: [144..145]
 r152: [142..143]
 r153: [78..79]
 r154: [60..61]
 r155: [58..59]
 r156: [54..55]
 r157: [56..57]
 r158: [48..51]
 r159: [46..49]
 r160: [44..45]
 r161: [38..39]
 r162: [36..37]
 r163: [28..29]
 r164: [28..29]
 r165: [26..27]
 r166: [22..23]
 r167: [24..25]
 r168: [16..19]
 r169: [14..17]
 r170: [10..11]
 r171: [4..5]
 r176: [55..57]
 r177: [52..53]
 r178: [46..47]
 r179: [23..25]
 r180: [20..21]
 r181: [14..15]

********** Assignment #1: **********

	 Assigning to 176 (cl=AREG, orig=173, freq=2000, tfirst=176, tfreq=2000)...
	   Assign 0 to reload r176 (freq=2000)
	 Assigning to 179 (cl=AREG, orig=174, freq=2000, tfirst=179, tfreq=2000)...
	   Assign 0 to reload r179 (freq=2000)
	 Assigning to 177 (cl=GENERAL_REGS, orig=156, freq=3000, tfirst=177, tfreq=3000)...
	   Assign 0 to reload r177 (freq=3000)
	 Assigning to 178 (cl=GENERAL_REGS, orig=158, freq=3000, tfirst=178, tfreq=3000)...
	   Assign 0 to reload r178 (freq=3000)
	 Assigning to 180 (cl=GENERAL_REGS, orig=166, freq=3000, tfirst=180, tfreq=3000)...
	   Assign 0 to reload r180 (freq=3000)
	 Assigning to 181 (cl=GENERAL_REGS, orig=168, freq=3000, tfirst=181, tfreq=3000)...
	   Assign 0 to reload r181 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 239
changing reg in insn 192
changing reg in insn 185
changing reg in insn 169
changing reg in insn 162
changing reg in insn 151
changing reg in insn 58
changing reg in insn 40
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 36
changing reg in insn 38
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 57
changing reg in insn 80
changing reg in insn 81
changing reg in insn 93
changing reg in insn 94
changing reg in insn 108
changing reg in insn 110
changing reg in insn 109
changing reg in insn 110
changing reg in insn 113
changing reg in insn 115
changing reg in insn 125
changing reg in insn 129
changing reg in insn 126
changing reg in insn 132
changing reg in insn 136
changing reg in insn 133
changing reg in insn 137
changing reg in insn 134
changing reg in insn 136
changing reg in insn 137
changing reg in insn 140
changing reg in insn 146
changing reg in insn 141
changing reg in insn 163
changing reg in insn 167
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 174
changing reg in insn 176
changing reg in insn 177
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 179
changing reg in insn 186
changing reg in insn 190
changing reg in insn 193
changing reg in insn 194
changing reg in insn 195
changing reg in insn 195
changing reg in insn 197
changing reg in insn 208
changing reg in insn 203
changing reg in insn 213
changing reg in insn 213
changing reg in insn 217
changing reg in insn 6
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 29
changing reg in insn 35
changing reg in insn 34
changing reg in insn 33
changing reg in insn 30
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 43
changing reg in insn 44
changing reg in insn 52
changing reg in insn 53
changing reg in insn 61
changing reg in insn 62
changing reg in insn 70
changing reg in insn 75
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 77
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 90
changing reg in insn 91
changing reg in insn 89
changing reg in insn 90
changing reg in insn 92
changing reg in insn 93
changing reg in insn 101
changing reg in insn 102
changing reg in insn 100
changing reg in insn 101
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 120
changing reg in insn 121
changing reg in insn 126
changing reg in insn 127
changing reg in insn 134
changing reg in insn 135
changing reg in insn 141
changing reg in insn 142
changing reg in insn 157
changing reg in insn 158
changing reg in insn 162
changing reg in insn 163
changing reg in insn 165
changing reg in insn 164
changing reg in insn 165
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 170
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 176
changing reg in insn 182
changing reg in insn 184
changing reg in insn 183
changing reg in insn 184
changing reg in insn 185
changing reg in insn 186
changing reg in insn 188
changing reg in insn 187
changing reg in insn 188
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 193
changing reg in insn 196
changing reg in insn 197
deleting insn with uid = 29.
deleting insn with uid = 36.
deleting insn with uid = 40.
deleting insn with uid = 43.
deleting insn with uid = 58.
deleting insn with uid = 61.
deleting insn with uid = 151.
deleting insn with uid = 243.
deleting insn with uid = 244.
deleting insn with uid = 248.
deleting insn with uid = 249.
deleting insn with uid = 213.
deleting insn with uid = 217.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 130.
verify found no changes in insn with uid = 152.


file_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={70d,72u} r1={24d,20u} r2={10d,7u} r3={1d,7u} r7={15d,106u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={2e} r17={51d,10u} r18={4d} r19={2e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 657{431d,222u,4e} in 155{151 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 239 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 239 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 239 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [10 i+0 S4 A32])
        (const_int 0 [0])) "fs/file_dev.c":56:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":62:13 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 2 [0x2])) [2 filp_48(D)->f_flags+0 S2 A16])) "fs/file_dev.c":62:13 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/file_dev.c":62:23 144 {*zero_extendhisi2}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (and:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":62:23 490 {*andsi_1}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 0 [0]))) "fs/file_dev.c":62:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/file_dev.c":62:8 806 {*jcc}
     (nil)
 -> 18)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":63:20 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 0 ax [orig:86 _4 ] [86])
        (mem:SI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 4 [0x4])) [4 inode_50(D)->i_size+0 S4 A32])) "fs/file_dev.c":63:20 75 {*movsi_internal}
     (nil))
(insn 15 14 220 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [4 pos+0 S4 A32])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "fs/file_dev.c":63:13 75 {*movsi_internal}
     (nil))
(jump_insn 220 15 221 3 (set (pc)
        (label_ref 23)) 807 {jump}
     (nil)
 -> 23)
(barrier 221 220 18)
(code_label 18 221 19 4 20 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":65:13 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 0 ax [119])
        (mem:SI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 12 [0xc])) [4 filp_48(D)->f_pos+0 S4 A32])) "fs/file_dev.c":65:13 75 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [4 pos+0 S4 A32])
        (reg:SI 0 ax [119])) "fs/file_dev.c":65:13 75 {*movsi_internal}
     (nil))
(code_label 23 22 24 5 21 (nil) [1 uses])
(note 24 23 222 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 222 24 223 5 (set (pc)
        (label_ref 154)) "fs/file_dev.c":66:11 807 {jump}
     (nil)
 -> 154)
(barrier 223 222 156)
(code_label 156 223 27 6 30 (nil) [1 uses])
(note 27 156 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 30 6 (set (reg:SI 0 ax [120])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [4 pos+0 S4 A32])) "fs/file_dev.c":67:47 75 {*movsi_internal}
     (nil))
(insn 30 28 33 6 (parallel [
            (set (reg:SI 1 dx [122])
                (plus:SI (reg:SI 0 ax [121])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":67:47 209 {*addsi_1}
     (nil))
(insn 33 30 34 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [121])
            (const_int 0 [0]))) "fs/file_dev.c":67:47 7 {*cmpsi_ccno_1}
     (nil))
(insn 34 33 35 6 (set (reg:SI 0 ax [121])
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [122])
            (reg:SI 0 ax [121]))) "fs/file_dev.c":67:47 1100 {*movsicc_noc}
     (nil))
(insn 35 34 37 6 (parallel [
            (set (reg:SI 0 ax [123])
                (ashiftrt:SI (reg:SI 0 ax [121])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":67:47 702 {*ashrsi3_1}
     (nil))
(insn 37 35 38 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":67:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 38 37 39 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg:SI 0 ax [orig:87 _5 ] [87])) "fs/file_dev.c":67:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 39 38 41 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [3 inode+0 S4 A32])) "fs/file_dev.c":67:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 39 42 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("create_block") [flags 0x41]  <function_decl 0x726d6e70ee00 create_block>) [0 create_block S1 A8])
            (const_int 16 [0x10]))) "fs/file_dev.c":67:23 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 42 41 44 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":67:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 42 45 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 block+0 S4 A32])
        (reg:SI 0 ax [124])) "fs/file_dev.c":67:23 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [10 block+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":67:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 46 45 51 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 232)
            (pc))) "fs/file_dev.c":67:12 806 {*jcc}
     (nil)
 -> 232)
(note 51 46 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 7 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":69:31 75 {*movsi_internal}
     (nil))
(insn 53 52 54 7 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [125])
                (const_int 44 [0x2c])) [2 inode_50(D)->i_dev+0 S2 A32])) "fs/file_dev.c":69:31 76 {*movhi_internal}
     (nil))
(insn 54 53 55 7 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 0 ax [orig:88 _6 ] [88]))) "fs/file_dev.c":69:20 144 {*zero_extendhisi2}
     (nil))
(insn 55 54 56 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":69:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 56 55 57 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [10 block+0 S4 A32])) "fs/file_dev.c":69:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 57 56 59 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [10  S4 A32])
        (reg:SI 0 ax [orig:89 _7 ] [89])) "fs/file_dev.c":69:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 59 57 60 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x726d6e70e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/file_dev.c":69:20 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 60 59 62 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":69:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 62 60 63 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [8 bh+0 S4 A32])
        (reg:SI 0 ax [126])) "fs/file_dev.c":69:20 75 {*movsi_internal}
     (nil))
(insn 63 62 64 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [8 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":69:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 64 63 69 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 237)
            (pc))) "fs/file_dev.c":69:12 806 {*jcc}
     (nil)
 -> 237)
(note 69 64 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 73 8 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [4 pos+0 S4 A32])) "fs/file_dev.c":71:11 75 {*movsi_internal}
     (nil))
(insn 73 70 74 8 (parallel [
            (set (reg:SI 1 dx [129])
                (ashiftrt:SI (reg:SI 0 ax [128])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":71:11 694 {ashrsi3_cvt}
     (nil))
(insn 74 73 75 8 (parallel [
            (set (reg:SI 1 dx [130])
                (lshiftrt:SI (reg:SI 1 dx [129])
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":71:11 701 {*lshrsi3_1}
     (nil))
(insn 75 74 76 8 (parallel [
            (set (reg:SI 0 ax [131])
                (plus:SI (reg:SI 0 ax [128])
                    (reg:SI 1 dx [130])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":71:11 209 {*addsi_1}
     (nil))
(insn 76 75 77 8 (parallel [
            (set (reg:SI 0 ax [132])
                (and:SI (reg:SI 0 ax [131])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":71:11 490 {*andsi_1}
     (nil))
(insn 77 76 78 8 (parallel [
            (set (reg:SI 0 ax [133])
                (minus:SI (reg:SI 0 ax [132])
                    (reg:SI 1 dx [130])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":71:11 282 {*subsi_1}
     (nil))
(insn 78 77 79 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])
        (reg:SI 0 ax [133])) "fs/file_dev.c":71:11 75 {*movsi_internal}
     (nil))
(insn 79 78 80 8 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [8 bh+0 S4 A32])) "fs/file_dev.c":72:19 75 {*movsi_internal}
     (nil))
(insn 80 79 81 8 (set (reg/f:SI 1 dx [orig:90 _8 ] [90])
        (mem/f:SI (reg/f:SI 0 ax [134]) [6 bh_57->b_data+0 S4 A32])) "fs/file_dev.c":72:19 75 {*movsi_internal}
     (nil))
(insn 81 80 82 8 (set (reg:SI 0 ax [orig:91 c.9_9 ] [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])) "fs/file_dev.c":72:15 75 {*movsi_internal}
     (nil))
(insn 82 81 83 8 (parallel [
            (set (reg:SI 0 ax [135])
                (plus:SI (reg:SI 0 ax [orig:91 c.9_9 ] [91])
                    (reg/f:SI 1 dx [orig:90 _8 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":72:11 209 {*addsi_1}
     (nil))
(insn 83 82 84 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 p+0 S4 A32])
        (reg:SI 0 ax [135])) "fs/file_dev.c":72:11 75 {*movsi_internal}
     (nil))
(insn 84 83 85 8 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [8 bh+0 S4 A32])) "fs/file_dev.c":73:20 75 {*movsi_internal}
     (nil))
(insn 85 84 89 8 (set (mem:QI (plus:SI (reg/f:SI 0 ax [136])
                (const_int 11 [0xb])) [0 bh_57->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/file_dev.c":73:20 77 {*movqi_internal}
     (nil))
(insn 89 85 90 8 (set (reg:SI 0 ax [140])
        (const_int 1024 [0x400])) "fs/file_dev.c":74:11 75 {*movsi_internal}
     (nil))
(insn 90 89 91 8 (parallel [
            (set (reg:SI 0 ax [139])
                (minus:SI (reg:SI 0 ax [140])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 24 [0x18])) [10 c+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":74:11 282 {*subsi_1}
     (nil))
(insn 91 90 92 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])
        (reg:SI 0 ax [139])) "fs/file_dev.c":74:11 75 {*movsi_internal}
     (nil))
(insn 92 91 93 8 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [10 count+0 S4 A32])) "fs/file_dev.c":75:23 75 {*movsi_internal}
     (nil))
(insn 93 92 94 8 (parallel [
            (set (reg:SI 0 ax [orig:92 _10 ] [92])
                (minus:SI (reg:SI 0 ax [141])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 16 [0x10])) [10 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":75:23 282 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [10 count+0 S4 A32])
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [10 i+0 S4 A32]))
        (nil)))
(insn 94 93 95 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [10 c+0 S4 A32])
            (reg:SI 0 ax [orig:92 _10 ] [92]))) "fs/file_dev.c":75:12 11 {*cmpsi_1}
     (nil))
(jump_insn 95 94 96 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "fs/file_dev.c":75:12 806 {*jcc}
     (nil)
 -> 103)
(note 96 95 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 96 101 9 (set (reg:SI 0 ax [145])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [10 count+0 S4 A32])) "fs/file_dev.c":76:15 75 {*movsi_internal}
     (nil))
(insn 101 100 102 9 (parallel [
            (set (reg:SI 0 ax [144])
                (minus:SI (reg:SI 0 ax [145])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 16 [0x10])) [10 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":76:15 282 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [10 count+0 S4 A32])
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [10 i+0 S4 A32]))
        (nil)))
(insn 102 101 103 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])
        (reg:SI 0 ax [144])) "fs/file_dev.c":76:15 75 {*movsi_internal}
     (nil))
(code_label 103 102 104 10 26 (nil) [1 uses])
(note 104 103 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 10 (set (reg:SI 0 ax [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])) "fs/file_dev.c":77:13 75 {*movsi_internal}
     (nil))
(insn 106 105 107 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [4 pos+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [4 pos+0 S4 A32])
                    (reg:SI 0 ax [146])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":77:13 209 {*addsi_1}
     (nil))
(insn 107 106 108 10 (set (reg/f:SI 0 ax [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":78:24 75 {*movsi_internal}
     (nil))
(insn 108 107 109 10 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (mem:SI (plus:SI (reg/f:SI 0 ax [147])
                (const_int 4 [0x4])) [4 inode_50(D)->i_size+0 S4 A32])) "fs/file_dev.c":78:24 75 {*movsi_internal}
     (nil))
(insn 109 108 110 10 (set (reg:SI 0 ax [orig:94 pos.10_12 ] [94])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [4 pos+0 S4 A32])) "fs/file_dev.c":78:17 75 {*movsi_internal}
     (nil))
(insn 110 109 111 10 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:93 _11 ] [93])
            (reg:SI 0 ax [orig:94 pos.10_12 ] [94]))) "fs/file_dev.c":78:12 11 {*cmpsi_1}
     (nil))
(jump_insn 111 110 112 10 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "fs/file_dev.c":78:12 806 {*jcc}
     (nil)
 -> 118)
(note 112 111 113 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 11 (set (reg:SI 1 dx [orig:95 pos.11_13 ] [95])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [4 pos+0 S4 A32])) "fs/file_dev.c":79:27 75 {*movsi_internal}
     (nil))
(insn 114 113 115 11 (set (reg/f:SI 0 ax [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":79:27 75 {*movsi_internal}
     (nil))
(insn 115 114 116 11 (set (mem:SI (plus:SI (reg/f:SI 0 ax [148])
                (const_int 4 [0x4])) [4 inode_50(D)->i_size+0 S4 A32])
        (reg:SI 1 dx [orig:95 pos.11_13 ] [95])) "fs/file_dev.c":79:27 75 {*movsi_internal}
     (nil))
(insn 116 115 117 11 (set (reg/f:SI 0 ax [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":80:27 75 {*movsi_internal}
     (nil))
(insn 117 116 118 11 (set (mem:QI (plus:SI (reg/f:SI 0 ax [149])
                (const_int 51 [0x33])) [0 inode_50(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/file_dev.c":80:27 77 {*movqi_internal}
     (nil))
(code_label 118 117 119 12 27 (nil) [1 uses])
(note 119 118 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 12 (set (reg:SI 0 ax [150])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])) "fs/file_dev.c":82:11 75 {*movsi_internal}
     (nil))
(insn 121 120 224 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 16 [0x10])) [10 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 16 [0x10])) [10 i+0 S4 A32])
                    (reg:SI 0 ax [150])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":82:11 209 {*addsi_1}
     (nil))
(jump_insn 224 121 225 12 (set (pc)
        (label_ref 138)) "fs/file_dev.c":83:15 807 {jump}
     (nil)
 -> 138)
(barrier 225 224 143)
(code_label 143 225 124 13 29 (nil) [1 uses])
(note 124 143 125 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 13 (set (reg/f:SI 0 ax [orig:96 buf.12_14 ] [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 buf+0 S4 A32])) "fs/file_dev.c":84:22 75 {*movsi_internal}
     (nil))
(insn 126 125 127 13 (parallel [
            (set (reg:SI 1 dx [151])
                (plus:SI (reg/f:SI 0 ax [orig:96 buf.12_14 ] [96])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":84:22 209 {*addsi_1}
     (nil))
(insn 127 126 128 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [6 buf+0 S4 A32])
        (reg:SI 1 dx [151])) "fs/file_dev.c":84:22 75 {*movsi_internal}
     (nil))
(insn 128 127 129 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":84:22 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 129 128 130 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg/f:SI 0 ax [orig:96 buf.12_14 ] [96])) "fs/file_dev.c":84:22 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 130 129 131 13 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x726d6e738d00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/file_dev.c":84:22 823 {*call_value}
     (nil)
    (nil))
(insn 131 130 132 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":84:22 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 132 131 133 13 (set (reg:QI 2 cx [orig:97 _15 ] [97])
        (reg:QI 0 ax)) "fs/file_dev.c":84:22 77 {*movqi_internal}
     (nil))
(insn 133 132 134 13 (set (reg/f:SI 0 ax [orig:98 p.13_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 p+0 S4 A32])) "fs/file_dev.c":84:16 75 {*movsi_internal}
     (nil))
(insn 134 133 135 13 (parallel [
            (set (reg:SI 1 dx [152])
                (plus:SI (reg/f:SI 0 ax [orig:98 p.13_16 ] [98])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":84:16 209 {*addsi_1}
     (nil))
(insn 135 134 136 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 p+0 S4 A32])
        (reg:SI 1 dx [152])) "fs/file_dev.c":84:16 75 {*movsi_internal}
     (nil))
(insn 136 135 137 13 (set (reg:QI 1 dx [orig:99 _17 ] [99])
        (reg:QI 2 cx [orig:97 _15 ] [97])) "fs/file_dev.c":84:22 77 {*movqi_internal}
     (nil))
(insn 137 136 138 13 (set (mem:QI (reg/f:SI 0 ax [orig:98 p.13_16 ] [98]) [0 *p.13_16+0 S1 A8])
        (reg:QI 1 dx [orig:99 _17 ] [99])) "fs/file_dev.c":84:20 77 {*movqi_internal}
     (nil))
(code_label 138 137 139 14 28 (nil) [1 uses])
(note 139 138 140 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 14 (set (reg:SI 0 ax [orig:100 c.14_18 ] [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])) "fs/file_dev.c":83:17 75 {*movsi_internal}
     (nil))
(insn 141 140 142 14 (parallel [
            (set (reg:SI 1 dx [153])
                (plus:SI (reg:SI 0 ax [orig:100 c.14_18 ] [100])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":83:17 209 {*addsi_1}
     (nil))
(insn 142 141 146 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 c+0 S4 A32])
        (reg:SI 1 dx [153])) "fs/file_dev.c":83:17 75 {*movsi_internal}
     (nil))
(insn 146 142 147 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:100 c.14_18 ] [100])
            (const_int 0 [0]))) "fs/file_dev.c":83:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 147 146 148 14 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "fs/file_dev.c":83:20 806 {*jcc}
     (nil)
 -> 143)
(note 148 147 149 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":85:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 150 149 152 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 bh+0 S4 A32])) "fs/file_dev.c":85:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 152 150 153 15 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x726d6e70e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/file_dev.c":85:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 153 152 154 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":85:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 154 153 155 16 22 (nil) [1 uses])
(note 155 154 157 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 157 155 158 16 (set (reg:SI 0 ax [154])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [10 i+0 S4 A32])) "fs/file_dev.c":66:14 75 {*movsi_internal}
     (nil))
(insn 158 157 159 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [154])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 60 [0x3c])) [10 count+0 S4 A32]))) "fs/file_dev.c":66:14 11 {*cmpsi_1}
     (nil))
(jump_insn 159 158 228 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) "fs/file_dev.c":66:14 806 {*jcc}
     (nil)
 -> 156)
(note 228 159 229 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 229 228 230 23 (set (pc)
        (label_ref 160)) 807 {jump}
     (nil)
 -> 160)
(barrier 230 229 232)
(code_label 232 230 231 24 35 (nil) [1 uses])
(note 231 232 233 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 233 231 234 24 (const_int 0 [0]) "fs/file_dev.c":68:13 843 {nop}
     (nil))
(jump_insn 234 233 235 24 (set (pc)
        (label_ref 160)) 807 {jump}
     (nil)
 -> 160)
(barrier 235 234 237)
(code_label 237 235 236 25 36 (nil) [1 uses])
(note 236 237 238 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 238 236 160 25 (const_int 0 [0]) "fs/file_dev.c":70:13 843 {nop}
     (nil))
(code_label 160 238 161 17 24 (nil) [2 uses])
(note 161 160 162 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 17 (set (reg/f:SI 0 ax [155])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x726d6e72f360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 163 162 164 17 (set (reg:SI 2 cx [orig:101 jiffies.15_19 ] [101])
        (mem/v/c:SI (reg/f:SI 0 ax [155]) [4 jiffies+0 S4 A32])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 164 163 241 17 (set (reg:SI 1 dx [157])
        (const_int 1374389535 [0x51eb851f])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 241 164 165 17 (set (reg:SI 0 ax [173])
        (reg:SI 2 cx [orig:101 jiffies.15_19 ] [101])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 165 241 242 17 (parallel [
            (set (reg:SI 1 dx [156])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [173]))
                            (sign_extend:DI (reg:SI 1 dx [157])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [173]))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":87:22 435 {*smulsi3_highpart_1}
     (nil))
(insn 242 165 166 17 (set (reg:SI 0 ax [156])
        (reg:SI 1 dx [156])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 166 242 167 17 (parallel [
            (set (reg:SI 0 ax [156])
                (ashiftrt:SI (reg:SI 0 ax [156])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":87:22 702 {*ashrsi3_1}
     (nil))
(insn 167 166 168 17 (parallel [
            (set (reg:SI 2 cx [159])
                (ashiftrt:SI (reg:SI 2 cx [orig:101 jiffies.15_19 ] [101])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":87:22 694 {ashrsi3_cvt}
     (nil))
(insn 168 167 245 17 (parallel [
            (set (reg:SI 0 ax [158])
                (minus:SI (reg:SI 0 ax [158])
                    (reg:SI 2 cx [159])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":87:22 282 {*subsi_1}
     (nil))
(insn 245 168 169 17 (set (reg:SI 1 dx [orig:102 _20 ] [102])
        (reg:SI 0 ax [158])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 169 245 170 17 (set (reg/f:SI 0 ax [160])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x726d6e72f3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 170 169 171 17 (set (reg:SI 0 ax [orig:103 startup_time.16_21 ] [103])
        (mem/c:SI (reg/f:SI 0 ax [160]) [4 startup_time+0 S4 A32])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 171 170 172 17 (parallel [
            (set (reg:SI 0 ax [orig:104 _22 ] [104])
                (plus:SI (reg:SI 0 ax [orig:103 startup_time.16_21 ] [103])
                    (reg:SI 1 dx [orig:102 _20 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":87:22 209 {*addsi_1}
     (nil))
(insn 172 171 173 17 (set (reg:SI 1 dx [orig:105 _23 ] [105])
        (reg:SI 0 ax [orig:104 _22 ] [104])) "fs/file_dev.c":87:22 75 {*movsi_internal}
     (nil))
(insn 173 172 174 17 (set (reg/f:SI 0 ax [161])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":87:20 75 {*movsi_internal}
     (nil))
(insn 174 173 175 17 (set (mem:SI (plus:SI (reg/f:SI 0 ax [161])
                (const_int 8 [0x8])) [4 inode_50(D)->i_mtime+0 S4 A32])
        (reg:SI 1 dx [orig:105 _23 ] [105])) "fs/file_dev.c":87:20 75 {*movsi_internal}
     (nil))
(insn 175 174 176 17 (set (reg/f:SI 0 ax [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":88:15 75 {*movsi_internal}
     (nil))
(insn 176 175 177 17 (set (reg:HI 0 ax [orig:106 _24 ] [106])
        (mem:HI (plus:SI (reg/f:SI 0 ax [162])
                (const_int 2 [0x2])) [2 filp_48(D)->f_flags+0 S2 A16])) "fs/file_dev.c":88:15 76 {*movhi_internal}
     (nil))
(insn 177 176 178 17 (set (reg:SI 0 ax [orig:107 _25 ] [107])
        (zero_extend:SI (reg:HI 0 ax [orig:106 _24 ] [106]))) "fs/file_dev.c":88:25 144 {*zero_extendhisi2}
     (nil))
(insn 178 177 179 17 (parallel [
            (set (reg:SI 0 ax [orig:108 _26 ] [108])
                (and:SI (reg:SI 0 ax [orig:107 _25 ] [107])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":88:25 490 {*andsi_1}
     (nil))
(insn 179 178 180 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:108 _26 ] [108])
            (const_int 0 [0]))) "fs/file_dev.c":88:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 180 179 181 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "fs/file_dev.c":88:8 806 {*jcc}
     (nil)
 -> 198)
(note 181 180 182 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 18 (set (reg/f:SI 0 ax [163])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 filp+0 S4 A32])) "fs/file_dev.c":89:21 75 {*movsi_internal}
     (nil))
(insn 183 182 184 18 (set (reg:SI 1 dx [164])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [4 pos+0 S4 A32])) "fs/file_dev.c":89:21 75 {*movsi_internal}
     (nil))
(insn 184 183 185 18 (set (mem:SI (plus:SI (reg/f:SI 0 ax [163])
                (const_int 12 [0xc])) [4 filp_48(D)->f_pos+0 S4 A32])
        (reg:SI 1 dx [164])) "fs/file_dev.c":89:21 75 {*movsi_internal}
     (nil))
(insn 185 184 186 18 (set (reg/f:SI 0 ax [165])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x726d6e72f360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 186 185 187 18 (set (reg:SI 2 cx [orig:109 jiffies.17_27 ] [109])
        (mem/v/c:SI (reg/f:SI 0 ax [165]) [4 jiffies+0 S4 A32])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 187 186 246 18 (set (reg:SI 1 dx [167])
        (const_int 1374389535 [0x51eb851f])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 246 187 188 18 (set (reg:SI 0 ax [174])
        (reg:SI 2 cx [orig:109 jiffies.17_27 ] [109])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 188 246 247 18 (parallel [
            (set (reg:SI 1 dx [166])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [174]))
                            (sign_extend:DI (reg:SI 1 dx [167])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [174]))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":90:26 435 {*smulsi3_highpart_1}
     (nil))
(insn 247 188 189 18 (set (reg:SI 0 ax [166])
        (reg:SI 1 dx [166])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 189 247 190 18 (parallel [
            (set (reg:SI 0 ax [166])
                (ashiftrt:SI (reg:SI 0 ax [166])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":90:26 702 {*ashrsi3_1}
     (nil))
(insn 190 189 191 18 (parallel [
            (set (reg:SI 2 cx [169])
                (ashiftrt:SI (reg:SI 2 cx [orig:109 jiffies.17_27 ] [109])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":90:26 694 {ashrsi3_cvt}
     (nil))
(insn 191 190 250 18 (parallel [
            (set (reg:SI 0 ax [168])
                (minus:SI (reg:SI 0 ax [168])
                    (reg:SI 2 cx [169])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":90:26 282 {*subsi_1}
     (nil))
(insn 250 191 192 18 (set (reg:SI 1 dx [orig:110 _28 ] [110])
        (reg:SI 0 ax [168])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 192 250 193 18 (set (reg/f:SI 0 ax [170])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x726d6e72f3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 193 192 194 18 (set (reg:SI 0 ax [orig:111 startup_time.18_29 ] [111])
        (mem/c:SI (reg/f:SI 0 ax [170]) [4 startup_time+0 S4 A32])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 194 193 195 18 (parallel [
            (set (reg:SI 0 ax [orig:112 _30 ] [112])
                (plus:SI (reg:SI 0 ax [orig:111 startup_time.18_29 ] [111])
                    (reg:SI 1 dx [orig:110 _28 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) "fs/file_dev.c":90:26 209 {*addsi_1}
     (nil))
(insn 195 194 196 18 (set (reg:SI 1 dx [orig:113 _31 ] [113])
        (reg:SI 0 ax [orig:112 _30 ] [112])) "fs/file_dev.c":90:26 75 {*movsi_internal}
     (nil))
(insn 196 195 197 18 (set (reg/f:SI 0 ax [171])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [3 inode+0 S4 A32])) "fs/file_dev.c":90:24 75 {*movsi_internal}
     (nil))
(insn 197 196 198 18 (set (mem:SI (plus:SI (reg/f:SI 0 ax [171])
                (const_int 40 [0x28])) [4 inode_50(D)->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:113 _31 ] [113])) "fs/file_dev.c":90:24 75 {*movsi_internal}
     (nil))
(code_label 198 197 199 19 31 (nil) [1 uses])
(note 199 198 200 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [10 i+0 S4 A32])
            (const_int 0 [0]))) "fs/file_dev.c":92:19 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 201 200 202 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/file_dev.c":92:19 806 {*jcc}
     (nil)
 -> 206)
(note 202 201 203 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 226 20 (set (reg:SI 0 ax [orig:114 iftmp.19_40 ] [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [10 i+0 S4 A32])) "fs/file_dev.c":92:19 75 {*movsi_internal}
     (nil))
(jump_insn 226 203 227 20 (set (pc)
        (label_ref 211)) "fs/file_dev.c":92:19 807 {jump}
     (nil)
 -> 211)
(barrier 227 226 206)
(code_label 206 227 207 21 32 (nil) [1 uses])
(note 207 206 208 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 211 21 (set (reg:SI 0 ax [orig:114 iftmp.19_40 ] [114])
        (const_int -1 [0xffffffffffffffff])) "fs/file_dev.c":92:19 75 {*movsi_internal}
     (nil))
(code_label 211 208 212 22 34 (nil) [1 uses])
(note 212 211 218 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 218 212 240 22 (use (reg/i:SI 0 ax)) "fs/file_dev.c":93:1 -1
     (nil))
(note 240 218 0 NOTE_INSN_DELETED)
