
;; Function _get_base (_get_base, funcdef_no=0, decl_uid=1278, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            0 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
      Creating newreg=94 from oldreg=91, assigning class DREG to r94
   12: {r94:SI=asm_operands;clobber flags:CC;}
      REG_DEAD r85:SI
      REG_DEAD r84:SI
      REG_DEAD r83:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
   25: r91:SI=r94:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 21: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = -2
   Insn 16: point = 1, n_alt = -2
   Insn 13: point = 3, n_alt = 0
   Insn 11: point = 4, n_alt = 1
   Insn 25: point = 5, n_alt = -2
	Hard reg 0 is preferable by r94 with profit 1000
   Insn 12: point = 7, n_alt = 0
   Insn 10: point = 8, n_alt = 0
   Insn 9: point = 10, n_alt = 0
   Insn 8: point = 11, n_alt = 0
   Insn 7: point = 13, n_alt = 0
   Insn 6: point = 14, n_alt = 0
   Insn 5: point = 16, n_alt = 0
   Insn 23: point = 17, n_alt = 0
 r82: [17..17]
 r83: [7..14]
 r84: [7..11]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [15..16]
 r89: [12..13]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r82: [15..15]
 r83: [7..12]
 r84: [7..10]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [13..14]
 r89: [11..12]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]

********** Assignment #1: **********

	 Assigning to 94 (cl=DREG, orig=91, freq=2000, tfirst=94, tfreq=2000)...
	 Trying 1: spill 84(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

      Spill r84(hr=1, freq=2000) for r94
	   Assign 1 to reload r94 (freq=2000)
  Reassigning non-reload pseudos
	   Assign 3 to r84 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*addsi_1}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 23
changing reg in insn 6
changing reg in insn 12
changing reg in insn 8
changing reg in insn 12
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
deleting insn with uid = 16.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns


_get_base

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={3d,2u} r2={3d,2u} r3={1d,1u} r7={1d,7u} r16={3e} r17={5d} 
;;    total ref usage 39{19d,17u,3e} in 12{12 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 23 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 addr+0 S4 A32])) "include/linux/sched.h":181:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:28 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 addr+0 S4 A32])) "include/linux/sched.h":181:48 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 3 bx [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 1 dx [89])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:48 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 2 cx [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 addr+0 S4 A32])) "include/linux/sched.h":181:68 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 2 cx [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 2 cx [90])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":181:68 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 12 10 25 2 (parallel [
            (set (reg:SI 1 dx [orig:91 __base ] [91])
                (asm_operands:SI ("movb %3, %%dh
	movb %2, %%dl
	shll $16, %%edx
	movw %1, %%dx") ("=&d") 0 [
                        (mem:QI (reg/f:SI 0 ax [orig:83 _1 ] [83]) [0 *_1+0 S1 A8])
                        (mem:QI (reg/f:SI 3 bx [orig:84 _2 ] [84]) [0 *_2+0 S1 A8])
                        (mem:QI (reg/f:SI 2 cx [orig:85 _3 ] [85]) [0 *_3+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                        (asm_input:QI ("m") include/linux/sched.h:177)
                    ]
                     [] include/linux/sched.h:177))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":177:5 -1
     (nil))
(insn 25 12 11 2 (set (reg:SI 0 ax [orig:91 __base ] [91])
        (reg:SI 1 dx [orig:91 __base ] [91])) "include/linux/sched.h":177:5 75 {*movsi_internal}
     (nil))
(insn 11 25 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __base+0 S4 A32])
        (reg:SI 0 ax [orig:91 __base ] [91])) "include/linux/sched.h":177:5 75 {*movsi_internal}
     (nil))
(insn 13 11 21 2 (set (reg:SI 0 ax [orig:86 _7 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __base+0 S4 A32])) "include/linux/sched.h":182:12 75 {*movsi_internal}
     (nil))
(insn 21 13 24 2 (use (reg/i:SI 0 ax)) "include/linux/sched.h":183:1 -1
     (nil))
(note 24 21 0 NOTE_INSN_DELETED)

;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1359, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = -2
   Insn 5: point = 5, n_alt = -2
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 0
   Insn 18: point = 10, n_alt = 0
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]
Compressing live ranges: from 11 to 11 - 100%
Ranges after the compression:
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 18
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r3={1d,1u} r7={1d,3u} r17={2d} 
;;    total ref usage 19{11d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 0 ax [orig:86 _v ] [86])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 0 ax [87]) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (nil))
(insn 5 7 8 2 (set (reg/v:QI 3 bx [orig:83 _v ] [83])
        (reg:QI 0 ax [orig:86 _v ] [86])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:QI 0 ax [orig:84 _4 ] [84])
        (reg/v:QI 3 bx [orig:83 _v ] [83])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1364, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =Q  (1) Q {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 1, n_alt = 0
   Insn 8: point = 2, n_alt = 4
   Insn 4: point = 3, n_alt = 8
   Insn 3: point = 4, n_alt = 0
   Insn 2: point = 6, n_alt = 0
   Insn 15: point = 7, n_alt = 0
 r82: [7..7]
 r83: [5..6]
 r84: [3..4]
 r85: [0..2]
 r86: [0..1]
Compressing live ranges: from 8 to 7 - 87%
Ranges after the compression:
 r82: [6..6]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=4)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d,1u} r2={1d} r7={1d,7u} r17={2d} 
;;    total ref usage 20{10d,10u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(insn 2 15 4 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])
        (reg:QI 0 ax [84])) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 0 ax [85])
        (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 1 dx [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 0 ax [85])
                    (mem:QI (reg/f:SI 1 dx [86]) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (nil))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 16 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))
(note 16 14 0 NOTE_INSN_DELETED)

;; Function put_fs_long (put_fs_long, funcdef_no=3, decl_uid=1368, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 11: point = 0, n_alt = -1
  BB 2
   Insn 7: point = 0, n_alt = 0
   Insn 6: point = 1, n_alt = 0
   Insn 5: point = 2, n_alt = 0
   Insn 12: point = 3, n_alt = 0
 r82: [3..3]
 r83: [0..2]
 r84: [0..1]
Compressing live ranges: from 4 to 3 - 75%
Ranges after the compression:
 r82: [2..2]
 r83: [0..1]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 5
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={2d,1u} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 val+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 addr+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("movl %0, %%fs:%1") ("") 0 [
                    (reg:SI 0 ax [83])
                    (mem:SI (reg/f:SI 1 dx [84]) [1 *addr_3(D)+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("r") include/asm/segment.h:19)
                    (asm_input:SI ("m") include/asm/segment.h:19)
                ]
                 [] include/asm/segment.h:19)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":19:5 -1
     (nil))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 13 3 (const_int 0 [0]) "include/asm/segment.h":20:1 843 {nop}
     (nil))
(note 13 11 0 NOTE_INSN_DELETED)

;; Function get_fs_long (get_fs_long, funcdef_no=4, decl_uid=1371, cgraph_uid=5, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = 0
   Insn 5: point = 4, n_alt = 1
   Insn 7: point = 5, n_alt = 0
   Insn 6: point = 7, n_alt = 0
   Insn 18: point = 8, n_alt = 0
 r82: [8..8]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
 r86: [6..7]
Compressing live ranges: from 9 to 9 - 100%
Ranges after the compression:
 r82: [8..8]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
 r86: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 19{10d,9u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [19 addr+0 S4 A32])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 0 ax [orig:85 _v ] [85])
                (asm_operands:SI ("movl %%fs:%1, %0") ("=r") 0 [
                        (mem:SI (reg/f:SI 0 ax [86]) [1 *addr_2(D)+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") include/asm/segment.h:26)
                    ]
                     [] include/asm/segment.h:26))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":26:5 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 _v+0 S4 A32])
        (reg:SI 0 ax [orig:85 _v ] [85])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:SI 0 ax [orig:83 _4 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 _v+0 S4 A32])) "include/asm/segment.h":27:12 75 {*movsi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":28:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function get_fs (get_fs, funcdef_no=5, decl_uid=1375, cgraph_uid=6, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =a
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rm {*zero_extendhisi2}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = -2
   Insn 7: point = 3, n_alt = 0
   Insn 5: point = 4, n_alt = 3
   Insn 6: point = 5, n_alt = 0
   Insn 17: point = 6, n_alt = 0
 r82: [6..6]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
Compressing live ranges: from 7 to 7 - 100%
Ranges after the compression:
 r82: [6..6]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 7
changing reg in insn 10
changing reg in insn 10
changing reg in insn 14
changing reg in insn 6
changing reg in insn 5
deleting insn with uid = 10.
deleting insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={1d} r2={1d} r7={1d,4u} r17={2d} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 17 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 5 2 (parallel [
            (set (reg:HI 0 ax [orig:85 _v ] [85])
                (asm_operands:HI ("mov %%fs, %%ax") ("=a") 0 []
                     []
                     [] include/asm/segment.h:41))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":41:5 -1
     (nil))
(insn 5 6 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 14 [0xe])) [4 _v+0 S2 A16])
        (reg:HI 0 ax [orig:85 _v ] [85])) "include/asm/segment.h":41:5 76 {*movhi_internal}
     (nil))
(insn 7 5 15 2 (set (reg:SI 0 ax [orig:83 _2 ] [83])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                    (const_int 14 [0xe])) [4 _v+0 S2 A16]))) "include/asm/segment.h":42:12 144 {*zero_extendhisi2}
     (nil))
(insn 15 7 18 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":43:1 -1
     (nil))
(note 18 15 0 NOTE_INSN_DELETED)

;; Function get_ds (get_ds, funcdef_no=6, decl_uid=1379, cgraph_uid=7, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =a
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rm {*zero_extendhisi2}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = -2
   Insn 7: point = 3, n_alt = 0
   Insn 5: point = 4, n_alt = 3
   Insn 6: point = 5, n_alt = 0
   Insn 17: point = 6, n_alt = 0
 r82: [6..6]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
Compressing live ranges: from 7 to 7 - 100%
Ranges after the compression:
 r82: [6..6]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 7
changing reg in insn 10
changing reg in insn 10
changing reg in insn 14
changing reg in insn 6
changing reg in insn 5
deleting insn with uid = 10.
deleting insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns


get_ds

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={1d} r2={1d} r7={1d,4u} r17={2d} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 17 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 5 2 (parallel [
            (set (reg:HI 0 ax [orig:85 _v ] [85])
                (asm_operands:HI ("mov %%ds, %%ax") ("=a") 0 []
                     []
                     [] include/asm/segment.h:49))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":49:5 -1
     (nil))
(insn 5 6 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 14 [0xe])) [4 _v+0 S2 A16])
        (reg:HI 0 ax [orig:85 _v ] [85])) "include/asm/segment.h":49:5 76 {*movhi_internal}
     (nil))
(insn 7 5 15 2 (set (reg:SI 0 ax [orig:83 _2 ] [83])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                    (const_int 14 [0xe])) [4 _v+0 S2 A16]))) "include/asm/segment.h":50:12 144 {*zero_extendhisi2}
     (nil))
(insn 15 7 18 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":51:1 -1
     (nil))
(note 18 15 0 NOTE_INSN_DELETED)

;; Function set_fs (set_fs, funcdef_no=7, decl_uid=1383, cgraph_uid=8, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) a
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 11: point = 0, n_alt = -1
  BB 2
   Insn 7: point = 0, n_alt = 0
   Insn 6: point = 1, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 12: point = 4, n_alt = 0
 r82: [4..4]
 r83: [0..1]
 r84: [2..3]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [0..1]
 r84: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 6
changing reg in insn 7
changing reg in insn 5
deleting insn with uid = 6.
starting the processing of deferred insns
ending the processing of deferred insns


set_fs

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={1d} r2={1d} r7={1d,4u} r17={2d} 
;;    total ref usage 13{8d,5u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 7 2 (set (reg:SI 0 ax [84])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 val+0 S4 A32])) "include/asm/segment.h":55:34 75 {*movsi_internal}
     (nil))
(insn 7 5 10 2 (parallel [
            (asm_operands/v ("mov %0, %%fs") ("") 0 [
                    (reg:HI 0 ax [orig:83 _1 ] [83])
                ]
                 [
                    (asm_input:HI ("a") include/asm/segment.h:55)
                ]
                 [] include/asm/segment.h:55)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":55:5 -1
     (nil))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 13 3 (const_int 0 [0]) "include/asm/segment.h":56:1 843 {nop}
     (nil))
(note 13 11 0 NOTE_INSN_DELETED)

;; Function count (count, funcdef_no=8, decl_uid=1433, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 18:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 37: point = 0, n_alt = -1
   Insn 36: point = 0, n_alt = -2
   Insn 32: point = 1, n_alt = -2
   Insn 29: point = 3, n_alt = 0
  BB 5
   Insn 26: point = 4, n_alt = -1
   Insn 25: point = 4, n_alt = 0
   Insn 23: point = 5, n_alt = -2
   Insn 22: point = 6, n_alt = 0
   Insn 21: point = 6, n_alt = 0
   Insn 20: point = 6, n_alt = 0
   Insn 19: point = 7, n_alt = 1
   Insn 18: point = 8, n_alt = 3
   Insn 17: point = 9, n_alt = 0
  BB 3
   Insn 39: point = 10, n_alt = -1
  BB 4
   Insn 14: point = 10, n_alt = 0
  BB 2
   Insn 9: point = 10, n_alt = -1
   Insn 8: point = 10, n_alt = 1
   Insn 7: point = 10, n_alt = 1
   Insn 6: point = 11, n_alt = 0
   Insn 5: point = 12, n_alt = 1
   Insn 41: point = 12, n_alt = 0
 r82: [12..12]
 r83: [6..9]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [10..11]
 r88: [7..8]
Compressing live ranges: from 13 to 11 - 84%
Ranges after the compression:
 r82: [10..10]
 r83: [6..7]
 r84: [4..5]
 r85: [2..3]
 r86: [0..1]
 r87: [8..9]
 r88: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 41
changing reg in insn 17
changing reg in insn 20
changing reg in insn 18
changing reg in insn 23
changing reg in insn 25
changing reg in insn 29
changing reg in insn 32
changing reg in insn 32
changing reg in insn 36
changing reg in insn 6
changing reg in insn 7
changing reg in insn 18
changing reg in insn 19
deleting insn with uid = 23.
deleting insn with uid = 32.
deleting insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.


count

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,6u} r1={3d,1u} r2={2d} r7={3d,19u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={7d,2u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 114{86d,28u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 41 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 41 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 41 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":32:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [20 argv+0 S4 A32])) "fs/exec.c":35:14 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [20 tmp+0 S4 A32])
        (reg/f:SI 0 ax [87])) "fs/exec.c":35:14 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [20 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":35:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/exec.c":35:8 806 {*jcc}
     (nil)
 -> 27)
(note 10 9 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 39 10 40 3 (set (pc)
        (label_ref 15)) "fs/exec.c":36:15 807 {jump}
     (nil)
 -> 15)
(barrier 40 39 24)
(code_label 24 40 13 4 17 (nil) [1 uses])
(note 13 24 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":37:14 209 {*addsi_1}
     (nil))
(code_label 15 14 16 5 16 (nil) [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:SI 0 ax [orig:83 tmp.0_1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [20 tmp+0 S4 A32])) "fs/exec.c":36:16 75 {*movsi_internal}
     (nil))
(insn 18 17 19 5 (parallel [
            (set (reg:SI 1 dx [88])
                (plus:SI (reg/f:SI 0 ax [orig:83 tmp.0_1 ] [83])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":36:16 209 {*addsi_1}
     (nil))
(insn 19 18 20 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [20 tmp+0 S4 A32])
        (reg:SI 1 dx [88])) "fs/exec.c":36:16 75 {*movsi_internal}
     (nil))
(insn 20 19 21 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 0 ax [orig:83 tmp.0_1 ] [83])) "fs/exec.c":36:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 21 20 22 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e600 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":36:16 823 {*call_value}
     (nil)
    (nil))
(insn 22 21 25 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":36:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 25 22 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/exec.c":36:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "fs/exec.c":36:16 806 {*jcc}
     (nil)
 -> 24)
(code_label 27 26 28 6 15 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 37 6 (set (reg:SI 0 ax [orig:85 _15 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [9 i+0 S4 A32])) "fs/exec.c":38:12 75 {*movsi_internal}
     (nil))
(insn 37 29 42 6 (use (reg/i:SI 0 ax)) "fs/exec.c":39:1 -1
     (nil))
(note 42 37 0 NOTE_INSN_DELETED)

;; Function copy_strings (copy_strings, funcdef_no=9, decl_uid=1445, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) lBwBz {*call} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) lBwBz {*call} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 43
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 88:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 112
	 Choosing alt 0 in insn 112:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 122:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 126:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 140:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 143:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 146:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 153
	 Choosing alt 0 in insn 153:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 155:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 164:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 175:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 178:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8
EBB 9 10
EBB 11 12
EBB 13
EBB 14 15
EBB 16 17 18
EBB 19 20 21
EBB 22 23
EBB 24
EBB 25
EBB 26 27 28
EBB 29
EBB 30

********** Pseudo live ranges #1: **********

  BB 30
   Insn 189: point = 0, n_alt = -1
   Insn 188: point = 0, n_alt = -2
   Insn 184: point = 1, n_alt = -2
  BB 21
   Insn 197: point = 4, n_alt = -1
   Insn 132: point = 4, n_alt = 0
  BB 29
   Insn 181: point = 5, n_alt = 0
  BB 28
   Insn 178: point = 6, n_alt = 0
   Insn 177: point = 6, n_alt = 0
   Insn 176: point = 6, n_alt = 0
   Insn 175: point = 6, n_alt = 0
  BB 27
   Insn 173: point = 6, n_alt = -1
   Insn 172: point = 6, n_alt = 0
  BB 26
   Insn 170: point = 6, n_alt = -1
   Insn 169: point = 6, n_alt = 0
   Insn 165: point = 7, n_alt = 1
   Insn 164: point = 8, n_alt = 3
   Insn 163: point = 9, n_alt = 0
  BB 6
   Insn 193: point = 11, n_alt = -1
  BB 5
   Insn 26: point = 12, n_alt = 0
   Insn 25: point = 12, n_alt = 0
   Insn 24: point = 12, n_alt = 0
  BB 4
   Insn 22: point = 13, n_alt = -1
   Insn 21: point = 13, n_alt = 0
   Insn 20: point = 13, n_alt = 1
   Insn 19: point = 14, n_alt = -2
   Insn 18: point = 15, n_alt = 0
   Insn 17: point = 15, n_alt = 1
   Insn 16: point = 16, n_alt = -2
   Insn 15: point = 17, n_alt = 0
  BB 25
   Insn 160: point = 18, n_alt = -1
   Insn 159: point = 18, n_alt = 1
  BB 15
   Insn 195: point = 19, n_alt = -1
  BB 14
   Insn 82: point = 20, n_alt = -1
   Insn 81: point = 20, n_alt = 0
   Insn 79: point = 21, n_alt = -2
   Insn 78: point = 22, n_alt = 0
   Insn 77: point = 22, n_alt = 0
   Insn 76: point = 22, n_alt = 0
   Insn 75: point = 23, n_alt = 0
   Insn 74: point = 23, n_alt = 1
   Insn 73: point = 24, n_alt = 3
   Insn 72: point = 25, n_alt = 0
   Insn 71: point = 26, n_alt = 0
  BB 13
   Insn 69: point = 27, n_alt = 1
  BB 12
   Insn 66: point = 28, n_alt = 0
   Insn 65: point = 28, n_alt = 0
   Insn 64: point = 28, n_alt = 0
   Insn 63: point = 28, n_alt = 0
  BB 11
   Insn 61: point = 29, n_alt = -1
   Insn 60: point = 29, n_alt = 0
  BB 10
   Insn 57: point = 30, n_alt = 0
   Insn 56: point = 30, n_alt = 0
   Insn 55: point = 30, n_alt = -2
   Insn 54: point = 30, n_alt = 0
   Insn 53: point = 31, n_alt = 0
   Insn 52: point = 32, n_alt = 0
  BB 9
   Insn 50: point = 33, n_alt = -1
   Insn 49: point = 33, n_alt = 1
   Insn 48: point = 33, n_alt = 1
   Insn 47: point = 34, n_alt = -2
   Insn 46: point = 35, n_alt = 0
   Insn 45: point = 35, n_alt = 0
   Insn 44: point = 35, n_alt = 0
   Insn 43: point = 36, n_alt = 0
   Insn 42: point = 38, n_alt = 0
   Insn 41: point = 39, n_alt = 1
   Insn 40: point = 41, n_alt = 0
  BB 8
   Insn 37: point = 43, n_alt = 0
   Insn 36: point = 43, n_alt = 0
   Insn 35: point = 43, n_alt = 0
  BB 7
   Insn 33: point = 44, n_alt = -1
   Insn 32: point = 44, n_alt = 0
  BB 24
   Insn 155: point = 45, n_alt = 8
   Insn 154: point = 46, n_alt = -2
   Insn 153: point = 48, n_alt = 0
   Insn 152: point = 50, n_alt = 0
   Insn 151: point = 51, n_alt = 0
   Insn 150: point = 52, n_alt = -2
   Insn 149: point = 53, n_alt = 0
   Insn 148: point = 53, n_alt = 0
   Insn 147: point = 53, n_alt = 0
   Insn 146: point = 53, n_alt = 0
  BB 23
   Insn 143: point = 54, n_alt = 0
   Insn 142: point = 54, n_alt = 0
   Insn 141: point = 54, n_alt = 0
   Insn 140: point = 54, n_alt = 0
  BB 22
   Insn 138: point = 55, n_alt = -1
   Insn 137: point = 55, n_alt = 0
  BB 20
   Insn 130: point = 56, n_alt = -1
   Insn 129: point = 56, n_alt = 1
   Insn 128: point = 56, n_alt = 1
   Insn 127: point = 57, n_alt = 0
   Insn 126: point = 59, n_alt = 1
   Insn 125: point = 60, n_alt = -2
   Insn 124: point = 61, n_alt = 0
   Insn 123: point = 61, n_alt = -2
   Insn 122: point = 61, n_alt = 3
   Insn 121: point = 63, n_alt = 0
   Insn 120: point = 64, n_alt = 1
   Insn 119: point = 66, n_alt = 0
   Insn 118: point = 68, n_alt = 0
  BB 19
   Insn 116: point = 70, n_alt = -1
   Insn 115: point = 70, n_alt = 1
   Insn 114: point = 70, n_alt = 1
   Insn 113: point = 71, n_alt = 0
   Insn 112: point = 73, n_alt = 0
   Insn 111: point = 75, n_alt = 0
   Insn 110: point = 76, n_alt = 1
   Insn 109: point = 78, n_alt = 0
   Insn 108: point = 80, n_alt = 0
  BB 18
   Insn 105: point = 82, n_alt = 0
   Insn 104: point = 82, n_alt = 0
   Insn 103: point = 82, n_alt = 0
   Insn 102: point = 82, n_alt = 0
  BB 17
   Insn 100: point = 83, n_alt = -1
   Insn 99: point = 83, n_alt = 0
   Insn 98: point = 83, n_alt = 1
   Insn 97: point = 84, n_alt = 0
   Insn 96: point = 86, n_alt = 0
  BB 16
   Insn 94: point = 88, n_alt = -1
   Insn 93: point = 88, n_alt = 1
   Insn 90: point = 88, n_alt = 0
   Insn 89: point = 88, n_alt = 0
   Insn 88: point = 88, n_alt = 0
   Insn 87: point = 88, n_alt = 0
  BB 3
   Insn 191: point = 89, n_alt = -1
   Insn 10: point = 89, n_alt = 0
  BB 2
   Insn 8: point = 90, n_alt = -1
   Insn 7: point = 90, n_alt = 1
   Insn 6: point = 90, n_alt = 1
   Insn 5: point = 90, n_alt = 1
   Insn 199: point = 90, n_alt = 0
 r82: [90..90] [6..88]
 r83: [40..41]
 r84: [37..39]
 r85: [35..36]
 r86: [33..34]
 r87: [22..25]
 r88: [20..21]
 r89: [85..86]
 r90: [77..78]
 r91: [74..76]
 r92: [72..73]
 r93: [70..71]
 r94: [65..66]
 r95: [62..64]
 r96: [58..61]
 r97: [59..60]
 r98: [56..57]
 r99: [47..52]
 r100: [49..51]
 r101: [45..48]
 r102: [45..46]
 r103: [6..9]
 r104: [89..89] [2..5]
 r105: [0..1]
 r106: [15..16]
 r107: [13..14]
 r108: [37..38]
 r109: [30..31]
 r110: [23..24]
 r111: [83..84]
 r112: [79..80]
 r113: [74..75]
 r114: [67..68]
 r115: [62..63]
 r116: [49..50]
 r117: [7..8]
Compressing live ranges: from 91 to 56 - 61%
Ranges after the compression:
 r82: [55..55] [4..53]
 r83: [22..23]
 r84: [20..21]
 r85: [18..19]
 r86: [16..17]
 r87: [12..13]
 r88: [10..11]
 r89: [52..53]
 r90: [46..47]
 r91: [44..45]
 r92: [42..43]
 r93: [40..41]
 r94: [36..37]
 r95: [34..35]
 r96: [32..33]
 r97: [32..33]
 r98: [30..31]
 r99: [26..29]
 r100: [28..29]
 r101: [24..27]
 r102: [24..25]
 r103: [4..5]
 r104: [54..54] [2..3]
 r105: [0..1]
 r106: [8..9]
 r107: [6..7]
 r108: [20..21]
 r109: [14..15]
 r110: [12..13]
 r111: [50..51]
 r112: [48..49]
 r113: [44..45]
 r114: [38..39]
 r115: [34..35]
 r116: [28..29]
 r117: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 199
changing reg in insn 123
changing reg in insn 55
changing reg in insn 53
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 47
changing reg in insn 48
changing reg in insn 72
changing reg in insn 76
changing reg in insn 73
changing reg in insn 79
changing reg in insn 81
changing reg in insn 96
changing reg in insn 97
changing reg in insn 109
changing reg in insn 110
changing reg in insn 110
changing reg in insn 112
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 114
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 122
changing reg in insn 122
changing reg in insn 122
changing reg in insn 127
changing reg in insn 126
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 150
changing reg in insn 154
changing reg in insn 151
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 154
changing reg in insn 155
changing reg in insn 163
changing reg in insn 169
changing reg in insn 164
changing reg in insn 181
changing reg in insn 132
changing reg in insn 10
changing reg in insn 184
changing reg in insn 184
changing reg in insn 188
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 42
changing reg in insn 53
changing reg in insn 54
changing reg in insn 73
changing reg in insn 74
changing reg in insn 97
changing reg in insn 98
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 111
changing reg in insn 118
changing reg in insn 119
changing reg in insn 119
changing reg in insn 121
changing reg in insn 122
changing reg in insn 152
changing reg in insn 164
changing reg in insn 165
deleting insn with uid = 16.
deleting insn with uid = 19.
deleting insn with uid = 47.
deleting insn with uid = 55.
deleting insn with uid = 79.
deleting insn with uid = 123.
deleting insn with uid = 125.
deleting insn with uid = 154.
deleting insn with uid = 184.
deleting insn with uid = 188.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 124.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 148.
verify found no changes in insn with uid = 177.


copy_strings

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={36d,29u,2e} r1={20d,6u,3e} r2={15d,1u,1e} r3={1d,3u} r4={1d,2u} r7={28d,139u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={3e} r17={62d,14u} r18={13d} r19={1e} r20={13d} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={13d} r38={13d} r39={13d} r40={13d} r41={13d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} 
;;    total ref usage 1212{1008d,194u,10e} in 122{109 regular + 13 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 199 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 199 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 199 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 pag+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":61:17 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 offset+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":62:14 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 60 [0x3c])) [1 p+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":65:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "fs/exec.c":65:8 806 {*jcc}
     (nil)
 -> 13)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 191 3 (set (reg:SI 0 ax [orig:104 _36 ] [104])
        (const_int 0 [0])) "fs/exec.c":66:16 75 {*movsi_internal}
     (nil))
(jump_insn 191 10 192 3 (set (pc)
        (label_ref 182)) "fs/exec.c":66:16 807 {jump}
     (nil)
 -> 182)
(barrier 192 191 13)
(code_label 13 192 14 4 20 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 15 14 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_ds") [flags 0x3]  <function_decl 0x7a64a9d3ea00 get_ds>) [0 get_ds S1 A8])
            (const_int 0 [0]))) "fs/exec.c":67:14 823 {*call_value}
     (nil)
    (nil))
(insn 17 15 18 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 new_fs+0 S4 A32])
        (reg:SI 0 ax [106])) "fs/exec.c":67:14 75 {*movsi_internal}
     (nil))
(call_insn 18 17 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs") [flags 0x3]  <function_decl 0x7a64a9d3e800 get_fs>) [0 get_fs S1 A8])
            (const_int 0 [0]))) "fs/exec.c":68:14 823 {*call_value}
     (nil)
    (nil))
(insn 20 18 21 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 old_fs+0 S4 A32])
        (reg:SI 0 ax [107])) "fs/exec.c":68:14 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 64 [0x40])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":69:8 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/exec.c":69:8 806 {*jcc}
     (nil)
 -> 27)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 new_fs+0 S4 A32])) "fs/exec.c":70:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 25 24 26 5 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 4 [0x4])) "fs/exec.c":70:9 812 {*call}
     (nil)
    (nil))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":70:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 27 26 28 6 22 (nil) [1 uses])
(note 28 27 193 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 193 28 194 6 (set (pc)
        (label_ref 161)) "fs/exec.c":71:11 807 {jump}
     (nil)
 -> 161)
(barrier 194 193 166)
(code_label 166 194 31 7 33 (nil) [1 uses])
(note 31 166 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 64 [0x40])) [9 from_kmem+0 S4 A32])
            (const_int 1 [0x1]))) "fs/exec.c":72:12 11 {*cmpsi_1}
     (nil))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fs/exec.c":72:12 806 {*jcc}
     (nil)
 -> 38)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 new_fs+0 S4 A32])) "fs/exec.c":73:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 36 35 37 8 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 4 [0x4])) "fs/exec.c":73:13 812 {*call}
     (nil)
    (nil))
(insn 37 36 38 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":73:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 38 37 39 9 24 (nil) [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:SI 0 ax [orig:83 argc.1_1 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [9 argc+0 S4 A32])) "fs/exec.c":74:64 75 {*movsi_internal}
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:SI 1 dx [orig:84 _2 ] [84])
                (ashift:SI (reg:SI 0 ax [orig:83 argc.1_1 ] [83])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":74:64 655 {*ashlsi3_1}
     (nil))
(insn 42 41 43 9 (set (reg/f:SI 0 ax [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [20 argv+0 S4 A32])) "fs/exec.c":74:29 75 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:SI 0 ax [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 0 ax [108])
                    (reg:SI 1 dx [orig:84 _2 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":74:29 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [20 argv+0 S4 A32])
            (reg:SI 1 dx [orig:84 _2 ] [84]))
        (nil)))
(insn 44 43 45 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/exec.c":74:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 45 44 46 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e600 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":74:29 823 {*call_value}
     (nil)
    (nil))
(insn 46 45 48 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":74:29 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 48 46 49 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 tmp+0 S4 A32])
        (reg:SI 0 ax [orig:86 _4 ] [86])) "fs/exec.c":74:19 75 {*movsi_internal}
     (nil))
(insn 49 48 50 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [2 tmp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":74:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 51 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/exec.c":74:12 806 {*jcc}
     (nil)
 -> 58)
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":75:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 53 52 54 10 (set (reg/f:SI 0 ax [109])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7a64a9ddc090 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/exec.c":75:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7a64a9ddc090 *.LC0>)
        (nil)))
(insn 54 53 56 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [109])) "fs/exec.c":75:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 56 54 57 10 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a64a9d38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":75:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 57 56 58 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":75:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 58 57 59 11 25 (nil) [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 64 [0x40])) [9 from_kmem+0 S4 A32])
            (const_int 1 [0x1]))) "fs/exec.c":76:12 11 {*cmpsi_1}
     (nil))
(jump_insn 61 60 62 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/exec.c":76:12 806 {*jcc}
     (nil)
 -> 67)
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":77:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 64 63 65 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 old_fs+0 S4 A32])) "fs/exec.c":77:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 65 64 66 12 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":77:13 812 {*call}
     (nil)
    (nil))
(insn 66 65 67 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":77:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 67 66 68 13 26 (nil) [1 uses])
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 80 13 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 len+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":78:13 75 {*movsi_internal}
     (nil))
(code_label 80 69 70 14 27 (nil) [1 uses])
(note 70 80 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 20 [0x14])) [9 len+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [9 len+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":80:16 209 {*addsi_1}
     (nil))
(insn 72 71 73 14 (set (reg/f:SI 0 ax [orig:87 tmp.2_5 ] [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 tmp+0 S4 A32])) "fs/exec.c":81:18 75 {*movsi_internal}
     (nil))
(insn 73 72 74 14 (parallel [
            (set (reg:SI 1 dx [110])
                (plus:SI (reg/f:SI 0 ax [orig:87 tmp.2_5 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":81:18 209 {*addsi_1}
     (nil))
(insn 74 73 75 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 tmp+0 S4 A32])
        (reg:SI 1 dx [110])) "fs/exec.c":81:18 75 {*movsi_internal}
     (nil))
(insn 75 74 76 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":81:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 76 75 77 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:87 tmp.2_5 ] [87])) "fs/exec.c":81:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 77 76 78 14 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":81:18 823 {*call_value}
     (nil)
    (nil))
(insn 78 77 81 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":81:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 81 78 82 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:88 _6 ] [88])
            (const_int 0 [0]))) "fs/exec.c":81:18 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 82 81 83 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/exec.c":81:18 806 {*jcc}
     (nil)
 -> 80)
(note 83 82 195 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 195 83 196 15 (set (pc)
        (label_ref 156)) "fs/exec.c":86:15 807 {jump}
     (nil)
 -> 156)
(barrier 196 195 158)
(code_label 158 196 86 16 32 (nil) [1 uses])
(note 86 158 87 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 60 [0x3c])) [1 p+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 60 [0x3c])) [1 p+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":87:13 209 {*addsi_1}
     (nil))
(insn 88 87 89 16 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [2 tmp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [2 tmp+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":88:13 209 {*addsi_1}
     (nil))
(insn 89 88 90 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 20 [0x14])) [9 len+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [9 len+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":89:13 209 {*addsi_1}
     (nil))
(insn 90 89 93 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 16 [0x10])) [9 offset+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 16 [0x10])) [9 offset+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":90:16 209 {*addsi_1}
     (nil))
(insn 93 90 94 16 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [9 offset+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":90:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 94 93 95 16 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/exec.c":90:16 806 {*jcc}
     (nil)
 -> 144)
(note 95 94 96 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 17 (set (reg:SI 0 ax [orig:89 p.3_7 ] [89])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [1 p+0 S4 A32])) "fs/exec.c":91:28 75 {*movsi_internal}
     (nil))
(insn 97 96 98 17 (parallel [
            (set (reg:SI 0 ax [111])
                (and:SI (reg:SI 0 ax [orig:89 p.3_7 ] [89])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":91:24 490 {*andsi_1}
     (nil))
(insn 98 97 99 17 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 offset+0 S4 A32])
        (reg:SI 0 ax [111])) "fs/exec.c":91:24 75 {*movsi_internal}
     (nil))
(insn 99 98 100 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 64 [0x40])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":92:20 11 {*cmpsi_1}
     (nil))
(jump_insn 100 99 101 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/exec.c":92:20 806 {*jcc}
     (nil)
 -> 106)
(note 101 100 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":93:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 103 102 104 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 old_fs+0 S4 A32])) "fs/exec.c":93:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 104 103 105 18 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":93:21 812 {*call}
     (nil)
    (nil))
(insn 105 104 106 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":93:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 106 105 107 19 30 (nil) [1 uses])
(note 107 106 108 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 19 (set (reg:SI 0 ax [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [1 p+0 S4 A32])) "fs/exec.c":94:44 75 {*movsi_internal}
     (nil))
(insn 109 108 110 19 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (lshiftrt:SI (reg:SI 0 ax [112])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":94:44 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [112])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 110 109 111 19 (parallel [
            (set (reg:SI 1 dx [orig:91 _9 ] [91])
                (ashift:SI (reg:SI 0 ax [orig:90 _8 ] [90])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":94:41 655 {*ashlsi3_1}
     (nil))
(insn 111 110 112 19 (set (reg/f:SI 0 ax [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [19 page+0 S4 A32])) "fs/exec.c":94:41 75 {*movsi_internal}
     (nil))
(insn 112 111 113 19 (parallel [
            (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
                (plus:SI (reg/f:SI 0 ax [113])
                    (reg:SI 1 dx [orig:91 _9 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":94:41 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [19 page+0 S4 A32])
            (reg:SI 1 dx [orig:91 _9 ] [91]))
        (nil)))
(insn 113 112 114 19 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (mem:SI (reg/f:SI 0 ax [orig:92 _10 ] [92]) [1 *_10+0 S4 A32])) "fs/exec.c":94:41 75 {*movsi_internal}
     (nil))
(insn 114 113 115 19 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 pag+0 S4 A32])
        (reg:SI 0 ax [orig:93 _11 ] [93])) "fs/exec.c":94:27 75 {*movsi_internal}
     (nil))
(insn 115 114 116 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [2 pag+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":94:20 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 116 115 117 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/exec.c":94:20 806 {*jcc}
     (nil)
 -> 135)
(note 117 116 118 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 20 (set (reg:SI 0 ax [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [1 p+0 S4 A32])) "fs/exec.c":95:45 75 {*movsi_internal}
     (nil))
(insn 119 118 120 20 (parallel [
            (set (reg:SI 0 ax [orig:94 _12 ] [94])
                (lshiftrt:SI (reg:SI 0 ax [114])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":95:45 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [114])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 120 119 121 20 (parallel [
            (set (reg:SI 1 dx [orig:95 _13 ] [95])
                (ashift:SI (reg:SI 0 ax [orig:94 _12 ] [94])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":95:42 655 {*ashlsi3_1}
     (nil))
(insn 121 120 122 20 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [19 page+0 S4 A32])) "fs/exec.c":95:42 75 {*movsi_internal}
     (nil))
(insn 122 121 124 20 (parallel [
            (set (reg/f:SI 4 si [orig:96 _14 ] [96])
                (plus:SI (reg:SI 1 dx [orig:95 _13 ] [95])
                    (reg/f:SI 0 ax [115])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":95:42 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [19 page+0 S4 A32])
            (reg:SI 1 dx [orig:95 _13 ] [95]))
        (nil)))
(call_insn 124 122 126 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_free_page") [flags 0x41]  <function_decl 0x7a64a9d38900 get_free_page>) [0 get_free_page S1 A8])
            (const_int 0 [0]))) "fs/exec.c":96:23 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 126 124 127 20 (set (mem:SI (reg/f:SI 4 si [orig:96 _14 ] [96]) [1 *_14+0 S4 A32])
        (reg:SI 0 ax [orig:97 _15 ] [97])) "fs/exec.c":95:58 75 {*movsi_internal}
     (nil))
(insn 127 126 128 20 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (mem:SI (reg/f:SI 4 si [orig:96 _14 ] [96]) [1 *_14+0 S4 A32])) "fs/exec.c":95:42 75 {*movsi_internal}
     (nil))
(insn 128 127 129 20 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 pag+0 S4 A32])
        (reg:SI 0 ax [orig:98 _16 ] [98])) "fs/exec.c":95:27 75 {*movsi_internal}
     (nil))
(insn 129 128 130 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [2 pag+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":94:58 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 130 129 131 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) "fs/exec.c":94:58 806 {*jcc}
     (nil)
 -> 135)
(note 131 130 132 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 197 21 (set (reg:SI 0 ax [orig:104 _36 ] [104])
        (const_int 0 [0])) "fs/exec.c":97:28 75 {*movsi_internal}
     (nil))
(jump_insn 197 132 198 21 (set (pc)
        (label_ref 182)) "fs/exec.c":97:28 807 {jump}
     (nil)
 -> 182)
(barrier 198 197 135)
(code_label 135 198 136 22 31 (nil) [2 uses])
(note 136 135 137 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 64 [0x40])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":98:20 11 {*cmpsi_1}
     (nil))
(jump_insn 138 137 139 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/exec.c":98:20 806 {*jcc}
     (nil)
 -> 144)
(note 139 138 140 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":99:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 141 140 142 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 new_fs+0 S4 A32])) "fs/exec.c":99:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 142 141 143 23 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":99:21 812 {*call}
     (nil)
    (nil))
(insn 143 142 144 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":99:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 144 143 145 24 29 (nil) [2 uses])
(note 145 144 146 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":101:31 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 147 146 148 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 tmp+0 S4 A32])) "fs/exec.c":101:31 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 148 147 149 24 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":101:31 823 {*call_value}
     (nil)
    (nil))
(insn 149 148 150 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":101:31 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 150 149 151 24 (set (reg:QI 1 dx [orig:99 _17 ] [99])
        (reg:QI 0 ax)) "fs/exec.c":101:31 77 {*movqi_internal}
     (nil))
(insn 151 150 152 24 (set (reg:SI 2 cx [orig:100 offset.4_18 ] [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 offset+0 S4 A32])) "fs/exec.c":101:19 75 {*movsi_internal}
     (nil))
(insn 152 151 153 24 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 pag+0 S4 A32])) "fs/exec.c":101:19 75 {*movsi_internal}
     (nil))
(insn 153 152 155 24 (parallel [
            (set (reg/f:SI 0 ax [orig:101 _19 ] [101])
                (plus:SI (reg/f:SI 0 ax [116])
                    (reg:SI 2 cx [orig:100 offset.4_18 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":101:19 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [2 pag+0 S4 A32])
            (reg:SI 2 cx [orig:100 offset.4_18 ] [100]))
        (nil)))
(insn 155 153 156 24 (set (mem:QI (reg/f:SI 0 ax [orig:101 _19 ] [101]) [0 *_19+0 S1 A8])
        (reg:QI 1 dx [orig:102 _20 ] [102])) "fs/exec.c":101:29 77 {*movqi_internal}
     (nil))
(code_label 156 155 157 25 28 (nil) [1 uses])
(note 157 156 159 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 159 157 160 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [9 len+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":86:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 160 159 161 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) "fs/exec.c":86:16 806 {*jcc}
     (nil)
 -> 158)
(code_label 161 160 162 26 23 (nil) [1 uses])
(note 162 161 163 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 26 (set (reg:SI 0 ax [orig:103 argc.5_21 ] [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [9 argc+0 S4 A32])) "fs/exec.c":71:16 75 {*movsi_internal}
     (nil))
(insn 164 163 165 26 (parallel [
            (set (reg:SI 1 dx [117])
                (plus:SI (reg:SI 0 ax [orig:103 argc.5_21 ] [103])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":71:16 209 {*addsi_1}
     (nil))
(insn 165 164 169 26 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [9 argc+0 S4 A32])
        (reg:SI 1 dx [117])) "fs/exec.c":71:16 75 {*movsi_internal}
     (nil))
(insn 169 165 170 26 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:103 argc.5_21 ] [103])
            (const_int 0 [0]))) "fs/exec.c":71:19 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 170 169 171 26 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "fs/exec.c":71:19 806 {*jcc}
     (nil)
 -> 166)
(note 171 170 172 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 64 [0x40])) [9 from_kmem+0 S4 A32])
            (const_int 2 [0x2]))) "fs/exec.c":104:8 11 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) "fs/exec.c":104:8 806 {*jcc}
     (nil)
 -> 179)
(note 174 173 175 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":105:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 176 175 177 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 old_fs+0 S4 A32])) "fs/exec.c":105:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 177 176 178 28 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":105:9 812 {*call}
     (nil)
    (nil))
(insn 178 177 179 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":105:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 179 178 180 29 34 (nil) [1 uses])
(note 180 179 181 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 29 (set (reg:SI 0 ax [orig:104 _36 ] [104])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [1 p+0 S4 A32])) "fs/exec.c":106:12 75 {*movsi_internal}
     (nil))
(code_label 182 181 183 30 21 (nil) [2 uses])
(note 183 182 189 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 189 183 200 30 (use (reg/i:SI 0 ax)) "fs/exec.c":107:1 -1
     (nil))
(note 200 189 0 NOTE_INSN_DELETED)

;; Function create_tables (create_tables, funcdef_no=10, decl_uid=1465, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 44:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 65:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 81:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 90:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 102:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) lBwBz {*call} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 113:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 11
EBB 4
EBB 5 6
EBB 7 12
EBB 8
EBB 9 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 122: point = 0, n_alt = -1
   Insn 121: point = 0, n_alt = -2
   Insn 117: point = 1, n_alt = -2
   Insn 114: point = 3, n_alt = 0
   Insn 113: point = 4, n_alt = 0
   Insn 112: point = 4, n_alt = 0
   Insn 111: point = 4, n_alt = 0
   Insn 110: point = 4, n_alt = 0
  BB 9
   Insn 108: point = 4, n_alt = -1
   Insn 107: point = 4, n_alt = 0
   Insn 103: point = 5, n_alt = 1
   Insn 102: point = 6, n_alt = 3
   Insn 101: point = 7, n_alt = 0
  BB 6
   Insn 126: point = 8, n_alt = -1
   Insn 76: point = 8, n_alt = 0
   Insn 75: point = 8, n_alt = 0
   Insn 74: point = 8, n_alt = 0
   Insn 73: point = 8, n_alt = 0
  BB 5
   Insn 71: point = 8, n_alt = -1
   Insn 70: point = 8, n_alt = 0
   Insn 66: point = 9, n_alt = 1
   Insn 65: point = 10, n_alt = 3
   Insn 64: point = 11, n_alt = 0
  BB 2
   Insn 124: point = 12, n_alt = -1
   Insn 39: point = 12, n_alt = 0
   Insn 38: point = 12, n_alt = 0
   Insn 37: point = 12, n_alt = 0
   Insn 36: point = 13, n_alt = 0
   Insn 35: point = 13, n_alt = 0
   Insn 34: point = 14, n_alt = 0
   Insn 33: point = 14, n_alt = 0
   Insn 32: point = 14, n_alt = 0
   Insn 31: point = 14, n_alt = 0
   Insn 30: point = 15, n_alt = 0
   Insn 29: point = 15, n_alt = 0
   Insn 28: point = 16, n_alt = 0
   Insn 27: point = 16, n_alt = 0
   Insn 26: point = 16, n_alt = 0
   Insn 25: point = 16, n_alt = 0
   Insn 24: point = 17, n_alt = 0
   Insn 23: point = 17, n_alt = 0
   Insn 22: point = 18, n_alt = 0
   Insn 21: point = 18, n_alt = 1
   Insn 20: point = 19, n_alt = 0
   Insn 19: point = 20, n_alt = 0
   Insn 18: point = 21, n_alt = 0
   Insn 17: point = 23, n_alt = 0
   Insn 16: point = 25, n_alt = 0
   Insn 15: point = 26, n_alt = 0
   Insn 14: point = 27, n_alt = 1
   Insn 13: point = 28, n_alt = 0
   Insn 12: point = 29, n_alt = 0
   Insn 11: point = 30, n_alt = 0
   Insn 10: point = 32, n_alt = 0
   Insn 9: point = 34, n_alt = 0
   Insn 8: point = 35, n_alt = 0
   Insn 7: point = 36, n_alt = 1
   Insn 6: point = 37, n_alt = 0
   Insn 5: point = 39, n_alt = 0
   Insn 132: point = 40, n_alt = 0
  BB 4
   Insn 61: point = 41, n_alt = -1
   Insn 60: point = 41, n_alt = 0
   Insn 58: point = 42, n_alt = -2
   Insn 57: point = 43, n_alt = 0
   Insn 56: point = 43, n_alt = 0
   Insn 55: point = 43, n_alt = 0
   Insn 54: point = 44, n_alt = 1
   Insn 53: point = 45, n_alt = 3
   Insn 52: point = 46, n_alt = 0
  BB 11
   Insn 129: point = 47, n_alt = -1
  BB 3
   Insn 50: point = 47, n_alt = 0
   Insn 49: point = 47, n_alt = 0
   Insn 48: point = 47, n_alt = 0
   Insn 47: point = 48, n_alt = 0
   Insn 46: point = 49, n_alt = 0
   Insn 45: point = 50, n_alt = 1
   Insn 44: point = 51, n_alt = 3
   Insn 43: point = 52, n_alt = 0
  BB 8
   Insn 98: point = 53, n_alt = -1
   Insn 97: point = 53, n_alt = 0
   Insn 95: point = 54, n_alt = -2
   Insn 94: point = 55, n_alt = 0
   Insn 93: point = 55, n_alt = 0
   Insn 92: point = 55, n_alt = 0
   Insn 91: point = 56, n_alt = 1
   Insn 90: point = 57, n_alt = 3
   Insn 89: point = 58, n_alt = 0
  BB 12
   Insn 131: point = 59, n_alt = -1
  BB 7
   Insn 87: point = 59, n_alt = 0
   Insn 86: point = 59, n_alt = 0
   Insn 85: point = 59, n_alt = 0
   Insn 84: point = 60, n_alt = 0
   Insn 83: point = 61, n_alt = 0
   Insn 82: point = 62, n_alt = 1
   Insn 81: point = 63, n_alt = 3
   Insn 80: point = 64, n_alt = 0
 r82: [40..40]
 r83: [38..39]
 r84: [36..37]
 r85: [33..35]
 r86: [31..32]
 r87: [29..30]
 r88: [24..26]
 r89: [22..23]
 r90: [20..21]
 r91: [16..17]
 r92: [14..15]
 r93: [12..13]
 r94: [48..52]
 r95: [47..49]
 r96: [43..46]
 r97: [41..42]
 r98: [8..11]
 r99: [60..64]
 r100: [59..61]
 r101: [55..58]
 r102: [53..54]
 r103: [4..7]
 r104: [2..3]
 r105: [0..1]
 r106: [33..34]
 r107: [27..28]
 r108: [24..25]
 r109: [18..19]
 r110: [50..51]
 r111: [44..45]
 r112: [9..10]
 r113: [62..63]
 r114: [56..57]
 r115: [5..6]
Compressing live ranges: from 65 to 51 - 78%
Ranges after the compression:
 r82: [34..34]
 r83: [32..33]
 r84: [30..31]
 r85: [28..29]
 r86: [26..27]
 r87: [24..25]
 r88: [20..21]
 r89: [18..19]
 r90: [16..17]
 r91: [12..13]
 r92: [10..11]
 r93: [8..9]
 r94: [39..42]
 r95: [39..40]
 r96: [37..38]
 r97: [35..36]
 r98: [6..7]
 r99: [47..50]
 r100: [47..48]
 r101: [45..46]
 r102: [43..44]
 r103: [4..5]
 r104: [2..3]
 r105: [0..1]
 r106: [28..29]
 r107: [22..23]
 r108: [20..21]
 r109: [14..15]
 r110: [41..42]
 r111: [37..38]
 r112: [6..7]
 r113: [49..50]
 r114: [45..46]
 r115: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 132
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 25
changing reg in insn 29
changing reg in insn 31
changing reg in insn 35
changing reg in insn 37
changing reg in insn 43
changing reg in insn 47
changing reg in insn 44
changing reg in insn 46
changing reg in insn 48
changing reg in insn 52
changing reg in insn 55
changing reg in insn 53
changing reg in insn 58
changing reg in insn 60
changing reg in insn 64
changing reg in insn 70
changing reg in insn 65
changing reg in insn 80
changing reg in insn 84
changing reg in insn 81
changing reg in insn 83
changing reg in insn 85
changing reg in insn 89
changing reg in insn 92
changing reg in insn 90
changing reg in insn 95
changing reg in insn 97
changing reg in insn 101
changing reg in insn 107
changing reg in insn 102
changing reg in insn 114
changing reg in insn 117
changing reg in insn 117
changing reg in insn 121
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 20
changing reg in insn 21
changing reg in insn 44
changing reg in insn 45
changing reg in insn 53
changing reg in insn 54
changing reg in insn 65
changing reg in insn 66
changing reg in insn 81
changing reg in insn 82
changing reg in insn 90
changing reg in insn 91
changing reg in insn 102
changing reg in insn 103
deleting insn with uid = 58.
deleting insn with uid = 95.
deleting insn with uid = 117.
deleting insn with uid = 121.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 112.


create_tables

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={31d,29u} r1={20d,10u} r2={10d} r7={26d,96u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r17={39d,4u} r18={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} 
;;    total ref usage 850{711d,139u,0e} in 92{83 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 132 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 132 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 132 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [orig:83 p.6_1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 p+0 S4 A32])) "fs/exec.c":119:41 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (and:SI (reg:SI 0 ax [orig:83 p.6_1 ] [83])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":119:39 490 {*andsi_1}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sp+0 S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "fs/exec.c":119:8 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 dx [orig:85 envc.7_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 envc+0 S4 A32])) "fs/exec.c":120:8 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [106])
        (const_int 1073741823 [0x3fffffff])) "fs/exec.c":120:8 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 0 ax [orig:86 _4 ] [86])
                (minus:SI (reg:SI 0 ax [106])
                    (reg:SI 1 dx [orig:85 envc.7_3 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":120:8 282 {*subsi_1}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (ashift:SI (reg:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":120:8 655 {*ashlsi3_1}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [19 sp+0 S4 A32])
                    (reg:SI 0 ax [orig:87 _5 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":120:8 209 {*addsi_1}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 0 ax [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sp+0 S4 A32])) "fs/exec.c":121:10 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 envp+0 S4 A32])
        (reg/f:SI 0 ax [107])) "fs/exec.c":121:10 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 dx [orig:88 argc.8_6 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 argc+0 S4 A32])) "fs/exec.c":122:8 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 ax [108])
        (const_int 1073741823 [0x3fffffff])) "fs/exec.c":122:8 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (minus:SI (reg:SI 0 ax [108])
                    (reg:SI 1 dx [orig:88 argc.8_6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":122:8 282 {*subsi_1}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (ashift:SI (reg:SI 0 ax [orig:89 _7 ] [89])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":122:8 655 {*ashlsi3_1}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [19 sp+0 S4 A32])
                    (reg:SI 0 ax [orig:90 _8 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":122:8 209 {*addsi_1}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 0 ax [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sp+0 S4 A32])) "fs/exec.c":123:10 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 argv+0 S4 A32])
        (reg/f:SI 0 ax [109])) "fs/exec.c":123:10 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [19 sp+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":124:5 209 {*addsi_1}
     (nil))
(insn 23 22 24 2 (set (reg:SI 0 ax [orig:91 envp.9_9 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 envp+0 S4 A32])) "fs/exec.c":124:5 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sp+0 S4 A32])) "fs/exec.c":124:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 25 24 26 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:91 envp.9_9 ] [91])) "fs/exec.c":124:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":124:5 812 {*call}
     (nil)
    (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":124:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [19 sp+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":125:5 209 {*addsi_1}
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 ax [orig:92 argv.10_10 ] [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 argv+0 S4 A32])) "fs/exec.c":125:5 75 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sp+0 S4 A32])) "fs/exec.c":125:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 31 30 32 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:92 argv.10_10 ] [92])) "fs/exec.c":125:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":125:5 812 {*call}
     (nil)
    (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":125:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 34 33 35 2 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [19 sp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [19 sp+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":126:5 209 {*addsi_1}
     (nil))
(insn 35 34 36 2 (set (reg:SI 0 ax [orig:93 argc.11_11 ] [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 argc+0 S4 A32])) "fs/exec.c":126:5 75 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sp+0 S4 A32])) "fs/exec.c":126:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 37 36 38 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:93 argc.11_11 ] [93])) "fs/exec.c":126:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":126:5 812 {*call}
     (nil)
    (nil))
(insn 39 38 124 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":126:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 124 39 125 2 (set (pc)
        (label_ref 62)) "fs/exec.c":127:11 807 {jump}
     (nil)
 -> 62)
(barrier 125 124 67)
(code_label 67 125 42 3 38 (nil) [1 uses])
(note 42 67 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg/f:SI 0 ax [orig:94 argv.12_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 argv+0 S4 A32])) "fs/exec.c":128:9 75 {*movsi_internal}
     (nil))
(insn 44 43 45 3 (parallel [
            (set (reg:SI 1 dx [110])
                (plus:SI (reg/f:SI 0 ax [orig:94 argv.12_12 ] [94])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":128:9 209 {*addsi_1}
     (nil))
(insn 45 44 46 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 argv+0 S4 A32])
        (reg:SI 1 dx [110])) "fs/exec.c":128:9 75 {*movsi_internal}
     (nil))
(insn 46 45 47 3 (set (reg:SI 1 dx [orig:95 p.13_13 ] [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 p+0 S4 A32])) "fs/exec.c":128:9 75 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 0 ax [orig:94 argv.12_12 ] [94])) "fs/exec.c":128:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 48 47 49 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 1 dx [orig:95 p.13_13 ] [95])) "fs/exec.c":128:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 49 48 50 3 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":128:9 812 {*call}
     (nil)
    (nil))
(insn 50 49 128 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":128:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 128 50 129 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 59 11 (const_int 0 [0]) "fs/exec.c":129:15 843 {nop}
     (nil))
(code_label 59 129 51 4 37 (nil) [1 uses])
(note 51 59 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg/f:SI 0 ax [orig:96 p.14_14 ] [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 p+0 S4 A32])) "fs/exec.c":129:16 75 {*movsi_internal}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:SI 1 dx [111])
                (plus:SI (reg/f:SI 0 ax [orig:96 p.14_14 ] [96])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":129:16 209 {*addsi_1}
     (nil))
(insn 54 53 55 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 p+0 S4 A32])
        (reg:SI 1 dx [111])) "fs/exec.c":129:16 75 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:96 p.14_14 ] [96])) "fs/exec.c":129:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 56 55 57 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":129:16 823 {*call_value}
     (nil)
    (nil))
(insn 57 56 60 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":129:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 60 57 61 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:97 _15 ] [97])
            (const_int 0 [0]))) "fs/exec.c":129:16 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 61 60 62 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "fs/exec.c":129:16 806 {*jcc}
     (nil)
 -> 59)
(code_label 62 61 63 5 36 (nil) [1 uses])
(note 63 62 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg:SI 0 ax [orig:98 argc.15_16 ] [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 argc+0 S4 A32])) "fs/exec.c":127:16 75 {*movsi_internal}
     (nil))
(insn 65 64 66 5 (parallel [
            (set (reg:SI 1 dx [112])
                (plus:SI (reg:SI 0 ax [orig:98 argc.15_16 ] [98])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":127:16 209 {*addsi_1}
     (nil))
(insn 66 65 70 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 argc+0 S4 A32])
        (reg:SI 1 dx [112])) "fs/exec.c":127:16 75 {*movsi_internal}
     (nil))
(insn 70 66 71 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:98 argc.15_16 ] [98])
            (const_int 0 [0]))) "fs/exec.c":127:19 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 71 70 72 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "fs/exec.c":127:19 806 {*jcc}
     (nil)
 -> 67)
(note 72 71 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [19 argv+0 S4 A32])) "fs/exec.c":132:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 74 73 75 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (const_int 0 [0])) "fs/exec.c":132:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 75 74 76 6 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":132:5 812 {*call}
     (nil)
    (nil))
(insn 76 75 126 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":132:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 126 76 127 6 (set (pc)
        (label_ref 99)) "fs/exec.c":133:11 807 {jump}
     (nil)
 -> 99)
(barrier 127 126 104)
(code_label 104 127 79 7 41 (nil) [1 uses])
(note 79 104 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 7 (set (reg/f:SI 0 ax [orig:99 envp.16_17 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 envp+0 S4 A32])) "fs/exec.c":134:9 75 {*movsi_internal}
     (nil))
(insn 81 80 82 7 (parallel [
            (set (reg:SI 1 dx [113])
                (plus:SI (reg/f:SI 0 ax [orig:99 envp.16_17 ] [99])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":134:9 209 {*addsi_1}
     (nil))
(insn 82 81 83 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 envp+0 S4 A32])
        (reg:SI 1 dx [113])) "fs/exec.c":134:9 75 {*movsi_internal}
     (nil))
(insn 83 82 84 7 (set (reg:SI 1 dx [orig:100 p.17_18 ] [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 p+0 S4 A32])) "fs/exec.c":134:9 75 {*movsi_internal}
     (nil))
(insn 84 83 85 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg/f:SI 0 ax [orig:99 envp.16_17 ] [99])) "fs/exec.c":134:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 85 84 86 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 1 dx [orig:100 p.17_18 ] [100])) "fs/exec.c":134:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 86 85 87 7 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":134:9 812 {*call}
     (nil)
    (nil))
(insn 87 86 130 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":134:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 130 87 131 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 96 12 (const_int 0 [0]) "fs/exec.c":135:15 843 {nop}
     (nil))
(code_label 96 131 88 8 40 (nil) [1 uses])
(note 88 96 89 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 8 (set (reg/f:SI 0 ax [orig:101 p.18_19 ] [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 p+0 S4 A32])) "fs/exec.c":135:16 75 {*movsi_internal}
     (nil))
(insn 90 89 91 8 (parallel [
            (set (reg:SI 1 dx [114])
                (plus:SI (reg/f:SI 0 ax [orig:101 p.18_19 ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":135:16 209 {*addsi_1}
     (nil))
(insn 91 90 92 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 p+0 S4 A32])
        (reg:SI 1 dx [114])) "fs/exec.c":135:16 75 {*movsi_internal}
     (nil))
(insn 92 91 93 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:101 p.18_19 ] [101])) "fs/exec.c":135:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 93 92 94 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e000 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":135:16 823 {*call_value}
     (nil)
    (nil))
(insn 94 93 97 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":135:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 97 94 98 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:102 _20 ] [102])
            (const_int 0 [0]))) "fs/exec.c":135:16 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 98 97 99 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "fs/exec.c":135:16 806 {*jcc}
     (nil)
 -> 96)
(code_label 99 98 100 9 39 (nil) [1 uses])
(note 100 99 101 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 9 (set (reg:SI 0 ax [orig:103 envc.19_21 ] [103])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 envc+0 S4 A32])) "fs/exec.c":133:16 75 {*movsi_internal}
     (nil))
(insn 102 101 103 9 (parallel [
            (set (reg:SI 1 dx [115])
                (plus:SI (reg:SI 0 ax [orig:103 envc.19_21 ] [103])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":133:16 209 {*addsi_1}
     (nil))
(insn 103 102 107 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 envc+0 S4 A32])
        (reg:SI 1 dx [115])) "fs/exec.c":133:16 75 {*movsi_internal}
     (nil))
(insn 107 103 108 9 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:103 envc.19_21 ] [103])
            (const_int 0 [0]))) "fs/exec.c":133:19 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 108 107 109 9 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) "fs/exec.c":133:19 806 {*jcc}
     (nil)
 -> 104)
(note 109 108 110 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [19 envp+0 S4 A32])) "fs/exec.c":138:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 111 110 112 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (const_int 0 [0])) "fs/exec.c":138:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 112 111 113 10 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x7a64a9d3e400 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 8 [0x8])) "fs/exec.c":138:5 812 {*call}
     (nil)
    (nil))
(insn 113 112 114 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":138:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 114 113 122 10 (set (reg/f:SI 0 ax [orig:104 _53 ] [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [19 sp+0 S4 A32])) "fs/exec.c":140:12 75 {*movsi_internal}
     (nil))
(insn 122 114 133 10 (use (reg/i:SI 0 ax)) "fs/exec.c":141:1 -1
     (nil))
(note 133 122 0 NOTE_INSN_DELETED)

;; Function change_ldt (change_ldt, funcdef_no=11, decl_uid=1484, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 26:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 30:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 34:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            3 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 36:  (0) m  (1) m  (2) m  (3) d
      Creating newreg=153 from oldreg=137, assigning class DREG to r153
   36: {asm_operands;clobber flags:CC;}
      REG_DEAD r137:SI
      REG_DEAD r93:SI
      REG_DEAD r90:SI
      REG_DEAD r87:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  125: r153:SI=r137:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) m  (1) m  (2) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 51:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 54:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 55:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 58:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 59:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            3 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 61:  (0) m  (1) m  (2) m  (3) d
      Creating newreg=154 from oldreg=144, assigning class DREG to r154
   61: {asm_operands;clobber flags:CC;}
      REG_DEAD r144:SI
      REG_DEAD r109:SI
      REG_DEAD r106:SI
      REG_DEAD r103:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  126: r154:SI=r144:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 64:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 68:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) m  (1) m  (2) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 84
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 92
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 99:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 119: point = 0, n_alt = -1
   Insn 118: point = 0, n_alt = -2
   Insn 114: point = 1, n_alt = -2
   Insn 111: point = 3, n_alt = 0
  BB 6
   Insn 109: point = 4, n_alt = -1
   Insn 108: point = 4, n_alt = 1
  BB 2
   Insn 121: point = 5, n_alt = -1
   Insn 76: point = 5, n_alt = 1
   Insn 75: point = 5, n_alt = 0
   Insn 74: point = 6, n_alt = 0
   Insn 73: point = 7, n_alt = -1
   Insn 72: point = 7, n_alt = 0
   Insn 71: point = 8, n_alt = 0
   Insn 70: point = 10, n_alt = 0
   Insn 69: point = 12, n_alt = 0
   Insn 68: point = 13, n_alt = 0
   Insn 67: point = 15, n_alt = 0
   Insn 66: point = 17, n_alt = 0
   Insn 65: point = 19, n_alt = 0
   Insn 64: point = 20, n_alt = 3
   Insn 63: point = 22, n_alt = 0
   Insn 62: point = 24, n_alt = 0
   Insn 61: point = 25, n_alt = 0
   Insn 126: point = 26, n_alt = -2
	Hard reg 0 is preferable by r154 with profit 1000
   Insn 60: point = 28, n_alt = 0
   Insn 59: point = 29, n_alt = 3
   Insn 58: point = 31, n_alt = 0
   Insn 57: point = 33, n_alt = 0
   Insn 56: point = 35, n_alt = 0
   Insn 55: point = 36, n_alt = 3
   Insn 54: point = 38, n_alt = 0
   Insn 53: point = 40, n_alt = 0
   Insn 52: point = 42, n_alt = 0
   Insn 51: point = 43, n_alt = 3
   Insn 50: point = 45, n_alt = 0
   Insn 49: point = 47, n_alt = 0
   Insn 48: point = 49, n_alt = 0
   Insn 47: point = 50, n_alt = 0
   Insn 46: point = 51, n_alt = 0
   Insn 45: point = 53, n_alt = 0
   Insn 44: point = 55, n_alt = 0
   Insn 43: point = 56, n_alt = 0
   Insn 42: point = 58, n_alt = 0
   Insn 41: point = 60, n_alt = 0
   Insn 40: point = 62, n_alt = 0
   Insn 39: point = 63, n_alt = 3
   Insn 38: point = 65, n_alt = 0
   Insn 37: point = 67, n_alt = 0
   Insn 36: point = 68, n_alt = 0
   Insn 125: point = 69, n_alt = -2
	Hard reg 0 is preferable by r153 with profit 1000
   Insn 35: point = 71, n_alt = 0
   Insn 34: point = 72, n_alt = 3
   Insn 33: point = 74, n_alt = 0
   Insn 32: point = 76, n_alt = 0
   Insn 31: point = 78, n_alt = 0
   Insn 30: point = 79, n_alt = 3
   Insn 29: point = 81, n_alt = 0
   Insn 28: point = 83, n_alt = 0
   Insn 27: point = 85, n_alt = 0
   Insn 26: point = 86, n_alt = 3
   Insn 25: point = 88, n_alt = 0
   Insn 24: point = 90, n_alt = 0
   Insn 23: point = 92, n_alt = 0
   Insn 22: point = 93, n_alt = 1
   Insn 21: point = 94, n_alt = 0
   Insn 20: point = 95, n_alt = 1
   Insn 19: point = 96, n_alt = -2
   Insn 18: point = 97, n_alt = 0
   Insn 17: point = 97, n_alt = 0
   Insn 16: point = 97, n_alt = 0
   Insn 15: point = 98, n_alt = 0
   Insn 14: point = 100, n_alt = 0
   Insn 13: point = 102, n_alt = 0
   Insn 12: point = 103, n_alt = 1
   Insn 11: point = 103, n_alt = 0
   Insn 10: point = 103, n_alt = 1
   Insn 9: point = 104, n_alt = 0
   Insn 8: point = 106, n_alt = 0
   Insn 123: point = 107, n_alt = 0
  BB 5
   Insn 102: point = 108, n_alt = 0
  BB 4
   Insn 99: point = 109, n_alt = 0
   Insn 98: point = 109, n_alt = 0
   Insn 97: point = 109, n_alt = -2
   Insn 96: point = 109, n_alt = 0
   Insn 95: point = 110, n_alt = 0
   Insn 94: point = 110, n_alt = 0
   Insn 93: point = 110, n_alt = 0
   Insn 92: point = 112, n_alt = 0
   Insn 91: point = 114, n_alt = 0
   Insn 90: point = 115, n_alt = 1
   Insn 89: point = 117, n_alt = 0
  BB 3
   Insn 87: point = 119, n_alt = -1
   Insn 86: point = 119, n_alt = 0
   Insn 85: point = 120, n_alt = 0
   Insn 84: point = 122, n_alt = 0
   Insn 83: point = 124, n_alt = 0
   Insn 82: point = 125, n_alt = 1
   Insn 81: point = 127, n_alt = 0
   Insn 80: point = 128, n_alt = 0
 r82: [4..128]
 r83: [99..100]
 r84: [97..98]
 r85: [89..90]
 r86: [87..88]
 r87: [68..86]
 r88: [82..83]
 r89: [80..81]
 r90: [68..79]
 r91: [75..76]
 r92: [73..74]
 r93: [68..72]
 r94: [64..65]
 r95: [50..63]
 r96: [59..60]
 r97: [57..58]
 r98: [50..56]
 r99: [52..53]
 r100: [50..51]
 r101: [46..47]
 r102: [44..45]
 r103: [25..43]
 r104: [39..40]
 r105: [37..38]
 r106: [25..36]
 r107: [32..33]
 r108: [30..31]
 r109: [25..29]
 r110: [21..22]
 r111: [7..20]
 r112: [16..17]
 r113: [14..15]
 r114: [7..13]
 r115: [9..10]
 r116: [7..8]
 r117: [126..127]
 r118: [123..125]
 r119: [121..122]
 r120: [119..120]
 r121: [116..117]
 r122: [113..115]
 r123: [111..112]
 r124: [109..110]
 r125: [2..3]
 r126: [0..1]
 r129: [103..104]
 r130: [105..106]
 r131: [101..102]
 r132: [95..96]
 r133: [93..94]
 r134: [91..92]
 r135: [84..85]
 r136: [77..78]
 r137: [70..71]
 r138: [66..67]
 r139: [61..62]
 r140: [54..55]
 r141: [48..49]
 r142: [41..42]
 r143: [34..35]
 r144: [27..28]
 r145: [23..24]
 r146: [18..19]
 r147: [11..12]
 r148: [5..6]
 r149: [123..124]
 r150: [113..114]
 r153: [68..69]
 r154: [25..26]
Compressing live ranges: from 129 to 112 - 86%
Ranges after the compression:
 r82: [4..111]
 r83: [88..89]
 r84: [86..87]
 r85: [78..79]
 r86: [76..77]
 r87: [60..75]
 r88: [72..73]
 r89: [70..71]
 r90: [60..69]
 r91: [66..67]
 r92: [64..65]
 r93: [60..63]
 r94: [56..57]
 r95: [44..55]
 r96: [52..53]
 r97: [50..51]
 r98: [44..49]
 r99: [46..47]
 r100: [44..45]
 r101: [40..41]
 r102: [38..39]
 r103: [22..37]
 r104: [34..35]
 r105: [32..33]
 r106: [22..31]
 r107: [28..29]
 r108: [26..27]
 r109: [22..25]
 r110: [18..19]
 r111: [6..17]
 r112: [14..15]
 r113: [12..13]
 r114: [6..11]
 r115: [8..9]
 r116: [6..7]
 r117: [110..111]
 r118: [108..109]
 r119: [106..107]
 r120: [104..105]
 r121: [102..103]
 r122: [100..101]
 r123: [98..99]
 r124: [96..97]
 r125: [2..3]
 r126: [0..1]
 r129: [92..93]
 r130: [94..95]
 r131: [90..91]
 r132: [84..85]
 r133: [82..83]
 r134: [80..81]
 r135: [74..75]
 r136: [68..69]
 r137: [62..63]
 r138: [58..59]
 r139: [54..55]
 r140: [48..49]
 r141: [42..43]
 r142: [36..37]
 r143: [30..31]
 r144: [24..25]
 r145: [20..21]
 r146: [16..17]
 r147: [10..11]
 r148: [4..5]
 r149: [108..109]
 r150: [100..101]
 r153: [60..61]
 r154: [22..23]

********** Assignment #1: **********

	 Assigning to 153 (cl=DREG, orig=137, freq=2000, tfirst=153, tfreq=2000)...
	   Assign 1 to reload r153 (freq=2000)
	 Assigning to 154 (cl=DREG, orig=144, freq=2000, tfirst=154, tfreq=2000)...
	   Assign 1 to reload r154 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 123
changing reg in insn 97
changing reg in insn 65
changing reg in insn 62
changing reg in insn 56
changing reg in insn 52
changing reg in insn 48
changing reg in insn 40
changing reg in insn 37
changing reg in insn 31
changing reg in insn 27
changing reg in insn 23
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 36
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 36
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 47
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 47
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 61
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 61
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 72
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 72
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 72
changing reg in insn 81
changing reg in insn 82
changing reg in insn 82
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 92
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 96
changing reg in insn 111
changing reg in insn 114
changing reg in insn 114
changing reg in insn 118
changing reg in insn 9
changing reg in insn 10
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 32
changing reg in insn 35
changing reg in insn 37
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
changing reg in insn 52
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 60
changing reg in insn 62
changing reg in insn 63
changing reg in insn 65
changing reg in insn 66
changing reg in insn 69
changing reg in insn 70
changing reg in insn 74
changing reg in insn 75
changing reg in insn 83
changing reg in insn 91
deleting insn with uid = 19.
deleting insn with uid = 97.
deleting insn with uid = 114.
deleting insn with uid = 118.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 98.


change_ldt

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={51d,50u} r1={13d,10u,2e} r2={7d,4u} r3={1d,12u} r4={2d,2u} r5={2d,2u} r7={7d,45u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={3e} r17={45d,2u} r18={2d} r19={2e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 392{258d,127u,7e} in 95{93 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 123 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 123 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 123 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 2 9 2 (set (reg:SI 0 ax [130])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [1 text_size+0 S4 A32])) "fs/exec.c":148:16 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 0 ax [129])
                (plus:SI (reg:SI 0 ax [130])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":148:16 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:SI 16 argp) [1 text_size+0 S4 A32])
            (const_int 4095 [0xfff]))
        (nil)))
(insn 10 9 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 code_limit+0 S4 A32])
        (reg:SI 0 ax [129])) "fs/exec.c":148:16 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 20 [0x14])) [1 code_limit+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [1 code_limit+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":149:16 490 {*andsi_1}
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 data_limit+0 S4 A32])
        (const_int 67108864 [0x4000000])) "fs/exec.c":150:16 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 0 ax [131])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":151:17 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 0 ax [orig:83 current.20_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [131]) [5 current+0 S4 A32])) "fs/exec.c":151:17 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [orig:83 current.20_1 ] [83])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":151:17 209 {*addsi_1}
     (nil))
(insn 16 15 17 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 0 ax [orig:84 _2 ] [84])) "fs/exec.c":151:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7a64a9d15900 _get_base>) [0 _get_base S1 A8])
            (const_int 4 [0x4]))) "fs/exec.c":151:17 823 {*call_value}
     (nil)
    (nil))
(insn 18 17 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":151:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 20 18 21 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 code_base+0 S4 A32])
        (reg:SI 0 ax [132])) "fs/exec.c":151:17 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SI 0 ax [133])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 code_base+0 S4 A32])) "fs/exec.c":152:15 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [1 data_base+0 S4 A32])
        (reg:SI 0 ax [133])) "fs/exec.c":152:15 75 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:SI 0 ax [134])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 0 ax [orig:85 current.21_3 ] [85])
        (mem/f/c:SI (reg/f:SI 0 ax [134]) [5 current+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (plus:SI (reg/f:SI 0 ax [orig:85 current.21_3 ] [85])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:SI 2 cx [orig:87 _5 ] [87])
                (plus:SI (reg/f:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (nil))
(insn 27 26 28 2 (set (reg/f:SI 0 ax [135])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 0 ax [orig:88 current.22_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [135]) [5 current+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
                (plus:SI (reg/f:SI 0 ax [orig:88 current.22_6 ] [88])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (nil))
(insn 30 29 31 2 (parallel [
            (set (reg/f:SI 4 si [orig:90 _8 ] [90])
                (plus:SI (reg/f:SI 0 ax [orig:89 _7 ] [89])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (nil))
(insn 31 30 32 2 (set (reg/f:SI 0 ax [136])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:SI 0 ax [orig:91 current.23_9 ] [91])
        (mem/f/c:SI (reg/f:SI 0 ax [136]) [5 current+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
                (plus:SI (reg/f:SI 0 ax [orig:91 current.23_9 ] [91])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg/f:SI 5 di [orig:93 _11 ] [93])
                (plus:SI (reg/f:SI 0 ax [orig:92 _10 ] [92])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 209 {*addsi_1}
     (nil))
(insn 35 34 125 2 (set (reg:SI 0 ax [137])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 code_base+0 S4 A32])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 125 35 36 2 (set (reg:SI 1 dx [137])
        (reg:SI 0 ax [137])) "fs/exec.c":153:5 75 {*movsi_internal}
     (nil))
(insn 36 125 37 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %%dl, %1
	movb %%dh, %2
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 2 cx [orig:87 _5 ] [87]) [0 *_5+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:90 _8 ] [90]) [0 *_8+0 S1 A8])
                    (mem:QI (reg/f:SI 5 di [orig:93 _11 ] [93]) [0 *_11+0 S1 A8])
                    (reg:SI 1 dx [137])
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:153)
                    (asm_input:QI ("m") fs/exec.c:153)
                    (asm_input:QI ("m") fs/exec.c:153)
                    (asm_input:SI ("d") fs/exec.c:153)
                ]
                 [] fs/exec.c:153)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":153:5 -1
     (nil))
(insn 37 36 38 2 (set (reg/f:SI 0 ax [138])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg/f:SI 0 ax [orig:94 current.24_12 ] [94])
        (mem/f/c:SI (reg/f:SI 0 ax [138]) [5 current+0 S4 A32])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg/f:SI 2 cx [orig:95 _13 ] [95])
                (plus:SI (reg/f:SI 0 ax [orig:94 current.24_12 ] [94])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (nil))
(insn 40 39 41 2 (set (reg/f:SI 0 ax [139])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg/f:SI 0 ax [orig:96 current.25_14 ] [96])
        (mem/f/c:SI (reg/f:SI 0 ax [139]) [5 current+0 S4 A32])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
                (plus:SI (reg/f:SI 0 ax [orig:96 current.25_14 ] [96])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg/f:SI 0 ax [orig:98 _16 ] [98])
                (plus:SI (reg/f:SI 0 ax [orig:97 _15 ] [97])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (nil))
(insn 44 43 45 2 (set (reg:SI 1 dx [140])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 code_limit+0 S4 A32])) "fs/exec.c":154:5 75 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (parallel [
            (set (reg:SI 1 dx [orig:99 _17 ] [99])
                (plus:SI (reg:SI 1 dx [140])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 code_limit+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 46 45 47 2 (parallel [
            (set (reg:SI 1 dx [orig:100 _18 ] [100])
                (lshiftrt:SI (reg:SI 1 dx [orig:99 _17 ] [99])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 701 {*lshrsi3_1}
     (nil))
(insn 47 46 48 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %1, %%dh
	andb $0xf0, %%dh
	orb %%dh, %%dl
	movb %%dl, %1
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 2 cx [orig:95 _13 ] [95]) [0 MEM[(char *)_13]+0 S1 A8])
                    (mem:QI (reg/f:SI 0 ax [orig:98 _16 ] [98]) [0 *_16+0 S1 A8])
                    (reg:SI 1 dx [orig:100 _18 ] [100])
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:154)
                    (asm_input:QI ("m") fs/exec.c:154)
                    (asm_input:SI ("d") fs/exec.c:154)
                ]
                 [] fs/exec.c:154)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":154:5 -1
     (nil))
(insn 48 47 49 2 (set (reg/f:SI 0 ax [141])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 49 48 50 2 (set (reg/f:SI 0 ax [orig:101 current.26_19 ] [101])
        (mem/f/c:SI (reg/f:SI 0 ax [141]) [5 current+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 50 49 51 2 (parallel [
            (set (reg/f:SI 0 ax [orig:102 _20 ] [102])
                (plus:SI (reg/f:SI 0 ax [orig:101 current.26_19 ] [101])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (nil))
(insn 51 50 52 2 (parallel [
            (set (reg/f:SI 2 cx [orig:103 _21 ] [103])
                (plus:SI (reg/f:SI 0 ax [orig:102 _20 ] [102])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (nil))
(insn 52 51 53 2 (set (reg/f:SI 0 ax [142])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg/f:SI 0 ax [orig:104 current.27_22 ] [104])
        (mem/f/c:SI (reg/f:SI 0 ax [142]) [5 current+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 54 53 55 2 (parallel [
            (set (reg/f:SI 0 ax [orig:105 _23 ] [105])
                (plus:SI (reg/f:SI 0 ax [orig:104 current.27_22 ] [104])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (nil))
(insn 55 54 56 2 (parallel [
            (set (reg/f:SI 4 si [orig:106 _24 ] [106])
                (plus:SI (reg/f:SI 0 ax [orig:105 _23 ] [105])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (nil))
(insn 56 55 57 2 (set (reg/f:SI 0 ax [143])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 57 56 58 2 (set (reg/f:SI 0 ax [orig:107 current.28_25 ] [107])
        (mem/f/c:SI (reg/f:SI 0 ax [143]) [5 current+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 58 57 59 2 (parallel [
            (set (reg/f:SI 0 ax [orig:108 _26 ] [108])
                (plus:SI (reg/f:SI 0 ax [orig:107 current.28_25 ] [107])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (nil))
(insn 59 58 60 2 (parallel [
            (set (reg/f:SI 5 di [orig:109 _27 ] [109])
                (plus:SI (reg/f:SI 0 ax [orig:108 _26 ] [108])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 209 {*addsi_1}
     (nil))
(insn 60 59 126 2 (set (reg:SI 0 ax [144])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [1 data_base+0 S4 A32])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 126 60 61 2 (set (reg:SI 1 dx [144])
        (reg:SI 0 ax [144])) "fs/exec.c":155:5 75 {*movsi_internal}
     (nil))
(insn 61 126 62 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %%dl, %1
	movb %%dh, %2
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 2 cx [orig:103 _21 ] [103]) [0 *_21+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:106 _24 ] [106]) [0 *_24+0 S1 A8])
                    (mem:QI (reg/f:SI 5 di [orig:109 _27 ] [109]) [0 *_27+0 S1 A8])
                    (reg:SI 1 dx [144])
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:155)
                    (asm_input:QI ("m") fs/exec.c:155)
                    (asm_input:QI ("m") fs/exec.c:155)
                    (asm_input:SI ("d") fs/exec.c:155)
                ]
                 [] fs/exec.c:155)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":155:5 -1
     (nil))
(insn 62 61 63 2 (set (reg/f:SI 0 ax [145])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 63 62 64 2 (set (reg/f:SI 0 ax [orig:110 current.29_28 ] [110])
        (mem/f/c:SI (reg/f:SI 0 ax [145]) [5 current+0 S4 A32])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 64 63 65 2 (parallel [
            (set (reg/f:SI 2 cx [orig:111 _29 ] [111])
                (plus:SI (reg/f:SI 0 ax [orig:110 current.29_28 ] [110])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (nil))
(insn 65 64 66 2 (set (reg/f:SI 0 ax [146])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg/f:SI 0 ax [orig:112 current.30_30 ] [112])
        (mem/f/c:SI (reg/f:SI 0 ax [146]) [5 current+0 S4 A32])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 67 66 68 2 (parallel [
            (set (reg/f:SI 0 ax [orig:113 _31 ] [113])
                (plus:SI (reg/f:SI 0 ax [orig:112 current.30_30 ] [112])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (nil))
(insn 68 67 69 2 (parallel [
            (set (reg/f:SI 0 ax [orig:114 _32 ] [114])
                (plus:SI (reg/f:SI 0 ax [orig:113 _31 ] [113])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (nil))
(insn 69 68 70 2 (set (reg:SI 1 dx [147])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 data_limit+0 S4 A32])) "fs/exec.c":156:5 75 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (parallel [
            (set (reg:SI 1 dx [orig:115 _33 ] [115])
                (plus:SI (reg:SI 1 dx [147])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 data_limit+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 71 70 72 2 (parallel [
            (set (reg:SI 1 dx [orig:116 _34 ] [116])
                (lshiftrt:SI (reg:SI 1 dx [orig:115 _33 ] [115])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 701 {*lshrsi3_1}
     (nil))
(insn 72 71 73 2 (parallel [
            (asm_operands/v ("push %%edx
	movw %%dx, %0
	rorl $16, %%edx
	movb %1, %%dh
	andb $0xf0, %%dh
	orb %%dh, %%dl
	movb %%dl, %1
	pop %%edx") ("") 0 [
                    (mem:QI (reg/f:SI 2 cx [orig:111 _29 ] [111]) [0 MEM[(char *)_29]+0 S1 A8])
                    (mem:QI (reg/f:SI 0 ax [orig:114 _32 ] [114]) [0 *_32+0 S1 A8])
                    (reg:SI 1 dx [orig:116 _34 ] [116])
                ]
                 [
                    (asm_input:QI ("m") fs/exec.c:156)
                    (asm_input:QI ("m") fs/exec.c:156)
                    (asm_input:SI ("d") fs/exec.c:156)
                ]
                 [] fs/exec.c:156)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":156:5 -1
     (nil))
(insn 73 72 74 2 (parallel [
            (asm_operands/v ("pushl $0x17
	pop %%fs") ("") 0 []
                 []
                 [] fs/exec.c:158)
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":158:5 -1
     (nil))
(insn 74 73 75 2 (set (reg:SI 0 ax [148])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 data_limit+0 S4 A32])) "fs/exec.c":159:15 75 {*movsi_internal}
     (nil))
(insn 75 74 76 2 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [1 data_base+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [1 data_base+0 S4 A32])
                    (reg:SI 0 ax [148])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":159:15 209 {*addsi_1}
     (nil))
(insn 76 75 121 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 i+0 S4 A32])
        (const_int 31 [0x1f])) "fs/exec.c":160:12 75 {*movsi_internal}
     (nil))
(jump_insn 121 76 122 2 (set (pc)
        (label_ref 103)) "fs/exec.c":160:5 807 {jump}
     (nil)
 -> 103)
(barrier 122 121 105)
(code_label 105 122 79 3 46 (nil) [1 uses])
(note 79 105 80 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [1 data_base+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [1 data_base+0 S4 A32])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":161:19 209 {*addsi_1}
     (nil))
(insn 81 80 82 3 (set (reg:SI 0 ax [orig:117 i.31_35 ] [117])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 i+0 S4 A32])) "fs/exec.c":162:17 75 {*movsi_internal}
     (nil))
(insn 82 81 83 3 (parallel [
            (set (reg:SI 1 dx [orig:118 _36 ] [118])
                (ashift:SI (reg:SI 0 ax [orig:117 i.31_35 ] [117])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":162:17 655 {*ashlsi3_1}
     (nil))
(insn 83 82 84 3 (set (reg/f:SI 0 ax [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [19 page+0 S4 A32])) "fs/exec.c":162:17 75 {*movsi_internal}
     (nil))
(insn 84 83 85 3 (parallel [
            (set (reg/f:SI 0 ax [orig:119 _37 ] [119])
                (plus:SI (reg/f:SI 0 ax [149])
                    (reg:SI 1 dx [orig:118 _36 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":162:17 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [19 page+0 S4 A32])
            (reg:SI 1 dx [orig:118 _36 ] [118]))
        (nil)))
(insn 85 84 86 3 (set (reg:SI 0 ax [orig:120 _38 ] [120])
        (mem:SI (reg/f:SI 0 ax [orig:119 _37 ] [119]) [1 *_37+0 S4 A32])) "fs/exec.c":162:17 75 {*movsi_internal}
     (nil))
(insn 86 85 87 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:120 _38 ] [120])
            (const_int 0 [0]))) "fs/exec.c":162:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 87 86 88 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "fs/exec.c":162:12 806 {*jcc}
     (nil)
 -> 100)
(note 88 87 89 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 4 (set (reg:SI 0 ax [orig:121 i.32_39 ] [121])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 i+0 S4 A32])) "fs/exec.c":163:26 75 {*movsi_internal}
     (nil))
(insn 90 89 91 4 (parallel [
            (set (reg:SI 1 dx [orig:122 _40 ] [122])
                (ashift:SI (reg:SI 0 ax [orig:121 i.32_39 ] [121])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:26 655 {*ashlsi3_1}
     (nil))
(insn 91 90 92 4 (set (reg/f:SI 0 ax [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [19 page+0 S4 A32])) "fs/exec.c":163:26 75 {*movsi_internal}
     (nil))
(insn 92 91 93 4 (parallel [
            (set (reg/f:SI 0 ax [orig:123 _41 ] [123])
                (plus:SI (reg/f:SI 0 ax [150])
                    (reg:SI 1 dx [orig:122 _40 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:26 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [19 page+0 S4 A32])
            (reg:SI 1 dx [orig:122 _40 ] [122]))
        (nil)))
(insn 93 92 94 4 (set (reg:SI 0 ax [orig:124 _42 ] [124])
        (mem:SI (reg/f:SI 0 ax [orig:123 _41 ] [123]) [1 *_41+0 S4 A32])) "fs/exec.c":163:13 75 {*movsi_internal}
     (nil))
(insn 94 93 95 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 95 94 96 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [1 data_base+0 S4 A32])) "fs/exec.c":163:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 96 95 98 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:124 _42 ] [124])) "fs/exec.c":163:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 98 96 99 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("put_page") [flags 0x41]  <function_decl 0x7a64a9d38c00 put_page>) [0 put_page S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":163:13 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 99 98 100 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":163:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 100 99 101 5 45 (nil) [1 uses])
(note 101 100 102 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 24 [0x18])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 24 [0x18])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":160:42 209 {*addsi_1}
     (nil))
(code_label 103 102 104 6 44 (nil) [1 uses])
(note 104 103 108 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 108 104 109 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":160:35 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 109 108 110 6 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "fs/exec.c":160:35 806 {*jcc}
     (nil)
 -> 105)
(note 110 109 111 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 119 7 (set (reg:SI 0 ax [orig:125 _57 ] [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 data_limit+0 S4 A32])) "fs/exec.c":165:12 75 {*movsi_internal}
     (nil))
(insn 119 111 124 7 (use (reg/i:SI 0 ax)) "fs/exec.c":166:1 -1
     (nil))
(note 124 119 0 NOTE_INSN_DELETED)

;; Function do_execve (do_execve, funcdef_no=12, decl_uid=1500, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=1280, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=1264, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 872:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 68:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 80:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 89:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 97:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 103:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 108:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 116:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 123:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 125:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 136:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 138:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) qm {*zero_extendqihi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 147:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 152:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 154:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 160:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) r {*cmphi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 171:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 174:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 176:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 181:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 197:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 203:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 205:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 207:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 212:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 219:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) qm  (1) qn {*cmpqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 228:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 229:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 232:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 236:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 237:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 241:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 242:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 246:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 247:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 248:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 250:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 254:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 256:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 257:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 261:  (0) m  (1) qn {*movqi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 262:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 263:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 267:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 271:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 276:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 277:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) qm  (1) qn {*cmpqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 282:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 286:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 291:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 297:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 299:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 300:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 305:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 310:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 311:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 314:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 318:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 323:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 328:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 335:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 340:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 341:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 342:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 344:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 348:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 349:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 353:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 356:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 361:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 363:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 365:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 366:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 367:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 370:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 375:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 377:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 380:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 383:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 385:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 389:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 392:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 397:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 399:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 400:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 402:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 405:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 406:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 408:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 409:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 412:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 415:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 417:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 421:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 423:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 424:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 425:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 428:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (1) lBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 435:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 436:  (1) lBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 438:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 441:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 442:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 445:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 446:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 448:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 449:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 452:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 455:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 456:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 461:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 464:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 473:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 477:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 486:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 490:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 494
	 Choosing alt 0 in insn 494:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 508:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 511:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 520:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 524:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 534:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 535:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 537:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 540:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 541:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 546:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 549:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 551:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 552:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 557:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 559:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 560:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 561:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 563:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 565:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 566:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 568:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 570:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 571:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 574:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 579:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 580:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 581:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 587:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 588:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 592:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 596:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 598:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 599:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 606:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 608
	 Choosing alt 0 in insn 608:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 609:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 610:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 619:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 623:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 626:  (0) =r  (1) g {*movsi_internal}
            2 Small class reload: reject+=3
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 627:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=331 from oldreg=163, assigning class GENERAL_REGS to r331
      Creating newreg=332, assigning class CREG to r332
  627: {r331:SI=r331:SI 0>>r332:QI;clobber flags:CC;}
      REG_DEAD r301:SI
      REG_DEAD r163:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  874: r331:SI=r163:SI
  876: r332:QI=r301:SI#0
    Inserting insn reload after:
  875: r164:SI=r331:SI

            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 876:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 628:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 632:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 633:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 635:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 636:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 639:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 650:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 651:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 656:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 657:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 658:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 660:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 661:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 663:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 667:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 668:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) =r  (1) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 669:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 672:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 673:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 675:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 676:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 679:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 681:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 686:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 688:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 689:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 690:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 695:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 698:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 700:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 701:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 702:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 703:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 704:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 705:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 707:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 709:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 710:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 712:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 714:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 715:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 716:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 717:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 719:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 720:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 723:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 725:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 726:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 727:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 728:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 729
	 Choosing alt 0 in insn 729:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 730:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 731:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 733:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 734
	 Choosing alt 0 in insn 734:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 735:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 736:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 737:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 738:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 739:  (0) =rm  (1) %0  (2) re {*andsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 740:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 742:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 744:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 745:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 746:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 747:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 748:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 750:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 751:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 753
	 Choosing alt 0 in insn 753:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 754:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 758:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 759:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 760:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 762:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 763:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 764:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 766:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 770:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 775:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 776:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 777:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 778:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 779:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 780:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 781:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 782:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 787:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 790:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 791:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 794:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 799:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 800:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 803:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 804:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 805:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 811:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6 7 8
EBB 9
EBB 10 11
EBB 12 13
EBB 14
EBB 15 16
EBB 17
EBB 18 19
EBB 20 21
EBB 22 23 24
EBB 25
EBB 26 27
EBB 28 29 30 31 32
EBB 33
EBB 34 35
EBB 36 37
EBB 38
EBB 39
EBB 40 41
EBB 42
EBB 43 44 45
EBB 46 47
EBB 48 49
EBB 50 51
EBB 52 53
EBB 54 55
EBB 56
EBB 57 58 59 60 61 62
EBB 63
EBB 64
EBB 65
EBB 66 67
EBB 68 69 70
EBB 71 72
EBB 73
EBB 74
EBB 75 76
EBB 77 78
EBB 79
EBB 80 81 82
EBB 83
EBB 84
EBB 85 86
EBB 87
EBB 88
EBB 89
EBB 90 91
EBB 92

********** Pseudo live ranges #1: **********

  BB 92
   Insn 824: point = 0, n_alt = -1
   Insn 823: point = 0, n_alt = -2
   Insn 819: point = 1, n_alt = -2
  BB 86
   Insn 868: point = 4, n_alt = -1
   Insn 782: point = 4, n_alt = 0
   Insn 781: point = 5, n_alt = 1
   Insn 780: point = 6, n_alt = 0
   Insn 779: point = 7, n_alt = 3
   Insn 778: point = 9, n_alt = 0
   Insn 777: point = 10, n_alt = 1
   Insn 776: point = 11, n_alt = 0
   Insn 775: point = 12, n_alt = 0
  BB 85
   Insn 773: point = 13, n_alt = -1
   Insn 772: point = 13, n_alt = 0
   Insn 770: point = 14, n_alt = 0
   Insn 769: point = 16, n_alt = 0
  BB 83
   Insn 866: point = 17, n_alt = -1
   Insn 754: point = 17, n_alt = 1
   Insn 753: point = 18, n_alt = 0
   Insn 752: point = 20, n_alt = 0
   Insn 751: point = 21, n_alt = 0
   Insn 750: point = 22, n_alt = 3
   Insn 749: point = 23, n_alt = 0
   Insn 748: point = 25, n_alt = 0
   Insn 747: point = 26, n_alt = 0
   Insn 746: point = 28, n_alt = 0
   Insn 745: point = 30, n_alt = 3
   Insn 744: point = 31, n_alt = 0
   Insn 743: point = 33, n_alt = 0
   Insn 742: point = 34, n_alt = 0
   Insn 741: point = 36, n_alt = 0
   Insn 740: point = 37, n_alt = 1
   Insn 739: point = 38, n_alt = 0
   Insn 738: point = 40, n_alt = 0
   Insn 737: point = 41, n_alt = 0
   Insn 736: point = 43, n_alt = 0
   Insn 735: point = 44, n_alt = 1
   Insn 734: point = 45, n_alt = 0
   Insn 733: point = 47, n_alt = 0
   Insn 732: point = 49, n_alt = 0
   Insn 731: point = 50, n_alt = 0
   Insn 730: point = 52, n_alt = 1
   Insn 729: point = 53, n_alt = 0
   Insn 728: point = 55, n_alt = 0
   Insn 727: point = 57, n_alt = 0
   Insn 726: point = 58, n_alt = 0
   Insn 725: point = 60, n_alt = 1
   Insn 724: point = 61, n_alt = 0
   Insn 723: point = 62, n_alt = 0
   Insn 722: point = 64, n_alt = 0
   Insn 721: point = 65, n_alt = 0
   Insn 720: point = 66, n_alt = 0
   Insn 719: point = 67, n_alt = 1
   Insn 718: point = 68, n_alt = -2
   Insn 717: point = 69, n_alt = 0
   Insn 716: point = 69, n_alt = 0
   Insn 715: point = 69, n_alt = 0
   Insn 714: point = 70, n_alt = 0
   Insn 713: point = 70, n_alt = 0
   Insn 712: point = 70, n_alt = 0
   Insn 711: point = 70, n_alt = 0
   Insn 710: point = 71, n_alt = 0
   Insn 709: point = 72, n_alt = 0
   Insn 708: point = 74, n_alt = -2
   Insn 707: point = 75, n_alt = 0
   Insn 706: point = 75, n_alt = 0
   Insn 705: point = 75, n_alt = 0
   Insn 704: point = 76, n_alt = 0
   Insn 703: point = 77, n_alt = 3
   Insn 702: point = 78, n_alt = 0
   Insn 701: point = 78, n_alt = 0
   Insn 700: point = 79, n_alt = 3
   Insn 699: point = 80, n_alt = 0
   Insn 698: point = 82, n_alt = 0
  BB 82
   Insn 695: point = 84, n_alt = 1
   Insn 694: point = 85, n_alt = 0
  BB 81
   Insn 692: point = 87, n_alt = -1
   Insn 691: point = 87, n_alt = 0
   Insn 690: point = 88, n_alt = 0
   Insn 689: point = 90, n_alt = 0
   Insn 688: point = 91, n_alt = 0
   Insn 687: point = 93, n_alt = 0
   Insn 686: point = 94, n_alt = 0
   Insn 685: point = 94, n_alt = 0
   Insn 684: point = 94, n_alt = -2
   Insn 683: point = 94, n_alt = 0
   Insn 682: point = 95, n_alt = 0
   Insn 681: point = 96, n_alt = 0
   Insn 680: point = 96, n_alt = -2
   Insn 679: point = 97, n_alt = 0
   Insn 678: point = 97, n_alt = 0
   Insn 677: point = 97, n_alt = 0
   Insn 676: point = 98, n_alt = 0
   Insn 675: point = 98, n_alt = 0
   Insn 674: point = 100, n_alt = 0
   Insn 673: point = 102, n_alt = 0
   Insn 672: point = 103, n_alt = 0
   Insn 669: point = 104, n_alt = 1
   Insn 671: point = 105, n_alt = 0
   Insn 670: point = 107, n_alt = 0
   Insn 668: point = 108, n_alt = 0
   Insn 667: point = 108, n_alt = 0
   Insn 666: point = 108, n_alt = -2
   Insn 665: point = 108, n_alt = 0
   Insn 664: point = 109, n_alt = 0
   Insn 663: point = 110, n_alt = 0
   Insn 662: point = 110, n_alt = -2
   Insn 661: point = 111, n_alt = 0
   Insn 660: point = 111, n_alt = 0
   Insn 659: point = 111, n_alt = 0
   Insn 658: point = 112, n_alt = 0
   Insn 657: point = 112, n_alt = 0
   Insn 656: point = 114, n_alt = 0
   Insn 655: point = 116, n_alt = 0
   Insn 654: point = 117, n_alt = 0
   Insn 651: point = 118, n_alt = 1
   Insn 653: point = 119, n_alt = 0
   Insn 652: point = 121, n_alt = 0
   Insn 650: point = 122, n_alt = 1
   Insn 649: point = 123, n_alt = 0
   Insn 648: point = 125, n_alt = 0
  BB 80
   Insn 646: point = 127, n_alt = -1
   Insn 645: point = 127, n_alt = 0
  BB 76
   Insn 864: point = 128, n_alt = -1
   Insn 619: point = 128, n_alt = 1
  BB 75
   Insn 617: point = 129, n_alt = -1
   Insn 616: point = 129, n_alt = 0
  BB 73
   Insn 862: point = 130, n_alt = -1
   Insn 599: point = 130, n_alt = 1
   Insn 598: point = 130, n_alt = 1
   Insn 597: point = 131, n_alt = 0
   Insn 596: point = 132, n_alt = 0
   Insn 595: point = 134, n_alt = 0
  BB 72
   Insn 592: point = 136, n_alt = 0
   Insn 591: point = 136, n_alt = 0
   Insn 590: point = 136, n_alt = -2
   Insn 589: point = 136, n_alt = 0
   Insn 588: point = 137, n_alt = 0
   Insn 587: point = 137, n_alt = 0
   Insn 586: point = 139, n_alt = 0
   Insn 585: point = 141, n_alt = 0
  BB 71
   Insn 583: point = 143, n_alt = -1
   Insn 582: point = 143, n_alt = 0
   Insn 581: point = 144, n_alt = 0
   Insn 580: point = 146, n_alt = 0
   Insn 579: point = 148, n_alt = 0
  BB 74
   Insn 610: point = 150, n_alt = 0
   Insn 609: point = 150, n_alt = 1
   Insn 608: point = 151, n_alt = 0
   Insn 607: point = 153, n_alt = 0
   Insn 606: point = 155, n_alt = 0
   Insn 605: point = 157, n_alt = 0
   Insn 604: point = 158, n_alt = 0
   Insn 603: point = 160, n_alt = 0
  BB 79
   Insn 639: point = 162, n_alt = 0
  BB 78
   Insn 636: point = 163, n_alt = 0
   Insn 635: point = 163, n_alt = 0
   Insn 634: point = 163, n_alt = -2
   Insn 633: point = 163, n_alt = 0
   Insn 632: point = 163, n_alt = 0
  BB 77
   Insn 630: point = 164, n_alt = -1
   Insn 629: point = 164, n_alt = 0
   Insn 628: point = 165, n_alt = 0
   Insn 875: point = 167, n_alt = -2
	Hard reg 0 is preferable by r331 with profit 1000
   Insn 627: point = 169, n_alt = 0
   Insn 876: point = 171, n_alt = 0
   Insn 874: point = 173, n_alt = -2
	Hard reg 0 is preferable by r331 with profit 1000
	Hard reg 1 is preferable by r331 with profit 1000
   Insn 626: point = 175, n_alt = 0
   Insn 625: point = 176, n_alt = 0
   Insn 624: point = 178, n_alt = 0
   Insn 623: point = 180, n_alt = 0
  BB 84
   Insn 766: point = 182, n_alt = 0
   Insn 765: point = 182, n_alt = 0
   Insn 764: point = 182, n_alt = 0
   Insn 763: point = 182, n_alt = 0
   Insn 762: point = 183, n_alt = 0
   Insn 761: point = 183, n_alt = -2
   Insn 760: point = 185, n_alt = 1
   Insn 759: point = 186, n_alt = 3
   Insn 758: point = 187, n_alt = 0
  BB 8
   Insn 828: point = 188, n_alt = -1
   Insn 48: point = 188, n_alt = 0
  BB 91
   Insn 814: point = 189, n_alt = 0
  BB 90
   Insn 812: point = 190, n_alt = -1
   Insn 811: point = 190, n_alt = 0
  BB 88
   Insn 870: point = 191, n_alt = -1
   Insn 794: point = 191, n_alt = 1
  BB 55
   Insn 850: point = 192, n_alt = -1
   Insn 456: point = 192, n_alt = 1
   Insn 455: point = 192, n_alt = 0
   Insn 454: point = 192, n_alt = 0
   Insn 453: point = 192, n_alt = 0
   Insn 452: point = 192, n_alt = 0
  BB 38
   Insn 844: point = 193, n_alt = -1
   Insn 291: point = 193, n_alt = 1
  BB 87
   Insn 791: point = 194, n_alt = 0
   Insn 790: point = 194, n_alt = 0
   Insn 789: point = 194, n_alt = -2
   Insn 788: point = 194, n_alt = 0
   Insn 787: point = 194, n_alt = 0
  BB 70
   Insn 860: point = 195, n_alt = -1
   Insn 574: point = 195, n_alt = 1
  BB 69
   Insn 572: point = 196, n_alt = -1
   Insn 571: point = 196, n_alt = 1
   Insn 570: point = 196, n_alt = 1
   Insn 569: point = 197, n_alt = -2
   Insn 568: point = 198, n_alt = 0
   Insn 567: point = 198, n_alt = 0
   Insn 566: point = 198, n_alt = 0
   Insn 565: point = 198, n_alt = 0
   Insn 564: point = 198, n_alt = 0
   Insn 563: point = 199, n_alt = 3
   Insn 562: point = 200, n_alt = 0
   Insn 561: point = 200, n_alt = 0
   Insn 560: point = 200, n_alt = 0
   Insn 559: point = 200, n_alt = 1
   Insn 558: point = 201, n_alt = -2
   Insn 557: point = 202, n_alt = 0
   Insn 556: point = 202, n_alt = 0
   Insn 555: point = 202, n_alt = 0
   Insn 554: point = 202, n_alt = 0
   Insn 553: point = 202, n_alt = 0
   Insn 552: point = 203, n_alt = 3
   Insn 551: point = 204, n_alt = 0
   Insn 550: point = 204, n_alt = 0
   Insn 549: point = 204, n_alt = 0
  BB 68
   Insn 547: point = 205, n_alt = -1
   Insn 546: point = 205, n_alt = 1
  BB 65
   Insn 856: point = 206, n_alt = -1
   Insn 524: point = 206, n_alt = 1
  BB 27
   Insn 840: point = 207, n_alt = -1
   Insn 187: point = 207, n_alt = 1
  BB 25
   Insn 838: point = 208, n_alt = -1
   Insn 165: point = 208, n_alt = 1
  BB 11
   Insn 830: point = 209, n_alt = -1
   Insn 74: point = 209, n_alt = 1
  BB 67
   Insn 858: point = 210, n_alt = -1
   Insn 541: point = 210, n_alt = 1
   Insn 540: point = 210, n_alt = 0
   Insn 539: point = 210, n_alt = 0
   Insn 538: point = 210, n_alt = -2
   Insn 537: point = 210, n_alt = 0
   Insn 536: point = 211, n_alt = 0
   Insn 535: point = 212, n_alt = 0
   Insn 534: point = 213, n_alt = 0
   Insn 533: point = 213, n_alt = 0
  BB 66
   Insn 531: point = 215, n_alt = -1
   Insn 530: point = 215, n_alt = 0
   Insn 529: point = 216, n_alt = 0
  BB 64
   Insn 521: point = 218, n_alt = -1
   Insn 520: point = 218, n_alt = 0
   Insn 519: point = 219, n_alt = 0
  BB 62
   Insn 854: point = 222, n_alt = -1
   Insn 511: point = 222, n_alt = 0
  BB 63
   Insn 516: point = 224, n_alt = 0
  BB 61
   Insn 509: point = 226, n_alt = -1
   Insn 508: point = 226, n_alt = 0
   Insn 507: point = 227, n_alt = 0
   Insn 506: point = 228, n_alt = 0
   Insn 505: point = 230, n_alt = 0
   Insn 504: point = 231, n_alt = 0
   Insn 503: point = 233, n_alt = 0
   Insn 502: point = 234, n_alt = 0
   Insn 501: point = 235, n_alt = 0
   Insn 500: point = 237, n_alt = 0
  BB 60
   Insn 498: point = 239, n_alt = -1
   Insn 497: point = 239, n_alt = 0
   Insn 494: point = 240, n_alt = 0
   Insn 493: point = 242, n_alt = 0
   Insn 492: point = 243, n_alt = 0
   Insn 491: point = 245, n_alt = 0
   Insn 490: point = 246, n_alt = 0
  BB 59
   Insn 488: point = 248, n_alt = -1
   Insn 487: point = 248, n_alt = 0
   Insn 486: point = 249, n_alt = 0
  BB 58
   Insn 484: point = 251, n_alt = -1
   Insn 483: point = 251, n_alt = 0
   Insn 482: point = 252, n_alt = 0
  BB 57
   Insn 480: point = 254, n_alt = -1
   Insn 479: point = 254, n_alt = 0
   Insn 478: point = 255, n_alt = 0
   Insn 477: point = 256, n_alt = 0
   Insn 476: point = 256, n_alt = 0
   Insn 475: point = 256, n_alt = -2
   Insn 474: point = 256, n_alt = 0
   Insn 473: point = 256, n_alt = 0
  BB 53
   Insn 848: point = 257, n_alt = -1
   Insn 428: point = 257, n_alt = 1
  BB 52
   Insn 426: point = 258, n_alt = -1
   Insn 425: point = 258, n_alt = 1
   Insn 424: point = 258, n_alt = 0
   Insn 423: point = 258, n_alt = 1
   Insn 422: point = 259, n_alt = -2
   Insn 421: point = 260, n_alt = 0
   Insn 420: point = 260, n_alt = 0
   Insn 419: point = 260, n_alt = 0
   Insn 418: point = 260, n_alt = 0
   Insn 417: point = 261, n_alt = 3
   Insn 416: point = 262, n_alt = 0
   Insn 415: point = 263, n_alt = 3
   Insn 414: point = 264, n_alt = 0
   Insn 413: point = 264, n_alt = 0
   Insn 412: point = 264, n_alt = 0
  BB 51
   Insn 409: point = 265, n_alt = 0
   Insn 408: point = 265, n_alt = 1
   Insn 407: point = 266, n_alt = -2
   Insn 406: point = 267, n_alt = 0
   Insn 405: point = 267, n_alt = 0
   Insn 404: point = 267, n_alt = 0
   Insn 403: point = 267, n_alt = 0
   Insn 402: point = 268, n_alt = 3
   Insn 401: point = 269, n_alt = 0
   Insn 400: point = 270, n_alt = 3
   Insn 399: point = 271, n_alt = 0
   Insn 398: point = 271, n_alt = 0
   Insn 397: point = 271, n_alt = 0
  BB 50
   Insn 395: point = 272, n_alt = -1
   Insn 394: point = 272, n_alt = 0
   Insn 393: point = 273, n_alt = 0
   Insn 392: point = 274, n_alt = 0
   Insn 391: point = 274, n_alt = 1
   Insn 390: point = 275, n_alt = -2
   Insn 389: point = 276, n_alt = 0
   Insn 388: point = 276, n_alt = 0
   Insn 387: point = 276, n_alt = 0
   Insn 386: point = 276, n_alt = 0
   Insn 385: point = 277, n_alt = 3
   Insn 384: point = 278, n_alt = 0
   Insn 383: point = 279, n_alt = 3
   Insn 382: point = 280, n_alt = 0
   Insn 381: point = 280, n_alt = 0
   Insn 380: point = 280, n_alt = 0
  BB 49
   Insn 377: point = 281, n_alt = 1
   Insn 376: point = 282, n_alt = -2
   Insn 375: point = 283, n_alt = 0
   Insn 374: point = 283, n_alt = 0
   Insn 373: point = 283, n_alt = 0
   Insn 372: point = 283, n_alt = 0
   Insn 371: point = 284, n_alt = 0
   Insn 370: point = 285, n_alt = 3
   Insn 369: point = 286, n_alt = 0
   Insn 368: point = 286, n_alt = 0
   Insn 367: point = 286, n_alt = 0
   Insn 366: point = 286, n_alt = 0
   Insn 365: point = 286, n_alt = 3
   Insn 364: point = 288, n_alt = 0
   Insn 363: point = 289, n_alt = 1
   Insn 362: point = 290, n_alt = -2
   Insn 361: point = 291, n_alt = 0
   Insn 360: point = 291, n_alt = 0
   Insn 359: point = 291, n_alt = 0
   Insn 358: point = 291, n_alt = 0
   Insn 357: point = 291, n_alt = 0
   Insn 356: point = 292, n_alt = 3
   Insn 355: point = 293, n_alt = 0
   Insn 354: point = 293, n_alt = 0
   Insn 353: point = 293, n_alt = 0
  BB 48
   Insn 351: point = 294, n_alt = -1
   Insn 350: point = 294, n_alt = 0
   Insn 349: point = 295, n_alt = 1
   Insn 348: point = 296, n_alt = 3
   Insn 347: point = 297, n_alt = 0
  BB 47
   Insn 344: point = 299, n_alt = 1
   Insn 343: point = 300, n_alt = 0
   Insn 342: point = 301, n_alt = 8
   Insn 341: point = 302, n_alt = 1
   Insn 340: point = 303, n_alt = 3
   Insn 339: point = 304, n_alt = 0
  BB 46
   Insn 337: point = 306, n_alt = -1
   Insn 336: point = 306, n_alt = 0
   Insn 335: point = 307, n_alt = 4
   Insn 334: point = 309, n_alt = 0
  BB 43
   Insn 320: point = 311, n_alt = -1
   Insn 319: point = 311, n_alt = 0
   Insn 318: point = 312, n_alt = 4
   Insn 317: point = 314, n_alt = 0
  BB 39
   Insn 846: point = 316, n_alt = -1
   Insn 300: point = 316, n_alt = 1
   Insn 299: point = 316, n_alt = 1
   Insn 298: point = 317, n_alt = 0
   Insn 297: point = 318, n_alt = 1
   Insn 296: point = 319, n_alt = 0
  BB 37
   Insn 288: point = 321, n_alt = -1
   Insn 287: point = 321, n_alt = 0
   Insn 286: point = 322, n_alt = 4
   Insn 285: point = 324, n_alt = 0
  BB 36
   Insn 283: point = 326, n_alt = -1
   Insn 282: point = 326, n_alt = 1
  BB 35
   Insn 279: point = 327, n_alt = -1
   Insn 278: point = 327, n_alt = 0
   Insn 277: point = 328, n_alt = 4
   Insn 276: point = 330, n_alt = 0
  BB 34
   Insn 274: point = 332, n_alt = -1
   Insn 273: point = 332, n_alt = 0
   Insn 271: point = 333, n_alt = 4
   Insn 270: point = 335, n_alt = 0
  BB 32
   Insn 842: point = 337, n_alt = -1
   Insn 263: point = 337, n_alt = 1
   Insn 262: point = 338, n_alt = 3
   Insn 261: point = 339, n_alt = 8
   Insn 260: point = 340, n_alt = 0
  BB 33
   Insn 267: point = 342, n_alt = 0
  BB 31
   Insn 258: point = 343, n_alt = -1
   Insn 257: point = 343, n_alt = 1
   Insn 256: point = 343, n_alt = 1
   Insn 255: point = 344, n_alt = -2
   Insn 254: point = 345, n_alt = 0
   Insn 253: point = 345, n_alt = 0
   Insn 252: point = 345, n_alt = -2
   Insn 251: point = 345, n_alt = 0
   Insn 250: point = 346, n_alt = 3
   Insn 249: point = 347, n_alt = 0
   Insn 248: point = 347, n_alt = 0
   Insn 247: point = 347, n_alt = 8
   Insn 246: point = 347, n_alt = 0
   Insn 245: point = 347, n_alt = 0
   Insn 244: point = 347, n_alt = -2
   Insn 243: point = 347, n_alt = 0
   Insn 242: point = 347, n_alt = 0
   Insn 241: point = 347, n_alt = 0
   Insn 240: point = 347, n_alt = 0
   Insn 239: point = 347, n_alt = -2
   Insn 238: point = 347, n_alt = 0
   Insn 237: point = 347, n_alt = 0
   Insn 236: point = 347, n_alt = 0
   Insn 235: point = 347, n_alt = 0
   Insn 234: point = 347, n_alt = -2
   Insn 233: point = 347, n_alt = 0
   Insn 232: point = 348, n_alt = 3
   Insn 231: point = 349, n_alt = 0
   Insn 230: point = 350, n_alt = 0
   Insn 229: point = 350, n_alt = 0
   Insn 228: point = 350, n_alt = 0
   Insn 227: point = 352, n_alt = 0
   Insn 226: point = 354, n_alt = 0
  BB 30
   Insn 224: point = 356, n_alt = -1
   Insn 223: point = 356, n_alt = 1
  BB 29
   Insn 221: point = 357, n_alt = -1
   Insn 220: point = 357, n_alt = 0
   Insn 219: point = 358, n_alt = 4
   Insn 218: point = 360, n_alt = 0
   Insn 217: point = 362, n_alt = 0
   Insn 216: point = 364, n_alt = 0
  BB 28
   Insn 214: point = 366, n_alt = -1
   Insn 213: point = 366, n_alt = 0
   Insn 212: point = 367, n_alt = 4
   Insn 211: point = 369, n_alt = 0
   Insn 210: point = 371, n_alt = 0
   Insn 209: point = 372, n_alt = 1
   Insn 208: point = 373, n_alt = 0
   Insn 207: point = 375, n_alt = 1
   Insn 206: point = 376, n_alt = 0
   Insn 205: point = 377, n_alt = 1
   Insn 204: point = 378, n_alt = 0
   Insn 203: point = 379, n_alt = 1
   Insn 202: point = 380, n_alt = 0
   Insn 201: point = 381, n_alt = 1
   Insn 200: point = 382, n_alt = 0
   Insn 199: point = 383, n_alt = 1
   Insn 198: point = 384, n_alt = 0
   Insn 197: point = 385, n_alt = 1
   Insn 196: point = 386, n_alt = 0
   Insn 195: point = 387, n_alt = 1
   Insn 194: point = 388, n_alt = 0
   Insn 193: point = 389, n_alt = 0
   Insn 192: point = 391, n_alt = 0
  BB 26
   Insn 185: point = 393, n_alt = -1
   Insn 184: point = 393, n_alt = 1
   Insn 183: point = 393, n_alt = 1
   Insn 182: point = 394, n_alt = -2
   Insn 181: point = 395, n_alt = 0
   Insn 180: point = 395, n_alt = 0
   Insn 179: point = 395, n_alt = -2
   Insn 178: point = 395, n_alt = 0
   Insn 177: point = 396, n_alt = 0
   Insn 176: point = 397, n_alt = 0
   Insn 175: point = 397, n_alt = 0
   Insn 174: point = 399, n_alt = 2
   Insn 173: point = 401, n_alt = 0
   Insn 172: point = 402, n_alt = 0
   Insn 171: point = 404, n_alt = 2
   Insn 170: point = 406, n_alt = 0
  BB 24
   Insn 162: point = 408, n_alt = -1
   Insn 161: point = 408, n_alt = 0
   Insn 160: point = 409, n_alt = 2
   Insn 159: point = 411, n_alt = 0
   Insn 158: point = 413, n_alt = 0
  BB 23
   Insn 156: point = 415, n_alt = -1
   Insn 155: point = 415, n_alt = 0
   Insn 154: point = 416, n_alt = 0
   Insn 153: point = 418, n_alt = 0
   Insn 152: point = 420, n_alt = 2
   Insn 151: point = 422, n_alt = 0
  BB 22
   Insn 149: point = 424, n_alt = -1
   Insn 148: point = 424, n_alt = 0
   Insn 147: point = 425, n_alt = 0
   Insn 146: point = 427, n_alt = 0
  BB 19
   Insn 836: point = 429, n_alt = -1
   Insn 129: point = 429, n_alt = 0
  BB 21
   Insn 143: point = 430, n_alt = 0
  BB 20
   Insn 141: point = 431, n_alt = -1
   Insn 140: point = 431, n_alt = 0
   Insn 139: point = 432, n_alt = 0
   Insn 138: point = 434, n_alt = 4
   Insn 137: point = 436, n_alt = 0
   Insn 136: point = 437, n_alt = 2
   Insn 135: point = 439, n_alt = 0
   Insn 134: point = 441, n_alt = 0
  BB 18
   Insn 127: point = 443, n_alt = -1
   Insn 126: point = 443, n_alt = 0
   Insn 125: point = 444, n_alt = 2
   Insn 124: point = 446, n_alt = 0
   Insn 123: point = 447, n_alt = 2
   Insn 122: point = 449, n_alt = 0
   Insn 121: point = 451, n_alt = 0
   Insn 120: point = 452, n_alt = 1
  BB 16
   Insn 834: point = 454, n_alt = -1
   Insn 109: point = 454, n_alt = 0
   Insn 108: point = 456, n_alt = 4
   Insn 107: point = 458, n_alt = 0
  BB 17
   Insn 117: point = 460, n_alt = 0
   Insn 116: point = 462, n_alt = 2
   Insn 115: point = 464, n_alt = 0
   Insn 114: point = 466, n_alt = 0
  BB 15
   Insn 105: point = 468, n_alt = -1
   Insn 104: point = 468, n_alt = 0
   Insn 103: point = 469, n_alt = 0
   Insn 102: point = 471, n_alt = 0
   Insn 101: point = 472, n_alt = 1
  BB 13
   Insn 832: point = 474, n_alt = -1
   Insn 90: point = 474, n_alt = 0
   Insn 89: point = 476, n_alt = 2
   Insn 88: point = 478, n_alt = 0
  BB 14
   Insn 98: point = 480, n_alt = 0
   Insn 97: point = 482, n_alt = 2
   Insn 96: point = 484, n_alt = 0
   Insn 95: point = 486, n_alt = 0
  BB 12
   Insn 86: point = 488, n_alt = -1
   Insn 85: point = 488, n_alt = 0
   Insn 84: point = 489, n_alt = 0
   Insn 83: point = 491, n_alt = 0
   Insn 82: point = 492, n_alt = 1
   Insn 81: point = 493, n_alt = 0
   Insn 80: point = 495, n_alt = 2
   Insn 79: point = 497, n_alt = 0
  BB 10
   Insn 72: point = 499, n_alt = -1
   Insn 71: point = 499, n_alt = 0
   Insn 70: point = 500, n_alt = 0
   Insn 69: point = 502, n_alt = 0
   Insn 68: point = 504, n_alt = 2
   Insn 67: point = 506, n_alt = 0
  BB 56
   Insn 852: point = 508, n_alt = -1
   Insn 464: point = 508, n_alt = 0
   Insn 463: point = 508, n_alt = 0
   Insn 462: point = 508, n_alt = 0
   Insn 461: point = 508, n_alt = 0
  BB 54
   Insn 450: point = 509, n_alt = -1
   Insn 449: point = 509, n_alt = 1
   Insn 448: point = 509, n_alt = 1
   Insn 447: point = 510, n_alt = -2
   Insn 446: point = 511, n_alt = 0
   Insn 445: point = 511, n_alt = 0
   Insn 444: point = 511, n_alt = -2
   Insn 443: point = 511, n_alt = 0
   Insn 442: point = 511, n_alt = 0
   Insn 441: point = 511, n_alt = 0
   Insn 440: point = 511, n_alt = 0
   Insn 439: point = 511, n_alt = 0
   Insn 438: point = 512, n_alt = 0
   Insn 437: point = 512, n_alt = -2
   Insn 436: point = 513, n_alt = 0
   Insn 435: point = 513, n_alt = 1
   Insn 434: point = 514, n_alt = -2
   Insn 433: point = 515, n_alt = 0
  BB 9
   Insn 64: point = 516, n_alt = 1
   Insn 63: point = 517, n_alt = -2
   Insn 62: point = 518, n_alt = 0
   Insn 61: point = 518, n_alt = 0
   Insn 60: point = 518, n_alt = 0
   Insn 59: point = 518, n_alt = 0
   Insn 58: point = 518, n_alt = 1
   Insn 57: point = 519, n_alt = -2
   Insn 56: point = 520, n_alt = 0
   Insn 55: point = 520, n_alt = 0
   Insn 54: point = 520, n_alt = 0
   Insn 53: point = 520, n_alt = 0
  BB 7
   Insn 46: point = 521, n_alt = -1
   Insn 45: point = 521, n_alt = 1
   Insn 44: point = 521, n_alt = 1
   Insn 43: point = 522, n_alt = -2
   Insn 42: point = 523, n_alt = 0
   Insn 41: point = 523, n_alt = 0
   Insn 40: point = 523, n_alt = -2
   Insn 39: point = 523, n_alt = 0
   Insn 38: point = 524, n_alt = 0
   Insn 37: point = 524, n_alt = 0
  BB 6
   Insn 35: point = 526, n_alt = -1
   Insn 34: point = 526, n_alt = 0
  BB 4
   Insn 826: point = 527, n_alt = -1
   Insn 22: point = 527, n_alt = 1
  BB 3
   Insn 19: point = 528, n_alt = 0
   Insn 18: point = 528, n_alt = 0
   Insn 17: point = 528, n_alt = -2
   Insn 16: point = 528, n_alt = 0
   Insn 15: point = 529, n_alt = 0
   Insn 14: point = 530, n_alt = 0
  BB 2
   Insn 12: point = 531, n_alt = -1
   Insn 11: point = 531, n_alt = 0
   Insn 10: point = 532, n_alt = 0
   Insn 9: point = 534, n_alt = 0
   Insn 8: point = 536, n_alt = 0
   Insn 7: point = 538, n_alt = 0
   Insn 6: point = 539, n_alt = 1
   Insn 5: point = 539, n_alt = 1
   Insn 872: point = 539, n_alt = 0
  BB 5
   Insn 28: point = 540, n_alt = 0
   Insn 27: point = 540, n_alt = 1
   Insn 26: point = 541, n_alt = 0
  BB 42
   Insn 314: point = 543, n_alt = 0
  BB 41
   Insn 311: point = 544, n_alt = 1
   Insn 310: point = 545, n_alt = 0
   Insn 309: point = 547, n_alt = 0
  BB 40
   Insn 307: point = 549, n_alt = -1
   Insn 306: point = 549, n_alt = 0
   Insn 305: point = 550, n_alt = 4
   Insn 304: point = 552, n_alt = 0
  BB 45
   Insn 331: point = 554, n_alt = -1
   Insn 330: point = 554, n_alt = 0
   Insn 328: point = 555, n_alt = 4
   Insn 327: point = 557, n_alt = 0
  BB 44
   Insn 325: point = 559, n_alt = -1
   Insn 324: point = 559, n_alt = 0
   Insn 323: point = 560, n_alt = 4
   Insn 322: point = 562, n_alt = 0
  BB 89
   Insn 805: point = 564, n_alt = 0
   Insn 804: point = 564, n_alt = 0
   Insn 803: point = 564, n_alt = 0
   Insn 802: point = 564, n_alt = -2
   Insn 801: point = 564, n_alt = 0
   Insn 800: point = 565, n_alt = 0
   Insn 799: point = 565, n_alt = 0
   Insn 798: point = 567, n_alt = 0
 r82: [190..568] [29..181]
 r83: [535..536]
 r84: [533..534]
 r85: [531..532]
 r86: [523..524]
 r87: [503..504]
 r88: [501..502]
 r89: [499..500]
 r90: [494..495]
 r91: [488..489]
 r92: [475..476]
 r93: [483..484]
 r94: [481..482]
 r95: [468..469]
 r96: [455..456]
 r97: [463..464]
 r98: [461..462]
 r99: [448..449]
 r100: [443..447]
 r101: [443..444]
 r102: [438..439]
 r103: [431..437]
 r104: [433..434]
 r105: [431..432]
 r106: [424..425]
 r107: [419..420]
 r108: [417..418]
 r109: [415..416]
 r110: [410..411]
 r111: [408..409]
 r112: [403..404]
 r113: [396..402]
 r114: [398..399]
 r115: [395..397]
 r116: [374..389]
 r117: [368..369]
 r118: [366..367]
 r119: [361..362]
 r120: [359..360]
 r121: [357..358]
 r122: [351..352]
 r123: [349..350]
 r124: [332..333]
 r125: [327..328]
 r126: [321..322]
 r127: [549..550]
 r128: [544..545]
 r129: [311..312]
 r130: [559..560]
 r131: [554..555]
 r132: [306..307]
 r133: [301..304]
 r134: [294..297]
 r135: [283..286]
 r136: [272..273]
 r137: [511..512]
 r138: [254..255]
 r139: [251..252]
 r140: [248..249]
 r141: [244..246]
 r142: [244..245]
 r143: [241..243]
 r144: [241..242]
 r145: [239..240]
 r146: [218..235]
 r147: [232..234]
 r148: [232..233]
 r149: [229..231]
 r150: [229..230]
 r151: [220..228]
 r152: [226..227]
 r153: [218..219]
 r154: [215..216]
 r155: [212..213]
 r156: [145..146]
 r157: [143..144]
 r158: [138..139]
 r159: [136..137]
 r160: [130..132]
 r161: [152..158]
 r162: [177..178]
 r163: [174..176]
 r164: [166..167]
 r165: [164..165]
 r166: [122..123]
 r167: [113..114]
 r168: [111..112]
 r169: [108..110]
 r170: [99..100]
 r171: [97..98]
 r172: [94..96]
 r173: [87..91]
 r174: [87..88]
 r175: [79..80]
 r176: [75..78]
 r177: [73..74]
 r178: [69..70]
 r179: [67..68]
 r180: [46..66]
 r181: [54..65]
 r182: [59..62]
 r183: [60..61]
 r184: [54..58]
 r185: [51..55]
 r186: [52..53]
 r187: [46..50]
 r188: [44..47]
 r189: [44..45]
 r190: [37..41]
 r191: [37..38]
 r192: [30..34]
 r193: [30..31]
 r194: [22..26]
 r195: [22..23]
 r196: [19..21]
 r197: [19..20]
 r198: [17..18]
 r199: [184..187]
 r200: [182..183]
 r201: [13..14]
 r202: [10..12]
 r203: [5..7]
 r204: [564..565]
 r205: [188..189] [2..4]
 r206: [480..480] [472..474]
 r207: [460..460] [452..454]
 r208: [224..224] [220..222]
 r209: [109..117]
 r210: [95..103]
 r211: [71..72]
 r212: [0..1]
 r213: [537..538]
 r214: [528..529]
 r215: [540..541]
 r216: [521..522]
 r217: [518..519]
 r218: [516..517]
 r219: [505..506]
 r220: [496..497]
 r221: [492..493]
 r222: [490..491]
 r223: [477..478]
 r224: [485..486]
 r225: [470..471]
 r226: [457..458]
 r227: [465..466]
 r228: [450..451]
 r229: [445..446]
 r230: [440..441]
 r231: [435..436]
 r232: [426..427]
 r233: [421..422]
 r234: [412..413]
 r235: [405..406]
 r236: [400..401]
 r237: [393..394]
 r238: [390..391]
 r239: [387..388]
 r240: [385..386]
 r241: [383..384]
 r242: [381..382]
 r243: [379..380]
 r244: [377..378]
 r245: [375..376]
 r246: [372..373]
 r247: [370..371]
 r248: [363..364]
 r249: [353..354]
 r250: [347..348]
 r251: [345..346]
 r252: [343..344]
 r253: [339..340]
 r254: [337..338]
 r255: [334..335]
 r256: [329..330]
 r257: [323..324]
 r258: [318..319]
 r259: [316..317]
 r260: [551..552]
 r261: [546..547]
 r262: [313..314]
 r263: [561..562]
 r264: [556..557]
 r265: [308..309]
 r266: [302..303]
 r267: [299..300]
 r268: [295..296]
 r269: [291..292]
 r270: [289..290]
 r271: [287..288]
 r272: [284..285]
 r273: [281..282]
 r274: [278..279]
 r275: [276..277]
 r276: [274..275]
 r277: [269..270]
 r278: [267..268]
 r279: [265..266]
 r280: [262..263]
 r281: [260..261]
 r282: [258..259]
 r283: [513..514]
 r284: [509..510]
 r285: [236..237]
 r286: [210..211]
 r287: [202..203]
 r288: [200..201]
 r289: [198..199]
 r290: [196..197]
 r291: [147..148]
 r292: [140..141]
 r293: [133..134]
 r294: [130..131]
 r295: [159..160]
 r296: [154..155]
 r297: [156..157]
 r298: [152..153]
 r299: [150..151]
 r300: [179..180]
 r301: [172..175]
 r302: [124..125]
 r303: [118..119]
 r304: [120..121]
 r305: [115..116]
 r306: [104..105]
 r307: [106..107]
 r308: [101..102]
 r309: [92..93]
 r310: [89..90]
 r311: [84..85]
 r312: [81..82]
 r313: [76..77]
 r314: [63..64]
 r315: [56..57]
 r316: [48..49]
 r317: [42..43]
 r318: [39..40]
 r319: [35..36]
 r320: [32..33]
 r321: [27..28]
 r322: [24..25]
 r323: [185..186]
 r324: [15..16]
 r325: [10..11]
 r326: [8..9]
 r327: [5..6]
 r328: [566..567]
 r331: [168..173]
 r332: [170..171]
Compressing live ranges: from 569 to 437 - 76%
Ranges after the compression:
 r82: [148..436] [24..141]
 r83: [411..412]
 r84: [409..410]
 r85: [407..408]
 r86: [403..404]
 r87: [387..388]
 r88: [385..386]
 r89: [383..384]
 r90: [379..380]
 r91: [373..374]
 r92: [362..363]
 r93: [369..370]
 r94: [367..368]
 r95: [356..357]
 r96: [345..346]
 r97: [352..353]
 r98: [350..351]
 r99: [339..340]
 r100: [335..338]
 r101: [335..336]
 r102: [331..332]
 r103: [325..330]
 r104: [327..328]
 r105: [325..326]
 r106: [321..322]
 r107: [317..318]
 r108: [315..316]
 r109: [313..314]
 r110: [309..310]
 r111: [307..308]
 r112: [303..304]
 r113: [297..302]
 r114: [299..300]
 r115: [297..298]
 r116: [279..292]
 r117: [273..274]
 r118: [271..272]
 r119: [267..268]
 r120: [265..266]
 r121: [263..264]
 r122: [259..260]
 r123: [257..258]
 r124: [243..244]
 r125: [239..240]
 r126: [235..236]
 r127: [421..422]
 r128: [417..418]
 r129: [227..228]
 r130: [429..430]
 r131: [425..426]
 r132: [223..224]
 r133: [221..222]
 r134: [217..218]
 r135: [209..210]
 r136: [199..200]
 r137: [393..394]
 r138: [185..186]
 r139: [183..184]
 r140: [181..182]
 r141: [179..180]
 r142: [179..180]
 r143: [177..178]
 r144: [177..178]
 r145: [175..176]
 r146: [162..172]
 r147: [171..172]
 r148: [171..172]
 r149: [169..170]
 r150: [169..170]
 r151: [164..168]
 r152: [167..168]
 r153: [162..163]
 r154: [160..161]
 r155: [158..159]
 r156: [114..115]
 r157: [112..113]
 r158: [108..109]
 r159: [106..107]
 r160: [102..103]
 r161: [120..125]
 r162: [138..139]
 r163: [136..137]
 r164: [130..131]
 r165: [128..129]
 r166: [98..99]
 r167: [90..91]
 r168: [88..89]
 r169: [86..87]
 r170: [78..79]
 r171: [76..77]
 r172: [74..75]
 r173: [68..71]
 r174: [68..69]
 r175: [62..63]
 r176: [60..61]
 r177: [58..59]
 r178: [54..55]
 r179: [52..53]
 r180: [38..51]
 r181: [44..51]
 r182: [48..49]
 r183: [48..49]
 r184: [44..47]
 r185: [42..45]
 r186: [42..43]
 r187: [38..41]
 r188: [36..39]
 r189: [36..37]
 r190: [30..33]
 r191: [30..31]
 r192: [24..27]
 r193: [24..25]
 r194: [18..21]
 r195: [18..19]
 r196: [16..17]
 r197: [16..17]
 r198: [14..15]
 r199: [144..145]
 r200: [142..143]
 r201: [10..11]
 r202: [8..9]
 r203: [4..5]
 r204: [433..434]
 r205: [146..147] [2..3]
 r206: [366..366] [360..361]
 r207: [349..349] [343..344]
 r208: [164..166]
 r209: [86..93]
 r210: [74..81]
 r211: [56..57]
 r212: [0..1]
 r213: [413..414]
 r214: [405..406]
 r215: [415..416]
 r216: [401..402]
 r217: [399..400]
 r218: [397..398]
 r219: [389..390]
 r220: [381..382]
 r221: [377..378]
 r222: [375..376]
 r223: [364..365]
 r224: [371..372]
 r225: [358..359]
 r226: [347..348]
 r227: [354..355]
 r228: [341..342]
 r229: [337..338]
 r230: [333..334]
 r231: [329..330]
 r232: [323..324]
 r233: [319..320]
 r234: [311..312]
 r235: [305..306]
 r236: [301..302]
 r237: [295..296]
 r238: [293..294]
 r239: [291..292]
 r240: [289..290]
 r241: [287..288]
 r242: [285..286]
 r243: [283..284]
 r244: [281..282]
 r245: [279..280]
 r246: [277..278]
 r247: [275..276]
 r248: [269..270]
 r249: [261..262]
 r250: [255..256]
 r251: [253..254]
 r252: [251..252]
 r253: [249..250]
 r254: [247..248]
 r255: [245..246]
 r256: [241..242]
 r257: [237..238]
 r258: [233..234]
 r259: [231..232]
 r260: [423..424]
 r261: [419..420]
 r262: [229..230]
 r263: [431..432]
 r264: [427..428]
 r265: [225..226]
 r266: [221..222]
 r267: [219..220]
 r268: [217..218]
 r269: [215..216]
 r270: [213..214]
 r271: [211..212]
 r272: [209..210]
 r273: [207..208]
 r274: [205..206]
 r275: [203..204]
 r276: [201..202]
 r277: [197..198]
 r278: [195..196]
 r279: [193..194]
 r280: [191..192]
 r281: [189..190]
 r282: [187..188]
 r283: [395..396]
 r284: [391..392]
 r285: [173..174]
 r286: [156..157]
 r287: [154..155]
 r288: [152..153]
 r289: [150..151]
 r290: [148..149]
 r291: [116..117]
 r292: [110..111]
 r293: [104..105]
 r294: [102..103]
 r295: [126..127]
 r296: [122..123]
 r297: [124..125]
 r298: [120..121]
 r299: [118..119]
 r300: [140..141]
 r301: [134..137]
 r302: [100..101]
 r303: [94..95]
 r304: [96..97]
 r305: [92..93]
 r306: [82..83]
 r307: [84..85]
 r308: [80..81]
 r309: [72..73]
 r310: [70..71]
 r311: [66..67]
 r312: [64..65]
 r313: [60..61]
 r314: [50..51]
 r315: [46..47]
 r316: [40..41]
 r317: [34..35]
 r318: [32..33]
 r319: [28..29]
 r320: [26..27]
 r321: [22..23]
 r322: [20..21]
 r323: [144..145]
 r324: [12..13]
 r325: [8..9]
 r326: [6..7]
 r327: [4..5]
 r328: [435..436]
 r331: [132..135]
 r332: [132..133]

********** Assignment #1: **********

	 Assigning to 332 (cl=CREG, orig=332, freq=2000, tfirst=332, tfreq=2000)...
	   Assign 2 to reload r332 (freq=2000)
	 Assigning to 331 (cl=GENERAL_REGS, orig=163, freq=3000, tfirst=331, tfreq=3000)...
	   Assign 1 to reload r331 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=1280, prev_offset=1280)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=1264, prev_offset=1264)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 872
changing reg in insn 802
changing reg in insn 789
changing reg in insn 746
changing reg in insn 741
changing reg in insn 736
changing reg in insn 732
changing reg in insn 727
changing reg in insn 722
changing reg in insn 698
changing reg in insn 694
changing reg in insn 689
changing reg in insn 687
changing reg in insn 684
changing reg in insn 673
changing reg in insn 666
changing reg in insn 655
changing reg in insn 648
changing reg in insn 634
changing reg in insn 623
changing reg in insn 603
changing reg in insn 595
changing reg in insn 590
changing reg in insn 585
changing reg in insn 579
changing reg in insn 538
changing reg in insn 536
changing reg in insn 475
changing reg in insn 444
changing reg in insn 252
changing reg in insn 244
changing reg in insn 239
changing reg in insn 234
changing reg in insn 179
changing reg in insn 158
changing reg in insn 134
changing reg in insn 121
changing reg in insn 114
changing reg in insn 95
changing reg in insn 40
changing reg in insn 17
changing reg in insn 15
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 37
changing reg in insn 39
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 71
changing reg in insn 80
changing reg in insn 81
changing reg in insn 84
changing reg in insn 85
changing reg in insn 89
changing reg in insn 90
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 103
changing reg in insn 104
changing reg in insn 108
changing reg in insn 109
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 126
changing reg in insn 125
changing reg in insn 126
changing reg in insn 135
changing reg in insn 136
changing reg in insn 136
changing reg in insn 140
changing reg in insn 138
changing reg in insn 139
changing reg in insn 139
changing reg in insn 140
changing reg in insn 147
changing reg in insn 148
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 155
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 177
changing reg in insn 174
changing reg in insn 175
changing reg in insn 175
changing reg in insn 178
changing reg in insn 193
changing reg in insn 208
changing reg in insn 206
changing reg in insn 204
changing reg in insn 202
changing reg in insn 200
changing reg in insn 198
changing reg in insn 196
changing reg in insn 194
changing reg in insn 211
changing reg in insn 212
changing reg in insn 212
changing reg in insn 213
changing reg in insn 217
changing reg in insn 218
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 220
changing reg in insn 227
changing reg in insn 228
changing reg in insn 228
changing reg in insn 231
changing reg in insn 271
changing reg in insn 273
changing reg in insn 277
changing reg in insn 278
changing reg in insn 286
changing reg in insn 287
changing reg in insn 305
changing reg in insn 306
changing reg in insn 310
changing reg in insn 311
changing reg in insn 318
changing reg in insn 319
changing reg in insn 323
changing reg in insn 324
changing reg in insn 328
changing reg in insn 330
changing reg in insn 335
changing reg in insn 336
changing reg in insn 339
changing reg in insn 342
changing reg in insn 340
changing reg in insn 347
changing reg in insn 350
changing reg in insn 348
changing reg in insn 365
changing reg in insn 372
changing reg in insn 393
changing reg in insn 394
changing reg in insn 437
changing reg in insn 439
changing reg in insn 478
changing reg in insn 479
changing reg in insn 482
changing reg in insn 483
changing reg in insn 486
changing reg in insn 487
changing reg in insn 490
changing reg in insn 492
changing reg in insn 491
changing reg in insn 492
changing reg in insn 492
changing reg in insn 493
changing reg in insn 494
changing reg in insn 497
changing reg in insn 501
changing reg in insn 520
changing reg in insn 502
changing reg in insn 504
changing reg in insn 503
changing reg in insn 504
changing reg in insn 504
changing reg in insn 506
changing reg in insn 505
changing reg in insn 506
changing reg in insn 506
changing reg in insn 519
changing reg in insn 507
changing reg in insn 508
changing reg in insn 519
changing reg in insn 520
changing reg in insn 529
changing reg in insn 530
changing reg in insn 533
changing reg in insn 535
changing reg in insn 580
changing reg in insn 581
changing reg in insn 581
changing reg in insn 582
changing reg in insn 586
changing reg in insn 587
changing reg in insn 587
changing reg in insn 589
changing reg in insn 596
changing reg in insn 598
changing reg in insn 604
changing reg in insn 624
changing reg in insn 625
changing reg in insn 625
changing reg in insn 628
changing reg in insn 628
changing reg in insn 629
changing reg in insn 649
changing reg in insn 650
changing reg in insn 656
changing reg in insn 657
changing reg in insn 657
changing reg in insn 659
changing reg in insn 662
changing reg in insn 665
changing reg in insn 674
changing reg in insn 675
changing reg in insn 675
changing reg in insn 677
changing reg in insn 680
changing reg in insn 683
changing reg in insn 688
changing reg in insn 691
changing reg in insn 690
changing reg in insn 691
changing reg in insn 699
changing reg in insn 700
changing reg in insn 701
changing reg in insn 705
changing reg in insn 708
changing reg in insn 709
changing reg in insn 711
changing reg in insn 715
changing reg in insn 718
changing reg in insn 719
changing reg in insn 720
changing reg in insn 721
changing reg in insn 723
changing reg in insn 726
changing reg in insn 725
changing reg in insn 724
changing reg in insn 725
changing reg in insn 726
changing reg in insn 728
changing reg in insn 731
changing reg in insn 730
changing reg in insn 729
changing reg in insn 730
changing reg in insn 731
changing reg in insn 733
changing reg in insn 735
changing reg in insn 734
changing reg in insn 735
changing reg in insn 737
changing reg in insn 740
changing reg in insn 739
changing reg in insn 740
changing reg in insn 742
changing reg in insn 745
changing reg in insn 744
changing reg in insn 745
changing reg in insn 747
changing reg in insn 750
changing reg in insn 749
changing reg in insn 750
changing reg in insn 751
changing reg in insn 752
changing reg in insn 753
changing reg in insn 754
changing reg in insn 758
changing reg in insn 761
changing reg in insn 759
changing reg in insn 761
changing reg in insn 763
changing reg in insn 770
changing reg in insn 772
changing reg in insn 775
changing reg in insn 777
changing reg in insn 779
changing reg in insn 781
changing reg in insn 799
changing reg in insn 801
changing reg in insn 814
changing reg in insn 782
changing reg in insn 48
changing reg in insn 819
changing reg in insn 98
changing reg in insn 90
changing reg in insn 101
changing reg in insn 117
changing reg in insn 109
changing reg in insn 120
changing reg in insn 516
changing reg in insn 511
changing reg in insn 519
changing reg in insn 654
changing reg in insn 664
changing reg in insn 672
changing reg in insn 682
changing reg in insn 709
changing reg in insn 710
changing reg in insn 819
changing reg in insn 823
changing reg in insn 7
changing reg in insn 8
changing reg in insn 15
changing reg in insn 16
changing reg in insn 26
changing reg in insn 27
changing reg in insn 43
changing reg in insn 44
changing reg in insn 57
changing reg in insn 58
changing reg in insn 63
changing reg in insn 64
changing reg in insn 67
changing reg in insn 68
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 88
changing reg in insn 89
changing reg in insn 95
changing reg in insn 96
changing reg in insn 102
changing reg in insn 103
changing reg in insn 107
changing reg in insn 108
changing reg in insn 114
changing reg in insn 115
changing reg in insn 121
changing reg in insn 122
changing reg in insn 124
changing reg in insn 125
changing reg in insn 134
changing reg in insn 135
changing reg in insn 137
changing reg in insn 138
changing reg in insn 146
changing reg in insn 147
changing reg in insn 151
changing reg in insn 152
changing reg in insn 158
changing reg in insn 159
changing reg in insn 170
changing reg in insn 171
changing reg in insn 173
changing reg in insn 174
changing reg in insn 182
changing reg in insn 183
changing reg in insn 192
changing reg in insn 193
changing reg in insn 194
changing reg in insn 195
changing reg in insn 196
changing reg in insn 197
changing reg in insn 198
changing reg in insn 199
changing reg in insn 200
changing reg in insn 201
changing reg in insn 202
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 209
changing reg in insn 210
changing reg in insn 211
changing reg in insn 216
changing reg in insn 217
changing reg in insn 226
changing reg in insn 227
changing reg in insn 232
changing reg in insn 233
changing reg in insn 250
changing reg in insn 251
changing reg in insn 255
changing reg in insn 256
changing reg in insn 260
changing reg in insn 261
changing reg in insn 262
changing reg in insn 263
changing reg in insn 270
changing reg in insn 271
changing reg in insn 276
changing reg in insn 277
changing reg in insn 285
changing reg in insn 286
changing reg in insn 296
changing reg in insn 297
changing reg in insn 298
changing reg in insn 299
changing reg in insn 304
changing reg in insn 305
changing reg in insn 309
changing reg in insn 310
changing reg in insn 317
changing reg in insn 318
changing reg in insn 322
changing reg in insn 323
changing reg in insn 327
changing reg in insn 328
changing reg in insn 334
changing reg in insn 335
changing reg in insn 340
changing reg in insn 341
changing reg in insn 343
changing reg in insn 344
changing reg in insn 348
changing reg in insn 349
changing reg in insn 356
changing reg in insn 357
changing reg in insn 362
changing reg in insn 363
changing reg in insn 364
changing reg in insn 365
changing reg in insn 370
changing reg in insn 371
changing reg in insn 376
changing reg in insn 377
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 386
changing reg in insn 390
changing reg in insn 391
changing reg in insn 400
changing reg in insn 401
changing reg in insn 402
changing reg in insn 403
changing reg in insn 407
changing reg in insn 408
changing reg in insn 415
changing reg in insn 416
changing reg in insn 417
changing reg in insn 418
changing reg in insn 422
changing reg in insn 423
changing reg in insn 434
changing reg in insn 435
changing reg in insn 447
changing reg in insn 448
changing reg in insn 500
changing reg in insn 501
changing reg in insn 536
changing reg in insn 537
changing reg in insn 552
changing reg in insn 553
changing reg in insn 558
changing reg in insn 559
changing reg in insn 563
changing reg in insn 564
changing reg in insn 569
changing reg in insn 570
changing reg in insn 579
changing reg in insn 580
changing reg in insn 585
changing reg in insn 586
changing reg in insn 595
changing reg in insn 596
changing reg in insn 597
changing reg in insn 598
changing reg in insn 603
changing reg in insn 604
changing reg in insn 606
changing reg in insn 607
changing reg in insn 605
changing reg in insn 606
changing reg in insn 607
changing reg in insn 608
changing reg in insn 609
changing reg in insn 623
changing reg in insn 624
changing reg in insn 626
changing reg in insn 648
changing reg in insn 649
changing reg in insn 653
changing reg in insn 651
changing reg in insn 652
changing reg in insn 653
changing reg in insn 655
changing reg in insn 656
changing reg in insn 671
changing reg in insn 669
changing reg in insn 670
changing reg in insn 671
changing reg in insn 673
changing reg in insn 674
changing reg in insn 687
changing reg in insn 688
changing reg in insn 689
changing reg in insn 690
changing reg in insn 694
changing reg in insn 695
changing reg in insn 698
changing reg in insn 699
changing reg in insn 703
changing reg in insn 704
changing reg in insn 722
changing reg in insn 723
changing reg in insn 727
changing reg in insn 728
changing reg in insn 732
changing reg in insn 733
changing reg in insn 736
changing reg in insn 737
changing reg in insn 738
changing reg in insn 739
changing reg in insn 741
changing reg in insn 742
changing reg in insn 743
changing reg in insn 746
changing reg in insn 747
changing reg in insn 748
changing reg in insn 759
changing reg in insn 760
changing reg in insn 769
changing reg in insn 770
changing reg in insn 776
changing reg in insn 777
changing reg in insn 778
changing reg in insn 779
changing reg in insn 780
changing reg in insn 781
changing reg in insn 798
changing reg in insn 799
deleting insn with uid = 17.
deleting insn with uid = 40.
deleting insn with uid = 43.
deleting insn with uid = 57.
deleting insn with uid = 63.
deleting insn with uid = 179.
deleting insn with uid = 182.
deleting insn with uid = 234.
deleting insn with uid = 239.
deleting insn with uid = 244.
deleting insn with uid = 252.
deleting insn with uid = 255.
deleting insn with uid = 362.
deleting insn with uid = 376.
deleting insn with uid = 390.
deleting insn with uid = 407.
deleting insn with uid = 422.
deleting insn with uid = 434.
deleting insn with uid = 437.
deleting insn with uid = 444.
deleting insn with uid = 447.
deleting insn with uid = 475.
deleting insn with uid = 538.
deleting insn with uid = 558.
deleting insn with uid = 569.
deleting insn with uid = 590.
deleting insn with uid = 874.
deleting insn with uid = 634.
deleting insn with uid = 662.
deleting insn with uid = 666.
deleting insn with uid = 680.
deleting insn with uid = 684.
deleting insn with uid = 708.
deleting insn with uid = 718.
deleting insn with uid = 744.
deleting insn with uid = 749.
deleting insn with uid = 761.
deleting insn with uid = 789.
deleting insn with uid = 802.
deleting insn with uid = 819.
deleting insn with uid = 823.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 240.
verify found no changes in insn with uid = 245.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 360.
verify found no changes in insn with uid = 374.
verify found no changes in insn with uid = 388.
verify found no changes in insn with uid = 405.
verify found no changes in insn with uid = 420.
verify found no changes in insn with uid = 433.
verify found no changes in insn with uid = 436.
verify found no changes in insn with uid = 440.
verify found no changes in insn with uid = 445.
verify found no changes in insn with uid = 454.
verify found no changes in insn with uid = 463.
verify found no changes in insn with uid = 476.
verify found no changes in insn with uid = 539.
verify found no changes in insn with uid = 556.
verify found no changes in insn with uid = 567.
verify found no changes in insn with uid = 591.
verify found no changes in insn with uid = 635.
verify found no changes in insn with uid = 660.
verify found no changes in insn with uid = 667.
verify found no changes in insn with uid = 678.
verify found no changes in insn with uid = 685.
verify found no changes in insn with uid = 706.
verify found no changes in insn with uid = 716.
verify found no changes in insn with uid = 765.
verify found no changes in insn with uid = 790.
verify found no changes in insn with uid = 803.


do_execve

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={218d,210u} r1={76d,39u} r2={41d,5u} r3={1d,41u} r4={3d,3u} r7={139d,538u} r8={35d} r9={35d} r10={35d} r11={35d} r12={35d} r13={35d} r14={35d} r15={35d} r16={3e} r17={208d,45u} r18={35d} r19={7e} r20={35d} r21={35d} r22={35d} r23={35d} r24={35d} r25={35d} r26={35d} r27={35d} r28={35d} r29={35d} r30={35d} r31={35d} r32={35d} r33={35d} r34={35d} r35={35d} r36={35d} r37={35d} r38={35d} r39={35d} r40={35d} r41={35d} r42={35d} r43={35d} r44={35d} r45={35d} r46={35d} r47={35d} r48={35d} r49={35d} r50={35d} r51={35d} r52={35d} r53={35d} r54={35d} r55={35d} r56={35d} r57={35d} r58={35d} r59={35d} r60={35d} r61={35d} r62={35d} r63={35d} r64={35d} r65={35d} r66={35d} r67={35d} r68={35d} r69={35d} r70={35d} r71={35d} r72={35d} r73={35d} r74={35d} r75={35d} 
;;    total ref usage 3852{2961d,881u,10e} in 601{566 regular + 35 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 872 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 872 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 872 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1244 [0x4dc])) [9 sh_bang+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":181:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (const_int 131068 [0x1fffc])) "fs/exec.c":182:19 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 0 ax [213])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1280 [0x500])) [19 eip+0 S4 A32])) "fs/exec.c":184:22 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [213])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":184:22 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 eip+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (mem:SI (reg/f:SI 0 ax [orig:83 _1 ] [83]) [1 *_1+0 S4 A32])) "fs/exec.c":184:22 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/exec.c":184:17 144 {*zero_extendhisi2}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 15 [0xf]))) "fs/exec.c":184:8 11 {*cmpsi_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/exec.c":184:8 806 {*jcc}
     (nil)
 -> 20)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":185:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 15 14 16 3 (set (reg/f:SI 0 ax [214])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7a64a9ddc360 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/exec.c":185:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7a64a9ddc360 *.LC1>)
        (nil)))
(insn 16 15 18 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [214])) "fs/exec.c":185:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 18 16 19 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7a64a9d38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":185:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":185:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 20 19 21 4 49 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 826 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":186:12 75 {*movsi_internal}
     (nil))
(jump_insn 826 22 827 4 (set (pc)
        (label_ref 29)) "fs/exec.c":186:5 807 {jump}
     (nil)
 -> 29)
(barrier 827 826 31)
(code_label 31 827 25 5 51 (nil) [1 uses])
(note 25 31 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 0 ax [215])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":187:17 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [215])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 1044 [0x414])) [1 page[i_124]+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":187:17 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":186:37 209 {*addsi_1}
     (nil))
(code_label 29 28 30 6 50 (nil) [1 uses])
(note 30 29 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 30 35 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/exec.c":186:19 11 {*cmpsi_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/exec.c":186:19 806 {*jcc}
     (nil)
 -> 31)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:SI 0 ax [orig:86 filename.33_4 ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1288 [0x508])) [2 filename+0 S4 A32])) "fs/exec.c":188:19 75 {*movsi_internal}
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":188:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 39 38 41 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:86 filename.33_4 ] [86])) "fs/exec.c":188:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 39 42 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7a64a9d15500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":188:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 42 41 44 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":188:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 42 45 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])
        (reg:SI 0 ax [216])) "fs/exec.c":188:19 75 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":188:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "fs/exec.c":188:8 806 {*jcc}
     (nil)
 -> 51)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 828 8 (set (reg:SI 0 ax [orig:205 _144 ] [205])
        (const_int -2 [0xfffffffffffffffe])) "fs/exec.c":189:16 75 {*movsi_internal}
     (nil))
(jump_insn 828 48 829 8 (set (pc)
        (label_ref 817)) "fs/exec.c":189:16 807 {jump}
     (nil)
 -> 817)
(barrier 829 828 51)
(code_label 51 829 52 9 52 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":190:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 54 53 55 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1304 [0x518])) [20 argv+0 S4 A32])) "fs/exec.c":190:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 55 54 56 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("count") [flags 0x3]  <function_decl 0x7a64a9d4db00 count>) [0 count S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":190:12 823 {*call_value}
     (nil)
    (nil))
(insn 56 55 58 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":190:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 58 56 59 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
        (reg:SI 0 ax [217])) "fs/exec.c":190:12 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":191:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 60 59 61 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1308 [0x51c])) [20 envp+0 S4 A32])) "fs/exec.c":191:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 61 60 62 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("count") [flags 0x3]  <function_decl 0x7a64a9d4db00 count>) [0 count S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":191:12 823 {*call_value}
     (nil)
    (nil))
(insn 62 61 64 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":191:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 64 62 65 9 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1232 [0x4d0])) [9 envc+0 S4 A32])
        (reg:SI 0 ax [218])) "fs/exec.c":191:12 75 {*movsi_internal}
     (nil))
(code_label 65 64 66 10 54 ("restart_interp") [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg/f:SI 0 ax [219])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":194:10 75 {*movsi_internal}
     (nil))
(insn 68 67 69 10 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (reg/f:SI 0 ax [219]) [4 inode_123->i_mode+0 S2 A32])) "fs/exec.c":194:10 76 {*movhi_internal}
     (nil))
(insn 69 68 70 10 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (zero_extend:SI (reg:HI 0 ax [orig:87 _5 ] [87]))) "fs/exec.c":194:10 144 {*zero_extendhisi2}
     (nil))
(insn 70 69 71 10 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (and:SI (reg:SI 0 ax [orig:88 _6 ] [88])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":194:10 490 {*andsi_1}
     (nil))
(insn 71 70 72 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 _7 ] [89])
            (const_int 32768 [0x8000]))) "fs/exec.c":194:8 11 {*cmpsi_1}
     (nil))
(jump_insn 72 71 73 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "fs/exec.c":194:8 806 {*jcc}
     (nil)
 -> 77)
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 830 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -13 [0xfffffffffffffff3])) "fs/exec.c":195:16 75 {*movsi_internal}
     (nil))
(jump_insn 830 74 831 11 (set (pc)
        (label_ref 785)) "fs/exec.c":196:9 807 {jump}
     (nil)
 -> 785)
(barrier 831 830 77)
(code_label 77 831 78 12 55 (nil) [1 uses])
(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 12 (set (reg/f:SI 0 ax [220])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":198:14 75 {*movsi_internal}
     (nil))
(insn 80 79 81 12 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (reg/f:SI 0 ax [220]) [4 inode_123->i_mode+0 S2 A32])) "fs/exec.c":198:14 76 {*movhi_internal}
     (nil))
(insn 81 80 82 12 (set (reg:SI 0 ax [221])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/exec.c":198:7 144 {*zero_extendhisi2}
     (nil))
(insn 82 81 83 12 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
        (reg:SI 0 ax [221])) "fs/exec.c":198:7 75 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (reg:SI 0 ax [222])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":199:16 75 {*movsi_internal}
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:SI 0 ax [orig:91 _9 ] [91])
                (and:SI (reg:SI 0 ax [222])
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":199:16 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 2048 [0x800]))
        (nil)))
(insn 85 84 86 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:91 _9 ] [91])
            (const_int 0 [0]))) "fs/exec.c":199:42 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 86 85 87 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "fs/exec.c":199:42 806 {*jcc}
     (nil)
 -> 93)
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 13 (set (reg/f:SI 0 ax [223])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":199:34 75 {*movsi_internal}
     (nil))
(insn 89 88 90 13 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [223])
                (const_int 2 [0x2])) [4 inode_123->i_uid+0 S2 A16])) "fs/exec.c":199:34 76 {*movhi_internal}
     (nil))
(insn 90 89 832 13 (set (reg:SI 0 ax [orig:206 iftmp.34_145 ] [206])
        (zero_extend:SI (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/exec.c":199:42 144 {*zero_extendhisi2}
     (nil))
(jump_insn 832 90 833 13 (set (pc)
        (label_ref 99)) 807 {jump}
     (nil)
 -> 99)
(barrier 833 832 93)
(code_label 93 833 94 14 57 (nil) [1 uses])
(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (set (reg/f:SI 0 ax [224])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":199:51 75 {*movsi_internal}
     (nil))
(insn 96 95 97 14 (set (reg/f:SI 0 ax [orig:93 current.35_11 ] [93])
        (mem/f/c:SI (reg/f:SI 0 ax [224]) [5 current+0 S4 A32])) "fs/exec.c":199:51 75 {*movsi_internal}
     (nil))
(insn 97 96 98 14 (set (reg:HI 0 ax [orig:94 _12 ] [94])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:93 current.35_11 ] [93])
                (const_int 578 [0x242])) [4 current.35_11->euid+0 S2 A16])) "fs/exec.c":199:51 76 {*movhi_internal}
     (nil))
(insn 98 97 99 14 (set (reg:SI 0 ax [orig:206 iftmp.34_145 ] [206])
        (zero_extend:SI (reg:HI 0 ax [orig:94 _12 ] [94]))) "fs/exec.c":199:42 144 {*zero_extendhisi2}
     (nil))
(code_label 99 98 100 15 58 (nil) [1 uses])
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1228 [0x4cc])) [9 e_uid+0 S4 A32])
        (reg:SI 0 ax [orig:206 iftmp.34_145 ] [206])) "fs/exec.c":199:11 75 {*movsi_internal}
     (nil))
(insn 102 101 103 15 (set (reg:SI 0 ax [225])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":200:16 75 {*movsi_internal}
     (nil))
(insn 103 102 104 15 (parallel [
            (set (reg:SI 0 ax [orig:95 _13 ] [95])
                (and:SI (reg:SI 0 ax [225])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":200:16 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))
(insn 104 103 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "fs/exec.c":200:42 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 105 104 106 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "fs/exec.c":200:42 806 {*jcc}
     (nil)
 -> 112)
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg/f:SI 0 ax [226])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":200:34 75 {*movsi_internal}
     (nil))
(insn 108 107 109 16 (set (reg:QI 0 ax [orig:96 _14 ] [96])
        (mem:QI (plus:SI (reg/f:SI 0 ax [226])
                (const_int 12 [0xc])) [0 inode_123->i_gid+0 S1 A32])) "fs/exec.c":200:34 77 {*movqi_internal}
     (nil))
(insn 109 108 834 16 (set (reg:SI 0 ax [orig:207 iftmp.36_146 ] [207])
        (zero_extend:SI (reg:QI 0 ax [orig:96 _14 ] [96]))) "fs/exec.c":200:42 143 {*zero_extendqisi2}
     (nil))
(jump_insn 834 109 835 16 (set (pc)
        (label_ref 118)) 807 {jump}
     (nil)
 -> 118)
(barrier 835 834 112)
(code_label 112 835 113 17 59 (nil) [1 uses])
(note 113 112 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 17 (set (reg/f:SI 0 ax [227])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":200:51 75 {*movsi_internal}
     (nil))
(insn 115 114 116 17 (set (reg/f:SI 0 ax [orig:97 current.37_15 ] [97])
        (mem/f/c:SI (reg/f:SI 0 ax [227]) [5 current+0 S4 A32])) "fs/exec.c":200:51 75 {*movsi_internal}
     (nil))
(insn 116 115 117 17 (set (reg:HI 0 ax [orig:98 _16 ] [98])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:97 current.37_15 ] [97])
                (const_int 584 [0x248])) [4 current.37_15->egid+0 S2 A32])) "fs/exec.c":200:51 76 {*movhi_internal}
     (nil))
(insn 117 116 118 17 (set (reg:SI 0 ax [orig:207 iftmp.36_146 ] [207])
        (zero_extend:SI (reg:HI 0 ax [orig:98 _16 ] [98]))) "fs/exec.c":200:42 144 {*zero_extendhisi2}
     (nil))
(code_label 118 117 119 18 60 (nil) [1 uses])
(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 18 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1224 [0x4c8])) [9 e_gid+0 S4 A32])
        (reg:SI 0 ax [orig:207 iftmp.36_146 ] [207])) "fs/exec.c":200:11 75 {*movsi_internal}
     (nil))
(insn 121 120 122 18 (set (reg/f:SI 0 ax [228])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":201:16 75 {*movsi_internal}
     (nil))
(insn 122 121 123 18 (set (reg/f:SI 0 ax [orig:99 current.38_17 ] [99])
        (mem/f/c:SI (reg/f:SI 0 ax [228]) [5 current+0 S4 A32])) "fs/exec.c":201:16 75 {*movsi_internal}
     (nil))
(insn 123 122 124 18 (set (reg:HI 1 dx [orig:100 _18 ] [100])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:99 current.38_17 ] [99])
                (const_int 578 [0x242])) [4 current.38_17->euid+0 S2 A16])) "fs/exec.c":201:16 76 {*movhi_internal}
     (nil))
(insn 124 123 125 18 (set (reg/f:SI 0 ax [229])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":201:31 75 {*movsi_internal}
     (nil))
(insn 125 124 126 18 (set (reg:HI 0 ax [orig:101 _19 ] [101])
        (mem:HI (plus:SI (reg/f:SI 0 ax [229])
                (const_int 2 [0x2])) [4 inode_123->i_uid+0 S2 A16])) "fs/exec.c":201:31 76 {*movhi_internal}
     (nil))
(insn 126 125 127 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:100 _18 ] [100])
            (reg:HI 0 ax [orig:101 _19 ] [101]))) "fs/exec.c":201:8 10 {*cmphi_1}
     (nil))
(jump_insn 127 126 128 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) "fs/exec.c":201:8 806 {*jcc}
     (nil)
 -> 132)
(note 128 127 129 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 836 19 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":202:11 702 {*ashrsi3_1}
     (nil))
(jump_insn 836 129 837 19 (set (pc)
        (label_ref 144)) 807 {jump}
     (nil)
 -> 144)
(barrier 837 836 132)
(code_label 132 837 133 20 61 (nil) [1 uses])
(note 133 132 134 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 20 (set (reg/f:SI 0 ax [230])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":203:21 75 {*movsi_internal}
     (nil))
(insn 135 134 136 20 (set (reg/f:SI 0 ax [orig:102 current.39_20 ] [102])
        (mem/f/c:SI (reg/f:SI 0 ax [230]) [5 current+0 S4 A32])) "fs/exec.c":203:21 75 {*movsi_internal}
     (nil))
(insn 136 135 137 20 (set (reg:HI 1 dx [orig:103 _21 ] [103])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:102 current.39_20 ] [102])
                (const_int 584 [0x248])) [4 current.39_20->egid+0 S2 A32])) "fs/exec.c":203:21 76 {*movhi_internal}
     (nil))
(insn 137 136 138 20 (set (reg/f:SI 0 ax [231])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":203:36 75 {*movsi_internal}
     (nil))
(insn 138 137 139 20 (set (reg:QI 0 ax [orig:104 _22 ] [104])
        (mem:QI (plus:SI (reg/f:SI 0 ax [231])
                (const_int 12 [0xc])) [0 inode_123->i_gid+0 S1 A32])) "fs/exec.c":203:36 77 {*movqi_internal}
     (nil))
(insn 139 138 140 20 (set (reg:HI 0 ax [orig:105 _23 ] [105])
        (zero_extend:HI (reg:QI 0 ax [orig:104 _22 ] [104]))) "fs/exec.c":203:36 146 {*zero_extendqihi2}
     (nil))
(insn 140 139 141 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:103 _21 ] [103])
            (reg:HI 0 ax [orig:105 _23 ] [105]))) "fs/exec.c":203:13 10 {*cmphi_1}
     (nil))
(jump_insn 141 140 142 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "fs/exec.c":203:13 806 {*jcc}
     (nil)
 -> 144)
(note 142 141 143 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 21 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":204:11 702 {*ashrsi3_1}
     (nil))
(code_label 144 143 145 22 62 (nil) [2 uses])
(note 145 144 146 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 22 (set (reg:SI 0 ax [232])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":205:13 75 {*movsi_internal}
     (nil))
(insn 147 146 148 22 (parallel [
            (set (reg:SI 0 ax [orig:106 _24 ] [106])
                (and:SI (reg:SI 0 ax [232])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":205:13 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 148 147 149 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:106 _24 ] [106])
            (const_int 0 [0]))) "fs/exec.c":205:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 149 148 150 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "fs/exec.c":205:8 806 {*jcc}
     (nil)
 -> 168)
(note 150 149 151 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 23 (set (reg/f:SI 0 ax [233])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":206:17 75 {*movsi_internal}
     (nil))
(insn 152 151 153 23 (set (reg:HI 0 ax [orig:107 _25 ] [107])
        (mem:HI (reg/f:SI 0 ax [233]) [4 inode_123->i_mode+0 S2 A32])) "fs/exec.c":206:17 76 {*movhi_internal}
     (nil))
(insn 153 152 154 23 (set (reg:SI 0 ax [orig:108 _26 ] [108])
        (zero_extend:SI (reg:HI 0 ax [orig:107 _25 ] [107]))) "fs/exec.c":206:26 144 {*zero_extendhisi2}
     (nil))
(insn 154 153 155 23 (parallel [
            (set (reg:SI 0 ax [orig:109 _27 ] [109])
                (and:SI (reg:SI 0 ax [orig:108 _26 ] [108])
                    (const_int 73 [0x49])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":206:26 490 {*andsi_1}
     (nil))
(insn 155 154 156 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:109 _27 ] [109])
            (const_int 0 [0]))) "fs/exec.c":205:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 156 155 157 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "fs/exec.c":205:18 806 {*jcc}
     (nil)
 -> 163)
(note 157 156 158 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 24 (set (reg/f:SI 0 ax [234])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":206:37 75 {*movsi_internal}
     (nil))
(insn 159 158 160 24 (set (reg/f:SI 0 ax [orig:110 current.40_28 ] [110])
        (mem/f/c:SI (reg/f:SI 0 ax [234]) [5 current+0 S4 A32])) "fs/exec.c":206:37 75 {*movsi_internal}
     (nil))
(insn 160 159 161 24 (set (reg:HI 0 ax [orig:111 _29 ] [111])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:110 current.40_28 ] [110])
                (const_int 578 [0x242])) [4 current.40_28->euid+0 S2 A16])) "fs/exec.c":206:37 76 {*movhi_internal}
     (nil))
(insn 161 160 162 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:111 _29 ] [111])
            (const_int 0 [0]))) "fs/exec.c":206:9 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 162 161 163 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "fs/exec.c":206:9 806 {*jcc}
     (nil)
 -> 168)
(code_label 163 162 164 25 64 (nil) [1 uses])
(note 164 163 165 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 838 25 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":207:16 75 {*movsi_internal}
     (nil))
(jump_insn 838 165 839 25 (set (pc)
        (label_ref 785)) "fs/exec.c":208:9 807 {jump}
     (nil)
 -> 785)
(barrier 839 838 168)
(code_label 168 839 169 26 63 (nil) [2 uses])
(note 169 168 170 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 26 (set (reg/f:SI 0 ax [235])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":210:49 75 {*movsi_internal}
     (nil))
(insn 171 170 172 26 (set (reg:HI 0 ax [orig:112 _30 ] [112])
        (mem:HI (plus:SI (reg/f:SI 0 ax [235])
                (const_int 14 [0xe])) [4 inode_123->i_zone[0]+0 S2 A16])) "fs/exec.c":210:49 76 {*movhi_internal}
     (nil))
(insn 172 171 173 26 (set (reg:SI 1 dx [orig:113 _31 ] [113])
        (zero_extend:SI (reg:HI 0 ax [orig:112 _30 ] [112]))) "fs/exec.c":210:16 144 {*zero_extendhisi2}
     (nil))
(insn 173 172 174 26 (set (reg/f:SI 0 ax [236])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":210:27 75 {*movsi_internal}
     (nil))
(insn 174 173 175 26 (set (reg:HI 0 ax [orig:114 _32 ] [114])
        (mem:HI (plus:SI (reg/f:SI 0 ax [236])
                (const_int 44 [0x2c])) [4 inode_123->i_dev+0 S2 A32])) "fs/exec.c":210:27 76 {*movhi_internal}
     (nil))
(insn 175 174 176 26 (set (reg:SI 0 ax [orig:115 _33 ] [115])
        (zero_extend:SI (reg:HI 0 ax [orig:114 _32 ] [114]))) "fs/exec.c":210:16 144 {*zero_extendhisi2}
     (nil))
(insn 176 175 177 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":210:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 177 176 178 26 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 1 dx [orig:113 _31 ] [113])) "fs/exec.c":210:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 178 177 180 26 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:115 _33 ] [115])) "fs/exec.c":210:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 180 178 181 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7a64a9d10100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":210:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 181 180 183 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":210:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 183 181 184 26 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1220 [0x4c4])) [18 bh+0 S4 A32])
        (reg:SI 0 ax [237])) "fs/exec.c":210:16 75 {*movsi_internal}
     (nil))
(insn 184 183 185 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1220 [0x4c4])) [18 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":210:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 185 184 186 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "fs/exec.c":210:8 806 {*jcc}
     (nil)
 -> 190)
(note 186 185 187 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 840 27 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -13 [0xfffffffffffffff3])) "fs/exec.c":211:16 75 {*movsi_internal}
     (nil))
(jump_insn 840 187 841 27 (set (pc)
        (label_ref 785)) "fs/exec.c":212:9 807 {jump}
     (nil)
 -> 785)
(barrier 841 840 190)
(code_label 190 841 191 28 65 (nil) [1 uses])
(note 191 190 192 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 28 (set (reg/f:SI 0 ax [238])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1220 [0x4c4])) [18 bh+0 S4 A32])) "fs/exec.c":214:29 75 {*movsi_internal}
     (nil))
(insn 193 192 194 28 (set (reg/f:SI 0 ax [orig:116 _34 ] [116])
        (mem/f:SI (reg/f:SI 0 ax [238]) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":214:29 75 {*movsi_internal}
     (nil))
(insn 194 193 195 28 (set (reg:SI 1 dx [239])
        (mem:SI (reg/f:SI 0 ax [orig:116 _34 ] [116]) [16 MEM[(struct exec *)_34]+0 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 195 194 196 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1172 [0x494])) [16 ex+0 S4 A32])
        (reg:SI 1 dx [239])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 196 195 197 28 (set (reg:SI 1 dx [240])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 4 [0x4])) [16 MEM[(struct exec *)_34]+4 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 197 196 198 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1176 [0x498])) [16 ex+4 S4 A32])
        (reg:SI 1 dx [240])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 198 197 199 28 (set (reg:SI 1 dx [241])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 8 [0x8])) [16 MEM[(struct exec *)_34]+8 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 199 198 200 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1180 [0x49c])) [16 ex+8 S4 A32])
        (reg:SI 1 dx [241])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 200 199 201 28 (set (reg:SI 1 dx [242])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 12 [0xc])) [16 MEM[(struct exec *)_34]+12 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 201 200 202 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1184 [0x4a0])) [16 ex+12 S4 A32])
        (reg:SI 1 dx [242])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 202 201 203 28 (set (reg:SI 1 dx [243])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 16 [0x10])) [16 MEM[(struct exec *)_34]+16 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 203 202 204 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1188 [0x4a4])) [16 ex+16 S4 A32])
        (reg:SI 1 dx [243])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 204 203 205 28 (set (reg:SI 1 dx [244])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 20 [0x14])) [16 MEM[(struct exec *)_34]+20 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 205 204 206 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1192 [0x4a8])) [16 ex+20 S4 A32])
        (reg:SI 1 dx [244])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 206 205 207 28 (set (reg:SI 1 dx [245])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 24 [0x18])) [16 MEM[(struct exec *)_34]+24 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 207 206 208 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1196 [0x4ac])) [16 ex+24 S4 A32])
        (reg:SI 1 dx [245])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 208 207 209 28 (set (reg:SI 0 ax [246])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (const_int 28 [0x1c])) [16 MEM[(struct exec *)_34]+28 S4 A32])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 209 208 210 28 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1200 [0x4b0])) [16 ex+28 S4 A32])
        (reg:SI 0 ax [246])) "fs/exec.c":214:8 75 {*movsi_internal}
     (nil))
(insn 210 209 211 28 (set (reg/f:SI 0 ax [247])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1220 [0x4c4])) [18 bh+0 S4 A32])) "fs/exec.c":215:12 75 {*movsi_internal}
     (nil))
(insn 211 210 212 28 (set (reg/f:SI 0 ax [orig:117 _35 ] [117])
        (mem/f:SI (reg/f:SI 0 ax [247]) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":215:12 75 {*movsi_internal}
     (nil))
(insn 212 211 213 28 (set (reg:QI 0 ax [orig:118 _36 ] [118])
        (mem:QI (reg/f:SI 0 ax [orig:117 _35 ] [117]) [0 *_35+0 S1 A8])) "fs/exec.c":215:20 77 {*movqi_internal}
     (nil))
(insn 213 212 214 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:118 _36 ] [118])
            (const_int 35 [0x23]))) "fs/exec.c":215:8 9 {*cmpqi_1}
     (nil))
(jump_insn 214 213 215 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) "fs/exec.c":215:8 806 {*jcc}
     (nil)
 -> 471)
(note 215 214 216 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 29 (set (reg/f:SI 0 ax [248])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1220 [0x4c4])) [18 bh+0 S4 A32])) "fs/exec.c":215:38 75 {*movsi_internal}
     (nil))
(insn 217 216 218 29 (set (reg/f:SI 0 ax [orig:119 _37 ] [119])
        (mem/f:SI (reg/f:SI 0 ax [248]) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":215:38 75 {*movsi_internal}
     (nil))
(insn 218 217 219 29 (parallel [
            (set (reg/f:SI 0 ax [orig:120 _38 ] [120])
                (plus:SI (reg/f:SI 0 ax [orig:119 _37 ] [119])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":215:46 209 {*addsi_1}
     (nil))
(insn 219 218 220 29 (set (reg:QI 0 ax [orig:121 _39 ] [121])
        (mem:QI (reg/f:SI 0 ax [orig:120 _38 ] [120]) [0 *_38+0 S1 A8])) "fs/exec.c":215:46 77 {*movqi_internal}
     (nil))
(insn 220 219 221 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:121 _39 ] [121])
            (const_int 33 [0x21]))) "fs/exec.c":215:32 9 {*cmpqi_1}
     (nil))
(jump_insn 221 220 222 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) "fs/exec.c":215:32 806 {*jcc}
     (nil)
 -> 471)
(note 222 221 223 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1244 [0x4dc])) [9 sh_bang+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":215:58 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 224 223 225 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) "fs/exec.c":215:58 806 {*jcc}
     (nil)
 -> 471)
(note 225 224 226 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 31 (set (reg/f:SI 0 ax [249])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1220 [0x4c4])) [18 bh+0 S4 A32])) "fs/exec.c":223:24 75 {*movsi_internal}
     (nil))
(insn 227 226 228 31 (set (reg/f:SI 0 ax [orig:122 _40 ] [122])
        (mem/f:SI (reg/f:SI 0 ax [249]) [2 bh_194->b_data+0 S4 A32])) "fs/exec.c":223:24 75 {*movsi_internal}
     (nil))
(insn 228 227 229 31 (parallel [
            (set (reg/f:SI 0 ax [orig:123 _41 ] [123])
                (plus:SI (reg/f:SI 0 ax [orig:122 _40 ] [122])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:33 209 {*addsi_1}
     (nil))
(insn 229 228 230 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 230 229 231 31 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1022 [0x3fe])) "fs/exec.c":223:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 231 230 232 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:123 _41 ] [123])) "fs/exec.c":223:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 232 231 233 31 (parallel [
            (set (reg:SI 0 ax [250])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:9 209 {*addsi_1}
     (nil))
(insn 233 232 235 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [250])) "fs/exec.c":223:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 235 233 236 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strncpy") [flags 0x41]  <function_decl 0x7a64a9d4d100 strncpy>) [0 strncpy S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":223:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 236 235 237 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":223:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 237 236 238 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":224:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 238 237 240 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1232 [0x4d0])) [18 bh+0 S4 A32])) "fs/exec.c":224:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 240 238 241 31 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7a64a9d10200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":224:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 241 240 242 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":224:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 242 241 243 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":225:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 243 242 245 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1272 [0x4f8])) [11 inode+0 S4 A32])) "fs/exec.c":225:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 245 243 246 31 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7a64a9cd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":225:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 246 245 247 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":225:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 247 246 248 31 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 1035 [0x40b])) [0 buf[1022]+0 S1 A8])
        (const_int 0 [0])) "fs/exec.c":226:19 77 {*movqi_internal}
     (nil))
(insn 248 247 249 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":227:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 249 248 250 31 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 10 [0xa])) "fs/exec.c":227:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 250 249 251 31 (parallel [
            (set (reg:SI 0 ax [251])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":227:19 209 {*addsi_1}
     (nil))
(insn 251 250 253 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [251])) "fs/exec.c":227:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 253 251 254 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strchr") [flags 0x41]  <function_decl 0x7a64a9d4d500 strchr>) [0 strchr S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":227:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 254 253 256 31 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":227:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 256 254 257 31 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
        (reg:SI 0 ax [252])) "fs/exec.c":227:19 75 {*movsi_internal}
     (nil))
(insn 257 256 258 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":227:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 258 257 259 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 280)
            (pc))) "fs/exec.c":227:12 806 {*jcc}
     (nil)
 -> 280)
(note 259 258 260 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 32 (set (reg/f:SI 0 ax [253])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":228:17 75 {*movsi_internal}
     (nil))
(insn 261 260 262 32 (set (mem:QI (reg/f:SI 0 ax [253]) [0 *cp_201+0 S1 A8])
        (const_int 0 [0])) "fs/exec.c":228:17 77 {*movqi_internal}
     (nil))
(insn 262 261 263 32 (parallel [
            (set (reg:SI 0 ax [254])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":229:21 209 {*addsi_1}
     (nil))
(insn 263 262 842 32 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
        (reg:SI 0 ax [254])) "fs/exec.c":229:21 75 {*movsi_internal}
     (nil))
(jump_insn 842 263 843 32 (set (pc)
        (label_ref 268)) "fs/exec.c":229:13 807 {jump}
     (nil)
 -> 268)
(barrier 843 842 272)
(code_label 272 843 266 33 69 (nil) [2 uses])
(note 266 272 267 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 33 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":229:61 209 {*addsi_1}
     (nil))
(code_label 268 267 269 34 68 (nil) [1 uses])
(note 269 268 270 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 34 (set (reg/f:SI 0 ax [255])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":229:29 75 {*movsi_internal}
     (nil))
(insn 271 270 273 34 (set (reg:QI 0 ax [orig:124 _42 ] [124])
        (mem:QI (reg/f:SI 0 ax [255]) [0 *cp_141+0 S1 A8])) "fs/exec.c":229:29 77 {*movqi_internal}
     (nil))
(insn 273 271 274 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:124 _42 ] [124])
            (const_int 32 [0x20]))) "fs/exec.c":229:41 9 {*cmpqi_1}
     (nil))
(jump_insn 274 273 275 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) "fs/exec.c":229:41 806 {*jcc}
     (nil)
 -> 272)
(note 275 274 276 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 35 (set (reg/f:SI 0 ax [256])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":229:45 75 {*movsi_internal}
     (nil))
(insn 277 276 278 35 (set (reg:QI 0 ax [orig:125 _43 ] [125])
        (mem:QI (reg/f:SI 0 ax [256]) [0 *cp_141+0 S1 A8])) "fs/exec.c":229:45 77 {*movqi_internal}
     (nil))
(insn 278 277 279 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:125 _43 ] [125])
            (const_int 9 [0x9]))) "fs/exec.c":229:41 9 {*cmpqi_1}
     (nil))
(jump_insn 279 278 280 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) "fs/exec.c":229:41 806 {*jcc}
     (nil)
 -> 272)
(code_label 280 279 281 36 67 (nil) [1 uses])
(note 281 280 282 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":232:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 283 282 284 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) "fs/exec.c":232:12 806 {*jcc}
     (nil)
 -> 289)
(note 284 283 285 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 37 (set (reg/f:SI 0 ax [257])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":232:20 75 {*movsi_internal}
     (nil))
(insn 286 285 287 37 (set (reg:QI 0 ax [orig:126 _44 ] [126])
        (mem:QI (reg/f:SI 0 ax [257]) [0 *cp_142+0 S1 A8])) "fs/exec.c":232:20 77 {*movqi_internal}
     (nil))
(insn 287 286 288 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:126 _44 ] [126])
            (const_int 0 [0]))) "fs/exec.c":232:17 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 288 287 289 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) "fs/exec.c":232:17 806 {*jcc}
     (nil)
 -> 294)
(code_label 289 288 290 38 70 (nil) [1 uses])
(note 290 289 291 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 844 38 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":233:20 75 {*movsi_internal}
     (nil))
(jump_insn 844 291 845 38 (set (pc)
        (label_ref 792)) "fs/exec.c":234:13 807 {jump}
     (nil)
 -> 792)
(barrier 845 844 294)
(code_label 294 845 295 39 71 (nil) [1 uses])
(note 295 294 296 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 297 39 (set (reg/f:SI 0 ax [258])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":236:25 75 {*movsi_internal}
     (nil))
(insn 297 296 298 39 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1040 [0x410])) [2 i_name+0 S4 A32])
        (reg/f:SI 0 ax [258])) "fs/exec.c":236:25 75 {*movsi_internal}
     (nil))
(insn 298 297 299 39 (set (reg/f:SI 0 ax [259])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1040 [0x410])) [2 i_name+0 S4 A32])) "fs/exec.c":236:16 75 {*movsi_internal}
     (nil))
(insn 299 298 300 39 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1216 [0x4c0])) [2 interp+0 S4 A32])
        (reg/f:SI 0 ax [259])) "fs/exec.c":236:16 75 {*movsi_internal}
     (nil))
(insn 300 299 846 39 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1036 [0x40c])) [2 i_arg+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":237:16 75 {*movsi_internal}
     (nil))
(jump_insn 846 300 847 39 (set (pc)
        (label_ref 315)) "fs/exec.c":238:9 807 {jump}
     (nil)
 -> 315)
(barrier 847 846 329)
(code_label 329 847 303 40 76 (nil) [1 uses])
(note 303 329 304 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 40 (set (reg/f:SI 0 ax [260])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":239:17 75 {*movsi_internal}
     (nil))
(insn 305 304 306 40 (set (reg:QI 0 ax [orig:127 _45 ] [127])
        (mem:QI (reg/f:SI 0 ax [260]) [0 *cp_143+0 S1 A8])) "fs/exec.c":239:17 77 {*movqi_internal}
     (nil))
(insn 306 305 307 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:127 _45 ] [127])
            (const_int 47 [0x2f]))) "fs/exec.c":239:16 9 {*cmpqi_1}
     (nil))
(jump_insn 307 306 308 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) "fs/exec.c":239:16 806 {*jcc}
     (nil)
 -> 312)
(note 308 307 309 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 41 (set (reg/f:SI 0 ax [261])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":240:29 75 {*movsi_internal}
     (nil))
(insn 310 309 311 41 (parallel [
            (set (reg/f:SI 0 ax [orig:128 _46 ] [128])
                (plus:SI (reg/f:SI 0 ax [261])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":240:29 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 cp+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 311 310 312 41 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1040 [0x410])) [2 i_name+0 S4 A32])
        (reg/f:SI 0 ax [orig:128 _46 ] [128])) "fs/exec.c":240:24 75 {*movsi_internal}
     (nil))
(code_label 312 311 313 42 74 (nil) [1 uses])
(note 313 312 314 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 42 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":238:57 209 {*addsi_1}
     (nil))
(code_label 315 314 316 43 73 (nil) [1 uses])
(note 316 315 317 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 43 (set (reg/f:SI 0 ax [262])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":238:17 75 {*movsi_internal}
     (nil))
(insn 318 317 319 43 (set (reg:QI 0 ax [orig:129 _47 ] [129])
        (mem:QI (reg/f:SI 0 ax [262]) [0 *cp_143+0 S1 A8])) "fs/exec.c":238:17 77 {*movqi_internal}
     (nil))
(insn 319 318 320 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:129 _47 ] [129])
            (const_int 0 [0]))) "fs/exec.c":238:37 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 320 319 321 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) "fs/exec.c":238:37 806 {*jcc}
     (nil)
 -> 332)
(note 321 320 322 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 44 (set (reg/f:SI 0 ax [263])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":238:25 75 {*movsi_internal}
     (nil))
(insn 323 322 324 44 (set (reg:QI 0 ax [orig:130 _48 ] [130])
        (mem:QI (reg/f:SI 0 ax [263]) [0 *cp_143+0 S1 A8])) "fs/exec.c":238:25 77 {*movqi_internal}
     (nil))
(insn 324 323 325 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:130 _48 ] [130])
            (const_int 32 [0x20]))) "fs/exec.c":238:21 9 {*cmpqi_1}
     (nil))
(jump_insn 325 324 326 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) "fs/exec.c":238:21 806 {*jcc}
     (nil)
 -> 332)
(note 326 325 327 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 45 (set (reg/f:SI 0 ax [264])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":238:41 75 {*movsi_internal}
     (nil))
(insn 328 327 330 45 (set (reg:QI 0 ax [orig:131 _49 ] [131])
        (mem:QI (reg/f:SI 0 ax [264]) [0 *cp_143+0 S1 A8])) "fs/exec.c":238:41 77 {*movqi_internal}
     (nil))
(insn 330 328 331 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:131 _49 ] [131])
            (const_int 9 [0x9]))) "fs/exec.c":238:37 9 {*cmpqi_1}
     (nil))
(jump_insn 331 330 332 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "fs/exec.c":238:37 806 {*jcc}
     (nil)
 -> 329)
(code_label 332 331 333 46 75 (nil) [2 uses])
(note 333 332 334 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 46 (set (reg/f:SI 0 ax [265])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":242:13 75 {*movsi_internal}
     (nil))
(insn 335 334 336 46 (set (reg:QI 0 ax [orig:132 _50 ] [132])
        (mem:QI (reg/f:SI 0 ax [265]) [0 *cp_143+0 S1 A8])) "fs/exec.c":242:13 77 {*movqi_internal}
     (nil))
(insn 336 335 337 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:132 _50 ] [132])
            (const_int 0 [0]))) "fs/exec.c":242:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 337 336 338 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) "fs/exec.c":242:12 806 {*jcc}
     (nil)
 -> 345)
(note 338 337 339 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 47 (set (reg/f:SI 0 ax [orig:133 cp.41_51 ] [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":243:16 75 {*movsi_internal}
     (nil))
(insn 340 339 341 47 (parallel [
            (set (reg:SI 1 dx [266])
                (plus:SI (reg/f:SI 0 ax [orig:133 cp.41_51 ] [133])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":243:16 209 {*addsi_1}
     (nil))
(insn 341 340 342 47 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])
        (reg:SI 1 dx [266])) "fs/exec.c":243:16 75 {*movsi_internal}
     (nil))
(insn 342 341 343 47 (set (mem:QI (reg/f:SI 0 ax [orig:133 cp.41_51 ] [133]) [0 *cp.41_51+0 S1 A8])
        (const_int 0 [0])) "fs/exec.c":243:19 77 {*movqi_internal}
     (nil))
(insn 343 342 344 47 (set (reg/f:SI 0 ax [267])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [2 cp+0 S4 A32])) "fs/exec.c":244:19 75 {*movsi_internal}
     (nil))
(insn 344 343 345 47 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1036 [0x40c])) [2 i_arg+0 S4 A32])
        (reg/f:SI 0 ax [267])) "fs/exec.c":244:19 75 {*movsi_internal}
     (nil))
(code_label 345 344 346 48 77 (nil) [1 uses])
(note 346 345 347 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 48 (set (reg:SI 0 ax [orig:134 sh_bang.42_52 ] [134])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1244 [0x4dc])) [9 sh_bang+0 S4 A32])) "fs/exec.c":250:20 75 {*movsi_internal}
     (nil))
(insn 348 347 349 48 (parallel [
            (set (reg:SI 1 dx [268])
                (plus:SI (reg:SI 0 ax [orig:134 sh_bang.42_52 ] [134])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":250:20 209 {*addsi_1}
     (nil))
(insn 349 348 350 48 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1244 [0x4dc])) [9 sh_bang+0 S4 A32])
        (reg:SI 1 dx [268])) "fs/exec.c":250:20 75 {*movsi_internal}
     (nil))
(insn 350 349 351 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:134 sh_bang.42_52 ] [134])
            (const_int 0 [0]))) "fs/exec.c":250:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 351 350 352 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) "fs/exec.c":250:12 806 {*jcc}
     (nil)
 -> 378)
(note 352 351 353 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":251:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 354 353 355 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 355 354 356 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [1 p+0 S4 A32])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 356 355 357 49 (parallel [
            (set (reg:SI 0 ax [269])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":251:17 209 {*addsi_1}
     (nil))
(insn 357 356 358 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 0 ax [269])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 358 357 359 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1320 [0x528])) [20 envp+0 S4 A32])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 359 358 360 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [9 envc+0 S4 A32])) "fs/exec.c":251:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 360 359 361 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":251:17 823 {*call_value}
     (nil)
    (nil))
(insn 361 360 363 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":251:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 363 361 364 49 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg:SI 0 ax [270])) "fs/exec.c":251:17 75 {*movsi_internal}
     (nil))
(insn 364 363 365 49 (set (reg/f:SI 0 ax [271])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1292 [0x50c])) [20 argv+0 S4 A32])) "fs/exec.c":252:17 75 {*movsi_internal}
     (nil))
(insn 365 364 366 49 (parallel [
            (set (reg/f:SI 1 dx [orig:135 _53 ] [135])
                (plus:SI (reg/f:SI 0 ax [271])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 12 [0xc])) [20 argv+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 366 365 367 49 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:15 209 {*addsi_1}
     (nil))
(insn 367 366 368 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 368 367 369 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 369 368 370 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [1 p+0 S4 A32])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 370 369 371 49 (parallel [
            (set (reg:SI 0 ax [272])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (nil))
(insn 371 370 372 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 0 ax [272])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 372 371 373 49 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 1 dx [orig:135 _53 ] [135])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 373 372 374 49 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1280 [0x500])) [9 argc+0 S4 A32])) "fs/exec.c":252:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 374 373 375 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":252:17 823 {*call_value}
     (nil)
    (nil))
(insn 375 374 377 49 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":252:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 377 375 378 49 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg:SI 0 ax [273])) "fs/exec.c":252:17 75 {*movsi_internal}
     (nil))
(code_label 378 377 379 50 78 (nil) [1 uses])
(note 379 378 380 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 50 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 381 380 382 50 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 382 381 383 50 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [1 p+0 S4 A32])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 383 382 384 50 (parallel [
            (set (reg:SI 0 ax [274])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (nil))
(insn 384 383 385 50 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 0 ax [274])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 385 384 386 50 (parallel [
            (set (reg:SI 0 ax [275])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1312 [0x520])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (nil))
(insn 386 385 387 50 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg:SI 0 ax [275])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 387 386 388 50 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":262:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 388 387 389 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":262:13 823 {*call_value}
     (nil)
    (nil))
(insn 389 388 391 50 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":262:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 391 389 392 50 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg:SI 0 ax [276])) "fs/exec.c":262:13 75 {*movsi_internal}
     (nil))
(insn 392 391 393 50 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":263:13 209 {*addsi_1}
     (nil))
(insn 393 392 394 50 (set (reg/f:SI 0 ax [orig:136 i_arg.43_54 ] [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1036 [0x40c])) [2 i_arg+0 S4 A32])) "fs/exec.c":264:13 75 {*movsi_internal}
     (nil))
(insn 394 393 395 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:136 i_arg.43_54 ] [136])
            (const_int 0 [0]))) "fs/exec.c":264:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 395 394 396 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) "fs/exec.c":264:12 806 {*jcc}
     (nil)
 -> 410)
(note 396 395 397 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 51 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 398 397 399 51 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 2 [0x2])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 399 398 400 51 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [1 p+0 S4 A32])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 400 399 401 51 (parallel [
            (set (reg:SI 0 ax [277])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (nil))
(insn 401 400 402 51 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 0 ax [277])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 402 401 403 51 (parallel [
            (set (reg:SI 0 ax [278])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1060 [0x424])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (nil))
(insn 403 402 404 51 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg:SI 0 ax [278])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 404 403 405 51 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":265:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 405 404 406 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":265:17 823 {*call_value}
     (nil)
    (nil))
(insn 406 405 408 51 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":265:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 408 406 409 51 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg:SI 0 ax [279])) "fs/exec.c":265:17 75 {*movsi_internal}
     (nil))
(insn 409 408 410 51 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":266:17 209 {*addsi_1}
     (nil))
(code_label 410 409 411 52 79 (nil) [1 uses])
(note 411 410 412 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 52 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 413 412 414 52 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 2 [0x2])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 414 413 415 52 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [1 p+0 S4 A32])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 415 414 416 52 (parallel [
            (set (reg:SI 0 ax [280])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (nil))
(insn 416 415 417 52 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 0 ax [280])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 417 416 418 52 (parallel [
            (set (reg:SI 0 ax [281])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (nil))
(insn 418 417 419 52 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg:SI 0 ax [281])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 419 418 420 52 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/exec.c":268:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 420 419 421 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":268:13 823 {*call_value}
     (nil)
    (nil))
(insn 421 420 423 52 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":268:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 423 421 424 52 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg:SI 0 ax [282])) "fs/exec.c":268:13 75 {*movsi_internal}
     (nil))
(insn 424 423 425 52 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1252 [0x4e4])) [9 argc+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":269:13 209 {*addsi_1}
     (nil))
(insn 425 424 426 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":270:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 426 425 427 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) "fs/exec.c":270:12 806 {*jcc}
     (nil)
 -> 431)
(note 427 426 428 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 848 53 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -12 [0xfffffffffffffff4])) "fs/exec.c":271:20 75 {*movsi_internal}
     (nil))
(jump_insn 848 428 849 53 (set (pc)
        (label_ref 792)) "fs/exec.c":272:13 807 {jump}
     (nil)
 -> 792)
(barrier 849 848 431)
(code_label 431 849 432 54 80 (nil) [1 uses])
(note 432 431 433 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(call_insn 433 432 435 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs") [flags 0x3]  <function_decl 0x7a64a9d3e800 get_fs>) [0 get_fs S1 A8])
            (const_int 0 [0]))) "fs/exec.c":277:18 823 {*call_value}
     (nil)
    (nil))
(insn 435 433 436 54 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1212 [0x4bc])) [1 old_fs+0 S4 A32])
        (reg:SI 0 ax [283])) "fs/exec.c":277:18 75 {*movsi_internal}
     (nil))
(call_insn 436 435 438 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_ds") [flags 0x3]  <function_decl 0x7a64a9d3ea00 get_ds>) [0 get_ds S1 A8])
            (const_int 0 [0]))) "fs/exec.c":278:9 823 {*call_value}
     (nil)
    (nil))
(insn 438 436 439 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":278:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 439 438 440 54 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:137 _55 ] [137])) "fs/exec.c":278:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 440 439 441 54 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":278:9 812 {*call}
     (nil)
    (nil))
(insn 441 440 442 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":278:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 442 441 443 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":279:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 443 442 445 54 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1228 [0x4cc])) [2 interp+0 S4 A32])) "fs/exec.c":279:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 445 443 446 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x7a64a9d15500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":279:23 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 446 445 448 54 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":279:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 448 446 449 54 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])
        (reg:SI 0 ax [284])) "fs/exec.c":279:23 75 {*movsi_internal}
     (nil))
(insn 449 448 450 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":279:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 450 449 451 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) "fs/exec.c":279:12 806 {*jcc}
     (nil)
 -> 459)
(note 451 450 452 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 55 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":280:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 453 452 454 55 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1224 [0x4c8])) [1 old_fs+0 S4 A32])) "fs/exec.c":280:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 454 453 455 55 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":280:13 812 {*call}
     (nil)
    (nil))
(insn 455 454 456 55 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":280:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 456 455 850 55 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -2 [0xfffffffffffffffe])) "fs/exec.c":281:20 75 {*movsi_internal}
     (nil))
(jump_insn 850 456 851 55 (set (pc)
        (label_ref 792)) "fs/exec.c":282:13 807 {jump}
     (nil)
 -> 792)
(barrier 851 850 459)
(code_label 459 851 460 56 81 (nil) [1 uses])
(note 460 459 461 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":284:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 462 461 463 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1224 [0x4c8])) [1 old_fs+0 S4 A32])) "fs/exec.c":284:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 463 462 464 56 (call (mem:QI (symbol_ref:SI ("set_fs") [flags 0x3]  <function_decl 0x7a64a9d3ec00 set_fs>) [0 set_fs S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":284:9 812 {*call}
     (nil)
    (nil))
(insn 464 463 852 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":284:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 852 464 853 56 (set (pc)
        (label_ref 65)) 807 {jump}
     (nil)
 -> 65)
(barrier 853 852 471)
(code_label 471 853 472 57 66 (nil) [3 uses])
(note 472 471 473 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 57 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":287:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 474 473 476 57 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1232 [0x4d0])) [18 bh+0 S4 A32])) "fs/exec.c":287:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 476 474 477 57 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7a64a9d10200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":287:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 477 476 478 57 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":287:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 478 477 479 57 (set (reg:SI 0 ax [orig:138 _56 ] [138])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1172 [0x494])) [1 ex.a_magic+0 S4 A32])) "fs/exec.c":288:9 75 {*movsi_internal}
     (nil))
(insn 479 478 480 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:138 _56 ] [138])
            (const_int 267 [0x10b]))) "fs/exec.c":288:8 11 {*cmpsi_1}
     (nil))
(jump_insn 480 479 481 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:8 806 {*jcc}
     (nil)
 -> 522)
(note 481 480 482 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 58 (set (reg:SI 0 ax [orig:139 _57 ] [139])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1196 [0x4ac])) [9 ex.a_trsize+0 S4 A32])) "fs/exec.c":288:36 75 {*movsi_internal}
     (nil))
(insn 483 482 484 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:139 _57 ] [139])
            (const_int 0 [0]))) "fs/exec.c":288:31 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 484 483 485 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:31 806 {*jcc}
     (nil)
 -> 522)
(note 485 484 486 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 59 (set (reg:SI 0 ax [orig:140 _58 ] [140])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1200 [0x4b0])) [9 ex.a_drsize+0 S4 A32])) "fs/exec.c":288:51 75 {*movsi_internal}
     (nil))
(insn 487 486 488 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:140 _58 ] [140])
            (const_int 0 [0]))) "fs/exec.c":288:46 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 488 487 489 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:46 806 {*jcc}
     (nil)
 -> 522)
(note 489 488 490 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 60 (set (reg:SI 1 dx [orig:141 _59 ] [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1176 [0x498])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":289:13 75 {*movsi_internal}
     (nil))
(insn 491 490 492 60 (set (reg:SI 0 ax [orig:142 _60 ] [142])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1180 [0x49c])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":289:25 75 {*movsi_internal}
     (nil))
(insn 492 491 493 60 (parallel [
            (set (reg:SI 1 dx [orig:143 _61 ] [143])
                (plus:SI (reg:SI 1 dx [orig:141 _59 ] [141])
                    (reg:SI 0 ax [orig:142 _60 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":289:21 209 {*addsi_1}
     (nil))
(insn 493 492 494 60 (set (reg:SI 0 ax [orig:144 _62 ] [144])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1184 [0x4a0])) [9 ex.a_bss+0 S4 A32])) "fs/exec.c":289:37 75 {*movsi_internal}
     (nil))
(insn 494 493 497 60 (parallel [
            (set (reg:SI 0 ax [orig:145 _63 ] [145])
                (plus:SI (reg:SI 0 ax [orig:144 _62 ] [144])
                    (reg:SI 1 dx [orig:143 _61 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":289:33 209 {*addsi_1}
     (nil))
(insn 497 494 498 60 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:145 _63 ] [145])
            (const_int 50331648 [0x3000000]))) "fs/exec.c":288:61 11 {*cmpsi_1}
     (nil))
(jump_insn 498 497 499 60 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 522)
            (pc))) "fs/exec.c":288:61 806 {*jcc}
     (nil)
 -> 522)
(note 499 498 500 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 61 (set (reg/f:SI 0 ax [285])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":290:16 75 {*movsi_internal}
     (nil))
(insn 501 500 502 61 (set (reg:SI 0 ax [orig:146 _64 ] [146])
        (mem:SI (plus:SI (reg/f:SI 0 ax [285])
                (const_int 4 [0x4])) [1 inode_123->i_size+0 S4 A32])) "fs/exec.c":290:16 75 {*movsi_internal}
     (nil))
(insn 502 501 503 61 (set (reg:SI 2 cx [orig:147 _65 ] [147])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1176 [0x498])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":290:29 75 {*movsi_internal}
     (nil))
(insn 503 502 504 61 (set (reg:SI 1 dx [orig:148 _66 ] [148])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1180 [0x49c])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":290:41 75 {*movsi_internal}
     (nil))
(insn 504 503 505 61 (parallel [
            (set (reg:SI 2 cx [orig:149 _67 ] [149])
                (plus:SI (reg:SI 2 cx [orig:147 _65 ] [147])
                    (reg:SI 1 dx [orig:148 _66 ] [148])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":290:37 209 {*addsi_1}
     (nil))
(insn 505 504 506 61 (set (reg:SI 1 dx [orig:150 _68 ] [150])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1188 [0x4a4])) [9 ex.a_syms+0 S4 A32])) "fs/exec.c":290:53 75 {*movsi_internal}
     (nil))
(insn 506 505 507 61 (parallel [
            (set (reg:SI 2 cx [orig:151 _69 ] [151])
                (plus:SI (reg:SI 2 cx [orig:149 _67 ] [149])
                    (reg:SI 1 dx [orig:150 _68 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":290:49 209 {*addsi_1}
     (nil))
(insn 507 506 508 61 (set (reg:SI 1 dx [orig:152 _70 ] [152])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1172 [0x494])) [1 ex.a_magic+0 S4 A32])) "fs/exec.c":290:63 75 {*movsi_internal}
     (nil))
(insn 508 507 509 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:152 _70 ] [152])
            (const_int 267 [0x10b]))) "fs/exec.c":290:63 11 {*cmpsi_1}
     (nil))
(jump_insn 509 508 510 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) "fs/exec.c":290:63 806 {*jcc}
     (nil)
 -> 514)
(note 510 509 511 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 854 62 (set (reg:SI 1 dx [orig:208 iftmp.44_147 ] [208])
        (const_int 1024 [0x400])) "fs/exec.c":290:63 75 {*movsi_internal}
     (nil))
(jump_insn 854 511 855 62 (set (pc)
        (label_ref 517)) 807 {jump}
     (nil)
 -> 517)
(barrier 855 854 514)
(code_label 514 855 515 63 84 (nil) [1 uses])
(note 515 514 516 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 63 (set (reg:SI 1 dx [orig:208 iftmp.44_147 ] [208])
        (const_int 32 [0x20])) "fs/exec.c":290:63 75 {*movsi_internal}
     (nil))
(code_label 517 516 518 64 85 (nil) [1 uses])
(note 518 517 519 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 64 (parallel [
            (set (reg:SI 1 dx [orig:153 _71 ] [153])
                (plus:SI (reg:SI 1 dx [orig:208 iftmp.44_147 ] [208])
                    (reg:SI 2 cx [orig:151 _69 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":290:61 209 {*addsi_1}
     (nil))
(insn 520 519 521 64 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:146 _64 ] [146])
            (reg:SI 1 dx [orig:153 _71 ] [153]))) "fs/exec.c":289:56 11 {*cmpsi_1}
     (nil))
(jump_insn 521 520 522 64 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) "fs/exec.c":289:56 806 {*jcc}
     (nil)
 -> 527)
(code_label 522 521 523 65 83 (nil) [4 uses])
(note 523 522 524 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 856 65 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":291:16 75 {*movsi_internal}
     (nil))
(jump_insn 856 524 857 65 (set (pc)
        (label_ref 785)) "fs/exec.c":292:9 807 {jump}
     (nil)
 -> 785)
(barrier 857 856 527)
(code_label 527 857 528 66 86 (nil) [1 uses])
(note 528 527 529 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 66 (set (reg:SI 0 ax [orig:154 _72 ] [154])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1172 [0x494])) [1 ex.a_magic+0 S4 A32])) "fs/exec.c":294:9 75 {*movsi_internal}
     (nil))
(insn 530 529 531 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:154 _72 ] [154])
            (const_int 267 [0x10b]))) "fs/exec.c":294:8 11 {*cmpsi_1}
     (nil))
(jump_insn 531 530 532 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 544)
            (pc))) "fs/exec.c":294:8 806 {*jcc}
     (nil)
 -> 544)
(note 532 531 533 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 534 67 (set (reg/f:SI 0 ax [orig:155 filename.45_73 ] [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1288 [0x508])) [2 filename+0 S4 A32])) "fs/exec.c":295:9 75 {*movsi_internal}
     (nil))
(insn 534 533 535 67 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":295:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 535 534 536 67 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:155 filename.45_73 ] [155])) "fs/exec.c":295:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 536 535 537 67 (set (reg/f:SI 0 ax [286])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7a64a9ddc3f0 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/exec.c":295:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7a64a9ddc3f0 *.LC2>)
        (nil)))
(insn 537 536 539 67 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [286])) "fs/exec.c":295:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 539 537 540 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7a64a9d38e00 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":295:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 540 539 541 67 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":295:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 541 540 858 67 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -8 [0xfffffffffffffff8])) "fs/exec.c":296:16 75 {*movsi_internal}
     (nil))
(jump_insn 858 541 859 67 (set (pc)
        (label_ref 785)) "fs/exec.c":297:9 807 {jump}
     (nil)
 -> 785)
(barrier 859 858 544)
(code_label 544 859 545 68 87 (nil) [1 uses])
(note 545 544 546 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1244 [0x4dc])) [9 sh_bang+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":299:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 547 546 548 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 577)
            (pc))) "fs/exec.c":299:8 806 {*jcc}
     (nil)
 -> 577)
(note 548 547 549 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":300:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 550 549 551 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 551 550 552 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [1 p+0 S4 A32])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 552 551 553 69 (parallel [
            (set (reg:SI 0 ax [287])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":300:13 209 {*addsi_1}
     (nil))
(insn 553 552 554 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 0 ax [287])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 554 553 555 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1320 [0x528])) [20 envp+0 S4 A32])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 555 554 556 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [9 envc+0 S4 A32])) "fs/exec.c":300:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 556 555 557 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":300:13 823 {*call_value}
     (nil)
    (nil))
(insn 557 556 559 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":300:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 559 557 560 69 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg:SI 0 ax [288])) "fs/exec.c":300:13 75 {*movsi_internal}
     (nil))
(insn 560 559 561 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":301:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 561 560 562 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 562 561 563 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [1 p+0 S4 A32])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 563 562 564 69 (parallel [
            (set (reg:SI 0 ax [289])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1064 [0x428])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":301:13 209 {*addsi_1}
     (nil))
(insn 564 563 565 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 0 ax [289])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 565 564 566 69 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1316 [0x524])) [20 argv+0 S4 A32])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 566 565 567 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1280 [0x500])) [9 argc+0 S4 A32])) "fs/exec.c":301:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 567 566 568 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("copy_strings") [flags 0x3]  <function_decl 0x7a64a9d4dd00 copy_strings>) [0 copy_strings S1 A8])
            (const_int 32 [0x20]))) "fs/exec.c":301:13 823 {*call_value}
     (nil)
    (nil))
(insn 568 567 570 69 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":301:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 570 568 571 69 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg:SI 0 ax [290])) "fs/exec.c":301:13 75 {*movsi_internal}
     (nil))
(insn 571 570 572 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
            (const_int 0 [0]))) "fs/exec.c":302:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 572 571 573 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 577)
            (pc))) "fs/exec.c":302:12 806 {*jcc}
     (nil)
 -> 577)
(note 573 572 574 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 860 70 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])
        (const_int -12 [0xfffffffffffffff4])) "fs/exec.c":303:20 75 {*movsi_internal}
     (nil))
(jump_insn 860 574 861 70 (set (pc)
        (label_ref 785)) "fs/exec.c":304:13 807 {jump}
     (nil)
 -> 785)
(barrier 861 860 577)
(code_label 577 861 578 71 88 (nil) [2 uses])
(note 578 577 579 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 71 (set (reg/f:SI 0 ax [291])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":308:16 75 {*movsi_internal}
     (nil))
(insn 580 579 581 71 (set (reg/f:SI 0 ax [orig:156 current.46_74 ] [156])
        (mem/f/c:SI (reg/f:SI 0 ax [291]) [5 current+0 S4 A32])) "fs/exec.c":308:16 75 {*movsi_internal}
     (nil))
(insn 581 580 582 71 (set (reg/f:SI 0 ax [orig:157 _75 ] [157])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:156 current.46_74 ] [156])
                (const_int 632 [0x278])) [11 current.46_74->executable+0 S4 A32])) "fs/exec.c":308:16 75 {*movsi_internal}
     (nil))
(insn 582 581 583 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:157 _75 ] [157])
            (const_int 0 [0]))) "fs/exec.c":308:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 583 582 584 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) "fs/exec.c":308:8 806 {*jcc}
     (nil)
 -> 593)
(note 584 583 585 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 72 (set (reg/f:SI 0 ax [292])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":309:21 75 {*movsi_internal}
     (nil))
(insn 586 585 587 72 (set (reg/f:SI 0 ax [orig:158 current.47_76 ] [158])
        (mem/f/c:SI (reg/f:SI 0 ax [292]) [5 current+0 S4 A32])) "fs/exec.c":309:21 75 {*movsi_internal}
     (nil))
(insn 587 586 588 72 (set (reg/f:SI 0 ax [orig:159 _77 ] [159])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:158 current.47_76 ] [158])
                (const_int 632 [0x278])) [11 current.47_76->executable+0 S4 A32])) "fs/exec.c":309:9 75 {*movsi_internal}
     (nil))
(insn 588 587 589 72 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":309:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 589 588 591 72 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg/f:SI 0 ax [orig:159 _77 ] [159])) "fs/exec.c":309:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 591 589 592 72 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7a64a9cd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":309:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 592 591 593 72 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":309:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 593 592 594 73 89 (nil) [1 uses])
(note 594 593 595 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 73 (set (reg/f:SI 0 ax [293])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":310:12 75 {*movsi_internal}
     (nil))
(insn 596 595 597 73 (set (reg/f:SI 0 ax [orig:160 current.48_78 ] [160])
        (mem/f/c:SI (reg/f:SI 0 ax [293]) [5 current+0 S4 A32])) "fs/exec.c":310:12 75 {*movsi_internal}
     (nil))
(insn 597 596 598 73 (set (reg/f:SI 1 dx [294])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [11 inode+0 S4 A32])) "fs/exec.c":310:25 75 {*movsi_internal}
     (nil))
(insn 598 597 599 73 (set (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:160 current.48_78 ] [160])
                (const_int 632 [0x278])) [11 current.48_78->executable+0 S4 A32])
        (reg/f:SI 1 dx [294])) "fs/exec.c":310:25 75 {*movsi_internal}
     (nil))
(insn 599 598 862 73 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":311:12 75 {*movsi_internal}
     (nil))
(jump_insn 862 599 863 73 (set (pc)
        (label_ref 611)) "fs/exec.c":311:5 807 {jump}
     (nil)
 -> 611)
(barrier 863 862 613)
(code_label 613 863 602 74 91 (nil) [1 uses])
(note 602 613 603 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 74 (set (reg/f:SI 0 ax [295])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":312:16 75 {*movsi_internal}
     (nil))
(insn 604 603 605 74 (set (reg/f:SI 1 dx [orig:161 current.49_79 ] [161])
        (mem/f/c:SI (reg/f:SI 0 ax [295]) [5 current+0 S4 A32])) "fs/exec.c":312:16 75 {*movsi_internal}
     (nil))
(insn 605 604 606 74 (set (reg:SI 0 ax [297])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":312:42 75 {*movsi_internal}
     (nil))
(insn 606 605 607 74 (parallel [
            (set (reg:SI 0 ax [296])
                (plus:SI (reg:SI 0 ax [297])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":312:42 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 607 606 608 74 (parallel [
            (set (reg:SI 0 ax [298])
                (ashift:SI (reg:SI 0 ax [296])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":312:42 655 {*ashlsi3_1}
     (nil))
(insn 608 607 609 74 (parallel [
            (set (reg/f:SI 0 ax [299])
                (plus:SI (reg:SI 0 ax [298])
                    (reg/f:SI 1 dx [orig:161 current.49_79 ] [161])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":312:42 209 {*addsi_1}
     (nil))
(insn 609 608 610 74 (set (mem/f:SI (reg/f:SI 0 ax [299]) [8 current.49_79->sigaction[i_126].sa_handler+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":312:42 75 {*movsi_internal}
     (nil))
(insn 610 609 611 74 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":311:26 209 {*addsi_1}
     (nil))
(code_label 611 610 612 75 90 (nil) [1 uses])
(note 612 611 616 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 616 612 617 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/exec.c":311:19 11 {*cmpsi_1}
     (nil))
(jump_insn 617 616 618 75 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 613)
            (pc))) "fs/exec.c":311:19 806 {*jcc}
     (nil)
 -> 613)
(note 618 617 619 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 864 76 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":313:12 75 {*movsi_internal}
     (nil))
(jump_insn 864 619 865 76 (set (pc)
        (label_ref 640)) "fs/exec.c":313:5 807 {jump}
     (nil)
 -> 640)
(barrier 865 864 642)
(code_label 642 865 622 77 94 (nil) [1 uses])
(note 622 642 623 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 77 (set (reg/f:SI 0 ax [300])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":314:21 75 {*movsi_internal}
     (nil))
(insn 624 623 625 77 (set (reg/f:SI 0 ax [orig:162 current.50_80 ] [162])
        (mem/f/c:SI (reg/f:SI 0 ax [300]) [5 current+0 S4 A32])) "fs/exec.c":314:21 75 {*movsi_internal}
     (nil))
(insn 625 624 626 77 (set (reg:SI 1 dx [orig:163 _81 ] [163])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:162 current.50_80 ] [162])
                (const_int 636 [0x27c])) [1 current.50_80->close_on_exec+0 S4 A32])) "fs/exec.c":314:21 75 {*movsi_internal}
     (nil))
(insn 626 625 876 77 (set (reg:SI 0 ax [301])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":314:37 75 {*movsi_internal}
     (nil))
(insn 876 626 627 77 (set (reg:QI 2 cx [332])
        (reg:QI 0 ax [301])) "fs/exec.c":314:37 77 {*movqi_internal}
     (nil))
(insn 627 876 875 77 (parallel [
            (set (reg:SI 1 dx [orig:163 _81 ] [163])
                (lshiftrt:SI (reg:SI 1 dx [orig:163 _81 ] [163])
                    (reg:QI 2 cx [332])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":314:37 701 {*lshrsi3_1}
     (nil))
(insn 875 627 628 77 (set (reg:SI 0 ax [orig:164 _82 ] [164])
        (reg:SI 1 dx [orig:163 _81 ] [163])) "fs/exec.c":314:37 75 {*movsi_internal}
     (nil))
(insn 628 875 629 77 (parallel [
            (set (reg:SI 0 ax [orig:165 _83 ] [165])
                (and:SI (reg:SI 0 ax [orig:164 _82 ] [164])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":314:43 490 {*andsi_1}
     (nil))
(insn 629 628 630 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:165 _83 ] [165])
            (const_int 0 [0]))) "fs/exec.c":314:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 630 629 631 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 637)
            (pc))) "fs/exec.c":314:12 806 {*jcc}
     (nil)
 -> 637)
(note 631 630 632 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 78 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":315:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 633 632 635 78 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1268 [0x4f4])) [9 i+0 S4 A32])) "fs/exec.c":315:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 635 633 636 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_close") [flags 0x41]  <function_decl 0x7a64a9d4da00 sys_close>) [0 sys_close S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":315:13 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 636 635 637 78 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":315:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 637 636 638 79 93 (nil) [1 uses])
(note 638 637 639 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 79 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":313:31 209 {*addsi_1}
     (nil))
(code_label 640 639 641 80 92 (nil) [1 uses])
(note 641 640 645 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 645 641 646 80 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
            (const_int 19 [0x13]))) "fs/exec.c":313:19 11 {*cmpsi_1}
     (nil))
(jump_insn 646 645 647 80 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 642)
            (pc))) "fs/exec.c":313:19 806 {*jcc}
     (nil)
 -> 642)
(note 647 646 648 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 81 (set (reg/f:SI 0 ax [302])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":316:12 75 {*movsi_internal}
     (nil))
(insn 649 648 650 81 (set (reg/f:SI 0 ax [orig:166 current.51_84 ] [166])
        (mem/f/c:SI (reg/f:SI 0 ax [302]) [5 current+0 S4 A32])) "fs/exec.c":316:12 75 {*movsi_internal}
     (nil))
(insn 650 649 652 81 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:166 current.51_84 ] [166])
                (const_int 636 [0x27c])) [1 current.51_84->close_on_exec+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":316:28 75 {*movsi_internal}
     (nil))
(insn 652 650 653 81 (set (reg:SI 0 ax [304])
        (const_int 15 [0xf])) "fs/exec.c":317:49 75 {*movsi_internal}
     (nil))
(insn 653 652 651 81 (parallel [
            (set (reg:SI 0 ax [orig:303 __limit ] [303])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 0 ax [304])
                    ]
                     [
                        (asm_input:SI ("r") fs/exec.c:317)
                    ]
                     [] fs/exec.c:317))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:49 -1
     (nil))
(insn 651 653 654 81 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1208 [0x4b8])) [1 __limit+0 S4 A32])
        (reg:SI 0 ax [orig:303 __limit ] [303])) "fs/exec.c":317:49 75 {*movsi_internal}
     (nil))
(insn 654 651 655 81 (set (reg:SI 4 si [orig:209 _259 ] [209])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1208 [0x4b8])) [1 __limit+0 S4 A32])) "fs/exec.c":317:49 75 {*movsi_internal}
     (nil))
(insn 655 654 656 81 (set (reg/f:SI 0 ax [305])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":317:22 75 {*movsi_internal}
     (nil))
(insn 656 655 657 81 (set (reg/f:SI 0 ax [orig:167 current.52_85 ] [167])
        (mem/f/c:SI (reg/f:SI 0 ax [305]) [5 current+0 S4 A32])) "fs/exec.c":317:22 75 {*movsi_internal}
     (nil))
(insn 657 656 658 81 (parallel [
            (set (reg/f:SI 0 ax [orig:168 _86 ] [168])
                (plus:SI (reg/f:SI 0 ax [orig:167 current.52_85 ] [167])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:22 209 {*addsi_1}
     (nil))
(insn 658 657 659 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 659 658 660 81 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 0 ax [orig:168 _86 ] [168])) "fs/exec.c":317:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 660 659 661 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7a64a9d15900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":317:5 823 {*call_value}
     (nil)
    (nil))
(insn 661 660 663 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 663 661 664 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 664 663 665 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 4 si [orig:209 _259 ] [209])) "fs/exec.c":317:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 665 664 667 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:169 _87 ] [169])) "fs/exec.c":317:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 667 665 668 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x7a64a9d38400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":317:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 668 667 670 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":317:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 670 668 671 81 (set (reg:SI 0 ax [307])
        (const_int 23 [0x17])) "fs/exec.c":318:49 75 {*movsi_internal}
     (nil))
(insn 671 670 669 81 (parallel [
            (set (reg:SI 0 ax [orig:306 __limit ] [306])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 0 ax [307])
                    ]
                     [
                        (asm_input:SI ("r") fs/exec.c:318)
                    ]
                     [] fs/exec.c:318))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:49 -1
     (nil))
(insn 669 671 672 81 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1204 [0x4b4])) [1 __limit+0 S4 A32])
        (reg:SI 0 ax [orig:306 __limit ] [306])) "fs/exec.c":318:49 75 {*movsi_internal}
     (nil))
(insn 672 669 673 81 (set (reg:SI 4 si [orig:210 _263 ] [210])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1204 [0x4b4])) [1 __limit+0 S4 A32])) "fs/exec.c":318:49 75 {*movsi_internal}
     (nil))
(insn 673 672 674 81 (set (reg/f:SI 0 ax [308])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":318:22 75 {*movsi_internal}
     (nil))
(insn 674 673 675 81 (set (reg/f:SI 0 ax [orig:170 current.53_88 ] [170])
        (mem/f/c:SI (reg/f:SI 0 ax [308]) [5 current+0 S4 A32])) "fs/exec.c":318:22 75 {*movsi_internal}
     (nil))
(insn 675 674 676 81 (parallel [
            (set (reg/f:SI 0 ax [orig:171 _89 ] [171])
                (plus:SI (reg/f:SI 0 ax [orig:170 current.53_88 ] [170])
                    (const_int 736 [0x2e0])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:22 209 {*addsi_1}
     (nil))
(insn 676 675 677 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 677 676 678 81 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg/f:SI 0 ax [orig:171 _89 ] [171])) "fs/exec.c":318:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 678 677 679 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x7a64a9d15900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":318:5 823 {*call_value}
     (nil)
    (nil))
(insn 679 678 681 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 681 679 682 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 682 681 683 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 4 si [orig:210 _263 ] [210])) "fs/exec.c":318:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 683 682 685 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:172 _90 ] [172])) "fs/exec.c":318:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 685 683 686 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("free_page_tables") [flags 0x41]  <function_decl 0x7a64a9d38400 free_page_tables>) [0 free_page_tables S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":318:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 686 685 687 81 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":318:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 687 686 688 81 (set (reg/f:SI 0 ax [309])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7a64a9d2e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":319:29 75 {*movsi_internal}
     (nil))
(insn 688 687 689 81 (set (reg/f:SI 1 dx [orig:173 last_task_used_math.54_91 ] [173])
        (mem/f/c:SI (reg/f:SI 0 ax [309]) [5 last_task_used_math+0 S4 A32])) "fs/exec.c":319:29 75 {*movsi_internal}
     (nil))
(insn 689 688 690 81 (set (reg/f:SI 0 ax [310])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":319:29 75 {*movsi_internal}
     (nil))
(insn 690 689 691 81 (set (reg/f:SI 0 ax [orig:174 current.55_92 ] [174])
        (mem/f/c:SI (reg/f:SI 0 ax [310]) [5 current+0 S4 A32])) "fs/exec.c":319:29 75 {*movsi_internal}
     (nil))
(insn 691 690 692 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:173 last_task_used_math.54_91 ] [173])
            (reg/f:SI 0 ax [orig:174 current.55_92 ] [174]))) "fs/exec.c":319:8 11 {*cmpsi_1}
     (nil))
(jump_insn 692 691 693 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 696)
            (pc))) "fs/exec.c":319:8 806 {*jcc}
     (nil)
 -> 696)
(note 693 692 694 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 695 82 (set (reg/f:SI 0 ax [311])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7a64a9d2e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":320:29 75 {*movsi_internal}
     (nil))
(insn 695 694 696 82 (set (mem/f/c:SI (reg/f:SI 0 ax [311]) [5 last_task_used_math+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":320:29 75 {*movsi_internal}
     (nil))
(code_label 696 695 697 83 95 (nil) [1 uses])
(note 697 696 698 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 698 697 699 83 (set (reg/f:SI 0 ax [312])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":321:12 75 {*movsi_internal}
     (nil))
(insn 699 698 700 83 (set (reg/f:SI 0 ax [orig:175 current.56_93 ] [175])
        (mem/f/c:SI (reg/f:SI 0 ax [312]) [5 current+0 S4 A32])) "fs/exec.c":321:12 75 {*movsi_internal}
     (nil))
(insn 700 699 701 83 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:175 current.56_93 ] [175])
                (const_int 612 [0x264])) [4 current.56_93->used_math+0 S2 A32])
        (const_int 0 [0])) "fs/exec.c":321:24 76 {*movhi_internal}
     (nil))
(insn 701 700 702 83 (set (reg:SI 0 ax [orig:176 _94 ] [176])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1176 [0x498])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":322:23 75 {*movsi_internal}
     (nil))
(insn 702 701 703 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 703 702 704 83 (parallel [
            (set (reg:SI 1 dx [313])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 1052 [0x41c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:10 209 {*addsi_1}
     (nil))
(insn 704 703 705 83 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (reg:SI 1 dx [313])) "fs/exec.c":322:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 705 704 706 83 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 0 ax [orig:176 _94 ] [176])) "fs/exec.c":322:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 706 705 707 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("change_ldt") [flags 0x3]  <function_decl 0x7a64a9d51100 change_ldt>) [0 change_ldt S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":322:10 823 {*call_value}
     (nil)
    (nil))
(insn 707 706 709 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 709 707 710 83 (parallel [
            (set (reg:SI 0 ax [orig:211 _269 ] [211])
                (plus:SI (reg:SI 0 ax [orig:177 _95 ] [177])
                    (const_int -131072 [0xfffffffffffe0000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:38 209 {*addsi_1}
     (nil))
(insn 710 709 711 83 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
                    (reg:SI 0 ax [orig:211 _269 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":322:7 209 {*addsi_1}
     (nil))
(insn 711 710 712 83 (set (reg/f:SI 0 ax [orig:178 p.57_96 ] [178])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])) "fs/exec.c":323:24 75 {*movsi_internal}
     (nil))
(insn 712 711 713 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":323:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 713 712 714 83 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1236 [0x4d4])) [9 envc+0 S4 A32])) "fs/exec.c":323:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 714 713 715 83 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1260 [0x4ec])) [9 argc+0 S4 A32])) "fs/exec.c":323:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 715 714 716 83 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:178 p.57_96 ] [178])) "fs/exec.c":323:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 716 715 717 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("create_tables") [flags 0x3]  <function_decl 0x7a64a9d4df00 create_tables>) [0 create_tables S1 A8])
            (const_int 16 [0x10]))) "fs/exec.c":323:24 823 {*call_value}
     (nil)
    (nil))
(insn 717 716 719 83 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":323:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 719 717 720 83 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])
        (reg/f:SI 0 ax [orig:179 _97 ] [179])) "fs/exec.c":323:7 75 {*movsi_internal}
     (nil))
(insn 720 719 721 83 (set (reg:SI 2 cx [orig:180 _98 ] [180])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1184 [0x4a0])) [9 ex.a_bss+0 S4 A32])) "fs/exec.c":324:22 75 {*movsi_internal}
     (nil))
(insn 721 720 722 83 (set (reg:SI 4 si [orig:181 _99 ] [181])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1180 [0x49c])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":325:43 75 {*movsi_internal}
     (nil))
(insn 722 721 723 83 (set (reg/f:SI 0 ax [314])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":326:28 75 {*movsi_internal}
     (nil))
(insn 723 722 724 83 (set (reg/f:SI 0 ax [orig:182 current.58_100 ] [182])
        (mem/f/c:SI (reg/f:SI 0 ax [314]) [5 current+0 S4 A32])) "fs/exec.c":326:28 75 {*movsi_internal}
     (nil))
(insn 724 723 725 83 (set (reg:SI 1 dx [orig:183 _101 ] [183])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1176 [0x498])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":326:43 75 {*movsi_internal}
     (nil))
(insn 725 724 726 83 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:182 current.58_100 ] [182])
                (const_int 540 [0x21c])) [1 current.58_100->end_code+0 S4 A32])
        (reg:SI 1 dx [orig:183 _101 ] [183])) "fs/exec.c":326:39 75 {*movsi_internal}
     (nil))
(insn 726 725 727 83 (set (reg:SI 1 dx [orig:184 _102 ] [184])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:182 current.58_100 ] [182])
                (const_int 540 [0x21c])) [1 current.58_100->end_code+0 S4 A32])) "fs/exec.c":326:28 75 {*movsi_internal}
     (nil))
(insn 727 726 728 83 (set (reg/f:SI 0 ax [315])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":325:28 75 {*movsi_internal}
     (nil))
(insn 728 727 729 83 (set (reg/f:SI 0 ax [orig:185 current.59_103 ] [185])
        (mem/f/c:SI (reg/f:SI 0 ax [315]) [5 current+0 S4 A32])) "fs/exec.c":325:28 75 {*movsi_internal}
     (nil))
(insn 729 728 730 83 (parallel [
            (set (reg:SI 1 dx [orig:186 _104 ] [186])
                (plus:SI (reg:SI 1 dx [orig:184 _102 ] [184])
                    (reg:SI 4 si [orig:181 _99 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":325:51 209 {*addsi_1}
     (nil))
(insn 730 729 731 83 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:185 current.59_103 ] [185])
                (const_int 544 [0x220])) [1 current.59_103->end_data+0 S4 A32])
        (reg:SI 1 dx [orig:186 _104 ] [186])) "fs/exec.c":325:39 75 {*movsi_internal}
     (nil))
(insn 731 730 732 83 (set (reg:SI 1 dx [orig:187 _105 ] [187])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:185 current.59_103 ] [185])
                (const_int 544 [0x220])) [1 current.59_103->end_data+0 S4 A32])) "fs/exec.c":325:28 75 {*movsi_internal}
     (nil))
(insn 732 731 733 83 (set (reg/f:SI 0 ax [316])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":324:12 75 {*movsi_internal}
     (nil))
(insn 733 732 734 83 (set (reg/f:SI 0 ax [orig:188 current.60_106 ] [188])
        (mem/f/c:SI (reg/f:SI 0 ax [316]) [5 current+0 S4 A32])) "fs/exec.c":324:12 75 {*movsi_internal}
     (nil))
(insn 734 733 735 83 (parallel [
            (set (reg:SI 1 dx [orig:189 _107 ] [189])
                (plus:SI (reg:SI 1 dx [orig:187 _105 ] [187])
                    (reg:SI 2 cx [orig:180 _98 ] [180])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":324:29 209 {*addsi_1}
     (nil))
(insn 735 734 736 83 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:188 current.60_106 ] [188])
                (const_int 548 [0x224])) [1 current.60_106->brk+0 S4 A32])
        (reg:SI 1 dx [orig:189 _107 ] [189])) "fs/exec.c":324:18 75 {*movsi_internal}
     (nil))
(insn 736 735 737 83 (set (reg/f:SI 0 ax [317])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":327:12 75 {*movsi_internal}
     (nil))
(insn 737 736 738 83 (set (reg/f:SI 0 ax [orig:190 current.61_108 ] [190])
        (mem/f/c:SI (reg/f:SI 0 ax [317]) [5 current+0 S4 A32])) "fs/exec.c":327:12 75 {*movsi_internal}
     (nil))
(insn 738 737 739 83 (set (reg:SI 1 dx [318])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])) "fs/exec.c":327:30 75 {*movsi_internal}
     (nil))
(insn 739 738 740 83 (parallel [
            (set (reg:SI 1 dx [orig:191 _109 ] [191])
                (and:SI (reg:SI 1 dx [318])
                    (const_int -4096 [0xfffffffffffff000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":327:30 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 p+0 S4 A32])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))
(insn 740 739 741 83 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:190 current.61_108 ] [190])
                (const_int 552 [0x228])) [1 current.61_108->start_stack+0 S4 A32])
        (reg:SI 1 dx [orig:191 _109 ] [191])) "fs/exec.c":327:26 75 {*movsi_internal}
     (nil))
(insn 741 740 742 83 (set (reg/f:SI 0 ax [319])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":328:12 75 {*movsi_internal}
     (nil))
(insn 742 741 743 83 (set (reg/f:SI 0 ax [orig:192 current.62_110 ] [192])
        (mem/f/c:SI (reg/f:SI 0 ax [319]) [5 current+0 S4 A32])) "fs/exec.c":328:12 75 {*movsi_internal}
     (nil))
(insn 743 742 745 83 (set (reg:SI 1 dx [320])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1228 [0x4cc])) [9 e_uid+0 S4 A32])) "fs/exec.c":328:19 75 {*movsi_internal}
     (nil))
(insn 745 743 746 83 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:192 current.62_110 ] [192])
                (const_int 578 [0x242])) [4 current.62_110->euid+0 S2 A16])
        (reg:HI 1 dx [orig:193 _111 ] [193])) "fs/exec.c":328:19 76 {*movhi_internal}
     (nil))
(insn 746 745 747 83 (set (reg/f:SI 0 ax [321])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7a64a9d2e120 current>)
                        ] UNSPEC_GOT))) [21  S4 A8])) "fs/exec.c":329:12 75 {*movsi_internal}
     (nil))
(insn 747 746 748 83 (set (reg/f:SI 0 ax [orig:194 current.63_112 ] [194])
        (mem/f/c:SI (reg/f:SI 0 ax [321]) [5 current+0 S4 A32])) "fs/exec.c":329:12 75 {*movsi_internal}
     (nil))
(insn 748 747 750 83 (set (reg:SI 1 dx [322])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1224 [0x4c8])) [9 e_gid+0 S4 A32])) "fs/exec.c":329:19 75 {*movsi_internal}
     (nil))
(insn 750 748 751 83 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:194 current.63_112 ] [194])
                (const_int 584 [0x248])) [4 current.63_112->egid+0 S2 A32])
        (reg:HI 1 dx [orig:195 _113 ] [195])) "fs/exec.c":329:19 76 {*movhi_internal}
     (nil))
(insn 751 750 752 83 (set (reg:SI 1 dx [orig:196 _114 ] [196])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1176 [0x498])) [9 ex.a_text+0 S4 A32])) "fs/exec.c":330:11 75 {*movsi_internal}
     (nil))
(insn 752 751 753 83 (set (reg:SI 0 ax [orig:197 _115 ] [197])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1180 [0x49c])) [9 ex.a_data+0 S4 A32])) "fs/exec.c":330:23 75 {*movsi_internal}
     (nil))
(insn 753 752 754 83 (parallel [
            (set (reg:SI 0 ax [orig:198 _116 ] [198])
                (plus:SI (reg:SI 0 ax [orig:197 _115 ] [197])
                    (reg:SI 1 dx [orig:196 _114 ] [196])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":330:19 209 {*addsi_1}
     (nil))
(insn 754 753 866 83 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
        (reg:SI 0 ax [orig:198 _116 ] [198])) "fs/exec.c":330:7 75 {*movsi_internal}
     (nil))
(jump_insn 866 754 867 83 (set (pc)
        (label_ref 767)) "fs/exec.c":331:11 807 {jump}
     (nil)
 -> 767)
(barrier 867 866 771)
(code_label 771 867 757 84 97 (nil) [1 uses])
(note 757 771 758 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 758 757 759 84 (set (reg:SI 0 ax [orig:199 i.64_117 ] [199])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":332:34 75 {*movsi_internal}
     (nil))
(insn 759 758 760 84 (parallel [
            (set (reg:SI 1 dx [323])
                (plus:SI (reg:SI 0 ax [orig:199 i.64_117 ] [199])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":332:34 209 {*addsi_1}
     (nil))
(insn 760 759 762 84 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
        (reg:SI 1 dx [323])) "fs/exec.c":332:34 75 {*movsi_internal}
     (nil))
(insn 762 760 763 84 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":332:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 763 762 764 84 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:200 i.65_118 ] [200])) "fs/exec.c":332:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 764 763 765 84 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 0 [0])) "fs/exec.c":332:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 765 764 766 84 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x7a64a9d3e200 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":332:9 812 {*call}
     (nil)
    (nil))
(insn 766 765 767 84 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":332:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 767 766 768 85 96 (nil) [1 uses])
(note 768 767 769 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 769 768 770 85 (set (reg:SI 0 ax [324])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":331:14 75 {*movsi_internal}
     (nil))
(insn 770 769 772 85 (parallel [
            (set (reg:SI 0 ax [orig:201 _119 ] [201])
                (and:SI (reg:SI 0 ax [324])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":331:14 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 4095 [0xfff]))
        (nil)))
(insn 772 770 773 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:201 _119 ] [201])
            (const_int 0 [0]))) "fs/exec.c":331:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 773 772 774 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 771)
            (pc))) "fs/exec.c":331:12 806 {*jcc}
     (nil)
 -> 771)
(note 774 773 775 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 775 774 776 86 (set (reg:SI 1 dx [orig:202 _120 ] [202])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1192 [0x4a8])) [9 ex.a_entry+0 S4 A32])) "fs/exec.c":333:16 75 {*movsi_internal}
     (nil))
(insn 776 775 777 86 (set (reg/f:SI 0 ax [325])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1280 [0x500])) [19 eip+0 S4 A32])) "fs/exec.c":333:12 75 {*movsi_internal}
     (nil))
(insn 777 776 778 86 (set (mem:SI (reg/f:SI 0 ax [325]) [1 *eip_171(D)+0 S4 A32])
        (reg:SI 1 dx [orig:202 _120 ] [202])) "fs/exec.c":333:12 75 {*movsi_internal}
     (nil))
(insn 778 777 779 86 (set (reg/f:SI 0 ax [326])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1280 [0x500])) [19 eip+0 S4 A32])) "fs/exec.c":334:8 75 {*movsi_internal}
     (nil))
(insn 779 778 780 86 (parallel [
            (set (reg/f:SI 1 dx [orig:203 _121 ] [203])
                (plus:SI (reg/f:SI 0 ax [326])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":334:8 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 eip+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 780 779 781 86 (set (reg:SI 0 ax [327])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1240 [0x4d8])) [1 p+0 S4 A32])) "fs/exec.c":334:12 75 {*movsi_internal}
     (nil))
(insn 781 780 782 86 (set (mem:SI (reg/f:SI 1 dx [orig:203 _121 ] [203]) [1 *_121+0 S4 A32])
        (reg:SI 0 ax [327])) "fs/exec.c":334:12 75 {*movsi_internal}
     (nil))
(insn 782 781 868 86 (set (reg:SI 0 ax [orig:205 _144 ] [205])
        (const_int 0 [0])) "fs/exec.c":335:12 75 {*movsi_internal}
     (nil))
(jump_insn 868 782 869 86 (set (pc)
        (label_ref 817)) "fs/exec.c":335:12 807 {jump}
     (nil)
 -> 817)
(barrier 869 868 785)
(code_label 785 869 786 87 56 ("exec_error2") [6 uses])
(note 786 785 787 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 788 87 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":337:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 788 787 790 87 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1272 [0x4f8])) [11 inode+0 S4 A32])) "fs/exec.c":337:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 790 788 791 87 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7a64a9cd2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":337:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 791 790 792 87 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":337:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 792 791 793 88 82 ("exec_error1") [3 uses])
(note 793 792 794 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 794 793 870 88 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/exec.c":339:12 75 {*movsi_internal}
     (nil))
(jump_insn 870 794 871 88 (set (pc)
        (label_ref 806)) "fs/exec.c":339:5 807 {jump}
     (nil)
 -> 806)
(barrier 871 870 808)
(code_label 808 871 797 89 99 (nil) [1 uses])
(note 797 808 798 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 89 (set (reg:SI 0 ax [328])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1256 [0x4e8])) [9 i+0 S4 A32])) "fs/exec.c":340:9 75 {*movsi_internal}
     (nil))
(insn 799 798 800 89 (set (reg:SI 0 ax [orig:204 _122 ] [204])
        (mem:SI (plus:SI (plus:SI (mult:SI (reg:SI 0 ax [328])
                        (const_int 4 [0x4]))
                    (reg/f:SI 7 sp))
                (const_int 1044 [0x414])) [1 page[i_129]+0 S4 A32])) "fs/exec.c":340:9 75 {*movsi_internal}
     (nil))
(insn 800 799 801 89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":340:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 801 800 803 89 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:204 _122 ] [204])) "fs/exec.c":340:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 803 801 804 89 (call (mem:QI (symbol_ref:SI ("free_page") [flags 0x41]  <function_decl 0x7a64a9d38800 free_page>) [0 free_page S1 A8])
        (const_int 16 [0x10])) "fs/exec.c":340:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 804 803 805 89 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":340:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 805 804 806 89 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/exec.c":339:37 209 {*addsi_1}
     (nil))
(code_label 806 805 807 90 98 (nil) [1 uses])
(note 807 806 811 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 811 807 812 90 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 1256 [0x4e8])) [9 i+0 S4 A32])
            (const_int 31 [0x1f]))) "fs/exec.c":339:19 11 {*cmpsi_1}
     (nil))
(jump_insn 812 811 813 90 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 808)
            (pc))) "fs/exec.c":339:19 806 {*jcc}
     (nil)
 -> 808)
(note 813 812 814 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 814 813 817 91 (set (reg:SI 0 ax [orig:205 _144 ] [205])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 1248 [0x4e0])) [9 retval+0 S4 A32])) "fs/exec.c":341:12 75 {*movsi_internal}
     (nil))
(code_label 817 814 818 92 100 (nil) [2 uses])
(note 818 817 824 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 824 818 873 92 (use (reg/i:SI 0 ax)) "fs/exec.c":342:1 -1
     (nil))
(note 873 824 0 NOTE_INSN_DELETED)
