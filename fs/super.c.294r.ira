
;; Function wait_on_super (wait_on_super, funcdef_no=1, decl_uid=1355, cgraph_uid=2, symbol_order=3)

scanning new insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 8 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 30(l0): point = 0
   Insn 24(l0): point = 3
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 12(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 22(l0): point = 21
   Insn 21(l0): point = 23
   Insn 19(l0): point = 25
   Insn 18(l0): point = 27
   Insn 27(l0): point = 30
   Insn 5(l0): point = 32
   Insn 31(l0): point = 34
 a0(r84): [24..25]
 a1(r86): [26..27]
 a2(r82): [6..34]
 a3(r83): [13..16]
 a4(r85): [17..18]
Compressing live ranges: from 37 to 8 - 21%
Ranges after the compression:
 a0(r84): [4..5]
 a1(r86): [6..7]
 a2(r82): [0..7]
 a3(r83): [0..1]
 a4(r85): [2..3]
  regions=1, blocks=7, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r82  l0     3    3:r83  l0     0    0:r84  l0     0    4:r85  l0     0
    1:r86  l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


wait_on_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,6u} r7={4d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u,1e} r17={8d,1u} r18={1d} r19={1d,6u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 131{92d,38u,1e} in 16{15 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 31 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 27 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/super.c:35)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":35:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 27 5 28 2 (set (pc)
        (label_ref 16)) "fs/super.c":36:11 807 {jump}
     (nil)
 -> 16)
(barrier 28 27 20)
(code_label 20 28 8 3 3 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])) "fs/super.c":37:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":37:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])
                    (const_int 100 [0x64]))
                (nil)))))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":37:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/super.c":37:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 13 12 14 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":37:9 75 {*movsi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x759b7f910f00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/super.c":37:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":37:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 16 15 17 4 2 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])) "fs/super.c":36:14 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 86)
                (const_int 104 [0x68])) [0 sb_5(D)->s_lock+0 S1 A32])) "fs/super.c":36:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/super.c":36:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/super.c":36:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 29 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/super.c:38)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":38:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 29 24 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 0 6 (const_int 0 [0]) "fs/super.c":39:1 843 {nop}
     (nil))

;; Function get_super (get_super, funcdef_no=2, decl_uid=1111, cgraph_uid=3, symbol_order=4)

scanning new insn with uid = 71.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 16 count 13 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 10, multiple latches: 9 8
;;  depth 1, outer 0
;;  nodes: 10 9 8 6 5
;; 2 succs { 3 4 }
;; 3 succs { 12 }
;; 4 succs { 10 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 12 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 5 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:13000
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:24000
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 61(l0): point = 0
   Insn 60(l0): point = 2
   Insn 56(l0): point = 4
   Insn 53(l0): point = 7
   Insn 67(l0): point = 10
   Insn 34(l0): point = 12
   Insn 22(l0): point = 15
   Insn 21(l0): point = 17
   Insn 20(l0): point = 19
   Insn 19(l0): point = 21
   Insn 18(l0): point = 23
   Insn 51(l0): point = 26
   Insn 50(l0): point = 28
   Insn 48(l0): point = 30
   Insn 45(l0): point = 33
   Insn 69(l0): point = 36
   Insn 40(l0): point = 38
   Insn 39(l0): point = 40
   Insn 32(l0): point = 43
   Insn 31(l0): point = 45
   Insn 30(l0): point = 47
   Insn 29(l0): point = 49
   Insn 28(l0): point = 51
   Insn 27(l0): point = 53
   Insn 26(l0): point = 55
   Insn 25(l0): point = 57
   Insn 24(l0): point = 59
   Insn 65(l0): point = 62
   Insn 14(l0): point = 64
   Insn 13(l0): point = 66
   Insn 63(l0): point = 69
   Insn 8(l0): point = 71
   Insn 6(l0): point = 74
   Insn 5(l0): point = 76
   Insn 71(l0): point = 78
 a0(r89): [3..4]
 a1(r88): [69..71] [10..12] [5..7]
 a2(r87): [29..30]
 a3(r82): [74..78] [15..68]
 a4(r93): [39..40]
 a5(r86): [46..47]
 a6(r85): [48..49]
 a7(r92): [50..51]
 a8(r84): [18..19]
 a9(r83): [20..21]
 a10(r91): [22..23]
 a11(r90): [65..66]
Compressing live ranges: from 81 to 28 - 34%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [24..25] [2..5]
 a2(r87): [12..13]
 a3(r82): [26..27] [6..23]
 a4(r93): [14..15]
 a5(r86): [16..17]
 a6(r85): [18..19]
 a7(r92): [20..21]
 a8(r84): [6..7]
 a9(r83): [8..9]
 a10(r91): [10..11]
 a11(r90): [22..23]
  pref0:a0(r89)<-hr0@1500
  regions=1, blocks=13, points=28
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
    3:r82  l0     3    9:r83  l0     0    8:r84  l0     0    6:r85  l0     0
    5:r86  l0     0    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0
   11:r90  l0     0   10:r91  l0     0    7:r92  l0     0    4:r93  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r6={1d,12u} r7={4d,18u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,14u} r17={9d,4u} r18={1d} r19={1d,21u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,3u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={3d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 187{102d,85u,0e} in 35{34 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 71 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 71 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 71 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":45:7 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "fs/super.c":45:7 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 11)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 63 3 (set (reg/f:SI 88 [ _7 ])
        (const_int 0 [0])) "fs/super.c":46:15 75 {*movsi_internal}
     (nil))
(jump_insn 63 8 64 3 (set (pc)
        (label_ref 54)) "fs/super.c":46:15 807 {jump}
     (nil)
 -> 54)
(barrier 64 63 11)
(code_label 11 64 12 4 5 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:SI 90)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":48:6 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
        (nil)))
(insn 14 13 65 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
        (reg/f:SI 90)) "fs/super.c":48:6 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(jump_insn 65 14 66 4 (set (pc)
        (label_ref 46)) "fs/super.c":49:10 807 {jump}
     (nil)
 -> 46)
(barrier 66 65 49)
(code_label 49 66 17 5 10 (nil) [1 uses])
(note 17 49 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":50:13 75 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 91)
                (const_int 84 [0x54])) [2 s_6->s_dev+0 S2 A32])) "fs/super.c":50:13 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 20 19 21 5 (set (reg:SI 84 [ _2 ])
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/super.c":50:13 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (reg:SI 84 [ _2 ]))) "fs/super.c":50:11 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/super.c":50:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":51:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 25 24 26 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":51:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 25 27 6 (call (mem:QI (symbol_ref:SI ("wait_on_super") [flags 0x3]  <function_decl 0x759b7f937f00 wait_on_super>) [0 wait_on_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":51:12 812 {*call}
     (nil)
    (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":51:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 28 27 29 6 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":52:17 75 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (set (reg:HI 85 [ _3 ])
        (mem:HI (plus:SI (reg/f:SI 92)
                (const_int 84 [0x54])) [2 s_6->s_dev+0 S2 A32])) "fs/super.c":52:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil)))
(insn 30 29 31 6 (set (reg:SI 86 [ _4 ])
        (zero_extend:SI (reg:HI 85 [ _3 ]))) "fs/super.c":52:17 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
        (nil)))
(insn 31 30 32 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (reg:SI 86 [ _4 ]))) "fs/super.c":52:15 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 32 31 33 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "fs/super.c":52:15 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 37)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 67 7 (set (reg/f:SI 88 [ _7 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":53:23 75 {*movsi_internal}
     (nil))
(jump_insn 67 34 68 7 (set (pc)
        (label_ref 54)) "fs/super.c":53:23 807 {jump}
     (nil)
 -> 54)
(barrier 68 67 37)
(code_label 37 68 38 8 9 (nil) [1 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg/f:SI 93)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":54:14 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
        (nil)))
(insn 40 39 69 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
        (reg/f:SI 93)) "fs/super.c":54:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (nil)))
(jump_insn 69 40 70 8 (set (pc)
        (label_ref 46)) 807 {jump}
     (nil)
 -> 46)
(barrier 70 69 43)
(code_label 43 70 44 9 8 (nil) [1 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":56:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 46 45 47 10 7 (nil) [2 uses])
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 50 10 (set (reg/f:SI 87 [ _5 ])
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                        ] UNSPEC_GOTOFF)
                    (const_int 864 [0x360]))))) "fs/super.c":49:24 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                (const_int 864 [0x360])))
        (nil)))
(insn 50 48 51 10 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
            (reg/f:SI 87 [ _5 ]))) "fs/super.c":49:13 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 87 [ _5 ])
        (nil)))
(jump_insn 51 50 52 10 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "fs/super.c":49:13 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 49)
(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 11 (set (reg/f:SI 88 [ _7 ])
        (const_int 0 [0])) "fs/super.c":57:12 75 {*movsi_internal}
     (nil))
(code_label 54 53 55 12 6 (nil) [2 uses])
(note 55 54 56 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 60 12 (set (reg/f:SI 89 [ <retval> ])
        (reg/f:SI 88 [ _7 ])) "fs/super.c":58:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _7 ])
        (nil)))
(insn 60 56 61 12 (set (reg/i:SI 0 ax)
        (reg/f:SI 89 [ <retval> ])) "fs/super.c":58:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ <retval> ])
        (nil)))
(insn 61 60 0 12 (use (reg/i:SI 0 ax)) "fs/super.c":58:1 -1
     (nil))

;; Function lock_super (lock_super, funcdef_no=3, decl_uid=1368, cgraph_uid=4, symbol_order=5)

scanning new insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 8 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a1 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 32(l0): point = 0
   Insn 26(l0): point = 3
   Insn 25(l0): point = 5
   Insn 24(l0): point = 7
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 22(l0): point = 25
   Insn 21(l0): point = 27
   Insn 19(l0): point = 29
   Insn 18(l0): point = 31
   Insn 29(l0): point = 34
   Insn 5(l0): point = 36
   Insn 33(l0): point = 38
 a0(r87): [6..7]
 a1(r84): [28..29]
 a2(r86): [30..31]
 a3(r82): [10..38]
 a4(r83): [17..20]
 a5(r85): [21..22]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r84): [6..7]
 a2(r86): [8..9]
 a3(r82): [2..9]
 a4(r83): [2..3]
 a5(r85): [4..5]
  regions=1, blocks=7, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    3:r82  l0     3    4:r83  l0     0    1:r84  l0     0    5:r85  l0     0
    2:r86  l0     0    0:r87  l0     0
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


lock_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,6u} r7={4d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,8u,1e} r17={8d,1u} r18={1d} r19={1d,6u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 134{93d,40u,1e} in 18{17 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 33 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 33 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 29 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/super.c:62)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":62:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 29 5 30 2 (set (pc)
        (label_ref 16)) "fs/super.c":63:11 807 {jump}
     (nil)
 -> 16)
(barrier 30 29 20)
(code_label 20 30 8 3 13 (nil) [1 uses])
(note 8 20 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])) "fs/super.c":64:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":64:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])
                    (const_int 100 [0x64]))
                (nil)))))
(insn 11 10 12 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":64:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 12 11 13 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/super.c":64:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 13 12 14 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":64:9 75 {*movsi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:SI ("sleep_on") [flags 0x41]  <function_decl 0x759b7f910f00 sleep_on>) [0 sleep_on S1 A8])
        (const_int 16 [0x10])) "fs/super.c":64:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":64:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 16 15 17 4 12 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 86)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])) "fs/super.c":63:14 75 {*movsi_internal}
     (nil))
(insn 19 18 21 4 (set (reg:QI 84 [ _2 ])
        (mem:QI (plus:SI (reg/f:SI 86)
                (const_int 104 [0x68])) [0 sb_5(D)->s_lock+0 S1 A32])) "fs/super.c":63:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86)
        (nil)))
(insn 21 19 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 84 [ _2 ])
            (const_int 0 [0]))) "fs/super.c":63:12 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "fs/super.c":63:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 20)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])) "fs/super.c":65:16 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (mem:QI (plus:SI (reg/f:SI 87)
                (const_int 104 [0x68])) [0 sb_5(D)->s_lock+0 S1 A32])
        (const_int 1 [0x1])) "fs/super.c":65:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 26 25 31 5 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/super.c:66)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":66:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 31 26 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 0 6 (const_int 0 [0]) "fs/super.c":67:1 843 {nop}
     (nil))

;; Function free_super (free_super, funcdef_no=4, decl_uid=1374, cgraph_uid=5, symbol_order=6)

scanning new insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 19(l0): point = 0
   Insn 15(l0): point = 3
   Insn 14(l0): point = 5
   Insn 13(l0): point = 7
   Insn 12(l0): point = 9
   Insn 11(l0): point = 11
   Insn 10(l0): point = 13
   Insn 9(l0): point = 15
   Insn 8(l0): point = 17
   Insn 7(l0): point = 19
   Insn 6(l0): point = 21
   Insn 5(l0): point = 23
   Insn 20(l0): point = 25
 a0(r82): [10..25]
 a1(r83): [12..15]
 a2(r85): [16..17]
 a3(r84): [20..21]
Compressing live ranges: from 28 to 6 - 21%
Ranges after the compression:
 a0(r82): [0..5]
 a1(r83): [0..1]
 a2(r85): [2..3]
 a3(r84): [4..5]
  pref0:a0(r82)<-hr3@1500
  regions=1, blocks=4, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    0:r82  l0     0    1:r83  l0     1    3:r84  l0     1    2:r85  l0     1
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


free_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={1d,1u} r6={1d,3u} r7={4d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u,1e} r17={7d} r18={1d} r19={1d,3u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 115{90d,24u,1e} in 13{12 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 20 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 20 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 20 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (asm_operands/v ("cli") ("") 0 []
                 []
                 [] fs/super.c:71)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":71:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 5 7 2 (set (reg/f:SI 84)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])) "fs/super.c":72:16 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem:QI (plus:SI (reg/f:SI 84)
                (const_int 104 [0x68])) [0 sb_3(D)->s_lock+0 S1 A32])
        (const_int 0 [0])) "fs/super.c":72:16 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84)
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 85)
        (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])) "fs/super.c":73:5 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 83 [ _1 ])
                (plus:SI (reg/f:SI 85)
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":73:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 sb+0 S4 A32])
                    (const_int 100 [0x64]))
                (nil)))))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":73:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 11 10 12 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [20  S4 A32])
        (reg/f:SI 83 [ _1 ])) "fs/super.c":73:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 12 11 13 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":73:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:SI ("wake_up") [flags 0x41]  <function_decl 0x759b7f937300 wake_up>) [0 wake_up S1 A8])
        (const_int 16 [0x10])) "fs/super.c":73:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":73:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 15 14 18 2 (parallel [
            (asm_operands/v ("sti") ("") 0 []
                 []
                 [] fs/super.c:74)
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":74:5 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 18 15 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 0 3 (const_int 0 [0]) "fs/super.c":75:1 843 {nop}
     (nil))

;; Function read_super (read_super, funcdef_no=5, decl_uid=1377, cgraph_uid=6, symbol_order=7)

scanning new insn with uid = 397.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 47 n_edges 62 count 59 (  1.3)
;; 8 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 42 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 43 44 27 28 29 30 31 45 46 32 33 34 35 36 37 38 39 40 41
;;
;; Loop 7
;;  header 38, latch 37
;;  depth 1, outer 0
;;  nodes: 38 37
;;
;; Loop 6
;;  header 35, latch 34
;;  depth 1, outer 0
;;  nodes: 35 34
;;
;; Loop 5
;;  header 31, latch 30
;;  depth 1, outer 0
;;  nodes: 31 30 29 28
;;
;; Loop 4
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 24 23
;;
;; Loop 3
;;  header 21, latch 20
;;  depth 1, outer 0
;;  nodes: 21 20
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17
;;
;; Loop 1
;;  header 7, latch 10
;;  depth 1, outer 0
;;  nodes: 7 10 9
;; 2 succs { 3 4 }
;; 3 succs { 41 }
;; 4 succs { 5 6 }
;; 5 succs { 41 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 41 }
;; 9 succs { 42 10 }
;; 10 succs { 7 }
;; 42 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 41 }
;; 13 succs { 14 16 }
;; 14 succs { 15 16 }
;; 15 succs { 41 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 17 19 }
;; 19 succs { 21 }
;; 20 succs { 21 }
;; 21 succs { 20 22 }
;; 22 succs { 26 }
;; 23 succs { 24 44 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 23 43 }
;; 43 succs { 27 }
;; 44 succs { 27 }
;; 27 succs { 31 }
;; 28 succs { 29 46 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 28 45 }
;; 45 succs { 32 }
;; 46 succs { 32 }
;; 32 succs { 33 40 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 34 36 }
;; 36 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 37 39 }
;; 39 succs { 41 }
;; 40 succs { 41 }
;; 41 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r129,l0) best AREG, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r116,l0) best Q_REGS, allocno Q_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r113,l0) best Q_REGS, allocno Q_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a11 (r110,l0) best Q_REGS, allocno Q_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a12 (r107,l0) best Q_REGS, allocno Q_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:22000
  a2(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a4(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a5(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a12(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a13(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a17(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a19(r82,l0) costs: AREG:14000 DREG:14000 CREG:14000 BREG:14000 SIREG:14000 DIREG:14000 AD_REGS:14000 CLOBBERED_REGS:14000 Q_REGS:14000 NON_Q_REGS:14000 TLS_GOTBASE_REGS:14000 GENERAL_REGS:14000 MEM:60000
  a20(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a28(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a29(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a30(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a31(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a32(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a35(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a36(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a37(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a38(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a39(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a42(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a43(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a45(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a46(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a47(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a49(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a53(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a54(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a56(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a57(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a58(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a59(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a60(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a61(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a63(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a64(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a66(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a67(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a68(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a69(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:36000
  a70(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a71(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:36000
  a72(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a73(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a74(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a75(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a76(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a77(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a78(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a79(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a80(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a81(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a82(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a83(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a84(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a85(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a86(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a87(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a88(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a89(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a90(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a91(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 353(l0): point = 0
   Insn 352(l0): point = 2
   Insn 348(l0): point = 4
   Insn 345(l0): point = 7
   Insn 344(l0): point = 9
   Insn 343(l0): point = 11
   Insn 342(l0): point = 13
   Insn 341(l0): point = 15
   Insn 340(l0): point = 17
   Insn 339(l0): point = 19
   Insn 338(l0): point = 21
   Insn 337(l0): point = 23
   Insn 336(l0): point = 25
   Insn 335(l0): point = 27
   Insn 334(l0): point = 29
   Insn 333(l0): point = 31
   Insn 332(l0): point = 33
   Insn 331(l0): point = 35
   Insn 330(l0): point = 37
   Insn 329(l0): point = 39
   Insn 328(l0): point = 41
   Insn 327(l0): point = 43
   Insn 326(l0): point = 45
   Insn 325(l0): point = 47
   Insn 324(l0): point = 49
   Insn 323(l0): point = 51
   Insn 380(l0): point = 54
   Insn 318(l0): point = 56
   Insn 317(l0): point = 58
   Insn 316(l0): point = 60
   Insn 315(l0): point = 62
   Insn 314(l0): point = 64
   Insn 313(l0): point = 66
   Insn 312(l0): point = 68
   Insn 303(l0): point = 71
   Insn 302(l0): point = 73
   Insn 301(l0): point = 75
   Insn 300(l0): point = 77
   Insn 299(l0): point = 79
   Insn 298(l0): point = 81
   Insn 297(l0): point = 83
   Insn 296(l0): point = 85
   Insn 295(l0): point = 87
   Insn 294(l0): point = 89
   Insn 310(l0): point = 92
   Insn 309(l0): point = 94
   Insn 378(l0): point = 97
   Insn 290(l0): point = 99
   Insn 281(l0): point = 102
   Insn 280(l0): point = 104
   Insn 279(l0): point = 106
   Insn 278(l0): point = 108
   Insn 277(l0): point = 110
   Insn 276(l0): point = 112
   Insn 275(l0): point = 114
   Insn 274(l0): point = 116
   Insn 273(l0): point = 118
   Insn 272(l0): point = 120
   Insn 288(l0): point = 123
   Insn 287(l0): point = 125
   Insn 376(l0): point = 128
   Insn 268(l0): point = 130
   Insn 266(l0): point = 133
   Insn 265(l0): point = 135
   Insn 264(l0): point = 137
   Insn 263(l0): point = 139
   Insn 262(l0): point = 141
   Insn 261(l0): point = 143
   Insn 260(l0): point = 145
   Insn 259(l0): point = 147
   Insn 258(l0): point = 149
   Insn 257(l0): point = 151
   Insn 396(l0): point = 154
   Insn 392(l0): point = 157
   Insn 235(l0): point = 160
   Insn 234(l0): point = 162
   Insn 233(l0): point = 164
   Insn 232(l0): point = 166
   Insn 231(l0): point = 168
   Insn 230(l0): point = 170
   Insn 229(l0): point = 172
   Insn 228(l0): point = 174
   Insn 227(l0): point = 176
   Insn 226(l0): point = 178
   Insn 225(l0): point = 180
   Insn 224(l0): point = 182
   Insn 223(l0): point = 184
   Insn 222(l0): point = 186
   Insn 221(l0): point = 188
   Insn 220(l0): point = 190
   Insn 219(l0): point = 192
   Insn 254(l0): point = 195
   Insn 253(l0): point = 197
   Insn 251(l0): point = 199
   Insn 250(l0): point = 201
   Insn 249(l0): point = 203
   Insn 246(l0): point = 206
   Insn 237(l0): point = 209
   Insn 374(l0): point = 212
   Insn 215(l0): point = 214
   Insn 390(l0): point = 217
   Insn 386(l0): point = 220
   Insn 193(l0): point = 223
   Insn 192(l0): point = 225
   Insn 191(l0): point = 227
   Insn 190(l0): point = 229
   Insn 189(l0): point = 231
   Insn 188(l0): point = 233
   Insn 187(l0): point = 235
   Insn 186(l0): point = 237
   Insn 185(l0): point = 239
   Insn 184(l0): point = 241
   Insn 183(l0): point = 243
   Insn 182(l0): point = 245
   Insn 181(l0): point = 247
   Insn 180(l0): point = 249
   Insn 179(l0): point = 251
   Insn 178(l0): point = 253
   Insn 177(l0): point = 255
   Insn 212(l0): point = 258
   Insn 211(l0): point = 260
   Insn 209(l0): point = 262
   Insn 208(l0): point = 264
   Insn 207(l0): point = 266
   Insn 204(l0): point = 269
   Insn 195(l0): point = 272
   Insn 372(l0): point = 275
   Insn 173(l0): point = 277
   Insn 172(l0): point = 279
   Insn 163(l0): point = 282
   Insn 162(l0): point = 284
   Insn 161(l0): point = 286
   Insn 160(l0): point = 288
   Insn 159(l0): point = 290
   Insn 170(l0): point = 293
   Insn 169(l0): point = 295
   Insn 370(l0): point = 298
   Insn 155(l0): point = 300
   Insn 146(l0): point = 303
   Insn 145(l0): point = 305
   Insn 144(l0): point = 307
   Insn 143(l0): point = 309
   Insn 142(l0): point = 311
   Insn 153(l0): point = 314
   Insn 152(l0): point = 316
   Insn 368(l0): point = 319
   Insn 138(l0): point = 321
   Insn 366(l0): point = 324
   Insn 133(l0): point = 326
   Insn 132(l0): point = 328
   Insn 131(l0): point = 330
   Insn 130(l0): point = 332
   Insn 129(l0): point = 334
   Insn 128(l0): point = 336
   Insn 127(l0): point = 338
   Insn 125(l0): point = 341
   Insn 124(l0): point = 343
   Insn 123(l0): point = 345
   Insn 122(l0): point = 347
   Insn 120(l0): point = 350
   Insn 119(l0): point = 352
   Insn 118(l0): point = 354
   Insn 117(l0): point = 356
   Insn 116(l0): point = 358
   Insn 115(l0): point = 360
   Insn 114(l0): point = 362
   Insn 113(l0): point = 364
   Insn 112(l0): point = 366
   Insn 111(l0): point = 368
   Insn 110(l0): point = 370
   Insn 109(l0): point = 372
   Insn 108(l0): point = 374
   Insn 107(l0): point = 376
   Insn 106(l0): point = 378
   Insn 105(l0): point = 380
   Insn 104(l0): point = 382
   Insn 103(l0): point = 384
   Insn 102(l0): point = 386
   Insn 101(l0): point = 388
   Insn 100(l0): point = 390
   Insn 99(l0): point = 392
   Insn 364(l0): point = 395
   Insn 94(l0): point = 397
   Insn 93(l0): point = 399
   Insn 92(l0): point = 401
   Insn 91(l0): point = 403
   Insn 90(l0): point = 405
   Insn 89(l0): point = 407
   Insn 88(l0): point = 409
   Insn 86(l0): point = 412
   Insn 85(l0): point = 414
   Insn 84(l0): point = 416
   Insn 83(l0): point = 418
   Insn 82(l0): point = 420
   Insn 81(l0): point = 422
   Insn 80(l0): point = 424
   Insn 79(l0): point = 426
   Insn 78(l0): point = 428
   Insn 77(l0): point = 430
   Insn 76(l0): point = 432
   Insn 75(l0): point = 434
   Insn 74(l0): point = 436
   Insn 73(l0): point = 438
   Insn 72(l0): point = 440
   Insn 71(l0): point = 442
   Insn 70(l0): point = 444
   Insn 69(l0): point = 446
   Insn 68(l0): point = 448
   Insn 67(l0): point = 450
   Insn 66(l0): point = 452
   Insn 65(l0): point = 454
   Insn 64(l0): point = 456
   Insn 63(l0): point = 458
   Insn 62(l0): point = 460
   Insn 61(l0): point = 462
   Insn 60(l0): point = 464
   Insn 59(l0): point = 466
   Insn 384(l0): point = 469
   Insn 359(l0): point = 472
   Insn 39(l0): point = 474
   Insn 37(l0): point = 477
   Insn 36(l0): point = 479
   Insn 35(l0): point = 481
   Insn 362(l0): point = 484
   Insn 53(l0): point = 486
   Insn 47(l0): point = 489
   Insn 46(l0): point = 491
   Insn 45(l0): point = 493
   Insn 44(l0): point = 495
   Insn 33(l0): point = 498
   Insn 32(l0): point = 500
   Insn 357(l0): point = 503
   Insn 27(l0): point = 505
   Insn 25(l0): point = 508
   Insn 24(l0): point = 510
   Insn 23(l0): point = 512
   Insn 22(l0): point = 514
   Insn 21(l0): point = 516
   Insn 20(l0): point = 518
   Insn 19(l0): point = 520
   Insn 18(l0): point = 522
   Insn 17(l0): point = 524
   Insn 16(l0): point = 526
   Insn 15(l0): point = 528
   Insn 14(l0): point = 530
   Insn 13(l0): point = 532
   Insn 355(l0): point = 535
   Insn 8(l0): point = 537
   Insn 6(l0): point = 540
   Insn 5(l0): point = 542
   Insn 397(l0): point = 544
 a0(r118): [3..4]
 a1(r117): [535..537] [503..505] [472..474] [395..397] [324..326] [54..56] [5..7]
 a2(r115): [18..21]
 a3(r116): [18..19]
 a4(r113): [20..27]
 a5(r114): [22..23]
 a6(r173): [24..25]
 a7(r112): [28..29]
 a8(r111): [30..31]
 a9(r172): [32..33]
 a10(r109): [36..39]
 a11(r110): [36..37]
 a12(r107): [38..45]
 a13(r108): [40..41]
 a14(r171): [42..43]
 a15(r106): [46..47]
 a16(r105): [48..49]
 a17(r170): [50..51]
 a18(r169): [67..68]
 a19(r82): [540..544] [508..534] [477..502] [412..471] [341..394] [71..323]
 a20(r104): [80..83]
 a21(r166): [84..89]
 a22(r167): [84..85]
 a23(r168): [86..87]
 a24(r103): [111..114]
 a25(r163): [115..120]
 a26(r164): [115..116]
 a27(r165): [117..118]
 a28(r102): [136..137]
 a29(r101): [138..139]
 a30(r99): [138..145]
 a31(r100): [140..141]
 a32(r162): [142..143]
 a33(r98): [146..147]
 a34(r97): [148..149]
 a35(r161): [150..151]
 a36(r96): [198..199]
 a37(r95): [200..201]
 a38(r160): [202..203]
 a39(r94): [163..164]
 a40(r157): [165..170]
 a41(r158): [165..166]
 a42(r159): [167..168]
 a43(r154): [173..178]
 a44(r155): [173..174]
 a45(r93): [173..180]
 a46(r156): [175..176]
 a47(r92): [261..262]
 a48(r91): [263..264]
 a49(r153): [265..266]
 a50(r90): [226..227]
 a51(r150): [228..233]
 a52(r151): [228..229]
 a53(r152): [230..231]
 a54(r147): [236..241]
 a55(r148): [236..237]
 a56(r89): [236..243]
 a57(r149): [238..239]
 a58(r144): [285..290]
 a59(r145): [285..286]
 a60(r146): [287..288]
 a61(r141): [306..311]
 a62(r142): [306..307]
 a63(r143): [308..309]
 a64(r140): [337..338]
 a65(r88): [344..345]
 a66(r139): [346..347]
 a67(r87): [353..354]
 a68(r138): [355..356]
 a69(r132): [369..388]
 a70(r137): [369..370]
 a71(r86): [371..390]
 a72(r136): [373..374]
 a73(r135): [377..378]
 a74(r134): [381..382]
 a75(r133): [385..386]
 a76(r131): [391..392]
 a77(r130): [408..409]
 a78(r129): [417..418]
 a79(r128): [441..442]
 a80(r127): [445..446]
 a81(r126): [449..450]
 a82(r125): [453..454]
 a83(r124): [457..458]
 a84(r123): [461..462]
 a85(r85): [461..464]
 a86(r122): [465..466]
 a87(r84): [492..493]
 a88(r121): [494..495]
 a89(r83): [480..481]
 a90(r120): [499..500]
 a91(r119): [513..514]
Compressing live ranges: from 547 to 164 - 29%
Ranges after the compression:
 a0(r118): [0..1]
 a1(r117): [160..161] [156..157] [146..147] [126..127] [102..103] [32..33] [2..3]
 a2(r115): [4..7]
 a3(r116): [4..5]
 a4(r113): [6..11]
 a5(r114): [8..9]
 a6(r173): [10..11]
 a7(r112): [12..13]
 a8(r111): [14..15]
 a9(r172): [16..17]
 a10(r109): [18..21]
 a11(r110): [18..19]
 a12(r107): [20..25]
 a13(r108): [22..23]
 a14(r171): [24..25]
 a15(r106): [26..27]
 a16(r105): [28..29]
 a17(r170): [30..31]
 a18(r169): [34..35]
 a19(r82): [162..163] [158..159] [148..155] [130..145] [106..125] [36..101]
 a20(r104): [36..37]
 a21(r166): [38..41]
 a22(r167): [38..39]
 a23(r168): [40..41]
 a24(r103): [42..43]
 a25(r163): [44..47]
 a26(r164): [44..45]
 a27(r165): [46..47]
 a28(r102): [48..49]
 a29(r101): [50..51]
 a30(r99): [50..55]
 a31(r100): [52..53]
 a32(r162): [54..55]
 a33(r98): [56..57]
 a34(r97): [58..59]
 a35(r161): [60..61]
 a36(r96): [72..73]
 a37(r95): [74..75]
 a38(r160): [76..77]
 a39(r94): [62..63]
 a40(r157): [64..67]
 a41(r158): [64..65]
 a42(r159): [66..67]
 a43(r154): [68..71]
 a44(r155): [68..69]
 a45(r93): [68..71]
 a46(r156): [70..71]
 a47(r92): [88..89]
 a48(r91): [90..91]
 a49(r153): [92..93]
 a50(r90): [78..79]
 a51(r150): [80..83]
 a52(r151): [80..81]
 a53(r152): [82..83]
 a54(r147): [84..87]
 a55(r148): [84..85]
 a56(r89): [84..87]
 a57(r149): [86..87]
 a58(r144): [94..97]
 a59(r145): [94..95]
 a60(r146): [96..97]
 a61(r141): [98..101]
 a62(r142): [98..99]
 a63(r143): [100..101]
 a64(r140): [104..105]
 a65(r88): [106..107]
 a66(r139): [108..109]
 a67(r87): [110..111]
 a68(r138): [112..113]
 a69(r132): [114..123]
 a70(r137): [114..115]
 a71(r86): [116..123]
 a72(r136): [116..117]
 a73(r135): [118..119]
 a74(r134): [120..121]
 a75(r133): [122..123]
 a76(r131): [124..125]
 a77(r130): [128..129]
 a78(r129): [130..131]
 a79(r128): [132..133]
 a80(r127): [134..135]
 a81(r126): [136..137]
 a82(r125): [138..139]
 a83(r124): [140..141]
 a84(r123): [142..143]
 a85(r85): [142..143]
 a86(r122): [144..145]
 a87(r84): [150..151]
 a88(r121): [152..153]
 a89(r83): [148..149]
 a90(r120): [154..155]
 a91(r119): [158..159]
  pref0:a78(r129)<-hr0@1500
  pref1:a91(r119)<-hr0@1500
  pref2:a0(r118)<-hr0@1500
  pref3:a45(r93)<-hr0@1500
  pref4:a56(r89)<-hr0@1500
  regions=1, blocks=47, points=164
    allocnos=92 (big 0), copies=0, conflicts=0, ranges=103
Disposition:
   19:r82  l0     3   89:r83  l0     0   87:r84  l0     0   85:r85  l0     1
   71:r86  l0     1   67:r87  l0     0   65:r88  l0     0   56:r89  l0     0
   50:r90  l0     0   48:r91  l0     0   47:r92  l0     0   45:r93  l0     0
   39:r94  l0     0   37:r95  l0     0   36:r96  l0     0   34:r97  l0     0
   33:r98  l0     0   30:r99  l0     1   31:r100 l0     0   29:r101 l0     0
   28:r102 l0     0   24:r103 l0     0   20:r104 l0     0   16:r105 l0     0
   15:r106 l0     0   12:r107 l0     1   13:r108 l0     0   10:r109 l0     0
   11:r110 l0     1    8:r111 l0     0    7:r112 l0     0    4:r113 l0     1
    5:r114 l0     0    2:r115 l0     0    3:r116 l0     1    1:r117 l0     0
    0:r118 l0     0   91:r119 l0     0   90:r120 l0     0   88:r121 l0     0
   86:r122 l0     0   84:r123 l0     0   83:r124 l0     0   82:r125 l0     0
   81:r126 l0     0   80:r127 l0     0   79:r128 l0     0   78:r129 l0     0
   77:r130 l0     0   76:r131 l0     0   69:r132 l0     0   75:r133 l0     2
   74:r134 l0     2   73:r135 l0     2   72:r136 l0     2   70:r137 l0     1
   68:r138 l0     0   66:r139 l0     0   64:r140 l0     0   61:r141 l0     0
   62:r142 l0     1   63:r143 l0     1   58:r144 l0     0   59:r145 l0     1
   60:r146 l0     1   54:r147 l0     1   55:r148 l0     2   57:r149 l0     2
   51:r150 l0     0   52:r151 l0     1   53:r152 l0     1   49:r153 l0     0
   43:r154 l0     1   44:r155 l0     2   46:r156 l0     2   40:r157 l0     0
   41:r158 l0     1   42:r159 l0     1   38:r160 l0     0   35:r161 l0     0
   32:r162 l0     0   25:r163 l0     0   26:r164 l0     1   27:r165 l0     1
   21:r166 l0     0   22:r167 l0     1   23:r168 l0     1   18:r169 l0     0
   17:r170 l0     0   14:r171 l0     0    9:r172 l0     0    6:r173 l0     0
+++Costs: overall 9000, reg 9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


read_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={15d,6u} r1={14d} r2={14d} r3={7d,7u} r6={1d,46u} r7={43d,127u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,52u} r17={77d,16u} r18={13d} r19={1d,132u,8e} r20={13d} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={13d} r38={13d} r39={13d} r40={13d} r41={13d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r82={1d,9u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,5u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={7d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,5u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 1618{1116d,494u,8e} in 251{238 regular + 13 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 397 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 397 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 397 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":83:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "fs/super.c":83:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 11)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 355 3 (set (reg/f:SI 117 [ _44 ])
        (const_int 0 [0])) "fs/super.c":84:16 75 {*movsi_internal}
     (nil))
(jump_insn 355 8 356 3 (set (pc)
        (label_ref 346)) "fs/super.c":84:16 807 {jump}
     (nil)
 -> 346)
(barrier 356 355 11)
(code_label 11 356 12 4 16 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":85:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 14 13 15 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/super.c":85:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 15 14 16 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":85:5 75 {*movsi_internal}
     (nil))
(call_insn 16 15 17 4 (call (mem:QI (symbol_ref:SI ("check_disk_change") [flags 0x41]  <function_decl 0x759b7f90ea00 check_disk_change>) [0 check_disk_change S1 A8])
        (const_int 16 [0x10])) "fs/super.c":85:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 17 16 18 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":85:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":86:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 19 18 20 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/super.c":86:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 20 19 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x3]  <function_decl 0x759b7f90e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":86:14 823 {*call_value}
     (nil)
    (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":86:14 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 22 21 23 4 (set (reg:SI 119)
        (reg:SI 0 ax)) "fs/super.c":86:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 23 22 24 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
        (reg:SI 119)) "fs/super.c":86:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":86:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "fs/super.c":86:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 357 5 (set (reg/f:SI 117 [ _44 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":87:16 75 {*movsi_internal}
     (nil))
(jump_insn 357 27 358 5 (set (pc)
        (label_ref 346)) "fs/super.c":87:16 807 {jump}
     (nil)
 -> 346)
(barrier 358 357 30)
(code_label 30 358 31 6 18 (nil) [1 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:SI 120)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":89:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
        (nil)))
(insn 33 32 54 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
        (reg/f:SI 120)) "fs/super.c":89:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(code_label 54 33 34 7 22 (nil) [1 uses])
(note 34 54 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg/f:SI 83 [ _1 ])
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                        ] UNSPEC_GOTOFF)
                    (const_int 864 [0x360]))))) "fs/super.c":90:27 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                (const_int 864 [0x360])))
        (nil)))
(insn 36 35 37 7 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
            (reg/f:SI 83 [ _1 ]))) "fs/super.c":90:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ _1 ])
        (nil)))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "fs/super.c":90:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 42)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 359 8 (set (reg/f:SI 117 [ _44 ])
        (const_int 0 [0])) "fs/super.c":91:20 75 {*movsi_internal}
     (nil))
(jump_insn 359 39 360 8 (set (pc)
        (label_ref 346)) "fs/super.c":91:20 807 {jump}
     (nil)
 -> 346)
(barrier 360 359 42)
(code_label 42 360 43 9 19 (nil) [1 uses])
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":92:15 75 {*movsi_internal}
     (nil))
(insn 45 44 46 9 (set (reg:HI 84 [ _2 ])
        (mem:HI (plus:SI (reg/f:SI 121)
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])) "fs/super.c":92:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 46 45 47 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 84 [ _2 ])
            (const_int 0 [0]))) "fs/super.c":92:12 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(jump_insn 47 46 52 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 383)
            (pc))) "fs/super.c":92:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 383)
(note 52 47 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 362 10 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":89:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 362 53 363 10 (set (pc)
        (label_ref 54)) "fs/super.c":90:12 807 {jump}
     (nil)
 -> 54)
(barrier 363 362 383)
(code_label 383 363 382 42 45 (nil) [1 uses])
(note 382 383 384 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 384 382 361 42 (const_int 0 [0]) "fs/super.c":93:13 843 {nop}
     (nil))
(code_label 361 384 58 11 44 (nil) [0 uses])
(note 58 361 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (set (reg:SI 122)
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/super.c":95:14 75 {*movsi_internal}
     (nil))
(insn 60 59 61 11 (set (reg:HI 85 [ _3 ])
        (subreg:HI (reg:SI 122) 0)) "fs/super.c":95:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 61 60 62 11 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":95:14 75 {*movsi_internal}
     (nil))
(insn 62 61 63 11 (set (mem:HI (plus:SI (reg/f:SI 123)
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (reg:HI 85 [ _3 ])) "fs/super.c":95:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_DEAD (reg:HI 85 [ _3 ])
            (nil))))
(insn 63 62 64 11 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":96:15 75 {*movsi_internal}
     (nil))
(insn 64 63 65 11 (set (mem/f:SI (plus:SI (reg/f:SI 124)
                (const_int 88 [0x58])) [5 s_35->s_isup+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":96:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (nil)))
(insn 65 64 66 11 (set (reg/f:SI 125)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":97:17 75 {*movsi_internal}
     (nil))
(insn 66 65 67 11 (set (mem/f:SI (plus:SI (reg/f:SI 125)
                (const_int 92 [0x5c])) [5 s_35->s_imount+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":97:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))
(insn 67 66 68 11 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":98:15 75 {*movsi_internal}
     (nil))
(insn 68 67 69 11 (set (mem:SI (plus:SI (reg/f:SI 126)
                (const_int 96 [0x60])) [3 s_35->s_time+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":98:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (nil)))
(insn 69 68 70 11 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":99:18 75 {*movsi_internal}
     (nil))
(insn 70 69 71 11 (set (mem:QI (plus:SI (reg/f:SI 127)
                (const_int 105 [0x69])) [0 s_35->s_rd_only+0 S1 A8])
        (const_int 0 [0])) "fs/super.c":99:18 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 71 70 72 11 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":100:15 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 106 [0x6a])) [0 s_35->s_dirt+0 S1 A16])
        (const_int 0 [0])) "fs/super.c":100:15 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))
(insn 73 72 74 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":101:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 74 73 75 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":101:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 75 74 76 11 (call (mem:QI (symbol_ref:SI ("lock_super") [flags 0x3]  <function_decl 0x759b7f937d00 lock_super>) [0 lock_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":101:5 812 {*call}
     (nil)
    (nil))
(insn 76 75 77 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":101:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 77 76 78 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":102:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 78 77 79 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/super.c":102:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 79 78 80 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/super.c":102:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 80 79 81 11 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":102:16 75 {*movsi_internal}
     (nil))
(call_insn 81 80 82 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x759b7f90e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":102:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 82 81 83 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":102:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 83 82 84 11 (set (reg:SI 129)
        (reg:SI 0 ax)) "fs/super.c":102:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 84 83 85 11 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 bh+0 S4 A32])
        (reg:SI 129)) "fs/super.c":102:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":102:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "fs/super.c":102:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 97)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":103:18 75 {*movsi_internal}
     (nil))
(insn 89 88 90 12 (set (mem:HI (plus:SI (reg/f:SI 130)
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":103:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 90 89 91 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":104:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 91 90 92 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":104:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 92 91 93 12 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x759b7f945100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":104:9 812 {*call}
     (nil)
    (nil))
(insn 93 92 94 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":104:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 94 93 364 12 (set (reg/f:SI 117 [ _44 ])
        (const_int 0 [0])) "fs/super.c":105:16 75 {*movsi_internal}
     (nil))
(jump_insn 364 94 365 12 (set (pc)
        (label_ref 346)) "fs/super.c":105:16 807 {jump}
     (nil)
 -> 346)
(barrier 365 364 97)
(code_label 97 365 98 13 23 (nil) [1 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 bh+0 S4 A32])) "fs/super.c":108:43 75 {*movsi_internal}
     (nil))
(insn 100 99 101 13 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (reg/f:SI 131) [8 bh_69->b_data+0 S4 A32])) "fs/super.c":108:43 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 101 100 102 13 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 102 101 103 13 (set (reg:SI 133)
        (mem:SI (reg/f:SI 86 [ _4 ]) [21 MEM[(struct d_super_block *)_4]+0 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 103 102 104 13 (set (mem:SI (reg/f:SI 132) [21 MEM[(struct d_super_block *)s_35]+0 S4 A32])
        (reg:SI 133)) "fs/super.c":107:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133)
        (nil)))
(insn 104 103 105 13 (set (reg:SI 134)
        (mem:SI (plus:SI (reg/f:SI 86 [ _4 ])
                (const_int 4 [0x4])) [21 MEM[(struct d_super_block *)_4]+4 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 105 104 106 13 (set (mem:SI (plus:SI (reg/f:SI 132)
                (const_int 4 [0x4])) [21 MEM[(struct d_super_block *)s_35]+4 S4 A32])
        (reg:SI 134)) "fs/super.c":107:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
(insn 106 105 107 13 (set (reg:SI 135)
        (mem:SI (plus:SI (reg/f:SI 86 [ _4 ])
                (const_int 8 [0x8])) [21 MEM[(struct d_super_block *)_4]+8 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 107 106 108 13 (set (mem:SI (plus:SI (reg/f:SI 132)
                (const_int 8 [0x8])) [21 MEM[(struct d_super_block *)s_35]+8 S4 A32])
        (reg:SI 135)) "fs/super.c":107:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 108 107 109 13 (set (reg:SI 136)
        (mem:SI (plus:SI (reg/f:SI 86 [ _4 ])
                (const_int 12 [0xc])) [21 MEM[(struct d_super_block *)_4]+12 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (nil))
(insn 109 108 110 13 (set (mem:SI (plus:SI (reg/f:SI 132)
                (const_int 12 [0xc])) [21 MEM[(struct d_super_block *)s_35]+12 S4 A32])
        (reg:SI 136)) "fs/super.c":107:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 136)
        (nil)))
(insn 110 109 111 13 (set (reg:SI 137)
        (mem:SI (plus:SI (reg/f:SI 86 [ _4 ])
                (const_int 16 [0x10])) [21 MEM[(struct d_super_block *)_4]+16 S4 A32])) "fs/super.c":107:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (nil)))
(insn 111 110 112 13 (set (mem:SI (plus:SI (reg/f:SI 132)
                (const_int 16 [0x10])) [21 MEM[(struct d_super_block *)s_35]+16 S4 A32])
        (reg:SI 137)) "fs/super.c":107:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg/f:SI 132)
            (nil))))
(insn 112 111 113 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":109:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 113 112 114 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 bh+0 S4 A32])) "fs/super.c":109:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 114 113 115 13 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":109:5 75 {*movsi_internal}
     (nil))
(call_insn 115 114 116 13 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x759b7f90e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":109:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 116 115 117 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":109:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 117 116 118 13 (set (reg/f:SI 138)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":110:10 75 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 138)
                (const_int 16 [0x10])) [2 s_35->s_magic+0 S2 A32])) "fs/super.c":110:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))
(insn 119 118 120 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 87 [ _5 ])
            (const_int 4991 [0x137f]))) "fs/super.c":110:8 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(jump_insn 120 119 121 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "fs/super.c":110:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 136)
(note 121 120 122 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 14 (set (reg/f:SI 139)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":111:10 75 {*movsi_internal}
     (nil))
(insn 123 122 124 14 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (reg/f:SI 139)
                (const_int 16 [0x10])) [2 s_35->s_magic+0 S2 A32])) "fs/super.c":111:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 139)
        (nil)))
(insn 124 123 125 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 88 [ _6 ])
            (const_int 5007 [0x138f]))) "fs/super.c":110:41 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(jump_insn 125 124 126 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) "fs/super.c":110:41 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 136)
(note 126 125 127 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 15 (set (reg/f:SI 140)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":112:18 75 {*movsi_internal}
     (nil))
(insn 128 127 129 15 (set (mem:HI (plus:SI (reg/f:SI 140)
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":112:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 140)
        (nil)))
(insn 129 128 130 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":113:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 130 129 131 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":113:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 131 130 132 15 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x759b7f945100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":113:9 812 {*call}
     (nil)
    (nil))
(insn 132 131 133 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":113:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 133 132 366 15 (set (reg/f:SI 117 [ _44 ])
        (const_int 0 [0])) "fs/super.c":114:16 75 {*movsi_internal}
     (nil))
(jump_insn 366 133 367 15 (set (pc)
        (label_ref 346)) "fs/super.c":114:16 807 {jump}
     (nil)
 -> 346)
(barrier 367 366 136)
(code_label 136 367 137 16 24 (nil) [2 uses])
(note 137 136 138 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 368 16 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":116:12 75 {*movsi_internal}
     (nil))
(jump_insn 368 138 369 16 (set (pc)
        (label_ref 147)) "fs/super.c":116:5 807 {jump}
     (nil)
 -> 147)
(barrier 369 368 149)
(code_label 149 369 141 17 26 (nil) [1 uses])
(note 141 149 142 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 17 (set (reg/f:SI 141)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":117:22 75 {*movsi_internal}
     (nil))
(insn 143 142 144 17 (set (reg:SI 143)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":117:22 75 {*movsi_internal}
     (nil))
(insn 144 143 145 17 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 143)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":117:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 145 144 146 17 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 142)
                        (const_int 4 [0x4]))
                    (reg/f:SI 141))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_36]+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":117:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/f:SI 141)
            (nil))))
(insn 146 145 147 17 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":116:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 147 146 148 18 25 (nil) [1 uses])
(note 148 147 152 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 152 148 153 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":116:19 11 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 18 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) "fs/super.c":116:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 149)
(note 154 153 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 370 19 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":118:12 75 {*movsi_internal}
     (nil))
(jump_insn 370 155 371 19 (set (pc)
        (label_ref 164)) "fs/super.c":118:5 807 {jump}
     (nil)
 -> 164)
(barrier 371 370 166)
(code_label 166 371 158 20 28 (nil) [1 uses])
(note 158 166 159 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 20 (set (reg/f:SI 144)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":119:22 75 {*movsi_internal}
     (nil))
(insn 160 159 161 20 (set (reg:SI 146)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":119:22 75 {*movsi_internal}
     (nil))
(insn 161 160 162 20 (parallel [
            (set (reg:SI 145)
                (plus:SI (reg:SI 146)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":119:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 162 161 163 20 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 145)
                        (const_int 4 [0x4]))
                    (reg/f:SI 144))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_37]+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":119:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg/f:SI 144)
            (nil))))
(insn 163 162 164 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":118:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 164 163 165 21 27 (nil) [1 uses])
(note 165 164 169 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 169 165 170 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":118:19 11 {*cmpsi_1}
     (nil))
(jump_insn 170 169 171 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "fs/super.c":118:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 166)
(note 171 170 172 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 22 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])
        (const_int 2 [0x2])) "fs/super.c":120:11 75 {*movsi_internal}
     (nil))
(insn 173 172 372 22 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":121:12 75 {*movsi_internal}
     (nil))
(jump_insn 372 173 373 22 (set (pc)
        (label_ref 205)) "fs/super.c":121:5 807 {jump}
     (nil)
 -> 205)
(barrier 373 372 210)
(code_label 210 373 176 23 33 (nil) [1 uses])
(note 176 210 177 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 178 177 179 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])) "fs/super.c":122:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 179 178 180 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/super.c":122:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 180 179 181 23 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":122:29 75 {*movsi_internal}
     (nil))
(call_insn 181 180 182 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x759b7f90e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":122:29 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 182 181 183 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 183 182 184 23 (set (reg/f:SI 89 [ _7 ])
        (reg:SI 0 ax)) "fs/super.c":122:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 184 183 185 23 (set (reg/f:SI 147)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":122:27 75 {*movsi_internal}
     (nil))
(insn 185 184 186 23 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":122:27 75 {*movsi_internal}
     (nil))
(insn 186 185 187 23 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg:SI 149)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 187 186 188 23 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 148)
                        (const_int 4 [0x4]))
                    (reg/f:SI 147))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_38]+0 S4 A32])
        (reg/f:SI 89 [ _7 ])) "fs/super.c":122:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg/f:SI 147)
            (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
                (nil)))))
(insn 188 187 189 23 (set (reg/f:SI 150)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":122:23 75 {*movsi_internal}
     (nil))
(insn 189 188 190 23 (set (reg:SI 152)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":122:23 75 {*movsi_internal}
     (nil))
(insn 190 189 191 23 (parallel [
            (set (reg:SI 151)
                (plus:SI (reg:SI 152)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":122:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 191 190 192 23 (set (reg/f:SI 90 [ _8 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 151)
                        (const_int 4 [0x4]))
                    (reg/f:SI 150))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_38]+0 S4 A32])) "fs/super.c":122:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg/f:SI 150)
            (nil))))
(insn 192 191 193 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 90 [ _8 ])
            (const_int 0 [0]))) "fs/super.c":122:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
        (nil)))
(jump_insn 193 192 194 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 389)
            (pc))) "fs/super.c":122:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 389)
(note 194 193 195 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 203 24 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":123:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 203 195 204 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 25 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":121:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 205 204 206 26 29 (nil) [1 uses])
(note 206 205 207 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 26 (set (reg/f:SI 153)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":121:22 75 {*movsi_internal}
     (nil))
(insn 208 207 209 26 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 153)
                (const_int 4 [0x4])) [2 s_35->s_imap_blocks+0 S2 A32])) "fs/super.c":121:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))
(insn 209 208 211 26 (set (reg:SI 92 [ _10 ])
        (zero_extend:SI (reg:HI 91 [ _9 ]))) "fs/super.c":121:22 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (nil)))
(insn 211 209 212 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (reg:SI 92 [ _10 ]))) "fs/super.c":121:19 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(jump_insn 212 211 385 26 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) "fs/super.c":121:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 210)
(note 385 212 386 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(jump_insn 386 385 387 43 (set (pc)
        (label_ref 213)) 807 {jump}
     (nil)
 -> 213)
(barrier 387 386 389)
(code_label 389 387 388 44 46 (nil) [1 uses])
(note 388 389 390 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 390 388 213 44 (const_int 0 [0]) "fs/super.c":125:13 843 {nop}
     (nil))
(code_label 213 390 214 27 32 (nil) [1 uses])
(note 214 213 215 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 374 27 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":126:12 75 {*movsi_internal}
     (nil))
(jump_insn 374 215 375 27 (set (pc)
        (label_ref 247)) "fs/super.c":126:5 807 {jump}
     (nil)
 -> 247)
(barrier 375 374 252)
(code_label 252 375 218 28 38 (nil) [1 uses])
(note 218 252 219 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 220 219 221 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])) "fs/super.c":127:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 221 220 222 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/super.c":127:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 222 221 223 28 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":127:29 75 {*movsi_internal}
     (nil))
(call_insn 223 222 224 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x759b7f90e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":127:29 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 224 223 225 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 225 224 226 28 (set (reg/f:SI 93 [ _11 ])
        (reg:SI 0 ax)) "fs/super.c":127:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 226 225 227 28 (set (reg/f:SI 154)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":127:27 75 {*movsi_internal}
     (nil))
(insn 227 226 228 28 (set (reg:SI 156)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":127:27 75 {*movsi_internal}
     (nil))
(insn 228 227 229 28 (parallel [
            (set (reg:SI 155)
                (plus:SI (reg:SI 156)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:27 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 229 228 230 28 (set (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 155)
                        (const_int 4 [0x4]))
                    (reg/f:SI 154))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_39]+0 S4 A32])
        (reg/f:SI 93 [ _11 ])) "fs/super.c":127:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg/f:SI 154)
            (expr_list:REG_DEAD (reg/f:SI 93 [ _11 ])
                (nil)))))
(insn 230 229 231 28 (set (reg/f:SI 157)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":127:23 75 {*movsi_internal}
     (nil))
(insn 231 230 232 28 (set (reg:SI 159)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":127:23 75 {*movsi_internal}
     (nil))
(insn 232 231 233 28 (parallel [
            (set (reg:SI 158)
                (plus:SI (reg:SI 159)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":127:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 233 232 234 28 (set (reg/f:SI 94 [ _12 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 158)
                        (const_int 4 [0x4]))
                    (reg/f:SI 157))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_39]+0 S4 A32])) "fs/super.c":127:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/f:SI 157)
            (nil))))
(insn 234 233 235 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 94 [ _12 ])
            (const_int 0 [0]))) "fs/super.c":127:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _12 ])
        (nil)))
(jump_insn 235 234 236 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 395)
            (pc))) "fs/super.c":127:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 395)
(note 236 235 237 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 245 29 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":128:18 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 245 237 246 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 30 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":126:40 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 247 246 248 31 34 (nil) [1 uses])
(note 248 247 249 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 31 (set (reg/f:SI 160)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":126:22 75 {*movsi_internal}
     (nil))
(insn 250 249 251 31 (set (reg:HI 95 [ _13 ])
        (mem:HI (plus:SI (reg/f:SI 160)
                (const_int 6 [0x6])) [2 s_35->s_zmap_blocks+0 S2 A16])) "fs/super.c":126:22 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 160)
        (nil)))
(insn 251 250 253 31 (set (reg:SI 96 [ _14 ])
        (zero_extend:SI (reg:HI 95 [ _13 ]))) "fs/super.c":126:22 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 95 [ _13 ])
        (nil)))
(insn 253 251 254 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (reg:SI 96 [ _14 ]))) "fs/super.c":126:19 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96 [ _14 ])
        (nil)))
(jump_insn 254 253 391 31 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) "fs/super.c":126:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 252)
(note 391 254 392 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(jump_insn 392 391 393 45 (set (pc)
        (label_ref 255)) 807 {jump}
     (nil)
 -> 255)
(barrier 393 392 395)
(code_label 395 393 394 46 47 (nil) [1 uses])
(note 394 395 396 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 396 394 255 46 (const_int 0 [0]) "fs/super.c":130:13 843 {nop}
     (nil))
(code_label 255 396 256 32 37 (nil) [1 uses])
(note 256 255 257 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 32 (set (reg/f:SI 161)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":131:23 75 {*movsi_internal}
     (nil))
(insn 258 257 259 32 (set (reg:HI 97 [ _15 ])
        (mem:HI (plus:SI (reg/f:SI 161)
                (const_int 4 [0x4])) [2 s_35->s_imap_blocks+0 S2 A32])) "fs/super.c":131:23 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 161)
        (nil)))
(insn 259 258 260 32 (set (reg:SI 98 [ _16 ])
        (zero_extend:SI (reg:HI 97 [ _15 ]))) "fs/super.c":131:23 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 97 [ _15 ])
        (nil)))
(insn 260 259 261 32 (parallel [
            (set (reg:SI 99 [ _17 ])
                (plus:SI (reg:SI 98 [ _16 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":131:20 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 261 260 262 32 (set (reg/f:SI 162)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":131:42 75 {*movsi_internal}
     (nil))
(insn 262 261 263 32 (set (reg:HI 100 [ _18 ])
        (mem:HI (plus:SI (reg/f:SI 162)
                (const_int 6 [0x6])) [2 s_35->s_zmap_blocks+0 S2 A16])) "fs/super.c":131:42 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 162)
        (nil)))
(insn 263 262 264 32 (set (reg:SI 101 [ _19 ])
        (zero_extend:SI (reg:HI 100 [ _18 ]))) "fs/super.c":131:42 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
        (nil)))
(insn 264 263 265 32 (parallel [
            (set (reg:SI 102 [ _20 ])
                (plus:SI (reg:SI 99 [ _17 ])
                    (reg:SI 101 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":131:39 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 265 264 266 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [9 block+0 S4 A32])
            (reg:SI 102 [ _20 ]))) "fs/super.c":131:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
        (nil)))
(jump_insn 266 265 267 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) "fs/super.c":131:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 321)
(note 267 266 268 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 376 33 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":132:16 75 {*movsi_internal}
     (nil))
(jump_insn 376 268 377 33 (set (pc)
        (label_ref 282)) "fs/super.c":132:9 807 {jump}
     (nil)
 -> 282)
(barrier 377 376 284)
(code_label 284 377 271 34 41 (nil) [1 uses])
(note 271 284 272 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 34 (set (reg/f:SI 163)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":133:13 75 {*movsi_internal}
     (nil))
(insn 273 272 274 34 (set (reg:SI 165)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":133:13 75 {*movsi_internal}
     (nil))
(insn 274 273 275 34 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 165)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":133:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 275 274 276 34 (set (reg/f:SI 103 [ _21 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 164)
                        (const_int 4 [0x4]))
                    (reg/f:SI 163))
                (const_int 4 [0x4])) [4 s_35->s_imap[i_40]+0 S4 A32])) "fs/super.c":133:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 163)
            (nil))))
(insn 276 275 277 34 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":133:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 277 276 278 34 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 103 [ _21 ])) "fs/super.c":133:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 103 [ _21 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 278 277 279 34 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":133:13 75 {*movsi_internal}
     (nil))
(call_insn 279 278 280 34 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x759b7f90e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":133:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 280 279 281 34 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":133:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 281 280 282 34 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":132:39 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 282 281 283 35 40 (nil) [1 uses])
(note 283 282 287 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 287 283 288 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":132:23 11 {*cmpsi_1}
     (nil))
(jump_insn 288 287 289 35 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) "fs/super.c":132:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 284)
(note 289 288 290 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 378 36 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":134:16 75 {*movsi_internal}
     (nil))
(jump_insn 378 290 379 36 (set (pc)
        (label_ref 304)) "fs/super.c":134:9 807 {jump}
     (nil)
 -> 304)
(barrier 379 378 306)
(code_label 306 379 293 37 43 (nil) [1 uses])
(note 293 306 294 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 294 293 295 37 (set (reg/f:SI 166)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":135:13 75 {*movsi_internal}
     (nil))
(insn 295 294 296 37 (set (reg:SI 168)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])) "fs/super.c":135:13 75 {*movsi_internal}
     (nil))
(insn 296 295 297 37 (parallel [
            (set (reg:SI 167)
                (plus:SI (reg:SI 168)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":135:13 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 297 296 298 37 (set (reg/f:SI 104 [ _22 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 167)
                        (const_int 4 [0x4]))
                    (reg/f:SI 166))
                (const_int 4 [0x4])) [4 s_35->s_zmap[i_41]+0 S4 A32])) "fs/super.c":135:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_DEAD (reg/f:SI 166)
            (nil))))
(insn 298 297 299 37 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":135:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 299 298 300 37 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 104 [ _22 ])) "fs/super.c":135:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 104 [ _22 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 300 299 301 37 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":135:13 75 {*movsi_internal}
     (nil))
(call_insn 301 300 302 37 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x759b7f90e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":135:13 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 302 301 303 37 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":135:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 303 302 304 37 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":134:39 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 304 303 305 38 42 (nil) [1 uses])
(note 305 304 309 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 309 305 310 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":134:23 11 {*cmpsi_1}
     (nil))
(jump_insn 310 309 311 38 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 306)
            (pc))) "fs/super.c":134:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 306)
(note 311 310 312 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 39 (set (reg/f:SI 169)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":136:18 75 {*movsi_internal}
     (nil))
(insn 313 312 314 39 (set (mem:HI (plus:SI (reg/f:SI 169)
                (const_int 84 [0x54])) [2 s_35->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":136:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 169)
        (nil)))
(insn 314 313 315 39 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":137:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 315 314 316 39 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":137:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 316 315 317 39 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x759b7f945100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":137:9 812 {*call}
     (nil)
    (nil))
(insn 317 316 318 39 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":137:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 318 317 380 39 (set (reg/f:SI 117 [ _44 ])
        (const_int 0 [0])) "fs/super.c":138:16 75 {*movsi_internal}
     (nil))
(jump_insn 380 318 381 39 (set (pc)
        (label_ref 346)) "fs/super.c":138:16 807 {jump}
     (nil)
 -> 346)
(barrier 381 380 321)
(code_label 321 381 322 40 39 (nil) [1 uses])
(note 322 321 323 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 40 (set (reg/f:SI 170)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (nil))
(insn 324 323 325 40 (set (reg/f:SI 105 [ _23 ])
        (mem/f:SI (plus:SI (reg/f:SI 170)
                (const_int 20 [0x14])) [4 s_35->s_imap[0]+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 170)
        (nil)))
(insn 325 324 326 40 (set (reg/f:SI 106 [ _24 ])
        (mem/f:SI (reg/f:SI 105 [ _23 ]) [8 _23->b_data+0 S4 A32])) "fs/super.c":140:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
        (nil)))
(insn 326 325 327 40 (set (reg:QI 107 [ _25 ])
        (mem:QI (reg/f:SI 106 [ _24 ]) [0 *_24+0 S1 A8])) "fs/super.c":140:29 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106 [ _24 ])
        (nil)))
(insn 327 326 328 40 (set (reg/f:SI 171)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (nil))
(insn 328 327 329 40 (set (reg/f:SI 108 [ _26 ])
        (mem/f:SI (plus:SI (reg/f:SI 171)
                (const_int 20 [0x14])) [4 s_35->s_imap[0]+0 S4 A32])) "fs/super.c":140:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 171)
        (nil)))
(insn 329 328 330 40 (set (reg/f:SI 109 [ _27 ])
        (mem/f:SI (reg/f:SI 108 [ _26 ]) [8 _26->b_data+0 S4 A32])) "fs/super.c":140:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108 [ _26 ])
        (nil)))
(insn 330 329 331 40 (parallel [
            (set (reg:QI 110 [ _28 ])
                (ior:QI (reg:QI 107 [ _25 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":140:29 530 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 107 [ _25 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 331 330 332 40 (set (mem:QI (reg/f:SI 109 [ _27 ]) [0 *_27+0 S1 A8])
        (reg:QI 110 [ _28 ])) "fs/super.c":140:29 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 110 [ _28 ])
        (expr_list:REG_DEAD (reg/f:SI 109 [ _27 ])
            (nil))))
(insn 332 331 333 40 (set (reg/f:SI 172)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (nil))
(insn 333 332 334 40 (set (reg/f:SI 111 [ _29 ])
        (mem/f:SI (plus:SI (reg/f:SI 172)
                (const_int 52 [0x34])) [4 s_35->s_zmap[0]+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 172)
        (nil)))
(insn 334 333 335 40 (set (reg/f:SI 112 [ _30 ])
        (mem/f:SI (reg/f:SI 111 [ _29 ]) [8 _29->b_data+0 S4 A32])) "fs/super.c":141:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111 [ _29 ])
        (nil)))
(insn 335 334 336 40 (set (reg:QI 113 [ _31 ])
        (mem:QI (reg/f:SI 112 [ _30 ]) [0 *_30+0 S1 A8])) "fs/super.c":141:29 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 112 [ _30 ])
        (nil)))
(insn 336 335 337 40 (set (reg/f:SI 173)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (nil))
(insn 337 336 338 40 (set (reg/f:SI 114 [ _32 ])
        (mem/f:SI (plus:SI (reg/f:SI 173)
                (const_int 52 [0x34])) [4 s_35->s_zmap[0]+0 S4 A32])) "fs/super.c":141:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 173)
        (nil)))
(insn 338 337 339 40 (set (reg/f:SI 115 [ _33 ])
        (mem/f:SI (reg/f:SI 114 [ _32 ]) [8 _32->b_data+0 S4 A32])) "fs/super.c":141:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114 [ _32 ])
        (nil)))
(insn 339 338 340 40 (parallel [
            (set (reg:QI 116 [ _34 ])
                (ior:QI (reg:QI 113 [ _31 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":141:29 530 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 113 [ _31 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 340 339 341 40 (set (mem:QI (reg/f:SI 115 [ _33 ]) [0 *_33+0 S1 A8])
        (reg:QI 116 [ _34 ])) "fs/super.c":141:29 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 116 [ _34 ])
        (expr_list:REG_DEAD (reg/f:SI 115 [ _33 ])
            (nil))))
(insn 341 340 342 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":142:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 342 341 343 40 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":142:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 343 342 344 40 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x759b7f945100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":142:5 812 {*call}
     (nil)
    (nil))
(insn 344 343 345 40 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":142:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 345 344 346 40 (set (reg/f:SI 117 [ _44 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [19 s+0 S4 A32])) "fs/super.c":143:12 75 {*movsi_internal}
     (nil))
(code_label 346 345 347 41 17 (nil) [6 uses])
(note 347 346 348 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 348 347 352 41 (set (reg/f:SI 118 [ <retval> ])
        (reg/f:SI 117 [ _44 ])) "fs/super.c":144:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117 [ _44 ])
        (nil)))
(insn 352 348 353 41 (set (reg/i:SI 0 ax)
        (reg/f:SI 118 [ <retval> ])) "fs/super.c":144:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118 [ <retval> ])
        (nil)))
(insn 353 352 0 41 (use (reg/i:SI 0 ax)) "fs/super.c":144:1 -1
     (nil))

;; Function mount_root (mount_root, funcdef_no=6, decl_uid=1139, cgraph_uid=7, symbol_order=8)

scanning new insn with uid = 219.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 24 n_edges 32 count 31 (  1.3)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 4
;;  header 21, multiple latches: 20 19
;;  depth 1, outer 0
;;  nodes: 21 20 19
;;
;; Loop 3
;;  header 17, multiple latches: 16 15
;;  depth 1, outer 0
;;  nodes: 17 16 15
;;
;; Loop 2
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 17 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 15 18 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 19 22 }
;; 22 succs { 23 }
;; 23 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r154,l0) best AREG, allocno GENERAL_REGS
    r153: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r153,l0) best AREG, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r143,l0) best AREG, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r125,l0) best AREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r123,l0) best AREG, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:14000 DREG:14000 CREG:14000 BREG:14000 SIREG:14000 DIREG:14000 AD_REGS:14000 CLOBBERED_REGS:14000 Q_REGS:14000 NON_Q_REGS:14000 TLS_GOTBASE_REGS:14000 GENERAL_REGS:14000 MEM:126000
  a1(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r153,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a8(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a9(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a10(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a15(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a16(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a18(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a26(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a27(r143,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a28(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a29(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a31(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a35(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a36(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a37(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a38(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a39(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a40(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a41(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a42(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a43(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a44(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a45(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a46(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a47(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a48(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a49(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a50(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a51(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a52(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a53(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a54(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a55(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a56(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a57(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a58(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a59(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a60(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a61(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a62(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a63(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a64(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a65(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a66(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a67(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a68(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a69(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a70(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a71(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a72(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a73(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a74(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 218(l0): point = 0
   Insn 206(l0): point = 3
   Insn 205(l0): point = 5
   Insn 204(l0): point = 7
   Insn 203(l0): point = 9
   Insn 202(l0): point = 11
   Insn 201(l0): point = 13
   Insn 200(l0): point = 15
   Insn 199(l0): point = 17
   Insn 198(l0): point = 19
   Insn 197(l0): point = 21
   Insn 196(l0): point = 23
   Insn 184(l0): point = 26
   Insn 183(l0): point = 28
   Insn 182(l0): point = 30
   Insn 179(l0): point = 32
   Insn 181(l0): point = 34
   Insn 180(l0): point = 36
   Insn 178(l0): point = 38
   Insn 177(l0): point = 40
   Insn 176(l0): point = 42
   Insn 175(l0): point = 44
   Insn 174(l0): point = 46
   Insn 173(l0): point = 48
   Insn 172(l0): point = 50
   Insn 171(l0): point = 52
   Insn 194(l0): point = 55
   Insn 193(l0): point = 57
   Insn 189(l0): point = 59
   Insn 186(l0): point = 62
   Insn 215(l0): point = 65
   Insn 167(l0): point = 67
   Insn 166(l0): point = 69
   Insn 165(l0): point = 71
   Insn 164(l0): point = 73
   Insn 163(l0): point = 75
   Insn 162(l0): point = 77
   Insn 161(l0): point = 79
   Insn 160(l0): point = 81
   Insn 159(l0): point = 83
   Insn 158(l0): point = 85
   Insn 157(l0): point = 87
   Insn 156(l0): point = 89
   Insn 155(l0): point = 91
   Insn 154(l0): point = 93
   Insn 153(l0): point = 95
   Insn 152(l0): point = 97
   Insn 151(l0): point = 99
   Insn 139(l0): point = 102
   Insn 138(l0): point = 104
   Insn 137(l0): point = 106
   Insn 134(l0): point = 108
   Insn 136(l0): point = 110
   Insn 135(l0): point = 112
   Insn 133(l0): point = 114
   Insn 132(l0): point = 116
   Insn 131(l0): point = 118
   Insn 130(l0): point = 120
   Insn 129(l0): point = 122
   Insn 128(l0): point = 124
   Insn 127(l0): point = 126
   Insn 126(l0): point = 128
   Insn 149(l0): point = 131
   Insn 148(l0): point = 133
   Insn 144(l0): point = 135
   Insn 141(l0): point = 138
   Insn 213(l0): point = 141
   Insn 122(l0): point = 143
   Insn 121(l0): point = 145
   Insn 120(l0): point = 147
   Insn 119(l0): point = 149
   Insn 118(l0): point = 151
   Insn 117(l0): point = 153
   Insn 116(l0): point = 155
   Insn 115(l0): point = 157
   Insn 114(l0): point = 159
   Insn 113(l0): point = 161
   Insn 112(l0): point = 163
   Insn 111(l0): point = 165
   Insn 110(l0): point = 167
   Insn 109(l0): point = 169
   Insn 108(l0): point = 171
   Insn 107(l0): point = 173
   Insn 106(l0): point = 175
   Insn 105(l0): point = 177
   Insn 104(l0): point = 179
   Insn 103(l0): point = 181
   Insn 102(l0): point = 183
   Insn 101(l0): point = 185
   Insn 100(l0): point = 187
   Insn 99(l0): point = 189
   Insn 98(l0): point = 191
   Insn 95(l0): point = 194
   Insn 94(l0): point = 196
   Insn 93(l0): point = 198
   Insn 92(l0): point = 200
   Insn 91(l0): point = 202
   Insn 90(l0): point = 204
   Insn 88(l0): point = 207
   Insn 87(l0): point = 209
   Insn 86(l0): point = 211
   Insn 85(l0): point = 213
   Insn 84(l0): point = 215
   Insn 83(l0): point = 217
   Insn 82(l0): point = 219
   Insn 81(l0): point = 221
   Insn 80(l0): point = 223
   Insn 79(l0): point = 225
   Insn 78(l0): point = 227
   Insn 75(l0): point = 230
   Insn 74(l0): point = 232
   Insn 73(l0): point = 234
   Insn 72(l0): point = 236
   Insn 71(l0): point = 238
   Insn 70(l0): point = 240
   Insn 68(l0): point = 243
   Insn 67(l0): point = 245
   Insn 66(l0): point = 247
   Insn 65(l0): point = 249
   Insn 64(l0): point = 251
   Insn 63(l0): point = 253
   Insn 62(l0): point = 255
   Insn 61(l0): point = 257
   Insn 60(l0): point = 259
   Insn 52(l0): point = 262
   Insn 51(l0): point = 264
   Insn 50(l0): point = 266
   Insn 49(l0): point = 268
   Insn 48(l0): point = 270
   Insn 47(l0): point = 272
   Insn 46(l0): point = 274
   Insn 58(l0): point = 277
   Insn 57(l0): point = 279
   Insn 56(l0): point = 281
   Insn 211(l0): point = 284
   Insn 42(l0): point = 286
   Insn 41(l0): point = 288
   Insn 38(l0): point = 291
   Insn 37(l0): point = 293
   Insn 36(l0): point = 295
   Insn 35(l0): point = 297
   Insn 34(l0): point = 299
   Insn 33(l0): point = 301
   Insn 32(l0): point = 303
   Insn 31(l0): point = 305
   Insn 29(l0): point = 308
   Insn 28(l0): point = 310
   Insn 27(l0): point = 312
   Insn 26(l0): point = 314
   Insn 25(l0): point = 316
   Insn 16(l0): point = 319
   Insn 15(l0): point = 321
   Insn 14(l0): point = 323
   Insn 13(l0): point = 325
   Insn 12(l0): point = 327
   Insn 11(l0): point = 329
   Insn 10(l0): point = 331
   Insn 23(l0): point = 334
   Insn 22(l0): point = 336
   Insn 209(l0): point = 339
   Insn 6(l0): point = 341
   Insn 219(l0): point = 343
 a0(r82): [8..343]
 a1(r156): [10..11]
 a2(r107): [16..19]
 a3(r106): [20..21]
 a4(r155): [22..23]
 a5(r109): [29..30]
 a6(r108): [31..32]
 a7(r153): [33..34]
 a8(r154): [35..36]
 a9(r102): [35..50]
 a10(r105): [35..38]
 a11(r104): [39..40]
 a12(r151): [41..44]
 a13(r152): [41..42]
 a14(r103): [43..46]
 a15(r150): [47..48]
 a16(r149): [51..52]
 a17(r148): [68..69]
 a18(r101): [70..71]
 a19(r100): [72..73]
 a20(r147): [74..75]
 a21(r146): [86..87]
 a22(r99): [92..95]
 a23(r98): [96..97]
 a24(r145): [98..99]
 a25(r111): [105..106]
 a26(r110): [107..108]
 a27(r143): [109..110]
 a28(r144): [111..112]
 a29(r94): [111..126]
 a30(r97): [111..114]
 a31(r96): [115..116]
 a32(r141): [117..120]
 a33(r142): [117..118]
 a34(r95): [119..122]
 a35(r140): [123..124]
 a36(r139): [127..128]
 a37(r138): [144..145]
 a38(r93): [146..147]
 a39(r137): [148..149]
 a40(r92): [154..157]
 a41(r136): [154..155]
 a42(r135): [158..159]
 a43(r91): [162..165]
 a44(r134): [162..163]
 a45(r133): [166..167]
 a46(r132): [170..171]
 a47(r90): [170..173]
 a48(r131): [174..175]
 a49(r129): [178..181]
 a50(r130): [178..179]
 a51(r128): [184..185]
 a52(r89): [184..187]
 a53(r88): [188..189]
 a54(r127): [190..191]
 a55(r126): [201..202]
 a56(r125): [212..213]
 a57(r87): [222..227]
 a58(r124): [237..238]
 a59(r123): [248..249]
 a60(r86): [256..259]
 a61(r122): [280..281]
 a62(r121): [265..266]
 a63(r120): [269..270]
 a64(r119): [273..274]
 a65(r118): [287..288]
 a66(r117): [302..303]
 a67(r85): [311..312]
 a68(r84): [313..314]
 a69(r83): [315..316]
 a70(r116): [322..323]
 a71(r115): [324..325]
 a72(r114): [326..327]
 a73(r112): [326..331]
 a74(r113): [328..329]
Compressing live ranges: from 346 to 124 - 35%
Ranges after the compression:
 a0(r82): [0..123]
 a1(r156): [0..1]
 a2(r107): [2..3]
 a3(r106): [4..5]
 a4(r155): [6..7]
 a5(r109): [8..9]
 a6(r108): [10..11]
 a7(r153): [12..13]
 a8(r154): [14..15]
 a9(r102): [14..23]
 a10(r105): [14..15]
 a11(r104): [16..17]
 a12(r151): [18..21]
 a13(r152): [18..19]
 a14(r103): [20..21]
 a15(r150): [22..23]
 a16(r149): [24..25]
 a17(r148): [26..27]
 a18(r101): [28..29]
 a19(r100): [30..31]
 a20(r147): [32..33]
 a21(r146): [34..35]
 a22(r99): [36..37]
 a23(r98): [38..39]
 a24(r145): [40..41]
 a25(r111): [42..43]
 a26(r110): [44..45]
 a27(r143): [46..47]
 a28(r144): [48..49]
 a29(r94): [48..57]
 a30(r97): [48..49]
 a31(r96): [50..51]
 a32(r141): [52..55]
 a33(r142): [52..53]
 a34(r95): [54..55]
 a35(r140): [56..57]
 a36(r139): [58..59]
 a37(r138): [60..61]
 a38(r93): [62..63]
 a39(r137): [64..65]
 a40(r92): [66..67]
 a41(r136): [66..67]
 a42(r135): [68..69]
 a43(r91): [70..71]
 a44(r134): [70..71]
 a45(r133): [72..73]
 a46(r132): [74..75]
 a47(r90): [74..75]
 a48(r131): [76..77]
 a49(r129): [78..79]
 a50(r130): [78..79]
 a51(r128): [80..81]
 a52(r89): [80..81]
 a53(r88): [82..83]
 a54(r127): [84..85]
 a55(r126): [86..87]
 a56(r125): [88..89]
 a57(r87): [90..91]
 a58(r124): [92..93]
 a59(r123): [94..95]
 a60(r86): [96..97]
 a61(r122): [104..105]
 a62(r121): [98..99]
 a63(r120): [100..101]
 a64(r119): [102..103]
 a65(r118): [106..107]
 a66(r117): [108..109]
 a67(r85): [110..111]
 a68(r84): [112..113]
 a69(r83): [114..115]
 a70(r116): [116..117]
 a71(r115): [118..119]
 a72(r114): [120..121]
 a73(r112): [120..123]
 a74(r113): [122..123]
  pref0:a8(r154)<-hr0@1000
  pref1:a7(r153)<-hr0@1000
  pref2:a28(r144)<-hr0@1000
  pref3:a27(r143)<-hr0@1000
  pref4:a56(r125)<-hr0@1500
  pref5:a59(r123)<-hr0@1500
  pref6:a0(r82)<-hr3@1500
  regions=1, blocks=24, points=124
    allocnos=75 (big 0), copies=0, conflicts=0, ranges=75
Disposition:
    0:r82  l0     3   69:r83  l0     0   68:r84  l0     0   67:r85  l0     0
   60:r86  l0     0   57:r87  l0     0   53:r88  l0     0   52:r89  l0     1
   47:r90  l0     1   43:r91  l0     0   40:r92  l0     0   38:r93  l0     0
   29:r94  l0     2   34:r95  l0     1   31:r96  l0     0   30:r97  l0     1
   23:r98  l0     0   22:r99  l0     0   19:r100 l0     0   18:r101 l0     0
    9:r102 l0     2   14:r103 l0     1   11:r104 l0     0   10:r105 l0     1
    3:r106 l0     0    2:r107 l0     0    6:r108 l0     4    5:r109 l0     0
   26:r110 l0     4   25:r111 l0     0   73:r112 l0     1   74:r113 l0     0
   72:r114 l0     0   71:r115 l0     0   70:r116 l0     0   66:r117 l0     0
   65:r118 l0     0   64:r119 l0     0   63:r120 l0     0   62:r121 l0     0
   61:r122 l0     0   59:r123 l0     0   58:r124 l0     0   56:r125 l0     0
   55:r126 l0     0   54:r127 l0     0   51:r128 l0     0   49:r129 l0     0
   50:r130 l0     1   48:r131 l0     0   46:r132 l0     0   45:r133 l0     0
   44:r134 l0     1   42:r135 l0     0   41:r136 l0     1   39:r137 l0     0
   37:r138 l0     0   36:r139 l0     0   35:r140 l0     0   32:r141 l0     0
   33:r142 l0     1   27:r143 l0     0   28:r144 l0     0   24:r145 l0     0
   21:r146 l0     0   20:r147 l0     0   17:r148 l0     0   16:r149 l0     0
   15:r150 l0     0   12:r151 l0     0   13:r152 l0     1    7:r153 l0     0
    8:r154 l0     0    4:r155 l0     0    1:r156 l0     0
+++Costs: overall 9000, reg 9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


mount_root

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,2u} r1={9d} r2={9d} r3={7d,7u} r6={1d,23u} r7={27d,71u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,22u} r17={52d,9u} r18={8d} r19={1d,73u,4e} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,20u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 1016{711d,301u,4e} in 162{154 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 219 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 219 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 219 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 209 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":154:12 75 {*movsi_internal}
     (nil))
(jump_insn 209 6 210 2 (set (pc)
        (label_ref 17)) "fs/super.c":154:5 807 {jump}
     (nil)
 -> 17)
(barrier 210 209 19)
(code_label 19 210 9 3 50 (nil) [1 uses])
(note 9 19 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("file_table") [flags 0x40]  <var_decl 0x759b80d63bd0 file_table>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":155:31 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:SI 113)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/super.c":155:31 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 114)
                (ashift:SI (reg:SI 113)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":155:31 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 3 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg/f:SI 112)
                    (reg:SI 114)))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":155:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_DEAD (reg/f:SI 112)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 116)
                (plus:SI (reg:SI 115)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":155:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 3 (set (mem:HI (reg/f:SI 116) [2 file_table[i_26].f_count+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":155:31 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 16 15 17 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":154:31 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 17 16 18 4 49 (nil) [1 uses])
(note 18 17 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 18 23 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 63 [0x3f]))) "fs/super.c":154:19 11 {*cmpsi_1}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "fs/super.c":154:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 19)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:SI 83 [ ROOT_DEV.0_1 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x759b80d63b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":156:9 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:SI 84 [ ROOT_DEV.1_2 ])
        (reg:SI 83 [ ROOT_DEV.0_1 ])) "fs/super.c":156:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ ROOT_DEV.0_1 ])
        (nil)))
(insn 27 26 28 5 (parallel [
            (set (reg:SI 85 [ _3 ])
                (lshiftrt:SI (reg:SI 84 [ ROOT_DEV.1_2 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":156:9 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 84 [ ROOT_DEV.1_2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 85 [ _3 ])
            (const_int 2 [0x2]))) "fs/super.c":156:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (nil)))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/super.c":156:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":157:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 32 31 33 6 (set (reg/f:SI 117)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x759b7f97dc60 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":157:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x759b7f97dc60 *.LC0>)
        (nil)))
(insn 33 32 34 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 117)) "fs/super.c":157:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 34 33 35 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":157:9 75 {*movsi_internal}
     (nil))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x759b7f910900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":157:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 36 35 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":157:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 37 36 38 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":158:9 75 {*movsi_internal}
     (nil))
(call_insn 38 37 39 6 (call (mem:QI (symbol_ref:SI ("wait_for_keypress") [flags 0x41]  <function_decl 0x759b7f937e00 wait_for_keypress>) [0 wait_for_keypress S1 A8])
        (const_int 0 [0])) "fs/super.c":158:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(code_label 39 38 40 7 51 (nil) [1 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:SI 118)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":160:12 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
        (nil)))
(insn 42 41 211 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])
        (reg/f:SI 118)) "fs/super.c":160:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))
(jump_insn 211 42 212 7 (set (pc)
        (label_ref 53)) "fs/super.c":160:5 807 {jump}
     (nil)
 -> 53)
(barrier 212 211 55)
(code_label 55 212 45 8 53 (nil) [1 uses])
(note 45 55 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":161:18 75 {*movsi_internal}
     (nil))
(insn 47 46 48 8 (set (mem:HI (plus:SI (reg/f:SI 119)
                (const_int 84 [0x54])) [2 p_31->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":161:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))
(insn 48 47 49 8 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":162:19 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (set (mem:QI (plus:SI (reg/f:SI 120)
                (const_int 104 [0x68])) [0 p_31->s_lock+0 S1 A32])
        (const_int 0 [0])) "fs/super.c":162:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120)
        (nil)))
(insn 50 49 51 8 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":163:19 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (mem/f:SI (plus:SI (reg/f:SI 121)
                (const_int 100 [0x64])) [6 p_31->s_wait+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":163:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 121)
        (nil)))
(insn 52 51 53 8 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])
                    (const_int 108 [0x6c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":160:60 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 53 52 54 9 52 (nil) [1 uses])
(note 54 53 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 57 9 (set (reg:SI 122)
        (plus:SI (reg:SI 82)
            (const:SI (plus:SI (unspec:SI [
                            (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                        ] UNSPEC_GOTOFF)
                    (const_int 864 [0x360]))))) "fs/super.c":160:33 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("super_block") [flags 0x2]  <var_decl 0x759b80d63c60 super_block>)
                (const_int 864 [0x360])))
        (nil)))
(insn 57 56 58 9 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])
            (reg:SI 122))) "fs/super.c":160:33 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(jump_insn 58 57 59 9 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) "fs/super.c":160:33 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 55)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:SI 86 [ ROOT_DEV.2_4 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x759b80d63b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":165:15 75 {*movsi_internal}
     (nil))
(insn 61 60 62 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":165:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 62 61 63 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 86 [ ROOT_DEV.2_4 ])) "fs/super.c":165:15 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 86 [ ROOT_DEV.2_4 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 63 62 64 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("read_super") [flags 0x3]  <function_decl 0x759b7f945300 read_super>) [0 read_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":165:15 823 {*call_value}
     (nil)
    (nil))
(insn 64 63 65 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":165:15 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 65 64 66 10 (set (reg:SI 123)
        (reg:SI 0 ax)) "fs/super.c":165:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 66 65 67 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])
        (reg:SI 123)) "fs/super.c":165:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123)
        (nil)))
(insn 67 66 68 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":165:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 68 67 69 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "fs/super.c":165:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 76)
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":166:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 71 70 72 11 (set (reg/f:SI 124)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x759b7f97dcf0 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":166:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x759b7f97dcf0 *.LC1>)
        (nil)))
(insn 72 71 73 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 124)) "fs/super.c":166:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 124)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 73 72 74 11 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":166:9 75 {*movsi_internal}
     (nil))
(call_insn 74 73 75 11 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x759b7f910b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/super.c":166:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 75 74 76 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":166:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 76 75 77 12 54 (nil) [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 12 (set (reg:SI 87 [ ROOT_DEV.3_5 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x759b80d63b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":167:16 75 {*movsi_internal}
     (nil))
(insn 79 78 80 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":167:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 80 79 81 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (const_int 1 [0x1])) "fs/super.c":167:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 81 80 82 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 87 [ ROOT_DEV.3_5 ])) "fs/super.c":167:16 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 87 [ ROOT_DEV.3_5 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 82 81 83 12 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":167:16 75 {*movsi_internal}
     (nil))
(call_insn 83 82 84 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("iget") [flags 0x41]  <function_decl 0x759b7f90e900 iget>) [0 iget S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":167:16 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 84 83 85 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":167:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 85 84 86 12 (set (reg:SI 125)
        (reg:SI 0 ax)) "fs/super.c":167:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 86 85 87 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 mi+0 S4 A32])
        (reg:SI 125)) "fs/super.c":167:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 87 86 88 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [5 mi+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":167:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 88 87 89 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "fs/super.c":167:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 96)
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":168:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 91 90 92 13 (set (reg/f:SI 126)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x759b7f97dd80 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":168:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x759b7f97dd80 *.LC2>)
        (nil)))
(insn 92 91 93 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 126)) "fs/super.c":168:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 126)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 93 92 94 13 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":168:9 75 {*movsi_internal}
     (nil))
(call_insn 94 93 95 13 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x759b7f910b00 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/super.c":168:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 95 94 96 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":168:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 96 95 97 14 55 (nil) [1 uses])
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 mi+0 S4 A32])) "fs/super.c":169:17 75 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (reg/f:SI 127)
                (const_int 48 [0x30])) [2 mi_46->i_count+0 S2 A32])) "fs/super.c":169:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 100 99 101 14 (parallel [
            (set (reg:HI 89 [ _7 ])
                (plus:HI (reg:HI 88 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":169:17 212 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 101 100 102 14 (set (reg/f:SI 128)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 mi+0 S4 A32])) "fs/super.c":169:17 75 {*movsi_internal}
     (nil))
(insn 102 101 103 14 (set (mem:HI (plus:SI (reg/f:SI 128)
                (const_int 48 [0x30])) [2 mi_46->i_count+0 S2 A32])
        (reg:HI 89 [ _7 ])) "fs/super.c":169:17 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 128)
        (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
            (nil))))
(insn 103 102 104 14 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":170:29 75 {*movsi_internal}
     (nil))
(insn 104 103 105 14 (set (reg/f:SI 130)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 mi+0 S4 A32])) "fs/super.c":170:29 75 {*movsi_internal}
     (nil))
(insn 105 104 106 14 (set (mem/f:SI (plus:SI (reg/f:SI 129)
                (const_int 92 [0x5c])) [5 p_43->s_imount+0 S4 A32])
        (reg/f:SI 130)) "fs/super.c":170:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (expr_list:REG_DEAD (reg/f:SI 129)
            (nil))))
(insn 106 105 107 14 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":170:18 75 {*movsi_internal}
     (nil))
(insn 107 106 108 14 (set (reg/f:SI 90 [ _8 ])
        (mem/f:SI (plus:SI (reg/f:SI 131)
                (const_int 92 [0x5c])) [5 p_43->s_imount+0 S4 A32])) "fs/super.c":170:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 131)
        (nil)))
(insn 108 107 109 14 (set (reg/f:SI 132)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":170:15 75 {*movsi_internal}
     (nil))
(insn 109 108 110 14 (set (mem/f:SI (plus:SI (reg/f:SI 132)
                (const_int 88 [0x58])) [5 p_43->s_isup+0 S4 A32])
        (reg/f:SI 90 [ _8 ])) "fs/super.c":170:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 132)
        (expr_list:REG_DEAD (reg/f:SI 90 [ _8 ])
            (nil))))
(insn 110 109 111 14 (set (reg/f:SI 133)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x759b7f92f120 current>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":171:12 75 {*movsi_internal}
     (nil))
(insn 111 110 112 14 (set (reg/f:SI 91 [ current.4_9 ])
        (mem/f/c:SI (reg/f:SI 133) [6 current+0 S4 A32])) "fs/super.c":171:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 112 111 113 14 (set (reg/f:SI 134)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 mi+0 S4 A32])) "fs/super.c":171:18 75 {*movsi_internal}
     (nil))
(insn 113 112 114 14 (set (mem/f:SI (plus:SI (reg/f:SI 91 [ current.4_9 ])
                (const_int 624 [0x270])) [5 current.4_9->pwd+0 S4 A32])
        (reg/f:SI 134)) "fs/super.c":171:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg/f:SI 91 [ current.4_9 ])
            (nil))))
(insn 114 113 115 14 (set (reg/f:SI 135)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x759b7f92f120 current>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":172:12 75 {*movsi_internal}
     (nil))
(insn 115 114 116 14 (set (reg/f:SI 92 [ current.5_10 ])
        (mem/f/c:SI (reg/f:SI 135) [6 current+0 S4 A32])) "fs/super.c":172:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))
(insn 116 115 117 14 (set (reg/f:SI 136)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 mi+0 S4 A32])) "fs/super.c":172:19 75 {*movsi_internal}
     (nil))
(insn 117 116 118 14 (set (mem/f:SI (plus:SI (reg/f:SI 92 [ current.5_10 ])
                (const_int 628 [0x274])) [5 current.5_10->root+0 S4 A32])
        (reg/f:SI 136)) "fs/super.c":172:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 92 [ current.5_10 ])
            (nil))))
(insn 118 117 119 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":173:10 75 {*movsi_internal}
     (nil))
(insn 119 118 120 14 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":174:10 75 {*movsi_internal}
     (nil))
(insn 120 119 121 14 (set (reg:HI 93 [ _11 ])
        (mem:HI (plus:SI (reg/f:SI 137)
                (const_int 2 [0x2])) [2 p_43->s_nzones+0 S2 A16])) "fs/super.c":174:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 137)
        (nil)))
(insn 121 120 122 14 (set (reg:SI 138)
        (zero_extend:SI (reg:HI 93 [ _11 ]))) "fs/super.c":174:7 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
        (nil)))
(insn 122 121 213 14 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 138)) "fs/super.c":174:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
(jump_insn 213 122 214 14 (set (pc)
        (label_ref 142)) "fs/super.c":175:11 807 {jump}
     (nil)
 -> 142)
(barrier 214 213 145)
(code_label 145 214 125 15 57 (nil) [1 uses])
(note 125 145 126 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 15 (set (reg:SI 139)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 127 126 128 15 (parallel [
            (set (reg:SI 94 [ _12 ])
                (and:SI (reg:SI 139)
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 8191 [0x1fff]))
                (nil)))))
(insn 128 127 129 15 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 129 128 130 15 (parallel [
            (set (reg:SI 95 [ _13 ])
                (ashiftrt:SI (reg:SI 140)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 130 129 131 15 (set (reg/f:SI 141)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 131 130 132 15 (parallel [
            (set (reg:SI 142)
                (plus:SI (reg:SI 95 [ _13 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 133 15 (set (reg/f:SI 96 [ _14 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 142)
                        (const_int 4 [0x4]))
                    (reg/f:SI 141))
                (const_int 4 [0x4])) [4 p_43->s_zmap[_13]+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/f:SI 141)
            (nil))))
(insn 133 132 135 15 (set (reg/f:SI 97 [ _15 ])
        (mem/f:SI (reg/f:SI 96 [ _14 ]) [8 _14->b_data+0 S4 A32])) "fs/super.c":176:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (nil)))
(insn 135 133 136 15 (set (reg:SI 144)
        (const_int 0 [0])) "fs/super.c":176:14 75 {*movsi_internal}
     (nil))
(insn 136 135 134 15 (parallel [
            (set (reg:SI 143 [ __res ])
                (asm_operands:SI ("bt %2, %3; setb %%al") ("=a") 0 [
                        (reg:SI 144)
                        (reg:SI 94 [ _12 ])
                        (mem:QI (reg/f:SI 97 [ _15 ]) [0 *_15+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("a") fs/super.c:176)
                        (asm_input:SI ("r") fs/super.c:176)
                        (asm_input:QI ("m") fs/super.c:176)
                    ]
                     [] fs/super.c:176))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":176:14 -1
     (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
            (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 134 136 137 15 (set (reg/v:SI 110 [ __res ])
        (reg:SI 143 [ __res ])) "fs/super.c":176:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ __res ])
        (nil)))
(insn 137 134 138 15 (set (reg:SI 111 [ _65 ])
        (reg/v:SI 110 [ __res ])) "fs/super.c":176:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 110 [ __res ])
        (nil)))
(insn 138 137 139 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ _65 ])
            (const_int 0 [0]))) "fs/super.c":176:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 111 [ _65 ])
        (nil)))
(jump_insn 139 138 140 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "fs/super.c":176:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":177:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 142 141 143 17 56 (nil) [2 uses])
(note 143 142 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 148 17 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":175:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 148 144 149 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":175:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 149 148 150 17 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "fs/super.c":175:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 145)
(note 150 149 151 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 18 (set (reg/f:SI 145)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":178:44 75 {*movsi_internal}
     (nil))
(insn 152 151 153 18 (set (reg:HI 98 [ _16 ])
        (mem:HI (plus:SI (reg/f:SI 145)
                (const_int 2 [0x2])) [2 p_43->s_nzones+0 S2 A16])) "fs/super.c":178:44 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))
(insn 153 152 154 18 (set (reg:SI 99 [ _17 ])
        (zero_extend:SI (reg:HI 98 [ _16 ]))) "fs/super.c":178:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 98 [ _16 ])
        (nil)))
(insn 154 153 155 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":178:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 155 154 156 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 99 [ _17 ])) "fs/super.c":178:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 99 [ _17 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 156 155 157 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])) "fs/super.c":178:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 157 156 158 18 (set (reg/f:SI 146)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x759b7f97dea0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":178:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x759b7f97dea0 *.LC3>)
        (nil)))
(insn 158 157 159 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 146)) "fs/super.c":178:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 159 158 160 18 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":178:5 75 {*movsi_internal}
     (nil))
(call_insn 160 159 161 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x759b7f910900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":178:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 161 160 162 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":178:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 162 161 163 18 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":179:10 75 {*movsi_internal}
     (nil))
(insn 163 162 164 18 (set (reg/f:SI 147)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":180:10 75 {*movsi_internal}
     (nil))
(insn 164 163 165 18 (set (reg:HI 100 [ _18 ])
        (mem:HI (reg/f:SI 147) [2 p_43->s_ninodes+0 S2 A32])) "fs/super.c":180:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))
(insn 165 164 166 18 (set (reg:SI 101 [ _19 ])
        (zero_extend:SI (reg:HI 100 [ _18 ]))) "fs/super.c":180:10 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 100 [ _18 ])
        (nil)))
(insn 166 165 167 18 (parallel [
            (set (reg:SI 148)
                (plus:SI (reg:SI 101 [ _19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":180:7 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ _19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 215 18 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (reg:SI 148)) "fs/super.c":180:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(jump_insn 215 167 216 18 (set (pc)
        (label_ref 187)) "fs/super.c":181:11 807 {jump}
     (nil)
 -> 187)
(barrier 216 215 190)
(code_label 190 216 170 19 59 (nil) [1 uses])
(note 170 190 171 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 19 (set (reg:SI 149)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 172 171 173 19 (parallel [
            (set (reg:SI 102 [ _20 ])
                (and:SI (reg:SI 149)
                    (const_int 8191 [0x1fff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 8191 [0x1fff]))
                (nil)))))
(insn 173 172 174 19 (set (reg:SI 150)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 174 173 175 19 (parallel [
            (set (reg:SI 103 [ _21 ])
                (ashiftrt:SI (reg:SI 150)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 13 [0xd]))
                (nil)))))
(insn 175 174 176 19 (set (reg/f:SI 151)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 176 175 177 19 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg:SI 103 [ _21 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ _21 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 19 (set (reg/f:SI 104 [ _22 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 152)
                        (const_int 4 [0x4]))
                    (reg/f:SI 151))
                (const_int 4 [0x4])) [4 p_43->s_imap[_21]+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/f:SI 151)
            (nil))))
(insn 178 177 180 19 (set (reg/f:SI 105 [ _23 ])
        (mem/f:SI (reg/f:SI 104 [ _22 ]) [8 _22->b_data+0 S4 A32])) "fs/super.c":182:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104 [ _22 ])
        (nil)))
(insn 180 178 181 19 (set (reg:SI 154)
        (const_int 0 [0])) "fs/super.c":182:14 75 {*movsi_internal}
     (nil))
(insn 181 180 179 19 (parallel [
            (set (reg:SI 153 [ __res ])
                (asm_operands:SI ("bt %2, %3; setb %%al") ("=a") 0 [
                        (reg:SI 154)
                        (reg:SI 102 [ _20 ])
                        (mem:QI (reg/f:SI 105 [ _23 ]) [0 *_23+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("a") fs/super.c:182)
                        (asm_input:SI ("r") fs/super.c:182)
                        (asm_input:QI ("m") fs/super.c:182)
                    ]
                     [] fs/super.c:182))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":182:14 -1
     (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg/f:SI 105 [ _23 ])
            (expr_list:REG_DEAD (reg:SI 102 [ _20 ])
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 179 181 182 19 (set (reg/v:SI 108 [ __res ])
        (reg:SI 153 [ __res ])) "fs/super.c":182:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 153 [ __res ])
        (nil)))
(insn 182 179 183 19 (set (reg:SI 109 [ _62 ])
        (reg/v:SI 108 [ __res ])) "fs/super.c":182:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 108 [ __res ])
        (nil)))
(insn 183 182 184 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ _62 ])
            (const_int 0 [0]))) "fs/super.c":182:12 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 109 [ _62 ])
        (nil)))
(jump_insn 184 183 185 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) "fs/super.c":182:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 187)
(note 185 184 186 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":183:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 187 186 188 21 58 (nil) [2 uses])
(note 188 187 189 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 193 21 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":181:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 193 189 194 21 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":181:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 194 193 195 21 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) "fs/super.c":181:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 190)
(note 195 194 196 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 22 (set (reg/f:SI 155)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 p+0 S4 A32])) "fs/super.c":184:44 75 {*movsi_internal}
     (nil))
(insn 197 196 198 22 (set (reg:HI 106 [ _24 ])
        (mem:HI (reg/f:SI 155) [2 p_43->s_ninodes+0 S2 A32])) "fs/super.c":184:44 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 155)
        (nil)))
(insn 198 197 199 22 (set (reg:SI 107 [ _25 ])
        (zero_extend:SI (reg:HI 106 [ _24 ]))) "fs/super.c":184:5 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 106 [ _24 ])
        (nil)))
(insn 199 198 200 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":184:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 200 199 201 22 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (reg:SI 107 [ _25 ])) "fs/super.c":184:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 107 [ _25 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 201 200 202 22 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 free+0 S4 A32])) "fs/super.c":184:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 202 201 203 22 (set (reg/f:SI 156)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x759b7f97d5a0 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":184:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x759b7f97d5a0 *.LC4>)
        (nil)))
(insn 203 202 204 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 156)) "fs/super.c":184:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 204 203 205 22 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":184:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 205 204 206 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x759b7f910900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":184:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 206 205 217 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":184:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 217 206 218 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 0 23 (const_int 0 [0]) "fs/super.c":185:1 843 {nop}
     (nil))

;; Function put_super (put_super, funcdef_no=7, decl_uid=1436, cgraph_uid=8, symbol_order=9)

scanning new insn with uid = 118.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 16 n_edges 20 count 18 (  1.1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 15 14
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;; 2 succs { 3 4 }
;; 3 succs { 14 }
;; 4 succs { 15 5 }
;; 5 succs { 6 7 }
;; 6 succs { 14 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 11 13 }
;; 13 succs { 14 }
;; 15 succs { 14 }
;; 14 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 CLOBBERED_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 TLS_GOTBASE_REGS:8000 GENERAL_REGS:8000 MEM:48000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a14(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 117(l0): point = 1
   Insn 113(l0): point = 4
   Insn 100(l0): point = 6
   Insn 99(l0): point = 8
   Insn 98(l0): point = 10
   Insn 97(l0): point = 12
   Insn 88(l0): point = 15
   Insn 87(l0): point = 17
   Insn 86(l0): point = 19
   Insn 85(l0): point = 21
   Insn 84(l0): point = 23
   Insn 83(l0): point = 25
   Insn 82(l0): point = 27
   Insn 81(l0): point = 29
   Insn 80(l0): point = 31
   Insn 79(l0): point = 33
   Insn 95(l0): point = 36
   Insn 94(l0): point = 38
   Insn 111(l0): point = 41
   Insn 75(l0): point = 43
   Insn 66(l0): point = 46
   Insn 65(l0): point = 48
   Insn 64(l0): point = 50
   Insn 63(l0): point = 52
   Insn 62(l0): point = 54
   Insn 61(l0): point = 56
   Insn 60(l0): point = 58
   Insn 59(l0): point = 60
   Insn 58(l0): point = 62
   Insn 57(l0): point = 64
   Insn 73(l0): point = 67
   Insn 72(l0): point = 69
   Insn 109(l0): point = 72
   Insn 53(l0): point = 74
   Insn 52(l0): point = 76
   Insn 51(l0): point = 78
   Insn 50(l0): point = 80
   Insn 49(l0): point = 82
   Insn 48(l0): point = 84
   Insn 47(l0): point = 86
   Insn 107(l0): point = 89
   Insn 42(l0): point = 91
   Insn 41(l0): point = 93
   Insn 40(l0): point = 95
   Insn 39(l0): point = 97
   Insn 38(l0): point = 99
   Insn 37(l0): point = 101
   Insn 35(l0): point = 104
   Insn 34(l0): point = 106
   Insn 33(l0): point = 108
   Insn 32(l0): point = 110
   Insn 26(l0): point = 113
   Insn 25(l0): point = 115
   Insn 24(l0): point = 117
   Insn 23(l0): point = 119
   Insn 22(l0): point = 121
   Insn 21(l0): point = 123
   Insn 20(l0): point = 125
   Insn 19(l0): point = 127
   Insn 105(l0): point = 130
   Insn 14(l0): point = 132
   Insn 13(l0): point = 134
   Insn 12(l0): point = 136
   Insn 11(l0): point = 138
   Insn 10(l0): point = 140
   Insn 9(l0): point = 142
   Insn 7(l0): point = 145
   Insn 6(l0): point = 147
   Insn 5(l0): point = 149
   Insn 118(l0): point = 151
 a0(r82): [137..151] [96..129] [15..88]
 a1(r86): [24..27]
 a2(r95): [28..33]
 a3(r96): [28..29]
 a4(r97): [30..31]
 a5(r85): [55..58]
 a6(r92): [59..64]
 a7(r93): [59..60]
 a8(r94): [61..62]
 a9(r91): [77..78]
 a10(r90): [98..99]
 a11(r84): [107..108]
 a12(r89): [109..110]
 a13(r88): [118..119]
 a14(r87): [139..140]
 a15(r83): [148..149]
Compressing live ranges: from 154 to 26 - 16%
Ranges after the compression:
 a0(r82): [0..25]
 a1(r86): [0..1]
 a2(r95): [2..5]
 a3(r96): [2..3]
 a4(r97): [4..5]
 a5(r85): [6..7]
 a6(r92): [8..11]
 a7(r93): [8..9]
 a8(r94): [10..11]
 a9(r91): [12..13]
 a10(r90): [14..15]
 a11(r84): [16..17]
 a12(r89): [18..19]
 a13(r88): [20..21]
 a14(r87): [22..23]
 a15(r83): [24..25]
  pref0:a13(r88)<-hr0@1500
  pref1:a0(r82)<-hr3@3000
  regions=1, blocks=16, points=26
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
    0:r82  l0     3   15:r83  l0     0   11:r84  l0     0    5:r85  l0     0
    1:r86  l0     0   14:r87  l0     0   13:r88  l0     0   12:r89  l0     0
   10:r90  l0     0    9:r91  l0     0    6:r92  l0     0    7:r93  l0     1
    8:r94  l0     1    2:r95  l0     0    3:r96  l0     1    4:r97  l0     1
+++Costs: overall 1000, reg 1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_super

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,1u} r1={8d} r2={8d} r3={4d,4u} r6={1d,15u} r7={22d,57u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,16u} r17={31d,5u} r18={7d} r19={1d,33u,2e} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,7u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 710{555d,153u,2e} in 70{63 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 118 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 118 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 118 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 83 [ ROOT_DEV.6_1 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x759b80d63b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":193:13 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])
            (reg:SI 83 [ ROOT_DEV.6_1 ]))) "fs/super.c":193:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ ROOT_DEV.6_1 ])
        (nil)))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/super.c":193:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 17)
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":194:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 10 9 11 3 (set (reg/f:SI 87)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x759b7f97dbd0 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":194:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x759b7f97dbd0 *.LC5>)
        (nil)))
(insn 11 10 12 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 87)) "fs/super.c":194:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 12 11 13 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":194:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 13 12 14 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x759b7f910900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":194:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 14 13 105 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":194:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 105 14 106 3 (set (pc)
        (label_ref 103)) "fs/super.c":195:9 807 {jump}
     (nil)
 -> 103)
(barrier 106 105 17)
(code_label 17 106 18 4 61 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":197:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 20 19 21 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [9 dev+0 S4 A32])) "fs/super.c":197:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 21 20 22 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x3]  <function_decl 0x759b7f90e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":197:16 823 {*call_value}
     (nil)
    (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":197:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 23 22 24 4 (set (reg:SI 88)
        (reg:SI 0 ax)) "fs/super.c":197:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 24 23 25 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])
        (reg:SI 88)) "fs/super.c":197:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":197:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 31 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 116)
            (pc))) "fs/super.c":197:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 116)
(note 31 26 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:SI 89)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])) "fs/super.c":199:11 75 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg/f:SI 84 [ _2 ])
        (mem/f:SI (plus:SI (reg/f:SI 89)
                (const_int 92 [0x5c])) [5 sb_13->s_imount+0 S4 A32])) "fs/super.c":199:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (nil)))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 84 [ _2 ])
            (const_int 0 [0]))) "fs/super.c":199:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 84 [ _2 ])
        (nil)))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "fs/super.c":199:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":200:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 38 37 39 6 (set (reg/f:SI 90)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x759b7f97dab0 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":200:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x759b7f97dab0 *.LC6>)
        (nil)))
(insn 39 38 40 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 90)) "fs/super.c":200:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 40 39 41 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":200:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 41 40 42 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x759b7f910900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":200:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 42 41 107 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":200:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 107 42 108 6 (set (pc)
        (label_ref 103)) "fs/super.c":201:9 807 {jump}
     (nil)
 -> 103)
(barrier 108 107 45)
(code_label 45 108 46 7 64 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":203:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 48 47 49 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])) "fs/super.c":203:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 49 48 50 7 (call (mem:QI (symbol_ref:SI ("lock_super") [flags 0x3]  <function_decl 0x759b7f937d00 lock_super>) [0 lock_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":203:5 812 {*call}
     (nil)
    (nil))
(insn 50 49 51 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":203:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 51 50 52 7 (set (reg/f:SI 91)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])) "fs/super.c":204:15 75 {*movsi_internal}
     (nil))
(insn 52 51 53 7 (set (mem:HI (plus:SI (reg/f:SI 91)
                (const_int 84 [0x54])) [2 sb_13->s_dev+0 S2 A32])
        (const_int 0 [0])) "fs/super.c":204:15 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 53 52 109 7 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":205:12 75 {*movsi_internal}
     (nil))
(jump_insn 109 53 110 7 (set (pc)
        (label_ref 67)) "fs/super.c":205:5 807 {jump}
     (nil)
 -> 67)
(barrier 110 109 69)
(code_label 69 110 56 8 66 (nil) [1 uses])
(note 56 69 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 8 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])) "fs/super.c":206:9 75 {*movsi_internal}
     (nil))
(insn 58 57 59 8 (set (reg:SI 94)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/super.c":206:9 75 {*movsi_internal}
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 94)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":206:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 60 59 61 8 (set (reg/f:SI 85 [ _3 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 93)
                        (const_int 4 [0x4]))
                    (reg/f:SI 92))
                (const_int 4 [0x4])) [4 sb_13->s_imap[i_5]+0 S4 A32])) "fs/super.c":206:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_DEAD (reg/f:SI 92)
            (nil))))
(insn 61 60 62 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":206:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 62 61 63 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 85 [ _3 ])) "fs/super.c":206:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 63 62 64 8 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":206:9 75 {*movsi_internal}
     (nil))
(call_insn 64 63 65 8 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x759b7f90e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":206:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 65 64 66 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":206:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 66 65 67 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":205:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 67 66 68 9 65 (nil) [1 uses])
(note 68 67 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 68 73 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":205:19 11 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/super.c":205:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 69)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 111 10 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":207:12 75 {*movsi_internal}
     (nil))
(jump_insn 111 75 112 10 (set (pc)
        (label_ref 89)) "fs/super.c":207:5 807 {jump}
     (nil)
 -> 89)
(barrier 112 111 91)
(code_label 91 112 78 11 68 (nil) [1 uses])
(note 78 91 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 11 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])) "fs/super.c":208:9 75 {*movsi_internal}
     (nil))
(insn 80 79 81 11 (set (reg:SI 97)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])) "fs/super.c":208:9 75 {*movsi_internal}
     (nil))
(insn 81 80 82 11 (parallel [
            (set (reg:SI 96)
                (plus:SI (reg:SI 97)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":208:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 82 81 83 11 (set (reg/f:SI 86 [ _4 ])
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 96)
                        (const_int 4 [0x4]))
                    (reg/f:SI 95))
                (const_int 4 [0x4])) [4 sb_13->s_zmap[i_6]+0 S4 A32])) "fs/super.c":208:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (expr_list:REG_DEAD (reg/f:SI 95)
            (nil))))
(insn 83 82 84 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":208:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 84 83 85 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [4  S4 A32])
        (reg/f:SI 86 [ _4 ])) "fs/super.c":208:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 86 [ _4 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 85 84 86 11 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":208:9 75 {*movsi_internal}
     (nil))
(call_insn 86 85 87 11 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x759b7f90e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/super.c":208:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 87 86 88 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":208:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 88 87 89 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":207:35 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 89 88 90 12 67 (nil) [1 uses])
(note 90 89 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 94 90 95 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [9 i+0 S4 A32])
            (const_int 7 [0x7]))) "fs/super.c":207:19 11 {*cmpsi_1}
     (nil))
(jump_insn 95 94 96 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) "fs/super.c":207:19 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 91)
(note 96 95 97 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":209:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 98 97 99 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [19 sb+0 S4 A32])) "fs/super.c":209:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 99 98 100 13 (call (mem:QI (symbol_ref:SI ("free_super") [flags 0x3]  <function_decl 0x759b7f945100 free_super>) [0 free_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":209:5 812 {*call}
     (nil)
    (nil))
(insn 100 99 113 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":209:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 113 100 114 13 (set (pc)
        (label_ref 103)) "fs/super.c":210:5 807 {jump}
     (nil)
 -> 103)
(barrier 114 113 116)
(code_label 116 114 115 15 69 (nil) [1 uses])
(note 115 116 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 115 103 15 (const_int 0 [0]) "fs/super.c":198:9 843 {nop}
     (nil))
(code_label 103 117 104 14 60 (nil) [3 uses])
(note 104 103 0 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

;; Function sys_mount (sys_mount, funcdef_no=8, decl_uid=1451, cgraph_uid=9, symbol_order=10)

scanning new insn with uid = 181.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 21 n_edges 29 count 21 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 4 }
;; 3 succs { 20 }
;; 4 succs { 5 6 }
;; 5 succs { 20 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 20 }
;; 11 succs { 12 13 }
;; 12 succs { 20 }
;; 13 succs { 14 15 }
;; 14 succs { 20 }
;; 15 succs { 16 17 }
;; 16 succs { 20 }
;; 17 succs { 18 19 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r93,l0) best Q_REGS, allocno Q_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:14000
  a2(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r82,l0) costs: AREG:18000 DREG:18000 CREG:18000 BREG:18000 SIREG:18000 DIREG:18000 AD_REGS:18000 CLOBBERED_REGS:18000 Q_REGS:18000 NON_Q_REGS:18000 TLS_GOTBASE_REGS:18000 GENERAL_REGS:18000 MEM:60000
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a8(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a12(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a13(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a14(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a19(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a20(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a21(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a22(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a23(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a24(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a27(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 163(l0): point = 0
   Insn 162(l0): point = 2
   Insn 158(l0): point = 4
   Insn 155(l0): point = 7
   Insn 154(l0): point = 9
   Insn 153(l0): point = 11
   Insn 152(l0): point = 13
   Insn 151(l0): point = 15
   Insn 150(l0): point = 17
   Insn 149(l0): point = 19
   Insn 148(l0): point = 21
   Insn 179(l0): point = 24
   Insn 143(l0): point = 26
   Insn 142(l0): point = 28
   Insn 141(l0): point = 30
   Insn 140(l0): point = 32
   Insn 139(l0): point = 34
   Insn 138(l0): point = 36
   Insn 136(l0): point = 39
   Insn 135(l0): point = 41
   Insn 134(l0): point = 43
   Insn 133(l0): point = 45
   Insn 177(l0): point = 48
   Insn 128(l0): point = 50
   Insn 127(l0): point = 52
   Insn 126(l0): point = 54
   Insn 125(l0): point = 56
   Insn 124(l0): point = 58
   Insn 123(l0): point = 60
   Insn 121(l0): point = 63
   Insn 120(l0): point = 65
   Insn 119(l0): point = 67
   Insn 118(l0): point = 69
   Insn 175(l0): point = 72
   Insn 113(l0): point = 74
   Insn 112(l0): point = 76
   Insn 111(l0): point = 78
   Insn 110(l0): point = 80
   Insn 109(l0): point = 82
   Insn 108(l0): point = 84
   Insn 106(l0): point = 87
   Insn 105(l0): point = 89
   Insn 104(l0): point = 91
   Insn 103(l0): point = 93
   Insn 102(l0): point = 95
   Insn 101(l0): point = 97
   Insn 100(l0): point = 99
   Insn 99(l0): point = 101
   Insn 173(l0): point = 104
   Insn 94(l0): point = 106
   Insn 93(l0): point = 108
   Insn 92(l0): point = 110
   Insn 91(l0): point = 112
   Insn 90(l0): point = 114
   Insn 89(l0): point = 116
   Insn 87(l0): point = 119
   Insn 86(l0): point = 121
   Insn 85(l0): point = 123
   Insn 84(l0): point = 125
   Insn 83(l0): point = 127
   Insn 82(l0): point = 129
   Insn 171(l0): point = 132
   Insn 77(l0): point = 134
   Insn 76(l0): point = 136
   Insn 75(l0): point = 138
   Insn 74(l0): point = 140
   Insn 73(l0): point = 142
   Insn 72(l0): point = 144
   Insn 69(l0): point = 147
   Insn 68(l0): point = 149
   Insn 67(l0): point = 151
   Insn 66(l0): point = 153
   Insn 64(l0): point = 156
   Insn 63(l0): point = 158
   Insn 62(l0): point = 160
   Insn 61(l0): point = 162
   Insn 169(l0): point = 165
   Insn 56(l0): point = 167
   Insn 54(l0): point = 170
   Insn 53(l0): point = 172
   Insn 52(l0): point = 174
   Insn 51(l0): point = 176
   Insn 50(l0): point = 178
   Insn 49(l0): point = 180
   Insn 48(l0): point = 182
   Insn 47(l0): point = 184
   Insn 46(l0): point = 186
   Insn 45(l0): point = 188
   Insn 44(l0): point = 190
   Insn 43(l0): point = 192
   Insn 42(l0): point = 194
   Insn 41(l0): point = 196
   Insn 167(l0): point = 199
   Insn 36(l0): point = 201
   Insn 35(l0): point = 203
   Insn 34(l0): point = 205
   Insn 33(l0): point = 207
   Insn 32(l0): point = 209
   Insn 31(l0): point = 211
   Insn 29(l0): point = 214
   Insn 28(l0): point = 216
   Insn 27(l0): point = 218
   Insn 26(l0): point = 220
   Insn 25(l0): point = 222
   Insn 24(l0): point = 224
   Insn 23(l0): point = 226
   Insn 22(l0): point = 228
   Insn 21(l0): point = 230
   Insn 20(l0): point = 232
   Insn 165(l0): point = 235
   Insn 15(l0): point = 237
   Insn 13(l0): point = 240
   Insn 12(l0): point = 242
   Insn 11(l0): point = 244
   Insn 10(l0): point = 246
   Insn 9(l0): point = 248
   Insn 8(l0): point = 250
   Insn 7(l0): point = 252
   Insn 6(l0): point = 254
   Insn 5(l0): point = 256
   Insn 181(l0): point = 258
 a0(r95): [3..4]
 a1(r94): [235..237] [199..201] [165..167] [132..134] [104..106] [72..74] [48..50] [24..26] [5..7]
 a2(r110): [10..11]
 a3(r109): [14..15]
 a4(r107): [18..21]
 a5(r108): [18..19]
 a6(r82): [240..258] [208..234] [170..198] [141..164] [113..131] [81..103] [57..71] [33..47]
 a7(r93): [42..43]
 a8(r106): [44..45]
 a9(r92): [66..67]
 a10(r105): [68..69]
 a11(r104): [92..93]
 a12(r91): [122..123]
 a13(r90): [124..125]
 a14(r89): [126..127]
 a15(r103): [128..129]
 a16(r88): [150..151]
 a17(r102): [152..153]
 a18(r87): [159..160]
 a19(r101): [161..162]
 a20(r100): [175..176]
 a21(r86): [217..218]
 a22(r85): [219..220]
 a23(r84): [221..222]
 a24(r99): [223..224]
 a25(r98): [227..228]
 a26(r83): [229..230]
 a27(r97): [231..232]
 a28(r96): [245..246]
Compressing live ranges: from 261 to 70 - 26%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r94): [66..67] [50..51] [46..47] [36..37] [26..27] [22..23] [16..17] [10..11] [2..3]
 a2(r110): [4..5]
 a3(r109): [6..7]
 a4(r107): [8..9]
 a5(r108): [8..9]
 a6(r82): [68..69] [52..65] [48..49] [38..45] [28..35] [24..25] [18..21] [12..15]
 a7(r93): [12..13]
 a8(r106): [14..15]
 a9(r92): [18..19]
 a10(r105): [20..21]
 a11(r104): [24..25]
 a12(r91): [28..29]
 a13(r90): [30..31]
 a14(r89): [32..33]
 a15(r103): [34..35]
 a16(r88): [38..39]
 a17(r102): [40..41]
 a18(r87): [42..43]
 a19(r101): [44..45]
 a20(r100): [48..49]
 a21(r86): [52..53]
 a22(r85): [54..55]
 a23(r84): [56..57]
 a24(r99): [58..59]
 a25(r98): [60..61]
 a26(r83): [62..63]
 a27(r97): [64..65]
 a28(r96): [68..69]
  pref0:a11(r104)<-hr0@1500
  pref1:a20(r100)<-hr0@1500
  pref2:a28(r96)<-hr0@1500
  pref3:a0(r95)<-hr0@1500
  pref4:a6(r82)<-hr3@9000
  regions=1, blocks=21, points=70
    allocnos=29 (big 0), copies=0, conflicts=0, ranges=44
Disposition:
    6:r82  l0     3   26:r83  l0     0   23:r84  l0     0   22:r85  l0     0
   21:r86  l0     0   18:r87  l0     0   16:r88  l0     0   14:r89  l0     0
   13:r90  l0     0   12:r91  l0     0    9:r92  l0     0    7:r93  l0     0
    1:r94  l0     0    0:r95  l0     0   28:r96  l0     0   27:r97  l0     0
   25:r98  l0     0   24:r99  l0     0   20:r100 l0     0   19:r101 l0     0
   17:r102 l0     0   15:r103 l0     0   11:r104 l0     0   10:r105 l0     0
    8:r106 l0     0    4:r107 l0     0    5:r108 l0     1    3:r109 l0     0
    2:r110 l0     0
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_mount

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={12d,5u} r1={11d} r2={11d} r3={9d,9u} r6={1d,20u} r7={31d,80u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,21u} r17={42d,9u} r18={10d} r19={1d,46u} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r82={1d,9u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={9d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} 
;;    total ref usage 1033{806d,227u,0e} in 121{111 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 181 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 181 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 181 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":219:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [8 dev_name+0 S4 A32])) "fs/super.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":219:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x759b7f910500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":219:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":219:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 96)
        (reg:SI 0 ax)) "fs/super.c":219:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 dev_i+0 S4 A32])
        (reg:SI 96)) "fs/super.c":219:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 dev_i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":219:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/super.c":219:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 165 3 (set (reg:SI 94 [ _12 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":220:16 75 {*movsi_internal}
     (nil))
(jump_insn 165 15 166 3 (set (pc)
        (label_ref 156)) "fs/super.c":220:16 807 {jump}
     (nil)
 -> 156)
(barrier 166 165 18)
(code_label 18 166 19 4 71 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 97)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 dev_i+0 S4 A32])) "fs/super.c":221:24 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 97)
                (const_int 14 [0xe])) [2 dev_i_17->i_zone[0]+0 S2 A16])) "fs/super.c":221:24 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97)
        (nil)))
(insn 22 21 23 4 (set (reg:SI 98)
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/super.c":221:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])
        (reg:SI 98)) "fs/super.c":221:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 24 23 25 4 (set (reg/f:SI 99)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 dev_i+0 S4 A32])) "fs/super.c":222:10 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:HI 84 [ _2 ])
        (mem:HI (reg/f:SI 99) [2 dev_i_17->i_mode+0 S2 A32])) "fs/super.c":222:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 99)
        (nil)))
(insn 26 25 27 4 (set (reg:SI 85 [ _3 ])
        (zero_extend:SI (reg:HI 84 [ _2 ]))) "fs/super.c":222:10 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 85 [ _3 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":222:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _4 ])
            (const_int 24576 [0x6000]))) "fs/super.c":222:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/super.c":222:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":223:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 32 31 33 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 dev_i+0 S4 A32])) "fs/super.c":223:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 33 32 34 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":223:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 34 33 35 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":223:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":223:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 167 5 (set (reg:SI 94 [ _12 ])
        (const_int -1 [0xffffffffffffffff])) "fs/super.c":224:16 75 {*movsi_internal}
     (nil))
(jump_insn 167 36 168 5 (set (pc)
        (label_ref 156)) "fs/super.c":224:16 807 {jump}
     (nil)
 -> 156)
(barrier 168 167 39)
(code_label 39 168 40 6 73 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":226:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 42 41 43 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 dev_i+0 S4 A32])) "fs/super.c":226:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 43 42 44 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":226:5 75 {*movsi_internal}
     (nil))
(call_insn 44 43 45 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":226:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 45 44 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":226:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":227:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 47 46 48 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [8 dir_name+0 S4 A32])) "fs/super.c":227:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 48 47 49 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":227:19 75 {*movsi_internal}
     (nil))
(call_insn 49 48 50 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x759b7f910500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":227:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 50 49 51 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":227:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 51 50 52 6 (set (reg:SI 100)
        (reg:SI 0 ax)) "fs/super.c":227:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 52 51 53 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])
        (reg:SI 100)) "fs/super.c":227:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":227:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) "fs/super.c":227:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 169 7 (set (reg:SI 94 [ _12 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":228:16 75 {*movsi_internal}
     (nil))
(jump_insn 169 56 170 7 (set (pc)
        (label_ref 156)) "fs/super.c":228:16 807 {jump}
     (nil)
 -> 156)
(barrier 170 169 59)
(code_label 59 170 60 8 74 (nil) [1 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":229:14 75 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (set (reg:HI 87 [ _5 ])
        (mem:HI (plus:SI (reg/f:SI 101)
                (const_int 48 [0x30])) [2 dir_i_22->i_count+0 S2 A32])) "fs/super.c":229:14 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 63 62 64 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 87 [ _5 ])
            (const_int 1 [0x1]))) "fs/super.c":229:8 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 87 [ _5 ])
        (nil)))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "fs/super.c":229:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 70)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":229:37 75 {*movsi_internal}
     (nil))
(insn 67 66 68 9 (set (reg:HI 88 [ _6 ])
        (mem:HI (plus:SI (reg/f:SI 102)
                (const_int 46 [0x2e])) [2 dir_i_22->i_num+0 S2 A16])) "fs/super.c":229:37 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (nil)))
(insn 68 67 69 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 88 [ _6 ])
            (const_int 1 [0x1]))) "fs/super.c":229:29 10 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 88 [ _6 ])
        (nil)))
(jump_insn 69 68 70 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "fs/super.c":229:29 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 80)
(code_label 70 69 71 10 75 (nil) [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":230:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 73 72 74 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":230:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 74 73 75 10 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":230:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 75 74 76 10 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":230:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 76 75 77 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":230:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 77 76 171 10 (set (reg:SI 94 [ _12 ])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":231:16 75 {*movsi_internal}
     (nil))
(jump_insn 171 77 172 10 (set (pc)
        (label_ref 156)) "fs/super.c":231:16 807 {jump}
     (nil)
 -> 156)
(barrier 172 171 80)
(code_label 80 172 81 11 76 (nil) [1 uses])
(note 81 80 82 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 11 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":233:10 75 {*movsi_internal}
     (nil))
(insn 83 82 84 11 (set (reg:HI 89 [ _7 ])
        (mem:HI (reg/f:SI 103) [2 dir_i_22->i_mode+0 S2 A32])) "fs/super.c":233:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 84 83 85 11 (set (reg:SI 90 [ _8 ])
        (zero_extend:SI (reg:HI 89 [ _7 ]))) "fs/super.c":233:10 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 89 [ _7 ])
        (nil)))
(insn 85 84 86 11 (parallel [
            (set (reg:SI 91 [ _9 ])
                (and:SI (reg:SI 90 [ _8 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":233:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _9 ])
            (const_int 16384 [0x4000]))) "fs/super.c":233:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
        (nil)))
(jump_insn 87 86 88 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "fs/super.c":233:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 97)
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":234:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 90 89 91 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":234:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 91 90 92 12 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":234:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 92 91 93 12 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":234:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 93 92 94 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":234:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 94 93 173 12 (set (reg:SI 94 [ _12 ])
        (const_int -1 [0xffffffffffffffff])) "fs/super.c":235:16 75 {*movsi_internal}
     (nil))
(jump_insn 173 94 174 12 (set (pc)
        (label_ref 156)) "fs/super.c":235:16 807 {jump}
     (nil)
 -> 156)
(barrier 174 173 97)
(code_label 97 174 98 13 77 (nil) [1 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":237:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 100 99 101 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])) "fs/super.c":237:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 101 100 102 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("read_super") [flags 0x3]  <function_decl 0x759b7f945300 read_super>) [0 read_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":237:16 823 {*call_value}
     (nil)
    (nil))
(insn 102 101 103 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":237:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 103 102 104 13 (set (reg:SI 104)
        (reg:SI 0 ax)) "fs/super.c":237:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 104 103 105 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])
        (reg:SI 104)) "fs/super.c":237:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 105 104 106 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":237:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 106 105 107 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/super.c":237:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 116)
(note 107 106 108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":238:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 109 108 110 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":238:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 110 109 111 14 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":238:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 111 110 112 14 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":238:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 112 111 113 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":238:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 113 112 175 14 (set (reg:SI 94 [ _12 ])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":239:16 75 {*movsi_internal}
     (nil))
(jump_insn 175 113 176 14 (set (pc)
        (label_ref 156)) "fs/super.c":239:16 807 {jump}
     (nil)
 -> 156)
(barrier 176 175 116)
(code_label 116 176 117 15 78 (nil) [1 uses])
(note 117 116 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 15 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])) "fs/super.c":241:11 75 {*movsi_internal}
     (nil))
(insn 119 118 120 15 (set (reg/f:SI 92 [ _10 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 92 [0x5c])) [5 sb_24->s_imount+0 S4 A32])) "fs/super.c":241:11 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 120 119 121 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 92 [ _10 ])
            (const_int 0 [0]))) "fs/super.c":241:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 92 [ _10 ])
        (nil)))
(jump_insn 121 120 122 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "fs/super.c":241:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 131)
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":242:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 124 123 125 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":242:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 125 124 126 16 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":242:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 126 125 127 16 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":242:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 127 126 128 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":242:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 128 127 177 16 (set (reg:SI 94 [ _12 ])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":243:16 75 {*movsi_internal}
     (nil))
(jump_insn 177 128 178 16 (set (pc)
        (label_ref 156)) "fs/super.c":243:16 807 {jump}
     (nil)
 -> 156)
(barrier 178 177 131)
(code_label 131 178 132 17 79 (nil) [1 uses])
(note 132 131 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 17 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":245:14 75 {*movsi_internal}
     (nil))
(insn 134 133 135 17 (set (reg:QI 93 [ _11 ])
        (mem:QI (plus:SI (reg/f:SI 106)
                (const_int 53 [0x35])) [0 dir_i_22->i_mount+0 S1 A8])) "fs/super.c":245:14 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 135 134 136 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ _11 ])
            (const_int 0 [0]))) "fs/super.c":245:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 93 [ _11 ])
        (nil)))
(jump_insn 136 135 137 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "fs/super.c":245:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 146)
(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":246:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 139 138 140 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":246:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 140 139 141 18 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":246:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 141 140 142 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":246:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 142 141 143 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":246:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 143 142 179 18 (set (reg:SI 94 [ _12 ])
        (const_int -1 [0xffffffffffffffff])) "fs/super.c":247:16 75 {*movsi_internal}
     (nil))
(jump_insn 179 143 180 18 (set (pc)
        (label_ref 156)) "fs/super.c":247:16 807 {jump}
     (nil)
 -> 156)
(barrier 180 179 146)
(code_label 146 180 147 19 80 (nil) [1 uses])
(note 147 146 148 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 19 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [19 sb+0 S4 A32])) "fs/super.c":249:18 75 {*movsi_internal}
     (nil))
(insn 149 148 150 19 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":249:18 75 {*movsi_internal}
     (nil))
(insn 150 149 151 19 (set (mem/f:SI (plus:SI (reg/f:SI 107)
                (const_int 92 [0x5c])) [5 sb_24->s_imount+0 S4 A32])
        (reg/f:SI 108)) "fs/super.c":249:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (expr_list:REG_DEAD (reg/f:SI 107)
            (nil))))
(insn 151 150 152 19 (set (reg/f:SI 109)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":250:20 75 {*movsi_internal}
     (nil))
(insn 152 151 153 19 (set (mem:QI (plus:SI (reg/f:SI 109)
                (const_int 53 [0x35])) [0 dir_i_22->i_mount+0 S1 A8])
        (const_int 1 [0x1])) "fs/super.c":250:20 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (nil)))
(insn 153 152 154 19 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [5 dir_i+0 S4 A32])) "fs/super.c":251:19 75 {*movsi_internal}
     (nil))
(insn 154 153 155 19 (set (mem:QI (plus:SI (reg/f:SI 110)
                (const_int 51 [0x33])) [0 dir_i_22->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/super.c":251:19 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 155 154 156 19 (set (reg:SI 94 [ _12 ])
        (const_int 0 [0])) "fs/super.c":252:12 75 {*movsi_internal}
     (nil))
(code_label 156 155 157 20 72 (nil) [8 uses])
(note 157 156 158 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 162 20 (set (reg:SI 95 [ <retval> ])
        (reg:SI 94 [ _12 ])) "fs/super.c":253:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ _12 ])
        (nil)))
(insn 162 158 163 20 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) "fs/super.c":253:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ <retval> ])
        (nil)))
(insn 163 162 0 20 (use (reg/i:SI 0 ax)) "fs/super.c":253:1 -1
     (nil))

;; Function sys_umount (sys_umount, funcdef_no=9, decl_uid=1458, cgraph_uid=10, symbol_order=11)

scanning new insn with uid = 172.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 21 n_edges 29 count 21 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 1
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 14 15
;; 2 succs { 3 4 }
;; 3 succs { 20 }
;; 4 succs { 5 6 }
;; 5 succs { 20 }
;; 6 succs { 7 8 }
;; 7 succs { 20 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 20 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 18 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 20 }
;; 17 succs { 18 }
;; 18 succs { 14 19 }
;; 19 succs { 20 }
;; 20 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a21 (r90,l0) best Q_REGS, allocno Q_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r82,l0) costs: AREG:14000 DREG:14000 CREG:14000 BREG:14000 SIREG:14000 DIREG:14000 AD_REGS:14000 CLOBBERED_REGS:14000 Q_REGS:14000 NON_Q_REGS:14000 TLS_GOTBASE_REGS:14000 GENERAL_REGS:14000 MEM:72000
  a3(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a10(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a12(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a13(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a14(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a17(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a18(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a19(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a20(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a21(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4000 DIREG:4000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a22(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a25(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a26(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a27(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a28(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a29(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a30(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a31(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a32(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a33(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a34(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a35(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000

   Insn 158(l0): point = 0
   Insn 157(l0): point = 2
   Insn 153(l0): point = 4
   Insn 150(l0): point = 7
   Insn 149(l0): point = 9
   Insn 148(l0): point = 11
   Insn 147(l0): point = 13
   Insn 146(l0): point = 15
   Insn 145(l0): point = 17
   Insn 144(l0): point = 19
   Insn 143(l0): point = 21
   Insn 142(l0): point = 23
   Insn 141(l0): point = 25
   Insn 140(l0): point = 27
   Insn 139(l0): point = 29
   Insn 138(l0): point = 31
   Insn 137(l0): point = 33
   Insn 136(l0): point = 35
   Insn 135(l0): point = 37
   Insn 134(l0): point = 39
   Insn 133(l0): point = 41
   Insn 132(l0): point = 43
   Insn 131(l0): point = 45
   Insn 130(l0): point = 47
   Insn 129(l0): point = 49
   Insn 128(l0): point = 51
   Insn 127(l0): point = 53
   Insn 126(l0): point = 55
   Insn 125(l0): point = 57
   Insn 124(l0): point = 59
   Insn 123(l0): point = 61
   Insn 122(l0): point = 63
   Insn 121(l0): point = 65
   Insn 120(l0): point = 67
   Insn 170(l0): point = 70
   Insn 106(l0): point = 72
   Insn 99(l0): point = 75
   Insn 98(l0): point = 77
   Insn 97(l0): point = 79
   Insn 96(l0): point = 81
   Insn 95(l0): point = 83
   Insn 118(l0): point = 86
   Insn 117(l0): point = 88
   Insn 115(l0): point = 90
   Insn 114(l0): point = 92
   Insn 111(l0): point = 95
   Insn 104(l0): point = 98
   Insn 103(l0): point = 100
   Insn 102(l0): point = 102
   Insn 101(l0): point = 104
   Insn 168(l0): point = 107
   Insn 91(l0): point = 109
   Insn 90(l0): point = 111
   Insn 89(l0): point = 113
   Insn 86(l0): point = 116
   Insn 85(l0): point = 118
   Insn 84(l0): point = 120
   Insn 83(l0): point = 122
   Insn 82(l0): point = 124
   Insn 81(l0): point = 126
   Insn 79(l0): point = 129
   Insn 78(l0): point = 131
   Insn 77(l0): point = 133
   Insn 76(l0): point = 135
   Insn 75(l0): point = 137
   Insn 166(l0): point = 140
   Insn 70(l0): point = 142
   Insn 67(l0): point = 145
   Insn 66(l0): point = 147
   Insn 65(l0): point = 149
   Insn 64(l0): point = 151
   Insn 62(l0): point = 154
   Insn 61(l0): point = 156
   Insn 60(l0): point = 158
   Insn 59(l0): point = 160
   Insn 58(l0): point = 162
   Insn 57(l0): point = 164
   Insn 56(l0): point = 166
   Insn 55(l0): point = 168
   Insn 164(l0): point = 171
   Insn 50(l0): point = 173
   Insn 48(l0): point = 176
   Insn 47(l0): point = 178
   Insn 46(l0): point = 180
   Insn 45(l0): point = 182
   Insn 44(l0): point = 184
   Insn 43(l0): point = 186
   Insn 42(l0): point = 188
   Insn 41(l0): point = 190
   Insn 162(l0): point = 193
   Insn 36(l0): point = 195
   Insn 35(l0): point = 197
   Insn 34(l0): point = 199
   Insn 33(l0): point = 201
   Insn 32(l0): point = 203
   Insn 31(l0): point = 205
   Insn 29(l0): point = 208
   Insn 28(l0): point = 210
   Insn 27(l0): point = 212
   Insn 26(l0): point = 214
   Insn 25(l0): point = 216
   Insn 24(l0): point = 218
   Insn 23(l0): point = 220
   Insn 22(l0): point = 222
   Insn 21(l0): point = 224
   Insn 20(l0): point = 226
   Insn 160(l0): point = 229
   Insn 15(l0): point = 231
   Insn 13(l0): point = 234
   Insn 12(l0): point = 236
   Insn 11(l0): point = 238
   Insn 10(l0): point = 240
   Insn 9(l0): point = 242
   Insn 8(l0): point = 244
   Insn 7(l0): point = 246
   Insn 6(l0): point = 248
   Insn 5(l0): point = 250
   Insn 172(l0): point = 252
 a0(r99): [3..4]
 a1(r98): [229..231] [193..195] [171..173] [140..142] [70..72] [5..7]
 a2(r82): [234..252] [202..228] [176..192] [145..170] [75..139] [14..69]
 a3(r117): [28..29]
 a4(r97): [38..41]
 a5(r116): [42..43]
 a6(r115): [46..47]
 a7(r96): [56..59]
 a8(r114): [60..61]
 a9(r95): [64..65]
 a10(r113): [66..67]
 a11(r94): [89..90]
 a12(r112): [91..92]
 a13(r93): [101..102]
 a14(r111): [103..104]
 a15(r92): [78..79]
 a16(r91): [80..81]
 a17(r110): [82..83]
 a18(r108): [110..111]
 a19(r109): [112..113]
 a20(r107): [123..124]
 a21(r90): [132..133]
 a22(r89): [134..135]
 a23(r106): [136..137]
 a24(r88): [148..149]
 a25(r105): [150..151]
 a26(r104): [159..160]
 a27(r87): [179..180]
 a28(r86): [211..212]
 a29(r85): [213..214]
 a30(r84): [215..216]
 a31(r103): [217..218]
 a32(r102): [221..222]
 a33(r83): [223..224]
 a34(r101): [225..226]
 a35(r100): [239..240]
Compressing live ranges: from 255 to 80 - 31%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r98): [76..77] [60..61] [56..57] [48..49] [20..21] [2..3]
 a2(r82): [78..79] [62..75] [58..59] [50..55] [22..47] [4..19]
 a3(r117): [4..5]
 a4(r97): [6..7]
 a5(r116): [8..9]
 a6(r115): [10..11]
 a7(r96): [12..13]
 a8(r114): [14..15]
 a9(r95): [16..17]
 a10(r113): [18..19]
 a11(r94): [28..29]
 a12(r112): [30..31]
 a13(r93): [32..33]
 a14(r111): [34..35]
 a15(r92): [22..23]
 a16(r91): [24..25]
 a17(r110): [26..27]
 a18(r108): [36..37]
 a19(r109): [38..39]
 a20(r107): [40..41]
 a21(r90): [42..43]
 a22(r89): [44..45]
 a23(r106): [46..47]
 a24(r88): [50..51]
 a25(r105): [52..53]
 a26(r104): [54..55]
 a27(r87): [58..59]
 a28(r86): [62..63]
 a29(r85): [64..65]
 a30(r84): [66..67]
 a31(r103): [68..69]
 a32(r102): [70..71]
 a33(r83): [72..73]
 a34(r101): [74..75]
 a35(r100): [78..79]
  pref0:a26(r104)<-hr0@1500
  pref1:a35(r100)<-hr0@1500
  pref2:a0(r99)<-hr0@1500
  pref3:a2(r82)<-hr3@3000
  regions=1, blocks=21, points=80
    allocnos=36 (big 0), copies=0, conflicts=0, ranges=46
Disposition:
    2:r82  l0     3   33:r83  l0     0   30:r84  l0     0   29:r85  l0     0
   28:r86  l0     0   27:r87  l0     0   24:r88  l0     0   22:r89  l0     0
   21:r90  l0     0   16:r91  l0     0   15:r92  l0     0   13:r93  l0     0
   11:r94  l0     0    9:r95  l0     0    7:r96  l0     0    4:r97  l0     0
    1:r98  l0     0    0:r99  l0     0   35:r100 l0     0   34:r101 l0     0
   32:r102 l0     0   31:r103 l0     0   26:r104 l0     0   25:r105 l0     0
   23:r106 l0     0   20:r107 l0     0   18:r108 l0     0   19:r109 l0     0
   17:r110 l0     0   14:r111 l0     0   12:r112 l0     0   10:r113 l0     0
    8:r114 l0     0    6:r115 l0     0    5:r116 l0     0    3:r117 l0     0
+++Costs: overall 5000, reg 5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sys_umount

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,4u} r1={10d} r2={10d} r3={7d,7u} r6={1d,20u} r7={28d,74u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,20u} r17={39d,9u} r18={9d} r19={1d,47u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r82={1d,11u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={6d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 961{734d,227u,0e} in 118{109 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 172 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 172 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 172 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":261:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (reg/f:SI 16 argp) [8 dev_name+0 S4 A32])) "fs/super.c":261:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":261:19 75 {*movsi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x41]  <function_decl 0x759b7f910500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":261:19 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":261:19 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 10 9 11 2 (set (reg:SI 100)
        (reg:SI 0 ax)) "fs/super.c":261:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg:SI 100)) "fs/super.c":261:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":261:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/super.c":261:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 160 3 (set (reg:SI 98 [ _17 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":262:16 75 {*movsi_internal}
     (nil))
(jump_insn 160 15 161 3 (set (pc)
        (label_ref 151)) "fs/super.c":262:16 807 {jump}
     (nil)
 -> 151)
(barrier 161 160 18)
(code_label 18 161 19 4 82 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg/f:SI 101)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/super.c":263:24 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:HI 83 [ _1 ])
        (mem:HI (plus:SI (reg/f:SI 101)
                (const_int 14 [0xe])) [2 inode_23->i_zone[0]+0 S2 A16])) "fs/super.c":263:24 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101)
        (nil)))
(insn 22 21 23 4 (set (reg:SI 102)
        (zero_extend:SI (reg:HI 83 [ _1 ]))) "fs/super.c":263:9 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 83 [ _1 ])
        (nil)))
(insn 23 22 24 4 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])
        (reg:SI 102)) "fs/super.c":263:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 24 23 25 4 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/super.c":264:10 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:HI 84 [ _2 ])
        (mem:HI (reg/f:SI 103) [2 inode_23->i_mode+0 S2 A32])) "fs/super.c":264:10 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 26 25 27 4 (set (reg:SI 85 [ _3 ])
        (zero_extend:SI (reg:HI 84 [ _2 ]))) "fs/super.c":264:10 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 84 [ _2 ])
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 86 [ _4 ])
                (and:SI (reg:SI 85 [ _3 ])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":264:10 490 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _4 ])
            (const_int 24576 [0x6000]))) "fs/super.c":264:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/super.c":264:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":265:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 32 31 33 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/super.c":265:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 33 32 34 5 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":265:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 34 33 35 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":265:9 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":265:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 162 5 (set (reg:SI 98 [ _17 ])
        (const_int -15 [0xfffffffffffffff1])) "fs/super.c":266:16 75 {*movsi_internal}
     (nil))
(jump_insn 162 36 163 5 (set (pc)
        (label_ref 151)) "fs/super.c":266:16 807 {jump}
     (nil)
 -> 151)
(barrier 163 162 39)
(code_label 39 163 40 6 84 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":268:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 42 41 43 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/super.c":268:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 43 42 44 6 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":268:5 75 {*movsi_internal}
     (nil))
(call_insn 44 43 45 6 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":268:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 45 44 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":268:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 46 45 47 6 (set (reg:SI 87 [ ROOT_DEV.7_5 ])
        (mem/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("ROOT_DEV") [flags 0x2]  <var_decl 0x759b80d63b40 ROOT_DEV>)
                        ] UNSPEC_GOTOFF))) [9 ROOT_DEV+0 S4 A32])) "fs/super.c":269:13 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])
            (reg:SI 87 [ ROOT_DEV.7_5 ]))) "fs/super.c":269:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ ROOT_DEV.7_5 ])
        (nil)))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "fs/super.c":269:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 53)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 164 7 (set (reg:SI 98 [ _17 ])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":270:16 75 {*movsi_internal}
     (nil))
(jump_insn 164 50 165 7 (set (pc)
        (label_ref 151)) "fs/super.c":270:16 807 {jump}
     (nil)
 -> 151)
(barrier 165 164 53)
(code_label 53 165 54 8 85 (nil) [1 uses])
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":271:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 56 55 57 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])) "fs/super.c":271:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 57 56 58 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x3]  <function_decl 0x759b7f90e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":271:16 823 {*call_value}
     (nil)
    (nil))
(insn 58 57 59 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":271:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 59 58 60 8 (set (reg:SI 104)
        (reg:SI 0 ax)) "fs/super.c":271:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 60 59 61 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])
        (reg:SI 104)) "fs/super.c":271:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])
            (const_int 0 [0]))) "fs/super.c":271:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "fs/super.c":271:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])) "fs/super.c":271:39 75 {*movsi_internal}
     (nil))
(insn 65 64 66 9 (set (reg/f:SI 88 [ _6 ])
        (mem/f:SI (plus:SI (reg/f:SI 105)
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":271:39 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (nil)))
(insn 66 65 67 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ _6 ])
            (const_int 0 [0]))) "fs/super.c":271:32 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 88 [ _6 ])
        (nil)))
(jump_insn 67 66 68 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "fs/super.c":271:32 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
(code_label 68 67 69 10 86 (nil) [1 uses])
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 166 10 (set (reg:SI 98 [ _17 ])
        (const_int -2 [0xfffffffffffffffe])) "fs/super.c":272:16 75 {*movsi_internal}
     (nil))
(jump_insn 166 70 167 10 (set (pc)
        (label_ref 151)) "fs/super.c":272:16 807 {jump}
     (nil)
 -> 151)
(barrier 167 166 73)
(code_label 73 167 74 11 87 (nil) [1 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])) "fs/super.c":273:12 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (reg/f:SI 89 [ _7 ])
        (mem/f:SI (plus:SI (reg/f:SI 106)
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":273:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (nil)))
(insn 77 76 78 11 (set (reg:QI 90 [ _8 ])
        (mem:QI (plus:SI (reg/f:SI 89 [ _7 ])
                (const_int 53 [0x35])) [0 _7->i_mount+0 S1 A8])) "fs/super.c":273:22 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89 [ _7 ])
        (nil)))
(insn 78 77 79 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ _8 ])
            (const_int 0 [0]))) "fs/super.c":273:8 5 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ _8 ])
        (nil)))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "fs/super.c":273:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 87)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":274:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 82 81 83 12 (set (reg/f:SI 107)
        (plus:SI (reg:SI 82)
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x759b7f97db40 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "fs/super.c":274:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x759b7f97db40 *.LC7>)
        (nil)))
(insn 83 82 84 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 107)) "fs/super.c":274:9 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 84 83 85 12 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":274:9 75 {*movsi_internal}
     (nil))
(call_insn 85 84 86 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x759b7f910900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":274:9 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 86 85 87 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":274:9 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(code_label 87 86 88 13 88 (nil) [1 uses])
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg:SI 109)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x40]  <var_decl 0x759b80d63cf0 inode_table>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":275:16 75 {*movsi_internal}
     (nil))
(insn 90 89 91 13 (set (reg/f:SI 108)
        (reg:SI 109)) "fs/super.c":275:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109)
        (expr_list:REG_EQUAL (symbol_ref:SI ("inode_table") [flags 0x40]  <var_decl 0x759b80d63cf0 inode_table>)
            (nil))))
(insn 91 90 168 13 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
        (reg/f:SI 108)) "fs/super.c":275:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (nil)))
(jump_insn 168 91 169 13 (set (pc)
        (label_ref 112)) "fs/super.c":275:5 807 {jump}
     (nil)
 -> 112)
(barrier 169 168 116)
(code_label 116 169 94 14 91 (nil) [1 uses])
(note 94 116 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/super.c":276:18 75 {*movsi_internal}
     (nil))
(insn 96 95 97 14 (set (reg:HI 91 [ _9 ])
        (mem:HI (plus:SI (reg/f:SI 110)
                (const_int 44 [0x2c])) [2 inode_16->i_dev+0 S2 A32])) "fs/super.c":276:18 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (nil)))
(insn 97 96 98 14 (set (reg:SI 92 [ _10 ])
        (zero_extend:SI (reg:HI 91 [ _9 ]))) "fs/super.c":276:18 144 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 91 [ _9 ])
        (nil)))
(insn 98 97 99 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])
            (reg:SI 92 [ _10 ]))) "fs/super.c":276:12 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ _10 ])
        (nil)))
(jump_insn 99 98 100 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "fs/super.c":276:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 109)
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 15 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])) "fs/super.c":276:41 75 {*movsi_internal}
     (nil))
(insn 102 101 103 15 (set (reg:HI 93 [ _11 ])
        (mem:HI (plus:SI (reg/f:SI 111)
                (const_int 48 [0x30])) [2 inode_16->i_count+0 S2 A32])) "fs/super.c":276:41 76 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (nil)))
(insn 103 102 104 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 93 [ _11 ])
            (const_int 0 [0]))) "fs/super.c":276:33 6 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 93 [ _11 ])
        (nil)))
(jump_insn 104 103 105 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "fs/super.c":276:33 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 109)
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 170 16 (set (reg:SI 98 [ _17 ])
        (const_int -16 [0xfffffffffffffff0])) "fs/super.c":277:20 75 {*movsi_internal}
     (nil))
(jump_insn 170 106 171 16 (set (pc)
        (label_ref 151)) "fs/super.c":277:20 807 {jump}
     (nil)
 -> 151)
(barrier 171 170 109)
(code_label 109 171 110 17 90 (nil) [2 uses])
(note 110 109 111 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 17 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":275:72 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 112 111 113 18 89 (nil) [1 uses])
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (set (reg:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("inode_table") [flags 0x40]  <var_decl 0x759b80d63cf0 inode_table>)
                        ] UNSPEC_GOT))) [23  S4 A8])) "fs/super.c":275:55 75 {*movsi_internal}
     (nil))
(insn 115 114 117 18 (set (reg/f:SI 94 [ _12 ])
        (plus:SI (reg:SI 112)
            (const_int 1792 [0x700]))) "fs/super.c":275:55 205 {*leasi}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("inode_table") [flags 0x40]  <var_decl 0x759b80d63cf0 inode_table>)
                    (const_int 1792 [0x700])))
            (nil))))
(insn 117 115 118 18 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [5 inode+0 S4 A32])
            (reg/f:SI 94 [ _12 ]))) "fs/super.c":275:41 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 94 [ _12 ])
        (nil)))
(jump_insn 118 117 119 18 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) "fs/super.c":275:41 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 116)
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 19 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])) "fs/super.c":278:7 75 {*movsi_internal}
     (nil))
(insn 121 120 122 19 (set (reg/f:SI 95 [ _13 ])
        (mem/f:SI (plus:SI (reg/f:SI 113)
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":278:7 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (nil)))
(insn 122 121 123 19 (set (mem:QI (plus:SI (reg/f:SI 95 [ _13 ])
                (const_int 53 [0x35])) [0 _13->i_mount+0 S1 A8])
        (const_int 0 [0])) "fs/super.c":278:27 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95 [ _13 ])
        (nil)))
(insn 123 122 124 19 (set (reg/f:SI 114)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])) "fs/super.c":279:5 75 {*movsi_internal}
     (nil))
(insn 124 123 125 19 (set (reg/f:SI 96 [ _14 ])
        (mem/f:SI (plus:SI (reg/f:SI 114)
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])) "fs/super.c":279:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 114)
        (nil)))
(insn 125 124 126 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":279:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 126 125 127 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg/f:SI 96 [ _14 ])) "fs/super.c":279:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 96 [ _14 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 127 126 128 19 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":279:5 75 {*movsi_internal}
     (nil))
(call_insn 128 127 129 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":279:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 129 128 130 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":279:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 130 129 131 19 (set (reg/f:SI 115)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])) "fs/super.c":280:18 75 {*movsi_internal}
     (nil))
(insn 131 130 132 19 (set (mem/f:SI (plus:SI (reg/f:SI 115)
                (const_int 92 [0x5c])) [5 sb_27->s_imount+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":280:18 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (nil)))
(insn 132 131 133 19 (set (reg/f:SI 116)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])) "fs/super.c":281:5 75 {*movsi_internal}
     (nil))
(insn 133 132 134 19 (set (reg/f:SI 97 [ _15 ])
        (mem/f:SI (plus:SI (reg/f:SI 116)
                (const_int 88 [0x58])) [5 sb_27->s_isup+0 S4 A32])) "fs/super.c":281:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (nil)))
(insn 134 133 135 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":281:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 135 134 136 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [5  S4 A32])
        (reg/f:SI 97 [ _15 ])) "fs/super.c":281:5 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97 [ _15 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 136 135 137 19 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":281:5 75 {*movsi_internal}
     (nil))
(call_insn 137 136 138 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x759b7f8d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/super.c":281:5 812 {*call}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 138 137 139 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":281:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 139 138 140 19 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [19 sb+0 S4 A32])) "fs/super.c":282:16 75 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (set (mem/f:SI (plus:SI (reg/f:SI 117)
                (const_int 88 [0x58])) [5 sb_27->s_isup+0 S4 A32])
        (const_int 0 [0])) "fs/super.c":282:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (nil)))
(insn 141 140 142 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":283:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 142 141 143 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])) "fs/super.c":283:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 143 142 144 19 (call (mem:QI (symbol_ref:SI ("put_super") [flags 0x3]  <function_decl 0x759b7f945700 put_super>) [0 put_super S1 A8])
        (const_int 16 [0x10])) "fs/super.c":283:5 812 {*call}
     (nil)
    (nil))
(insn 144 143 145 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":283:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 145 144 146 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":284:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 146 145 147 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 dev+0 S4 A32])) "fs/super.c":284:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 147 146 148 19 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/super.c":284:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 148 147 149 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sync_dev") [flags 0x41]  <function_decl 0x759b7f8d2f00 sync_dev>) [0 sync_dev S1 A8])
            (const_int 16 [0x10]))) "fs/super.c":284:5 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 149 148 150 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/super.c":284:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 150 149 151 19 (set (reg:SI 98 [ _17 ])
        (const_int 0 [0])) "fs/super.c":285:12 75 {*movsi_internal}
     (nil))
(code_label 151 150 152 20 83 (nil) [5 uses])
(note 152 151 153 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 157 20 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ _17 ])) "fs/super.c":286:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ _17 ])
        (nil)))
(insn 157 153 158 20 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) "fs/super.c":286:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ <retval> ])
        (nil)))
(insn 158 157 0 20 (use (reg/i:SI 0 ax)) "fs/super.c":286:1 -1
     (nil))
