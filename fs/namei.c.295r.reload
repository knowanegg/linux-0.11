
;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1332, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = -2
   Insn 5: point = 5, n_alt = -2
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 0
   Insn 18: point = 10, n_alt = 0
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]
Compressing live ranges: from 11 to 11 - 100%
Ranges after the compression:
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 18
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r3={1d,1u} r7={1d,3u} r17={2d} 
;;    total ref usage 19{11d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [8 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 0 ax [orig:86 _v ] [86])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 0 ax [87]) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (nil))
(insn 5 7 8 2 (set (reg/v:QI 3 bx [orig:83 _v ] [83])
        (reg:QI 0 ax [orig:86 _v ] [86])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:QI 0 ax [orig:84 _4 ] [84])
        (reg/v:QI 3 bx [orig:83 _v ] [83])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function permission (permission, funcdef_no=8, decl_uid=1411, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 10:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 15:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 28:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 39:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) qm {*zero_extendqihi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            alt=2: Bad operand -- refuse
	 Choosing alt 1 in insn 50:  (0) r  (1) 0  (2) m {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 57:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6
EBB 7 8
EBB 9 10
EBB 11
EBB 12
EBB 13

********** Pseudo live ranges #1: **********

  BB 13
   Insn 75: point = 0, n_alt = -1
   Insn 74: point = 0, n_alt = -2
   Insn 70: point = 1, n_alt = -2
  BB 11
   Insn 81: point = 4, n_alt = -1
   Insn 62: point = 4, n_alt = 0
  BB 4
   Insn 77: point = 5, n_alt = -1
   Insn 19: point = 5, n_alt = 0
  BB 12
   Insn 67: point = 6, n_alt = 0
  BB 10
   Insn 59: point = 7, n_alt = -1
   Insn 58: point = 7, n_alt = 0
   Insn 57: point = 8, n_alt = 2
   Insn 56: point = 10, n_alt = 0
   Insn 55: point = 12, n_alt = 0
  BB 9
   Insn 53: point = 15, n_alt = -1
   Insn 52: point = 15, n_alt = 0
   Insn 51: point = 16, n_alt = 0
   Insn 50: point = 18, n_alt = 1
   Insn 49: point = 20, n_alt = 0
  BB 6
   Insn 79: point = 22, n_alt = -1
   Insn 32: point = 22, n_alt = 0
  BB 8
   Insn 46: point = 23, n_alt = 0
  BB 7
   Insn 44: point = 24, n_alt = -1
   Insn 43: point = 24, n_alt = 0
   Insn 42: point = 25, n_alt = 0
   Insn 41: point = 27, n_alt = 4
   Insn 40: point = 29, n_alt = 0
   Insn 39: point = 30, n_alt = 2
   Insn 38: point = 32, n_alt = 0
   Insn 37: point = 34, n_alt = 0
  BB 5
   Insn 30: point = 36, n_alt = -1
   Insn 29: point = 36, n_alt = 0
   Insn 28: point = 37, n_alt = 2
   Insn 27: point = 39, n_alt = 0
   Insn 26: point = 40, n_alt = 2
   Insn 25: point = 42, n_alt = 0
   Insn 24: point = 44, n_alt = 0
  BB 3
   Insn 17: point = 46, n_alt = -1
   Insn 16: point = 46, n_alt = 0
   Insn 15: point = 47, n_alt = 4
   Insn 14: point = 49, n_alt = 0
  BB 2
   Insn 12: point = 51, n_alt = -1
   Insn 11: point = 51, n_alt = 0
   Insn 10: point = 52, n_alt = 2
   Insn 9: point = 54, n_alt = 0
   Insn 8: point = 55, n_alt = 1
   Insn 7: point = 56, n_alt = 0
   Insn 6: point = 58, n_alt = 2
   Insn 5: point = 60, n_alt = 0
   Insn 83: point = 61, n_alt = 0
 r82: [13..61]
 r83: [57..58]
 r84: [51..52]
 r85: [46..47]
 r86: [41..42]
 r87: [36..40]
 r88: [36..37]
 r89: [31..32]
 r90: [24..30]
 r91: [26..27]
 r92: [24..25]
 r93: [17..18]
 r94: [15..16]
 r95: [9..10]
 r96: [7..8]
 r97: [2..6]
 r98: [0..1]
 r99: [59..60]
 r100: [55..56]
 r101: [53..54]
 r102: [48..49]
 r103: [43..44]
 r104: [38..39]
 r105: [33..34]
 r106: [28..29]
 r107: [19..20]
 r108: [11..12]
Compressing live ranges: from 62 to 48 - 77%
Ranges after the compression:
 r82: [10..47]
 r83: [44..45]
 r84: [38..39]
 r85: [34..35]
 r86: [30..31]
 r87: [26..29]
 r88: [26..27]
 r89: [22..23]
 r90: [16..21]
 r91: [18..19]
 r92: [16..17]
 r93: [12..13]
 r94: [10..11]
 r95: [6..7]
 r96: [4..5]
 r97: [2..3]
 r98: [0..1]
 r99: [46..47]
 r100: [42..43]
 r101: [40..41]
 r102: [36..37]
 r103: [32..33]
 r104: [28..29]
 r105: [24..25]
 r106: [20..21]
 r107: [14..15]
 r108: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 83
changing reg in insn 55
changing reg in insn 37
changing reg in insn 24
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 11
changing reg in insn 15
changing reg in insn 16
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 29
changing reg in insn 28
changing reg in insn 29
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 43
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 67
changing reg in insn 62
changing reg in insn 19
changing reg in insn 70
changing reg in insn 70
changing reg in insn 74
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 37
changing reg in insn 38
changing reg in insn 40
changing reg in insn 41
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 56
deleting insn with uid = 70.
deleting insn with uid = 74.
starting the processing of deferred insns
ending the processing of deferred insns


permission

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={8d,8u} r1={20d,19u} r2={3d,2u} r7={1d,26u} r16={1e} r17={11d,6u} r19={1e} 
;;    total ref usage 106{43d,61u,2e} in 47{47 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 83 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 83 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 83 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 inode+0 S4 A32])) "fs/namei.c":34:21 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:HI 1 dx [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 1 dx [99]) [4 inode_18(D)->i_mode+0 S2 A32])) "fs/namei.c":34:21 76 {*movhi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx [100])
        (zero_extend:SI (reg:HI 1 dx [orig:83 _1 ] [83]))) "fs/namei.c":34:9 144 {*zero_extendhisi2}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 mode+0 S4 A32])
        (reg:SI 1 dx [100])) "fs/namei.c":34:9 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 1 dx [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 inode+0 S4 A32])) "fs/namei.c":37:14 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:HI 1 dx [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 1 dx [101])
                (const_int 44 [0x2c])) [4 inode_18(D)->i_dev+0 S2 A32])) "fs/namei.c":37:14 76 {*movhi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":37:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "fs/namei.c":37:8 806 {*jcc}
     (nil)
 -> 22)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:SI 1 dx [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 inode+0 S4 A32])) "fs/namei.c":37:31 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:QI 1 dx [orig:85 _3 ] [85])
        (mem:QI (plus:SI (reg/f:SI 1 dx [102])
                (const_int 13 [0xd])) [0 inode_18(D)->i_nlinks+0 S1 A8])) "fs/namei.c":37:31 77 {*movqi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:85 _3 ] [85])
            (const_int 0 [0]))) "fs/namei.c":37:22 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "fs/namei.c":37:22 806 {*jcc}
     (nil)
 -> 22)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 77 4 (set (reg:SI 0 ax [orig:97 _16 ] [97])
        (const_int 0 [0])) "fs/namei.c":38:16 75 {*movsi_internal}
     (nil))
(jump_insn 77 19 78 4 (set (pc)
        (label_ref 68)) "fs/namei.c":38:16 807 {jump}
     (nil)
 -> 68)
(barrier 78 77 22)
(code_label 22 78 23 5 4 (nil) [2 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 1 dx [103])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":39:21 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 1 dx [orig:86 current.0_4 ] [86])
        (mem/f/c:SI (reg/f:SI 1 dx [103]) [6 current+0 S4 A32])) "fs/namei.c":39:21 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:HI 2 cx [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:86 current.0_4 ] [86])
                (const_int 578 [0x242])) [4 current.0_4->euid+0 S2 A16])) "fs/namei.c":39:21 76 {*movhi_internal}
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 1 dx [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 inode+0 S4 A32])) "fs/namei.c":39:36 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:HI 1 dx [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 1 dx [104])
                (const_int 2 [0x2])) [4 inode_18(D)->i_uid+0 S2 A16])) "fs/namei.c":39:36 76 {*movhi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 2 cx [orig:87 _5 ] [87])
            (reg:HI 1 dx [orig:88 _6 ] [88]))) "fs/namei.c":39:13 10 {*cmphi_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/namei.c":39:13 806 {*jcc}
     (nil)
 -> 35)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 79 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [11 mode+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [11 mode+0 S4 A32])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":40:14 702 {*ashrsi3_1}
     (nil))
(jump_insn 79 32 80 6 (set (pc)
        (label_ref 47)) 807 {jump}
     (nil)
 -> 47)
(barrier 80 79 35)
(code_label 35 80 36 7 6 (nil) [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:SI 1 dx [105])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":41:21 75 {*movsi_internal}
     (nil))
(insn 38 37 39 7 (set (reg/f:SI 1 dx [orig:89 current.1_7 ] [89])
        (mem/f/c:SI (reg/f:SI 1 dx [105]) [6 current+0 S4 A32])) "fs/namei.c":41:21 75 {*movsi_internal}
     (nil))
(insn 39 38 40 7 (set (reg:HI 2 cx [orig:90 _8 ] [90])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:89 current.1_7 ] [89])
                (const_int 584 [0x248])) [4 current.1_7->egid+0 S2 A32])) "fs/namei.c":41:21 76 {*movhi_internal}
     (nil))
(insn 40 39 41 7 (set (reg/f:SI 1 dx [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 inode+0 S4 A32])) "fs/namei.c":41:36 75 {*movsi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:QI 1 dx [orig:91 _9 ] [91])
        (mem:QI (plus:SI (reg/f:SI 1 dx [106])
                (const_int 12 [0xc])) [0 inode_18(D)->i_gid+0 S1 A32])) "fs/namei.c":41:36 77 {*movqi_internal}
     (nil))
(insn 42 41 43 7 (set (reg:HI 1 dx [orig:92 _10 ] [92])
        (zero_extend:HI (reg:QI 1 dx [orig:91 _9 ] [91]))) "fs/namei.c":41:36 146 {*zero_extendqihi2}
     (nil))
(insn 43 42 44 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 2 cx [orig:90 _8 ] [90])
            (reg:HI 1 dx [orig:92 _10 ] [92]))) "fs/namei.c":41:13 10 {*cmphi_1}
     (nil))
(jump_insn 44 43 45 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "fs/namei.c":41:13 806 {*jcc}
     (nil)
 -> 47)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [11 mode+0 S4 A32])
                (ashiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [11 mode+0 S4 A32])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":42:14 702 {*ashrsi3_1}
     (nil))
(code_label 47 46 48 9 7 (nil) [2 uses])
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg:SI 1 dx [107])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 mode+0 S4 A32])) "fs/namei.c":43:16 75 {*movsi_internal}
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg:SI 1 dx [orig:93 _11 ] [93])
                (and:SI (reg:SI 1 dx [107])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 24 [0x18])) [11 mask+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":43:16 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 mode+0 S4 A32])
            (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 mask+0 S4 A32]))
        (nil)))
(insn 51 50 52 9 (parallel [
            (set (reg:SI 1 dx [orig:94 _12 ] [94])
                (and:SI (reg:SI 1 dx [orig:93 _11 ] [93])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":43:23 490 {*andsi_1}
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [11 mask+0 S4 A32])
            (reg:SI 1 dx [orig:94 _12 ] [94]))) "fs/namei.c":43:8 11 {*cmpsi_1}
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/namei.c":43:8 806 {*jcc}
     (nil)
 -> 60)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg/f:SI 0 ax [108])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":43:43 75 {*movsi_internal}
     (nil))
(insn 56 55 57 10 (set (reg/f:SI 0 ax [orig:95 current.2_13 ] [95])
        (mem/f/c:SI (reg/f:SI 0 ax [108]) [6 current+0 S4 A32])) "fs/namei.c":43:43 75 {*movsi_internal}
     (nil))
(insn 57 56 58 10 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:95 current.2_13 ] [95])
                (const_int 578 [0x242])) [4 current.2_13->euid+0 S2 A16])) "fs/namei.c":43:43 76 {*movhi_internal}
     (nil))
(insn 58 57 59 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:96 _14 ] [96])
            (const_int 0 [0]))) "fs/namei.c":43:40 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "fs/namei.c":43:40 806 {*jcc}
     (nil)
 -> 65)
(code_label 60 59 61 11 8 (nil) [1 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 81 11 (set (reg:SI 0 ax [orig:97 _16 ] [97])
        (const_int 1 [0x1])) "fs/namei.c":44:16 75 {*movsi_internal}
     (nil))
(jump_insn 81 62 82 11 (set (pc)
        (label_ref 68)) "fs/namei.c":44:16 807 {jump}
     (nil)
 -> 68)
(barrier 82 81 65)
(code_label 65 82 66 12 9 (nil) [1 uses])
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 12 (set (reg:SI 0 ax [orig:97 _16 ] [97])
        (const_int 0 [0])) "fs/namei.c":45:12 75 {*movsi_internal}
     (nil))
(code_label 68 67 69 13 5 (nil) [2 uses])
(note 69 68 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 69 84 13 (use (reg/i:SI 0 ax)) "fs/namei.c":46:1 -1
     (nil))
(note 84 75 0 NOTE_INSN_DELETED)

;; Function match (match, funcdef_no=9, decl_uid=1417, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 9:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 31
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
            2 Small class reload: reject+=3
            3 Small class reload: reject+=3
          alt=0,overall=18,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 49:  (0) =a  (1) 0  (2) S  (3) D  (4) c
      Creating newreg=102 from oldreg=85, assigning class SIREG to r102
      Creating newreg=103 from oldreg=87, assigning class DIREG to r103
   49: {r97:SI=asm_operands;clobber flags:CC;}
      REG_DEAD r99:SI
      REG_DEAD r87:SI
      REG_DEAD r85:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   67: r102:SI=r85:SI
   68: r103:SI=r87:SI

	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6 7 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 58: point = 0, n_alt = -1
   Insn 57: point = 0, n_alt = -2
   Insn 53: point = 1, n_alt = -2
  BB 8
   Insn 62: point = 4, n_alt = -1
   Insn 37: point = 4, n_alt = 0
  BB 5
   Insn 60: point = 5, n_alt = -1
   Insn 19: point = 5, n_alt = 0
  BB 9
   Insn 50: point = 6, n_alt = -2
   Insn 46: point = 8, n_alt = -2
   Insn 49: point = 10, n_alt = 0
   Insn 68: point = 12, n_alt = -2
	Hard reg 3 is preferable by r103 with profit 1000
   Insn 67: point = 14, n_alt = -2
	Hard reg 1 is preferable by r102 with profit 1000
   Insn 64: point = 16, n_alt = -2
   Insn 48: point = 18, n_alt = 0
   Insn 47: point = 19, n_alt = 0
   Insn 45: point = 20, n_alt = -2
   Insn 44: point = 22, n_alt = 0
   Insn 43: point = 24, n_alt = 0
   Insn 42: point = 25, n_alt = 0
  BB 7
   Insn 35: point = 26, n_alt = -1
   Insn 34: point = 26, n_alt = 0
   Insn 33: point = 27, n_alt = 4
   Insn 32: point = 29, n_alt = 0
   Insn 31: point = 31, n_alt = 0
   Insn 30: point = 33, n_alt = 0
   Insn 29: point = 34, n_alt = 0
  BB 6
   Insn 27: point = 35, n_alt = -1
   Insn 26: point = 35, n_alt = 0
  BB 4
   Insn 16: point = 35, n_alt = -1
   Insn 15: point = 35, n_alt = 0
  BB 3
   Insn 11: point = 35, n_alt = -1
   Insn 10: point = 35, n_alt = 0
   Insn 9: point = 36, n_alt = 2
   Insn 8: point = 38, n_alt = 0
  BB 2
   Insn 6: point = 39, n_alt = -1
   Insn 5: point = 39, n_alt = 1
   Insn 65: point = 39, n_alt = 0
 r82: [39..39]
 r83: [35..36]
 r84: [26..27]
 r85: [15..25]
 r86: [21..22]
 r87: [13..20]
 r88: [2..6]
 r89: [7..8]
 r90: [0..1]
 r91: [37..38]
 r92: [32..34]
 r93: [30..31]
 r94: [32..33]
 r95: [28..29]
 r96: [23..24]
 r97: [9..16]
 r98: [17..19]
 r99: [11..18]
 r102: [11..14]
 r103: [11..12]
Compressing live ranges: from 40 to 31 - 77%
Ranges after the compression:
 r82: [30..30]
 r83: [26..27]
 r84: [18..19]
 r85: [10..17]
 r86: [14..15]
 r87: [8..13]
 r88: [2..3]
 r89: [4..5]
 r90: [0..1]
 r91: [28..29]
 r92: [24..25]
 r93: [22..23]
 r94: [24..25]
 r95: [20..21]
 r96: [16..17]
 r97: [6..11]
 r98: [12..13]
 r99: [6..13]
 r102: [6..9]
 r103: [6..7]

********** Assignment #1: **********

	 Assigning to 102 (cl=SIREG, orig=85, freq=2000, tfirst=102, tfreq=2000)...
	   Assign 4 to reload r102 (freq=2000)
	 Assigning to 103 (cl=DIREG, orig=87, freq=2000, tfirst=103, tfreq=2000)...
	   Assign 5 to reload r103 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 65
changing reg in insn 9
changing reg in insn 10
changing reg in insn 33
changing reg in insn 34
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 50
changing reg in insn 37
changing reg in insn 19
changing reg in insn 53
changing reg in insn 46
changing reg in insn 50
changing reg in insn 53
changing reg in insn 57
changing reg in insn 8
changing reg in insn 9
changing reg in insn 29
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 30
changing reg in insn 32
changing reg in insn 33
changing reg in insn 43
changing reg in insn 44
changing reg in insn 64
changing reg in insn 49
changing reg in insn 49
changing reg in insn 46
changing reg in insn 47
changing reg in insn 64
changing reg in insn 48
changing reg in insn 49
deleting insn with uid = 64.
deleting insn with uid = 53.
deleting insn with uid = 57.
starting the processing of deferred insns
ending the processing of deferred insns


match

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;;  ref usage 	r0={15d,12u} r1={3d,2u,1e} r2={2d,1u} r3={2d,2u} r4={1d,1u} r5={1d,1u} r7={1d,19u} r16={2e} r17={10d,5u} 
;;    total ref usage 81{35d,43u,3e} in 34{34 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 65 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 65 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [1 de+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":59:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/namei.c":59:8 806 {*jcc}
     (nil)
 -> 17)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 de+0 S4 A32])) "fs/namei.c":59:19 75 {*movsi_internal}
     (nil))
(insn 9 8 10 3 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [91]) [4 de_7(D)->inode+0 S2 A16])) "fs/namei.c":59:19 76 {*movhi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/namei.c":59:13 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/namei.c":59:13 806 {*jcc}
     (nil)
 -> 17)
(note 12 11 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 12 16 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [11 len+0 S4 A32])
            (const_int 14 [0xe]))) "fs/namei.c":59:27 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "fs/namei.c":59:27 806 {*jcc}
     (nil)
 -> 22)
(code_label 17 16 18 5 11 (nil) [2 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 60 5 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (const_int 0 [0])) "fs/namei.c":60:16 75 {*movsi_internal}
     (nil))
(jump_insn 60 19 61 5 (set (pc)
        (label_ref 51)) "fs/namei.c":60:16 807 {jump}
     (nil)
 -> 51)
(barrier 61 60 22)
(code_label 22 61 23 6 12 (nil) [1 uses])
(note 23 22 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 23 27 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [11 len+0 S4 A32])
            (const_int 13 [0xd]))) "fs/namei.c":61:8 11 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/namei.c":61:8 806 {*jcc}
     (nil)
 -> 40)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg/f:SI 1 dx [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 de+0 S4 A32])) "fs/namei.c":61:35 75 {*movsi_internal}
     (nil))
(insn 30 29 31 7 (set (reg:SI 0 ax [94])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 len+0 S4 A32])) "fs/namei.c":61:35 75 {*movsi_internal}
     (nil))
(insn 31 30 32 7 (parallel [
            (set (reg:SI 0 ax [93])
                (plus:SI (reg:SI 0 ax [94])
                    (reg/f:SI 1 dx [92])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":61:35 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 1 dx [92])
            (mem/c:SI (reg/f:SI 16 argp) [11 len+0 S4 A32]))
        (nil)))
(insn 32 31 33 7 (parallel [
            (set (reg/f:SI 0 ax [95])
                (plus:SI (reg:SI 0 ax [93])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":61:35 209 {*addsi_1}
     (nil))
(insn 33 32 34 7 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (reg/f:SI 0 ax [95]) [0 de_7(D)->name[len_9(D)]+0 S1 A8])) "fs/namei.c":61:35 77 {*movqi_internal}
     (nil))
(insn 34 33 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":61:24 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 35 34 36 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/namei.c":61:24 806 {*jcc}
     (nil)
 -> 40)
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 62 8 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (const_int 0 [0])) "fs/namei.c":62:16 75 {*movsi_internal}
     (nil))
(jump_insn 62 37 63 8 (set (pc)
        (label_ref 51)) "fs/namei.c":62:16 807 {jump}
     (nil)
 -> 51)
(barrier 63 62 40)
(code_label 40 63 41 9 14 (nil) [2 uses])
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (set (reg:SI 1 dx [orig:85 name.3_3 ] [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 name+0 S4 A32])) "fs/namei.c":67:29 75 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (set (reg/f:SI 0 ax [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 de+0 S4 A32])) "fs/namei.c":67:55 75 {*movsi_internal}
     (nil))
(insn 44 43 45 9 (parallel [
            (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (plus:SI (reg/f:SI 0 ax [96])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":67:55 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [1 de+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 45 44 47 9 (set (reg:SI 3 bx [orig:87 _5 ] [87])
        (reg/f:SI 0 ax [orig:86 _4 ] [86])) "fs/namei.c":67:48 75 {*movsi_internal}
     (nil))
(insn 47 45 48 9 (set (reg:SI 0 ax [98])
        (const_int 0 [0])) "fs/namei.c":63:5 75 {*movsi_internal}
     (nil))
(insn 48 47 67 9 (set (reg:SI 2 cx [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 len+0 S4 A32])) "fs/namei.c":63:5 75 {*movsi_internal}
     (nil))
(insn 67 48 68 9 (set (reg:SI 4 si [orig:85 name.3_3 ] [85])
        (reg:SI 1 dx [orig:85 name.3_3 ] [85])) "fs/namei.c":63:5 75 {*movsi_internal}
     (nil))
(insn 68 67 49 9 (set (reg:SI 5 di [orig:87 _5 ] [87])
        (reg:SI 3 bx [orig:87 _5 ] [87])) "fs/namei.c":63:5 75 {*movsi_internal}
     (nil))
(insn 49 68 46 9 (parallel [
            (set (reg:SI 0 ax [orig:97 same ] [97])
                (asm_operands:SI ("cld
	fs; repe ; cmpsb
	setz %%al") ("=a") 0 [
                        (reg:SI 0 ax [orig:97 same ] [97])
                        (reg:SI 4 si [orig:85 name.3_3 ] [85])
                        (reg:SI 5 di [orig:87 _5 ] [87])
                        (reg:SI 2 cx [99])
                    ]
                     [
                        (asm_input:SI ("0") fs/namei.c:63)
                        (asm_input:SI ("S") fs/namei.c:63)
                        (asm_input:SI ("D") fs/namei.c:63)
                        (asm_input:SI ("c") fs/namei.c:63)
                    ]
                     [] fs/namei.c:63))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":63:5 -1
     (nil))
(insn 46 49 50 9 (set (reg/v:SI 3 bx [orig:89 same ] [89])
        (reg:SI 0 ax [orig:97 same ] [97])) "fs/namei.c":63:5 75 {*movsi_internal}
     (nil))
(insn 50 46 51 9 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (reg/v:SI 3 bx [orig:89 same ] [89])) "fs/namei.c":69:12 75 {*movsi_internal}
     (nil))
(code_label 51 50 52 10 13 (nil) [2 uses])
(note 52 51 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 52 66 10 (use (reg/i:SI 0 ax)) "fs/namei.c":70:1 -1
     (nil))
(note 66 58 0 NOTE_INSN_DELETED)

;; Function find_entry (find_entry, funcdef_no=10, decl_uid=1424, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 62:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 68:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 88:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 95:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =rm  (1) %0  (2) rn {*addhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 97:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 102:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 115:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 117:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 122:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 142:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 146:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 150:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 157:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 162:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 170:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 172:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 177:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 179:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 186:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 193:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 196:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 201:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 214:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 215:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 223:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 227:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7 8 9 10
EBB 11 12 13
EBB 14 15
EBB 16 17
EBB 18
EBB 19 20 21
EBB 22
EBB 23
EBB 24 25
EBB 26
EBB 27 28
EBB 29

********** Pseudo live ranges #1: **********

  BB 29
   Insn 236: point = 0, n_alt = -1
   Insn 235: point = 0, n_alt = -2
   Insn 231: point = 1, n_alt = -2
  BB 25
   Insn 250: point = 4, n_alt = -1
   Insn 209: point = 4, n_alt = 0
   Insn 208: point = 5, n_alt = 1
   Insn 207: point = 6, n_alt = 0
   Insn 206: point = 7, n_alt = 0
  BB 17
   Insn 244: point = 8, n_alt = -1
   Insn 128: point = 8, n_alt = 0
  BB 15
   Insn 242: point = 9, n_alt = -1
   Insn 108: point = 9, n_alt = 0
  BB 5
   Insn 238: point = 10, n_alt = -1
   Insn 23: point = 10, n_alt = 0
  BB 28
   Insn 228: point = 11, n_alt = 0
   Insn 227: point = 12, n_alt = 0
   Insn 226: point = 12, n_alt = 0
   Insn 225: point = 12, n_alt = -2
   Insn 224: point = 13, n_alt = 0
   Insn 223: point = 13, n_alt = 0
  BB 27
   Insn 221: point = 14, n_alt = -1
   Insn 220: point = 14, n_alt = 1
   Insn 219: point = 15, n_alt = 0
  BB 22
   Insn 248: point = 17, n_alt = -1
   Insn 186: point = 17, n_alt = 1
   Insn 185: point = 18, n_alt = 0
   Insn 184: point = 20, n_alt = 0
  BB 18
   Insn 246: point = 22, n_alt = -1
   Insn 136: point = 22, n_alt = 1
   Insn 135: point = 23, n_alt = 0
   Insn 134: point = 25, n_alt = 0
   Insn 133: point = 26, n_alt = 1
  BB 16
   Insn 126: point = 27, n_alt = -1
   Insn 125: point = 27, n_alt = 1
   Insn 124: point = 27, n_alt = 1
   Insn 123: point = 28, n_alt = -2
   Insn 122: point = 29, n_alt = 0
   Insn 121: point = 29, n_alt = 0
   Insn 120: point = 29, n_alt = -2
   Insn 119: point = 29, n_alt = 0
   Insn 118: point = 30, n_alt = 0
   Insn 117: point = 30, n_alt = 0
   Insn 116: point = 30, n_alt = 0
   Insn 115: point = 32, n_alt = 2
   Insn 114: point = 34, n_alt = 0
   Insn 113: point = 36, n_alt = 0
  BB 14
   Insn 106: point = 38, n_alt = -1
   Insn 105: point = 38, n_alt = 1
   Insn 104: point = 38, n_alt = 1
   Insn 103: point = 39, n_alt = 0
   Insn 102: point = 41, n_alt = 2
   Insn 101: point = 43, n_alt = 0
   Insn 100: point = 45, n_alt = 0
  BB 10
   Insn 240: point = 47, n_alt = -1
   Insn 55: point = 47, n_alt = 1
  BB 13
   Insn 97: point = 48, n_alt = 3
   Insn 96: point = 49, n_alt = 0
   Insn 95: point = 51, n_alt = 2
   Insn 94: point = 52, n_alt = 0
   Insn 93: point = 54, n_alt = 0
   Insn 92: point = 55, n_alt = 1
   Insn 91: point = 56, n_alt = 0
   Insn 90: point = 57, n_alt = 0
   Insn 89: point = 59, n_alt = 0
   Insn 88: point = 60, n_alt = 0
   Insn 87: point = 60, n_alt = 0
   Insn 86: point = 60, n_alt = -2
   Insn 85: point = 60, n_alt = 0
   Insn 84: point = 61, n_alt = 0
   Insn 83: point = 61, n_alt = 0
   Insn 82: point = 63, n_alt = 0
  BB 12
   Insn 80: point = 65, n_alt = -1
   Insn 79: point = 65, n_alt = 0
   Insn 78: point = 66, n_alt = 0
   Insn 77: point = 68, n_alt = 0
   Insn 76: point = 69, n_alt = 1
   Insn 75: point = 70, n_alt = -2
   Insn 74: point = 71, n_alt = 0
   Insn 73: point = 71, n_alt = 0
   Insn 72: point = 71, n_alt = -2
   Insn 71: point = 71, n_alt = 0
   Insn 70: point = 72, n_alt = 0
   Insn 69: point = 72, n_alt = 0
   Insn 68: point = 74, n_alt = 2
   Insn 67: point = 76, n_alt = 0
   Insn 66: point = 78, n_alt = 0
  BB 11
   Insn 64: point = 80, n_alt = -1
   Insn 63: point = 80, n_alt = 0
   Insn 62: point = 81, n_alt = 2
   Insn 61: point = 83, n_alt = 0
   Insn 60: point = 85, n_alt = 0
  BB 9
   Insn 53: point = 87, n_alt = -1
   Insn 52: point = 87, n_alt = 0
   Insn 51: point = 88, n_alt = 0
   Insn 50: point = 90, n_alt = 0
   Insn 49: point = 92, n_alt = 0
   Insn 48: point = 93, n_alt = 0
   Insn 47: point = 95, n_alt = 0
  BB 8
   Insn 45: point = 97, n_alt = -1
   Insn 44: point = 97, n_alt = 0
   Insn 43: point = 98, n_alt = -2
   Insn 42: point = 99, n_alt = 0
   Insn 41: point = 99, n_alt = 0
   Insn 40: point = 99, n_alt = 0
   Insn 39: point = 100, n_alt = 0
   Insn 38: point = 102, n_alt = 0
  BB 7
   Insn 36: point = 104, n_alt = -1
   Insn 35: point = 104, n_alt = 0
   Insn 34: point = 105, n_alt = -2
   Insn 33: point = 106, n_alt = 0
   Insn 32: point = 106, n_alt = 0
   Insn 31: point = 106, n_alt = 0
  BB 6
   Insn 29: point = 107, n_alt = -1
   Insn 28: point = 107, n_alt = 0
  BB 4
   Insn 21: point = 108, n_alt = -1
   Insn 20: point = 108, n_alt = 1
   Insn 19: point = 108, n_alt = 1
   Insn 18: point = 109, n_alt = 0
   Insn 17: point = 110, n_alt = 1
   Insn 16: point = 111, n_alt = 0
   Insn 15: point = 113, n_alt = 0
   Insn 14: point = 115, n_alt = 0
   Insn 13: point = 117, n_alt = 0
  BB 3
   Insn 10: point = 119, n_alt = 1
  BB 2
   Insn 8: point = 120, n_alt = -1
   Insn 7: point = 120, n_alt = 0
   Insn 252: point = 120, n_alt = 0
  BB 26
   Insn 215: point = 121, n_alt = 0
   Insn 214: point = 121, n_alt = 0
  BB 24
   Insn 204: point = 122, n_alt = -1
   Insn 203: point = 122, n_alt = 0
   Insn 202: point = 123, n_alt = -2
   Insn 201: point = 124, n_alt = 0
   Insn 200: point = 124, n_alt = 0
   Insn 199: point = 124, n_alt = 0
   Insn 198: point = 124, n_alt = 0
   Insn 197: point = 124, n_alt = 0
   Insn 196: point = 124, n_alt = 0
  BB 23
   Insn 193: point = 125, n_alt = 1
   Insn 192: point = 126, n_alt = 0
   Insn 191: point = 128, n_alt = 0
  BB 21
   Insn 181: point = 130, n_alt = -1
   Insn 180: point = 130, n_alt = 1
   Insn 179: point = 130, n_alt = 1
   Insn 178: point = 131, n_alt = -2
   Insn 177: point = 132, n_alt = 0
   Insn 176: point = 132, n_alt = 0
   Insn 175: point = 132, n_alt = -2
   Insn 174: point = 132, n_alt = 0
   Insn 173: point = 133, n_alt = 0
   Insn 172: point = 133, n_alt = 0
   Insn 171: point = 133, n_alt = 0
   Insn 170: point = 135, n_alt = 2
   Insn 169: point = 137, n_alt = 0
   Insn 168: point = 139, n_alt = 0
  BB 20
   Insn 166: point = 141, n_alt = -1
   Insn 165: point = 141, n_alt = 1
   Insn 164: point = 141, n_alt = 1
   Insn 163: point = 142, n_alt = -2
   Insn 162: point = 143, n_alt = 0
   Insn 161: point = 143, n_alt = 0
   Insn 160: point = 143, n_alt = -2
   Insn 159: point = 143, n_alt = 0
   Insn 158: point = 144, n_alt = 0
   Insn 157: point = 145, n_alt = 0
   Insn 156: point = 145, n_alt = 0
   Insn 155: point = 147, n_alt = 0
   Insn 154: point = 148, n_alt = -2
   Insn 153: point = 150, n_alt = 0
   Insn 152: point = 152, n_alt = 0
   Insn 151: point = 153, n_alt = 1
   Insn 150: point = 153, n_alt = 0
   Insn 149: point = 153, n_alt = 0
   Insn 148: point = 153, n_alt = -2
   Insn 147: point = 153, n_alt = 0
   Insn 146: point = 153, n_alt = 0
  BB 19
   Insn 144: point = 154, n_alt = -1
   Insn 143: point = 154, n_alt = 0
   Insn 142: point = 155, n_alt = 0
   Insn 141: point = 157, n_alt = 0
   Insn 140: point = 159, n_alt = 0
 r82: [12..160]
 r83: [114..115]
 r84: [112..113]
 r85: [110..111]
 r86: [104..105]
 r87: [99..100]
 r88: [97..98]
 r89: [87..93]
 r90: [89..90]
 r91: [87..88]
 r92: [82..83]
 r93: [80..81]
 r94: [75..76]
 r95: [73..74]
 r96: [71..72]
 r97: [65..66]
 r98: [60..61]
 r99: [55..57]
 r100: [48..52]
 r101: [50..51]
 r102: [48..49]
 r103: [42..43]
 r104: [40..41]
 r105: [33..34]
 r106: [31..32]
 r107: [29..30]
 r108: [156..157]
 r109: [154..155]
 r110: [151..152]
 r111: [149..150]
 r112: [144..148]
 r113: [143..145]
 r114: [136..137]
 r115: [134..135]
 r116: [132..133]
 r117: [19..20]
 r118: [17..18]
 r119: [122..123]
 r120: [8..11] [2..4]
 r121: [0..1]
 r122: [116..117]
 r123: [108..109]
 r124: [101..102]
 r125: [94..95]
 r126: [91..92]
 r127: [84..85]
 r128: [77..78]
 r129: [69..70]
 r130: [67..68]
 r131: [62..63]
 r132: [58..59]
 r133: [55..56]
 r134: [53..54]
 r135: [44..45]
 r136: [38..39]
 r137: [35..36]
 r138: [27..28]
 r139: [24..25]
 r140: [22..23]
 r141: [158..159]
 r142: [146..147]
 r143: [141..142]
 r144: [138..139]
 r145: [130..131]
 r146: [127..128]
 r147: [125..126]
 r148: [5..7]
 r149: [5..6]
 r150: [14..15]
Compressing live ranges: from 161 to 128 - 79%
Ranges after the compression:
 r82: [8..127]
 r83: [92..93]
 r84: [90..91]
 r85: [88..89]
 r86: [84..85]
 r87: [80..81]
 r88: [78..79]
 r89: [70..75]
 r90: [72..73]
 r91: [70..71]
 r92: [66..67]
 r93: [64..65]
 r94: [60..61]
 r95: [58..59]
 r96: [56..57]
 r97: [50..51]
 r98: [46..47]
 r99: [42..43]
 r100: [36..39]
 r101: [38..39]
 r102: [36..37]
 r103: [32..33]
 r104: [30..31]
 r105: [24..25]
 r106: [22..23]
 r107: [20..21]
 r108: [124..125]
 r109: [122..123]
 r110: [120..121]
 r111: [118..119]
 r112: [114..117]
 r113: [114..115]
 r114: [108..109]
 r115: [106..107]
 r116: [104..105]
 r117: [12..13]
 r118: [10..11]
 r119: [96..97]
 r120: [6..7] [2..3]
 r121: [0..1]
 r122: [94..95]
 r123: [86..87]
 r124: [82..83]
 r125: [76..77]
 r126: [74..75]
 r127: [68..69]
 r128: [62..63]
 r129: [54..55]
 r130: [52..53]
 r131: [48..49]
 r132: [44..45]
 r133: [42..43]
 r134: [40..41]
 r135: [34..35]
 r136: [28..29]
 r137: [26..27]
 r138: [18..19]
 r139: [16..17]
 r140: [14..15]
 r141: [126..127]
 r142: [116..117]
 r143: [112..113]
 r144: [110..111]
 r145: [102..103]
 r146: [100..101]
 r147: [98..99]
 r148: [4..5]
 r149: [4..5]
 r150: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 252
changing reg in insn 225
changing reg in insn 175
changing reg in insn 160
changing reg in insn 148
changing reg in insn 120
changing reg in insn 86
changing reg in insn 72
changing reg in insn 49
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 48
changing reg in insn 52
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 71
changing reg in insn 78
changing reg in insn 79
changing reg in insn 83
changing reg in insn 85
changing reg in insn 90
changing reg in insn 92
changing reg in insn 94
changing reg in insn 97
changing reg in insn 95
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 103
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 119
changing reg in insn 141
changing reg in insn 142
changing reg in insn 142
changing reg in insn 143
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 158
changing reg in insn 156
changing reg in insn 159
changing reg in insn 169
changing reg in insn 170
changing reg in insn 170
changing reg in insn 171
changing reg in insn 171
changing reg in insn 174
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 186
changing reg in insn 202
changing reg in insn 203
changing reg in insn 228
changing reg in insn 209
changing reg in insn 128
changing reg in insn 108
changing reg in insn 23
changing reg in insn 231
changing reg in insn 231
changing reg in insn 235
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 38
changing reg in insn 39
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 60
changing reg in insn 61
changing reg in insn 66
changing reg in insn 67
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 100
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 113
changing reg in insn 114
changing reg in insn 123
changing reg in insn 124
changing reg in insn 134
changing reg in insn 135
changing reg in insn 135
changing reg in insn 136
changing reg in insn 140
changing reg in insn 141
changing reg in insn 155
changing reg in insn 156
changing reg in insn 163
changing reg in insn 164
changing reg in insn 168
changing reg in insn 169
changing reg in insn 178
changing reg in insn 179
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 193
changing reg in insn 206
changing reg in insn 208
changing reg in insn 207
changing reg in insn 208
changing reg in insn 219
changing reg in insn 220
deleting insn with uid = 34.
deleting insn with uid = 43.
deleting insn with uid = 72.
deleting insn with uid = 75.
deleting insn with uid = 86.
deleting insn with uid = 120.
deleting insn with uid = 123.
deleting insn with uid = 148.
deleting insn with uid = 160.
deleting insn with uid = 163.
deleting insn with uid = 175.
deleting insn with uid = 178.
deleting insn with uid = 202.
deleting insn with uid = 225.
deleting insn with uid = 231.
deleting insn with uid = 235.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 161.
verify found no changes in insn with uid = 176.
verify found no changes in insn with uid = 200.
verify found no changes in insn with uid = 226.


find_entry

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={69d,63u,2e} r1={17d,6u} r2={11d} r3={1d,8u} r7={34d,148u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1e} r17={52d,15u} r18={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 1077{834d,240u,3e} in 165{155 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 252 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 252 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 252 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [11 namelen+0 S4 A32])
            (const_int 14 [0xe]))) "fs/namei.c":96:8 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "fs/namei.c":96:8 806 {*jcc}
     (nil)
 -> 11)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [11 namelen+0 S4 A32])
        (const_int 14 [0xe])) "fs/namei.c":97:17 75 {*movsi_internal}
     (nil))
(code_label 11 10 12 4 16 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":99:16 75 {*movsi_internal}
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f:SI (reg/f:SI 0 ax [122]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":99:16 75 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (const_int 4 [0x4])) [5 _1->i_size+0 S4 A32])) "fs/namei.c":99:21 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (lshiftrt:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":99:30 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [orig:84 _2 ] [84])
            (const_int 16 [0x10]))
        (nil)))
(insn 17 16 18 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 entries+0 S4 A32])
        (reg:SI 0 ax [orig:85 _3 ] [85])) "fs/namei.c":99:13 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [23 res_dir+0 S4 A32])) "fs/namei.c":100:14 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (mem/f:SI (reg/f:SI 0 ax [123]) [1 *res_dir_58(D)+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":100:14 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [11 namelen+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":101:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "fs/namei.c":101:8 806 {*jcc}
     (nil)
 -> 26)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 238 5 (set (reg/f:SI 0 ax [orig:120 _47 ] [120])
        (const_int 0 [0])) "fs/namei.c":102:16 75 {*movsi_internal}
     (nil))
(jump_insn 238 23 239 5 (set (pc)
        (label_ref 229)) "fs/namei.c":102:16 807 {jump}
     (nil)
 -> 229)
(barrier 239 238 26)
(code_label 26 239 27 6 17 (nil) [1 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 56 [0x38])) [11 namelen+0 S4 A32])
            (const_int 2 [0x2]))) "fs/namei.c":104:8 11 {*cmpsi_1}
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "fs/namei.c":104:8 806 {*jcc}
     (nil)
 -> 98)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [8 name+0 S4 A32])) "fs/namei.c":104:25 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 32 31 33 7 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7f2fcf338c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 4 [0x4]))) "fs/namei.c":104:25 823 {*call_value}
     (nil)
    (nil))
(insn 33 32 35 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":104:25 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 35 33 36 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:86 _4 ] [86])
            (const_int 46 [0x2e]))) "fs/namei.c":104:22 9 {*cmpqi_1}
     (nil))
(jump_insn 36 35 37 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "fs/namei.c":104:22 806 {*jcc}
     (nil)
 -> 98)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [8 name+0 S4 A32])) "fs/namei.c":105:10 75 {*movsi_internal}
     (nil))
(insn 39 38 40 8 (parallel [
            (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
                (plus:SI (reg/f:SI 0 ax [124])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":105:10 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [8 name+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 40 39 41 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:87 _5 ] [87])) "fs/namei.c":105:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 41 40 42 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7f2fcf338c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 4 [0x4]))) "fs/namei.c":105:10 823 {*call_value}
     (nil)
    (nil))
(insn 42 41 44 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":105:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 42 45 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:88 _6 ] [88])
            (const_int 46 [0x2e]))) "fs/namei.c":104:50 9 {*cmpqi_1}
     (nil))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "fs/namei.c":104:50 806 {*jcc}
     (nil)
 -> 98)
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":107:14 75 {*movsi_internal}
     (nil))
(insn 48 47 49 9 (set (reg/f:SI 1 dx [orig:89 _7 ] [89])
        (mem/f:SI (reg/f:SI 0 ax [125]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":107:14 75 {*movsi_internal}
     (nil))
(insn 49 48 50 9 (set (reg/f:SI 0 ax [126])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":107:30 75 {*movsi_internal}
     (nil))
(insn 50 49 51 9 (set (reg/f:SI 0 ax [orig:90 current.4_8 ] [90])
        (mem/f/c:SI (reg/f:SI 0 ax [126]) [6 current+0 S4 A32])) "fs/namei.c":107:30 75 {*movsi_internal}
     (nil))
(insn 51 50 52 9 (set (reg/f:SI 0 ax [orig:91 _9 ] [91])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:90 current.4_8 ] [90])
                (const_int 628 [0x274])) [2 current.4_8->root+0 S4 A32])) "fs/namei.c":107:30 75 {*movsi_internal}
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:89 _7 ] [89])
            (reg/f:SI 0 ax [orig:91 _9 ] [91]))) "fs/namei.c":107:12 11 {*cmpsi_1}
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/namei.c":107:12 806 {*jcc}
     (nil)
 -> 58)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 240 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [11 namelen+0 S4 A32])
        (const_int 1 [0x1])) "fs/namei.c":108:21 75 {*movsi_internal}
     (nil))
(jump_insn 240 55 241 10 (set (pc)
        (label_ref 98)) 807 {jump}
     (nil)
 -> 98)
(barrier 241 240 58)
(code_label 58 241 59 11 20 (nil) [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":109:19 75 {*movsi_internal}
     (nil))
(insn 61 60 62 11 (set (reg/f:SI 0 ax [orig:92 _10 ] [92])
        (mem/f:SI (reg/f:SI 0 ax [127]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":109:19 75 {*movsi_internal}
     (nil))
(insn 62 61 63 11 (set (reg:HI 0 ax [orig:93 _11 ] [93])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:92 _10 ] [92])
                (const_int 46 [0x2e])) [4 _10->i_num+0 S2 A16])) "fs/namei.c":109:24 76 {*movhi_internal}
     (nil))
(insn 63 62 64 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:93 _11 ] [93])
            (const_int 1 [0x1]))) "fs/namei.c":109:17 10 {*cmphi_1}
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "fs/namei.c":109:17 806 {*jcc}
     (nil)
 -> 98)
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":111:29 75 {*movsi_internal}
     (nil))
(insn 67 66 68 12 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (mem/f:SI (reg/f:SI 0 ax [128]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":111:29 75 {*movsi_internal}
     (nil))
(insn 68 67 69 12 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:94 _12 ] [94])
                (const_int 44 [0x2c])) [4 _12->i_dev+0 S2 A32])) "fs/namei.c":111:34 76 {*movhi_internal}
     (nil))
(insn 69 68 70 12 (set (reg:SI 0 ax [orig:96 _14 ] [96])
        (zero_extend:SI (reg:HI 0 ax [orig:95 _13 ] [95]))) "fs/namei.c":111:18 144 {*zero_extendhisi2}
     (nil))
(insn 70 69 71 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":111:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 71 70 73 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:96 _14 ] [96])) "fs/namei.c":111:18 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 73 71 74 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_super") [flags 0x41]  <function_decl 0x7f2fcf30e000 get_super>) [0 get_super S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":111:18 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 74 73 76 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":111:18 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 76 74 77 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 sb+0 S4 A32])
        (reg:SI 0 ax [129])) "fs/namei.c":111:18 75 {*movsi_internal}
     (nil))
(insn 77 76 78 12 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 sb+0 S4 A32])) "fs/namei.c":112:19 75 {*movsi_internal}
     (nil))
(insn 78 77 79 12 (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [130])
                (const_int 92 [0x5c])) [2 sb_64->s_imount+0 S4 A32])) "fs/namei.c":112:19 75 {*movsi_internal}
     (nil))
(insn 79 78 80 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:97 _15 ] [97])
            (const_int 0 [0]))) "fs/namei.c":112:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "fs/namei.c":112:16 806 {*jcc}
     (nil)
 -> 98)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":113:17 75 {*movsi_internal}
     (nil))
(insn 83 82 84 13 (set (reg/f:SI 0 ax [orig:98 _16 ] [98])
        (mem/f:SI (reg/f:SI 0 ax [131]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":113:17 75 {*movsi_internal}
     (nil))
(insn 84 83 85 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":113:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 85 84 87 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:98 _16 ] [98])) "fs/namei.c":113:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 87 85 88 13 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":113:17 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 88 87 89 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":113:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 89 88 90 13 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [21 sb+0 S4 A32])) "fs/namei.c":114:28 75 {*movsi_internal}
     (nil))
(insn 90 89 91 13 (set (reg/f:SI 1 dx [orig:99 _17 ] [99])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [132])
                (const_int 92 [0x5c])) [2 sb_64->s_imount+0 S4 A32])) "fs/namei.c":114:28 75 {*movsi_internal}
     (nil))
(insn 91 90 92 13 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":114:24 75 {*movsi_internal}
     (nil))
(insn 92 91 93 13 (set (mem/f:SI (reg/f:SI 0 ax [133]) [2 *dir_56(D)+0 S4 A32])
        (reg/f:SI 1 dx [orig:99 _17 ] [99])) "fs/namei.c":114:24 75 {*movsi_internal}
     (nil))
(insn 93 92 94 13 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":115:18 75 {*movsi_internal}
     (nil))
(insn 94 93 95 13 (set (reg/f:SI 0 ax [orig:100 _18 ] [100])
        (mem/f:SI (reg/f:SI 0 ax [134]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":115:18 75 {*movsi_internal}
     (nil))
(insn 95 94 96 13 (set (reg:HI 1 dx [orig:101 _19 ] [101])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:100 _18 ] [100])
                (const_int 48 [0x30])) [4 _18->i_count+0 S2 A32])) "fs/namei.c":115:23 76 {*movhi_internal}
     (nil))
(insn 96 95 97 13 (parallel [
            (set (reg:HI 1 dx [orig:102 _21 ] [102])
                (plus:HI (reg:HI 1 dx [orig:101 _19 ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":115:32 212 {*addhi_1}
     (nil))
(insn 97 96 98 13 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:100 _18 ] [100])
                (const_int 48 [0x30])) [4 _18->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:102 _21 ] [102])) "fs/namei.c":115:32 76 {*movhi_internal}
     (nil))
(code_label 98 97 99 14 19 (nil) [6 uses])
(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 14 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":119:20 75 {*movsi_internal}
     (nil))
(insn 101 100 102 14 (set (reg/f:SI 0 ax [orig:103 _22 ] [103])
        (mem/f:SI (reg/f:SI 0 ax [135]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":119:20 75 {*movsi_internal}
     (nil))
(insn 102 101 103 14 (set (reg:HI 0 ax [orig:104 _23 ] [104])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:103 _22 ] [103])
                (const_int 14 [0xe])) [4 _22->i_zone[0]+0 S2 A16])) "fs/namei.c":119:33 76 {*movhi_internal}
     (nil))
(insn 103 102 104 14 (set (reg:SI 0 ax [136])
        (zero_extend:SI (reg:HI 0 ax [orig:104 _23 ] [104]))) "fs/namei.c":119:17 144 {*zero_extendhisi2}
     (nil))
(insn 104 103 105 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 block+0 S4 A32])
        (reg:SI 0 ax [136])) "fs/namei.c":119:17 75 {*movsi_internal}
     (nil))
(insn 105 104 106 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [11 block+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":119:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 106 105 107 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "fs/namei.c":119:8 806 {*jcc}
     (nil)
 -> 111)
(note 107 106 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 242 15 (set (reg/f:SI 0 ax [orig:120 _47 ] [120])
        (const_int 0 [0])) "fs/namei.c":120:16 75 {*movsi_internal}
     (nil))
(jump_insn 242 108 243 15 (set (pc)
        (label_ref 229)) "fs/namei.c":120:16 807 {jump}
     (nil)
 -> 229)
(barrier 243 242 111)
(code_label 111 243 112 16 21 (nil) [1 uses])
(note 112 111 113 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 16 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":121:23 75 {*movsi_internal}
     (nil))
(insn 114 113 115 16 (set (reg/f:SI 0 ax [orig:105 _24 ] [105])
        (mem/f:SI (reg/f:SI 0 ax [137]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":121:23 75 {*movsi_internal}
     (nil))
(insn 115 114 116 16 (set (reg:HI 0 ax [orig:106 _25 ] [106])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:105 _24 ] [105])
                (const_int 44 [0x2c])) [4 _24->i_dev+0 S2 A32])) "fs/namei.c":121:28 76 {*movhi_internal}
     (nil))
(insn 116 115 117 16 (set (reg:SI 0 ax [orig:107 _26 ] [107])
        (zero_extend:SI (reg:HI 0 ax [orig:106 _25 ] [106]))) "fs/namei.c":121:16 144 {*zero_extendhisi2}
     (nil))
(insn 117 116 118 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":121:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 118 117 119 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 block+0 S4 A32])) "fs/namei.c":121:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 119 118 121 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:107 _26 ] [107])) "fs/namei.c":121:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 121 119 122 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7f2fcf30e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":121:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 122 121 124 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":121:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 124 122 125 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [138])) "fs/namei.c":121:16 75 {*movsi_internal}
     (nil))
(insn 125 124 126 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":121:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 126 125 127 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "fs/namei.c":121:8 806 {*jcc}
     (nil)
 -> 131)
(note 127 126 128 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 244 17 (set (reg/f:SI 0 ax [orig:120 _47 ] [120])
        (const_int 0 [0])) "fs/namei.c":122:16 75 {*movsi_internal}
     (nil))
(jump_insn 244 128 245 17 (set (pc)
        (label_ref 229)) "fs/namei.c":122:16 807 {jump}
     (nil)
 -> 229)
(barrier 245 244 131)
(code_label 131 245 132 18 22 (nil) [1 uses])
(note 132 131 133 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 18 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":123:7 75 {*movsi_internal}
     (nil))
(insn 134 133 135 18 (set (reg/f:SI 0 ax [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":124:8 75 {*movsi_internal}
     (nil))
(insn 135 134 136 18 (set (reg/f:SI 0 ax [140])
        (mem/f:SI (reg/f:SI 0 ax [139]) [8 bh_71->b_data+0 S4 A32])) "fs/namei.c":124:8 75 {*movsi_internal}
     (nil))
(insn 136 135 246 18 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [140])) "fs/namei.c":124:8 75 {*movsi_internal}
     (nil))
(jump_insn 246 136 247 18 (set (pc)
        (label_ref 216)) "fs/namei.c":125:11 807 {jump}
     (nil)
 -> 216)
(barrier 247 246 218)
(code_label 218 247 139 19 28 (nil) [1 uses])
(note 139 218 140 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 19 (set (reg/f:SI 0 ax [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":126:42 75 {*movsi_internal}
     (nil))
(insn 141 140 142 19 (set (reg/f:SI 0 ax [orig:108 _27 ] [108])
        (mem/f:SI (reg/f:SI 0 ax [141]) [8 bh_44->b_data+0 S4 A32])) "fs/namei.c":126:42 75 {*movsi_internal}
     (nil))
(insn 142 141 143 19 (parallel [
            (set (reg/f:SI 0 ax [orig:109 _28 ] [109])
                (plus:SI (reg/f:SI 0 ax [orig:108 _27 ] [108])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":126:38 209 {*addsi_1}
     (nil))
(insn 143 142 144 19 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [1 de+0 S4 A32])
            (reg/f:SI 0 ax [orig:109 _28 ] [109]))) "fs/namei.c":126:12 11 {*cmpsi_1}
     (nil))
(jump_insn 144 143 145 19 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "fs/namei.c":126:12 806 {*jcc}
     (nil)
 -> 194)
(note 145 144 146 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":127:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 147 146 149 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 bh+0 S4 A32])) "fs/namei.c":127:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 149 147 150 20 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":127:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 150 149 151 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":127:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 151 150 152 20 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":128:16 75 {*movsi_internal}
     (nil))
(insn 152 151 153 20 (set (reg:SI 0 ax [orig:110 i.5_29 ] [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])) "fs/namei.c":129:40 75 {*movsi_internal}
     (nil))
(insn 153 152 154 20 (parallel [
            (set (reg:SI 0 ax [orig:111 _30 ] [111])
                (lshiftrt:SI (reg:SI 0 ax [orig:110 i.5_29 ] [110])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":129:40 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [orig:110 i.5_29 ] [110])
            (const_int 64 [0x40]))
        (nil)))
(insn 154 153 155 20 (set (reg:SI 1 dx [orig:112 _31 ] [112])
        (reg:SI 0 ax [orig:111 _30 ] [111])) "fs/namei.c":129:27 75 {*movsi_internal}
     (nil))
(insn 155 154 156 20 (set (reg/f:SI 0 ax [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":129:27 75 {*movsi_internal}
     (nil))
(insn 156 155 157 20 (set (reg/f:SI 0 ax [orig:113 _32 ] [113])
        (mem/f:SI (reg/f:SI 0 ax [142]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":129:27 75 {*movsi_internal}
     (nil))
(insn 157 156 158 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":129:27 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 158 157 159 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:112 _31 ] [112])) "fs/namei.c":129:27 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 159 158 161 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:113 _32 ] [113])) "fs/namei.c":129:27 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 161 159 162 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bmap") [flags 0x41]  <function_decl 0x7f2fcf30ed00 bmap>) [0 bmap S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":129:27 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 162 161 164 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":129:27 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 164 162 165 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 block+0 S4 A32])
        (reg:SI 0 ax [143])) "fs/namei.c":129:27 75 {*movsi_internal}
     (nil))
(insn 165 164 166 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [11 block+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":129:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 166 165 167 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "fs/namei.c":129:16 806 {*jcc}
     (nil)
 -> 182)
(note 167 166 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 21 (set (reg/f:SI 0 ax [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [22 dir+0 S4 A32])) "fs/namei.c":130:31 75 {*movsi_internal}
     (nil))
(insn 169 168 170 21 (set (reg/f:SI 0 ax [orig:114 _33 ] [114])
        (mem/f:SI (reg/f:SI 0 ax [144]) [2 *dir_56(D)+0 S4 A32])) "fs/namei.c":130:31 75 {*movsi_internal}
     (nil))
(insn 170 169 171 21 (set (reg:HI 0 ax [orig:115 _34 ] [115])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:114 _33 ] [114])
                (const_int 44 [0x2c])) [4 _33->i_dev+0 S2 A32])) "fs/namei.c":130:36 76 {*movhi_internal}
     (nil))
(insn 171 170 172 21 (set (reg:SI 0 ax [orig:116 _35 ] [116])
        (zero_extend:SI (reg:HI 0 ax [orig:115 _34 ] [115]))) "fs/namei.c":130:24 144 {*zero_extendhisi2}
     (nil))
(insn 172 171 173 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":130:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 173 172 174 21 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 block+0 S4 A32])) "fs/namei.c":130:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 174 173 176 21 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:116 _35 ] [116])) "fs/namei.c":130:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 176 174 177 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7f2fcf30e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":130:24 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 177 176 179 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":130:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 179 177 180 21 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [145])) "fs/namei.c":130:24 75 {*movsi_internal}
     (nil))
(insn 180 179 181 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":129:66 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 181 180 182 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 189)
            (pc))) "fs/namei.c":129:66 806 {*jcc}
     (nil)
 -> 189)
(code_label 182 181 183 22 25 (nil) [1 uses])
(note 183 182 184 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 22 (set (reg:SI 0 ax [orig:117 i.6_36 ] [117])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])) "fs/namei.c":131:19 75 {*movsi_internal}
     (nil))
(insn 185 184 186 22 (parallel [
            (set (reg:SI 0 ax [orig:118 _37 ] [118])
                (plus:SI (reg:SI 0 ax [orig:117 i.6_36 ] [117])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":131:19 209 {*addsi_1}
     (nil))
(insn 186 185 248 22 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])
        (reg:SI 0 ax [orig:118 _37 ] [118])) "fs/namei.c":131:19 75 {*movsi_internal}
     (nil))
(jump_insn 248 186 249 22 (set (pc)
        (label_ref 216)) "fs/namei.c":132:17 807 {jump}
     (nil)
 -> 216)
(barrier 249 248 189)
(code_label 189 249 190 23 26 (nil) [1 uses])
(note 190 189 191 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 23 (set (reg/f:SI 0 ax [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":134:16 75 {*movsi_internal}
     (nil))
(insn 192 191 193 23 (set (reg/f:SI 0 ax [147])
        (mem/f:SI (reg/f:SI 0 ax [146]) [8 bh_81->b_data+0 S4 A32])) "fs/namei.c":134:16 75 {*movsi_internal}
     (nil))
(insn 193 192 194 23 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [147])) "fs/namei.c":134:16 75 {*movsi_internal}
     (nil))
(code_label 194 193 195 24 24 (nil) [1 uses])
(note 195 194 196 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":136:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 197 196 198 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 de+0 S4 A32])) "fs/namei.c":136:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 198 197 199 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 name+0 S4 A32])) "fs/namei.c":136:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 199 198 200 24 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [11 namelen+0 S4 A32])) "fs/namei.c":136:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 200 199 201 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("match") [flags 0x3]  <function_decl 0x7f2fcf349500 match>) [0 match S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":136:13 823 {*call_value}
     (nil)
    (nil))
(insn 201 200 203 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":136:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 203 201 204 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:119 _38 ] [119])
            (const_int 0 [0]))) "fs/namei.c":136:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 204 203 205 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) "fs/namei.c":136:12 806 {*jcc}
     (nil)
 -> 212)
(note 205 204 206 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 25 (set (reg/f:SI 0 ax [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [23 res_dir+0 S4 A32])) "fs/namei.c":137:22 75 {*movsi_internal}
     (nil))
(insn 207 206 208 25 (set (reg/f:SI 1 dx [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])) "fs/namei.c":137:22 75 {*movsi_internal}
     (nil))
(insn 208 207 209 25 (set (mem/f:SI (reg/f:SI 0 ax [148]) [1 *res_dir_58(D)+0 S4 A32])
        (reg/f:SI 1 dx [149])) "fs/namei.c":137:22 75 {*movsi_internal}
     (nil))
(insn 209 208 250 25 (set (reg/f:SI 0 ax [orig:120 _47 ] [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":138:20 75 {*movsi_internal}
     (nil))
(jump_insn 250 209 251 25 (set (pc)
        (label_ref 229)) "fs/namei.c":138:20 807 {jump}
     (nil)
 -> 229)
(barrier 251 250 212)
(code_label 212 251 213 26 27 (nil) [1 uses])
(note 213 212 214 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 26 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 20 [0x14])) [1 de+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [1 de+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":140:11 209 {*addsi_1}
     (nil))
(insn 215 214 216 26 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":141:10 209 {*addsi_1}
     (nil))
(code_label 216 215 217 27 23 (nil) [2 uses])
(note 217 216 219 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 219 217 220 27 (set (reg:SI 0 ax [150])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 i+0 S4 A32])) "fs/namei.c":125:14 75 {*movsi_internal}
     (nil))
(insn 220 219 221 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [150])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [11 entries+0 S4 A32]))) "fs/namei.c":125:14 11 {*cmpsi_1}
     (nil))
(jump_insn 221 220 222 27 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) "fs/namei.c":125:14 806 {*jcc}
     (nil)
 -> 218)
(note 222 221 223 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":143:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 224 223 226 28 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 bh+0 S4 A32])) "fs/namei.c":143:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 226 224 227 28 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":143:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 227 226 228 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":143:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 228 227 229 28 (set (reg/f:SI 0 ax [orig:120 _47 ] [120])
        (const_int 0 [0])) "fs/namei.c":144:12 75 {*movsi_internal}
     (nil))
(code_label 229 228 230 29 18 (nil) [4 uses])
(note 230 229 236 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 236 230 253 29 (use (reg/i:SI 0 ax)) "fs/namei.c":145:1 -1
     (nil))
(note 253 236 0 NOTE_INSN_DELETED)

;; Function get_dir (get_dir, funcdef_no=11, decl_uid=1436, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 54:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 84:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 85:  (0) =rm  (1) %0  (2) rn {*addhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 86:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 91:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 113:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 123:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 127:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 129:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 132:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 134:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) qm  (1) qn {*cmpqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 155:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 158:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 165:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 169:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 176:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 180:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 182:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 183:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 189:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 193:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 194:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 199:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 7
EBB 8 9
EBB 10 11
EBB 12
EBB 13
EBB 14 15
EBB 16
EBB 17
EBB 18
EBB 19 20
EBB 21 22
EBB 23 24
EBB 25 26
EBB 27
EBB 28

********** Pseudo live ranges #1: **********

  BB 28
   Insn 223: point = 0, n_alt = -1
   Insn 222: point = 0, n_alt = -2
   Insn 218: point = 1, n_alt = -2
  BB 26
   Insn 239: point = 4, n_alt = -1
   Insn 206: point = 4, n_alt = 0
  BB 16
   Insn 231: point = 5, n_alt = -1
   Insn 114: point = 5, n_alt = 0
   Insn 113: point = 6, n_alt = 0
   Insn 112: point = 6, n_alt = 0
   Insn 111: point = 6, n_alt = -2
   Insn 110: point = 7, n_alt = 0
   Insn 109: point = 8, n_alt = 0
   Insn 108: point = 8, n_alt = 0
  BB 12
   Insn 229: point = 10, n_alt = -1
   Insn 78: point = 10, n_alt = 0
  BB 22
   Insn 235: point = 11, n_alt = -1
   Insn 146: point = 11, n_alt = 0
  BB 24
   Insn 237: point = 12, n_alt = -1
   Insn 170: point = 12, n_alt = 0
   Insn 169: point = 13, n_alt = 0
   Insn 168: point = 13, n_alt = 0
   Insn 167: point = 13, n_alt = -2
   Insn 166: point = 14, n_alt = 0
   Insn 165: point = 15, n_alt = 0
   Insn 164: point = 15, n_alt = 0
  BB 23
   Insn 162: point = 17, n_alt = -1
   Insn 161: point = 17, n_alt = 1
   Insn 160: point = 17, n_alt = 1
   Insn 159: point = 18, n_alt = -2
   Insn 158: point = 19, n_alt = 0
   Insn 157: point = 19, n_alt = 0
   Insn 156: point = 19, n_alt = 0
   Insn 155: point = 20, n_alt = 3
   Insn 154: point = 21, n_alt = 0
   Insn 153: point = 21, n_alt = 0
   Insn 152: point = 21, n_alt = 0
   Insn 151: point = 22, n_alt = -2
  BB 21
   Insn 144: point = 24, n_alt = -1
   Insn 143: point = 24, n_alt = 1
  BB 19
   Insn 136: point = 25, n_alt = -1
   Insn 135: point = 25, n_alt = 1
   Insn 134: point = 25, n_alt = 8
   Insn 133: point = 26, n_alt = -2
   Insn 132: point = 27, n_alt = 0
   Insn 131: point = 27, n_alt = 0
   Insn 130: point = 27, n_alt = 0
   Insn 129: point = 28, n_alt = 0
   Insn 128: point = 28, n_alt = 1
   Insn 127: point = 29, n_alt = 3
   Insn 126: point = 30, n_alt = 0
  BB 17
   Insn 233: point = 32, n_alt = -1
   Insn 119: point = 32, n_alt = 1
  BB 15
   Insn 105: point = 33, n_alt = -1
   Insn 104: point = 33, n_alt = 0
   Insn 103: point = 34, n_alt = -2
   Insn 102: point = 35, n_alt = 0
   Insn 101: point = 35, n_alt = 0
   Insn 100: point = 35, n_alt = 0
   Insn 99: point = 36, n_alt = 0
   Insn 98: point = 36, n_alt = 0
   Insn 97: point = 36, n_alt = 0
  BB 14
   Insn 95: point = 38, n_alt = -1
   Insn 94: point = 38, n_alt = 0
   Insn 93: point = 39, n_alt = 0
   Insn 92: point = 41, n_alt = 0
   Insn 91: point = 43, n_alt = 2
   Insn 90: point = 45, n_alt = 0
   Insn 89: point = 46, n_alt = 1
   Insn 88: point = 47, n_alt = 0
  BB 27
   Insn 241: point = 49, n_alt = -1
  BB 25
   Insn 204: point = 50, n_alt = -1
   Insn 203: point = 50, n_alt = 0
   Insn 202: point = 51, n_alt = 0
   Insn 201: point = 52, n_alt = 1
   Insn 200: point = 53, n_alt = -2
   Insn 199: point = 54, n_alt = 0
   Insn 198: point = 54, n_alt = 0
   Insn 197: point = 54, n_alt = -2
   Insn 196: point = 54, n_alt = 0
   Insn 195: point = 54, n_alt = 0
   Insn 194: point = 54, n_alt = 0
   Insn 193: point = 54, n_alt = 0
   Insn 192: point = 54, n_alt = 0
   Insn 191: point = 54, n_alt = -2
   Insn 190: point = 54, n_alt = 0
   Insn 189: point = 55, n_alt = 0
   Insn 188: point = 55, n_alt = 0
   Insn 187: point = 56, n_alt = 0
   Insn 186: point = 56, n_alt = 0
   Insn 185: point = 56, n_alt = -2
   Insn 184: point = 56, n_alt = 0
   Insn 183: point = 56, n_alt = 0
   Insn 182: point = 56, n_alt = 1
   Insn 181: point = 57, n_alt = 0
   Insn 180: point = 59, n_alt = 2
   Insn 179: point = 61, n_alt = 0
   Insn 178: point = 62, n_alt = 1
   Insn 177: point = 63, n_alt = 0
   Insn 176: point = 65, n_alt = 2
   Insn 175: point = 67, n_alt = 0
  BB 13
   Insn 86: point = 69, n_alt = 3
   Insn 85: point = 70, n_alt = 0
   Insn 84: point = 72, n_alt = 2
   Insn 83: point = 73, n_alt = 0
  BB 11
   Insn 227: point = 75, n_alt = -1
   Insn 73: point = 75, n_alt = 1
   Insn 72: point = 76, n_alt = 0
   Insn 71: point = 78, n_alt = 0
   Insn 70: point = 80, n_alt = 0
  BB 10
   Insn 68: point = 82, n_alt = -1
   Insn 67: point = 82, n_alt = 1
  BB 9
   Insn 225: point = 83, n_alt = -1
   Insn 62: point = 83, n_alt = 0
   Insn 61: point = 83, n_alt = 1
   Insn 60: point = 84, n_alt = 0
   Insn 59: point = 86, n_alt = 0
   Insn 58: point = 88, n_alt = 0
  BB 8
   Insn 56: point = 90, n_alt = -1
   Insn 55: point = 90, n_alt = 0
   Insn 54: point = 90, n_alt = 8
   Insn 53: point = 91, n_alt = -2
   Insn 52: point = 92, n_alt = 0
   Insn 51: point = 92, n_alt = 0
   Insn 50: point = 92, n_alt = 0
   Insn 49: point = 92, n_alt = 0
  BB 7
   Insn 46: point = 93, n_alt = 0
   Insn 45: point = 93, n_alt = 0
   Insn 44: point = 93, n_alt = -2
   Insn 43: point = 93, n_alt = 0
   Insn 42: point = 94, n_alt = 0
   Insn 41: point = 95, n_alt = 0
  BB 6
   Insn 38: point = 96, n_alt = -1
   Insn 37: point = 96, n_alt = 0
   Insn 36: point = 97, n_alt = 2
   Insn 35: point = 99, n_alt = 0
   Insn 34: point = 101, n_alt = 0
   Insn 33: point = 103, n_alt = 0
  BB 5
   Insn 31: point = 105, n_alt = -1
   Insn 30: point = 105, n_alt = 0
   Insn 29: point = 106, n_alt = 0
   Insn 28: point = 108, n_alt = 0
   Insn 27: point = 110, n_alt = 0
  BB 4
   Insn 24: point = 112, n_alt = 0
   Insn 23: point = 112, n_alt = 0
   Insn 22: point = 112, n_alt = -2
   Insn 21: point = 112, n_alt = 0
   Insn 20: point = 113, n_alt = 0
   Insn 19: point = 114, n_alt = 0
  BB 3
   Insn 16: point = 115, n_alt = -1
   Insn 15: point = 115, n_alt = 0
   Insn 14: point = 116, n_alt = 2
   Insn 13: point = 118, n_alt = 0
   Insn 12: point = 120, n_alt = 0
   Insn 11: point = 122, n_alt = 0
  BB 2
   Insn 9: point = 124, n_alt = -1
   Insn 8: point = 124, n_alt = 0
   Insn 7: point = 125, n_alt = 0
   Insn 6: point = 127, n_alt = 0
   Insn 5: point = 129, n_alt = 0
   Insn 243: point = 130, n_alt = 0
  BB 18
   Insn 123: point = 131, n_alt = 0
  BB 20
   Insn 140: point = 132, n_alt = -1
   Insn 139: point = 132, n_alt = 0
 r82: [13..132] [6..9]
 r83: [126..127]
 r84: [124..125]
 r85: [119..120]
 r86: [117..118]
 r87: [115..116]
 r88: [107..108]
 r89: [105..106]
 r90: [100..101]
 r91: [98..99]
 r92: [96..97]
 r93: [90..91]
 r94: [85..86]
 r95: [83..84]
 r96: [77..78]
 r97: [75..76]
 r98: [69..73]
 r99: [71..72]
 r100: [69..70]
 r101: [44..45]
 r102: [42..43]
 r103: [40..41]
 r104: [38..39]
 r105: [35..36]
 r106: [33..34]
 r107: [7..8]
 r108: [27..30]
 r109: [25..26]
 r110: [14..15]
 r111: [66..67]
 r112: [64..65]
 r113: [60..61]
 r114: [58..59]
 r115: [54..55]
 r116: [52..53]
 r117: [50..51]
 r118: [10..12] [2..5]
 r119: [0..1]
 r120: [128..129]
 r121: [121..122]
 r122: [112..113]
 r123: [109..110]
 r124: [102..103]
 r125: [93..94]
 r126: [87..88]
 r127: [79..80]
 r128: [46..47]
 r129: [28..29]
 r130: [21..22]
 r131: [19..20]
 r132: [17..18]
 r133: [62..63]
 r134: [56..57]
Compressing live ranges: from 133 to 102 - 76%
Ranges after the compression:
 r82: [8..101] [4..5]
 r83: [98..99]
 r84: [96..97]
 r85: [92..93]
 r86: [90..91]
 r87: [88..89]
 r88: [82..83]
 r89: [80..81]
 r90: [76..77]
 r91: [74..75]
 r92: [72..73]
 r93: [68..69]
 r94: [64..65]
 r95: [62..63]
 r96: [58..59]
 r97: [56..57]
 r98: [52..55]
 r99: [54..55]
 r100: [52..53]
 r101: [30..31]
 r102: [28..29]
 r103: [26..27]
 r104: [24..25]
 r105: [22..23]
 r106: [20..21]
 r107: [4..5]
 r108: [18..19]
 r109: [16..17]
 r110: [8..9]
 r111: [50..51]
 r112: [48..49]
 r113: [44..45]
 r114: [42..43]
 r115: [38..39]
 r116: [36..37]
 r117: [34..35]
 r118: [6..7] [2..3]
 r119: [0..1]
 r120: [100..101]
 r121: [94..95]
 r122: [86..87]
 r123: [84..85]
 r124: [78..79]
 r125: [70..71]
 r126: [66..67]
 r127: [60..61]
 r128: [32..33]
 r129: [18..19]
 r130: [14..15]
 r131: [12..13]
 r132: [10..11]
 r133: [46..47]
 r134: [40..41]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 243
changing reg in insn 197
changing reg in insn 191
changing reg in insn 185
changing reg in insn 167
changing reg in insn 111
changing reg in insn 70
changing reg in insn 58
changing reg in insn 44
changing reg in insn 42
changing reg in insn 33
changing reg in insn 27
changing reg in insn 22
changing reg in insn 20
changing reg in insn 11
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 53
changing reg in insn 54
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 73
changing reg in insn 83
changing reg in insn 86
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 86
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 94
changing reg in insn 97
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 108
changing reg in insn 110
changing reg in insn 126
changing reg in insn 130
changing reg in insn 127
changing reg in insn 133
changing reg in insn 134
changing reg in insn 164
changing reg in insn 166
changing reg in insn 175
changing reg in insn 176
changing reg in insn 176
changing reg in insn 177
changing reg in insn 179
changing reg in insn 180
changing reg in insn 180
changing reg in insn 181
changing reg in insn 188
changing reg in insn 190
changing reg in insn 200
changing reg in insn 201
changing reg in insn 202
changing reg in insn 203
changing reg in insn 206
changing reg in insn 170
changing reg in insn 146
changing reg in insn 114
changing reg in insn 78
changing reg in insn 218
changing reg in insn 218
changing reg in insn 222
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 20
changing reg in insn 21
changing reg in insn 27
changing reg in insn 28
changing reg in insn 33
changing reg in insn 34
changing reg in insn 42
changing reg in insn 43
changing reg in insn 58
changing reg in insn 59
changing reg in insn 70
changing reg in insn 71
changing reg in insn 88
changing reg in insn 89
changing reg in insn 127
changing reg in insn 128
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 156
changing reg in insn 159
changing reg in insn 160
changing reg in insn 177
changing reg in insn 178
changing reg in insn 181
changing reg in insn 182
deleting insn with uid = 22.
deleting insn with uid = 44.
deleting insn with uid = 53.
deleting insn with uid = 103.
deleting insn with uid = 111.
deleting insn with uid = 133.
deleting insn with uid = 159.
deleting insn with uid = 167.
deleting insn with uid = 185.
deleting insn with uid = 191.
deleting insn with uid = 197.
deleting insn with uid = 200.
deleting insn with uid = 218.
deleting insn with uid = 222.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 112.
verify found no changes in insn with uid = 131.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 198.


get_dir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={59d,51u} r1={15d,3u} r2={12d} r3={1d,15u} r7={38d,138u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r17={52d,13u} r18={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} 
;;    total ref usage 1112{892d,220u,0e} in 149{138 regular + 11 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 243 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 243 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 243 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [120])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":162:17 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 current.7_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [120]) [6 current+0 S4 A32])) "fs/namei.c":162:17 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:83 current.7_1 ] [83])
                (const_int 628 [0x274])) [2 current.7_1->root+0 S4 A32])) "fs/namei.c":162:17 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":162:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/namei.c":162:8 806 {*jcc}
     (nil)
 -> 17)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 0 ax [121])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":162:35 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 0 ax [orig:85 current.8_3 ] [85])
        (mem/f/c:SI (reg/f:SI 0 ax [121]) [6 current+0 S4 A32])) "fs/namei.c":162:35 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:85 current.8_3 ] [85])
                (const_int 628 [0x274])) [2 current.8_3->root+0 S4 A32])) "fs/namei.c":162:35 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:HI 0 ax [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (const_int 48 [0x30])) [4 _4->i_count+0 S2 A32])) "fs/namei.c":162:41 76 {*movhi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "fs/namei.c":162:24 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "fs/namei.c":162:24 806 {*jcc}
     (nil)
 -> 25)
(code_label 17 16 18 4 30 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":163:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 20 19 21 4 (set (reg/f:SI 0 ax [122])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f2fcf01a2d0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":163:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f2fcf01a2d0 *.LC0>)
        (nil)))
(insn 21 20 23 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [122])) "fs/namei.c":163:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 21 24 4 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7f2fcf338700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":163:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":163:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 25 24 26 5 31 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:SI 0 ax [123])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":164:17 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 0 ax [orig:88 current.9_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [123]) [6 current+0 S4 A32])) "fs/namei.c":164:17 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:88 current.9_6 ] [88])
                (const_int 624 [0x270])) [2 current.9_6->pwd+0 S4 A32])) "fs/namei.c":164:17 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:89 _7 ] [89])
            (const_int 0 [0]))) "fs/namei.c":164:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "fs/namei.c":164:8 806 {*jcc}
     (nil)
 -> 39)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 0 ax [124])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":164:34 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg/f:SI 0 ax [orig:90 current.10_8 ] [90])
        (mem/f/c:SI (reg/f:SI 0 ax [124]) [6 current+0 S4 A32])) "fs/namei.c":164:34 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg/f:SI 0 ax [orig:91 _9 ] [91])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:90 current.10_8 ] [90])
                (const_int 624 [0x270])) [2 current.10_8->pwd+0 S4 A32])) "fs/namei.c":164:34 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:91 _9 ] [91])
                (const_int 48 [0x30])) [4 _9->i_count+0 S2 A32])) "fs/namei.c":164:39 76 {*movhi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:92 _10 ] [92])
            (const_int 0 [0]))) "fs/namei.c":164:23 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) "fs/namei.c":164:23 806 {*jcc}
     (nil)
 -> 47)
(code_label 39 38 40 7 32 (nil) [1 uses])
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":165:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 42 41 43 7 (set (reg/f:SI 0 ax [125])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f2fcf01a360 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":165:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f2fcf01a360 *.LC1>)
        (nil)))
(insn 43 42 45 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [125])) "fs/namei.c":165:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 45 43 46 7 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7f2fcf338700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":165:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 46 45 47 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":165:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 47 46 48 8 33 (nil) [1 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":166:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 50 49 51 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 pathname+0 S4 A32])) "fs/namei.c":166:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 51 50 52 8 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7f2fcf338c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":166:14 823 {*call_value}
     (nil)
    (nil))
(insn 52 51 54 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":166:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 54 52 55 8 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 27 [0x1b])) [0 c+0 S1 A8])
        (reg:QI 0 ax [orig:93 _11 ] [93])) "fs/namei.c":166:12 77 {*movqi_internal}
     (nil))
(insn 55 54 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 27 [0x1b])) [0 c+0 S1 A8])
            (const_int 47 [0x2f]))) "fs/namei.c":166:8 9 {*cmpqi_1}
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "fs/namei.c":166:8 806 {*jcc}
     (nil)
 -> 65)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 9 (set (reg/f:SI 0 ax [126])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":167:24 75 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg/f:SI 0 ax [orig:94 current.11_12 ] [94])
        (mem/f/c:SI (reg/f:SI 0 ax [126]) [6 current+0 S4 A32])) "fs/namei.c":167:24 75 {*movsi_internal}
     (nil))
(insn 60 59 61 9 (set (reg/f:SI 0 ax [orig:95 _13 ] [95])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:94 current.11_12 ] [94])
                (const_int 628 [0x274])) [2 current.11_12->root+0 S4 A32])) "fs/namei.c":167:24 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])
        (reg/f:SI 0 ax [orig:95 _13 ] [95])) "fs/namei.c":167:15 75 {*movsi_internal}
     (nil))
(insn 62 61 225 9 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 48 [0x30])) [8 pathname+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 48 [0x30])) [8 pathname+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":168:17 209 {*addsi_1}
     (nil))
(jump_insn 225 62 226 9 (set (pc)
        (label_ref 81)) 807 {jump}
     (nil)
 -> 81)
(barrier 226 225 65)
(code_label 65 226 66 10 34 (nil) [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 27 [0x1b])) [0 c+0 S1 A8])
            (const_int 0 [0]))) "fs/namei.c":169:15 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 68 67 69 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "fs/namei.c":169:15 806 {*jcc}
     (nil)
 -> 76)
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (set (reg/f:SI 0 ax [127])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":170:24 75 {*movsi_internal}
     (nil))
(insn 71 70 72 11 (set (reg/f:SI 0 ax [orig:96 current.12_14 ] [96])
        (mem/f/c:SI (reg/f:SI 0 ax [127]) [6 current+0 S4 A32])) "fs/namei.c":170:24 75 {*movsi_internal}
     (nil))
(insn 72 71 73 11 (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:96 current.12_14 ] [96])
                (const_int 624 [0x270])) [2 current.12_14->pwd+0 S4 A32])) "fs/namei.c":170:24 75 {*movsi_internal}
     (nil))
(insn 73 72 227 11 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])
        (reg/f:SI 0 ax [orig:97 _15 ] [97])) "fs/namei.c":170:15 75 {*movsi_internal}
     (nil))
(jump_insn 227 73 228 11 (set (pc)
        (label_ref 81)) 807 {jump}
     (nil)
 -> 81)
(barrier 228 227 76)
(code_label 76 228 77 12 36 (nil) [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 229 12 (set (reg/f:SI 0 ax [orig:118 _41 ] [118])
        (const_int 0 [0])) "fs/namei.c":172:16 75 {*movsi_internal}
     (nil))
(jump_insn 229 78 230 12 (set (pc)
        (label_ref 216)) "fs/namei.c":172:16 807 {jump}
     (nil)
 -> 216)
(barrier 230 229 81)
(code_label 81 230 82 13 35 (nil) [2 uses])
(note 82 81 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 13 (set (reg/f:SI 0 ax [orig:98 inode.13_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":173:10 75 {*movsi_internal}
     (nil))
(insn 84 83 85 13 (set (reg:HI 1 dx [orig:99 _17 ] [99])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:98 inode.13_16 ] [98])
                (const_int 48 [0x30])) [4 inode.13_16->i_count+0 S2 A32])) "fs/namei.c":173:10 76 {*movhi_internal}
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg:HI 1 dx [orig:100 _19 ] [100])
                (plus:HI (reg:HI 1 dx [orig:99 _17 ] [99])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":173:19 212 {*addhi_1}
     (nil))
(insn 86 85 211 13 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:98 inode.13_16 ] [98])
                (const_int 48 [0x30])) [4 inode.13_16->i_count+0 S2 A32])
        (reg:HI 1 dx [orig:100 _19 ] [100])) "fs/namei.c":173:19 76 {*movhi_internal}
     (nil))
(code_label 211 86 87 14 46 (nil) [1 uses])
(note 87 211 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 14 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [8 pathname+0 S4 A32])) "fs/namei.c":175:18 75 {*movsi_internal}
     (nil))
(insn 89 88 90 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 thisname+0 S4 A32])
        (reg/f:SI 0 ax [128])) "fs/namei.c":175:18 75 {*movsi_internal}
     (nil))
(insn 90 89 91 14 (set (reg/f:SI 0 ax [orig:101 inode.14_20 ] [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":176:14 75 {*movsi_internal}
     (nil))
(insn 91 90 92 14 (set (reg:HI 0 ax [orig:102 _21 ] [102])
        (mem:HI (reg/f:SI 0 ax [orig:101 inode.14_20 ] [101]) [4 inode.14_20->i_mode+0 S2 A32])) "fs/namei.c":176:14 76 {*movhi_internal}
     (nil))
(insn 92 91 93 14 (set (reg:SI 0 ax [orig:103 _22 ] [103])
        (zero_extend:SI (reg:HI 0 ax [orig:102 _21 ] [102]))) "fs/namei.c":176:14 144 {*zero_extendhisi2}
     (nil))
(insn 93 92 94 14 (parallel [
            (set (reg:SI 0 ax [orig:104 _23 ] [104])
                (and:SI (reg:SI 0 ax [orig:103 _22 ] [103])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":176:14 490 {*andsi_1}
     (nil))
(insn 94 93 95 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:104 _23 ] [104])
            (const_int 16384 [0x4000]))) "fs/namei.c":176:12 11 {*cmpsi_1}
     (nil))
(jump_insn 95 94 96 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "fs/namei.c":176:12 806 {*jcc}
     (nil)
 -> 106)
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (set (reg/f:SI 0 ax [orig:105 inode.15_24 ] [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":176:41 75 {*movsi_internal}
     (nil))
(insn 98 97 99 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":176:41 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 99 98 100 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (const_int 1 [0x1])) "fs/namei.c":176:41 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 100 99 101 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:105 inode.15_24 ] [105])) "fs/namei.c":176:41 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 101 100 102 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":176:41 823 {*call_value}
     (nil)
    (nil))
(insn 102 101 104 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":176:41 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 104 102 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:106 _25 ] [106])
            (const_int 0 [0]))) "fs/namei.c":176:37 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 105 104 106 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) "fs/namei.c":176:37 806 {*jcc}
     (nil)
 -> 117)
(code_label 106 105 107 16 38 (nil) [1 uses])
(note 107 106 108 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 16 (set (reg/f:SI 0 ax [orig:107 inode.16_26 ] [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":177:13 75 {*movsi_internal}
     (nil))
(insn 109 108 110 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":177:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 110 109 112 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:107 inode.16_26 ] [107])) "fs/namei.c":177:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 112 110 113 16 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":177:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 113 112 114 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":177:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 114 113 231 16 (set (reg/f:SI 0 ax [orig:118 _41 ] [118])
        (const_int 0 [0])) "fs/namei.c":178:20 75 {*movsi_internal}
     (nil))
(jump_insn 231 114 232 16 (set (pc)
        (label_ref 216)) "fs/namei.c":178:20 807 {jump}
     (nil)
 -> 216)
(barrier 232 231 117)
(code_label 117 232 118 17 39 (nil) [1 uses])
(note 118 117 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 233 17 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 namelen+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":180:22 75 {*movsi_internal}
     (nil))
(jump_insn 233 119 234 17 (set (pc)
        (label_ref 124)) "fs/namei.c":180:9 807 {jump}
     (nil)
 -> 124)
(barrier 234 233 138)
(code_label 138 234 122 18 42 (nil) [1 uses])
(note 122 138 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 18 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [11 namelen+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [11 namelen+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":181:28 209 {*addsi_1}
     (nil))
(code_label 124 123 125 19 40 (nil) [1 uses])
(note 125 124 126 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 19 (set (reg/f:SI 0 ax [orig:108 pathname.17_27 ] [108])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [8 pathname+0 S4 A32])) "fs/namei.c":180:32 75 {*movsi_internal}
     (nil))
(insn 127 126 128 19 (parallel [
            (set (reg:SI 1 dx [129])
                (plus:SI (reg/f:SI 0 ax [orig:108 pathname.17_27 ] [108])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":180:32 209 {*addsi_1}
     (nil))
(insn 128 127 129 19 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [8 pathname+0 S4 A32])
        (reg:SI 1 dx [129])) "fs/namei.c":180:32 75 {*movsi_internal}
     (nil))
(insn 129 128 130 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":180:32 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 130 129 131 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:108 pathname.17_27 ] [108])) "fs/namei.c":180:32 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 131 130 132 19 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7f2fcf338c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":180:32 823 {*call_value}
     (nil)
    (nil))
(insn 132 131 134 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":180:32 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 134 132 135 19 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 27 [0x1b])) [0 c+0 S1 A8])
        (reg:QI 0 ax [orig:109 _28 ] [109])) "fs/namei.c":180:30 77 {*movqi_internal}
     (nil))
(insn 135 134 136 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 27 [0x1b])) [0 c+0 S1 A8])
            (const_int 0 [0]))) "fs/namei.c":180:57 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 136 135 137 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) "fs/namei.c":180:57 806 {*jcc}
     (nil)
 -> 141)
(note 137 136 139 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 139 137 140 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 27 [0x1b])) [0 c+0 S1 A8])
            (const_int 47 [0x2f]))) "fs/namei.c":180:57 9 {*cmpqi_1}
     (nil))
(jump_insn 140 139 141 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "fs/namei.c":180:57 806 {*jcc}
     (nil)
 -> 138)
(code_label 141 140 142 21 41 (nil) [1 uses])
(note 142 141 143 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 27 [0x1b])) [0 c+0 S1 A8])
            (const_int 0 [0]))) "fs/namei.c":183:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 144 143 145 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) "fs/namei.c":183:12 806 {*jcc}
     (nil)
 -> 149)
(note 145 144 146 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 235 22 (set (reg/f:SI 0 ax [orig:118 _41 ] [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":184:20 75 {*movsi_internal}
     (nil))
(jump_insn 235 146 236 22 (set (pc)
        (label_ref 216)) "fs/namei.c":184:20 807 {jump}
     (nil)
 -> 216)
(barrier 236 235 149)
(code_label 149 236 150 23 43 (nil) [1 uses])
(note 150 149 151 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 23 (set (reg:SI 0 ax [130])
        (reg/f:SI 7 sp)) "fs/namei.c":185:20 75 {*movsi_internal}
     (nil))
(insn 152 151 153 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 0 ax [130])) "fs/namei.c":185:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 153 152 154 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [11 namelen+0 S4 A32])) "fs/namei.c":185:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 154 153 155 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [8 thisname+0 S4 A32])) "fs/namei.c":185:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 155 154 156 23 (parallel [
            (set (reg:SI 0 ax [131])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":185:20 209 {*addsi_1}
     (nil))
(insn 156 155 157 23 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [131])) "fs/namei.c":185:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 157 156 158 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":185:20 823 {*call_value}
     (nil)
    (nil))
(insn 158 157 160 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":185:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 160 158 161 23 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [132])) "fs/namei.c":185:20 75 {*movsi_internal}
     (nil))
(insn 161 160 162 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":185:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 162 161 163 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "fs/namei.c":185:12 806 {*jcc}
     (nil)
 -> 173)
(note 163 162 164 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 24 (set (reg/f:SI 0 ax [orig:110 inode.18_29 ] [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":186:13 75 {*movsi_internal}
     (nil))
(insn 165 164 166 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":186:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 166 165 168 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:110 inode.18_29 ] [110])) "fs/namei.c":186:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 168 166 169 24 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":186:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 169 168 170 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":186:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 170 169 237 24 (set (reg/f:SI 0 ax [orig:118 _41 ] [118])
        (const_int 0 [0])) "fs/namei.c":187:20 75 {*movsi_internal}
     (nil))
(jump_insn 237 170 238 24 (set (pc)
        (label_ref 216)) "fs/namei.c":187:20 807 {jump}
     (nil)
 -> 216)
(barrier 238 237 173)
(code_label 173 238 174 25 44 (nil) [1 uses])
(note 174 173 175 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 25 (set (reg/f:SI 0 ax [orig:111 de.19_30 ] [111])
        (mem/f/c:SI (reg/f:SI 7 sp) [1 de+0 S4 A32])) "fs/namei.c":189:17 75 {*movsi_internal}
     (nil))
(insn 176 175 177 25 (set (reg:HI 0 ax [orig:112 _31 ] [112])
        (mem:HI (reg/f:SI 0 ax [orig:111 de.19_30 ] [111]) [4 de.19_30->inode+0 S2 A16])) "fs/namei.c":189:17 76 {*movhi_internal}
     (nil))
(insn 177 176 178 25 (set (reg:SI 0 ax [133])
        (zero_extend:SI (reg:HI 0 ax [orig:112 _31 ] [112]))) "fs/namei.c":189:13 144 {*zero_extendhisi2}
     (nil))
(insn 178 177 179 25 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 inr+0 S4 A32])
        (reg:SI 0 ax [133])) "fs/namei.c":189:13 75 {*movsi_internal}
     (nil))
(insn 179 178 180 25 (set (reg/f:SI 0 ax [orig:113 inode.20_32 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":190:21 75 {*movsi_internal}
     (nil))
(insn 180 179 181 25 (set (reg:HI 0 ax [orig:114 _33 ] [114])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:113 inode.20_32 ] [113])
                (const_int 44 [0x2c])) [4 inode.20_32->i_dev+0 S2 A32])) "fs/namei.c":190:21 76 {*movhi_internal}
     (nil))
(insn 181 180 182 25 (set (reg:SI 0 ax [134])
        (zero_extend:SI (reg:HI 0 ax [orig:114 _33 ] [114]))) "fs/namei.c":190:14 144 {*zero_extendhisi2}
     (nil))
(insn 182 181 183 25 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 idev+0 S4 A32])
        (reg:SI 0 ax [134])) "fs/namei.c":190:14 75 {*movsi_internal}
     (nil))
(insn 183 182 184 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":191:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 184 183 186 25 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])) "fs/namei.c":191:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 186 184 187 25 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":191:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 187 186 188 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":191:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 188 187 189 25 (set (reg/f:SI 0 ax [orig:115 inode.21_34 ] [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":192:9 75 {*movsi_internal}
     (nil))
(insn 189 188 190 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":192:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 190 189 192 25 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:115 inode.21_34 ] [115])) "fs/namei.c":192:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 192 190 193 25 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":192:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 193 192 194 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":192:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 194 193 195 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":193:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 195 194 196 25 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [11 inr+0 S4 A32])) "fs/namei.c":193:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 196 195 198 25 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [11 idev+0 S4 A32])) "fs/namei.c":193:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 198 196 199 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("iget") [flags 0x41]  <function_decl 0x7f2fcf30e900 iget>) [0 iget S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":193:23 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 199 198 201 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":193:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 201 199 202 25 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])
        (reg/f:SI 0 ax [orig:116 _35 ] [116])) "fs/namei.c":193:21 75 {*movsi_internal}
     (nil))
(insn 202 201 203 25 (set (reg/f:SI 0 ax [orig:117 inode.22_36 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 inode+0 S4 A32])) "fs/namei.c":193:21 75 {*movsi_internal}
     (nil))
(insn 203 202 204 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:117 inode.22_36 ] [117])
            (const_int 0 [0]))) "fs/namei.c":193:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 204 203 205 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) "fs/namei.c":193:12 806 {*jcc}
     (nil)
 -> 209)
(note 205 204 206 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 239 26 (set (reg/f:SI 0 ax [orig:118 _41 ] [118])
        (const_int 0 [0])) "fs/namei.c":194:20 75 {*movsi_internal}
     (nil))
(jump_insn 239 206 240 26 (set (pc)
        (label_ref 216)) "fs/namei.c":194:20 807 {jump}
     (nil)
 -> 216)
(barrier 240 239 209)
(code_label 209 240 210 27 45 (nil) [1 uses])
(note 210 209 241 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn 241 210 242 27 (set (pc)
        (label_ref 211)) "fs/namei.c":175:18 807 {jump}
     (nil)
 -> 211)
(barrier 242 241 216)
(code_label 216 242 217 28 47 (nil) [5 uses])
(note 217 216 223 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 223 217 244 28 (use (reg/i:SI 0 ax)) "fs/namei.c":196:1 -1
     (nil))
(note 244 223 0 NOTE_INSN_DELETED)

;; Function dir_namei (dir_namei, funcdef_no=12, decl_uid=1456, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 39:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) 0  (2) m {*subsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 7 8
EBB 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 60: point = 0, n_alt = -1
   Insn 59: point = 0, n_alt = -2
   Insn 55: point = 1, n_alt = -2
  BB 3
   Insn 62: point = 4, n_alt = -1
   Insn 14: point = 4, n_alt = 0
  BB 8
   Insn 52: point = 5, n_alt = 0
   Insn 51: point = 6, n_alt = 1
   Insn 50: point = 7, n_alt = 0
   Insn 49: point = 8, n_alt = 0
   Insn 48: point = 9, n_alt = 1
   Insn 47: point = 10, n_alt = 0
   Insn 46: point = 11, n_alt = 3
   Insn 45: point = 13, n_alt = 1
   Insn 44: point = 15, n_alt = 0
  BB 7
   Insn 42: point = 16, n_alt = -1
   Insn 41: point = 16, n_alt = 1
   Insn 39: point = 16, n_alt = 8
   Insn 38: point = 17, n_alt = -2
   Insn 37: point = 18, n_alt = 0
   Insn 36: point = 18, n_alt = 0
   Insn 35: point = 18, n_alt = 0
   Insn 34: point = 19, n_alt = 0
   Insn 33: point = 19, n_alt = 1
   Insn 32: point = 20, n_alt = 3
   Insn 31: point = 21, n_alt = 0
  BB 4
   Insn 64: point = 22, n_alt = -1
   Insn 20: point = 22, n_alt = 1
   Insn 19: point = 23, n_alt = 0
  BB 2
   Insn 12: point = 24, n_alt = -1
   Insn 11: point = 24, n_alt = 1
   Insn 10: point = 24, n_alt = 1
   Insn 9: point = 25, n_alt = -2
   Insn 8: point = 26, n_alt = 0
   Insn 7: point = 26, n_alt = 0
   Insn 6: point = 26, n_alt = 0
   Insn 5: point = 26, n_alt = 0
   Insn 66: point = 26, n_alt = 0
  BB 6
   Insn 28: point = 27, n_alt = 1
   Insn 27: point = 28, n_alt = 0
  BB 5
   Insn 25: point = 29, n_alt = -1
   Insn 24: point = 29, n_alt = 0
 r82: [26..26]
 r83: [18..21]
 r84: [16..17]
 r85: [12..13]
 r86: [9..11]
 r87: [2..5]
 r88: [0..1]
 r89: [24..25]
 r90: [22..23]
 r91: [27..28]
 r92: [19..20]
 r93: [14..15]
 r94: [9..10]
 r95: [6..8]
 r96: [6..7]
Compressing live ranges: from 29 to 23 - 79%
Ranges after the compression:
 r82: [20..20]
 r83: [14..15]
 r84: [12..13]
 r85: [8..9]
 r86: [6..7]
 r87: [2..3]
 r88: [0..1]
 r89: [18..19]
 r90: [16..17]
 r91: [21..22]
 r92: [14..15]
 r93: [10..11]
 r94: [6..7]
 r95: [4..5]
 r96: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 66
changing reg in insn 31
changing reg in insn 35
changing reg in insn 32
changing reg in insn 38
changing reg in insn 39
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 52
changing reg in insn 14
changing reg in insn 55
changing reg in insn 55
changing reg in insn 59
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 20
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 44
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
deleting insn with uid = 9.
deleting insn with uid = 38.
deleting insn with uid = 55.
deleting insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 36.


dir_namei

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 7 [sp] 17 [flags]
;;  ref usage 	r0={13d,12u} r1={6d,3u} r2={3d} r7={7d,39u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={13d,3u} r18={2d} r19={1e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 231{172d,57u,2e} in 37{35 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 66 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 66 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 66 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":211:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [8 pathname+0 S4 A32])) "fs/namei.c":211:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_dir") [flags 0x3]  <function_decl 0x7f2fcf349900 get_dir>) [0 get_dir S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":211:17 823 {*call_value}
     (nil)
    (nil))
(insn 8 7 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":211:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 10 8 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])
        (reg:SI 0 ax [89])) "fs/namei.c":211:17 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 dir+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":211:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/namei.c":211:8 806 {*jcc}
     (nil)
 -> 17)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 62 3 (set (reg/f:SI 0 ax [orig:87 _7 ] [87])
        (const_int 0 [0])) "fs/namei.c":212:16 75 {*movsi_internal}
     (nil))
(jump_insn 62 14 63 3 (set (pc)
        (label_ref 53)) "fs/namei.c":212:16 807 {jump}
     (nil)
 -> 53)
(barrier 63 62 17)
(code_label 17 63 18 4 49 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 0 ax [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [8 pathname+0 S4 A32])) "fs/namei.c":213:14 75 {*movsi_internal}
     (nil))
(insn 20 19 64 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 basename+0 S4 A32])
        (reg/f:SI 0 ax [90])) "fs/namei.c":213:14 75 {*movsi_internal}
     (nil))
(jump_insn 64 20 65 4 (set (pc)
        (label_ref 29)) "fs/namei.c":214:11 807 {jump}
     (nil)
 -> 29)
(barrier 65 64 40)
(code_label 40 65 23 5 52 (nil) [1 uses])
(note 23 40 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 7 [0x7])) [0 c+0 S1 A8])
            (const_int 47 [0x2f]))) "fs/namei.c":215:12 9 {*cmpqi_1}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/namei.c":215:12 806 {*jcc}
     (nil)
 -> 29)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg/f:SI 0 ax [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [8 pathname+0 S4 A32])) "fs/namei.c":216:22 75 {*movsi_internal}
     (nil))
(insn 28 27 29 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 basename+0 S4 A32])
        (reg/f:SI 0 ax [91])) "fs/namei.c":216:22 75 {*movsi_internal}
     (nil))
(code_label 29 28 30 7 51 (nil) [2 uses])
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg/f:SI 0 ax [orig:83 pathname.23_1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [8 pathname+0 S4 A32])) "fs/namei.c":214:17 75 {*movsi_internal}
     (nil))
(insn 32 31 33 7 (parallel [
            (set (reg:SI 1 dx [92])
                (plus:SI (reg/f:SI 0 ax [orig:83 pathname.23_1 ] [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":214:17 209 {*addsi_1}
     (nil))
(insn 33 32 34 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [8 pathname+0 S4 A32])
        (reg:SI 1 dx [92])) "fs/namei.c":214:17 75 {*movsi_internal}
     (nil))
(insn 34 33 35 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":214:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 35 34 36 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:83 pathname.23_1 ] [83])) "fs/namei.c":214:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 36 35 37 7 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7f2fcf338c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":214:17 823 {*call_value}
     (nil)
    (nil))
(insn 37 36 39 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":214:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 39 37 41 7 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 7 [0x7])) [0 c+0 S1 A8])
        (reg:QI 0 ax [orig:84 _2 ] [84])) "fs/namei.c":214:15 77 {*movqi_internal}
     (nil))
(insn 41 39 42 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 7 [0x7])) [0 c+0 S1 A8])
            (const_int 0 [0]))) "fs/namei.c":214:12 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "fs/namei.c":214:12 806 {*jcc}
     (nil)
 -> 40)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg/f:SI 0 ax [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [8 pathname+0 S4 A32])) "fs/namei.c":217:25 75 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (minus:SI (reg/f:SI 0 ax [93])
                    (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [8 basename+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":217:25 282 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/f/c:SI (reg/f:SI 16 argp) [8 pathname+0 S4 A32])
            (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [8 basename+0 S4 A32]))
        (nil)))
(insn 46 45 47 8 (parallel [
            (set (reg:SI 1 dx [orig:86 _4 ] [86])
                (plus:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":217:36 209 {*addsi_1}
     (nil))
(insn 47 46 48 8 (set (reg/f:SI 0 ax [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [25 namelen+0 S4 A32])) "fs/namei.c":217:14 75 {*movsi_internal}
     (nil))
(insn 48 47 49 8 (set (mem:SI (reg/f:SI 0 ax [94]) [11 *namelen_18(D)+0 S4 A32])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "fs/namei.c":217:14 75 {*movsi_internal}
     (nil))
(insn 49 48 50 8 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [26 name+0 S4 A32])) "fs/namei.c":218:11 75 {*movsi_internal}
     (nil))
(insn 50 49 51 8 (set (reg/f:SI 1 dx [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 basename+0 S4 A32])) "fs/namei.c":218:11 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (set (mem/f:SI (reg/f:SI 0 ax [95]) [8 *name_20(D)+0 S4 A32])
        (reg/f:SI 1 dx [96])) "fs/namei.c":218:11 75 {*movsi_internal}
     (nil))
(insn 52 51 53 8 (set (reg/f:SI 0 ax [orig:87 _7 ] [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":219:12 75 {*movsi_internal}
     (nil))
(code_label 53 52 54 9 50 (nil) [1 uses])
(note 54 53 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 54 67 9 (use (reg/i:SI 0 ax)) "fs/namei.c":220:1 -1
     (nil))
(note 67 60 0 NOTE_INSN_DELETED)

;; Function add_entry (add_entry, funcdef_no=13, decl_uid=1468, cgraph_uid=14, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 79:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 91:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 117:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
      Creating newreg=164 from oldreg=95, assigning class GENERAL_REGS to r164
  117: {r164:SI=r164:SI<<0x4;clobber flags:CC;}
      REG_DEAD r95:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  250: r164:SI=r95:SI
    Inserting insn reload after:
  251: r96:SI=r164:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 124:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 126:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 128:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
      Creating newreg=165 from oldreg=99, assigning class GENERAL_REGS to r165
  128: {r165:SI=r165:SI<<0x4;clobber flags:CC;}
      REG_DEAD r99:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  252: r165:SI=r99:SI
    Inserting insn reload after:
  253: r100:SI=r165:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 132:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 136:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=166 from oldreg=161, assigning class AREG to r166
  136: {r137:SI=trunc(sign_extend(r166:SI)*sign_extend(r138:SI) 0>>0x20);clobber r166:SI;clobber flags:CC;}
      REG_DEAD r138:SI
      REG_UNUSED r161:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  254: r166:SI=r101:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 137:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=167 from oldreg=137, assigning class GENERAL_REGS to r167
  137: {r167:SI=r167:SI>>0x5;clobber flags:CC;}
      REG_DEAD r137:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  255: r167:SI=r137:SI
    Inserting insn reload after:
  256: r139:SI=r167:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 139:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=168 from oldreg=139, assigning class GENERAL_REGS to r168
  139: {r168:SI=r168:SI-r140:SI;clobber flags:CC;}
      REG_DEAD r140:SI
      REG_DEAD r139:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  257: r168:SI=r139:SI
    Inserting insn reload after:
  258: r102:SI=r168:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 142
	 Choosing alt 0 in insn 142:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 149:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 156:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=169 from oldreg=162, assigning class AREG to r169
  156: {r145:SI=trunc(sign_extend(r169:SI)*sign_extend(r146:SI) 0>>0x20);clobber r169:SI;clobber flags:CC;}
      REG_DEAD r146:SI
      REG_UNUSED r162:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  259: r169:SI=r107:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 157:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=170 from oldreg=145, assigning class GENERAL_REGS to r170
  157: {r170:SI=r170:SI>>0x5;clobber flags:CC;}
      REG_DEAD r145:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  260: r170:SI=r145:SI
    Inserting insn reload after:
  261: r147:SI=r170:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 159:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=171 from oldreg=147, assigning class GENERAL_REGS to r171
  159: {r171:SI=r171:SI-r148:SI;clobber flags:CC;}
      REG_DEAD r148:SI
      REG_DEAD r147:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  262: r171:SI=r147:SI
    Inserting insn reload after:
  263: r108:SI=r171:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 162
	 Choosing alt 0 in insn 162:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 176
	 Choosing alt 0 in insn 176:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 177:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 180:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 187:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 192
	 Choosing alt 0 in insn 192:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 193:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 194:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 195:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 205:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 214:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 215:  (0) =rm  (1) %0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11 12 13
EBB 14 15
EBB 16
EBB 17 18
EBB 19 20
EBB 21 22
EBB 23
EBB 24
EBB 25 26
EBB 27
EBB 28
EBB 29

********** Pseudo live ranges #1: **********

  BB 29
   Insn 228: point = 0, n_alt = -1
   Insn 227: point = 0, n_alt = -2
   Insn 223: point = 1, n_alt = -2
  BB 26
   Insn 244: point = 4, n_alt = -1
   Insn 209: point = 4, n_alt = 0
   Insn 208: point = 5, n_alt = 1
   Insn 207: point = 6, n_alt = 0
   Insn 206: point = 7, n_alt = 0
   Insn 205: point = 8, n_alt = 8
   Insn 204: point = 9, n_alt = 0
  BB 25
   Insn 202: point = 10, n_alt = -1
   Insn 201: point = 10, n_alt = 0
  BB 20
   Insn 240: point = 10, n_alt = -1
   Insn 166: point = 10, n_alt = 1
   Insn 165: point = 10, n_alt = 1
   Insn 164: point = 11, n_alt = 0
   Insn 163: point = 12, n_alt = -2
   Insn 162: point = 14, n_alt = 0
   Insn 161: point = 16, n_alt = 0
   Insn 160: point = 18, n_alt = 0
   Insn 263: point = 20, n_alt = -2
	Hard reg 1 is preferable by r171 with profit 1000
   Insn 159: point = 22, n_alt = 0
   Insn 262: point = 24, n_alt = -2
	Hard reg 1 is preferable by r171 with profit 1000
	Hard reg 0 is preferable by r171 with profit 1000
   Insn 158: point = 26, n_alt = 1
   Insn 261: point = 28, n_alt = -2
	Hard reg 0 is preferable by r170 with profit 1000
   Insn 157: point = 30, n_alt = 0
   Insn 260: point = 31, n_alt = -2
	Hard reg 0 is preferable by r170 with profit 1000
	Hard reg 1 is preferable by r170 with profit 1000
   Insn 156: point = 33, n_alt = 0
   Insn 259: point = 35, n_alt = -2
	Hard reg 2 is preferable by r169 with profit 1000
   Insn 155: point = 36, n_alt = 0
   Insn 154: point = 37, n_alt = 0
   Insn 153: point = 39, n_alt = 0
  BB 24
   Insn 195: point = 41, n_alt = 0
   Insn 194: point = 41, n_alt = 8
   Insn 193: point = 42, n_alt = 0
   Insn 192: point = 44, n_alt = 0
   Insn 191: point = 46, n_alt = 0
   Insn 190: point = 47, n_alt = 0
  BB 22
   Insn 242: point = 49, n_alt = -1
   Insn 182: point = 49, n_alt = -2
   Insn 181: point = 51, n_alt = -2
   Insn 180: point = 52, n_alt = 0
   Insn 179: point = 52, n_alt = 0
   Insn 178: point = 52, n_alt = 0
   Insn 177: point = 53, n_alt = 0
   Insn 176: point = 53, n_alt = 0
   Insn 175: point = 55, n_alt = 0
   Insn 174: point = 56, n_alt = 0
  BB 23
   Insn 187: point = 57, n_alt = 3
  BB 21
   Insn 172: point = 58, n_alt = -1
   Insn 171: point = 58, n_alt = 1
   Insn 170: point = 59, n_alt = 0
  BB 9
   Insn 234: point = 60, n_alt = -1
   Insn 49: point = 60, n_alt = 0
  BB 7
   Insn 232: point = 61, n_alt = -1
   Insn 30: point = 61, n_alt = 0
  BB 5
   Insn 230: point = 62, n_alt = -1
   Insn 18: point = 62, n_alt = 0
  BB 13
   Insn 236: point = 63, n_alt = -1
   Insn 85: point = 63, n_alt = 0
  BB 12
   Insn 83: point = 64, n_alt = -1
   Insn 82: point = 64, n_alt = 1
   Insn 81: point = 64, n_alt = 1
   Insn 80: point = 65, n_alt = -2
   Insn 79: point = 66, n_alt = 0
   Insn 78: point = 66, n_alt = 0
   Insn 77: point = 66, n_alt = -2
   Insn 76: point = 66, n_alt = 0
   Insn 75: point = 66, n_alt = 0
   Insn 74: point = 67, n_alt = 0
   Insn 73: point = 67, n_alt = -2
   Insn 72: point = 69, n_alt = 0
   Insn 71: point = 71, n_alt = 0
   Insn 70: point = 72, n_alt = 1
   Insn 69: point = 72, n_alt = 0
   Insn 68: point = 72, n_alt = 0
   Insn 67: point = 72, n_alt = -2
   Insn 66: point = 72, n_alt = 0
   Insn 65: point = 72, n_alt = 0
  BB 11
   Insn 63: point = 73, n_alt = -1
   Insn 62: point = 73, n_alt = 0
   Insn 61: point = 74, n_alt = 0
   Insn 60: point = 76, n_alt = 0
   Insn 59: point = 78, n_alt = 0
  BB 28
   Insn 246: point = 80, n_alt = -1
  BB 15
   Insn 238: point = 81, n_alt = -1
   Insn 106: point = 81, n_alt = 1
   Insn 105: point = 82, n_alt = 0
   Insn 104: point = 84, n_alt = 0
  BB 27
   Insn 215: point = 86, n_alt = 0
   Insn 214: point = 86, n_alt = 0
  BB 19
   Insn 151: point = 87, n_alt = -1
   Insn 150: point = 87, n_alt = 0
   Insn 149: point = 88, n_alt = 2
   Insn 148: point = 90, n_alt = 0
  BB 18
   Insn 145: point = 92, n_alt = 1
   Insn 144: point = 93, n_alt = 0
   Insn 143: point = 94, n_alt = -2
   Insn 142: point = 96, n_alt = 0
   Insn 141: point = 98, n_alt = 0
   Insn 140: point = 100, n_alt = 0
   Insn 258: point = 101, n_alt = -2
	Hard reg 1 is preferable by r168 with profit 1000
   Insn 139: point = 103, n_alt = 0
   Insn 257: point = 105, n_alt = -2
	Hard reg 1 is preferable by r168 with profit 1000
	Hard reg 0 is preferable by r168 with profit 1000
   Insn 138: point = 107, n_alt = 1
   Insn 256: point = 109, n_alt = -2
	Hard reg 0 is preferable by r167 with profit 1000
   Insn 137: point = 111, n_alt = 0
   Insn 255: point = 112, n_alt = -2
	Hard reg 0 is preferable by r167 with profit 1000
	Hard reg 1 is preferable by r167 with profit 1000
   Insn 136: point = 114, n_alt = 0
   Insn 254: point = 116, n_alt = -2
	Hard reg 2 is preferable by r166 with profit 1000
   Insn 135: point = 117, n_alt = 0
   Insn 134: point = 118, n_alt = 0
   Insn 133: point = 120, n_alt = 0
   Insn 132: point = 121, n_alt = 8
   Insn 131: point = 122, n_alt = 0
   Insn 130: point = 123, n_alt = 1
   Insn 129: point = 124, n_alt = 0
   Insn 253: point = 125, n_alt = -2
	Hard reg 1 is preferable by r165 with profit 1000
   Insn 128: point = 127, n_alt = 0
   Insn 252: point = 128, n_alt = -2
	Hard reg 1 is preferable by r165 with profit 1000
	Hard reg 0 is preferable by r165 with profit 1000
   Insn 127: point = 130, n_alt = -2
   Insn 126: point = 132, n_alt = 0
   Insn 125: point = 134, n_alt = 0
   Insn 124: point = 135, n_alt = 3
   Insn 123: point = 136, n_alt = 0
  BB 17
   Insn 121: point = 138, n_alt = -1
   Insn 120: point = 138, n_alt = 0
   Insn 119: point = 139, n_alt = 0
   Insn 118: point = 141, n_alt = 0
   Insn 251: point = 142, n_alt = -2
	Hard reg 1 is preferable by r164 with profit 1000
   Insn 117: point = 144, n_alt = 0
   Insn 250: point = 145, n_alt = -2
	Hard reg 1 is preferable by r164 with profit 1000
	Hard reg 0 is preferable by r164 with profit 1000
   Insn 116: point = 147, n_alt = 0
  BB 16
   Insn 113: point = 149, n_alt = 1
   Insn 112: point = 150, n_alt = 0
   Insn 111: point = 152, n_alt = 0
  BB 14
   Insn 102: point = 154, n_alt = -1
   Insn 101: point = 154, n_alt = 1
   Insn 100: point = 154, n_alt = 1
   Insn 99: point = 155, n_alt = -2
   Insn 98: point = 156, n_alt = 0
   Insn 97: point = 156, n_alt = 0
   Insn 96: point = 156, n_alt = -2
   Insn 95: point = 156, n_alt = 0
   Insn 94: point = 157, n_alt = 0
   Insn 93: point = 157, n_alt = 0
   Insn 92: point = 157, n_alt = 0
   Insn 91: point = 159, n_alt = 2
   Insn 90: point = 161, n_alt = 0
  BB 10
   Insn 57: point = 163, n_alt = 1
   Insn 56: point = 164, n_alt = 0
   Insn 55: point = 166, n_alt = 0
   Insn 54: point = 167, n_alt = 1
  BB 8
   Insn 47: point = 168, n_alt = -1
   Insn 46: point = 168, n_alt = 1
   Insn 45: point = 168, n_alt = 1
   Insn 44: point = 169, n_alt = -2
   Insn 43: point = 170, n_alt = 0
   Insn 42: point = 170, n_alt = 0
   Insn 41: point = 170, n_alt = -2
   Insn 40: point = 170, n_alt = 0
   Insn 39: point = 171, n_alt = 0
   Insn 38: point = 171, n_alt = 0
   Insn 37: point = 171, n_alt = 0
   Insn 36: point = 173, n_alt = 2
   Insn 35: point = 175, n_alt = 0
  BB 6
   Insn 28: point = 177, n_alt = -1
   Insn 27: point = 177, n_alt = 1
   Insn 26: point = 177, n_alt = 1
   Insn 25: point = 178, n_alt = 0
   Insn 24: point = 180, n_alt = 2
   Insn 23: point = 182, n_alt = 0
  BB 4
   Insn 16: point = 184, n_alt = -1
   Insn 15: point = 184, n_alt = 1
  BB 3
   Insn 12: point = 185, n_alt = 1
  BB 2
   Insn 10: point = 186, n_alt = -1
   Insn 9: point = 186, n_alt = 0
   Insn 6: point = 186, n_alt = 1
   Insn 5: point = 187, n_alt = 0
   Insn 248: point = 188, n_alt = 0
 r82: [64..188] [19..40]
 r83: [179..180]
 r84: [172..173]
 r85: [170..171]
 r86: [75..76]
 r87: [73..74]
 r88: [70..71]
 r89: [68..69]
 r90: [66..67]
 r91: [158..159]
 r92: [156..157]
 r93: [83..84]
 r94: [81..82]
 r95: [146..147]
 r96: [138..142]
 r97: [138..139]
 r98: [131..132]
 r99: [129..130]
 r100: [123..125]
 r101: [108..118]
 r102: [97..101]
 r103: [97..98]
 r104: [95..96]
 r105: [92..94]
 r106: [87..88]
 r107: [27..37]
 r108: [15..20]
 r109: [15..16]
 r110: [13..14]
 r111: [10..12]
 r112: [54..56]
 r113: [52..53]
 r114: [50..51]
 r115: [60..63] [2..4]
 r116: [57..57] [41..49]
 r117: [0..1]
 r118: [186..187]
 r119: [181..182]
 r120: [177..178]
 r121: [174..175]
 r122: [168..169]
 r123: [165..166]
 r124: [163..164]
 r125: [77..78]
 r126: [64..65]
 r127: [160..161]
 r128: [154..155]
 r129: [151..152]
 r130: [149..150]
 r131: [140..141]
 r132: [135..136]
 r133: [133..134]
 r134: [123..124]
 r135: [121..122]
 r136: [119..120]
 r137: [113..114]
 r138: [115..117]
 r139: [106..109]
 r140: [104..107]
 r141: [99..100]
 r142: [92..93]
 r143: [89..90]
 r144: [38..39]
 r145: [32..33]
 r146: [34..36]
 r147: [25..28]
 r148: [23..26]
 r149: [17..18]
 r150: [10..11]
 r151: [58..59]
 r152: [54..55]
 r153: [45..47]
 r154: [43..44]
 r155: [45..46]
 r156: [41..42]
 r157: [8..9]
 r158: [5..7]
 r159: [5..6]
 r164: [143..145]
 r165: [126..128]
 r166: [114..116]
 r167: [110..112]
 r168: [102..105]
 r169: [33..35]
 r170: [29..31]
 r171: [21..24]
Compressing live ranges: from 189 to 147 - 77%
Ranges after the compression:
 r82: [49..146] [16..31]
 r83: [141..142]
 r84: [135..136]
 r85: [133..134]
 r86: [59..60]
 r87: [57..58]
 r88: [55..56]
 r89: [53..54]
 r90: [51..52]
 r91: [123..124]
 r92: [121..122]
 r93: [65..66]
 r94: [63..64]
 r95: [113..114]
 r96: [107..110]
 r97: [107..108]
 r98: [101..102]
 r99: [99..100]
 r100: [95..96]
 r101: [83..90]
 r102: [75..78]
 r103: [75..76]
 r104: [73..74]
 r105: [71..72]
 r106: [67..68]
 r107: [22..29]
 r108: [12..17]
 r109: [12..13]
 r110: [10..11]
 r111: [8..9]
 r112: [42..43]
 r113: [40..41]
 r114: [38..39]
 r115: [47..48] [2..3]
 r116: [44..44] [32..37]
 r117: [0..1]
 r118: [145..146]
 r119: [143..144]
 r120: [139..140]
 r121: [137..138]
 r122: [131..132]
 r123: [129..130]
 r124: [127..128]
 r125: [61..62]
 r126: [49..50]
 r127: [125..126]
 r128: [119..120]
 r129: [117..118]
 r130: [115..116]
 r131: [109..110]
 r132: [105..106]
 r133: [103..104]
 r134: [95..96]
 r135: [93..94]
 r136: [91..92]
 r137: [87..88]
 r138: [89..90]
 r139: [81..84]
 r140: [79..82]
 r141: [77..78]
 r142: [71..72]
 r143: [69..70]
 r144: [30..31]
 r145: [26..27]
 r146: [28..29]
 r147: [20..23]
 r148: [18..21]
 r149: [14..15]
 r150: [8..9]
 r151: [45..46]
 r152: [42..43]
 r153: [36..37]
 r154: [34..35]
 r155: [36..37]
 r156: [32..33]
 r157: [6..7]
 r158: [4..5]
 r159: [4..5]
 r164: [111..112]
 r165: [97..98]
 r166: [88..90]
 r167: [85..86]
 r168: [79..80]
 r169: [27..29]
 r170: [24..25]
 r171: [18..19]

********** Assignment #1: **********

	 Assigning to 166 (cl=AREG, orig=161, freq=2000, tfirst=166, tfreq=2000)...
	   Assign 0 to reload r166 (freq=2000)
	 Assigning to 169 (cl=AREG, orig=162, freq=2000, tfirst=169, tfreq=2000)...
	   Assign 0 to reload r169 (freq=2000)
	 Assigning to 164 (cl=GENERAL_REGS, orig=95, freq=3000, tfirst=164, tfreq=3000)...
	   Assign 0 to reload r164 (freq=3000)
	 Assigning to 165 (cl=GENERAL_REGS, orig=99, freq=3000, tfirst=165, tfreq=3000)...
	   Assign 0 to reload r165 (freq=3000)
	 Assigning to 167 (cl=GENERAL_REGS, orig=137, freq=3000, tfirst=167, tfreq=3000)...
	   Assign 0 to reload r167 (freq=3000)
	 Assigning to 168 (cl=GENERAL_REGS, orig=139, freq=3000, tfirst=168, tfreq=3000)...
	   Assign 0 to reload r168 (freq=3000)
	 Assigning to 170 (cl=GENERAL_REGS, orig=145, freq=3000, tfirst=170, tfreq=3000)...
	   Assign 0 to reload r170 (freq=3000)
	 Assigning to 171 (cl=GENERAL_REGS, orig=147, freq=3000, tfirst=171, tfreq=3000)...
	   Assign 0 to reload r171 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 248
changing reg in insn 160
changing reg in insn 153
changing reg in insn 140
changing reg in insn 133
changing reg in insn 96
changing reg in insn 77
changing reg in insn 67
changing reg in insn 41
changing reg in insn 24
changing reg in insn 25
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 40
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 75
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 95
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 116
changing reg in insn 120
changing reg in insn 119
changing reg in insn 120
changing reg in insn 126
changing reg in insn 127
changing reg in insn 127
changing reg in insn 130
changing reg in insn 134
changing reg in insn 138
changing reg in insn 141
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 145
changing reg in insn 149
changing reg in insn 150
changing reg in insn 154
changing reg in insn 158
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 165
changing reg in insn 174
changing reg in insn 176
changing reg in insn 176
changing reg in insn 178
changing reg in insn 181
changing reg in insn 182
changing reg in insn 209
changing reg in insn 85
changing reg in insn 49
changing reg in insn 30
changing reg in insn 18
changing reg in insn 223
changing reg in insn 187
changing reg in insn 182
changing reg in insn 194
changing reg in insn 223
changing reg in insn 227
changing reg in insn 5
changing reg in insn 6
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 36
changing reg in insn 44
changing reg in insn 45
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 80
changing reg in insn 81
changing reg in insn 90
changing reg in insn 91
changing reg in insn 99
changing reg in insn 100
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 113
changing reg in insn 118
changing reg in insn 119
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 136
changing reg in insn 135
changing reg in insn 136
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 141
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 149
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 155
changing reg in insn 156
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 170
changing reg in insn 171
changing reg in insn 175
changing reg in insn 190
changing reg in insn 192
changing reg in insn 192
changing reg in insn 193
changing reg in insn 191
changing reg in insn 193
changing reg in insn 194
changing reg in insn 204
changing reg in insn 205
changing reg in insn 206
changing reg in insn 208
changing reg in insn 207
changing reg in insn 208
deleting insn with uid = 41.
deleting insn with uid = 44.
deleting insn with uid = 67.
deleting insn with uid = 73.
deleting insn with uid = 77.
deleting insn with uid = 80.
deleting insn with uid = 96.
deleting insn with uid = 99.
deleting insn with uid = 250.
deleting insn with uid = 127.
deleting insn with uid = 252.
deleting insn with uid = 256.
deleting insn with uid = 257.
deleting insn with uid = 261.
deleting insn with uid = 262.
deleting insn with uid = 181.
deleting insn with uid = 223.
deleting insn with uid = 227.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 179.


add_entry

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={72d,65u,1e} r1={20d,13u,1e} r2={11d,7u,1e} r3={1d,8u} r7={19d,119u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1e} r17={49d,11u} r18={5d} r19={2e} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 726{497d,223u,6e} in 162{157 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 248 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 248 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 248 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [23 res_dir+0 S4 A32])) "fs/namei.c":239:14 75 {*movsi_internal}
     (nil))
(insn 6 5 9 2 (set (mem/f:SI (reg/f:SI 0 ax [118]) [1 *res_dir_53(D)+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":239:14 75 {*movsi_internal}
     (nil))
(insn 9 6 10 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [11 namelen+0 S4 A32])
            (const_int 14 [0xe]))) "fs/namei.c":244:8 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) "fs/namei.c":244:8 806 {*jcc}
     (nil)
 -> 13)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [11 namelen+0 S4 A32])
        (const_int 14 [0xe])) "fs/namei.c":245:17 75 {*movsi_internal}
     (nil))
(code_label 13 12 14 4 54 (nil) [1 uses])
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [11 namelen+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":247:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "fs/namei.c":247:8 806 {*jcc}
     (nil)
 -> 21)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 230 5 (set (reg/f:SI 0 ax [orig:115 _43 ] [115])
        (const_int 0 [0])) "fs/namei.c":248:16 75 {*movsi_internal}
     (nil))
(jump_insn 230 18 231 5 (set (pc)
        (label_ref 221)) "fs/namei.c":248:16 807 {jump}
     (nil)
 -> 221)
(barrier 231 230 21)
(code_label 21 231 22 6 55 (nil) [1 uses])
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg/f:SI 0 ax [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":249:30 75 {*movsi_internal}
     (nil))
(insn 24 23 25 6 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (plus:SI (reg/f:SI 0 ax [119])
                (const_int 14 [0xe])) [4 dir_57(D)->i_zone[0]+0 S2 A16])) "fs/namei.c":249:30 76 {*movhi_internal}
     (nil))
(insn 25 24 26 6 (set (reg:SI 0 ax [120])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/namei.c":249:17 144 {*zero_extendhisi2}
     (nil))
(insn 26 25 27 6 (set (mem/c:SI (reg/f:SI 7 sp) [11 block+0 S4 A32])
        (reg:SI 0 ax [120])) "fs/namei.c":249:17 75 {*movsi_internal}
     (nil))
(insn 27 26 28 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 7 sp) [11 block+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":249:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 28 27 29 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/namei.c":249:8 806 {*jcc}
     (nil)
 -> 33)
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 232 7 (set (reg/f:SI 0 ax [orig:115 _43 ] [115])
        (const_int 0 [0])) "fs/namei.c":250:16 75 {*movsi_internal}
     (nil))
(jump_insn 232 30 233 7 (set (pc)
        (label_ref 221)) "fs/namei.c":250:16 807 {jump}
     (nil)
 -> 221)
(barrier 233 232 33)
(code_label 33 233 34 8 57 (nil) [1 uses])
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg/f:SI 0 ax [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":251:25 75 {*movsi_internal}
     (nil))
(insn 36 35 37 8 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [121])
                (const_int 44 [0x2c])) [4 dir_57(D)->i_dev+0 S2 A32])) "fs/namei.c":251:25 76 {*movhi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 0 ax [orig:84 _2 ] [84]))) "fs/namei.c":251:16 144 {*zero_extendhisi2}
     (nil))
(insn 38 37 39 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":251:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 block+0 S4 A32])) "fs/namei.c":251:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 40 39 42 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:85 _3 ] [85])) "fs/namei.c":251:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 42 40 43 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7f2fcf30e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":251:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 43 42 45 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":251:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 43 46 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [122])) "fs/namei.c":251:16 75 {*movsi_internal}
     (nil))
(insn 46 45 47 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":251:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "fs/namei.c":251:8 806 {*jcc}
     (nil)
 -> 52)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 234 9 (set (reg/f:SI 0 ax [orig:115 _43 ] [115])
        (const_int 0 [0])) "fs/namei.c":252:16 75 {*movsi_internal}
     (nil))
(jump_insn 234 49 235 9 (set (pc)
        (label_ref 221)) "fs/namei.c":252:16 807 {jump}
     (nil)
 -> 221)
(barrier 235 234 52)
(code_label 52 235 53 10 58 (nil) [1 uses])
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":253:7 75 {*movsi_internal}
     (nil))
(insn 55 54 56 10 (set (reg/f:SI 0 ax [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])) "fs/namei.c":254:8 75 {*movsi_internal}
     (nil))
(insn 56 55 57 10 (set (reg/f:SI 0 ax [124])
        (mem/f:SI (reg/f:SI 0 ax [123]) [8 bh_60->b_data+0 S4 A32])) "fs/namei.c":254:8 75 {*movsi_internal}
     (nil))
(insn 57 56 218 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [124])) "fs/namei.c":254:8 75 {*movsi_internal}
     (nil))
(code_label 218 57 58 11 69 (nil) [1 uses])
(note 58 218 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])) "fs/namei.c":256:42 75 {*movsi_internal}
     (nil))
(insn 60 59 61 11 (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
        (mem/f:SI (reg/f:SI 0 ax [125]) [8 bh_37->b_data+0 S4 A32])) "fs/namei.c":256:42 75 {*movsi_internal}
     (nil))
(insn 61 60 62 11 (parallel [
            (set (reg/f:SI 0 ax [orig:87 _5 ] [87])
                (plus:SI (reg/f:SI 0 ax [orig:86 _4 ] [86])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":256:38 209 {*addsi_1}
     (nil))
(insn 62 61 63 11 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [1 de+0 S4 A32])
            (reg/f:SI 0 ax [orig:87 _5 ] [87]))) "fs/namei.c":256:12 11 {*cmpsi_1}
     (nil))
(jump_insn 63 62 64 11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "fs/namei.c":256:12 806 {*jcc}
     (nil)
 -> 114)
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":257:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 66 65 68 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 bh+0 S4 A32])) "fs/namei.c":257:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 68 66 69 12 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":257:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 69 68 70 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":257:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 70 69 71 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":258:16 75 {*movsi_internal}
     (nil))
(insn 71 70 72 12 (set (reg:SI 0 ax [orig:88 i.24_6 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])) "fs/namei.c":259:41 75 {*movsi_internal}
     (nil))
(insn 72 71 74 12 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (lshiftrt:SI (reg:SI 0 ax [orig:88 i.24_6 ] [88])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":259:41 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [orig:88 i.24_6 ] [88])
            (const_int 64 [0x40]))
        (nil)))
(insn 74 72 75 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":259:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 75 74 76 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:90 _8 ] [90])) "fs/namei.c":259:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 76 75 78 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [2 dir+0 S4 A32])) "fs/namei.c":259:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 78 76 79 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("create_block") [flags 0x41]  <function_decl 0x7f2fcf30ee00 create_block>) [0 create_block S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":259:21 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 79 78 81 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":259:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 81 79 82 12 (set (mem/c:SI (reg/f:SI 7 sp) [11 block+0 S4 A32])
        (reg:SI 0 ax [126])) "fs/namei.c":259:21 75 {*movsi_internal}
     (nil))
(insn 82 81 83 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 7 sp) [11 block+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":260:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 83 82 84 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "fs/namei.c":260:16 806 {*jcc}
     (nil)
 -> 88)
(note 84 83 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 236 13 (set (reg/f:SI 0 ax [orig:115 _43 ] [115])
        (const_int 0 [0])) "fs/namei.c":261:24 75 {*movsi_internal}
     (nil))
(jump_insn 236 85 237 13 (set (pc)
        (label_ref 221)) "fs/namei.c":261:24 807 {jump}
     (nil)
 -> 221)
(barrier 237 236 88)
(code_label 88 237 89 14 60 (nil) [1 uses])
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 14 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":262:33 75 {*movsi_internal}
     (nil))
(insn 91 90 92 14 (set (reg:HI 0 ax [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 44 [0x2c])) [4 dir_57(D)->i_dev+0 S2 A32])) "fs/namei.c":262:33 76 {*movhi_internal}
     (nil))
(insn 92 91 93 14 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (zero_extend:SI (reg:HI 0 ax [orig:91 _9 ] [91]))) "fs/namei.c":262:24 144 {*zero_extendhisi2}
     (nil))
(insn 93 92 94 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":262:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 94 93 95 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 block+0 S4 A32])) "fs/namei.c":262:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 95 94 97 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:92 _10 ] [92])) "fs/namei.c":262:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 97 95 98 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7f2fcf30e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":262:24 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 98 97 100 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":262:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 100 98 101 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [128])) "fs/namei.c":262:24 75 {*movsi_internal}
     (nil))
(insn 101 100 102 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":262:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 102 101 103 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "fs/namei.c":262:16 806 {*jcc}
     (nil)
 -> 109)
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (set (reg:SI 0 ax [orig:93 i.25_11 ] [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])) "fs/namei.c":263:19 75 {*movsi_internal}
     (nil))
(insn 105 104 106 15 (parallel [
            (set (reg:SI 0 ax [orig:94 _12 ] [94])
                (plus:SI (reg:SI 0 ax [orig:93 i.25_11 ] [93])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":263:19 209 {*addsi_1}
     (nil))
(insn 106 105 238 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])
        (reg:SI 0 ax [orig:94 _12 ] [94])) "fs/namei.c":263:19 75 {*movsi_internal}
     (nil))
(jump_insn 238 106 239 15 (set (pc)
        (label_ref 216)) "fs/namei.c":264:17 807 {jump}
     (nil)
 -> 216)
(barrier 239 238 109)
(code_label 109 239 110 16 61 (nil) [1 uses])
(note 110 109 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 16 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])) "fs/namei.c":266:16 75 {*movsi_internal}
     (nil))
(insn 112 111 113 16 (set (reg/f:SI 0 ax [130])
        (mem/f:SI (reg/f:SI 0 ax [129]) [8 bh_68->b_data+0 S4 A32])) "fs/namei.c":266:16 75 {*movsi_internal}
     (nil))
(insn 113 112 114 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [130])) "fs/namei.c":266:16 75 {*movsi_internal}
     (nil))
(code_label 114 113 115 17 59 (nil) [1 uses])
(note 115 114 116 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 17 (set (reg:SI 0 ax [orig:95 i.26_13 ] [95])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])) "fs/namei.c":268:15 75 {*movsi_internal}
     (nil))
(insn 117 116 251 17 (parallel [
            (set (reg:SI 0 ax [orig:95 i.26_13 ] [95])
                (ashift:SI (reg:SI 0 ax [orig:95 i.26_13 ] [95])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":268:15 655 {*ashlsi3_1}
     (nil))
(insn 251 117 118 17 (set (reg:SI 1 dx [orig:96 _14 ] [96])
        (reg:SI 0 ax [orig:95 i.26_13 ] [95])) "fs/namei.c":268:15 75 {*movsi_internal}
     (nil))
(insn 118 251 119 17 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":268:48 75 {*movsi_internal}
     (nil))
(insn 119 118 120 17 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (mem:SI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 4 [0x4])) [5 dir_57(D)->i_size+0 S4 A32])) "fs/namei.c":268:48 75 {*movsi_internal}
     (nil))
(insn 120 119 121 17 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:96 _14 ] [96])
            (reg:SI 0 ax [orig:97 _15 ] [97]))) "fs/namei.c":268:12 11 {*cmpsi_1}
     (nil))
(jump_insn 121 120 122 17 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "fs/namei.c":268:12 806 {*jcc}
     (nil)
 -> 146)
(note 122 121 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 18 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":269:23 75 {*movsi_internal}
     (nil))
(insn 124 123 125 18 (set (mem:HI (reg/f:SI 0 ax [132]) [4 de_41->inode+0 S2 A16])
        (const_int 0 [0])) "fs/namei.c":269:23 76 {*movhi_internal}
     (nil))
(insn 125 124 126 18 (set (reg:SI 0 ax [133])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])) "fs/namei.c":270:30 75 {*movsi_internal}
     (nil))
(insn 126 125 128 18 (parallel [
            (set (reg:SI 0 ax [orig:98 _16 ] [98])
                (plus:SI (reg:SI 0 ax [133])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":270:30 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 128 126 253 18 (parallel [
            (set (reg:SI 0 ax [orig:99 _17 ] [99])
                (ashift:SI (reg:SI 0 ax [orig:99 _17 ] [99])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":270:35 655 {*ashlsi3_1}
     (nil))
(insn 253 128 129 18 (set (reg:SI 1 dx [orig:100 _18 ] [100])
        (reg:SI 0 ax [orig:99 _17 ] [99])) "fs/namei.c":270:35 75 {*movsi_internal}
     (nil))
(insn 129 253 130 18 (set (reg/f:SI 0 ax [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":270:25 75 {*movsi_internal}
     (nil))
(insn 130 129 131 18 (set (mem:SI (plus:SI (reg/f:SI 0 ax [134])
                (const_int 4 [0x4])) [5 dir_57(D)->i_size+0 S4 A32])
        (reg:SI 1 dx [orig:100 _18 ] [100])) "fs/namei.c":270:25 75 {*movsi_internal}
     (nil))
(insn 131 130 132 18 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":271:25 75 {*movsi_internal}
     (nil))
(insn 132 131 133 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [135])
                (const_int 51 [0x33])) [0 dir_57(D)->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":271:25 77 {*movqi_internal}
     (nil))
(insn 133 132 134 18 (set (reg/f:SI 0 ax [136])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 134 133 135 18 (set (reg:SI 2 cx [orig:101 jiffies.27_19 ] [101])
        (mem/v/c:SI (reg/f:SI 0 ax [136]) [5 jiffies+0 S4 A32])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 135 134 254 18 (set (reg:SI 1 dx [138])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 254 135 136 18 (set (reg:SI 0 ax [161])
        (reg:SI 2 cx [orig:101 jiffies.27_19 ] [101])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 136 254 255 18 (parallel [
            (set (reg:SI 1 dx [137])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [161]))
                            (sign_extend:DI (reg:SI 1 dx [138])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [161]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":272:28 435 {*smulsi3_highpart_1}
     (nil))
(insn 255 136 137 18 (set (reg:SI 0 ax [137])
        (reg:SI 1 dx [137])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 137 255 138 18 (parallel [
            (set (reg:SI 0 ax [137])
                (ashiftrt:SI (reg:SI 0 ax [137])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":272:28 702 {*ashrsi3_1}
     (nil))
(insn 138 137 139 18 (parallel [
            (set (reg:SI 2 cx [140])
                (ashiftrt:SI (reg:SI 2 cx [orig:101 jiffies.27_19 ] [101])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":272:28 694 {ashrsi3_cvt}
     (nil))
(insn 139 138 258 18 (parallel [
            (set (reg:SI 0 ax [139])
                (minus:SI (reg:SI 0 ax [139])
                    (reg:SI 2 cx [140])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":272:28 282 {*subsi_1}
     (nil))
(insn 258 139 140 18 (set (reg:SI 1 dx [orig:102 _20 ] [102])
        (reg:SI 0 ax [139])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 140 258 141 18 (set (reg/f:SI 0 ax [141])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 141 140 142 18 (set (reg:SI 0 ax [orig:103 startup_time.28_21 ] [103])
        (mem/c:SI (reg/f:SI 0 ax [141]) [5 startup_time+0 S4 A32])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 142 141 143 18 (parallel [
            (set (reg:SI 0 ax [orig:104 _22 ] [104])
                (plus:SI (reg:SI 0 ax [orig:103 startup_time.28_21 ] [103])
                    (reg:SI 1 dx [orig:102 _20 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":272:28 209 {*addsi_1}
     (nil))
(insn 143 142 144 18 (set (reg:SI 1 dx [orig:105 _23 ] [105])
        (reg:SI 0 ax [orig:104 _22 ] [104])) "fs/namei.c":272:28 75 {*movsi_internal}
     (nil))
(insn 144 143 145 18 (set (reg/f:SI 0 ax [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":272:26 75 {*movsi_internal}
     (nil))
(insn 145 144 146 18 (set (mem:SI (plus:SI (reg/f:SI 0 ax [142])
                (const_int 40 [0x28])) [5 dir_57(D)->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:105 _23 ] [105])) "fs/namei.c":272:26 75 {*movsi_internal}
     (nil))
(code_label 146 145 147 19 63 (nil) [1 uses])
(note 147 146 148 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 19 (set (reg/f:SI 0 ax [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":274:16 75 {*movsi_internal}
     (nil))
(insn 149 148 150 19 (set (reg:HI 0 ax [orig:106 _24 ] [106])
        (mem:HI (reg/f:SI 0 ax [143]) [4 de_41->inode+0 S2 A16])) "fs/namei.c":274:16 76 {*movhi_internal}
     (nil))
(insn 150 149 151 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:106 _24 ] [106])
            (const_int 0 [0]))) "fs/namei.c":274:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 151 150 152 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) "fs/namei.c":274:12 806 {*jcc}
     (nil)
 -> 212)
(note 152 151 153 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 20 (set (reg/f:SI 0 ax [144])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 154 153 155 20 (set (reg:SI 2 cx [orig:107 jiffies.29_25 ] [107])
        (mem/v/c:SI (reg/f:SI 0 ax [144]) [5 jiffies+0 S4 A32])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 155 154 259 20 (set (reg:SI 1 dx [146])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 259 155 156 20 (set (reg:SI 0 ax [162])
        (reg:SI 2 cx [orig:107 jiffies.29_25 ] [107])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 156 259 260 20 (parallel [
            (set (reg:SI 1 dx [145])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [162]))
                            (sign_extend:DI (reg:SI 1 dx [146])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [162]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":275:28 435 {*smulsi3_highpart_1}
     (nil))
(insn 260 156 157 20 (set (reg:SI 0 ax [145])
        (reg:SI 1 dx [145])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 157 260 158 20 (parallel [
            (set (reg:SI 0 ax [145])
                (ashiftrt:SI (reg:SI 0 ax [145])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":275:28 702 {*ashrsi3_1}
     (nil))
(insn 158 157 159 20 (parallel [
            (set (reg:SI 2 cx [148])
                (ashiftrt:SI (reg:SI 2 cx [orig:107 jiffies.29_25 ] [107])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":275:28 694 {ashrsi3_cvt}
     (nil))
(insn 159 158 263 20 (parallel [
            (set (reg:SI 0 ax [147])
                (minus:SI (reg:SI 0 ax [147])
                    (reg:SI 2 cx [148])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":275:28 282 {*subsi_1}
     (nil))
(insn 263 159 160 20 (set (reg:SI 1 dx [orig:108 _26 ] [108])
        (reg:SI 0 ax [147])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 160 263 161 20 (set (reg/f:SI 0 ax [149])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 161 160 162 20 (set (reg:SI 0 ax [orig:109 startup_time.30_27 ] [109])
        (mem/c:SI (reg/f:SI 0 ax [149]) [5 startup_time+0 S4 A32])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 162 161 163 20 (parallel [
            (set (reg:SI 0 ax [orig:110 _28 ] [110])
                (plus:SI (reg:SI 0 ax [orig:109 startup_time.30_27 ] [109])
                    (reg:SI 1 dx [orig:108 _26 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":275:28 209 {*addsi_1}
     (nil))
(insn 163 162 164 20 (set (reg:SI 1 dx [orig:111 _29 ] [111])
        (reg:SI 0 ax [orig:110 _28 ] [110])) "fs/namei.c":275:28 75 {*movsi_internal}
     (nil))
(insn 164 163 165 20 (set (reg/f:SI 0 ax [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [2 dir+0 S4 A32])) "fs/namei.c":275:26 75 {*movsi_internal}
     (nil))
(insn 165 164 166 20 (set (mem:SI (plus:SI (reg/f:SI 0 ax [150])
                (const_int 8 [0x8])) [5 dir_57(D)->i_mtime+0 S4 A32])
        (reg:SI 1 dx [orig:111 _29 ] [111])) "fs/namei.c":275:26 75 {*movsi_internal}
     (nil))
(insn 166 165 240 20 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])
        (const_int 0 [0])) "fs/namei.c":276:20 75 {*movsi_internal}
     (nil))
(jump_insn 240 166 241 20 (set (pc)
        (label_ref 196)) "fs/namei.c":276:13 807 {jump}
     (nil)
 -> 196)
(barrier 241 240 198)
(code_label 198 241 169 21 68 (nil) [1 uses])
(note 169 198 170 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 21 (set (reg:SI 0 ax [151])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])) "fs/namei.c":277:29 75 {*movsi_internal}
     (nil))
(insn 171 170 172 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [151])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 40 [0x28])) [11 namelen+0 S4 A32]))) "fs/namei.c":277:29 11 {*cmpsi_1}
     (nil))
(jump_insn 172 171 173 21 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "fs/namei.c":277:29 806 {*jcc}
     (nil)
 -> 185)
(note 173 172 174 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 22 (set (reg:SI 1 dx [orig:112 i.32_30 ] [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])) "fs/namei.c":277:47 75 {*movsi_internal}
     (nil))
(insn 175 174 176 22 (set (reg/f:SI 0 ax [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [8 name+0 S4 A32])) "fs/namei.c":277:47 75 {*movsi_internal}
     (nil))
(insn 176 175 177 22 (parallel [
            (set (reg/f:SI 0 ax [orig:113 _31 ] [113])
                (plus:SI (reg/f:SI 0 ax [152])
                    (reg:SI 1 dx [orig:112 i.32_30 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":277:47 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [8 name+0 S4 A32])
            (reg:SI 1 dx [orig:112 i.32_30 ] [112]))
        (nil)))
(insn 177 176 178 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":277:47 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 178 177 179 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:113 _31 ] [113])) "fs/namei.c":277:47 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 179 178 180 22 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7f2fcf338c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":277:47 823 {*call_value}
     (nil)
    (nil))
(insn 180 179 182 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":277:47 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 182 180 242 22 (set (reg:QI 1 dx [orig:116 iftmp.31_44 ] [116])
        (reg:QI 0 ax [orig:114 _32 ] [114])) "fs/namei.c":277:29 77 {*movqi_internal}
     (nil))
(jump_insn 242 182 243 22 (set (pc)
        (label_ref 188)) 807 {jump}
     (nil)
 -> 188)
(barrier 243 242 185)
(code_label 185 243 186 23 66 (nil) [1 uses])
(note 186 185 187 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 23 (set (reg:QI 1 dx [orig:116 iftmp.31_44 ] [116])
        (const_int 0 [0])) "fs/namei.c":277:29 77 {*movqi_internal}
     (nil))
(code_label 188 187 189 24 67 (nil) [1 uses])
(note 189 188 190 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 24 (set (reg/f:SI 2 cx [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":277:29 75 {*movsi_internal}
     (nil))
(insn 191 190 192 24 (set (reg:SI 0 ax [155])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 i+0 S4 A32])) "fs/namei.c":277:29 75 {*movsi_internal}
     (nil))
(insn 192 191 193 24 (parallel [
            (set (reg:SI 0 ax [154])
                (plus:SI (reg:SI 0 ax [155])
                    (reg/f:SI 2 cx [153])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":277:29 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg/f:SI 2 cx [153])
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [11 i+0 S4 A32]))
        (nil)))
(insn 193 192 194 24 (parallel [
            (set (reg/f:SI 0 ax [156])
                (plus:SI (reg:SI 0 ax [154])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":277:29 209 {*addsi_1}
     (nil))
(insn 194 193 195 24 (set (mem:QI (reg/f:SI 0 ax [156]) [0 de_41->name[i_35]+0 S1 A8])
        (reg:QI 1 dx [orig:116 iftmp.31_44 ] [116])) "fs/namei.c":277:29 77 {*movqi_internal}
     (nil))
(insn 195 194 196 24 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":276:40 209 {*addsi_1}
     (nil))
(code_label 196 195 197 25 65 (nil) [1 uses])
(note 197 196 201 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 201 197 202 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [11 i+0 S4 A32])
            (const_int 13 [0xd]))) "fs/namei.c":276:27 11 {*cmpsi_1}
     (nil))
(jump_insn 202 201 203 25 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "fs/namei.c":276:27 806 {*jcc}
     (nil)
 -> 198)
(note 203 202 204 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 26 (set (reg/f:SI 0 ax [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])) "fs/namei.c":278:24 75 {*movsi_internal}
     (nil))
(insn 205 204 206 26 (set (mem:QI (plus:SI (reg/f:SI 0 ax [157])
                (const_int 11 [0xb])) [0 bh_38->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":278:24 77 {*movqi_internal}
     (nil))
(insn 206 205 207 26 (set (reg/f:SI 0 ax [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [23 res_dir+0 S4 A32])) "fs/namei.c":279:22 75 {*movsi_internal}
     (nil))
(insn 207 206 208 26 (set (reg/f:SI 1 dx [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":279:22 75 {*movsi_internal}
     (nil))
(insn 208 207 209 26 (set (mem/f:SI (reg/f:SI 0 ax [158]) [1 *res_dir_53(D)+0 S4 A32])
        (reg/f:SI 1 dx [159])) "fs/namei.c":279:22 75 {*movsi_internal}
     (nil))
(insn 209 208 244 26 (set (reg/f:SI 0 ax [orig:115 _43 ] [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [9 bh+0 S4 A32])) "fs/namei.c":280:20 75 {*movsi_internal}
     (nil))
(jump_insn 244 209 245 26 (set (pc)
        (label_ref 221)) "fs/namei.c":280:20 807 {jump}
     (nil)
 -> 221)
(barrier 245 244 212)
(code_label 212 245 213 27 64 (nil) [1 uses])
(note 213 212 214 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 27 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [1 de+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [1 de+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":282:11 209 {*addsi_1}
     (nil))
(insn 215 214 216 27 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [11 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [11 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":283:10 209 {*addsi_1}
     (nil))
(code_label 216 215 217 28 62 (nil) [1 uses])
(note 217 216 246 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 246 217 247 28 (set (pc)
        (label_ref 218)) "fs/namei.c":256:12 807 {jump}
     (nil)
 -> 218)
(barrier 247 246 221)
(code_label 221 247 222 29 56 (nil) [5 uses])
(note 222 221 228 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 228 222 249 29 (use (reg/i:SI 0 ax)) "fs/namei.c":287:1 -1
     (nil))
(note 249 228 0 NOTE_INSN_DELETED)

;; Function open_namei (open_namei, funcdef_no=14, decl_uid=1170, cgraph_uid=15, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =rm  (1) 0 {*one_cmplsi2_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 27:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 29:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 79:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 82:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 94:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 115:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 119:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 126:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 128:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 132:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 139:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 143:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 151:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 153:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 157:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 159:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 169:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 176:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 177:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 179:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 180:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 184:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 190:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 198:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 199:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 201:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 202:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 206:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 208:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 212:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 222:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 224:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 226:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 228:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 229:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 233:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 235:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 239:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 241:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 250:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 255:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 257:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 267:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 269:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 274:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 280:  (0) =rm  (1) %0  (2) re {*andsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 281:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 283:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 287:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 293:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 297:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 306:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=186 from oldreg=184, assigning class AREG to r186
  306: {r174:SI=trunc(sign_extend(r186:SI)*sign_extend(r175:SI) 0>>0x20);clobber r186:SI;clobber flags:CC;}
      REG_DEAD r175:SI
      REG_UNUSED r184:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  367: r186:SI=r133:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 307:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=187 from oldreg=174, assigning class GENERAL_REGS to r187
  307: {r187:SI=r187:SI>>0x5;clobber flags:CC;}
      REG_DEAD r174:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  368: r187:SI=r174:SI
    Inserting insn reload after:
  369: r176:SI=r187:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 308:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 309:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=188 from oldreg=176, assigning class GENERAL_REGS to r188
  309: {r188:SI=r188:SI-r177:SI;clobber flags:CC;}
      REG_DEAD r177:SI
      REG_DEAD r176:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  370: r188:SI=r176:SI
    Inserting insn reload after:
  371: r134:SI=r188:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 312
	 Choosing alt 0 in insn 312:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 317:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 321:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 325:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 330:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6
EBB 7 8 9
EBB 10
EBB 11 12 13
EBB 14 15
EBB 16 17
EBB 18 19
EBB 20
EBB 21 22
EBB 23 24
EBB 25 26
EBB 27
EBB 28
EBB 29 30
EBB 31
EBB 32

********** Pseudo live ranges #1: **********

  BB 32
   Insn 341: point = 0, n_alt = -1
   Insn 340: point = 0, n_alt = -2
   Insn 336: point = 1, n_alt = -2
  BB 28
   Insn 363: point = 4, n_alt = -1
   Insn 298: point = 4, n_alt = 0
   Insn 297: point = 5, n_alt = 0
   Insn 296: point = 5, n_alt = 0
   Insn 295: point = 5, n_alt = -2
   Insn 294: point = 6, n_alt = 0
   Insn 293: point = 6, n_alt = 0
  BB 22
   Insn 359: point = 7, n_alt = -1
   Insn 245: point = 7, n_alt = 0
  BB 20
   Insn 357: point = 8, n_alt = -1
   Insn 216: point = 8, n_alt = 0
   Insn 215: point = 9, n_alt = 1
   Insn 214: point = 10, n_alt = 0
   Insn 213: point = 11, n_alt = 0
   Insn 212: point = 12, n_alt = 0
   Insn 211: point = 12, n_alt = 0
   Insn 210: point = 12, n_alt = -2
   Insn 209: point = 13, n_alt = 0
   Insn 208: point = 14, n_alt = 0
   Insn 207: point = 14, n_alt = 0
   Insn 206: point = 15, n_alt = 0
   Insn 205: point = 15, n_alt = 0
   Insn 204: point = 15, n_alt = -2
   Insn 203: point = 15, n_alt = 0
   Insn 202: point = 15, n_alt = 0
   Insn 201: point = 15, n_alt = 8
   Insn 200: point = 16, n_alt = 0
   Insn 199: point = 17, n_alt = 3
   Insn 198: point = 18, n_alt = 2
   Insn 197: point = 20, n_alt = 0
   Insn 196: point = 21, n_alt = 0
  BB 19
   Insn 355: point = 23, n_alt = -1
   Insn 191: point = 23, n_alt = 0
   Insn 190: point = 24, n_alt = 0
   Insn 189: point = 24, n_alt = 0
   Insn 188: point = 24, n_alt = -2
   Insn 187: point = 25, n_alt = 0
   Insn 186: point = 26, n_alt = 0
   Insn 185: point = 26, n_alt = 0
   Insn 184: point = 27, n_alt = 0
   Insn 183: point = 27, n_alt = 0
   Insn 182: point = 27, n_alt = -2
   Insn 181: point = 27, n_alt = 0
   Insn 180: point = 27, n_alt = 0
   Insn 179: point = 27, n_alt = 8
   Insn 178: point = 28, n_alt = 0
   Insn 177: point = 29, n_alt = 5
   Insn 176: point = 31, n_alt = 4
   Insn 175: point = 33, n_alt = 0
  BB 18
   Insn 173: point = 35, n_alt = -1
   Insn 172: point = 35, n_alt = 1
   Insn 171: point = 35, n_alt = 1
   Insn 170: point = 36, n_alt = -2
   Insn 169: point = 37, n_alt = 0
   Insn 168: point = 37, n_alt = 0
   Insn 167: point = 37, n_alt = 0
   Insn 166: point = 38, n_alt = 0
   Insn 165: point = 39, n_alt = 0
   Insn 164: point = 40, n_alt = 0
   Insn 163: point = 41, n_alt = -2
   Insn 162: point = 42, n_alt = 0
   Insn 161: point = 43, n_alt = 0
   Insn 160: point = 44, n_alt = 0
   Insn 159: point = 45, n_alt = 8
   Insn 158: point = 46, n_alt = 0
   Insn 157: point = 47, n_alt = 3
   Insn 156: point = 48, n_alt = 0
   Insn 155: point = 49, n_alt = 0
   Insn 154: point = 51, n_alt = 0
   Insn 153: point = 52, n_alt = 3
   Insn 152: point = 53, n_alt = 0
   Insn 151: point = 54, n_alt = 2
   Insn 150: point = 56, n_alt = 0
   Insn 149: point = 58, n_alt = 0
  BB 17
   Insn 353: point = 60, n_alt = -1
   Insn 144: point = 60, n_alt = 0
   Insn 143: point = 61, n_alt = 0
   Insn 142: point = 61, n_alt = 0
   Insn 141: point = 61, n_alt = -2
   Insn 140: point = 62, n_alt = 0
   Insn 139: point = 63, n_alt = 0
   Insn 138: point = 63, n_alt = 0
  BB 16
   Insn 136: point = 65, n_alt = -1
   Insn 135: point = 65, n_alt = 1
   Insn 134: point = 65, n_alt = 1
   Insn 133: point = 66, n_alt = -2
   Insn 132: point = 67, n_alt = 0
   Insn 131: point = 67, n_alt = 0
   Insn 130: point = 67, n_alt = -2
   Insn 129: point = 67, n_alt = 0
   Insn 128: point = 68, n_alt = 0
   Insn 127: point = 68, n_alt = 0
   Insn 126: point = 70, n_alt = 2
   Insn 125: point = 72, n_alt = 0
  BB 15
   Insn 351: point = 74, n_alt = -1
   Insn 120: point = 74, n_alt = 0
   Insn 119: point = 75, n_alt = 0
   Insn 118: point = 75, n_alt = 0
   Insn 117: point = 75, n_alt = -2
   Insn 116: point = 76, n_alt = 0
   Insn 115: point = 77, n_alt = 0
   Insn 114: point = 77, n_alt = 0
  BB 14
   Insn 112: point = 79, n_alt = -1
   Insn 111: point = 79, n_alt = 0
   Insn 110: point = 80, n_alt = -2
   Insn 109: point = 81, n_alt = 0
   Insn 108: point = 81, n_alt = 0
   Insn 107: point = 81, n_alt = 0
   Insn 106: point = 82, n_alt = 0
   Insn 105: point = 82, n_alt = 0
   Insn 104: point = 82, n_alt = 0
  BB 13
   Insn 349: point = 84, n_alt = -1
   Insn 99: point = 84, n_alt = 0
   Insn 98: point = 85, n_alt = 0
   Insn 97: point = 85, n_alt = 0
   Insn 96: point = 85, n_alt = -2
   Insn 95: point = 86, n_alt = 0
   Insn 94: point = 87, n_alt = 0
   Insn 93: point = 87, n_alt = 0
  BB 12
   Insn 91: point = 89, n_alt = -1
   Insn 90: point = 89, n_alt = 0
   Insn 89: point = 90, n_alt = 0
   Insn 88: point = 92, n_alt = 0
  BB 10
   Insn 347: point = 94, n_alt = -1
   Insn 68: point = 94, n_alt = 0
   Insn 67: point = 95, n_alt = 0
   Insn 66: point = 95, n_alt = 0
   Insn 65: point = 95, n_alt = -2
   Insn 64: point = 96, n_alt = 0
   Insn 63: point = 97, n_alt = 0
   Insn 62: point = 97, n_alt = 0
  BB 9
   Insn 345: point = 99, n_alt = -1
   Insn 57: point = 99, n_alt = 0
   Insn 56: point = 100, n_alt = 1
   Insn 55: point = 101, n_alt = 0
   Insn 54: point = 102, n_alt = 0
  BB 8
   Insn 52: point = 103, n_alt = -1
   Insn 51: point = 103, n_alt = 0
   Insn 50: point = 104, n_alt = 0
   Insn 49: point = 106, n_alt = 0
  BB 6
   Insn 343: point = 108, n_alt = -1
   Insn 40: point = 108, n_alt = 0
  BB 24
   Insn 361: point = 109, n_alt = -1
   Insn 261: point = 109, n_alt = 0
  BB 31
   Insn 331: point = 110, n_alt = 0
   Insn 330: point = 111, n_alt = 1
   Insn 329: point = 112, n_alt = 0
   Insn 328: point = 113, n_alt = 0
  BB 30
   Insn 325: point = 114, n_alt = 0
   Insn 324: point = 114, n_alt = 0
   Insn 323: point = 114, n_alt = -2
   Insn 322: point = 115, n_alt = 0
   Insn 321: point = 115, n_alt = 0
  BB 29
   Insn 319: point = 116, n_alt = -1
   Insn 318: point = 116, n_alt = 0
   Insn 317: point = 117, n_alt = 0
   Insn 316: point = 119, n_alt = 0
   Insn 315: point = 120, n_alt = 1
   Insn 314: point = 121, n_alt = 0
   Insn 313: point = 122, n_alt = -2
   Insn 312: point = 124, n_alt = 0
   Insn 311: point = 126, n_alt = 0
   Insn 310: point = 128, n_alt = 0
   Insn 371: point = 129, n_alt = -2
	Hard reg 1 is preferable by r188 with profit 1000
   Insn 309: point = 131, n_alt = 0
   Insn 370: point = 133, n_alt = -2
	Hard reg 1 is preferable by r188 with profit 1000
	Hard reg 0 is preferable by r188 with profit 1000
   Insn 308: point = 135, n_alt = 1
   Insn 369: point = 137, n_alt = -2
	Hard reg 0 is preferable by r187 with profit 1000
   Insn 307: point = 139, n_alt = 0
   Insn 368: point = 140, n_alt = -2
	Hard reg 0 is preferable by r187 with profit 1000
	Hard reg 1 is preferable by r187 with profit 1000
   Insn 306: point = 142, n_alt = 0
   Insn 367: point = 144, n_alt = -2
	Hard reg 2 is preferable by r186 with profit 1000
   Insn 305: point = 145, n_alt = 0
   Insn 304: point = 146, n_alt = 0
   Insn 303: point = 148, n_alt = 0
  BB 27
   Insn 290: point = 150, n_alt = -1
   Insn 289: point = 150, n_alt = 0
   Insn 288: point = 151, n_alt = -2
   Insn 287: point = 152, n_alt = 0
   Insn 286: point = 152, n_alt = 0
   Insn 285: point = 152, n_alt = 0
   Insn 284: point = 152, n_alt = 0
   Insn 283: point = 153, n_alt = 0
   Insn 282: point = 153, n_alt = 0
   Insn 281: point = 155, n_alt = 4
   Insn 280: point = 157, n_alt = 0
   Insn 279: point = 159, n_alt = 0
  BB 26
   Insn 276: point = 161, n_alt = -1
   Insn 275: point = 161, n_alt = 0
   Insn 274: point = 162, n_alt = 0
   Insn 273: point = 164, n_alt = 0
  BB 25
   Insn 271: point = 166, n_alt = -1
   Insn 270: point = 166, n_alt = 0
   Insn 269: point = 167, n_alt = 0
   Insn 268: point = 169, n_alt = 0
   Insn 267: point = 171, n_alt = 2
   Insn 266: point = 173, n_alt = 0
  BB 23
   Insn 259: point = 175, n_alt = -1
   Insn 258: point = 175, n_alt = 1
   Insn 257: point = 175, n_alt = 1
   Insn 256: point = 176, n_alt = -2
   Insn 255: point = 177, n_alt = 0
   Insn 254: point = 177, n_alt = 0
   Insn 253: point = 177, n_alt = -2
   Insn 252: point = 177, n_alt = 0
   Insn 251: point = 177, n_alt = 0
   Insn 250: point = 177, n_alt = 0
  BB 21
   Insn 243: point = 178, n_alt = -1
   Insn 242: point = 178, n_alt = 0
   Insn 241: point = 179, n_alt = 0
   Insn 240: point = 181, n_alt = 0
   Insn 239: point = 182, n_alt = 0
   Insn 238: point = 182, n_alt = 0
   Insn 237: point = 182, n_alt = -2
   Insn 236: point = 182, n_alt = 0
   Insn 235: point = 183, n_alt = 0
   Insn 234: point = 183, n_alt = 0
   Insn 233: point = 184, n_alt = 0
   Insn 232: point = 184, n_alt = 0
   Insn 231: point = 184, n_alt = -2
   Insn 230: point = 184, n_alt = 0
   Insn 229: point = 184, n_alt = 0
   Insn 228: point = 184, n_alt = 1
   Insn 227: point = 185, n_alt = 0
   Insn 226: point = 187, n_alt = 2
   Insn 225: point = 189, n_alt = 0
   Insn 224: point = 190, n_alt = 1
   Insn 223: point = 191, n_alt = 0
   Insn 222: point = 193, n_alt = 2
   Insn 221: point = 195, n_alt = 0
  BB 11
   Insn 86: point = 197, n_alt = -1
   Insn 85: point = 197, n_alt = 1
   Insn 84: point = 197, n_alt = 1
   Insn 83: point = 198, n_alt = -2
   Insn 82: point = 199, n_alt = 0
   Insn 81: point = 199, n_alt = 0
   Insn 80: point = 199, n_alt = 0
   Insn 79: point = 200, n_alt = 3
   Insn 78: point = 201, n_alt = 0
   Insn 77: point = 202, n_alt = 0
   Insn 76: point = 203, n_alt = 0
   Insn 75: point = 204, n_alt = -2
   Insn 74: point = 205, n_alt = 0
   Insn 73: point = 206, n_alt = 0
  BB 7
   Insn 47: point = 208, n_alt = -1
   Insn 46: point = 208, n_alt = 0
   Insn 45: point = 209, n_alt = 0
  BB 5
   Insn 38: point = 211, n_alt = -1
   Insn 37: point = 211, n_alt = 0
   Insn 36: point = 212, n_alt = 0
   Insn 35: point = 213, n_alt = 1
   Insn 34: point = 214, n_alt = -2
   Insn 33: point = 215, n_alt = 0
   Insn 32: point = 215, n_alt = 0
   Insn 31: point = 215, n_alt = 0
   Insn 30: point = 215, n_alt = 0
   Insn 29: point = 216, n_alt = 3
   Insn 28: point = 217, n_alt = 0
   Insn 27: point = 218, n_alt = 3
   Insn 26: point = 219, n_alt = 0
   Insn 25: point = 219, n_alt = 0
   Insn 24: point = 219, n_alt = 0
   Insn 23: point = 220, n_alt = 0
   Insn 22: point = 222, n_alt = 0
   Insn 21: point = 224, n_alt = 0
   Insn 20: point = 226, n_alt = 2
   Insn 19: point = 228, n_alt = 0
   Insn 18: point = 230, n_alt = 0
  BB 4
   Insn 15: point = 232, n_alt = 0
  BB 3
   Insn 13: point = 233, n_alt = -1
   Insn 12: point = 233, n_alt = 0
   Insn 11: point = 234, n_alt = 0
   Insn 10: point = 236, n_alt = 0
  BB 2
   Insn 8: point = 238, n_alt = -1
   Insn 7: point = 238, n_alt = 0
   Insn 6: point = 239, n_alt = 0
   Insn 5: point = 241, n_alt = 0
   Insn 365: point = 242, n_alt = 0
 r82: [114..242] [103..107] [95..98] [85..93] [75..83] [61..73] [24..59] [12..22] [5..6]
 r83: [238..239]
 r84: [233..234]
 r85: [227..228]
 r86: [225..226]
 r87: [223..224]
 r88: [221..222]
 r89: [219..220]
 r90: [213..214]
 r91: [211..212]
 r92: [208..209]
 r93: [103..104]
 r94: [100..102]
 r95: [96..97]
 r96: [202..206]
 r97: [201..205]
 r98: [89..90]
 r99: [86..87]
 r100: [81..82]
 r101: [79..80]
 r102: [76..77]
 r103: [71..72]
 r104: [69..70]
 r105: [67..68]
 r106: [62..63]
 r107: [55..56]
 r108: [52..54]
 r109: [47..49]
 r110: [39..44]
 r111: [38..43]
 r112: [37..42]
 r113: [30..31]
 r114: [27..29]
 r115: [25..26]
 r116: [17..21]
 r117: [17..18]
 r118: [13..14]
 r119: [194..195]
 r120: [192..193]
 r121: [188..189]
 r122: [186..187]
 r123: [182..183]
 r124: [178..179]
 r125: [170..171]
 r126: [168..169]
 r127: [166..167]
 r128: [161..162]
 r129: [156..157]
 r130: [154..155]
 r131: [152..153]
 r132: [150..151]
 r133: [136..146]
 r134: [125..129]
 r135: [125..126]
 r136: [123..124]
 r137: [120..122]
 r138: [116..117]
 r139: [108..110] [99..99] [94..94] [84..84] [74..74] [60..60] [23..23] [7..8] [2..4]
 r140: [0..1]
 r141: [240..241]
 r142: [235..236]
 r143: [229..230]
 r144: [217..218]
 r145: [215..216]
 r146: [105..106]
 r147: [100..101]
 r148: [203..204]
 r149: [199..200]
 r150: [197..198]
 r151: [91..92]
 r152: [65..66]
 r153: [57..58]
 r154: [52..53]
 r155: [50..51]
 r156: [47..48]
 r157: [45..46]
 r158: [40..41]
 r159: [35..36]
 r160: [32..33]
 r161: [27..28]
 r162: [19..20]
 r163: [15..16]
 r164: [9..11]
 r165: [9..10]
 r166: [190..191]
 r167: [184..185]
 r168: [180..181]
 r169: [175..176]
 r170: [172..173]
 r171: [163..164]
 r172: [158..159]
 r173: [147..148]
 r174: [141..142]
 r175: [143..145]
 r176: [134..137]
 r177: [132..135]
 r178: [127..128]
 r179: [120..121]
 r180: [118..119]
 r181: [111..113]
 r182: [111..112]
 r186: [142..144]
 r187: [138..140]
 r188: [130..133]
Compressing live ranges: from 243 to 186 - 76%
Ranges after the compression:
 r82: [82..185] [74..77] [69..70] [62..67] [55..60] [44..53] [19..42] [10..17] [4..5]
 r83: [182..183]
 r84: [178..179]
 r85: [174..175]
 r86: [172..173]
 r87: [170..171]
 r88: [168..169]
 r89: [166..167]
 r90: [160..161]
 r91: [158..159]
 r92: [156..157]
 r93: [74..75]
 r94: [72..73]
 r95: [69..70]
 r96: [154..155]
 r97: [154..155]
 r98: [64..65]
 r99: [62..63]
 r100: [59..60]
 r101: [57..58]
 r102: [55..56]
 r103: [52..53]
 r104: [50..51]
 r105: [48..49]
 r106: [44..45]
 r107: [39..40]
 r108: [37..38]
 r109: [33..34]
 r110: [29..30]
 r111: [29..30]
 r112: [29..30]
 r113: [23..24]
 r114: [21..22]
 r115: [19..20]
 r116: [14..17]
 r117: [14..15]
 r118: [10..11]
 r119: [148..149]
 r120: [146..147]
 r121: [142..143]
 r122: [140..141]
 r123: [136..137]
 r124: [132..133]
 r125: [126..127]
 r126: [124..125]
 r127: [122..123]
 r128: [118..119]
 r129: [114..115]
 r130: [112..113]
 r131: [110..111]
 r132: [108..109]
 r133: [98..105]
 r134: [90..93]
 r135: [90..91]
 r136: [88..89]
 r137: [86..87]
 r138: [82..83]
 r139: [78..79] [71..71] [68..68] [61..61] [54..54] [43..43] [18..18] [6..7] [2..3]
 r140: [0..1]
 r141: [184..185]
 r142: [180..181]
 r143: [176..177]
 r144: [164..165]
 r145: [162..163]
 r146: [76..77]
 r147: [72..73]
 r148: [154..155]
 r149: [152..153]
 r150: [150..151]
 r151: [66..67]
 r152: [46..47]
 r153: [41..42]
 r154: [37..38]
 r155: [35..36]
 r156: [33..34]
 r157: [31..32]
 r158: [29..30]
 r159: [27..28]
 r160: [25..26]
 r161: [21..22]
 r162: [16..17]
 r163: [12..13]
 r164: [8..9]
 r165: [8..9]
 r166: [144..145]
 r167: [138..139]
 r168: [134..135]
 r169: [130..131]
 r170: [128..129]
 r171: [120..121]
 r172: [116..117]
 r173: [106..107]
 r174: [102..103]
 r175: [104..105]
 r176: [96..99]
 r177: [94..97]
 r178: [92..93]
 r179: [86..87]
 r180: [84..85]
 r181: [80..81]
 r182: [80..81]
 r186: [103..105]
 r187: [100..101]
 r188: [94..95]

********** Assignment #1: **********

	 Assigning to 186 (cl=AREG, orig=184, freq=2000, tfirst=186, tfreq=2000)...
	   Assign 0 to reload r186 (freq=2000)
	 Assigning to 187 (cl=GENERAL_REGS, orig=174, freq=3000, tfirst=187, tfreq=3000)...
	   Assign 0 to reload r187 (freq=3000)
	 Assigning to 188 (cl=GENERAL_REGS, orig=176, freq=3000, tfirst=188, tfreq=3000)...
	   Assign 0 to reload r188 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 365
changing reg in insn 323
changing reg in insn 310
changing reg in insn 303
changing reg in insn 295
changing reg in insn 281
changing reg in insn 253
changing reg in insn 237
changing reg in insn 231
changing reg in insn 210
changing reg in insn 204
changing reg in insn 188
changing reg in insn 182
changing reg in insn 149
changing reg in insn 141
changing reg in insn 130
changing reg in insn 117
changing reg in insn 96
changing reg in insn 65
changing reg in insn 18
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 56
changing reg in insn 62
changing reg in insn 64
changing reg in insn 73
changing reg in insn 77
changing reg in insn 74
changing reg in insn 78
changing reg in insn 89
changing reg in insn 90
changing reg in insn 93
changing reg in insn 95
changing reg in insn 104
changing reg in insn 107
changing reg in insn 110
changing reg in insn 111
changing reg in insn 114
changing reg in insn 116
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 127
changing reg in insn 127
changing reg in insn 129
changing reg in insn 138
changing reg in insn 140
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 153
changing reg in insn 155
changing reg in insn 157
changing reg in insn 160
changing reg in insn 165
changing reg in insn 161
changing reg in insn 166
changing reg in insn 162
changing reg in insn 167
changing reg in insn 176
changing reg in insn 177
changing reg in insn 177
changing reg in insn 179
changing reg in insn 185
changing reg in insn 187
changing reg in insn 196
changing reg in insn 199
changing reg in insn 198
changing reg in insn 199
changing reg in insn 207
changing reg in insn 209
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 223
changing reg in insn 225
changing reg in insn 226
changing reg in insn 226
changing reg in insn 227
changing reg in insn 234
changing reg in insn 236
changing reg in insn 241
changing reg in insn 242
changing reg in insn 267
changing reg in insn 268
changing reg in insn 268
changing reg in insn 269
changing reg in insn 269
changing reg in insn 270
changing reg in insn 274
changing reg in insn 275
changing reg in insn 280
changing reg in insn 281
changing reg in insn 281
changing reg in insn 282
changing reg in insn 282
changing reg in insn 284
changing reg in insn 288
changing reg in insn 289
changing reg in insn 304
changing reg in insn 308
changing reg in insn 311
changing reg in insn 312
changing reg in insn 313
changing reg in insn 313
changing reg in insn 315
changing reg in insn 317
changing reg in insn 318
changing reg in insn 331
changing reg in insn 298
changing reg in insn 261
changing reg in insn 245
changing reg in insn 216
changing reg in insn 191
changing reg in insn 144
changing reg in insn 120
changing reg in insn 99
changing reg in insn 68
changing reg in insn 57
changing reg in insn 40
changing reg in insn 336
changing reg in insn 336
changing reg in insn 340
changing reg in insn 5
changing reg in insn 6
changing reg in insn 10
changing reg in insn 11
changing reg in insn 18
changing reg in insn 19
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 56
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
changing reg in insn 83
changing reg in insn 84
changing reg in insn 88
changing reg in insn 89
changing reg in insn 133
changing reg in insn 134
changing reg in insn 149
changing reg in insn 150
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 163
changing reg in insn 164
changing reg in insn 170
changing reg in insn 171
changing reg in insn 175
changing reg in insn 176
changing reg in insn 178
changing reg in insn 179
changing reg in insn 197
changing reg in insn 198
changing reg in insn 200
changing reg in insn 201
changing reg in insn 213
changing reg in insn 215
changing reg in insn 214
changing reg in insn 215
changing reg in insn 223
changing reg in insn 224
changing reg in insn 227
changing reg in insn 228
changing reg in insn 240
changing reg in insn 241
changing reg in insn 256
changing reg in insn 257
changing reg in insn 266
changing reg in insn 267
changing reg in insn 273
changing reg in insn 274
changing reg in insn 279
changing reg in insn 280
changing reg in insn 303
changing reg in insn 304
changing reg in insn 306
changing reg in insn 305
changing reg in insn 306
changing reg in insn 308
changing reg in insn 309
changing reg in insn 310
changing reg in insn 311
changing reg in insn 314
changing reg in insn 315
changing reg in insn 316
changing reg in insn 317
changing reg in insn 328
changing reg in insn 330
changing reg in insn 329
changing reg in insn 330
deleting insn with uid = 34.
deleting insn with uid = 65.
deleting insn with uid = 83.
deleting insn with uid = 96.
deleting insn with uid = 110.
deleting insn with uid = 117.
deleting insn with uid = 130.
deleting insn with uid = 133.
deleting insn with uid = 141.
deleting insn with uid = 170.
deleting insn with uid = 182.
deleting insn with uid = 188.
deleting insn with uid = 204.
deleting insn with uid = 210.
deleting insn with uid = 231.
deleting insn with uid = 237.
deleting insn with uid = 253.
deleting insn with uid = 256.
deleting insn with uid = 288.
deleting insn with uid = 295.
deleting insn with uid = 369.
deleting insn with uid = 370.
deleting insn with uid = 323.
deleting insn with uid = 336.
deleting insn with uid = 340.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 131.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 183.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 232.
verify found no changes in insn with uid = 238.
verify found no changes in insn with uid = 254.
verify found no changes in insn with uid = 286.
verify found no changes in insn with uid = 296.
verify found no changes in insn with uid = 324.


open_namei

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={108d,84u} r1={34d,14u} r2={24d,5u} r3={1d,19u} r4={1d,1u} r7={67d,227u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r16={8e} r17={94d,16u} r18={19d} r20={19d} r21={19d} r22={19d} r23={19d} r24={19d} r25={19d} r26={19d} r27={19d} r28={19d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={19d} r38={19d} r39={19d} r40={19d} r41={19d} r42={19d} r43={19d} r44={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} 
;;    total ref usage 1938{1564d,366u,8e} in 256{237 regular + 19 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 365 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 365 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 365 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":303:15 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [orig:83 _1 ] [83])
                (and:SI (reg:SI 0 ax [141])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":303:15 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 512 [0x200]))
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:83 _1 ] [83])
            (const_int 0 [0]))) "fs/namei.c":303:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "fs/namei.c":303:8 806 {*jcc}
     (nil)
 -> 16)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 0 ax [142])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":303:36 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (and:SI (reg:SI 0 ax [142])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":303:36 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":303:26 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "fs/namei.c":303:26 806 {*jcc}
     (nil)
 -> 16)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 52 [0x34])) [11 flag+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 52 [0x34])) [11 flag+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":304:14 520 {*iorsi_1}
     (nil))
(code_label 16 15 17 5 71 (nil) [2 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg/f:SI 0 ax [143])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":305:28 75 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg/f:SI 0 ax [orig:85 current.33_3 ] [85])
        (mem/f/c:SI (reg/f:SI 0 ax [143]) [6 current+0 S4 A32])) "fs/namei.c":305:28 75 {*movsi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:HI 0 ax [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:85 current.33_3 ] [85])
                (const_int 620 [0x26c])) [4 current.33_3->umask+0 S2 A32])) "fs/namei.c":305:28 76 {*movhi_internal}
     (nil))
(insn 21 20 22 5 (set (reg:SI 0 ax [orig:87 _5 ] [87])
        (zero_extend:SI (reg:HI 0 ax [orig:86 _4 ] [86]))) "fs/namei.c":305:28 144 {*zero_extendhisi2}
     (nil))
(insn 22 21 23 5 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (not:SI (reg:SI 0 ax [orig:87 _5 ] [87]))) "fs/namei.c":305:20 632 {*one_cmplsi2_1}
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg:SI 0 ax [orig:89 _7 ] [89])
                (and:SI (reg:SI 0 ax [orig:88 _6 ] [88])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":305:18 490 {*andsi_1}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [11 mode+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [11 mode+0 S4 A32])
                    (reg:SI 0 ax [orig:89 _7 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":305:10 490 {*andsi_1}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [11 mode+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [11 mode+0 S4 A32])
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":306:10 520 {*iorsi_1}
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":307:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 27 26 28 5 (parallel [
            (set (reg:SI 0 ax [144])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":307:17 209 {*addsi_1}
     (nil))
(insn 28 27 29 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [26  S4 A32])
        (reg:SI 0 ax [144])) "fs/namei.c":307:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 29 28 30 5 (parallel [
            (set (reg:SI 0 ax [145])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":307:17 209 {*addsi_1}
     (nil))
(insn 30 29 31 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg:SI 0 ax [145])) "fs/namei.c":307:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 31 30 32 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 pathname+0 S4 A32])) "fs/namei.c":307:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("dir_namei") [flags 0x3]  <function_decl 0x7f2fcf349b00 dir_namei>) [0 dir_namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":307:17 823 {*call_value}
     (nil)
    (nil))
(insn 33 32 35 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":307:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 35 33 36 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:90 _8 ] [90])) "fs/namei.c":307:15 75 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg/f:SI 0 ax [orig:91 dir.34_9 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":307:15 75 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:91 dir.34_9 ] [91])
            (const_int 0 [0]))) "fs/namei.c":307:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "fs/namei.c":307:8 806 {*jcc}
     (nil)
 -> 43)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 343 6 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":308:16 75 {*movsi_internal}
     (nil))
(jump_insn 343 40 344 6 (set (pc)
        (label_ref 334)) "fs/namei.c":308:16 807 {jump}
     (nil)
 -> 334)
(barrier 344 343 43)
(code_label 43 344 44 7 72 (nil) [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:SI 0 ax [orig:92 namelen.35_10 ] [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 namelen+0 S4 A32])) "fs/namei.c":309:9 75 {*movsi_internal}
     (nil))
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:92 namelen.35_10 ] [92])
            (const_int 0 [0]))) "fs/namei.c":309:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "fs/namei.c":309:8 806 {*jcc}
     (nil)
 -> 71)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:SI 0 ax [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":310:20 75 {*movsi_internal}
     (nil))
(insn 50 49 51 8 (parallel [
            (set (reg:SI 0 ax [orig:93 _11 ] [93])
                (and:SI (reg:SI 0 ax [146])
                    (const_int 579 [0x243])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":310:20 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 579 [0x243]))
        (nil)))
(insn 51 50 52 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:93 _11 ] [93])
            (const_int 0 [0]))) "fs/namei.c":310:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "fs/namei.c":310:12 806 {*jcc}
     (nil)
 -> 60)
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg/f:SI 1 dx [orig:94 dir.36_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":311:24 75 {*movsi_internal}
     (nil))
(insn 55 54 56 9 (set (reg/f:SI 0 ax [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [22 res_inode+0 S4 A32])) "fs/namei.c":311:24 75 {*movsi_internal}
     (nil))
(insn 56 55 57 9 (set (mem/f:SI (reg/f:SI 0 ax [147]) [2 *res_inode_83(D)+0 S4 A32])
        (reg/f:SI 1 dx [orig:94 dir.36_12 ] [94])) "fs/namei.c":311:24 75 {*movsi_internal}
     (nil))
(insn 57 56 345 9 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int 0 [0])) "fs/namei.c":312:20 75 {*movsi_internal}
     (nil))
(jump_insn 345 57 346 9 (set (pc)
        (label_ref 334)) "fs/namei.c":312:20 807 {jump}
     (nil)
 -> 334)
(barrier 346 345 60)
(code_label 60 346 61 10 75 (nil) [1 uses])
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg/f:SI 0 ax [orig:95 dir.37_13 ] [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":314:9 75 {*movsi_internal}
     (nil))
(insn 63 62 64 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":314:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 64 63 66 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:95 dir.37_13 ] [95])) "fs/namei.c":314:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 66 64 67 10 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":314:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 67 66 68 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":314:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 68 67 347 10 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -21 [0xffffffffffffffeb])) "fs/namei.c":315:16 75 {*movsi_internal}
     (nil))
(jump_insn 347 68 348 10 (set (pc)
        (label_ref 334)) "fs/namei.c":315:16 807 {jump}
     (nil)
 -> 334)
(barrier 348 347 71)
(code_label 71 348 72 11 74 (nil) [1 uses])
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 11 (set (reg:SI 1 dx [orig:96 namelen.38_14 ] [96])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 namelen+0 S4 A32])) "fs/namei.c":317:10 75 {*movsi_internal}
     (nil))
(insn 74 73 75 11 (set (reg/f:SI 0 ax [orig:97 basename.39_15 ] [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 basename+0 S4 A32])) "fs/namei.c":317:10 75 {*movsi_internal}
     (nil))
(insn 75 74 76 11 (set (reg:SI 2 cx [148])
        (reg/f:SI 7 sp)) "fs/namei.c":317:10 75 {*movsi_internal}
     (nil))
(insn 76 75 77 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 2 cx [148])) "fs/namei.c":317:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 77 76 78 11 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:96 namelen.38_14 ] [96])) "fs/namei.c":317:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 78 77 79 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:97 basename.39_15 ] [97])) "fs/namei.c":317:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 79 78 80 11 (parallel [
            (set (reg:SI 0 ax [149])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":317:10 209 {*addsi_1}
     (nil))
(insn 80 79 81 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [149])) "fs/namei.c":317:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 81 80 82 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":317:10 823 {*call_value}
     (nil)
    (nil))
(insn 82 81 84 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":317:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 84 82 85 11 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [150])) "fs/namei.c":317:10 75 {*movsi_internal}
     (nil))
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":318:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "fs/namei.c":318:8 806 {*jcc}
     (nil)
 -> 219)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg:SI 0 ax [151])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":319:20 75 {*movsi_internal}
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:SI 0 ax [orig:98 _16 ] [98])
                (and:SI (reg:SI 0 ax [151])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":319:20 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 64 [0x40]))
        (nil)))
(insn 90 89 91 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 _16 ] [98])
            (const_int 0 [0]))) "fs/namei.c":319:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 91 90 92 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "fs/namei.c":319:12 806 {*jcc}
     (nil)
 -> 102)
(note 92 91 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 13 (set (reg/f:SI 0 ax [orig:99 dir.40_17 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":320:13 75 {*movsi_internal}
     (nil))
(insn 94 93 95 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":320:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 95 94 97 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:99 dir.40_17 ] [99])) "fs/namei.c":320:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 97 95 98 13 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":320:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 98 97 99 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":320:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 99 98 349 13 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":321:20 75 {*movsi_internal}
     (nil))
(jump_insn 349 99 350 13 (set (pc)
        (label_ref 334)) "fs/namei.c":321:20 807 {jump}
     (nil)
 -> 334)
(barrier 350 349 102)
(code_label 102 350 103 14 77 (nil) [1 uses])
(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 14 (set (reg/f:SI 0 ax [orig:100 dir.41_18 ] [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":323:14 75 {*movsi_internal}
     (nil))
(insn 105 104 106 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":323:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 106 105 107 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (const_int 2 [0x2])) "fs/namei.c":323:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 107 106 108 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:100 dir.41_18 ] [100])) "fs/namei.c":323:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 108 107 109 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":323:14 823 {*call_value}
     (nil)
    (nil))
(insn 109 108 111 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":323:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 111 109 112 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 _19 ] [101])
            (const_int 0 [0]))) "fs/namei.c":323:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 112 111 113 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) "fs/namei.c":323:12 806 {*jcc}
     (nil)
 -> 123)
(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 15 (set (reg/f:SI 0 ax [orig:102 dir.42_20 ] [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":324:13 75 {*movsi_internal}
     (nil))
(insn 115 114 116 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":324:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 116 115 118 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:102 dir.42_20 ] [102])) "fs/namei.c":324:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 118 116 119 15 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":324:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 119 118 120 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":324:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 120 119 351 15 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -13 [0xfffffffffffffff3])) "fs/namei.c":325:20 75 {*movsi_internal}
     (nil))
(jump_insn 351 120 352 15 (set (pc)
        (label_ref 334)) "fs/namei.c":325:20 807 {jump}
     (nil)
 -> 334)
(barrier 352 351 123)
(code_label 123 352 124 16 78 (nil) [1 uses])
(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 16 (set (reg/f:SI 0 ax [orig:103 dir.43_21 ] [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":327:30 75 {*movsi_internal}
     (nil))
(insn 126 125 127 16 (set (reg:HI 0 ax [orig:104 _22 ] [104])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:103 dir.43_21 ] [103])
                (const_int 44 [0x2c])) [4 dir.43_21->i_dev+0 S2 A32])) "fs/namei.c":327:30 76 {*movhi_internal}
     (nil))
(insn 127 126 128 16 (set (reg:SI 0 ax [orig:105 _23 ] [105])
        (zero_extend:SI (reg:HI 0 ax [orig:104 _22 ] [104]))) "fs/namei.c":327:17 144 {*zero_extendhisi2}
     (nil))
(insn 128 127 129 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":327:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 129 128 131 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:105 _23 ] [105])) "fs/namei.c":327:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 131 129 132 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_inode") [flags 0x41]  <function_decl 0x7f2fcf310200 new_inode>) [0 new_inode S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":327:17 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 132 131 134 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":327:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 134 132 135 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])
        (reg:SI 0 ax [152])) "fs/namei.c":327:17 75 {*movsi_internal}
     (nil))
(insn 135 134 136 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [2 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":328:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 136 135 137 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "fs/namei.c":328:12 806 {*jcc}
     (nil)
 -> 147)
(note 137 136 138 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 17 (set (reg/f:SI 0 ax [orig:106 dir.44_24 ] [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":329:13 75 {*movsi_internal}
     (nil))
(insn 139 138 140 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":329:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 140 139 142 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:106 dir.44_24 ] [106])) "fs/namei.c":329:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 142 140 143 17 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":329:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 143 142 144 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":329:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 144 143 353 17 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":330:20 75 {*movsi_internal}
     (nil))
(jump_insn 353 144 354 17 (set (pc)
        (label_ref 334)) "fs/namei.c":330:20 807 {jump}
     (nil)
 -> 334)
(barrier 354 353 147)
(code_label 147 354 148 18 79 (nil) [1 uses])
(note 148 147 149 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 18 (set (reg/f:SI 0 ax [153])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":332:31 75 {*movsi_internal}
     (nil))
(insn 150 149 151 18 (set (reg/f:SI 0 ax [orig:107 current.45_25 ] [107])
        (mem/f/c:SI (reg/f:SI 0 ax [153]) [6 current+0 S4 A32])) "fs/namei.c":332:31 75 {*movsi_internal}
     (nil))
(insn 151 150 152 18 (set (reg:HI 1 dx [orig:108 _26 ] [108])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:107 current.45_25 ] [107])
                (const_int 578 [0x242])) [4 current.45_25->euid+0 S2 A16])) "fs/namei.c":332:31 76 {*movhi_internal}
     (nil))
(insn 152 151 153 18 (set (reg/f:SI 0 ax [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":332:22 75 {*movsi_internal}
     (nil))
(insn 153 152 154 18 (set (mem:HI (plus:SI (reg/f:SI 0 ax [154])
                (const_int 2 [0x2])) [4 inode_92->i_uid+0 S2 A16])
        (reg:HI 1 dx [orig:108 _26 ] [108])) "fs/namei.c":332:22 76 {*movhi_internal}
     (nil))
(insn 154 153 155 18 (set (reg:SI 0 ax [155])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [11 mode+0 S4 A32])) "fs/namei.c":333:23 75 {*movsi_internal}
     (nil))
(insn 155 154 156 18 (set (reg:HI 1 dx [orig:109 _27 ] [109])
        (reg:HI 0 ax [155])) "fs/namei.c":333:23 76 {*movhi_internal}
     (nil))
(insn 156 155 157 18 (set (reg/f:SI 0 ax [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":333:23 75 {*movsi_internal}
     (nil))
(insn 157 156 158 18 (set (mem:HI (reg/f:SI 0 ax [156]) [4 inode_92->i_mode+0 S2 A32])
        (reg:HI 1 dx [orig:109 _27 ] [109])) "fs/namei.c":333:23 76 {*movhi_internal}
     (nil))
(insn 158 157 159 18 (set (reg/f:SI 0 ax [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":334:23 75 {*movsi_internal}
     (nil))
(insn 159 158 160 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [157])
                (const_int 51 [0x33])) [0 inode_92->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":334:23 77 {*movqi_internal}
     (nil))
(insn 160 159 161 18 (set (reg:SI 2 cx [orig:110 namelen.46_28 ] [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 namelen+0 S4 A32])) "fs/namei.c":335:14 75 {*movsi_internal}
     (nil))
(insn 161 160 162 18 (set (reg/f:SI 1 dx [orig:111 basename.47_29 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 basename+0 S4 A32])) "fs/namei.c":335:14 75 {*movsi_internal}
     (nil))
(insn 162 161 163 18 (set (reg/f:SI 0 ax [orig:112 dir.48_30 ] [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":335:14 75 {*movsi_internal}
     (nil))
(insn 163 162 164 18 (set (reg:SI 4 si [158])
        (reg/f:SI 7 sp)) "fs/namei.c":335:14 75 {*movsi_internal}
     (nil))
(insn 164 163 165 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 4 si [158])) "fs/namei.c":335:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 165 164 166 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 2 cx [orig:110 namelen.46_28 ] [110])) "fs/namei.c":335:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 166 165 167 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 1 dx [orig:111 basename.47_29 ] [111])) "fs/namei.c":335:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 167 166 168 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:112 dir.48_30 ] [112])) "fs/namei.c":335:14 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 168 167 169 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("add_entry") [flags 0x3]  <function_decl 0x7f2fcf349d00 add_entry>) [0 add_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":335:14 823 {*call_value}
     (nil)
    (nil))
(insn 169 168 171 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":335:14 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 171 169 172 18 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [159])) "fs/namei.c":335:14 75 {*movsi_internal}
     (nil))
(insn 172 171 173 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":336:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 173 172 174 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "fs/namei.c":336:12 806 {*jcc}
     (nil)
 -> 194)
(note 174 173 175 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 19 (set (reg/f:SI 0 ax [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":337:18 75 {*movsi_internal}
     (nil))
(insn 176 175 177 19 (set (reg:QI 0 ax [orig:113 _31 ] [113])
        (mem:QI (plus:SI (reg/f:SI 0 ax [160])
                (const_int 13 [0xd])) [0 inode_92->i_nlinks+0 S1 A8])) "fs/namei.c":337:18 77 {*movqi_internal}
     (nil))
(insn 177 176 178 19 (parallel [
            (set (reg:QI 1 dx [orig:114 _33 ] [114])
                (plus:QI (reg:QI 0 ax [orig:113 _31 ] [113])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":337:28 213 {*addqi_1}
     (nil))
(insn 178 177 179 19 (set (reg/f:SI 0 ax [161])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":337:28 75 {*movsi_internal}
     (nil))
(insn 179 178 180 19 (set (mem:QI (plus:SI (reg/f:SI 0 ax [161])
                (const_int 13 [0xd])) [0 inode_92->i_nlinks+0 S1 A8])
        (reg:QI 1 dx [orig:114 _33 ] [114])) "fs/namei.c":337:28 77 {*movqi_internal}
     (nil))
(insn 180 179 181 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":338:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 181 180 183 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 inode+0 S4 A32])) "fs/namei.c":338:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 183 181 184 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":338:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 184 183 185 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":338:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 185 184 186 19 (set (reg/f:SI 0 ax [orig:115 dir.49_34 ] [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":339:13 75 {*movsi_internal}
     (nil))
(insn 186 185 187 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":339:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 187 186 189 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:115 dir.49_34 ] [115])) "fs/namei.c":339:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 189 187 190 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":339:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 190 189 191 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":339:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 191 190 355 19 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":340:20 75 {*movsi_internal}
     (nil))
(jump_insn 355 191 356 19 (set (pc)
        (label_ref 334)) "fs/namei.c":340:20 807 {jump}
     (nil)
 -> 334)
(barrier 356 355 194)
(code_label 194 356 195 20 80 (nil) [1 uses])
(note 195 194 196 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 20 (set (reg/f:SI 0 ax [orig:116 de.50_35 ] [116])
        (mem/f/c:SI (reg/f:SI 7 sp) [1 de+0 S4 A32])) "fs/namei.c":342:11 75 {*movsi_internal}
     (nil))
(insn 197 196 198 20 (set (reg/f:SI 1 dx [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":342:26 75 {*movsi_internal}
     (nil))
(insn 198 197 199 20 (set (reg:HI 1 dx [orig:117 _36 ] [117])
        (mem:HI (plus:SI (reg/f:SI 1 dx [162])
                (const_int 46 [0x2e])) [4 inode_92->i_num+0 S2 A16])) "fs/namei.c":342:26 76 {*movhi_internal}
     (nil))
(insn 199 198 200 20 (set (mem:HI (reg/f:SI 0 ax [orig:116 de.50_35 ] [116]) [4 de.50_35->inode+0 S2 A16])
        (reg:HI 1 dx [orig:117 _36 ] [117])) "fs/namei.c":342:19 76 {*movhi_internal}
     (nil))
(insn 200 199 201 20 (set (reg/f:SI 0 ax [163])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])) "fs/namei.c":343:20 75 {*movsi_internal}
     (nil))
(insn 201 200 202 20 (set (mem:QI (plus:SI (reg/f:SI 0 ax [163])
                (const_int 11 [0xb])) [0 bh_97->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":343:20 77 {*movqi_internal}
     (nil))
(insn 202 201 203 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":344:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 203 202 205 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":344:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 205 203 206 20 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":344:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 206 205 207 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":344:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 207 206 208 20 (set (reg/f:SI 0 ax [orig:118 dir.51_37 ] [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":345:9 75 {*movsi_internal}
     (nil))
(insn 208 207 209 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":345:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 209 208 211 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:118 dir.51_37 ] [118])) "fs/namei.c":345:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 211 209 212 20 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":345:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 212 211 213 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":345:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 213 212 214 20 (set (reg/f:SI 0 ax [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [22 res_inode+0 S4 A32])) "fs/namei.c":346:20 75 {*movsi_internal}
     (nil))
(insn 214 213 215 20 (set (reg/f:SI 1 dx [165])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":346:20 75 {*movsi_internal}
     (nil))
(insn 215 214 216 20 (set (mem/f:SI (reg/f:SI 0 ax [164]) [2 *res_inode_83(D)+0 S4 A32])
        (reg/f:SI 1 dx [165])) "fs/namei.c":346:20 75 {*movsi_internal}
     (nil))
(insn 216 215 357 20 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int 0 [0])) "fs/namei.c":347:16 75 {*movsi_internal}
     (nil))
(jump_insn 357 216 358 20 (set (pc)
        (label_ref 334)) "fs/namei.c":347:16 807 {jump}
     (nil)
 -> 334)
(barrier 358 357 219)
(code_label 219 358 220 21 76 (nil) [1 uses])
(note 220 219 221 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 21 (set (reg/f:SI 0 ax [orig:119 de.52_38 ] [119])
        (mem/f/c:SI (reg/f:SI 7 sp) [1 de+0 S4 A32])) "fs/namei.c":349:13 75 {*movsi_internal}
     (nil))
(insn 222 221 223 21 (set (reg:HI 0 ax [orig:120 _39 ] [120])
        (mem:HI (reg/f:SI 0 ax [orig:119 de.52_38 ] [119]) [4 de.52_38->inode+0 S2 A16])) "fs/namei.c":349:13 76 {*movhi_internal}
     (nil))
(insn 223 222 224 21 (set (reg:SI 0 ax [166])
        (zero_extend:SI (reg:HI 0 ax [orig:120 _39 ] [120]))) "fs/namei.c":349:9 144 {*zero_extendhisi2}
     (nil))
(insn 224 223 225 21 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 inr+0 S4 A32])
        (reg:SI 0 ax [166])) "fs/namei.c":349:9 75 {*movsi_internal}
     (nil))
(insn 225 224 226 21 (set (reg/f:SI 0 ax [orig:121 dir.53_40 ] [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":350:14 75 {*movsi_internal}
     (nil))
(insn 226 225 227 21 (set (reg:HI 0 ax [orig:122 _41 ] [122])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:121 dir.53_40 ] [121])
                (const_int 44 [0x2c])) [4 dir.53_40->i_dev+0 S2 A32])) "fs/namei.c":350:14 76 {*movhi_internal}
     (nil))
(insn 227 226 228 21 (set (reg:SI 0 ax [167])
        (zero_extend:SI (reg:HI 0 ax [orig:122 _41 ] [122]))) "fs/namei.c":350:9 144 {*zero_extendhisi2}
     (nil))
(insn 228 227 229 21 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [11 dev+0 S4 A32])
        (reg:SI 0 ax [167])) "fs/namei.c":350:9 75 {*movsi_internal}
     (nil))
(insn 229 228 230 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":351:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 230 229 232 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":351:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 232 230 233 21 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":351:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 233 232 234 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":351:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 234 233 235 21 (set (reg/f:SI 0 ax [orig:123 dir.54_42 ] [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 dir+0 S4 A32])) "fs/namei.c":352:5 75 {*movsi_internal}
     (nil))
(insn 235 234 236 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":352:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 236 235 238 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:123 dir.54_42 ] [123])) "fs/namei.c":352:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 238 236 239 21 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":352:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 239 238 240 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":352:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 240 239 241 21 (set (reg:SI 0 ax [168])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":353:14 75 {*movsi_internal}
     (nil))
(insn 241 240 242 21 (parallel [
            (set (reg:SI 0 ax [orig:124 _43 ] [124])
                (and:SI (reg:SI 0 ax [168])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":353:14 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 128 [0x80]))
        (nil)))
(insn 242 241 243 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:124 _43 ] [124])
            (const_int 0 [0]))) "fs/namei.c":353:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 243 242 244 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "fs/namei.c":353:8 806 {*jcc}
     (nil)
 -> 248)
(note 244 243 245 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 359 22 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -17 [0xffffffffffffffef])) "fs/namei.c":354:16 75 {*movsi_internal}
     (nil))
(jump_insn 359 245 360 22 (set (pc)
        (label_ref 334)) "fs/namei.c":354:16 807 {jump}
     (nil)
 -> 334)
(barrier 360 359 248)
(code_label 248 360 249 23 81 (nil) [1 uses])
(note 249 248 250 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":355:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 251 250 252 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [11 inr+0 S4 A32])) "fs/namei.c":355:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 252 251 254 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [11 dev+0 S4 A32])) "fs/namei.c":355:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 254 252 255 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("iget") [flags 0x41]  <function_decl 0x7f2fcf30e900 iget>) [0 iget S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":355:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 255 254 257 23 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":355:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 257 255 258 23 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])
        (reg:SI 0 ax [169])) "fs/namei.c":355:19 75 {*movsi_internal}
     (nil))
(insn 258 257 259 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [2 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":355:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 259 258 260 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) "fs/namei.c":355:8 806 {*jcc}
     (nil)
 -> 264)
(note 260 259 261 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 361 24 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -13 [0xfffffffffffffff3])) "fs/namei.c":356:16 75 {*movsi_internal}
     (nil))
(jump_insn 361 261 362 24 (set (pc)
        (label_ref 334)) "fs/namei.c":356:16 807 {jump}
     (nil)
 -> 334)
(barrier 362 361 264)
(code_label 264 362 265 25 82 (nil) [1 uses])
(note 265 264 266 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 25 (set (reg/f:SI 0 ax [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":357:10 75 {*movsi_internal}
     (nil))
(insn 267 266 268 25 (set (reg:HI 0 ax [orig:125 _44 ] [125])
        (mem:HI (reg/f:SI 0 ax [170]) [4 inode_79->i_mode+0 S2 A32])) "fs/namei.c":357:10 76 {*movhi_internal}
     (nil))
(insn 268 267 269 25 (set (reg:SI 0 ax [orig:126 _45 ] [126])
        (zero_extend:SI (reg:HI 0 ax [orig:125 _44 ] [125]))) "fs/namei.c":357:10 144 {*zero_extendhisi2}
     (nil))
(insn 269 268 270 25 (parallel [
            (set (reg:SI 0 ax [orig:127 _46 ] [127])
                (and:SI (reg:SI 0 ax [orig:126 _45 ] [126])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":357:10 490 {*andsi_1}
     (nil))
(insn 270 269 271 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:127 _46 ] [127])
            (const_int 16384 [0x4000]))) "fs/namei.c":357:8 11 {*cmpsi_1}
     (nil))
(jump_insn 271 270 272 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) "fs/namei.c":357:8 806 {*jcc}
     (nil)
 -> 277)
(note 272 271 273 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 26 (set (reg:SI 0 ax [171])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":357:42 75 {*movsi_internal}
     (nil))
(insn 274 273 275 26 (parallel [
            (set (reg:SI 0 ax [orig:128 _47 ] [128])
                (and:SI (reg:SI 0 ax [171])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":357:42 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 275 274 276 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:128 _47 ] [128])
            (const_int 0 [0]))) "fs/namei.c":357:33 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 276 275 277 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) "fs/namei.c":357:33 806 {*jcc}
     (nil)
 -> 291)
(code_label 277 276 278 27 83 (nil) [1 uses])
(note 278 277 279 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 27 (set (reg:SI 0 ax [172])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":358:29 75 {*movsi_internal}
     (nil))
(insn 280 279 281 27 (parallel [
            (set (reg:SI 0 ax [orig:129 _48 ] [129])
                (and:SI (reg:SI 0 ax [172])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":358:29 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 281 280 282 27 (set (reg:QI 0 ax [orig:130 _49 ] [130])
        (mem/u:QI (plus:SI (plus:SI (reg:SI 3 bx [82])
                    (reg:SI 0 ax [orig:129 _48 ] [129]))
                (const:SI (unspec:SI [
                            (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7f2fcf389090 *.LC2>)
                        ] UNSPEC_GOTOFF))) [0 "\x04\x02\x06\xff"[_48]+0 S1 A8])) "fs/namei.c":358:29 77 {*movqi_internal}
     (nil))
(insn 282 281 283 27 (set (reg:SI 0 ax [orig:131 _50 ] [131])
        (sign_extend:SI (reg:QI 0 ax [orig:130 _49 ] [130]))) "fs/namei.c":358:11 153 {extendqisi2}
     (nil))
(insn 283 282 284 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":358:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 284 283 285 27 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:131 _50 ] [131])) "fs/namei.c":358:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 285 284 286 27 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 inode+0 S4 A32])) "fs/namei.c":358:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 286 285 287 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":358:11 823 {*call_value}
     (nil)
    (nil))
(insn 287 286 289 27 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":358:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 289 287 290 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:132 _51 ] [132])
            (const_int 0 [0]))) "fs/namei.c":357:56 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 290 289 291 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) "fs/namei.c":357:56 806 {*jcc}
     (nil)
 -> 301)
(code_label 291 290 292 28 84 (nil) [1 uses])
(note 292 291 293 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":359:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 294 293 296 28 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 inode+0 S4 A32])) "fs/namei.c":359:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 296 294 297 28 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":359:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 297 296 298 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":359:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 298 297 363 28 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":360:16 75 {*movsi_internal}
     (nil))
(jump_insn 363 298 364 28 (set (pc)
        (label_ref 334)) "fs/namei.c":360:16 807 {jump}
     (nil)
 -> 334)
(barrier 364 363 301)
(code_label 301 364 302 29 85 (nil) [1 uses])
(note 302 301 303 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 29 (set (reg/f:SI 0 ax [173])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 304 303 305 29 (set (reg:SI 2 cx [orig:133 jiffies.55_52 ] [133])
        (mem/v/c:SI (reg/f:SI 0 ax [173]) [5 jiffies+0 S4 A32])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 305 304 367 29 (set (reg:SI 1 dx [175])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 367 305 306 29 (set (reg:SI 0 ax [184])
        (reg:SI 2 cx [orig:133 jiffies.55_52 ] [133])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 306 367 368 29 (parallel [
            (set (reg:SI 1 dx [174])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [184]))
                            (sign_extend:DI (reg:SI 1 dx [175])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [184]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":362:22 435 {*smulsi3_highpart_1}
     (nil))
(insn 368 306 307 29 (set (reg:SI 0 ax [174])
        (reg:SI 1 dx [174])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 307 368 308 29 (parallel [
            (set (reg:SI 0 ax [174])
                (ashiftrt:SI (reg:SI 0 ax [174])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":362:22 702 {*ashrsi3_1}
     (nil))
(insn 308 307 309 29 (parallel [
            (set (reg:SI 2 cx [177])
                (ashiftrt:SI (reg:SI 2 cx [orig:133 jiffies.55_52 ] [133])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":362:22 694 {ashrsi3_cvt}
     (nil))
(insn 309 308 371 29 (parallel [
            (set (reg:SI 0 ax [176])
                (minus:SI (reg:SI 0 ax [176])
                    (reg:SI 2 cx [177])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":362:22 282 {*subsi_1}
     (nil))
(insn 371 309 310 29 (set (reg:SI 1 dx [orig:134 _53 ] [134])
        (reg:SI 0 ax [176])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 310 371 311 29 (set (reg/f:SI 0 ax [178])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 311 310 312 29 (set (reg:SI 0 ax [orig:135 startup_time.56_54 ] [135])
        (mem/c:SI (reg/f:SI 0 ax [178]) [5 startup_time+0 S4 A32])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 312 311 313 29 (parallel [
            (set (reg:SI 0 ax [orig:136 _55 ] [136])
                (plus:SI (reg:SI 0 ax [orig:135 startup_time.56_54 ] [135])
                    (reg:SI 1 dx [orig:134 _53 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":362:22 209 {*addsi_1}
     (nil))
(insn 313 312 314 29 (set (reg:SI 1 dx [orig:137 _56 ] [137])
        (reg:SI 0 ax [orig:136 _55 ] [136])) "fs/namei.c":362:22 75 {*movsi_internal}
     (nil))
(insn 314 313 315 29 (set (reg/f:SI 0 ax [179])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":362:20 75 {*movsi_internal}
     (nil))
(insn 315 314 316 29 (set (mem:SI (plus:SI (reg/f:SI 0 ax [179])
                (const_int 36 [0x24])) [5 inode_79->i_atime+0 S4 A32])
        (reg:SI 1 dx [orig:137 _56 ] [137])) "fs/namei.c":362:20 75 {*movsi_internal}
     (nil))
(insn 316 315 317 29 (set (reg:SI 0 ax [180])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 flag+0 S4 A32])) "fs/namei.c":363:14 75 {*movsi_internal}
     (nil))
(insn 317 316 318 29 (parallel [
            (set (reg:SI 0 ax [orig:138 _57 ] [138])
                (and:SI (reg:SI 0 ax [180])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":363:14 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 flag+0 S4 A32])
            (const_int 512 [0x200]))
        (nil)))
(insn 318 317 319 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:138 _57 ] [138])
            (const_int 0 [0]))) "fs/namei.c":363:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 319 318 320 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 326)
            (pc))) "fs/namei.c":363:8 806 {*jcc}
     (nil)
 -> 326)
(note 320 319 321 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 30 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":364:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 322 321 324 30 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 inode+0 S4 A32])) "fs/namei.c":364:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 324 322 325 30 (call (mem:QI (symbol_ref:SI ("truncate") [flags 0x41]  <function_decl 0x7f2fcf2d2700 truncate>) [0 truncate S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":364:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 325 324 326 30 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":364:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 326 325 327 31 86 (nil) [1 uses])
(note 327 326 328 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 31 (set (reg/f:SI 0 ax [181])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [22 res_inode+0 S4 A32])) "fs/namei.c":365:16 75 {*movsi_internal}
     (nil))
(insn 329 328 330 31 (set (reg/f:SI 1 dx [182])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 inode+0 S4 A32])) "fs/namei.c":365:16 75 {*movsi_internal}
     (nil))
(insn 330 329 331 31 (set (mem/f:SI (reg/f:SI 0 ax [181]) [2 *res_inode_83(D)+0 S4 A32])
        (reg/f:SI 1 dx [182])) "fs/namei.c":365:16 75 {*movsi_internal}
     (nil))
(insn 331 330 334 31 (set (reg:SI 0 ax [orig:139 _59 ] [139])
        (const_int 0 [0])) "fs/namei.c":366:12 75 {*movsi_internal}
     (nil))
(code_label 334 331 335 32 87 (nil) [11 uses])
(note 335 334 341 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 341 335 366 32 (use (reg/i:SI 0 ax)) "fs/namei.c":367:1 -1
     (nil))
(note 366 341 0 NOTE_INSN_DELETED)

;; Function namei (namei, funcdef_no=15, decl_uid=1172, cgraph_uid=16, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 6:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 35:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 64:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 73:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 93:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=121 from oldreg=119, assigning class AREG to r121
   93: {r113:SI=trunc(sign_extend(r121:SI)*sign_extend(r114:SI) 0>>0x20);clobber r121:SI;clobber flags:CC;}
      REG_DEAD r114:SI
      REG_UNUSED r119:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  127: r121:SI=r96:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 94:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=122 from oldreg=113, assigning class GENERAL_REGS to r122
   94: {r122:SI=r122:SI>>0x5;clobber flags:CC;}
      REG_DEAD r113:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  128: r122:SI=r113:SI
    Inserting insn reload after:
  129: r115:SI=r122:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 96:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=123 from oldreg=115, assigning class GENERAL_REGS to r123
   96: {r123:SI=r123:SI-r116:SI;clobber flags:CC;}
      REG_DEAD r116:SI
      REG_DEAD r115:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  130: r123:SI=r115:SI
    Inserting insn reload after:
  131: r97:SI=r123:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 104:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 117: point = 0, n_alt = -1
   Insn 116: point = 0, n_alt = -2
   Insn 112: point = 1, n_alt = -2
  BB 7
   Insn 123: point = 4, n_alt = -1
   Insn 54: point = 4, n_alt = 0
   Insn 53: point = 5, n_alt = 0
   Insn 52: point = 5, n_alt = 0
   Insn 51: point = 5, n_alt = -2
   Insn 50: point = 6, n_alt = 0
   Insn 49: point = 7, n_alt = 0
   Insn 48: point = 7, n_alt = 0
  BB 3
   Insn 119: point = 9, n_alt = -1
   Insn 19: point = 9, n_alt = 0
  BB 5
   Insn 121: point = 10, n_alt = -1
   Insn 28: point = 10, n_alt = 0
  BB 10
   Insn 107: point = 11, n_alt = 0
  BB 9
   Insn 104: point = 12, n_alt = 8
   Insn 103: point = 13, n_alt = 0
   Insn 102: point = 14, n_alt = 1
   Insn 101: point = 15, n_alt = -2
   Insn 100: point = 17, n_alt = 0
   Insn 99: point = 18, n_alt = 0
   Insn 98: point = 20, n_alt = 0
   Insn 97: point = 22, n_alt = 0
   Insn 131: point = 24, n_alt = -2
	Hard reg 1 is preferable by r123 with profit 1000
   Insn 96: point = 26, n_alt = 0
   Insn 130: point = 28, n_alt = -2
	Hard reg 1 is preferable by r123 with profit 1000
	Hard reg 0 is preferable by r123 with profit 1000
   Insn 95: point = 30, n_alt = 1
   Insn 129: point = 32, n_alt = -2
	Hard reg 0 is preferable by r122 with profit 1000
   Insn 94: point = 34, n_alt = 0
   Insn 128: point = 35, n_alt = -2
	Hard reg 0 is preferable by r122 with profit 1000
	Hard reg 1 is preferable by r122 with profit 1000
   Insn 93: point = 37, n_alt = 0
   Insn 127: point = 39, n_alt = -2
	Hard reg 2 is preferable by r121 with profit 1000
   Insn 92: point = 40, n_alt = 0
   Insn 91: point = 41, n_alt = 0
   Insn 90: point = 43, n_alt = 0
  BB 8
   Insn 88: point = 45, n_alt = -1
   Insn 87: point = 45, n_alt = 0
   Insn 86: point = 46, n_alt = 0
   Insn 85: point = 47, n_alt = 1
   Insn 84: point = 48, n_alt = -2
   Insn 83: point = 49, n_alt = 0
   Insn 82: point = 49, n_alt = 0
   Insn 81: point = 49, n_alt = -2
   Insn 80: point = 49, n_alt = 0
   Insn 79: point = 49, n_alt = 0
   Insn 78: point = 49, n_alt = 0
   Insn 77: point = 49, n_alt = 0
   Insn 76: point = 49, n_alt = 0
   Insn 75: point = 49, n_alt = -2
   Insn 74: point = 49, n_alt = 0
   Insn 73: point = 50, n_alt = 0
   Insn 72: point = 50, n_alt = 0
   Insn 71: point = 51, n_alt = 0
   Insn 70: point = 51, n_alt = 0
   Insn 69: point = 51, n_alt = -2
   Insn 68: point = 51, n_alt = 0
   Insn 67: point = 51, n_alt = 0
   Insn 66: point = 51, n_alt = 1
   Insn 65: point = 52, n_alt = 0
   Insn 64: point = 54, n_alt = 2
   Insn 63: point = 56, n_alt = 0
   Insn 62: point = 57, n_alt = 1
   Insn 61: point = 58, n_alt = 0
   Insn 60: point = 60, n_alt = 2
   Insn 59: point = 62, n_alt = 0
  BB 6
   Insn 46: point = 64, n_alt = -1
   Insn 45: point = 64, n_alt = 1
   Insn 44: point = 64, n_alt = 1
   Insn 43: point = 65, n_alt = -2
   Insn 42: point = 66, n_alt = 0
   Insn 41: point = 66, n_alt = 0
   Insn 40: point = 66, n_alt = 0
   Insn 39: point = 67, n_alt = 3
   Insn 38: point = 68, n_alt = 0
   Insn 37: point = 69, n_alt = 0
   Insn 36: point = 70, n_alt = 0
   Insn 35: point = 71, n_alt = 3
   Insn 34: point = 72, n_alt = 0
   Insn 33: point = 73, n_alt = 0
  BB 4
   Insn 26: point = 75, n_alt = -1
   Insn 25: point = 75, n_alt = 0
   Insn 24: point = 76, n_alt = 0
  BB 2
   Insn 17: point = 78, n_alt = -1
   Insn 16: point = 78, n_alt = 0
   Insn 15: point = 79, n_alt = 0
   Insn 14: point = 80, n_alt = 1
   Insn 13: point = 81, n_alt = -2
   Insn 12: point = 82, n_alt = 0
   Insn 11: point = 82, n_alt = 0
   Insn 10: point = 82, n_alt = 0
   Insn 9: point = 82, n_alt = 0
   Insn 8: point = 83, n_alt = 3
   Insn 7: point = 84, n_alt = 0
   Insn 6: point = 85, n_alt = 3
   Insn 5: point = 86, n_alt = 0
   Insn 125: point = 86, n_alt = 0
 r82: [23..86] [5..8]
 r83: [80..81]
 r84: [78..79]
 r85: [75..76]
 r86: [69..73]
 r87: [68..72]
 r88: [6..7]
 r89: [61..62]
 r90: [59..60]
 r91: [55..56]
 r92: [53..54]
 r93: [49..50]
 r94: [47..48]
 r95: [45..46]
 r96: [31..41]
 r97: [19..24]
 r98: [19..20]
 r99: [16..18]
 r100: [14..17]
 r101: [14..15]
 r102: [12..13]
 r103: [9..11] [2..4]
 r104: [0..1]
 r105: [84..85]
 r106: [82..83]
 r107: [70..71]
 r108: [66..67]
 r109: [64..65]
 r110: [57..58]
 r111: [51..52]
 r112: [42..43]
 r113: [36..37]
 r114: [38..40]
 r115: [29..32]
 r116: [27..30]
 r117: [21..22]
 r121: [37..39]
 r122: [33..35]
 r123: [25..28]
Compressing live ranges: from 87 to 68 - 78%
Ranges after the compression:
 r82: [18..67] [4..5]
 r83: [62..63]
 r84: [60..61]
 r85: [58..59]
 r86: [56..57]
 r87: [56..57]
 r88: [4..5]
 r89: [50..51]
 r90: [48..49]
 r91: [44..45]
 r92: [42..43]
 r93: [38..39]
 r94: [36..37]
 r95: [34..35]
 r96: [24..31]
 r97: [14..19]
 r98: [14..15]
 r99: [12..13]
 r100: [10..13]
 r101: [10..11]
 r102: [8..9]
 r103: [6..7] [2..3]
 r104: [0..1]
 r105: [66..67]
 r106: [64..65]
 r107: [56..57]
 r108: [54..55]
 r109: [52..53]
 r110: [46..47]
 r111: [40..41]
 r112: [32..33]
 r113: [28..29]
 r114: [30..31]
 r115: [22..25]
 r116: [20..23]
 r117: [16..17]
 r121: [29..31]
 r122: [26..27]
 r123: [20..21]

********** Assignment #1: **********

	 Assigning to 121 (cl=AREG, orig=119, freq=2000, tfirst=121, tfreq=2000)...
	   Assign 0 to reload r121 (freq=2000)
	 Assigning to 122 (cl=GENERAL_REGS, orig=113, freq=3000, tfirst=122, tfreq=3000)...
	   Assign 0 to reload r122 (freq=3000)
	 Assigning to 123 (cl=GENERAL_REGS, orig=115, freq=3000, tfirst=123, tfreq=3000)...
	   Assign 0 to reload r123 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 125
changing reg in insn 97
changing reg in insn 90
changing reg in insn 81
changing reg in insn 75
changing reg in insn 69
changing reg in insn 51
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 24
changing reg in insn 25
changing reg in insn 33
changing reg in insn 37
changing reg in insn 34
changing reg in insn 38
changing reg in insn 48
changing reg in insn 50
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 72
changing reg in insn 74
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 91
changing reg in insn 95
changing reg in insn 99
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 102
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 107
changing reg in insn 54
changing reg in insn 28
changing reg in insn 19
changing reg in insn 112
changing reg in insn 112
changing reg in insn 116
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 66
changing reg in insn 90
changing reg in insn 91
changing reg in insn 93
changing reg in insn 92
changing reg in insn 93
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
deleting insn with uid = 13.
deleting insn with uid = 43.
deleting insn with uid = 51.
deleting insn with uid = 69.
deleting insn with uid = 75.
deleting insn with uid = 81.
deleting insn with uid = 84.
deleting insn with uid = 129.
deleting insn with uid = 130.
deleting insn with uid = 101.
deleting insn with uid = 112.
deleting insn with uid = 116.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 82.


namei

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={36d,29u} r1={12d,5u} r2={10d,4u} r3={1d,6u} r7={24d,78u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={31d,4u} r18={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 630{504d,126u,0e} in 85{79 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 125 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 125 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 125 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":384:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [105])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":384:17 209 {*addsi_1}
     (nil))
(insn 7 6 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [26  S4 A32])
        (reg:SI 0 ax [105])) "fs/namei.c":384:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 0 ax [106])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":384:17 209 {*addsi_1}
     (nil))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg:SI 0 ax [106])) "fs/namei.c":384:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 10 9 11 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 pathname+0 S4 A32])) "fs/namei.c":384:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("dir_namei") [flags 0x3]  <function_decl 0x7f2fcf349b00 dir_namei>) [0 dir_namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":384:17 823 {*call_value}
     (nil)
    (nil))
(insn 12 11 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":384:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 14 12 15 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/namei.c":384:15 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 0 ax [orig:84 dir.57_2 ] [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":384:15 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:84 dir.57_2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":384:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "fs/namei.c":384:8 806 {*jcc}
     (nil)
 -> 22)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 119 3 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (const_int 0 [0])) "fs/namei.c":385:16 75 {*movsi_internal}
     (nil))
(jump_insn 119 19 120 3 (set (pc)
        (label_ref 110)) "fs/namei.c":385:16 807 {jump}
     (nil)
 -> 110)
(barrier 120 119 22)
(code_label 22 120 23 4 89 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 0 ax [orig:85 namelen.58_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 namelen+0 S4 A32])) "fs/namei.c":386:9 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 namelen.58_3 ] [85])
            (const_int 0 [0]))) "fs/namei.c":386:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "fs/namei.c":386:8 806 {*jcc}
     (nil)
 -> 31)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 121 5 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":387:16 75 {*movsi_internal}
     (nil))
(jump_insn 121 28 122 5 (set (pc)
        (label_ref 110)) "fs/namei.c":387:16 807 {jump}
     (nil)
 -> 110)
(barrier 122 121 31)
(code_label 31 122 32 6 91 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:SI 1 dx [orig:86 namelen.59_4 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 namelen+0 S4 A32])) "fs/namei.c":388:10 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg/f:SI 0 ax [orig:87 basename.60_5 ] [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [8 basename+0 S4 A32])) "fs/namei.c":388:10 75 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg:SI 2 cx [107])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":388:10 209 {*addsi_1}
     (nil))
(insn 36 35 37 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 2 cx [107])) "fs/namei.c":388:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 37 36 38 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:86 namelen.59_4 ] [86])) "fs/namei.c":388:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 38 37 39 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:87 basename.60_5 ] [87])) "fs/namei.c":388:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 39 38 40 6 (parallel [
            (set (reg:SI 0 ax [108])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":388:10 209 {*addsi_1}
     (nil))
(insn 40 39 41 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [108])) "fs/namei.c":388:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 41 40 42 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":388:10 823 {*call_value}
     (nil)
    (nil))
(insn 42 41 44 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":388:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 44 42 45 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [109])) "fs/namei.c":388:10 75 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":389:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "fs/namei.c":389:8 806 {*jcc}
     (nil)
 -> 57)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg/f:SI 0 ax [orig:88 dir.61_6 ] [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":390:9 75 {*movsi_internal}
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":390:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 50 49 52 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:88 dir.61_6 ] [88])) "fs/namei.c":390:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 52 50 53 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":390:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 53 52 54 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":390:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 54 53 123 7 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (const_int 0 [0])) "fs/namei.c":391:16 75 {*movsi_internal}
     (nil))
(jump_insn 123 54 124 7 (set (pc)
        (label_ref 110)) "fs/namei.c":391:16 807 {jump}
     (nil)
 -> 110)
(barrier 124 123 57)
(code_label 57 124 58 8 92 (nil) [1 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:SI 0 ax [orig:89 de.62_7 ] [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":393:13 75 {*movsi_internal}
     (nil))
(insn 60 59 61 8 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (reg/f:SI 0 ax [orig:89 de.62_7 ] [89]) [4 de.62_7->inode+0 S2 A16])) "fs/namei.c":393:13 76 {*movhi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:SI 0 ax [110])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/namei.c":393:9 144 {*zero_extendhisi2}
     (nil))
(insn 62 61 63 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [11 inr+0 S4 A32])
        (reg:SI 0 ax [110])) "fs/namei.c":393:9 75 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (reg/f:SI 0 ax [orig:91 dir.63_9 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":394:14 75 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:91 dir.63_9 ] [91])
                (const_int 44 [0x2c])) [4 dir.63_9->i_dev+0 S2 A32])) "fs/namei.c":394:14 76 {*movhi_internal}
     (nil))
(insn 65 64 66 8 (set (reg:SI 0 ax [111])
        (zero_extend:SI (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/namei.c":394:9 144 {*zero_extendhisi2}
     (nil))
(insn 66 65 67 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [11 dev+0 S4 A32])
        (reg:SI 0 ax [111])) "fs/namei.c":394:9 75 {*movsi_internal}
     (nil))
(insn 67 66 68 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":395:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 68 67 70 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":395:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 70 68 71 8 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":395:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 71 70 72 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":395:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 72 71 73 8 (set (reg/f:SI 0 ax [orig:93 dir.64_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":396:5 75 {*movsi_internal}
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":396:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 74 73 76 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:93 dir.64_11 ] [93])) "fs/namei.c":396:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 76 74 77 8 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":396:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 77 76 78 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":396:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 78 77 79 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":397:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 79 78 80 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [11 inr+0 S4 A32])) "fs/namei.c":397:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 80 79 82 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [11 dev+0 S4 A32])) "fs/namei.c":397:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 82 80 83 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("iget") [flags 0x41]  <function_decl 0x7f2fcf30e900 iget>) [0 iget S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":397:11 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 83 82 85 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":397:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 85 83 86 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:94 _12 ] [94])) "fs/namei.c":397:9 75 {*movsi_internal}
     (nil))
(insn 86 85 87 8 (set (reg/f:SI 0 ax [orig:95 dir.65_13 ] [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":398:9 75 {*movsi_internal}
     (nil))
(insn 87 86 88 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:95 dir.65_13 ] [95])
            (const_int 0 [0]))) "fs/namei.c":398:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 88 87 89 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) "fs/namei.c":398:8 806 {*jcc}
     (nil)
 -> 105)
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 9 (set (reg/f:SI 0 ax [112])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 91 90 92 9 (set (reg:SI 2 cx [orig:96 jiffies.66_14 ] [96])
        (mem/v/c:SI (reg/f:SI 0 ax [112]) [5 jiffies+0 S4 A32])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 92 91 127 9 (set (reg:SI 1 dx [114])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 127 92 93 9 (set (reg:SI 0 ax [119])
        (reg:SI 2 cx [orig:96 jiffies.66_14 ] [96])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 93 127 128 9 (parallel [
            (set (reg:SI 1 dx [113])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [119]))
                            (sign_extend:DI (reg:SI 1 dx [114])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [119]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":399:24 435 {*smulsi3_highpart_1}
     (nil))
(insn 128 93 94 9 (set (reg:SI 0 ax [113])
        (reg:SI 1 dx [113])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 94 128 95 9 (parallel [
            (set (reg:SI 0 ax [113])
                (ashiftrt:SI (reg:SI 0 ax [113])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":399:24 702 {*ashrsi3_1}
     (nil))
(insn 95 94 96 9 (parallel [
            (set (reg:SI 2 cx [116])
                (ashiftrt:SI (reg:SI 2 cx [orig:96 jiffies.66_14 ] [96])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":399:24 694 {ashrsi3_cvt}
     (nil))
(insn 96 95 131 9 (parallel [
            (set (reg:SI 0 ax [115])
                (minus:SI (reg:SI 0 ax [115])
                    (reg:SI 2 cx [116])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":399:24 282 {*subsi_1}
     (nil))
(insn 131 96 97 9 (set (reg:SI 1 dx [orig:97 _15 ] [97])
        (reg:SI 0 ax [115])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 97 131 98 9 (set (reg/f:SI 0 ax [117])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 98 97 99 9 (set (reg:SI 0 ax [orig:98 startup_time.67_16 ] [98])
        (mem/c:SI (reg/f:SI 0 ax [117]) [5 startup_time+0 S4 A32])) "fs/namei.c":399:24 75 {*movsi_internal}
     (nil))
(insn 99 98 100 9 (parallel [
            (set (reg:SI 1 dx [orig:99 _17 ] [99])
                (plus:SI (reg:SI 1 dx [orig:97 _15 ] [97])
                    (reg:SI 0 ax [orig:98 startup_time.67_16 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":399:24 209 {*addsi_1}
     (nil))
(insn 100 99 102 9 (set (reg/f:SI 0 ax [orig:100 dir.68_18 ] [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":399:12 75 {*movsi_internal}
     (nil))
(insn 102 100 103 9 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:100 dir.68_18 ] [100])
                (const_int 36 [0x24])) [5 dir.68_18->i_atime+0 S4 A32])
        (reg:SI 1 dx [orig:101 _19 ] [101])) "fs/namei.c":399:22 75 {*movsi_internal}
     (nil))
(insn 103 102 104 9 (set (reg/f:SI 0 ax [orig:102 dir.69_20 ] [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":400:12 75 {*movsi_internal}
     (nil))
(insn 104 103 105 9 (set (mem:QI (plus:SI (reg/f:SI 0 ax [orig:102 dir.69_20 ] [102])
                (const_int 51 [0x33])) [0 dir.69_20->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":400:22 77 {*movqi_internal}
     (nil))
(code_label 105 104 106 10 93 (nil) [1 uses])
(note 106 105 107 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 110 10 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":402:12 75 {*movsi_internal}
     (nil))
(code_label 110 107 111 11 94 (nil) [3 uses])
(note 111 110 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 117 111 126 11 (use (reg/i:SI 0 ax)) "fs/namei.c":403:1 -1
     (nil))
(note 126 117 0 NOTE_INSN_DELETED)

;; Function sys_link (sys_link, funcdef_no=16, decl_uid=1507, cgraph_uid=17, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 37:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 54:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 68:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 81:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 83:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 88:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 114:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 118:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 119:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 123:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 131:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 135:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 138:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 144:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 150:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 154:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 155:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 159:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 168:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 174:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 181:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 190:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 198:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 199:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 201:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 202:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 206:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 208:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 212:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 214:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 215:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 217:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 221:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=141 from oldreg=139, assigning class AREG to r141
  221: {r131:SI=trunc(sign_extend(r141:SI)*sign_extend(r132:SI) 0>>0x20);clobber r141:SI;clobber flags:CC;}
      REG_DEAD r132:SI
      REG_UNUSED r139:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  268: r141:SI=r109:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 222:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=142 from oldreg=131, assigning class GENERAL_REGS to r142
  222: {r142:SI=r142:SI>>0x5;clobber flags:CC;}
      REG_DEAD r131:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  269: r142:SI=r131:SI
    Inserting insn reload after:
  270: r133:SI=r142:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 224:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=143 from oldreg=133, assigning class GENERAL_REGS to r143
  224: {r143:SI=r143:SI-r134:SI;clobber flags:CC;}
      REG_DEAD r134:SI
      REG_DEAD r133:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  271: r143:SI=r133:SI
    Inserting insn reload after:
  272: r110:SI=r143:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 227
	 Choosing alt 0 in insn 227:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 232:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 233:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 237:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10 11
EBB 12 13
EBB 14 15
EBB 16 17
EBB 18
EBB 19

********** Pseudo live ranges #1: **********

  BB 19
   Insn 248: point = 0, n_alt = -1
   Insn 247: point = 0, n_alt = -2
   Insn 243: point = 1, n_alt = -2
  BB 17
   Insn 264: point = 4, n_alt = -1
   Insn 191: point = 4, n_alt = 0
   Insn 190: point = 5, n_alt = 0
   Insn 189: point = 5, n_alt = 0
   Insn 188: point = 5, n_alt = -2
   Insn 187: point = 6, n_alt = 0
   Insn 186: point = 6, n_alt = 0
   Insn 185: point = 6, n_alt = 0
   Insn 184: point = 6, n_alt = 0
   Insn 183: point = 6, n_alt = -2
   Insn 182: point = 6, n_alt = 0
   Insn 181: point = 7, n_alt = 0
   Insn 180: point = 7, n_alt = 0
  BB 13
   Insn 260: point = 9, n_alt = -1
   Insn 124: point = 9, n_alt = 0
   Insn 123: point = 10, n_alt = 0
   Insn 122: point = 10, n_alt = 0
   Insn 121: point = 10, n_alt = -2
   Insn 120: point = 11, n_alt = 0
   Insn 119: point = 11, n_alt = 0
   Insn 118: point = 11, n_alt = 0
   Insn 117: point = 11, n_alt = 0
   Insn 116: point = 11, n_alt = -2
   Insn 115: point = 11, n_alt = 0
   Insn 114: point = 12, n_alt = 0
   Insn 113: point = 12, n_alt = 0
  BB 11
   Insn 258: point = 14, n_alt = -1
   Insn 98: point = 14, n_alt = 0
   Insn 97: point = 15, n_alt = 0
   Insn 96: point = 15, n_alt = 0
   Insn 95: point = 15, n_alt = -2
   Insn 94: point = 16, n_alt = 0
   Insn 93: point = 16, n_alt = 0
   Insn 92: point = 16, n_alt = 0
   Insn 91: point = 16, n_alt = 0
   Insn 90: point = 16, n_alt = -2
   Insn 89: point = 16, n_alt = 0
   Insn 88: point = 17, n_alt = 0
   Insn 87: point = 17, n_alt = 0
  BB 9
   Insn 256: point = 19, n_alt = -1
   Insn 75: point = 19, n_alt = 0
   Insn 74: point = 20, n_alt = 0
   Insn 73: point = 20, n_alt = 0
   Insn 72: point = 20, n_alt = -2
   Insn 71: point = 21, n_alt = 0
   Insn 70: point = 22, n_alt = 0
   Insn 69: point = 22, n_alt = 0
   Insn 68: point = 23, n_alt = 0
   Insn 67: point = 23, n_alt = 0
   Insn 66: point = 23, n_alt = -2
   Insn 65: point = 23, n_alt = 0
   Insn 64: point = 23, n_alt = 0
  BB 7
   Insn 254: point = 24, n_alt = -1
   Insn 55: point = 24, n_alt = 0
   Insn 54: point = 25, n_alt = 0
   Insn 53: point = 25, n_alt = 0
   Insn 52: point = 25, n_alt = -2
   Insn 51: point = 26, n_alt = 0
   Insn 50: point = 26, n_alt = 0
  BB 5
   Insn 252: point = 27, n_alt = -1
   Insn 31: point = 27, n_alt = 0
   Insn 30: point = 28, n_alt = 0
   Insn 29: point = 28, n_alt = 0
   Insn 28: point = 28, n_alt = -2
   Insn 27: point = 29, n_alt = 0
   Insn 26: point = 29, n_alt = 0
  BB 3
   Insn 250: point = 30, n_alt = -1
   Insn 14: point = 30, n_alt = 0
  BB 15
   Insn 262: point = 31, n_alt = -1
   Insn 160: point = 31, n_alt = 0
   Insn 159: point = 32, n_alt = 0
   Insn 158: point = 32, n_alt = 0
   Insn 157: point = 32, n_alt = -2
   Insn 156: point = 33, n_alt = 0
   Insn 155: point = 33, n_alt = 0
   Insn 154: point = 33, n_alt = 0
   Insn 153: point = 33, n_alt = 0
   Insn 152: point = 33, n_alt = -2
   Insn 151: point = 33, n_alt = 0
   Insn 150: point = 34, n_alt = 0
   Insn 149: point = 34, n_alt = 0
   Insn 148: point = 35, n_alt = 0
   Insn 147: point = 35, n_alt = 0
   Insn 146: point = 35, n_alt = -2
   Insn 145: point = 35, n_alt = 0
   Insn 144: point = 35, n_alt = 0
  BB 18
   Insn 238: point = 36, n_alt = 0
   Insn 237: point = 37, n_alt = 0
   Insn 236: point = 37, n_alt = 0
   Insn 235: point = 37, n_alt = -2
   Insn 234: point = 38, n_alt = 0
   Insn 233: point = 38, n_alt = 0
   Insn 232: point = 38, n_alt = 8
   Insn 231: point = 39, n_alt = 0
   Insn 230: point = 40, n_alt = 1
   Insn 229: point = 41, n_alt = 0
   Insn 228: point = 42, n_alt = -2
   Insn 227: point = 44, n_alt = 0
   Insn 226: point = 46, n_alt = 0
   Insn 225: point = 48, n_alt = 0
   Insn 272: point = 49, n_alt = -2
	Hard reg 1 is preferable by r143 with profit 1000
   Insn 224: point = 51, n_alt = 0
   Insn 271: point = 53, n_alt = -2
	Hard reg 1 is preferable by r143 with profit 1000
	Hard reg 0 is preferable by r143 with profit 1000
   Insn 223: point = 55, n_alt = 1
   Insn 270: point = 57, n_alt = -2
	Hard reg 0 is preferable by r142 with profit 1000
   Insn 222: point = 59, n_alt = 0
   Insn 269: point = 60, n_alt = -2
	Hard reg 0 is preferable by r142 with profit 1000
	Hard reg 1 is preferable by r142 with profit 1000
   Insn 221: point = 62, n_alt = 0
   Insn 268: point = 64, n_alt = -2
	Hard reg 2 is preferable by r141 with profit 1000
   Insn 220: point = 65, n_alt = 0
   Insn 219: point = 66, n_alt = 0
   Insn 218: point = 68, n_alt = 0
   Insn 217: point = 69, n_alt = 8
   Insn 216: point = 70, n_alt = 0
   Insn 215: point = 71, n_alt = 5
   Insn 214: point = 73, n_alt = 4
   Insn 213: point = 75, n_alt = 0
   Insn 212: point = 76, n_alt = 0
   Insn 211: point = 76, n_alt = 0
   Insn 210: point = 76, n_alt = -2
   Insn 209: point = 76, n_alt = 0
   Insn 208: point = 77, n_alt = 0
   Insn 207: point = 77, n_alt = 0
   Insn 206: point = 78, n_alt = 0
   Insn 205: point = 78, n_alt = 0
   Insn 204: point = 78, n_alt = -2
   Insn 203: point = 78, n_alt = 0
   Insn 202: point = 78, n_alt = 0
   Insn 201: point = 78, n_alt = 8
   Insn 200: point = 79, n_alt = 0
   Insn 199: point = 80, n_alt = 3
   Insn 198: point = 81, n_alt = 2
   Insn 197: point = 83, n_alt = 0
   Insn 196: point = 84, n_alt = 0
  BB 16
   Insn 178: point = 86, n_alt = -1
   Insn 177: point = 86, n_alt = 1
   Insn 176: point = 86, n_alt = 1
   Insn 175: point = 87, n_alt = -2
   Insn 174: point = 88, n_alt = 0
   Insn 173: point = 88, n_alt = 0
   Insn 172: point = 88, n_alt = 0
   Insn 171: point = 89, n_alt = 0
   Insn 170: point = 90, n_alt = 0
   Insn 169: point = 91, n_alt = 0
   Insn 168: point = 92, n_alt = 3
   Insn 167: point = 93, n_alt = 0
   Insn 166: point = 94, n_alt = 0
   Insn 165: point = 95, n_alt = 0
  BB 14
   Insn 142: point = 97, n_alt = -1
   Insn 141: point = 97, n_alt = 1
   Insn 140: point = 97, n_alt = 1
   Insn 139: point = 98, n_alt = -2
   Insn 138: point = 99, n_alt = 0
   Insn 137: point = 99, n_alt = 0
   Insn 136: point = 99, n_alt = 0
   Insn 135: point = 100, n_alt = 3
   Insn 134: point = 101, n_alt = 0
   Insn 133: point = 102, n_alt = 0
   Insn 132: point = 103, n_alt = 0
   Insn 131: point = 104, n_alt = 3
   Insn 130: point = 105, n_alt = 0
   Insn 129: point = 106, n_alt = 0
  BB 12
   Insn 111: point = 108, n_alt = -1
   Insn 110: point = 108, n_alt = 0
   Insn 109: point = 109, n_alt = -2
   Insn 108: point = 110, n_alt = 0
   Insn 107: point = 110, n_alt = 0
   Insn 106: point = 110, n_alt = 0
   Insn 105: point = 111, n_alt = 0
   Insn 104: point = 111, n_alt = 0
   Insn 103: point = 111, n_alt = 0
  BB 10
   Insn 85: point = 113, n_alt = -1
   Insn 84: point = 113, n_alt = 0
   Insn 83: point = 114, n_alt = 2
   Insn 82: point = 116, n_alt = 0
   Insn 81: point = 117, n_alt = 2
   Insn 80: point = 119, n_alt = 0
  BB 8
   Insn 62: point = 121, n_alt = -1
   Insn 61: point = 121, n_alt = 0
   Insn 60: point = 122, n_alt = 0
  BB 6
   Insn 48: point = 124, n_alt = -1
   Insn 47: point = 124, n_alt = 0
   Insn 46: point = 125, n_alt = 0
   Insn 45: point = 126, n_alt = 1
   Insn 44: point = 127, n_alt = -2
   Insn 43: point = 128, n_alt = 0
   Insn 42: point = 128, n_alt = 0
   Insn 41: point = 128, n_alt = 0
   Insn 40: point = 128, n_alt = 0
   Insn 39: point = 129, n_alt = 3
   Insn 38: point = 130, n_alt = 0
   Insn 37: point = 131, n_alt = 3
   Insn 36: point = 132, n_alt = 0
  BB 4
   Insn 24: point = 133, n_alt = -1
   Insn 23: point = 133, n_alt = 0
   Insn 22: point = 134, n_alt = 0
   Insn 21: point = 136, n_alt = 0
   Insn 20: point = 138, n_alt = 2
   Insn 19: point = 140, n_alt = 0
  BB 2
   Insn 12: point = 142, n_alt = -1
   Insn 11: point = 142, n_alt = 1
   Insn 10: point = 142, n_alt = 1
   Insn 9: point = 143, n_alt = -2
   Insn 8: point = 144, n_alt = 0
   Insn 7: point = 144, n_alt = 0
   Insn 6: point = 144, n_alt = 0
   Insn 5: point = 144, n_alt = 0
   Insn 266: point = 144, n_alt = 0
 r82: [37..144] [32..35] [28..29] [25..26] [20..23] [15..18] [10..13] [5..8]
 r83: [137..138]
 r84: [135..136]
 r85: [133..134]
 r86: [126..127]
 r87: [124..125]
 r88: [121..122]
 r89: [21..22]
 r90: [118..119]
 r91: [113..117]
 r92: [113..114]
 r93: [16..17]
 r94: [110..111]
 r95: [108..109]
 r96: [11..12]
 r97: [102..106]
 r98: [101..105]
 r99: [33..34]
 r100: [90..95]
 r101: [89..94]
 r102: [88..93]
 r103: [6..7]
 r104: [80..84]
 r105: [80..81]
 r106: [76..77]
 r107: [72..73]
 r108: [69..71]
 r109: [56..66]
 r110: [45..49]
 r111: [45..46]
 r112: [43..44]
 r113: [40..42]
 r114: [36..36] [30..31] [27..27] [24..24] [19..19] [14..14] [9..9] [2..4]
 r115: [0..1]
 r116: [142..143]
 r117: [139..140]
 r118: [130..131]
 r119: [128..129]
 r120: [115..116]
 r121: [103..104]
 r122: [99..100]
 r123: [97..98]
 r124: [91..92]
 r125: [86..87]
 r126: [82..83]
 r127: [78..79]
 r128: [74..75]
 r129: [69..70]
 r130: [67..68]
 r131: [61..62]
 r132: [63..65]
 r133: [54..57]
 r134: [52..55]
 r135: [47..48]
 r136: [40..41]
 r137: [38..39]
 r141: [62..64]
 r142: [58..60]
 r143: [50..53]
Compressing live ranges: from 145 to 104 - 71%
Ranges after the compression:
 r82: [26..103] [23..24] [19..20] [16..17] [13..14] [10..11] [7..8] [4..5]
 r83: [98..99]
 r84: [96..97]
 r85: [94..95]
 r86: [88..89]
 r87: [86..87]
 r88: [84..85]
 r89: [13..14]
 r90: [82..83]
 r91: [78..81]
 r92: [78..79]
 r93: [10..11]
 r94: [76..77]
 r95: [74..75]
 r96: [7..8]
 r97: [72..73]
 r98: [72..73]
 r99: [23..24]
 r100: [66..67]
 r101: [66..67]
 r102: [66..67]
 r103: [4..5]
 r104: [60..63]
 r105: [60..61]
 r106: [56..57]
 r107: [52..53]
 r108: [50..51]
 r109: [40..47]
 r110: [32..35]
 r111: [32..33]
 r112: [30..31]
 r113: [28..29]
 r114: [25..25] [21..22] [18..18] [15..15] [12..12] [9..9] [6..6] [2..3]
 r115: [0..1]
 r116: [102..103]
 r117: [100..101]
 r118: [92..93]
 r119: [90..91]
 r120: [80..81]
 r121: [72..73]
 r122: [70..71]
 r123: [68..69]
 r124: [66..67]
 r125: [64..65]
 r126: [62..63]
 r127: [58..59]
 r128: [54..55]
 r129: [50..51]
 r130: [48..49]
 r131: [44..45]
 r132: [46..47]
 r133: [38..41]
 r134: [36..39]
 r135: [34..35]
 r136: [28..29]
 r137: [26..27]
 r141: [45..47]
 r142: [42..43]
 r143: [36..37]

********** Assignment #1: **********

	 Assigning to 141 (cl=AREG, orig=139, freq=2000, tfirst=141, tfreq=2000)...
	   Assign 0 to reload r141 (freq=2000)
	 Assigning to 142 (cl=GENERAL_REGS, orig=131, freq=3000, tfirst=142, tfreq=3000)...
	   Assign 0 to reload r142 (freq=3000)
	 Assigning to 143 (cl=GENERAL_REGS, orig=133, freq=3000, tfirst=143, tfreq=3000)...
	   Assign 0 to reload r143 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 266
changing reg in insn 235
changing reg in insn 225
changing reg in insn 218
changing reg in insn 210
changing reg in insn 204
changing reg in insn 188
changing reg in insn 183
changing reg in insn 157
changing reg in insn 152
changing reg in insn 146
changing reg in insn 121
changing reg in insn 116
changing reg in insn 95
changing reg in insn 90
changing reg in insn 72
changing reg in insn 66
changing reg in insn 52
changing reg in insn 28
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 60
changing reg in insn 61
changing reg in insn 69
changing reg in insn 71
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 87
changing reg in insn 89
changing reg in insn 103
changing reg in insn 106
changing reg in insn 109
changing reg in insn 110
changing reg in insn 113
changing reg in insn 115
changing reg in insn 129
changing reg in insn 133
changing reg in insn 130
changing reg in insn 134
changing reg in insn 149
changing reg in insn 151
changing reg in insn 165
changing reg in insn 170
changing reg in insn 166
changing reg in insn 171
changing reg in insn 167
changing reg in insn 172
changing reg in insn 180
changing reg in insn 182
changing reg in insn 196
changing reg in insn 199
changing reg in insn 198
changing reg in insn 199
changing reg in insn 207
changing reg in insn 209
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 217
changing reg in insn 219
changing reg in insn 223
changing reg in insn 226
changing reg in insn 227
changing reg in insn 228
changing reg in insn 228
changing reg in insn 230
changing reg in insn 238
changing reg in insn 191
changing reg in insn 160
changing reg in insn 124
changing reg in insn 98
changing reg in insn 75
changing reg in insn 55
changing reg in insn 31
changing reg in insn 14
changing reg in insn 243
changing reg in insn 243
changing reg in insn 247
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 20
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 82
changing reg in insn 83
changing reg in insn 131
changing reg in insn 132
changing reg in insn 135
changing reg in insn 136
changing reg in insn 139
changing reg in insn 140
changing reg in insn 168
changing reg in insn 169
changing reg in insn 175
changing reg in insn 176
changing reg in insn 197
changing reg in insn 198
changing reg in insn 200
changing reg in insn 201
changing reg in insn 213
changing reg in insn 214
changing reg in insn 216
changing reg in insn 217
changing reg in insn 218
changing reg in insn 219
changing reg in insn 221
changing reg in insn 220
changing reg in insn 221
changing reg in insn 223
changing reg in insn 224
changing reg in insn 225
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 232
deleting insn with uid = 9.
deleting insn with uid = 28.
deleting insn with uid = 44.
deleting insn with uid = 52.
deleting insn with uid = 66.
deleting insn with uid = 72.
deleting insn with uid = 90.
deleting insn with uid = 95.
deleting insn with uid = 109.
deleting insn with uid = 116.
deleting insn with uid = 121.
deleting insn with uid = 139.
deleting insn with uid = 146.
deleting insn with uid = 152.
deleting insn with uid = 157.
deleting insn with uid = 175.
deleting insn with uid = 183.
deleting insn with uid = 188.
deleting insn with uid = 204.
deleting insn with uid = 210.
deleting insn with uid = 270.
deleting insn with uid = 271.
deleting insn with uid = 235.
deleting insn with uid = 243.
deleting insn with uid = 247.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 173.
verify found no changes in insn with uid = 184.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 236.


sys_link

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={68d,43u} r1={32d,10u} r2={26d,5u} r3={1d,18u} r4={1d,1u} r7={71d,198u} r8={21d} r9={21d} r10={21d} r11={21d} r12={21d} r13={21d} r14={21d} r15={21d} r17={82d,8u} r18={21d} r20={21d} r21={21d} r22={21d} r23={21d} r24={21d} r25={21d} r26={21d} r27={21d} r28={21d} r29={21d} r30={21d} r31={21d} r32={21d} r33={21d} r34={21d} r35={21d} r36={21d} r37={21d} r38={21d} r39={21d} r40={21d} r41={21d} r42={21d} r43={21d} r44={21d} r45={21d} r46={21d} r47={21d} r48={21d} r49={21d} r50={21d} r51={21d} r52={21d} r53={21d} r54={21d} r55={21d} r56={21d} r57={21d} r58={21d} r59={21d} r60={21d} r61={21d} r62={21d} r63={21d} r64={21d} r65={21d} r66={21d} r67={21d} r68={21d} r69={21d} r70={21d} r71={21d} r72={21d} r73={21d} r74={21d} r75={21d} 
;;    total ref usage 1929{1646d,283u,0e} in 186{165 regular + 21 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 266 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 266 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 266 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":413:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 6 5 7 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 oldname+0 S4 A32])) "fs/namei.c":413:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("namei") [flags 0x3]  <function_decl 0x7f2fcf310500 namei>) [0 namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":413:16 823 {*call_value}
     (nil)
    (nil))
(insn 8 7 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":413:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 10 8 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])
        (reg:SI 0 ax [116])) "fs/namei.c":413:16 75 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":414:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "fs/namei.c":414:8 806 {*jcc}
     (nil)
 -> 17)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 250 3 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":415:16 75 {*movsi_internal}
     (nil))
(jump_insn 250 14 251 3 (set (pc)
        (label_ref 241)) "fs/namei.c":415:16 807 {jump}
     (nil)
 -> 241)
(barrier 251 250 17)
(code_label 17 251 18 4 96 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])) "fs/namei.c":416:9 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:HI 0 ax [orig:83 _1 ] [83])
        (mem:HI (reg/f:SI 0 ax [117]) [4 oldinode_38->i_mode+0 S2 A32])) "fs/namei.c":416:9 76 {*movhi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (reg:HI 0 ax [orig:83 _1 ] [83]))) "fs/namei.c":416:9 144 {*zero_extendhisi2}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (and:SI (reg:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":416:9 490 {*andsi_1}
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 16384 [0x4000]))) "fs/namei.c":416:8 11 {*cmpsi_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "fs/namei.c":416:8 806 {*jcc}
     (nil)
 -> 34)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":417:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 27 26 29 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":417:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 29 27 30 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":417:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 30 29 31 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":417:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 31 30 252 5 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":418:16 75 {*movsi_internal}
     (nil))
(jump_insn 252 31 253 5 (set (pc)
        (label_ref 241)) "fs/namei.c":418:16 807 {jump}
     (nil)
 -> 241)
(barrier 253 252 34)
(code_label 34 253 35 6 98 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":420:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 37 36 38 6 (parallel [
            (set (reg:SI 0 ax [118])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":420:11 209 {*addsi_1}
     (nil))
(insn 38 37 39 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [26  S4 A32])
        (reg:SI 0 ax [118])) "fs/namei.c":420:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 39 38 40 6 (parallel [
            (set (reg:SI 0 ax [119])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":420:11 209 {*addsi_1}
     (nil))
(insn 40 39 41 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg:SI 0 ax [119])) "fs/namei.c":420:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 41 40 42 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [8 newname+0 S4 A32])) "fs/namei.c":420:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 42 41 43 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("dir_namei") [flags 0x3]  <function_decl 0x7f2fcf349b00 dir_namei>) [0 dir_namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":420:11 823 {*call_value}
     (nil)
    (nil))
(insn 43 42 45 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":420:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 43 46 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:86 _4 ] [86])) "fs/namei.c":420:9 75 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg/f:SI 0 ax [orig:87 dir.70_5 ] [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":421:9 75 {*movsi_internal}
     (nil))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:87 dir.70_5 ] [87])
            (const_int 0 [0]))) "fs/namei.c":421:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/namei.c":421:8 806 {*jcc}
     (nil)
 -> 58)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":422:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 51 50 53 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":422:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 53 51 54 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":422:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 54 53 55 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":422:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 55 54 254 7 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -13 [0xfffffffffffffff3])) "fs/namei.c":423:16 75 {*movsi_internal}
     (nil))
(jump_insn 254 55 255 7 (set (pc)
        (label_ref 241)) "fs/namei.c":423:16 807 {jump}
     (nil)
 -> 241)
(barrier 255 254 58)
(code_label 58 255 59 8 99 (nil) [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg:SI 0 ax [orig:88 namelen.71_6 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 namelen+0 S4 A32])) "fs/namei.c":425:9 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 namelen.71_6 ] [88])
            (const_int 0 [0]))) "fs/namei.c":425:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "fs/namei.c":425:8 806 {*jcc}
     (nil)
 -> 78)
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":426:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 65 64 67 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":426:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 67 65 68 9 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":426:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 68 67 69 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":426:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 69 68 70 9 (set (reg/f:SI 0 ax [orig:89 dir.72_7 ] [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":427:9 75 {*movsi_internal}
     (nil))
(insn 70 69 71 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":427:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 71 70 73 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:89 dir.72_7 ] [89])) "fs/namei.c":427:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 73 71 74 9 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":427:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 74 73 75 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":427:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 75 74 256 9 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":428:16 75 {*movsi_internal}
     (nil))
(jump_insn 256 75 257 9 (set (pc)
        (label_ref 241)) "fs/namei.c":428:16 807 {jump}
     (nil)
 -> 241)
(barrier 257 256 78)
(code_label 78 257 79 10 100 (nil) [1 uses])
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 10 (set (reg/f:SI 0 ax [orig:90 dir.73_8 ] [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":430:12 75 {*movsi_internal}
     (nil))
(insn 81 80 82 10 (set (reg:HI 1 dx [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:90 dir.73_8 ] [90])
                (const_int 44 [0x2c])) [4 dir.73_8->i_dev+0 S2 A32])) "fs/namei.c":430:12 76 {*movhi_internal}
     (nil))
(insn 82 81 83 10 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])) "fs/namei.c":430:31 75 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:HI 0 ax [orig:92 _10 ] [92])
        (mem:HI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 44 [0x2c])) [4 oldinode_38->i_dev+0 S2 A32])) "fs/namei.c":430:31 76 {*movhi_internal}
     (nil))
(insn 84 83 85 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:91 _9 ] [91])
            (reg:HI 0 ax [orig:92 _10 ] [92]))) "fs/namei.c":430:8 10 {*cmphi_1}
     (nil))
(jump_insn 85 84 86 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "fs/namei.c":430:8 806 {*jcc}
     (nil)
 -> 101)
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg/f:SI 0 ax [orig:93 dir.74_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":431:9 75 {*movsi_internal}
     (nil))
(insn 88 87 89 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":431:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 89 88 91 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:93 dir.74_11 ] [93])) "fs/namei.c":431:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 91 89 92 11 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":431:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 92 91 93 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":431:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 93 92 94 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":432:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 94 93 96 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":432:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 96 94 97 11 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":432:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 97 96 98 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":432:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 98 97 258 11 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -18 [0xffffffffffffffee])) "fs/namei.c":433:16 75 {*movsi_internal}
     (nil))
(jump_insn 258 98 259 11 (set (pc)
        (label_ref 241)) "fs/namei.c":433:16 807 {jump}
     (nil)
 -> 241)
(barrier 259 258 101)
(code_label 101 259 102 12 101 (nil) [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:SI 0 ax [orig:94 dir.75_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":435:10 75 {*movsi_internal}
     (nil))
(insn 104 103 105 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":435:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 105 104 106 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (const_int 2 [0x2])) "fs/namei.c":435:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 106 105 107 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:94 dir.75_12 ] [94])) "fs/namei.c":435:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 107 106 108 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":435:10 823 {*call_value}
     (nil)
    (nil))
(insn 108 107 110 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":435:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 110 108 111 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "fs/namei.c":435:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 111 110 112 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) "fs/namei.c":435:8 806 {*jcc}
     (nil)
 -> 127)
(note 112 111 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 13 (set (reg/f:SI 0 ax [orig:96 dir.76_14 ] [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":436:9 75 {*movsi_internal}
     (nil))
(insn 114 113 115 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":436:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 115 114 117 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:96 dir.76_14 ] [96])) "fs/namei.c":436:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 117 115 118 13 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":436:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 118 117 119 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":436:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 119 118 120 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":437:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 120 119 122 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":437:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 122 120 123 13 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":437:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 123 122 124 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":437:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 124 123 260 13 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -13 [0xfffffffffffffff3])) "fs/namei.c":438:16 75 {*movsi_internal}
     (nil))
(jump_insn 260 124 261 13 (set (pc)
        (label_ref 241)) "fs/namei.c":438:16 807 {jump}
     (nil)
 -> 241)
(barrier 261 260 127)
(code_label 127 261 128 14 102 (nil) [1 uses])
(note 128 127 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 14 (set (reg:SI 1 dx [orig:97 namelen.77_15 ] [97])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 namelen+0 S4 A32])) "fs/namei.c":440:10 75 {*movsi_internal}
     (nil))
(insn 130 129 131 14 (set (reg/f:SI 0 ax [orig:98 basename.78_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 basename+0 S4 A32])) "fs/namei.c":440:10 75 {*movsi_internal}
     (nil))
(insn 131 130 132 14 (parallel [
            (set (reg:SI 2 cx [121])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":440:10 209 {*addsi_1}
     (nil))
(insn 132 131 133 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 2 cx [121])) "fs/namei.c":440:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 133 132 134 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:97 namelen.77_15 ] [97])) "fs/namei.c":440:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 134 133 135 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:98 basename.78_16 ] [98])) "fs/namei.c":440:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 135 134 136 14 (parallel [
            (set (reg:SI 0 ax [122])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":440:10 209 {*addsi_1}
     (nil))
(insn 136 135 137 14 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [122])) "fs/namei.c":440:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 137 136 138 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":440:10 823 {*call_value}
     (nil)
    (nil))
(insn 138 137 140 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":440:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 140 138 141 14 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [123])) "fs/namei.c":440:10 75 {*movsi_internal}
     (nil))
(insn 141 140 142 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":441:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 142 141 143 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "fs/namei.c":441:8 806 {*jcc}
     (nil)
 -> 163)
(note 143 142 144 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":442:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 145 144 147 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 bh+0 S4 A32])) "fs/namei.c":442:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 147 145 148 15 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":442:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 148 147 149 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":442:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 149 148 150 15 (set (reg/f:SI 0 ax [orig:99 dir.79_17 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":443:9 75 {*movsi_internal}
     (nil))
(insn 150 149 151 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":443:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 151 150 153 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:99 dir.79_17 ] [99])) "fs/namei.c":443:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 153 151 154 15 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":443:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 154 153 155 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":443:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 155 154 156 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":444:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 156 155 158 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":444:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 158 156 159 15 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":444:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 159 158 160 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":444:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 160 159 262 15 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -17 [0xffffffffffffffef])) "fs/namei.c":445:16 75 {*movsi_internal}
     (nil))
(jump_insn 262 160 263 15 (set (pc)
        (label_ref 241)) "fs/namei.c":445:16 807 {jump}
     (nil)
 -> 241)
(barrier 263 262 163)
(code_label 163 263 164 16 103 (nil) [1 uses])
(note 164 163 165 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 16 (set (reg:SI 2 cx [orig:100 namelen.80_18 ] [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [11 namelen+0 S4 A32])) "fs/namei.c":447:10 75 {*movsi_internal}
     (nil))
(insn 166 165 167 16 (set (reg/f:SI 1 dx [orig:101 basename.81_19 ] [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [8 basename+0 S4 A32])) "fs/namei.c":447:10 75 {*movsi_internal}
     (nil))
(insn 167 166 168 16 (set (reg/f:SI 0 ax [orig:102 dir.82_20 ] [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":447:10 75 {*movsi_internal}
     (nil))
(insn 168 167 169 16 (parallel [
            (set (reg:SI 4 si [124])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":447:10 209 {*addsi_1}
     (nil))
(insn 169 168 170 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 4 si [124])) "fs/namei.c":447:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 170 169 171 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 2 cx [orig:100 namelen.80_18 ] [100])) "fs/namei.c":447:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 171 170 172 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 1 dx [orig:101 basename.81_19 ] [101])) "fs/namei.c":447:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 172 171 173 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:102 dir.82_20 ] [102])) "fs/namei.c":447:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 173 172 174 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("add_entry") [flags 0x3]  <function_decl 0x7f2fcf349d00 add_entry>) [0 add_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":447:10 823 {*call_value}
     (nil)
    (nil))
(insn 174 173 176 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":447:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 176 174 177 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [125])) "fs/namei.c":447:10 75 {*movsi_internal}
     (nil))
(insn 177 176 178 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":448:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 178 177 179 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) "fs/namei.c":448:8 806 {*jcc}
     (nil)
 -> 194)
(note 179 178 180 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 17 (set (reg/f:SI 0 ax [orig:103 dir.83_21 ] [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":449:9 75 {*movsi_internal}
     (nil))
(insn 181 180 182 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":449:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 182 181 184 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:103 dir.83_21 ] [103])) "fs/namei.c":449:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 184 182 185 17 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":449:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 185 184 186 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":449:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 186 185 187 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":450:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 187 186 189 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":450:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 189 187 190 17 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":450:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 190 189 191 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":450:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 191 190 264 17 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":451:16 75 {*movsi_internal}
     (nil))
(jump_insn 264 191 265 17 (set (pc)
        (label_ref 241)) "fs/namei.c":451:16 807 {jump}
     (nil)
 -> 241)
(barrier 265 264 194)
(code_label 194 265 195 18 104 (nil) [1 uses])
(note 195 194 196 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 18 (set (reg/f:SI 0 ax [orig:104 de.84_22 ] [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])) "fs/namei.c":453:7 75 {*movsi_internal}
     (nil))
(insn 197 196 198 18 (set (reg/f:SI 1 dx [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])) "fs/namei.c":453:25 75 {*movsi_internal}
     (nil))
(insn 198 197 199 18 (set (reg:HI 1 dx [orig:105 _23 ] [105])
        (mem:HI (plus:SI (reg/f:SI 1 dx [126])
                (const_int 46 [0x2e])) [4 oldinode_38->i_num+0 S2 A16])) "fs/namei.c":453:25 76 {*movhi_internal}
     (nil))
(insn 199 198 200 18 (set (mem:HI (reg/f:SI 0 ax [orig:104 de.84_22 ] [104]) [4 de.84_22->inode+0 S2 A16])
        (reg:HI 1 dx [orig:105 _23 ] [105])) "fs/namei.c":453:15 76 {*movhi_internal}
     (nil))
(insn 200 199 201 18 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":454:16 75 {*movsi_internal}
     (nil))
(insn 201 200 202 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [127])
                (const_int 11 [0xb])) [0 bh_46->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":454:16 77 {*movqi_internal}
     (nil))
(insn 202 201 203 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":455:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 203 202 205 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 bh+0 S4 A32])) "fs/namei.c":455:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 205 203 206 18 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":455:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 206 205 207 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":455:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 207 206 208 18 (set (reg/f:SI 0 ax [orig:106 dir.85_24 ] [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 dir+0 S4 A32])) "fs/namei.c":456:5 75 {*movsi_internal}
     (nil))
(insn 208 207 209 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":456:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 209 208 211 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:106 dir.85_24 ] [106])) "fs/namei.c":456:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 211 209 212 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":456:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 212 211 213 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":456:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 213 212 214 18 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])) "fs/namei.c":457:13 75 {*movsi_internal}
     (nil))
(insn 214 213 215 18 (set (reg:QI 0 ax [orig:107 _25 ] [107])
        (mem:QI (plus:SI (reg/f:SI 0 ax [128])
                (const_int 13 [0xd])) [0 oldinode_38->i_nlinks+0 S1 A8])) "fs/namei.c":457:13 77 {*movqi_internal}
     (nil))
(insn 215 214 216 18 (parallel [
            (set (reg:QI 1 dx [orig:108 _27 ] [108])
                (plus:QI (reg:QI 0 ax [orig:107 _25 ] [107])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":457:23 213 {*addqi_1}
     (nil))
(insn 216 215 217 18 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])) "fs/namei.c":457:23 75 {*movsi_internal}
     (nil))
(insn 217 216 218 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [129])
                (const_int 13 [0xd])) [0 oldinode_38->i_nlinks+0 S1 A8])
        (reg:QI 1 dx [orig:108 _27 ] [108])) "fs/namei.c":457:23 77 {*movqi_internal}
     (nil))
(insn 218 217 219 18 (set (reg/f:SI 0 ax [130])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 219 218 220 18 (set (reg:SI 2 cx [orig:109 jiffies.86_28 ] [109])
        (mem/v/c:SI (reg/f:SI 0 ax [130]) [5 jiffies+0 S4 A32])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 220 219 268 18 (set (reg:SI 1 dx [132])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 268 220 221 18 (set (reg:SI 0 ax [139])
        (reg:SI 2 cx [orig:109 jiffies.86_28 ] [109])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 221 268 269 18 (parallel [
            (set (reg:SI 1 dx [131])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [139]))
                            (sign_extend:DI (reg:SI 1 dx [132])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [139]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":458:25 435 {*smulsi3_highpart_1}
     (nil))
(insn 269 221 222 18 (set (reg:SI 0 ax [131])
        (reg:SI 1 dx [131])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 222 269 223 18 (parallel [
            (set (reg:SI 0 ax [131])
                (ashiftrt:SI (reg:SI 0 ax [131])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":458:25 702 {*ashrsi3_1}
     (nil))
(insn 223 222 224 18 (parallel [
            (set (reg:SI 2 cx [134])
                (ashiftrt:SI (reg:SI 2 cx [orig:109 jiffies.86_28 ] [109])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":458:25 694 {ashrsi3_cvt}
     (nil))
(insn 224 223 272 18 (parallel [
            (set (reg:SI 0 ax [133])
                (minus:SI (reg:SI 0 ax [133])
                    (reg:SI 2 cx [134])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":458:25 282 {*subsi_1}
     (nil))
(insn 272 224 225 18 (set (reg:SI 1 dx [orig:110 _29 ] [110])
        (reg:SI 0 ax [133])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 225 272 226 18 (set (reg/f:SI 0 ax [135])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 226 225 227 18 (set (reg:SI 0 ax [orig:111 startup_time.87_30 ] [111])
        (mem/c:SI (reg/f:SI 0 ax [135]) [5 startup_time+0 S4 A32])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 227 226 228 18 (parallel [
            (set (reg:SI 0 ax [orig:112 _31 ] [112])
                (plus:SI (reg:SI 0 ax [orig:111 startup_time.87_30 ] [111])
                    (reg:SI 1 dx [orig:110 _29 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":458:25 209 {*addsi_1}
     (nil))
(insn 228 227 229 18 (set (reg:SI 1 dx [orig:113 _32 ] [113])
        (reg:SI 0 ax [orig:112 _31 ] [112])) "fs/namei.c":458:25 75 {*movsi_internal}
     (nil))
(insn 229 228 230 18 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])) "fs/namei.c":458:23 75 {*movsi_internal}
     (nil))
(insn 230 229 231 18 (set (mem:SI (plus:SI (reg/f:SI 0 ax [136])
                (const_int 40 [0x28])) [5 oldinode_38->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:113 _32 ] [113])) "fs/namei.c":458:23 75 {*movsi_internal}
     (nil))
(insn 231 230 232 18 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 oldinode+0 S4 A32])) "fs/namei.c":459:22 75 {*movsi_internal}
     (nil))
(insn 232 231 233 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [137])
                (const_int 51 [0x33])) [0 oldinode_38->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":459:22 77 {*movqi_internal}
     (nil))
(insn 233 232 234 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":460:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 234 233 236 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 oldinode+0 S4 A32])) "fs/namei.c":460:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 236 234 237 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":460:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 237 236 238 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":460:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 238 237 241 18 (set (reg:SI 0 ax [orig:114 _33 ] [114])
        (const_int 0 [0])) "fs/namei.c":461:12 75 {*movsi_internal}
     (nil))
(code_label 241 238 242 19 105 (nil) [8 uses])
(note 242 241 248 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 248 242 267 19 (use (reg/i:SI 0 ax)) "fs/namei.c":462:1 -1
     (nil))
(note 267 248 0 NOTE_INSN_DELETED)

;; Function sys_mknod (sys_mknod, funcdef_no=17, decl_uid=1518, cgraph_uid=18, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 19:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 77:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 86:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 103:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 120:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 129:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 131:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 136:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 144:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 150:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=149 from oldreg=147, assigning class AREG to r149
  150: {r132:SI=trunc(sign_extend(r149:SI)*sign_extend(r133:SI) 0>>0x20);clobber r149:SI;clobber flags:CC;}
      REG_DEAD r133:SI
      REG_UNUSED r147:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  249: r149:SI=r103:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 151:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=150 from oldreg=132, assigning class GENERAL_REGS to r150
  151: {r150:SI=r150:SI>>0x5;clobber flags:CC;}
      REG_DEAD r132:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  250: r150:SI=r132:SI
    Inserting insn reload after:
  251: r134:SI=r150:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 152:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 153:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=151 from oldreg=134, assigning class GENERAL_REGS to r151
  153: {r151:SI=r151:SI-r135:SI;clobber flags:CC;}
      REG_DEAD r135:SI
      REG_DEAD r134:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  252: r151:SI=r134:SI
    Inserting insn reload after:
  253: r104:SI=r151:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 156
	 Choosing alt 0 in insn 156:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 165:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 169:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 175:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 182:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 188:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 189:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 193:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 201:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 202:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 204:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 206:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 210:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 211:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 215:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 216:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 220:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10 11
EBB 12 13
EBB 14 15
EBB 16
EBB 17 18
EBB 19
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
   Insn 231: point = 0, n_alt = -1
   Insn 230: point = 0, n_alt = -2
   Insn 226: point = 1, n_alt = -2
  BB 18
   Insn 245: point = 4, n_alt = -1
   Insn 194: point = 4, n_alt = 0
   Insn 193: point = 5, n_alt = 0
   Insn 192: point = 5, n_alt = 0
   Insn 191: point = 5, n_alt = -2
   Insn 190: point = 6, n_alt = 0
   Insn 189: point = 6, n_alt = 0
   Insn 188: point = 6, n_alt = 8
   Insn 187: point = 7, n_alt = 0
   Insn 186: point = 8, n_alt = 0
   Insn 185: point = 8, n_alt = 0
   Insn 184: point = 8, n_alt = -2
   Insn 183: point = 8, n_alt = 0
   Insn 182: point = 9, n_alt = 0
   Insn 181: point = 9, n_alt = 0
  BB 11
   Insn 241: point = 11, n_alt = -1
   Insn 97: point = 11, n_alt = 0
   Insn 96: point = 12, n_alt = 0
   Insn 95: point = 12, n_alt = 0
   Insn 94: point = 12, n_alt = -2
   Insn 93: point = 13, n_alt = 0
   Insn 92: point = 14, n_alt = 0
   Insn 91: point = 14, n_alt = 0
   Insn 90: point = 15, n_alt = 0
   Insn 89: point = 15, n_alt = 0
   Insn 88: point = 15, n_alt = -2
   Insn 87: point = 15, n_alt = 0
   Insn 86: point = 15, n_alt = 0
  BB 9
   Insn 239: point = 16, n_alt = -1
   Insn 66: point = 16, n_alt = 0
   Insn 65: point = 17, n_alt = 0
   Insn 64: point = 17, n_alt = 0
   Insn 63: point = 17, n_alt = -2
   Insn 62: point = 18, n_alt = 0
   Insn 61: point = 19, n_alt = 0
   Insn 60: point = 19, n_alt = 0
  BB 7
   Insn 237: point = 21, n_alt = -1
   Insn 45: point = 21, n_alt = 0
   Insn 44: point = 22, n_alt = 0
   Insn 43: point = 22, n_alt = 0
   Insn 42: point = 22, n_alt = -2
   Insn 41: point = 23, n_alt = 0
   Insn 40: point = 24, n_alt = 0
   Insn 39: point = 24, n_alt = 0
  BB 5
   Insn 235: point = 26, n_alt = -1
   Insn 30: point = 26, n_alt = 0
  BB 3
   Insn 233: point = 27, n_alt = -1
   Insn 11: point = 27, n_alt = 0
  BB 13
   Insn 243: point = 28, n_alt = -1
   Insn 121: point = 28, n_alt = 0
   Insn 120: point = 29, n_alt = 0
   Insn 119: point = 29, n_alt = 0
   Insn 118: point = 29, n_alt = -2
   Insn 117: point = 30, n_alt = 0
   Insn 116: point = 31, n_alt = 0
   Insn 115: point = 31, n_alt = 0
  BB 19
   Insn 221: point = 33, n_alt = 0
   Insn 220: point = 34, n_alt = 0
   Insn 219: point = 34, n_alt = 0
   Insn 218: point = 34, n_alt = -2
   Insn 217: point = 35, n_alt = 0
   Insn 216: point = 35, n_alt = 0
   Insn 215: point = 35, n_alt = 0
   Insn 214: point = 35, n_alt = 0
   Insn 213: point = 35, n_alt = -2
   Insn 212: point = 35, n_alt = 0
   Insn 211: point = 35, n_alt = 0
   Insn 210: point = 35, n_alt = 0
   Insn 209: point = 35, n_alt = 0
   Insn 208: point = 35, n_alt = -2
   Insn 207: point = 35, n_alt = 0
   Insn 206: point = 36, n_alt = 0
   Insn 205: point = 36, n_alt = 0
   Insn 204: point = 37, n_alt = 8
   Insn 203: point = 38, n_alt = 0
   Insn 202: point = 39, n_alt = 3
   Insn 201: point = 40, n_alt = 2
   Insn 200: point = 42, n_alt = 0
   Insn 199: point = 43, n_alt = 0
  BB 17
   Insn 179: point = 45, n_alt = -1
   Insn 178: point = 45, n_alt = 1
   Insn 177: point = 45, n_alt = 1
   Insn 176: point = 46, n_alt = -2
   Insn 175: point = 47, n_alt = 0
   Insn 174: point = 47, n_alt = 0
   Insn 173: point = 47, n_alt = 0
   Insn 172: point = 48, n_alt = 0
   Insn 171: point = 49, n_alt = 0
   Insn 170: point = 50, n_alt = 0
   Insn 169: point = 51, n_alt = 3
   Insn 168: point = 52, n_alt = 0
   Insn 167: point = 53, n_alt = 0
   Insn 166: point = 54, n_alt = 0
   Insn 165: point = 55, n_alt = 8
   Insn 164: point = 56, n_alt = 0
   Insn 163: point = 57, n_alt = 1
   Insn 162: point = 58, n_alt = 0
   Insn 161: point = 59, n_alt = 0
   Insn 160: point = 61, n_alt = 0
   Insn 159: point = 62, n_alt = 1
   Insn 158: point = 63, n_alt = 0
   Insn 157: point = 64, n_alt = -2
   Insn 156: point = 66, n_alt = 0
   Insn 155: point = 68, n_alt = 0
   Insn 154: point = 70, n_alt = 0
   Insn 253: point = 71, n_alt = -2
	Hard reg 1 is preferable by r151 with profit 1000
   Insn 153: point = 73, n_alt = 0
   Insn 252: point = 75, n_alt = -2
	Hard reg 1 is preferable by r151 with profit 1000
	Hard reg 0 is preferable by r151 with profit 1000
   Insn 152: point = 77, n_alt = 1
   Insn 251: point = 79, n_alt = -2
	Hard reg 0 is preferable by r150 with profit 1000
   Insn 151: point = 81, n_alt = 0
   Insn 250: point = 82, n_alt = -2
	Hard reg 0 is preferable by r150 with profit 1000
	Hard reg 1 is preferable by r150 with profit 1000
   Insn 150: point = 84, n_alt = 0
   Insn 249: point = 86, n_alt = -2
	Hard reg 2 is preferable by r149 with profit 1000
   Insn 149: point = 87, n_alt = 0
   Insn 148: point = 88, n_alt = 0
   Insn 147: point = 90, n_alt = 0
  BB 16
   Insn 144: point = 92, n_alt = 3
   Insn 143: point = 93, n_alt = 0
   Insn 142: point = 94, n_alt = 0
   Insn 141: point = 96, n_alt = 0
  BB 15
   Insn 138: point = 98, n_alt = -1
   Insn 137: point = 98, n_alt = 0
   Insn 136: point = 99, n_alt = 0
   Insn 135: point = 101, n_alt = 0
  BB 14
   Insn 133: point = 103, n_alt = -1
   Insn 132: point = 103, n_alt = 0
   Insn 131: point = 104, n_alt = 0
   Insn 130: point = 106, n_alt = 0
   Insn 129: point = 107, n_alt = 3
   Insn 128: point = 108, n_alt = 0
   Insn 127: point = 109, n_alt = 0
   Insn 126: point = 111, n_alt = 0
  BB 12
   Insn 113: point = 113, n_alt = -1
   Insn 112: point = 113, n_alt = 1
   Insn 111: point = 113, n_alt = 1
   Insn 110: point = 114, n_alt = -2
   Insn 109: point = 115, n_alt = 0
   Insn 108: point = 115, n_alt = 0
   Insn 107: point = 115, n_alt = -2
   Insn 106: point = 115, n_alt = 0
   Insn 105: point = 116, n_alt = 0
   Insn 104: point = 116, n_alt = 0
   Insn 103: point = 118, n_alt = 2
   Insn 102: point = 120, n_alt = 0
  BB 10
   Insn 84: point = 122, n_alt = -1
   Insn 83: point = 122, n_alt = 1
   Insn 82: point = 122, n_alt = 1
   Insn 81: point = 123, n_alt = -2
   Insn 80: point = 124, n_alt = 0
   Insn 79: point = 124, n_alt = 0
   Insn 78: point = 124, n_alt = 0
   Insn 77: point = 125, n_alt = 3
   Insn 76: point = 126, n_alt = 0
   Insn 75: point = 127, n_alt = 0
   Insn 74: point = 128, n_alt = 0
   Insn 73: point = 129, n_alt = 3
   Insn 72: point = 130, n_alt = 0
   Insn 71: point = 131, n_alt = 0
  BB 8
   Insn 58: point = 133, n_alt = -1
   Insn 57: point = 133, n_alt = 0
   Insn 56: point = 134, n_alt = -2
   Insn 55: point = 135, n_alt = 0
   Insn 54: point = 135, n_alt = 0
   Insn 53: point = 135, n_alt = 0
   Insn 52: point = 136, n_alt = 0
   Insn 51: point = 136, n_alt = 0
   Insn 50: point = 136, n_alt = 0
  BB 6
   Insn 37: point = 138, n_alt = -1
   Insn 36: point = 138, n_alt = 0
   Insn 35: point = 139, n_alt = 0
  BB 4
   Insn 28: point = 141, n_alt = -1
   Insn 27: point = 141, n_alt = 0
   Insn 26: point = 142, n_alt = 0
   Insn 25: point = 143, n_alt = 1
   Insn 24: point = 144, n_alt = -2
   Insn 23: point = 145, n_alt = 0
   Insn 22: point = 145, n_alt = 0
   Insn 21: point = 145, n_alt = 0
   Insn 20: point = 145, n_alt = 0
   Insn 19: point = 146, n_alt = 3
   Insn 18: point = 147, n_alt = 0
   Insn 17: point = 148, n_alt = 3
   Insn 16: point = 149, n_alt = 0
  BB 2
   Insn 9: point = 150, n_alt = -1
   Insn 8: point = 150, n_alt = 0
   Insn 7: point = 151, n_alt = 2
   Insn 6: point = 153, n_alt = 0
   Insn 5: point = 155, n_alt = 0
   Insn 247: point = 156, n_alt = 0
 r82: [34..156] [29..32] [22..25] [17..20] [12..15] [5..10]
 r83: [152..153]
 r84: [150..151]
 r85: [143..144]
 r86: [141..142]
 r87: [138..139]
 r88: [23..24]
 r89: [135..136]
 r90: [133..134]
 r91: [18..19]
 r92: [127..131]
 r93: [126..130]
 r94: [13..14]
 r95: [119..120]
 r96: [117..118]
 r97: [115..116]
 r98: [30..31]
 r99: [107..109]
 r100: [103..104]
 r101: [98..99]
 r102: [92..94]
 r103: [78..88]
 r104: [67..71]
 r105: [67..68]
 r106: [65..66]
 r107: [62..64]
 r108: [57..59]
 r109: [49..54]
 r110: [48..53]
 r111: [47..52]
 r112: [8..9]
 r113: [39..43]
 r114: [39..40]
 r115: [35..36]
 r116: [33..33] [26..28] [21..21] [16..16] [11..11] [2..4]
 r117: [0..1]
 r118: [154..155]
 r119: [147..148]
 r120: [145..146]
 r121: [128..129]
 r122: [124..125]
 r123: [122..123]
 r124: [113..114]
 r125: [110..111]
 r126: [107..108]
 r127: [105..106]
 r128: [100..101]
 r129: [95..96]
 r130: [92..93]
 r131: [89..90]
 r132: [83..84]
 r133: [85..87]
 r134: [76..79]
 r135: [74..77]
 r136: [69..70]
 r137: [62..63]
 r138: [60..61]
 r139: [57..58]
 r140: [55..56]
 r141: [50..51]
 r142: [45..46]
 r143: [6..7]
 r144: [41..42]
 r145: [37..38]
 r149: [84..86]
 r150: [80..82]
 r151: [72..75]
Compressing live ranges: from 157 to 112 - 71%
Ranges after the compression:
 r82: [22..111] [19..20] [15..16] [12..13] [9..10] [4..7]
 r83: [108..109]
 r84: [106..107]
 r85: [100..101]
 r86: [98..99]
 r87: [96..97]
 r88: [15..16]
 r89: [94..95]
 r90: [92..93]
 r91: [12..13]
 r92: [90..91]
 r93: [90..91]
 r94: [9..10]
 r95: [84..85]
 r96: [82..83]
 r97: [80..81]
 r98: [19..20]
 r99: [74..75]
 r100: [70..71]
 r101: [66..67]
 r102: [62..63]
 r103: [52..59]
 r104: [44..47]
 r105: [44..45]
 r106: [42..43]
 r107: [40..41]
 r108: [36..37]
 r109: [32..33]
 r110: [32..33]
 r111: [32..33]
 r112: [6..7]
 r113: [26..29]
 r114: [26..27]
 r115: [22..23]
 r116: [21..21] [17..18] [14..14] [11..11] [8..8] [2..3]
 r117: [0..1]
 r118: [110..111]
 r119: [104..105]
 r120: [102..103]
 r121: [90..91]
 r122: [88..89]
 r123: [86..87]
 r124: [78..79]
 r125: [76..77]
 r126: [74..75]
 r127: [72..73]
 r128: [68..69]
 r129: [64..65]
 r130: [62..63]
 r131: [60..61]
 r132: [56..57]
 r133: [58..59]
 r134: [50..53]
 r135: [48..51]
 r136: [46..47]
 r137: [40..41]
 r138: [38..39]
 r139: [36..37]
 r140: [34..35]
 r141: [32..33]
 r142: [30..31]
 r143: [4..5]
 r144: [28..29]
 r145: [24..25]
 r149: [57..59]
 r150: [54..55]
 r151: [48..49]

********** Assignment #1: **********

	 Assigning to 149 (cl=AREG, orig=147, freq=2000, tfirst=149, tfreq=2000)...
	   Assign 0 to reload r149 (freq=2000)
	 Assigning to 150 (cl=GENERAL_REGS, orig=132, freq=3000, tfirst=150, tfreq=3000)...
	   Assign 0 to reload r150 (freq=3000)
	 Assigning to 151 (cl=GENERAL_REGS, orig=134, freq=3000, tfirst=151, tfreq=3000)...
	   Assign 0 to reload r151 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 247
changing reg in insn 218
changing reg in insn 213
changing reg in insn 208
changing reg in insn 191
changing reg in insn 184
changing reg in insn 154
changing reg in insn 147
changing reg in insn 118
changing reg in insn 107
changing reg in insn 94
changing reg in insn 88
changing reg in insn 63
changing reg in insn 42
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 50
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 60
changing reg in insn 62
changing reg in insn 71
changing reg in insn 75
changing reg in insn 72
changing reg in insn 76
changing reg in insn 91
changing reg in insn 93
changing reg in insn 102
changing reg in insn 103
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 106
changing reg in insn 115
changing reg in insn 117
changing reg in insn 127
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 136
changing reg in insn 137
changing reg in insn 142
changing reg in insn 144
changing reg in insn 148
changing reg in insn 152
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 159
changing reg in insn 161
changing reg in insn 163
changing reg in insn 166
changing reg in insn 171
changing reg in insn 167
changing reg in insn 172
changing reg in insn 168
changing reg in insn 173
changing reg in insn 181
changing reg in insn 183
changing reg in insn 199
changing reg in insn 202
changing reg in insn 201
changing reg in insn 202
changing reg in insn 205
changing reg in insn 207
changing reg in insn 221
changing reg in insn 194
changing reg in insn 121
changing reg in insn 97
changing reg in insn 66
changing reg in insn 45
changing reg in insn 30
changing reg in insn 11
changing reg in insn 226
changing reg in insn 226
changing reg in insn 230
changing reg in insn 5
changing reg in insn 6
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 73
changing reg in insn 74
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 82
changing reg in insn 110
changing reg in insn 111
changing reg in insn 126
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 135
changing reg in insn 136
changing reg in insn 141
changing reg in insn 143
changing reg in insn 144
changing reg in insn 147
changing reg in insn 148
changing reg in insn 150
changing reg in insn 149
changing reg in insn 150
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 169
changing reg in insn 170
changing reg in insn 176
changing reg in insn 177
changing reg in insn 187
changing reg in insn 188
changing reg in insn 200
changing reg in insn 201
changing reg in insn 203
changing reg in insn 204
deleting insn with uid = 24.
deleting insn with uid = 42.
deleting insn with uid = 56.
deleting insn with uid = 63.
deleting insn with uid = 81.
deleting insn with uid = 88.
deleting insn with uid = 94.
deleting insn with uid = 107.
deleting insn with uid = 110.
deleting insn with uid = 118.
deleting insn with uid = 251.
deleting insn with uid = 252.
deleting insn with uid = 176.
deleting insn with uid = 184.
deleting insn with uid = 191.
deleting insn with uid = 208.
deleting insn with uid = 213.
deleting insn with uid = 218.
deleting insn with uid = 226.
deleting insn with uid = 230.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 214.
verify found no changes in insn with uid = 219.


sys_mknod

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={68d,50u} r1={27d,11u} r2={20d,5u} r3={1d,14u} r4={1d,1u} r7={53d,161u} r8={15d} r9={15d} r10={15d} r11={15d} r12={15d} r13={15d} r14={15d} r15={15d} r16={2e} r17={65d,9u} r18={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} 
;;    total ref usage 1463{1210d,251u,2e} in 173{158 regular + 15 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 247 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 247 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 247 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [118])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":472:10 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 current.88_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [118]) [6 current+0 S4 A32])) "fs/namei.c":472:10 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:83 current.88_1 ] [83])
                (const_int 578 [0x242])) [4 current.88_1->euid+0 S2 A16])) "fs/namei.c":472:10 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":472:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "fs/namei.c":472:8 806 {*jcc}
     (nil)
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 233 3 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":473:16 75 {*movsi_internal}
     (nil))
(jump_insn 233 11 234 3 (set (pc)
        (label_ref 224)) "fs/namei.c":473:16 807 {jump}
     (nil)
 -> 224)
(barrier 234 233 14)
(code_label 14 234 15 4 107 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":474:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 0 ax [119])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":474:17 209 {*addsi_1}
     (nil))
(insn 18 17 19 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [26  S4 A32])
        (reg:SI 0 ax [119])) "fs/namei.c":474:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:SI 0 ax [120])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":474:17 209 {*addsi_1}
     (nil))
(insn 20 19 21 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg:SI 0 ax [120])) "fs/namei.c":474:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 filename+0 S4 A32])) "fs/namei.c":474:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("dir_namei") [flags 0x3]  <function_decl 0x7f2fcf349b00 dir_namei>) [0 dir_namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":474:17 823 {*call_value}
     (nil)
    (nil))
(insn 23 22 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":474:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 25 23 26 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/namei.c":474:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 0 ax [orig:86 dir.89_4 ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":474:15 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:86 dir.89_4 ] [86])
            (const_int 0 [0]))) "fs/namei.c":474:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/namei.c":474:8 806 {*jcc}
     (nil)
 -> 33)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 235 5 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":475:16 75 {*movsi_internal}
     (nil))
(jump_insn 235 30 236 5 (set (pc)
        (label_ref 224)) "fs/namei.c":475:16 807 {jump}
     (nil)
 -> 224)
(barrier 236 235 33)
(code_label 33 236 34 6 109 (nil) [1 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 0 ax [orig:87 namelen.90_5 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 namelen+0 S4 A32])) "fs/namei.c":476:9 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 namelen.90_5 ] [87])
            (const_int 0 [0]))) "fs/namei.c":476:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "fs/namei.c":476:8 806 {*jcc}
     (nil)
 -> 48)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 0 ax [orig:88 dir.91_6 ] [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":477:9 75 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":477:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 41 40 43 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:88 dir.91_6 ] [88])) "fs/namei.c":477:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 43 41 44 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":477:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":477:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 44 237 7 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":478:16 75 {*movsi_internal}
     (nil))
(jump_insn 237 45 238 7 (set (pc)
        (label_ref 224)) "fs/namei.c":478:16 807 {jump}
     (nil)
 -> 224)
(barrier 238 237 48)
(code_label 48 238 49 8 110 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:SI 0 ax [orig:89 dir.92_7 ] [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":480:10 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":480:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 52 51 53 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (const_int 2 [0x2])) "fs/namei.c":480:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 53 52 54 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:89 dir.92_7 ] [89])) "fs/namei.c":480:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":480:10 823 {*call_value}
     (nil)
    (nil))
(insn 55 54 57 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":480:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 57 55 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "fs/namei.c":480:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/namei.c":480:8 806 {*jcc}
     (nil)
 -> 69)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:SI 0 ax [orig:91 dir.93_9 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":481:9 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":481:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 64 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:91 dir.93_9 ] [91])) "fs/namei.c":481:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 64 62 65 9 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":481:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 65 64 66 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":481:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 66 65 239 9 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":482:16 75 {*movsi_internal}
     (nil))
(jump_insn 239 66 240 9 (set (pc)
        (label_ref 224)) "fs/namei.c":482:16 807 {jump}
     (nil)
 -> 224)
(barrier 240 239 69)
(code_label 69 240 70 10 111 (nil) [1 uses])
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (set (reg:SI 1 dx [orig:92 namelen.94_10 ] [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 namelen+0 S4 A32])) "fs/namei.c":484:10 75 {*movsi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:SI 0 ax [orig:93 basename.95_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 basename+0 S4 A32])) "fs/namei.c":484:10 75 {*movsi_internal}
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:SI 2 cx [121])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":484:10 209 {*addsi_1}
     (nil))
(insn 74 73 75 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 2 cx [121])) "fs/namei.c":484:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 75 74 76 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:92 namelen.94_10 ] [92])) "fs/namei.c":484:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 76 75 77 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:93 basename.95_11 ] [93])) "fs/namei.c":484:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 77 76 78 10 (parallel [
            (set (reg:SI 0 ax [122])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":484:10 209 {*addsi_1}
     (nil))
(insn 78 77 79 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [122])) "fs/namei.c":484:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 79 78 80 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":484:10 823 {*call_value}
     (nil)
    (nil))
(insn 80 79 82 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":484:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 82 80 83 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [123])) "fs/namei.c":484:10 75 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":485:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 84 83 85 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "fs/namei.c":485:8 806 {*jcc}
     (nil)
 -> 100)
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":486:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 87 86 89 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":486:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 89 87 90 11 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":486:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 90 89 91 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":486:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 91 90 92 11 (set (reg/f:SI 0 ax [orig:94 dir.96_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":487:9 75 {*movsi_internal}
     (nil))
(insn 92 91 93 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":487:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 93 92 95 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:94 dir.96_12 ] [94])) "fs/namei.c":487:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 95 93 96 11 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":487:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 96 95 97 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":487:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 97 96 241 11 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int -17 [0xffffffffffffffef])) "fs/namei.c":488:16 75 {*movsi_internal}
     (nil))
(jump_insn 241 97 242 11 (set (pc)
        (label_ref 224)) "fs/namei.c":488:16 807 {jump}
     (nil)
 -> 224)
(barrier 242 241 100)
(code_label 100 242 101 12 112 (nil) [1 uses])
(note 101 100 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 12 (set (reg/f:SI 0 ax [orig:95 dir.97_13 ] [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":490:26 75 {*movsi_internal}
     (nil))
(insn 103 102 104 12 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:95 dir.97_13 ] [95])
                (const_int 44 [0x2c])) [4 dir.97_13->i_dev+0 S2 A32])) "fs/namei.c":490:26 76 {*movhi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _14 ] [96]))) "fs/namei.c":490:13 144 {*zero_extendhisi2}
     (nil))
(insn 105 104 106 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":490:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 106 105 108 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:97 _15 ] [97])) "fs/namei.c":490:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 108 106 109 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_inode") [flags 0x41]  <function_decl 0x7f2fcf310200 new_inode>) [0 new_inode S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":490:13 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 109 108 111 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":490:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 111 109 112 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])
        (reg:SI 0 ax [124])) "fs/namei.c":490:13 75 {*movsi_internal}
     (nil))
(insn 112 111 113 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [2 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":491:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 114 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "fs/namei.c":491:8 806 {*jcc}
     (nil)
 -> 124)
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 13 (set (reg/f:SI 0 ax [orig:98 dir.98_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":492:9 75 {*movsi_internal}
     (nil))
(insn 116 115 117 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":492:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 117 116 119 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:98 dir.98_16 ] [98])) "fs/namei.c":492:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 119 117 120 13 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":492:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 120 119 121 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":492:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 121 120 243 13 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":493:16 75 {*movsi_internal}
     (nil))
(jump_insn 243 121 244 13 (set (pc)
        (label_ref 224)) "fs/namei.c":493:16 807 {jump}
     (nil)
 -> 224)
(barrier 244 243 124)
(code_label 124 244 125 14 113 (nil) [1 uses])
(note 125 124 126 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 14 (set (reg:SI 0 ax [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 mode+0 S4 A32])) "fs/namei.c":495:19 75 {*movsi_internal}
     (nil))
(insn 127 126 128 14 (set (reg:HI 1 dx [orig:99 _17 ] [99])
        (reg:HI 0 ax [125])) "fs/namei.c":495:19 76 {*movhi_internal}
     (nil))
(insn 128 127 129 14 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":495:19 75 {*movsi_internal}
     (nil))
(insn 129 128 130 14 (set (mem:HI (reg/f:SI 0 ax [126]) [4 inode_45->i_mode+0 S2 A32])
        (reg:HI 1 dx [orig:99 _17 ] [99])) "fs/namei.c":495:19 76 {*movhi_internal}
     (nil))
(insn 130 129 131 14 (set (reg:SI 0 ax [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 mode+0 S4 A32])) "fs/namei.c":496:9 75 {*movsi_internal}
     (nil))
(insn 131 130 132 14 (parallel [
            (set (reg:SI 0 ax [orig:100 _18 ] [100])
                (and:SI (reg:SI 0 ax [127])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":496:9 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 mode+0 S4 A32])
            (const_int 61440 [0xf000]))
        (nil)))
(insn 132 131 133 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 _18 ] [100])
            (const_int 24576 [0x6000]))) "fs/namei.c":496:8 11 {*cmpsi_1}
     (nil))
(jump_insn 133 132 134 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "fs/namei.c":496:8 806 {*jcc}
     (nil)
 -> 139)
(note 134 133 135 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 15 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 mode+0 S4 A32])) "fs/namei.c":496:26 75 {*movsi_internal}
     (nil))
(insn 136 135 137 15 (parallel [
            (set (reg:SI 0 ax [orig:101 _19 ] [101])
                (and:SI (reg:SI 0 ax [128])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":496:26 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [11 mode+0 S4 A32])
            (const_int 61440 [0xf000]))
        (nil)))
(insn 137 136 138 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 _19 ] [101])
            (const_int 8192 [0x2000]))) "fs/namei.c":496:23 11 {*cmpsi_1}
     (nil))
(jump_insn 138 137 139 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "fs/namei.c":496:23 806 {*jcc}
     (nil)
 -> 145)
(code_label 139 138 140 16 114 (nil) [1 uses])
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (set (reg:SI 0 ax [129])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [11 dev+0 S4 A32])) "fs/namei.c":497:26 75 {*movsi_internal}
     (nil))
(insn 142 141 143 16 (set (reg:HI 1 dx [orig:102 _20 ] [102])
        (reg:HI 0 ax [129])) "fs/namei.c":497:26 76 {*movhi_internal}
     (nil))
(insn 143 142 144 16 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":497:26 75 {*movsi_internal}
     (nil))
(insn 144 143 145 16 (set (mem:HI (plus:SI (reg/f:SI 0 ax [130])
                (const_int 14 [0xe])) [4 inode_45->i_zone[0]+0 S2 A16])
        (reg:HI 1 dx [orig:102 _20 ] [102])) "fs/namei.c":497:26 76 {*movhi_internal}
     (nil))
(code_label 145 144 146 17 115 (nil) [1 uses])
(note 146 145 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 17 (set (reg/f:SI 0 ax [131])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 148 147 149 17 (set (reg:SI 2 cx [orig:103 jiffies.99_21 ] [103])
        (mem/v/c:SI (reg/f:SI 0 ax [131]) [5 jiffies+0 S4 A32])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 149 148 249 17 (set (reg:SI 1 dx [133])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 249 149 150 17 (set (reg:SI 0 ax [147])
        (reg:SI 2 cx [orig:103 jiffies.99_21 ] [103])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 150 249 250 17 (parallel [
            (set (reg:SI 1 dx [132])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [147]))
                            (sign_extend:DI (reg:SI 1 dx [133])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [147]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":498:39 435 {*smulsi3_highpart_1}
     (nil))
(insn 250 150 151 17 (set (reg:SI 0 ax [132])
        (reg:SI 1 dx [132])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 151 250 152 17 (parallel [
            (set (reg:SI 0 ax [132])
                (ashiftrt:SI (reg:SI 0 ax [132])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":498:39 702 {*ashrsi3_1}
     (nil))
(insn 152 151 153 17 (parallel [
            (set (reg:SI 2 cx [135])
                (ashiftrt:SI (reg:SI 2 cx [orig:103 jiffies.99_21 ] [103])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":498:39 694 {ashrsi3_cvt}
     (nil))
(insn 153 152 253 17 (parallel [
            (set (reg:SI 0 ax [134])
                (minus:SI (reg:SI 0 ax [134])
                    (reg:SI 2 cx [135])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":498:39 282 {*subsi_1}
     (nil))
(insn 253 153 154 17 (set (reg:SI 1 dx [orig:104 _22 ] [104])
        (reg:SI 0 ax [134])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 154 253 155 17 (set (reg/f:SI 0 ax [136])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 155 154 156 17 (set (reg:SI 0 ax [orig:105 startup_time.100_23 ] [105])
        (mem/c:SI (reg/f:SI 0 ax [136]) [5 startup_time+0 S4 A32])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 156 155 157 17 (parallel [
            (set (reg:SI 0 ax [orig:106 _24 ] [106])
                (plus:SI (reg:SI 0 ax [orig:105 startup_time.100_23 ] [105])
                    (reg:SI 1 dx [orig:104 _22 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":498:39 209 {*addsi_1}
     (nil))
(insn 157 156 158 17 (set (reg:SI 1 dx [orig:107 _25 ] [107])
        (reg:SI 0 ax [orig:106 _24 ] [106])) "fs/namei.c":498:39 75 {*movsi_internal}
     (nil))
(insn 158 157 159 17 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":498:37 75 {*movsi_internal}
     (nil))
(insn 159 158 160 17 (set (mem:SI (plus:SI (reg/f:SI 0 ax [137])
                (const_int 36 [0x24])) [5 inode_45->i_atime+0 S4 A32])
        (reg:SI 1 dx [orig:107 _25 ] [107])) "fs/namei.c":498:37 75 {*movsi_internal}
     (nil))
(insn 160 159 161 17 (set (reg/f:SI 0 ax [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":498:27 75 {*movsi_internal}
     (nil))
(insn 161 160 162 17 (set (reg:SI 1 dx [orig:108 _26 ] [108])
        (mem:SI (plus:SI (reg/f:SI 0 ax [138])
                (const_int 36 [0x24])) [5 inode_45->i_atime+0 S4 A32])) "fs/namei.c":498:27 75 {*movsi_internal}
     (nil))
(insn 162 161 163 17 (set (reg/f:SI 0 ax [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":498:20 75 {*movsi_internal}
     (nil))
(insn 163 162 164 17 (set (mem:SI (plus:SI (reg/f:SI 0 ax [139])
                (const_int 8 [0x8])) [5 inode_45->i_mtime+0 S4 A32])
        (reg:SI 1 dx [orig:108 _26 ] [108])) "fs/namei.c":498:20 75 {*movsi_internal}
     (nil))
(insn 164 163 165 17 (set (reg/f:SI 0 ax [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":499:19 75 {*movsi_internal}
     (nil))
(insn 165 164 166 17 (set (mem:QI (plus:SI (reg/f:SI 0 ax [140])
                (const_int 51 [0x33])) [0 inode_45->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":499:19 77 {*movqi_internal}
     (nil))
(insn 166 165 167 17 (set (reg:SI 2 cx [orig:109 namelen.101_27 ] [109])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 namelen+0 S4 A32])) "fs/namei.c":500:10 75 {*movsi_internal}
     (nil))
(insn 167 166 168 17 (set (reg/f:SI 1 dx [orig:110 basename.102_28 ] [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 basename+0 S4 A32])) "fs/namei.c":500:10 75 {*movsi_internal}
     (nil))
(insn 168 167 169 17 (set (reg/f:SI 0 ax [orig:111 dir.103_29 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":500:10 75 {*movsi_internal}
     (nil))
(insn 169 168 170 17 (parallel [
            (set (reg:SI 4 si [141])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":500:10 209 {*addsi_1}
     (nil))
(insn 170 169 171 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 4 si [141])) "fs/namei.c":500:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 171 170 172 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 2 cx [orig:109 namelen.101_27 ] [109])) "fs/namei.c":500:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 172 171 173 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 1 dx [orig:110 basename.102_28 ] [110])) "fs/namei.c":500:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 173 172 174 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:111 dir.103_29 ] [111])) "fs/namei.c":500:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 174 173 175 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("add_entry") [flags 0x3]  <function_decl 0x7f2fcf349d00 add_entry>) [0 add_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":500:10 823 {*call_value}
     (nil)
    (nil))
(insn 175 174 177 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":500:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 177 175 178 17 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [142])) "fs/namei.c":500:10 75 {*movsi_internal}
     (nil))
(insn 178 177 179 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":501:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 179 178 180 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) "fs/namei.c":501:8 806 {*jcc}
     (nil)
 -> 197)
(note 180 179 181 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 18 (set (reg/f:SI 0 ax [orig:112 dir.104_30 ] [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":502:9 75 {*movsi_internal}
     (nil))
(insn 182 181 183 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":502:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 183 182 185 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:112 dir.104_30 ] [112])) "fs/namei.c":502:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 185 183 186 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":502:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 186 185 187 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":502:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 187 186 188 18 (set (reg/f:SI 0 ax [143])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":503:25 75 {*movsi_internal}
     (nil))
(insn 188 187 189 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [143])
                (const_int 13 [0xd])) [0 inode_45->i_nlinks+0 S1 A8])
        (const_int 0 [0])) "fs/namei.c":503:25 77 {*movqi_internal}
     (nil))
(insn 189 188 190 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":504:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 190 189 192 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":504:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 192 190 193 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":504:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 193 192 194 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":504:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 194 193 245 18 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":505:16 75 {*movsi_internal}
     (nil))
(jump_insn 245 194 246 18 (set (pc)
        (label_ref 224)) "fs/namei.c":505:16 807 {jump}
     (nil)
 -> 224)
(barrier 246 245 197)
(code_label 197 246 198 19 116 (nil) [1 uses])
(note 198 197 199 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 19 (set (reg/f:SI 0 ax [orig:113 de.105_31 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 de+0 S4 A32])) "fs/namei.c":507:7 75 {*movsi_internal}
     (nil))
(insn 200 199 201 19 (set (reg/f:SI 1 dx [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":507:22 75 {*movsi_internal}
     (nil))
(insn 201 200 202 19 (set (reg:HI 1 dx [orig:114 _32 ] [114])
        (mem:HI (plus:SI (reg/f:SI 1 dx [144])
                (const_int 46 [0x2e])) [4 inode_45->i_num+0 S2 A16])) "fs/namei.c":507:22 76 {*movhi_internal}
     (nil))
(insn 202 201 203 19 (set (mem:HI (reg/f:SI 0 ax [orig:113 de.105_31 ] [113]) [4 de.105_31->inode+0 S2 A16])
        (reg:HI 1 dx [orig:114 _32 ] [114])) "fs/namei.c":507:15 76 {*movhi_internal}
     (nil))
(insn 203 202 204 19 (set (reg/f:SI 0 ax [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])) "fs/namei.c":508:16 75 {*movsi_internal}
     (nil))
(insn 204 203 205 19 (set (mem:QI (plus:SI (reg/f:SI 0 ax [145])
                (const_int 11 [0xb])) [0 bh_54->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":508:16 77 {*movqi_internal}
     (nil))
(insn 205 204 206 19 (set (reg/f:SI 0 ax [orig:115 dir.106_33 ] [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":509:5 75 {*movsi_internal}
     (nil))
(insn 206 205 207 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":509:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 207 206 209 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:115 dir.106_33 ] [115])) "fs/namei.c":509:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 209 207 210 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":509:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 210 209 211 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":509:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 211 210 212 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":510:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 212 211 214 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":510:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 214 212 215 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":510:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 215 214 216 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":510:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 216 215 217 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":511:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 217 216 219 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":511:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 219 217 220 19 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":511:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 220 219 221 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":511:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 221 220 224 19 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (const_int 0 [0])) "fs/namei.c":512:12 75 {*movsi_internal}
     (nil))
(code_label 224 221 225 20 117 (nil) [7 uses])
(note 225 224 231 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 231 225 248 20 (use (reg/i:SI 0 ax)) "fs/namei.c":513:1 -1
     (nil))
(note 248 231 0 NOTE_INSN_DELETED)

;; Function sys_unlink (sys_unlink, funcdef_no=18, decl_uid=1527, cgraph_uid=19, symbol_order=18)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 6:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 54:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 62:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 66:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 87:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 90:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 113:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 120:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 122:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 128:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 134:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 136:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 142:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 144:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 153:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 154:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 158:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 159:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 163:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 170:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 172:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 176:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 180:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 182:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 186:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 191:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 198:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 203:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 206:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 209:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 220:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 224:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 226:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 227:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 231:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 233:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 234:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 236:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 238:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 242:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=167 from oldreg=165, assigning class AREG to r167
  242: {r158:SI=trunc(sign_extend(r167:SI)*sign_extend(r159:SI) 0>>0x20);clobber r167:SI;clobber flags:CC;}
      REG_DEAD r159:SI
      REG_UNUSED r165:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  291: r167:SI=r128:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 243:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=168 from oldreg=158, assigning class GENERAL_REGS to r168
  243: {r168:SI=r168:SI>>0x5;clobber flags:CC;}
      REG_DEAD r158:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  292: r168:SI=r158:SI
    Inserting insn reload after:
  293: r160:SI=r168:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 245:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=169 from oldreg=160, assigning class GENERAL_REGS to r169
  245: {r169:SI=r169:SI-r161:SI;clobber flags:CC;}
      REG_DEAD r161:SI
      REG_DEAD r160:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  294: r169:SI=r160:SI
    Inserting insn reload after:
  295: r129:SI=r169:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 248
	 Choosing alt 0 in insn 248:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 252:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 256:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 258:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 262:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10 11
EBB 12 13 14 15 16
EBB 17 18
EBB 19 20
EBB 21
EBB 22

********** Pseudo live ranges #1: **********

  BB 22
   Insn 273: point = 0, n_alt = -1
   Insn 272: point = 0, n_alt = -2
   Insn 268: point = 1, n_alt = -2
  BB 18
   Insn 287: point = 4, n_alt = -1
   Insn 192: point = 4, n_alt = 0
   Insn 191: point = 5, n_alt = 0
   Insn 190: point = 5, n_alt = 0
   Insn 189: point = 5, n_alt = -2
   Insn 188: point = 6, n_alt = 0
   Insn 187: point = 6, n_alt = 0
   Insn 186: point = 6, n_alt = 0
   Insn 185: point = 6, n_alt = 0
   Insn 184: point = 6, n_alt = -2
   Insn 183: point = 6, n_alt = 0
   Insn 182: point = 7, n_alt = 0
   Insn 181: point = 7, n_alt = 0
   Insn 180: point = 8, n_alt = 0
   Insn 179: point = 8, n_alt = 0
   Insn 178: point = 8, n_alt = -2
   Insn 177: point = 8, n_alt = 0
   Insn 176: point = 8, n_alt = 0
  BB 11
   Insn 283: point = 9, n_alt = -1
   Insn 114: point = 9, n_alt = 0
   Insn 113: point = 10, n_alt = 0
   Insn 112: point = 10, n_alt = 0
   Insn 111: point = 10, n_alt = -2
   Insn 110: point = 11, n_alt = 0
   Insn 109: point = 11, n_alt = 0
   Insn 108: point = 11, n_alt = 0
   Insn 107: point = 11, n_alt = 0
   Insn 106: point = 11, n_alt = -2
   Insn 105: point = 11, n_alt = 0
   Insn 104: point = 12, n_alt = 0
   Insn 103: point = 12, n_alt = 0
  BB 9
   Insn 281: point = 14, n_alt = -1
   Insn 81: point = 14, n_alt = 0
   Insn 80: point = 15, n_alt = 0
   Insn 79: point = 15, n_alt = 0
   Insn 78: point = 15, n_alt = -2
   Insn 77: point = 16, n_alt = 0
   Insn 76: point = 17, n_alt = 0
   Insn 75: point = 17, n_alt = 0
  BB 7
   Insn 279: point = 19, n_alt = -1
   Insn 55: point = 19, n_alt = 0
   Insn 54: point = 20, n_alt = 0
   Insn 53: point = 20, n_alt = 0
   Insn 52: point = 20, n_alt = -2
   Insn 51: point = 21, n_alt = 0
   Insn 50: point = 22, n_alt = 0
   Insn 49: point = 22, n_alt = 0
  BB 5
   Insn 277: point = 24, n_alt = -1
   Insn 34: point = 24, n_alt = 0
   Insn 33: point = 25, n_alt = 0
   Insn 32: point = 25, n_alt = 0
   Insn 31: point = 25, n_alt = -2
   Insn 30: point = 26, n_alt = 0
   Insn 29: point = 27, n_alt = 0
   Insn 28: point = 27, n_alt = 0
  BB 3
   Insn 275: point = 29, n_alt = -1
   Insn 19: point = 29, n_alt = 0
  BB 16
   Insn 285: point = 30, n_alt = -1
   Insn 164: point = 30, n_alt = 0
   Insn 163: point = 31, n_alt = 0
   Insn 162: point = 31, n_alt = 0
   Insn 161: point = 31, n_alt = -2
   Insn 160: point = 32, n_alt = 0
   Insn 159: point = 32, n_alt = 0
   Insn 158: point = 32, n_alt = 0
   Insn 157: point = 32, n_alt = 0
   Insn 156: point = 32, n_alt = -2
   Insn 155: point = 32, n_alt = 0
   Insn 154: point = 32, n_alt = 0
   Insn 153: point = 32, n_alt = 0
   Insn 152: point = 32, n_alt = 0
   Insn 151: point = 32, n_alt = -2
   Insn 150: point = 32, n_alt = 0
   Insn 149: point = 33, n_alt = 0
   Insn 148: point = 33, n_alt = 0
  BB 21
   Insn 263: point = 35, n_alt = 0
   Insn 262: point = 36, n_alt = 0
   Insn 261: point = 36, n_alt = 0
   Insn 260: point = 36, n_alt = -2
   Insn 259: point = 37, n_alt = 0
   Insn 258: point = 38, n_alt = 0
   Insn 257: point = 38, n_alt = 0
   Insn 256: point = 39, n_alt = 0
   Insn 255: point = 39, n_alt = 0
   Insn 254: point = 39, n_alt = -2
   Insn 253: point = 39, n_alt = 0
   Insn 252: point = 39, n_alt = 0
   Insn 251: point = 39, n_alt = 1
   Insn 250: point = 40, n_alt = 0
   Insn 249: point = 41, n_alt = -2
   Insn 248: point = 43, n_alt = 0
   Insn 247: point = 45, n_alt = 0
   Insn 246: point = 47, n_alt = 0
   Insn 295: point = 48, n_alt = -2
	Hard reg 1 is preferable by r169 with profit 1000
   Insn 245: point = 50, n_alt = 0
   Insn 294: point = 52, n_alt = -2
	Hard reg 1 is preferable by r169 with profit 1000
	Hard reg 0 is preferable by r169 with profit 1000
   Insn 244: point = 54, n_alt = 1
   Insn 293: point = 56, n_alt = -2
	Hard reg 0 is preferable by r168 with profit 1000
   Insn 243: point = 58, n_alt = 0
   Insn 292: point = 59, n_alt = -2
	Hard reg 0 is preferable by r168 with profit 1000
	Hard reg 1 is preferable by r168 with profit 1000
   Insn 242: point = 61, n_alt = 0
   Insn 291: point = 63, n_alt = -2
	Hard reg 2 is preferable by r167 with profit 1000
   Insn 241: point = 64, n_alt = 0
   Insn 240: point = 65, n_alt = 0
   Insn 239: point = 67, n_alt = 0
   Insn 238: point = 68, n_alt = 8
   Insn 237: point = 69, n_alt = 0
   Insn 236: point = 70, n_alt = 8
   Insn 235: point = 71, n_alt = 0
   Insn 234: point = 72, n_alt = 5
   Insn 233: point = 74, n_alt = 4
   Insn 232: point = 76, n_alt = 0
   Insn 231: point = 77, n_alt = 0
   Insn 230: point = 77, n_alt = 0
   Insn 229: point = 77, n_alt = -2
   Insn 228: point = 77, n_alt = 0
   Insn 227: point = 77, n_alt = 0
   Insn 226: point = 77, n_alt = 8
   Insn 225: point = 78, n_alt = 0
   Insn 224: point = 79, n_alt = 3
   Insn 223: point = 80, n_alt = 0
  BB 20
   Insn 220: point = 82, n_alt = 8
   Insn 219: point = 83, n_alt = 0
   Insn 218: point = 84, n_alt = 0
   Insn 217: point = 84, n_alt = 0
   Insn 216: point = 84, n_alt = -2
   Insn 215: point = 84, n_alt = 0
   Insn 214: point = 85, n_alt = 0
   Insn 213: point = 86, n_alt = 0
   Insn 212: point = 87, n_alt = 0
   Insn 211: point = 88, n_alt = 0
   Insn 210: point = 89, n_alt = 0
   Insn 209: point = 91, n_alt = 2
   Insn 208: point = 93, n_alt = 0
   Insn 207: point = 94, n_alt = 0
   Insn 206: point = 96, n_alt = 2
   Insn 205: point = 98, n_alt = 0
   Insn 204: point = 99, n_alt = 0
   Insn 203: point = 101, n_alt = 4
   Insn 202: point = 103, n_alt = 0
  BB 19
   Insn 200: point = 105, n_alt = -1
   Insn 199: point = 105, n_alt = 0
   Insn 198: point = 106, n_alt = 4
   Insn 197: point = 108, n_alt = 0
  BB 17
   Insn 174: point = 110, n_alt = -1
   Insn 173: point = 110, n_alt = 0
   Insn 172: point = 111, n_alt = 0
   Insn 171: point = 113, n_alt = 0
   Insn 170: point = 115, n_alt = 2
   Insn 169: point = 117, n_alt = 0
  BB 15
   Insn 146: point = 119, n_alt = -1
   Insn 145: point = 119, n_alt = 0
   Insn 144: point = 120, n_alt = 2
   Insn 143: point = 122, n_alt = 0
   Insn 142: point = 123, n_alt = 2
   Insn 141: point = 125, n_alt = 0
   Insn 140: point = 127, n_alt = 0
  BB 14
   Insn 138: point = 129, n_alt = -1
   Insn 137: point = 129, n_alt = 0
   Insn 136: point = 130, n_alt = 2
   Insn 135: point = 132, n_alt = 0
   Insn 134: point = 133, n_alt = 2
   Insn 133: point = 135, n_alt = 0
   Insn 132: point = 137, n_alt = 0
  BB 13
   Insn 130: point = 139, n_alt = -1
   Insn 129: point = 139, n_alt = 0
   Insn 128: point = 140, n_alt = 2
   Insn 127: point = 142, n_alt = 0
   Insn 126: point = 144, n_alt = 0
  BB 12
   Insn 124: point = 146, n_alt = -1
   Insn 123: point = 146, n_alt = 0
   Insn 122: point = 147, n_alt = 0
   Insn 121: point = 149, n_alt = 0
   Insn 120: point = 151, n_alt = 2
   Insn 119: point = 153, n_alt = 0
  BB 10
   Insn 101: point = 155, n_alt = -1
   Insn 100: point = 155, n_alt = 1
   Insn 99: point = 155, n_alt = 1
   Insn 98: point = 156, n_alt = -2
   Insn 97: point = 157, n_alt = 0
   Insn 96: point = 157, n_alt = 0
   Insn 95: point = 157, n_alt = -2
   Insn 94: point = 157, n_alt = 0
   Insn 93: point = 158, n_alt = 0
   Insn 92: point = 159, n_alt = 0
   Insn 91: point = 159, n_alt = 0
   Insn 90: point = 161, n_alt = 2
   Insn 89: point = 163, n_alt = 0
   Insn 88: point = 164, n_alt = 0
   Insn 87: point = 166, n_alt = 2
   Insn 86: point = 168, n_alt = 0
  BB 8
   Insn 73: point = 170, n_alt = -1
   Insn 72: point = 170, n_alt = 1
   Insn 71: point = 170, n_alt = 1
   Insn 70: point = 171, n_alt = -2
   Insn 69: point = 172, n_alt = 0
   Insn 68: point = 172, n_alt = 0
   Insn 67: point = 172, n_alt = 0
   Insn 66: point = 173, n_alt = 3
   Insn 65: point = 174, n_alt = 0
   Insn 64: point = 175, n_alt = 0
   Insn 63: point = 176, n_alt = 0
   Insn 62: point = 177, n_alt = 3
   Insn 61: point = 178, n_alt = 0
   Insn 60: point = 179, n_alt = 0
  BB 6
   Insn 47: point = 181, n_alt = -1
   Insn 46: point = 181, n_alt = 0
   Insn 45: point = 182, n_alt = -2
   Insn 44: point = 183, n_alt = 0
   Insn 43: point = 183, n_alt = 0
   Insn 42: point = 183, n_alt = 0
   Insn 41: point = 184, n_alt = 0
   Insn 40: point = 184, n_alt = 0
   Insn 39: point = 184, n_alt = 0
  BB 4
   Insn 26: point = 186, n_alt = -1
   Insn 25: point = 186, n_alt = 0
   Insn 24: point = 187, n_alt = 0
  BB 2
   Insn 17: point = 189, n_alt = -1
   Insn 16: point = 189, n_alt = 0
   Insn 15: point = 190, n_alt = 0
   Insn 14: point = 191, n_alt = 1
   Insn 13: point = 192, n_alt = -2
   Insn 12: point = 193, n_alt = 0
   Insn 11: point = 193, n_alt = 0
   Insn 10: point = 193, n_alt = 0
   Insn 9: point = 193, n_alt = 0
   Insn 8: point = 194, n_alt = 3
   Insn 7: point = 195, n_alt = 0
   Insn 6: point = 196, n_alt = 3
   Insn 5: point = 197, n_alt = 0
   Insn 289: point = 197, n_alt = 0
 r82: [36..197] [31..34] [25..28] [20..23] [15..18] [10..13] [5..8]
 r83: [191..192]
 r84: [189..190]
 r85: [186..187]
 r86: [26..27]
 r87: [183..184]
 r88: [181..182]
 r89: [21..22]
 r90: [175..179]
 r91: [174..178]
 r92: [16..17]
 r93: [167..168]
 r94: [165..166]
 r95: [158..164]
 r96: [162..163]
 r97: [160..161]
 r98: [157..159]
 r99: [11..12]
 r100: [152..153]
 r101: [150..151]
 r102: [148..149]
 r103: [146..147]
 r104: [141..142]
 r105: [139..140]
 r106: [134..135]
 r107: [129..133]
 r108: [129..130]
 r109: [124..125]
 r110: [119..123]
 r111: [121..122]
 r112: [119..120]
 r113: [32..33]
 r114: [114..115]
 r115: [112..113]
 r116: [110..111]
 r117: [6..7]
 r118: [105..106]
 r119: [100..101]
 r120: [88..99]
 r121: [95..96]
 r122: [87..94]
 r123: [90..91]
 r124: [86..89]
 r125: [79..80]
 r126: [73..74]
 r127: [70..72]
 r128: [55..65]
 r129: [44..48]
 r130: [44..45]
 r131: [42..43]
 r132: [39..41]
 r133: [37..38]
 r134: [35..35] [29..30] [24..24] [19..19] [14..14] [9..9] [2..4]
 r135: [0..1]
 r136: [195..196]
 r137: [193..194]
 r138: [176..177]
 r139: [172..173]
 r140: [170..171]
 r141: [155..156]
 r142: [143..144]
 r143: [136..137]
 r144: [131..132]
 r145: [126..127]
 r146: [116..117]
 r147: [107..108]
 r148: [102..103]
 r149: [97..98]
 r150: [92..93]
 r151: [84..85]
 r152: [82..83]
 r153: [77..78]
 r154: [75..76]
 r155: [70..71]
 r156: [68..69]
 r157: [66..67]
 r158: [60..61]
 r159: [62..64]
 r160: [53..56]
 r161: [51..54]
 r162: [46..47]
 r163: [39..40]
 r167: [61..63]
 r168: [57..59]
 r169: [49..52]
Compressing live ranges: from 198 to 151 - 76%
Ranges after the compression:
 r82: [23..150] [20..21] [16..17] [13..14] [10..11] [7..8] [4..5]
 r83: [145..146]
 r84: [143..144]
 r85: [141..142]
 r86: [16..17]
 r87: [139..140]
 r88: [137..138]
 r89: [13..14]
 r90: [135..136]
 r91: [135..136]
 r92: [10..11]
 r93: [129..130]
 r94: [127..128]
 r95: [121..126]
 r96: [125..126]
 r97: [123..124]
 r98: [121..122]
 r99: [7..8]
 r100: [117..118]
 r101: [115..116]
 r102: [113..114]
 r103: [111..112]
 r104: [107..108]
 r105: [105..106]
 r106: [101..102]
 r107: [97..100]
 r108: [97..98]
 r109: [93..94]
 r110: [89..92]
 r111: [91..92]
 r112: [89..90]
 r113: [20..21]
 r114: [85..86]
 r115: [83..84]
 r116: [81..82]
 r117: [4..5]
 r118: [77..78]
 r119: [73..74]
 r120: [63..72]
 r121: [69..70]
 r122: [63..68]
 r123: [65..66]
 r124: [63..64]
 r125: [57..58]
 r126: [51..52]
 r127: [49..50]
 r128: [37..44]
 r129: [29..32]
 r130: [29..30]
 r131: [27..28]
 r132: [25..26]
 r133: [23..24]
 r134: [22..22] [18..19] [15..15] [12..12] [9..9] [6..6] [2..3]
 r135: [0..1]
 r136: [149..150]
 r137: [147..148]
 r138: [135..136]
 r139: [133..134]
 r140: [131..132]
 r141: [119..120]
 r142: [109..110]
 r143: [103..104]
 r144: [99..100]
 r145: [95..96]
 r146: [87..88]
 r147: [79..80]
 r148: [75..76]
 r149: [71..72]
 r150: [67..68]
 r151: [61..62]
 r152: [59..60]
 r153: [55..56]
 r154: [53..54]
 r155: [49..50]
 r156: [47..48]
 r157: [45..46]
 r158: [41..42]
 r159: [43..44]
 r160: [35..38]
 r161: [33..36]
 r162: [31..32]
 r163: [25..26]
 r167: [42..44]
 r168: [39..40]
 r169: [33..34]

********** Assignment #1: **********

	 Assigning to 167 (cl=AREG, orig=165, freq=2000, tfirst=167, tfreq=2000)...
	   Assign 0 to reload r167 (freq=2000)
	 Assigning to 168 (cl=GENERAL_REGS, orig=158, freq=3000, tfirst=168, tfreq=3000)...
	   Assign 0 to reload r168 (freq=3000)
	 Assigning to 169 (cl=GENERAL_REGS, orig=160, freq=3000, tfirst=169, tfreq=3000)...
	   Assign 0 to reload r169 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 289
changing reg in insn 260
changing reg in insn 254
changing reg in insn 246
changing reg in insn 239
changing reg in insn 229
changing reg in insn 216
changing reg in insn 214
changing reg in insn 189
changing reg in insn 184
changing reg in insn 178
changing reg in insn 161
changing reg in insn 156
changing reg in insn 151
changing reg in insn 140
changing reg in insn 132
changing reg in insn 126
changing reg in insn 111
changing reg in insn 106
changing reg in insn 95
changing reg in insn 78
changing reg in insn 52
changing reg in insn 31
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 30
changing reg in insn 39
changing reg in insn 42
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 51
changing reg in insn 60
changing reg in insn 64
changing reg in insn 61
changing reg in insn 65
changing reg in insn 75
changing reg in insn 77
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 88
changing reg in insn 88
changing reg in insn 93
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 94
changing reg in insn 103
changing reg in insn 105
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 121
changing reg in insn 121
changing reg in insn 122
changing reg in insn 122
changing reg in insn 123
changing reg in insn 127
changing reg in insn 128
changing reg in insn 128
changing reg in insn 129
changing reg in insn 133
changing reg in insn 134
changing reg in insn 134
changing reg in insn 137
changing reg in insn 136
changing reg in insn 137
changing reg in insn 141
changing reg in insn 142
changing reg in insn 142
changing reg in insn 145
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 150
changing reg in insn 170
changing reg in insn 171
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 181
changing reg in insn 183
changing reg in insn 198
changing reg in insn 199
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 211
changing reg in insn 206
changing reg in insn 207
changing reg in insn 207
changing reg in insn 212
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 213
changing reg in insn 223
changing reg in insn 224
changing reg in insn 233
changing reg in insn 234
changing reg in insn 234
changing reg in insn 236
changing reg in insn 240
changing reg in insn 244
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 251
changing reg in insn 257
changing reg in insn 259
changing reg in insn 263
changing reg in insn 192
changing reg in insn 164
changing reg in insn 114
changing reg in insn 81
changing reg in insn 55
changing reg in insn 34
changing reg in insn 19
changing reg in insn 268
changing reg in insn 268
changing reg in insn 272
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 62
changing reg in insn 63
changing reg in insn 66
changing reg in insn 67
changing reg in insn 70
changing reg in insn 71
changing reg in insn 98
changing reg in insn 99
changing reg in insn 126
changing reg in insn 127
changing reg in insn 132
changing reg in insn 133
changing reg in insn 135
changing reg in insn 136
changing reg in insn 140
changing reg in insn 141
changing reg in insn 169
changing reg in insn 170
changing reg in insn 197
changing reg in insn 198
changing reg in insn 202
changing reg in insn 203
changing reg in insn 205
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 214
changing reg in insn 215
changing reg in insn 219
changing reg in insn 220
changing reg in insn 225
changing reg in insn 226
changing reg in insn 232
changing reg in insn 233
changing reg in insn 235
changing reg in insn 236
changing reg in insn 237
changing reg in insn 238
changing reg in insn 239
changing reg in insn 240
changing reg in insn 242
changing reg in insn 241
changing reg in insn 242
changing reg in insn 244
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 250
changing reg in insn 251
deleting insn with uid = 13.
deleting insn with uid = 31.
deleting insn with uid = 45.
deleting insn with uid = 52.
deleting insn with uid = 70.
deleting insn with uid = 78.
deleting insn with uid = 95.
deleting insn with uid = 98.
deleting insn with uid = 106.
deleting insn with uid = 111.
deleting insn with uid = 151.
deleting insn with uid = 156.
deleting insn with uid = 161.
deleting insn with uid = 178.
deleting insn with uid = 184.
deleting insn with uid = 189.
deleting insn with uid = 216.
deleting insn with uid = 229.
deleting insn with uid = 293.
deleting insn with uid = 294.
deleting insn with uid = 254.
deleting insn with uid = 260.
deleting insn with uid = 268.
deleting insn with uid = 272.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 112.
verify found no changes in insn with uid = 152.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 162.
verify found no changes in insn with uid = 179.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 190.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 230.
verify found no changes in insn with uid = 255.
verify found no changes in insn with uid = 261.


sys_unlink

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={93d,70u} r1={30d,10u} r2={24d,5u} r3={1d,22u} r7={66d,188u} r8={19d} r9={19d} r10={19d} r11={19d} r12={19d} r13={19d} r14={19d} r15={19d} r17={79d,11u} r18={19d} r20={19d} r21={19d} r22={19d} r23={19d} r24={19d} r25={19d} r26={19d} r27={19d} r28={19d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={19d} r38={19d} r39={19d} r40={19d} r41={19d} r42={19d} r43={19d} r44={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} 
;;    total ref usage 1834{1528d,306u,0e} in 210{191 regular + 19 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 289 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 289 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 289 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":523:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (parallel [
            (set (reg:SI 0 ax [136])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":523:17 209 {*addsi_1}
     (nil))
(insn 7 6 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [26  S4 A32])
        (reg:SI 0 ax [136])) "fs/namei.c":523:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 0 ax [137])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":523:17 209 {*addsi_1}
     (nil))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg:SI 0 ax [137])) "fs/namei.c":523:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 10 9 11 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 name+0 S4 A32])) "fs/namei.c":523:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("dir_namei") [flags 0x3]  <function_decl 0x7f2fcf349b00 dir_namei>) [0 dir_namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":523:17 823 {*call_value}
     (nil)
    (nil))
(insn 12 11 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":523:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 14 12 15 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "fs/namei.c":523:15 75 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 0 ax [orig:84 dir.107_2 ] [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":523:15 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:84 dir.107_2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":523:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "fs/namei.c":523:8 806 {*jcc}
     (nil)
 -> 22)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 275 3 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":524:16 75 {*movsi_internal}
     (nil))
(jump_insn 275 19 276 3 (set (pc)
        (label_ref 266)) "fs/namei.c":524:16 807 {jump}
     (nil)
 -> 266)
(barrier 276 275 22)
(code_label 22 276 23 4 119 (nil) [1 uses])
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:SI 0 ax [orig:85 namelen.108_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 namelen+0 S4 A32])) "fs/namei.c":525:9 75 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 namelen.108_3 ] [85])
            (const_int 0 [0]))) "fs/namei.c":525:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "fs/namei.c":525:8 806 {*jcc}
     (nil)
 -> 37)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:SI 0 ax [orig:86 dir.109_4 ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":526:9 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":526:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 30 29 32 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:86 dir.109_4 ] [86])) "fs/namei.c":526:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 32 30 33 5 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":526:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 33 32 34 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":526:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 34 33 277 5 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":527:16 75 {*movsi_internal}
     (nil))
(jump_insn 277 34 278 5 (set (pc)
        (label_ref 266)) "fs/namei.c":527:16 807 {jump}
     (nil)
 -> 266)
(barrier 278 277 37)
(code_label 37 278 38 6 121 (nil) [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 0 ax [orig:87 dir.110_5 ] [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":529:10 75 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":529:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 41 40 42 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (const_int 2 [0x2])) "fs/namei.c":529:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 42 41 43 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:87 dir.110_5 ] [87])) "fs/namei.c":529:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 43 42 44 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":529:10 823 {*call_value}
     (nil)
    (nil))
(insn 44 43 46 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":529:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 46 44 47 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 _6 ] [88])
            (const_int 0 [0]))) "fs/namei.c":529:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/namei.c":529:8 806 {*jcc}
     (nil)
 -> 58)
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:SI 0 ax [orig:89 dir.111_7 ] [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":530:9 75 {*movsi_internal}
     (nil))
(insn 50 49 51 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":530:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 51 50 53 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:89 dir.111_7 ] [89])) "fs/namei.c":530:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 53 51 54 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":530:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 54 53 55 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":530:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 55 54 279 7 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":531:16 75 {*movsi_internal}
     (nil))
(jump_insn 279 55 280 7 (set (pc)
        (label_ref 266)) "fs/namei.c":531:16 807 {jump}
     (nil)
 -> 266)
(barrier 280 279 58)
(code_label 58 280 59 8 122 (nil) [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg:SI 1 dx [orig:90 namelen.112_8 ] [90])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 namelen+0 S4 A32])) "fs/namei.c":533:10 75 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg/f:SI 0 ax [orig:91 basename.113_9 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 basename+0 S4 A32])) "fs/namei.c":533:10 75 {*movsi_internal}
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg:SI 2 cx [138])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":533:10 209 {*addsi_1}
     (nil))
(insn 63 62 64 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 2 cx [138])) "fs/namei.c":533:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 64 63 65 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:90 namelen.112_8 ] [90])) "fs/namei.c":533:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 65 64 66 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:91 basename.113_9 ] [91])) "fs/namei.c":533:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 66 65 67 8 (parallel [
            (set (reg:SI 0 ax [139])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":533:10 209 {*addsi_1}
     (nil))
(insn 67 66 68 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [139])) "fs/namei.c":533:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 68 67 69 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":533:10 823 {*call_value}
     (nil)
    (nil))
(insn 69 68 71 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":533:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 71 69 72 8 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [140])) "fs/namei.c":533:10 75 {*movsi_internal}
     (nil))
(insn 72 71 73 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":534:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "fs/namei.c":534:8 806 {*jcc}
     (nil)
 -> 84)
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:SI 0 ax [orig:92 dir.114_10 ] [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":535:9 75 {*movsi_internal}
     (nil))
(insn 76 75 77 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":535:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 77 76 79 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:92 dir.114_10 ] [92])) "fs/namei.c":535:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 79 77 80 9 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":535:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 80 79 81 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":535:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 81 80 281 9 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":536:16 75 {*movsi_internal}
     (nil))
(jump_insn 281 81 282 9 (set (pc)
        (label_ref 266)) "fs/namei.c":536:16 807 {jump}
     (nil)
 -> 266)
(barrier 282 281 84)
(code_label 84 282 85 10 123 (nil) [1 uses])
(note 85 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 10 (set (reg/f:SI 0 ax [orig:93 de.115_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 de+0 S4 A32])) "fs/namei.c":538:38 75 {*movsi_internal}
     (nil))
(insn 87 86 88 10 (set (reg:HI 0 ax [orig:94 _12 ] [94])
        (mem:HI (reg/f:SI 0 ax [orig:93 de.115_11 ] [93]) [4 de.115_11->inode+0 S2 A16])) "fs/namei.c":538:38 76 {*movhi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (zero_extend:SI (reg:HI 0 ax [orig:94 _12 ] [94]))) "fs/namei.c":538:19 144 {*zero_extendhisi2}
     (nil))
(insn 89 88 90 10 (set (reg/f:SI 0 ax [orig:96 dir.116_14 ] [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":538:27 75 {*movsi_internal}
     (nil))
(insn 90 89 91 10 (set (reg:HI 0 ax [orig:97 _15 ] [97])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:96 dir.116_14 ] [96])
                (const_int 44 [0x2c])) [4 dir.116_14->i_dev+0 S2 A32])) "fs/namei.c":538:27 76 {*movhi_internal}
     (nil))
(insn 91 90 92 10 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (zero_extend:SI (reg:HI 0 ax [orig:97 _15 ] [97]))) "fs/namei.c":538:19 144 {*zero_extendhisi2}
     (nil))
(insn 92 91 93 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":538:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 93 92 94 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:95 _13 ] [95])) "fs/namei.c":538:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 94 93 96 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:98 _16 ] [98])) "fs/namei.c":538:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 96 94 97 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("iget") [flags 0x41]  <function_decl 0x7f2fcf30e900 iget>) [0 iget S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":538:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 97 96 99 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":538:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 99 97 100 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])
        (reg:SI 0 ax [141])) "fs/namei.c":538:19 75 {*movsi_internal}
     (nil))
(insn 100 99 101 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [2 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":538:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 101 100 102 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) "fs/namei.c":538:8 806 {*jcc}
     (nil)
 -> 117)
(note 102 101 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 11 (set (reg/f:SI 0 ax [orig:99 dir.117_17 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":539:9 75 {*movsi_internal}
     (nil))
(insn 104 103 105 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":539:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 105 104 107 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:99 dir.117_17 ] [99])) "fs/namei.c":539:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 107 105 108 11 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":539:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 108 107 109 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":539:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 109 108 110 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":540:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 110 109 112 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":540:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 112 110 113 11 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":540:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 113 112 114 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":540:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 114 113 283 11 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":541:16 75 {*movsi_internal}
     (nil))
(jump_insn 283 114 284 11 (set (pc)
        (label_ref 266)) "fs/namei.c":541:16 807 {jump}
     (nil)
 -> 266)
(barrier 284 283 117)
(code_label 117 284 118 12 124 (nil) [1 uses])
(note 118 117 119 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 12 (set (reg/f:SI 0 ax [orig:100 dir.118_18 ] [100])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":543:13 75 {*movsi_internal}
     (nil))
(insn 120 119 121 12 (set (reg:HI 0 ax [orig:101 _19 ] [101])
        (mem:HI (reg/f:SI 0 ax [orig:100 dir.118_18 ] [100]) [4 dir.118_18->i_mode+0 S2 A32])) "fs/namei.c":543:13 76 {*movhi_internal}
     (nil))
(insn 121 120 122 12 (set (reg:SI 0 ax [orig:102 _20 ] [102])
        (zero_extend:SI (reg:HI 0 ax [orig:101 _19 ] [101]))) "fs/namei.c":543:22 144 {*zero_extendhisi2}
     (nil))
(insn 122 121 123 12 (parallel [
            (set (reg:SI 0 ax [orig:103 _21 ] [103])
                (and:SI (reg:SI 0 ax [orig:102 _20 ] [102])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":543:22 490 {*andsi_1}
     (nil))
(insn 123 122 124 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:103 _21 ] [103])
            (const_int 0 [0]))) "fs/namei.c":543:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 124 123 125 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "fs/namei.c":543:8 806 {*jcc}
     (nil)
 -> 167)
(note 125 124 126 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 13 (set (reg/f:SI 0 ax [142])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":543:37 75 {*movsi_internal}
     (nil))
(insn 127 126 128 13 (set (reg/f:SI 0 ax [orig:104 current.119_22 ] [104])
        (mem/f/c:SI (reg/f:SI 0 ax [142]) [6 current+0 S4 A32])) "fs/namei.c":543:37 75 {*movsi_internal}
     (nil))
(insn 128 127 129 13 (set (reg:HI 0 ax [orig:105 _23 ] [105])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:104 current.119_22 ] [104])
                (const_int 578 [0x242])) [4 current.119_22->euid+0 S2 A16])) "fs/namei.c":543:37 76 {*movhi_internal}
     (nil))
(insn 129 128 130 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:105 _23 ] [105])
            (const_int 0 [0]))) "fs/namei.c":543:33 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 130 129 131 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "fs/namei.c":543:33 806 {*jcc}
     (nil)
 -> 167)
(note 131 130 132 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 14 (set (reg/f:SI 0 ax [143])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":544:17 75 {*movsi_internal}
     (nil))
(insn 133 132 134 14 (set (reg/f:SI 0 ax [orig:106 current.120_24 ] [106])
        (mem/f/c:SI (reg/f:SI 0 ax [143]) [6 current+0 S4 A32])) "fs/namei.c":544:17 75 {*movsi_internal}
     (nil))
(insn 134 133 135 14 (set (reg:HI 1 dx [orig:107 _25 ] [107])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:106 current.120_24 ] [106])
                (const_int 578 [0x242])) [4 current.120_24->euid+0 S2 A16])) "fs/namei.c":544:17 76 {*movhi_internal}
     (nil))
(insn 135 134 136 14 (set (reg/f:SI 0 ax [144])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":544:32 75 {*movsi_internal}
     (nil))
(insn 136 135 137 14 (set (reg:HI 0 ax [orig:108 _26 ] [108])
        (mem:HI (plus:SI (reg/f:SI 0 ax [144])
                (const_int 2 [0x2])) [4 inode_64->i_uid+0 S2 A16])) "fs/namei.c":544:32 76 {*movhi_internal}
     (nil))
(insn 137 136 138 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:107 _25 ] [107])
            (reg:HI 0 ax [orig:108 _26 ] [108]))) "fs/namei.c":543:45 10 {*cmphi_1}
     (nil))
(jump_insn 138 137 139 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "fs/namei.c":543:45 806 {*jcc}
     (nil)
 -> 167)
(note 139 138 140 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 15 (set (reg/f:SI 0 ax [145])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":545:17 75 {*movsi_internal}
     (nil))
(insn 141 140 142 15 (set (reg/f:SI 0 ax [orig:109 current.121_27 ] [109])
        (mem/f/c:SI (reg/f:SI 0 ax [145]) [6 current+0 S4 A32])) "fs/namei.c":545:17 75 {*movsi_internal}
     (nil))
(insn 142 141 143 15 (set (reg:HI 1 dx [orig:110 _28 ] [110])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:109 current.121_27 ] [109])
                (const_int 578 [0x242])) [4 current.121_27->euid+0 S2 A16])) "fs/namei.c":545:17 76 {*movhi_internal}
     (nil))
(insn 143 142 144 15 (set (reg/f:SI 0 ax [orig:111 dir.122_29 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":545:30 75 {*movsi_internal}
     (nil))
(insn 144 143 145 15 (set (reg:HI 0 ax [orig:112 _30 ] [112])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:111 dir.122_29 ] [111])
                (const_int 2 [0x2])) [4 dir.122_29->i_uid+0 S2 A16])) "fs/namei.c":545:30 76 {*movhi_internal}
     (nil))
(insn 145 144 146 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:110 _28 ] [110])
            (reg:HI 0 ax [orig:112 _30 ] [112]))) "fs/namei.c":544:40 10 {*cmphi_1}
     (nil))
(jump_insn 146 145 147 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "fs/namei.c":544:40 806 {*jcc}
     (nil)
 -> 167)
(note 147 146 148 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 16 (set (reg/f:SI 0 ax [orig:113 dir.123_31 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":546:9 75 {*movsi_internal}
     (nil))
(insn 149 148 150 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":546:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 150 149 152 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:113 dir.123_31 ] [113])) "fs/namei.c":546:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 152 150 153 16 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":546:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 153 152 154 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":546:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 154 153 155 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":547:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 155 154 157 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":547:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 157 155 158 16 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":547:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 158 157 159 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":547:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 159 158 160 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":548:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 160 159 162 16 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":548:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 162 160 163 16 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":548:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 163 162 164 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":548:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 164 163 285 16 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":549:16 75 {*movsi_internal}
     (nil))
(jump_insn 285 164 286 16 (set (pc)
        (label_ref 266)) "fs/namei.c":549:16 807 {jump}
     (nil)
 -> 266)
(barrier 286 285 167)
(code_label 167 286 168 17 125 (nil) [4 uses])
(note 168 167 169 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 17 (set (reg/f:SI 0 ax [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":551:9 75 {*movsi_internal}
     (nil))
(insn 170 169 171 17 (set (reg:HI 0 ax [orig:114 _32 ] [114])
        (mem:HI (reg/f:SI 0 ax [146]) [4 inode_64->i_mode+0 S2 A32])) "fs/namei.c":551:9 76 {*movhi_internal}
     (nil))
(insn 171 170 172 17 (set (reg:SI 0 ax [orig:115 _33 ] [115])
        (zero_extend:SI (reg:HI 0 ax [orig:114 _32 ] [114]))) "fs/namei.c":551:9 144 {*zero_extendhisi2}
     (nil))
(insn 172 171 173 17 (parallel [
            (set (reg:SI 0 ax [orig:116 _34 ] [116])
                (and:SI (reg:SI 0 ax [orig:115 _33 ] [115])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":551:9 490 {*andsi_1}
     (nil))
(insn 173 172 174 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:116 _34 ] [116])
            (const_int 16384 [0x4000]))) "fs/namei.c":551:8 11 {*cmpsi_1}
     (nil))
(jump_insn 174 173 175 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "fs/namei.c":551:8 806 {*jcc}
     (nil)
 -> 195)
(note 175 174 176 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":552:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 177 176 179 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":552:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 179 177 180 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":552:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 180 179 181 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":552:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 181 180 182 18 (set (reg/f:SI 0 ax [orig:117 dir.124_35 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":553:9 75 {*movsi_internal}
     (nil))
(insn 182 181 183 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":553:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 183 182 185 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:117 dir.124_35 ] [117])) "fs/namei.c":553:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 185 183 186 18 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":553:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 186 185 187 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":553:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 187 186 188 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":554:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 188 187 190 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":554:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 190 188 191 18 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":554:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 191 190 192 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":554:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 192 191 287 18 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":555:16 75 {*movsi_internal}
     (nil))
(jump_insn 287 192 288 18 (set (pc)
        (label_ref 266)) "fs/namei.c":555:16 807 {jump}
     (nil)
 -> 266)
(barrier 288 287 195)
(code_label 195 288 196 19 126 (nil) [1 uses])
(note 196 195 197 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 19 (set (reg/f:SI 0 ax [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":557:15 75 {*movsi_internal}
     (nil))
(insn 198 197 199 19 (set (reg:QI 0 ax [orig:118 _36 ] [118])
        (mem:QI (plus:SI (reg/f:SI 0 ax [147])
                (const_int 13 [0xd])) [0 inode_64->i_nlinks+0 S1 A8])) "fs/namei.c":557:15 77 {*movqi_internal}
     (nil))
(insn 199 198 200 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:118 _36 ] [118])
            (const_int 0 [0]))) "fs/namei.c":557:8 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 200 199 201 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) "fs/namei.c":557:8 806 {*jcc}
     (nil)
 -> 221)
(note 201 200 202 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 20 (set (reg/f:SI 0 ax [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":559:49 75 {*movsi_internal}
     (nil))
(insn 203 202 204 20 (set (reg:QI 0 ax [orig:119 _37 ] [119])
        (mem:QI (plus:SI (reg/f:SI 0 ax [148])
                (const_int 13 [0xd])) [0 inode_64->i_nlinks+0 S1 A8])) "fs/namei.c":559:49 77 {*movqi_internal}
     (nil))
(insn 204 203 205 20 (set (reg:SI 2 cx [orig:120 _38 ] [120])
        (zero_extend:SI (reg:QI 0 ax [orig:119 _37 ] [119]))) "fs/namei.c":558:9 143 {*zero_extendqisi2}
     (nil))
(insn 205 204 206 20 (set (reg/f:SI 0 ax [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":559:35 75 {*movsi_internal}
     (nil))
(insn 206 205 207 20 (set (reg:HI 0 ax [orig:121 _39 ] [121])
        (mem:HI (plus:SI (reg/f:SI 0 ax [149])
                (const_int 46 [0x2e])) [4 inode_64->i_num+0 S2 A16])) "fs/namei.c":559:35 76 {*movhi_internal}
     (nil))
(insn 207 206 208 20 (set (reg:SI 1 dx [orig:122 _40 ] [122])
        (zero_extend:SI (reg:HI 0 ax [orig:121 _39 ] [121]))) "fs/namei.c":558:9 144 {*zero_extendhisi2}
     (nil))
(insn 208 207 209 20 (set (reg/f:SI 0 ax [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":559:21 75 {*movsi_internal}
     (nil))
(insn 209 208 210 20 (set (reg:HI 0 ax [orig:123 _41 ] [123])
        (mem:HI (plus:SI (reg/f:SI 0 ax [150])
                (const_int 44 [0x2c])) [4 inode_64->i_dev+0 S2 A32])) "fs/namei.c":559:21 76 {*movhi_internal}
     (nil))
(insn 210 209 211 20 (set (reg:SI 0 ax [orig:124 _42 ] [124])
        (zero_extend:SI (reg:HI 0 ax [orig:123 _41 ] [123]))) "fs/namei.c":558:9 144 {*zero_extendhisi2}
     (nil))
(insn 211 210 212 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 2 cx [orig:120 _38 ] [120])) "fs/namei.c":558:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 212 211 213 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:122 _40 ] [122])) "fs/namei.c":558:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 213 212 214 20 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:124 _42 ] [124])) "fs/namei.c":558:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 214 213 215 20 (set (reg/f:SI 0 ax [151])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f2fcf01a6c0 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":558:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x7f2fcf01a6c0 *.LC3>)
        (nil)))
(insn 215 214 217 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [151])) "fs/namei.c":558:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 217 215 218 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7f2fcf338900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":558:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 218 217 219 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":558:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 219 218 220 20 (set (reg/f:SI 0 ax [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":560:25 75 {*movsi_internal}
     (nil))
(insn 220 219 221 20 (set (mem:QI (plus:SI (reg/f:SI 0 ax [152])
                (const_int 13 [0xd])) [0 inode_64->i_nlinks+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":560:25 77 {*movqi_internal}
     (nil))
(code_label 221 220 222 21 127 (nil) [1 uses])
(note 222 221 223 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 21 (set (reg/f:SI 0 ax [orig:125 de.125_43 ] [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 de+0 S4 A32])) "fs/namei.c":562:7 75 {*movsi_internal}
     (nil))
(insn 224 223 225 21 (set (mem:HI (reg/f:SI 0 ax [orig:125 de.125_43 ] [125]) [4 de.125_43->inode+0 S2 A16])
        (const_int 0 [0])) "fs/namei.c":562:16 76 {*movhi_internal}
     (nil))
(insn 225 224 226 21 (set (reg/f:SI 0 ax [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])) "fs/namei.c":563:16 75 {*movsi_internal}
     (nil))
(insn 226 225 227 21 (set (mem:QI (plus:SI (reg/f:SI 0 ax [153])
                (const_int 11 [0xb])) [0 bh_62->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":563:16 77 {*movqi_internal}
     (nil))
(insn 227 226 228 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":564:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 228 227 230 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":564:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 230 228 231 21 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":564:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 231 230 232 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":564:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 232 231 233 21 (set (reg/f:SI 0 ax [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":565:10 75 {*movsi_internal}
     (nil))
(insn 233 232 234 21 (set (reg:QI 0 ax [orig:126 _44 ] [126])
        (mem:QI (plus:SI (reg/f:SI 0 ax [154])
                (const_int 13 [0xd])) [0 inode_64->i_nlinks+0 S1 A8])) "fs/namei.c":565:10 77 {*movqi_internal}
     (nil))
(insn 234 233 235 21 (parallel [
            (set (reg:QI 1 dx [orig:127 _46 ] [127])
                (plus:QI (reg:QI 0 ax [orig:126 _44 ] [126])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":565:20 213 {*addqi_1}
     (nil))
(insn 235 234 236 21 (set (reg/f:SI 0 ax [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":565:20 75 {*movsi_internal}
     (nil))
(insn 236 235 237 21 (set (mem:QI (plus:SI (reg/f:SI 0 ax [155])
                (const_int 13 [0xd])) [0 inode_64->i_nlinks+0 S1 A8])
        (reg:QI 1 dx [orig:127 _46 ] [127])) "fs/namei.c":565:20 77 {*movqi_internal}
     (nil))
(insn 237 236 238 21 (set (reg/f:SI 0 ax [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":566:19 75 {*movsi_internal}
     (nil))
(insn 238 237 239 21 (set (mem:QI (plus:SI (reg/f:SI 0 ax [156])
                (const_int 51 [0x33])) [0 inode_64->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":566:19 77 {*movqi_internal}
     (nil))
(insn 239 238 240 21 (set (reg/f:SI 0 ax [157])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 240 239 241 21 (set (reg:SI 2 cx [orig:128 jiffies.126_47 ] [128])
        (mem/v/c:SI (reg/f:SI 0 ax [157]) [5 jiffies+0 S4 A32])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 241 240 291 21 (set (reg:SI 1 dx [159])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 291 241 242 21 (set (reg:SI 0 ax [165])
        (reg:SI 2 cx [orig:128 jiffies.126_47 ] [128])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 242 291 292 21 (parallel [
            (set (reg:SI 1 dx [158])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [165]))
                            (sign_extend:DI (reg:SI 1 dx [159])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [165]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":567:22 435 {*smulsi3_highpart_1}
     (nil))
(insn 292 242 243 21 (set (reg:SI 0 ax [158])
        (reg:SI 1 dx [158])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 243 292 244 21 (parallel [
            (set (reg:SI 0 ax [158])
                (ashiftrt:SI (reg:SI 0 ax [158])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":567:22 702 {*ashrsi3_1}
     (nil))
(insn 244 243 245 21 (parallel [
            (set (reg:SI 2 cx [161])
                (ashiftrt:SI (reg:SI 2 cx [orig:128 jiffies.126_47 ] [128])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":567:22 694 {ashrsi3_cvt}
     (nil))
(insn 245 244 295 21 (parallel [
            (set (reg:SI 0 ax [160])
                (minus:SI (reg:SI 0 ax [160])
                    (reg:SI 2 cx [161])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":567:22 282 {*subsi_1}
     (nil))
(insn 295 245 246 21 (set (reg:SI 1 dx [orig:129 _48 ] [129])
        (reg:SI 0 ax [160])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 246 295 247 21 (set (reg/f:SI 0 ax [162])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 247 246 248 21 (set (reg:SI 0 ax [orig:130 startup_time.127_49 ] [130])
        (mem/c:SI (reg/f:SI 0 ax [162]) [5 startup_time+0 S4 A32])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 248 247 249 21 (parallel [
            (set (reg:SI 0 ax [orig:131 _50 ] [131])
                (plus:SI (reg:SI 0 ax [orig:130 startup_time.127_49 ] [130])
                    (reg:SI 1 dx [orig:129 _48 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":567:22 209 {*addsi_1}
     (nil))
(insn 249 248 250 21 (set (reg:SI 1 dx [orig:132 _51 ] [132])
        (reg:SI 0 ax [orig:131 _50 ] [131])) "fs/namei.c":567:22 75 {*movsi_internal}
     (nil))
(insn 250 249 251 21 (set (reg/f:SI 0 ax [163])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":567:20 75 {*movsi_internal}
     (nil))
(insn 251 250 252 21 (set (mem:SI (plus:SI (reg/f:SI 0 ax [163])
                (const_int 40 [0x28])) [5 inode_64->i_ctime+0 S4 A32])
        (reg:SI 1 dx [orig:132 _51 ] [132])) "fs/namei.c":567:20 75 {*movsi_internal}
     (nil))
(insn 252 251 253 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":568:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 253 252 255 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":568:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 255 253 256 21 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":568:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 256 255 257 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":568:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 257 256 258 21 (set (reg/f:SI 0 ax [orig:133 dir.128_52 ] [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":569:5 75 {*movsi_internal}
     (nil))
(insn 258 257 259 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":569:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 259 258 261 21 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:133 dir.128_52 ] [133])) "fs/namei.c":569:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 261 259 262 21 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":569:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 262 261 263 21 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":569:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 263 262 266 21 (set (reg:SI 0 ax [orig:134 _53 ] [134])
        (const_int 0 [0])) "fs/namei.c":570:12 75 {*movsi_internal}
     (nil))
(code_label 266 263 267 22 128 (nil) [7 uses])
(note 267 266 273 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 273 267 290 22 (use (reg/i:SI 0 ax)) "fs/namei.c":571:1 -1
     (nil))
(note 290 273 0 NOTE_INSN_DELETED)

;; Function sys_mkdir (sys_mkdir, funcdef_no=19, decl_uid=1537, cgraph_uid=20, symbol_order=19)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 19:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 77:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 86:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 103:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 120:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 129:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 133:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=213 from oldreg=211, assigning class AREG to r213
  133: {r172:SI=trunc(sign_extend(r213:SI)*sign_extend(r173:SI) 0>>0x20);clobber r213:SI;clobber flags:CC;}
      REG_DEAD r173:SI
      REG_UNUSED r211:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  398: r213:SI=r99:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 134:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=214 from oldreg=172, assigning class GENERAL_REGS to r214
  134: {r214:SI=r214:SI>>0x5;clobber flags:CC;}
      REG_DEAD r172:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  399: r214:SI=r172:SI
    Inserting insn reload after:
  400: r174:SI=r214:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 136:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=215 from oldreg=174, assigning class GENERAL_REGS to r215
  136: {r215:SI=r215:SI-r175:SI;clobber flags:CC;}
      REG_DEAD r175:SI
      REG_DEAD r174:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  401: r215:SI=r174:SI
    Inserting insn reload after:
  402: r100:SI=r215:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 139
	 Choosing alt 0 in insn 139:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 142:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 146:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 148:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 150:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 154:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 158:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 160:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 165:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 169:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 171:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 172:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 174:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 175:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 186:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 191:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 193:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 198:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 205:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 209:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 211:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 214:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 216:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 221:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 223:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 224:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 226:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 227:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 231:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 239:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 242:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 243:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 245:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 246:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) Ts {*leasi} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 252:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 254:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 255:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 258:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 259:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 261:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 262:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) Ts {*leasi} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 268:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 270:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 272:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 273:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 276:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 277:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            alt=2: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 280:  (0) =rm  (1) %0  (2) rn {*andhi_1}
      Creating newreg=216 from oldreg=136, assigning class GENERAL_REGS to r216
  280: {r216:HI=r216:HI&0x1ff;clobber flags:CC;}
      REG_DEAD r136:HI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  403: r216:HI=r136:HI
    Inserting insn reload after:
  404: r137:HI=r216:HI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 283:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =rm  (1) 0 {*one_cmplhi2_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
            alt=2: Bad operand -- refuse
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 286
	 Choosing alt 0 in insn 286:  (0) =rm  (1) %0  (2) rn {*andhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 287:  (0) =rm  (1) %0  (2) rn {*iorhi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 290:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 292:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 296:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 300:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 302:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 304:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 305:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 309:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 313:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 315:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 318:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 320:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 321:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 325:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 326:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 327:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 328:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 332:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 340:  (0) r  (1) rm {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 341:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 343:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 345:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 346:  (0) =qm  (1) %0  (2) qn {*addqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 347:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 349:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 351:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 355:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 356:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 360:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 361:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 365:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10 11
EBB 12 13
EBB 14 15
EBB 16 17
EBB 18 19
EBB 20
EBB 21

********** Pseudo live ranges #1: **********

  BB 21
   Insn 376: point = 0, n_alt = -1
   Insn 375: point = 0, n_alt = -2
   Insn 371: point = 1, n_alt = -2
  BB 19
   Insn 394: point = 4, n_alt = -1
   Insn 333: point = 4, n_alt = 0
   Insn 332: point = 5, n_alt = 0
   Insn 331: point = 5, n_alt = 0
   Insn 330: point = 5, n_alt = -2
   Insn 329: point = 6, n_alt = 0
   Insn 328: point = 6, n_alt = 0
   Insn 327: point = 6, n_alt = 8
   Insn 326: point = 7, n_alt = 0
   Insn 325: point = 8, n_alt = 0
   Insn 324: point = 8, n_alt = 0
   Insn 323: point = 8, n_alt = -2
   Insn 322: point = 8, n_alt = 0
   Insn 321: point = 9, n_alt = 0
   Insn 320: point = 10, n_alt = 0
   Insn 319: point = 10, n_alt = 0
   Insn 318: point = 12, n_alt = 2
   Insn 317: point = 14, n_alt = 0
   Insn 316: point = 15, n_alt = 0
   Insn 315: point = 17, n_alt = 2
   Insn 314: point = 19, n_alt = 0
   Insn 313: point = 20, n_alt = 0
   Insn 312: point = 20, n_alt = 0
   Insn 311: point = 20, n_alt = -2
   Insn 310: point = 20, n_alt = 0
   Insn 309: point = 21, n_alt = 0
   Insn 308: point = 21, n_alt = 0
  BB 15
   Insn 390: point = 23, n_alt = -1
   Insn 180: point = 23, n_alt = 0
   Insn 179: point = 24, n_alt = 0
   Insn 178: point = 24, n_alt = 0
   Insn 177: point = 24, n_alt = -2
   Insn 176: point = 25, n_alt = 0
   Insn 175: point = 25, n_alt = 0
   Insn 174: point = 25, n_alt = 8
   Insn 173: point = 26, n_alt = 0
   Insn 172: point = 27, n_alt = 5
   Insn 171: point = 29, n_alt = 4
   Insn 170: point = 31, n_alt = 0
   Insn 169: point = 32, n_alt = 0
   Insn 168: point = 32, n_alt = 0
   Insn 167: point = 32, n_alt = -2
   Insn 166: point = 32, n_alt = 0
   Insn 165: point = 33, n_alt = 0
   Insn 164: point = 33, n_alt = 0
  BB 13
   Insn 388: point = 35, n_alt = -1
   Insn 121: point = 35, n_alt = 0
   Insn 120: point = 36, n_alt = 0
   Insn 119: point = 36, n_alt = 0
   Insn 118: point = 36, n_alt = -2
   Insn 117: point = 37, n_alt = 0
   Insn 116: point = 38, n_alt = 0
   Insn 115: point = 38, n_alt = 0
  BB 11
   Insn 386: point = 40, n_alt = -1
   Insn 97: point = 40, n_alt = 0
   Insn 96: point = 41, n_alt = 0
   Insn 95: point = 41, n_alt = 0
   Insn 94: point = 41, n_alt = -2
   Insn 93: point = 42, n_alt = 0
   Insn 92: point = 43, n_alt = 0
   Insn 91: point = 43, n_alt = 0
   Insn 90: point = 44, n_alt = 0
   Insn 89: point = 44, n_alt = 0
   Insn 88: point = 44, n_alt = -2
   Insn 87: point = 44, n_alt = 0
   Insn 86: point = 44, n_alt = 0
  BB 9
   Insn 384: point = 45, n_alt = -1
   Insn 66: point = 45, n_alt = 0
   Insn 65: point = 46, n_alt = 0
   Insn 64: point = 46, n_alt = 0
   Insn 63: point = 46, n_alt = -2
   Insn 62: point = 47, n_alt = 0
   Insn 61: point = 48, n_alt = 0
   Insn 60: point = 48, n_alt = 0
  BB 7
   Insn 382: point = 50, n_alt = -1
   Insn 45: point = 50, n_alt = 0
   Insn 44: point = 51, n_alt = 0
   Insn 43: point = 51, n_alt = 0
   Insn 42: point = 51, n_alt = -2
   Insn 41: point = 52, n_alt = 0
   Insn 40: point = 53, n_alt = 0
   Insn 39: point = 53, n_alt = 0
  BB 5
   Insn 380: point = 55, n_alt = -1
   Insn 30: point = 55, n_alt = 0
  BB 3
   Insn 378: point = 56, n_alt = -1
   Insn 11: point = 56, n_alt = 0
  BB 17
   Insn 392: point = 57, n_alt = -1
   Insn 232: point = 57, n_alt = 0
   Insn 231: point = 58, n_alt = 0
   Insn 230: point = 58, n_alt = 0
   Insn 229: point = 58, n_alt = -2
   Insn 228: point = 59, n_alt = 0
   Insn 227: point = 59, n_alt = 0
   Insn 226: point = 59, n_alt = 8
   Insn 225: point = 60, n_alt = 0
   Insn 224: point = 61, n_alt = 5
   Insn 223: point = 63, n_alt = 4
   Insn 222: point = 65, n_alt = 0
   Insn 221: point = 66, n_alt = 0
   Insn 220: point = 66, n_alt = 0
   Insn 219: point = 66, n_alt = -2
   Insn 218: point = 66, n_alt = 0
   Insn 217: point = 67, n_alt = 0
   Insn 216: point = 68, n_alt = 0
   Insn 215: point = 68, n_alt = 0
   Insn 214: point = 70, n_alt = 2
   Insn 213: point = 72, n_alt = 0
   Insn 212: point = 73, n_alt = 0
   Insn 211: point = 75, n_alt = 2
   Insn 210: point = 77, n_alt = 0
   Insn 209: point = 78, n_alt = 0
   Insn 208: point = 78, n_alt = 0
   Insn 207: point = 78, n_alt = -2
   Insn 206: point = 78, n_alt = 0
   Insn 205: point = 79, n_alt = 0
   Insn 204: point = 79, n_alt = 0
  BB 20
   Insn 366: point = 81, n_alt = 0
   Insn 365: point = 82, n_alt = 0
   Insn 364: point = 82, n_alt = 0
   Insn 363: point = 82, n_alt = -2
   Insn 362: point = 83, n_alt = 0
   Insn 361: point = 83, n_alt = 0
   Insn 360: point = 83, n_alt = 0
   Insn 359: point = 83, n_alt = 0
   Insn 358: point = 83, n_alt = -2
   Insn 357: point = 83, n_alt = 0
   Insn 356: point = 83, n_alt = 0
   Insn 355: point = 83, n_alt = 0
   Insn 354: point = 83, n_alt = 0
   Insn 353: point = 83, n_alt = -2
   Insn 352: point = 83, n_alt = 0
   Insn 351: point = 84, n_alt = 0
   Insn 350: point = 84, n_alt = 0
   Insn 349: point = 85, n_alt = 8
   Insn 348: point = 86, n_alt = 0
   Insn 347: point = 87, n_alt = 8
   Insn 346: point = 88, n_alt = 0
   Insn 345: point = 90, n_alt = 4
   Insn 344: point = 91, n_alt = 0
   Insn 343: point = 92, n_alt = 8
   Insn 342: point = 93, n_alt = 0
   Insn 341: point = 94, n_alt = 3
   Insn 340: point = 95, n_alt = 2
   Insn 339: point = 97, n_alt = 0
   Insn 338: point = 98, n_alt = 0
  BB 18
   Insn 306: point = 100, n_alt = -1
   Insn 305: point = 100, n_alt = 1
   Insn 304: point = 100, n_alt = 1
   Insn 303: point = 101, n_alt = -2
   Insn 302: point = 102, n_alt = 0
   Insn 301: point = 102, n_alt = 0
   Insn 300: point = 102, n_alt = 0
   Insn 299: point = 103, n_alt = 0
   Insn 298: point = 104, n_alt = 0
   Insn 297: point = 105, n_alt = 0
   Insn 296: point = 106, n_alt = 3
   Insn 295: point = 107, n_alt = 0
   Insn 294: point = 108, n_alt = 0
   Insn 293: point = 109, n_alt = 0
   Insn 292: point = 110, n_alt = 8
   Insn 291: point = 111, n_alt = 0
   Insn 290: point = 112, n_alt = 3
   Insn 289: point = 113, n_alt = 0
   Insn 288: point = 114, n_alt = -2
   Insn 287: point = 116, n_alt = 0
   Insn 286: point = 118, n_alt = 0
   Insn 285: point = 120, n_alt = 0
   Insn 284: point = 122, n_alt = -2
   Insn 283: point = 124, n_alt = 2
   Insn 282: point = 126, n_alt = 0
   Insn 281: point = 128, n_alt = 0
   Insn 404: point = 129, n_alt = -2
	Hard reg 1 is preferable by r216 with profit 1000
   Insn 280: point = 131, n_alt = 0
   Insn 403: point = 132, n_alt = -2
	Hard reg 1 is preferable by r216 with profit 1000
	Hard reg 0 is preferable by r216 with profit 1000
   Insn 279: point = 134, n_alt = 0
   Insn 278: point = 136, n_alt = 0
   Insn 277: point = 137, n_alt = 0
   Insn 276: point = 137, n_alt = 0
   Insn 275: point = 137, n_alt = -2
   Insn 274: point = 137, n_alt = 0
   Insn 273: point = 137, n_alt = 0
   Insn 272: point = 137, n_alt = 8
   Insn 271: point = 138, n_alt = 0
   Insn 270: point = 139, n_alt = 8
   Insn 269: point = 140, n_alt = 0
   Insn 268: point = 141, n_alt = 0
   Insn 267: point = 141, n_alt = 0
   Insn 266: point = 141, n_alt = -2
   Insn 265: point = 141, n_alt = 0
   Insn 264: point = 142, n_alt = 0
   Insn 263: point = 143, n_alt = 0
   Insn 262: point = 144, n_alt = 0
   Insn 261: point = 144, n_alt = 3
   Insn 260: point = 146, n_alt = 0
   Insn 259: point = 147, n_alt = 3
   Insn 258: point = 148, n_alt = 2
   Insn 257: point = 150, n_alt = 0
   Insn 256: point = 151, n_alt = 0
   Insn 255: point = 152, n_alt = 1
   Insn 254: point = 153, n_alt = 0
   Insn 253: point = 155, n_alt = 0
   Insn 252: point = 156, n_alt = 0
   Insn 251: point = 156, n_alt = 0
   Insn 250: point = 156, n_alt = -2
   Insn 249: point = 156, n_alt = 0
   Insn 248: point = 157, n_alt = 0
   Insn 247: point = 158, n_alt = 0
   Insn 246: point = 159, n_alt = 0
   Insn 245: point = 159, n_alt = 3
   Insn 244: point = 161, n_alt = 0
   Insn 243: point = 162, n_alt = 3
   Insn 242: point = 163, n_alt = 2
   Insn 241: point = 165, n_alt = 0
   Insn 240: point = 166, n_alt = 0
   Insn 239: point = 167, n_alt = 1
   Insn 238: point = 168, n_alt = 0
   Insn 237: point = 170, n_alt = 0
  BB 16
   Insn 202: point = 172, n_alt = -1
   Insn 201: point = 172, n_alt = 1
   Insn 200: point = 172, n_alt = 1
   Insn 199: point = 173, n_alt = -2
   Insn 198: point = 174, n_alt = 0
   Insn 197: point = 174, n_alt = 0
   Insn 196: point = 174, n_alt = -2
   Insn 195: point = 174, n_alt = 0
   Insn 194: point = 175, n_alt = 0
   Insn 193: point = 176, n_alt = 0
   Insn 192: point = 176, n_alt = 0
   Insn 191: point = 178, n_alt = 2
   Insn 190: point = 180, n_alt = 0
   Insn 189: point = 181, n_alt = 0
   Insn 188: point = 183, n_alt = 2
   Insn 187: point = 185, n_alt = 0
   Insn 186: point = 186, n_alt = 8
   Insn 185: point = 187, n_alt = 0
  BB 14
   Insn 162: point = 189, n_alt = -1
   Insn 161: point = 189, n_alt = 0
   Insn 160: point = 190, n_alt = 2
   Insn 159: point = 192, n_alt = 0
   Insn 158: point = 193, n_alt = 3
   Insn 157: point = 194, n_alt = 0
   Insn 156: point = 195, n_alt = 0
   Insn 155: point = 197, n_alt = -2
   Insn 154: point = 198, n_alt = 0
   Insn 153: point = 198, n_alt = 0
   Insn 152: point = 198, n_alt = -2
   Insn 151: point = 198, n_alt = 0
   Insn 150: point = 199, n_alt = 0
   Insn 149: point = 199, n_alt = 0
   Insn 148: point = 201, n_alt = 2
   Insn 147: point = 203, n_alt = 0
   Insn 146: point = 204, n_alt = 1
   Insn 145: point = 205, n_alt = 0
   Insn 144: point = 206, n_alt = 0
   Insn 143: point = 208, n_alt = 0
   Insn 142: point = 209, n_alt = 1
   Insn 141: point = 210, n_alt = 0
   Insn 140: point = 211, n_alt = -2
   Insn 139: point = 213, n_alt = 0
   Insn 138: point = 215, n_alt = 0
   Insn 137: point = 217, n_alt = 0
   Insn 402: point = 218, n_alt = -2
	Hard reg 1 is preferable by r215 with profit 1000
   Insn 136: point = 220, n_alt = 0
   Insn 401: point = 222, n_alt = -2
	Hard reg 1 is preferable by r215 with profit 1000
	Hard reg 0 is preferable by r215 with profit 1000
   Insn 135: point = 224, n_alt = 1
   Insn 400: point = 226, n_alt = -2
	Hard reg 0 is preferable by r214 with profit 1000
   Insn 134: point = 228, n_alt = 0
   Insn 399: point = 229, n_alt = -2
	Hard reg 0 is preferable by r214 with profit 1000
	Hard reg 1 is preferable by r214 with profit 1000
   Insn 133: point = 231, n_alt = 0
   Insn 398: point = 233, n_alt = -2
	Hard reg 2 is preferable by r213 with profit 1000
   Insn 132: point = 234, n_alt = 0
   Insn 131: point = 235, n_alt = 0
   Insn 130: point = 237, n_alt = 0
   Insn 129: point = 238, n_alt = 8
   Insn 128: point = 239, n_alt = 0
   Insn 127: point = 240, n_alt = 1
   Insn 126: point = 241, n_alt = 0
  BB 12
   Insn 113: point = 243, n_alt = -1
   Insn 112: point = 243, n_alt = 1
   Insn 111: point = 243, n_alt = 1
   Insn 110: point = 244, n_alt = -2
   Insn 109: point = 245, n_alt = 0
   Insn 108: point = 245, n_alt = 0
   Insn 107: point = 245, n_alt = -2
   Insn 106: point = 245, n_alt = 0
   Insn 105: point = 246, n_alt = 0
   Insn 104: point = 246, n_alt = 0
   Insn 103: point = 248, n_alt = 2
   Insn 102: point = 250, n_alt = 0
  BB 10
   Insn 84: point = 252, n_alt = -1
   Insn 83: point = 252, n_alt = 1
   Insn 82: point = 252, n_alt = 1
   Insn 81: point = 253, n_alt = -2
   Insn 80: point = 254, n_alt = 0
   Insn 79: point = 254, n_alt = 0
   Insn 78: point = 254, n_alt = 0
   Insn 77: point = 255, n_alt = 3
   Insn 76: point = 256, n_alt = 0
   Insn 75: point = 257, n_alt = 0
   Insn 74: point = 258, n_alt = 0
   Insn 73: point = 259, n_alt = 3
   Insn 72: point = 260, n_alt = 0
   Insn 71: point = 261, n_alt = 0
  BB 8
   Insn 58: point = 263, n_alt = -1
   Insn 57: point = 263, n_alt = 0
   Insn 56: point = 264, n_alt = -2
   Insn 55: point = 265, n_alt = 0
   Insn 54: point = 265, n_alt = 0
   Insn 53: point = 265, n_alt = 0
   Insn 52: point = 266, n_alt = 0
   Insn 51: point = 266, n_alt = 0
   Insn 50: point = 266, n_alt = 0
  BB 6
   Insn 37: point = 268, n_alt = -1
   Insn 36: point = 268, n_alt = 0
   Insn 35: point = 269, n_alt = 0
  BB 4
   Insn 28: point = 271, n_alt = -1
   Insn 27: point = 271, n_alt = 0
   Insn 26: point = 272, n_alt = 0
   Insn 25: point = 273, n_alt = 1
   Insn 24: point = 274, n_alt = -2
   Insn 23: point = 275, n_alt = 0
   Insn 22: point = 275, n_alt = 0
   Insn 21: point = 275, n_alt = 0
   Insn 20: point = 275, n_alt = 0
   Insn 19: point = 276, n_alt = 3
   Insn 18: point = 277, n_alt = 0
   Insn 17: point = 278, n_alt = 3
   Insn 16: point = 279, n_alt = 0
  BB 2
   Insn 9: point = 280, n_alt = -1
   Insn 8: point = 280, n_alt = 0
   Insn 7: point = 281, n_alt = 2
   Insn 6: point = 283, n_alt = 0
   Insn 5: point = 285, n_alt = 0
   Insn 396: point = 286, n_alt = 0
 r82: [82..286] [58..80] [51..54] [46..49] [41..44] [36..39] [24..34] [5..22]
 r83: [282..283]
 r84: [280..281]
 r85: [273..274]
 r86: [271..272]
 r87: [268..269]
 r88: [52..53]
 r89: [265..266]
 r90: [263..264]
 r91: [47..48]
 r92: [257..261]
 r93: [256..260]
 r94: [42..43]
 r95: [249..250]
 r96: [247..248]
 r97: [245..246]
 r98: [37..38]
 r99: [225..235]
 r100: [214..218]
 r101: [214..215]
 r102: [212..213]
 r103: [209..211]
 r104: [204..206]
 r105: [200..201]
 r106: [198..199]
 r107: [196..197]
 r108: [193..195]
 r109: [189..190]
 r110: [32..33]
 r111: [28..29]
 r112: [25..27]
 r113: [182..183]
 r114: [175..181]
 r115: [177..178]
 r116: [174..176]
 r117: [78..79]
 r118: [74..75]
 r119: [67..73]
 r120: [69..70]
 r121: [66..68]
 r122: [62..63]
 r123: [59..61]
 r124: [167..168]
 r125: [162..166]
 r126: [162..163]
 r127: [160..161]
 r128: [156..159]
 r129: [154..155]
 r130: [152..153]
 r131: [149..151]
 r132: [147..150]
 r133: [147..148]
 r134: [145..146]
 r135: [141..144]
 r136: [133..134]
 r137: [119..129]
 r138: [125..126]
 r139: [123..124]
 r140: [121..122]
 r141: [119..120]
 r142: [117..118]
 r143: [115..116]
 r144: [112..114]
 r145: [104..109]
 r146: [103..108]
 r147: [102..107]
 r148: [20..21]
 r149: [16..17]
 r150: [9..15]
 r151: [11..12]
 r152: [8..10]
 r153: [94..98]
 r154: [94..95]
 r155: [87..91]
 r156: [89..90]
 r157: [87..88]
 r158: [85..86]
 r159: [83..84]
 r160: [81..81] [55..57] [50..50] [45..45] [40..40] [35..35] [23..23] [2..4]
 r161: [0..1]
 r162: [284..285]
 r163: [277..278]
 r164: [275..276]
 r165: [258..259]
 r166: [254..255]
 r167: [252..253]
 r168: [243..244]
 r169: [240..241]
 r170: [238..239]
 r171: [236..237]
 r172: [230..231]
 r173: [232..234]
 r174: [223..226]
 r175: [221..224]
 r176: [216..217]
 r177: [209..210]
 r178: [207..208]
 r179: [204..205]
 r180: [202..203]
 r181: [193..194]
 r182: [191..192]
 r183: [30..31]
 r184: [25..26]
 r185: [186..187]
 r186: [184..185]
 r187: [179..180]
 r188: [172..173]
 r189: [76..77]
 r190: [71..72]
 r191: [64..65]
 r192: [59..60]
 r193: [169..170]
 r194: [164..165]
 r195: [157..158]
 r196: [142..143]
 r197: [139..140]
 r198: [137..138]
 r199: [135..136]
 r200: [127..128]
 r201: [112..113]
 r202: [110..111]
 r203: [105..106]
 r204: [100..101]
 r205: [18..19]
 r206: [13..14]
 r207: [6..7]
 r208: [96..97]
 r209: [92..93]
 r213: [231..233]
 r214: [227..229]
 r215: [219..222]
 r216: [130..132]
Compressing live ranges: from 287 to 222 - 77%
Ranges after the compression:
 r82: [60..221] [41..58] [37..38] [34..35] [31..32] [28..29] [19..26] [4..17]
 r83: [218..219]
 r84: [216..217]
 r85: [210..211]
 r86: [208..209]
 r87: [206..207]
 r88: [37..38]
 r89: [204..205]
 r90: [202..203]
 r91: [34..35]
 r92: [200..201]
 r93: [200..201]
 r94: [31..32]
 r95: [194..195]
 r96: [192..193]
 r97: [190..191]
 r98: [28..29]
 r99: [174..181]
 r100: [166..169]
 r101: [166..167]
 r102: [164..165]
 r103: [162..163]
 r104: [158..159]
 r105: [154..155]
 r106: [152..153]
 r107: [150..151]
 r108: [148..149]
 r109: [144..145]
 r110: [25..26]
 r111: [21..22]
 r112: [19..20]
 r113: [138..139]
 r114: [132..137]
 r115: [134..135]
 r116: [132..133]
 r117: [57..58]
 r118: [53..54]
 r119: [47..52]
 r120: [49..50]
 r121: [47..48]
 r122: [43..44]
 r123: [41..42]
 r124: [126..127]
 r125: [122..125]
 r126: [122..123]
 r127: [120..121]
 r128: [118..119]
 r129: [116..117]
 r130: [114..115]
 r131: [112..113]
 r132: [110..113]
 r133: [110..111]
 r134: [108..109]
 r135: [106..107]
 r136: [98..99]
 r137: [86..95]
 r138: [92..93]
 r139: [90..91]
 r140: [88..89]
 r141: [86..87]
 r142: [84..85]
 r143: [82..83]
 r144: [80..81]
 r145: [76..77]
 r146: [76..77]
 r147: [76..77]
 r148: [16..17]
 r149: [12..13]
 r150: [6..11]
 r151: [8..9]
 r152: [6..7]
 r153: [70..73]
 r154: [70..71]
 r155: [64..67]
 r156: [66..67]
 r157: [64..65]
 r158: [62..63]
 r159: [60..61]
 r160: [59..59] [39..40] [36..36] [33..33] [30..30] [27..27] [18..18] [2..3]
 r161: [0..1]
 r162: [220..221]
 r163: [214..215]
 r164: [212..213]
 r165: [200..201]
 r166: [198..199]
 r167: [196..197]
 r168: [188..189]
 r169: [186..187]
 r170: [184..185]
 r171: [182..183]
 r172: [178..179]
 r173: [180..181]
 r174: [172..175]
 r175: [170..173]
 r176: [168..169]
 r177: [162..163]
 r178: [160..161]
 r179: [158..159]
 r180: [156..157]
 r181: [148..149]
 r182: [146..147]
 r183: [23..24]
 r184: [19..20]
 r185: [142..143]
 r186: [140..141]
 r187: [136..137]
 r188: [130..131]
 r189: [55..56]
 r190: [51..52]
 r191: [45..46]
 r192: [41..42]
 r193: [128..129]
 r194: [124..125]
 r195: [118..119]
 r196: [106..107]
 r197: [104..105]
 r198: [102..103]
 r199: [100..101]
 r200: [94..95]
 r201: [80..81]
 r202: [78..79]
 r203: [76..77]
 r204: [74..75]
 r205: [14..15]
 r206: [10..11]
 r207: [4..5]
 r208: [72..73]
 r209: [68..69]
 r213: [179..181]
 r214: [176..177]
 r215: [170..171]
 r216: [96..97]

********** Assignment #1: **********

	 Assigning to 213 (cl=AREG, orig=211, freq=2000, tfirst=213, tfreq=2000)...
	   Assign 0 to reload r213 (freq=2000)
	 Assigning to 214 (cl=GENERAL_REGS, orig=172, freq=3000, tfirst=214, tfreq=3000)...
	   Assign 0 to reload r214 (freq=3000)
	 Assigning to 215 (cl=GENERAL_REGS, orig=174, freq=3000, tfirst=215, tfreq=3000)...
	   Assign 0 to reload r215 (freq=3000)
	 Assigning to 216 (cl=GENERAL_REGS, orig=136, freq=3000, tfirst=216, tfreq=3000)...
	   Assign 0 to reload r216 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 396
changing reg in insn 363
changing reg in insn 358
changing reg in insn 353
changing reg in insn 330
changing reg in insn 323
changing reg in insn 311
changing reg in insn 281
changing reg in insn 275
changing reg in insn 266
changing reg in insn 263
changing reg in insn 250
changing reg in insn 247
changing reg in insn 229
changing reg in insn 219
changing reg in insn 207
changing reg in insn 196
changing reg in insn 177
changing reg in insn 167
changing reg in insn 152
changing reg in insn 137
changing reg in insn 130
changing reg in insn 118
changing reg in insn 107
changing reg in insn 94
changing reg in insn 88
changing reg in insn 63
changing reg in insn 42
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 50
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 60
changing reg in insn 62
changing reg in insn 71
changing reg in insn 75
changing reg in insn 72
changing reg in insn 76
changing reg in insn 91
changing reg in insn 93
changing reg in insn 102
changing reg in insn 103
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 106
changing reg in insn 115
changing reg in insn 117
changing reg in insn 131
changing reg in insn 135
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 142
changing reg in insn 144
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 151
changing reg in insn 155
changing reg in insn 156
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 166
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 174
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 194
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 195
changing reg in insn 204
changing reg in insn 206
changing reg in insn 211
changing reg in insn 212
changing reg in insn 212
changing reg in insn 217
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 218
changing reg in insn 223
changing reg in insn 224
changing reg in insn 224
changing reg in insn 226
changing reg in insn 238
changing reg in insn 239
changing reg in insn 240
changing reg in insn 243
changing reg in insn 242
changing reg in insn 243
changing reg in insn 244
changing reg in insn 245
changing reg in insn 245
changing reg in insn 249
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 255
changing reg in insn 256
changing reg in insn 258
changing reg in insn 257
changing reg in insn 259
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 261
changing reg in insn 261
changing reg in insn 265
changing reg in insn 279
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 284
changing reg in insn 284
changing reg in insn 285
changing reg in insn 285
changing reg in insn 286
changing reg in insn 287
changing reg in insn 287
changing reg in insn 288
changing reg in insn 288
changing reg in insn 290
changing reg in insn 293
changing reg in insn 298
changing reg in insn 294
changing reg in insn 299
changing reg in insn 295
changing reg in insn 300
changing reg in insn 308
changing reg in insn 310
changing reg in insn 315
changing reg in insn 316
changing reg in insn 316
changing reg in insn 321
changing reg in insn 318
changing reg in insn 319
changing reg in insn 319
changing reg in insn 322
changing reg in insn 338
changing reg in insn 341
changing reg in insn 340
changing reg in insn 341
changing reg in insn 344
changing reg in insn 347
changing reg in insn 345
changing reg in insn 345
changing reg in insn 346
changing reg in insn 346
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 350
changing reg in insn 352
changing reg in insn 366
changing reg in insn 333
changing reg in insn 232
changing reg in insn 180
changing reg in insn 121
changing reg in insn 97
changing reg in insn 66
changing reg in insn 45
changing reg in insn 30
changing reg in insn 11
changing reg in insn 371
changing reg in insn 371
changing reg in insn 375
changing reg in insn 5
changing reg in insn 6
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 73
changing reg in insn 74
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 82
changing reg in insn 110
changing reg in insn 111
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 133
changing reg in insn 132
changing reg in insn 133
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 141
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 170
changing reg in insn 171
changing reg in insn 173
changing reg in insn 174
changing reg in insn 185
changing reg in insn 186
changing reg in insn 187
changing reg in insn 188
changing reg in insn 190
changing reg in insn 191
changing reg in insn 199
changing reg in insn 200
changing reg in insn 210
changing reg in insn 211
changing reg in insn 213
changing reg in insn 214
changing reg in insn 222
changing reg in insn 223
changing reg in insn 225
changing reg in insn 226
changing reg in insn 237
changing reg in insn 238
changing reg in insn 241
changing reg in insn 242
changing reg in insn 247
changing reg in insn 248
changing reg in insn 263
changing reg in insn 264
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 272
changing reg in insn 278
changing reg in insn 281
changing reg in insn 282
changing reg in insn 289
changing reg in insn 290
changing reg in insn 291
changing reg in insn 292
changing reg in insn 296
changing reg in insn 297
changing reg in insn 303
changing reg in insn 304
changing reg in insn 314
changing reg in insn 315
changing reg in insn 317
changing reg in insn 318
changing reg in insn 326
changing reg in insn 327
changing reg in insn 339
changing reg in insn 340
changing reg in insn 342
changing reg in insn 343
deleting insn with uid = 24.
deleting insn with uid = 42.
deleting insn with uid = 56.
deleting insn with uid = 63.
deleting insn with uid = 81.
deleting insn with uid = 88.
deleting insn with uid = 94.
deleting insn with uid = 107.
deleting insn with uid = 110.
deleting insn with uid = 118.
deleting insn with uid = 400.
deleting insn with uid = 401.
deleting insn with uid = 152.
deleting insn with uid = 155.
deleting insn with uid = 167.
deleting insn with uid = 177.
deleting insn with uid = 196.
deleting insn with uid = 199.
deleting insn with uid = 207.
deleting insn with uid = 219.
deleting insn with uid = 229.
deleting insn with uid = 250.
deleting insn with uid = 266.
deleting insn with uid = 275.
deleting insn with uid = 279.
deleting insn with uid = 403.
deleting insn with uid = 284.
deleting insn with uid = 303.
deleting insn with uid = 311.
deleting insn with uid = 323.
deleting insn with uid = 330.
deleting insn with uid = 353.
deleting insn with uid = 358.
deleting insn with uid = 363.
deleting insn with uid = 371.
deleting insn with uid = 375.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 230.
verify found no changes in insn with uid = 251.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 276.
verify found no changes in insn with uid = 301.
verify found no changes in insn with uid = 312.
verify found no changes in insn with uid = 324.
verify found no changes in insn with uid = 331.
verify found no changes in insn with uid = 354.
verify found no changes in insn with uid = 359.
verify found no changes in insn with uid = 364.


sys_mkdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={128d,100u} r1={52d,25u} r2={31d,5u} r3={1d,28u} r4={1d,1u} r7={91d,266u} r8={26d} r9={26d} r10={26d} r11={26d} r12={26d} r13={26d} r14={26d} r15={26d} r17={105d,9u} r18={26d} r20={26d} r21={26d} r22={26d} r23={26d} r24={26d} r25={26d} r26={26d} r27={26d} r28={26d} r29={26d} r30={26d} r31={26d} r32={26d} r33={26d} r34={26d} r35={26d} r36={26d} r37={26d} r38={26d} r39={26d} r40={26d} r41={26d} r42={26d} r43={26d} r44={26d} r45={26d} r46={26d} r47={26d} r48={26d} r49={26d} r50={26d} r51={26d} r52={26d} r53={26d} r54={26d} r55={26d} r56={26d} r57={26d} r58={26d} r59={26d} r60={26d} r61={26d} r62={26d} r63={26d} r64={26d} r65={26d} r66={26d} r67={26d} r68={26d} r69={26d} r70={26d} r71={26d} r72={26d} r73={26d} r74={26d} r75={26d} 
;;    total ref usage 2533{2099d,434u,0e} in 301{275 regular + 26 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 396 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 396 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 396 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [162])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":581:10 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 current.129_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [162]) [6 current+0 S4 A32])) "fs/namei.c":581:10 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:83 current.129_1 ] [83])
                (const_int 578 [0x242])) [4 current.129_1->euid+0 S2 A16])) "fs/namei.c":581:10 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":581:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "fs/namei.c":581:8 806 {*jcc}
     (nil)
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 378 3 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":582:16 75 {*movsi_internal}
     (nil))
(jump_insn 378 11 379 3 (set (pc)
        (label_ref 369)) "fs/namei.c":582:16 807 {jump}
     (nil)
 -> 369)
(barrier 379 378 14)
(code_label 14 379 15 4 130 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":583:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 0 ax [163])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":583:17 209 {*addsi_1}
     (nil))
(insn 18 17 19 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [26  S4 A32])
        (reg:SI 0 ax [163])) "fs/namei.c":583:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:SI 0 ax [164])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":583:17 209 {*addsi_1}
     (nil))
(insn 20 19 21 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg:SI 0 ax [164])) "fs/namei.c":583:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 pathname+0 S4 A32])) "fs/namei.c":583:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("dir_namei") [flags 0x3]  <function_decl 0x7f2fcf349b00 dir_namei>) [0 dir_namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":583:17 823 {*call_value}
     (nil)
    (nil))
(insn 23 22 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":583:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 25 23 26 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/namei.c":583:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 0 ax [orig:86 dir.130_4 ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":583:15 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:86 dir.130_4 ] [86])
            (const_int 0 [0]))) "fs/namei.c":583:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/namei.c":583:8 806 {*jcc}
     (nil)
 -> 33)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 380 5 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":584:16 75 {*movsi_internal}
     (nil))
(jump_insn 380 30 381 5 (set (pc)
        (label_ref 369)) "fs/namei.c":584:16 807 {jump}
     (nil)
 -> 369)
(barrier 381 380 33)
(code_label 33 381 34 6 132 (nil) [1 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 0 ax [orig:87 namelen.131_5 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 namelen+0 S4 A32])) "fs/namei.c":585:9 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 namelen.131_5 ] [87])
            (const_int 0 [0]))) "fs/namei.c":585:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "fs/namei.c":585:8 806 {*jcc}
     (nil)
 -> 48)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 0 ax [orig:88 dir.132_6 ] [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":586:9 75 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":586:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 41 40 43 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:88 dir.132_6 ] [88])) "fs/namei.c":586:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 43 41 44 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":586:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":586:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 44 382 7 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":587:16 75 {*movsi_internal}
     (nil))
(jump_insn 382 45 383 7 (set (pc)
        (label_ref 369)) "fs/namei.c":587:16 807 {jump}
     (nil)
 -> 369)
(barrier 383 382 48)
(code_label 48 383 49 8 133 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:SI 0 ax [orig:89 dir.133_7 ] [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":589:10 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":589:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 52 51 53 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (const_int 2 [0x2])) "fs/namei.c":589:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 53 52 54 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:89 dir.133_7 ] [89])) "fs/namei.c":589:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":589:10 823 {*call_value}
     (nil)
    (nil))
(insn 55 54 57 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":589:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 57 55 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "fs/namei.c":589:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/namei.c":589:8 806 {*jcc}
     (nil)
 -> 69)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:SI 0 ax [orig:91 dir.134_9 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":590:9 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":590:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 64 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:91 dir.134_9 ] [91])) "fs/namei.c":590:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 64 62 65 9 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":590:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 65 64 66 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":590:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 66 65 384 9 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":591:16 75 {*movsi_internal}
     (nil))
(jump_insn 384 66 385 9 (set (pc)
        (label_ref 369)) "fs/namei.c":591:16 807 {jump}
     (nil)
 -> 369)
(barrier 385 384 69)
(code_label 69 385 70 10 134 (nil) [1 uses])
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (set (reg:SI 1 dx [orig:92 namelen.135_10 ] [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 namelen+0 S4 A32])) "fs/namei.c":593:10 75 {*movsi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:SI 0 ax [orig:93 basename.136_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [8 basename+0 S4 A32])) "fs/namei.c":593:10 75 {*movsi_internal}
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:SI 2 cx [165])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":593:10 209 {*addsi_1}
     (nil))
(insn 74 73 75 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 2 cx [165])) "fs/namei.c":593:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 75 74 76 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:92 namelen.135_10 ] [92])) "fs/namei.c":593:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 76 75 77 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:93 basename.136_11 ] [93])) "fs/namei.c":593:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 77 76 78 10 (parallel [
            (set (reg:SI 0 ax [166])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":593:10 209 {*addsi_1}
     (nil))
(insn 78 77 79 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [166])) "fs/namei.c":593:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 79 78 80 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":593:10 823 {*call_value}
     (nil)
    (nil))
(insn 80 79 82 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":593:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 82 80 83 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [167])) "fs/namei.c":593:10 75 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":594:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 84 83 85 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "fs/namei.c":594:8 806 {*jcc}
     (nil)
 -> 100)
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":595:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 87 86 89 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":595:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 89 87 90 11 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":595:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 90 89 91 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":595:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 91 90 92 11 (set (reg/f:SI 0 ax [orig:94 dir.137_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":596:9 75 {*movsi_internal}
     (nil))
(insn 92 91 93 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":596:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 93 92 95 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:94 dir.137_12 ] [94])) "fs/namei.c":596:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 95 93 96 11 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":596:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 96 95 97 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":596:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 97 96 386 11 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -17 [0xffffffffffffffef])) "fs/namei.c":597:16 75 {*movsi_internal}
     (nil))
(jump_insn 386 97 387 11 (set (pc)
        (label_ref 369)) "fs/namei.c":597:16 807 {jump}
     (nil)
 -> 369)
(barrier 387 386 100)
(code_label 100 387 101 12 135 (nil) [1 uses])
(note 101 100 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 12 (set (reg/f:SI 0 ax [orig:95 dir.138_13 ] [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":599:26 75 {*movsi_internal}
     (nil))
(insn 103 102 104 12 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:95 dir.138_13 ] [95])
                (const_int 44 [0x2c])) [4 dir.138_13->i_dev+0 S2 A32])) "fs/namei.c":599:26 76 {*movhi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _14 ] [96]))) "fs/namei.c":599:13 144 {*zero_extendhisi2}
     (nil))
(insn 105 104 106 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":599:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 106 105 108 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:97 _15 ] [97])) "fs/namei.c":599:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 108 106 109 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_inode") [flags 0x41]  <function_decl 0x7f2fcf310200 new_inode>) [0 new_inode S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":599:13 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 109 108 111 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":599:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 111 109 112 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])
        (reg:SI 0 ax [168])) "fs/namei.c":599:13 75 {*movsi_internal}
     (nil))
(insn 112 111 113 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [2 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":600:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 114 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "fs/namei.c":600:8 806 {*jcc}
     (nil)
 -> 124)
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 13 (set (reg/f:SI 0 ax [orig:98 dir.139_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":601:9 75 {*movsi_internal}
     (nil))
(insn 116 115 117 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":601:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 117 116 119 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:98 dir.139_16 ] [98])) "fs/namei.c":601:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 119 117 120 13 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":601:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 120 119 121 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":601:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 121 120 388 13 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":602:16 75 {*movsi_internal}
     (nil))
(jump_insn 388 121 389 13 (set (pc)
        (label_ref 369)) "fs/namei.c":602:16 807 {jump}
     (nil)
 -> 369)
(barrier 389 388 124)
(code_label 124 389 125 14 136 (nil) [1 uses])
(note 125 124 126 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 14 (set (reg/f:SI 0 ax [169])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":604:19 75 {*movsi_internal}
     (nil))
(insn 127 126 128 14 (set (mem:SI (plus:SI (reg/f:SI 0 ax [169])
                (const_int 4 [0x4])) [5 inode_91->i_size+0 S4 A32])
        (const_int 32 [0x20])) "fs/namei.c":604:19 75 {*movsi_internal}
     (nil))
(insn 128 127 129 14 (set (reg/f:SI 0 ax [170])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":605:19 75 {*movsi_internal}
     (nil))
(insn 129 128 130 14 (set (mem:QI (plus:SI (reg/f:SI 0 ax [170])
                (const_int 51 [0x33])) [0 inode_91->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":605:19 77 {*movqi_internal}
     (nil))
(insn 130 129 131 14 (set (reg/f:SI 0 ax [171])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 131 130 132 14 (set (reg:SI 2 cx [orig:99 jiffies.140_17 ] [99])
        (mem/v/c:SI (reg/f:SI 0 ax [171]) [5 jiffies+0 S4 A32])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 132 131 398 14 (set (reg:SI 1 dx [173])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 398 132 133 14 (set (reg:SI 0 ax [211])
        (reg:SI 2 cx [orig:99 jiffies.140_17 ] [99])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 133 398 399 14 (parallel [
            (set (reg:SI 1 dx [172])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [211]))
                            (sign_extend:DI (reg:SI 1 dx [173])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [211]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":606:39 435 {*smulsi3_highpart_1}
     (nil))
(insn 399 133 134 14 (set (reg:SI 0 ax [172])
        (reg:SI 1 dx [172])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 134 399 135 14 (parallel [
            (set (reg:SI 0 ax [172])
                (ashiftrt:SI (reg:SI 0 ax [172])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":606:39 702 {*ashrsi3_1}
     (nil))
(insn 135 134 136 14 (parallel [
            (set (reg:SI 2 cx [175])
                (ashiftrt:SI (reg:SI 2 cx [orig:99 jiffies.140_17 ] [99])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":606:39 694 {ashrsi3_cvt}
     (nil))
(insn 136 135 402 14 (parallel [
            (set (reg:SI 0 ax [174])
                (minus:SI (reg:SI 0 ax [174])
                    (reg:SI 2 cx [175])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":606:39 282 {*subsi_1}
     (nil))
(insn 402 136 137 14 (set (reg:SI 1 dx [orig:100 _18 ] [100])
        (reg:SI 0 ax [174])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 137 402 138 14 (set (reg/f:SI 0 ax [176])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 138 137 139 14 (set (reg:SI 0 ax [orig:101 startup_time.141_19 ] [101])
        (mem/c:SI (reg/f:SI 0 ax [176]) [5 startup_time+0 S4 A32])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 139 138 140 14 (parallel [
            (set (reg:SI 0 ax [orig:102 _20 ] [102])
                (plus:SI (reg:SI 0 ax [orig:101 startup_time.141_19 ] [101])
                    (reg:SI 1 dx [orig:100 _18 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":606:39 209 {*addsi_1}
     (nil))
(insn 140 139 141 14 (set (reg:SI 1 dx [orig:103 _21 ] [103])
        (reg:SI 0 ax [orig:102 _20 ] [102])) "fs/namei.c":606:39 75 {*movsi_internal}
     (nil))
(insn 141 140 142 14 (set (reg/f:SI 0 ax [177])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":606:37 75 {*movsi_internal}
     (nil))
(insn 142 141 143 14 (set (mem:SI (plus:SI (reg/f:SI 0 ax [177])
                (const_int 36 [0x24])) [5 inode_91->i_atime+0 S4 A32])
        (reg:SI 1 dx [orig:103 _21 ] [103])) "fs/namei.c":606:37 75 {*movsi_internal}
     (nil))
(insn 143 142 144 14 (set (reg/f:SI 0 ax [178])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":606:27 75 {*movsi_internal}
     (nil))
(insn 144 143 145 14 (set (reg:SI 1 dx [orig:104 _22 ] [104])
        (mem:SI (plus:SI (reg/f:SI 0 ax [178])
                (const_int 36 [0x24])) [5 inode_91->i_atime+0 S4 A32])) "fs/namei.c":606:27 75 {*movsi_internal}
     (nil))
(insn 145 144 146 14 (set (reg/f:SI 0 ax [179])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":606:20 75 {*movsi_internal}
     (nil))
(insn 146 145 147 14 (set (mem:SI (plus:SI (reg/f:SI 0 ax [179])
                (const_int 8 [0x8])) [5 inode_91->i_mtime+0 S4 A32])
        (reg:SI 1 dx [orig:104 _22 ] [104])) "fs/namei.c":606:20 75 {*movsi_internal}
     (nil))
(insn 147 146 148 14 (set (reg/f:SI 0 ax [180])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":607:45 75 {*movsi_internal}
     (nil))
(insn 148 147 149 14 (set (reg:HI 0 ax [orig:105 _23 ] [105])
        (mem:HI (plus:SI (reg/f:SI 0 ax [180])
                (const_int 44 [0x2c])) [4 inode_91->i_dev+0 S2 A32])) "fs/namei.c":607:45 76 {*movhi_internal}
     (nil))
(insn 149 148 150 14 (set (reg:SI 0 ax [orig:106 _24 ] [106])
        (zero_extend:SI (reg:HI 0 ax [orig:105 _23 ] [105]))) "fs/namei.c":607:30 144 {*zero_extendhisi2}
     (nil))
(insn 150 149 151 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":607:30 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 151 150 153 14 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:106 _24 ] [106])) "fs/namei.c":607:30 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 153 151 154 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("new_block") [flags 0x41]  <function_decl 0x7f2fcf30ec00 new_block>) [0 new_block S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":607:30 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 154 153 156 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":607:30 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 156 154 157 14 (set (reg:HI 1 dx [orig:108 _26 ] [108])
        (reg:HI 0 ax [orig:107 _25 ] [107])) "fs/namei.c":607:28 76 {*movhi_internal}
     (nil))
(insn 157 156 158 14 (set (reg/f:SI 0 ax [181])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":607:28 75 {*movsi_internal}
     (nil))
(insn 158 157 159 14 (set (mem:HI (plus:SI (reg/f:SI 0 ax [181])
                (const_int 14 [0xe])) [4 inode_91->i_zone[0]+0 S2 A16])
        (reg:HI 1 dx [orig:108 _26 ] [108])) "fs/namei.c":607:28 76 {*movhi_internal}
     (nil))
(insn 159 158 160 14 (set (reg/f:SI 0 ax [182])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":607:24 75 {*movsi_internal}
     (nil))
(insn 160 159 161 14 (set (reg:HI 0 ax [orig:109 _27 ] [109])
        (mem:HI (plus:SI (reg/f:SI 0 ax [182])
                (const_int 14 [0xe])) [4 inode_91->i_zone[0]+0 S2 A16])) "fs/namei.c":607:24 76 {*movhi_internal}
     (nil))
(insn 161 160 162 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:109 _27 ] [109])
            (const_int 0 [0]))) "fs/namei.c":607:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 162 161 163 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "fs/namei.c":607:8 806 {*jcc}
     (nil)
 -> 183)
(note 163 162 164 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 15 (set (reg/f:SI 0 ax [orig:110 dir.142_28 ] [110])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":608:9 75 {*movsi_internal}
     (nil))
(insn 165 164 166 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":608:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 166 165 168 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:110 dir.142_28 ] [110])) "fs/namei.c":608:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 168 166 169 15 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":608:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 169 168 170 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":608:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 170 169 171 15 (set (reg/f:SI 0 ax [183])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":609:14 75 {*movsi_internal}
     (nil))
(insn 171 170 172 15 (set (reg:QI 0 ax [orig:111 _29 ] [111])
        (mem:QI (plus:SI (reg/f:SI 0 ax [183])
                (const_int 13 [0xd])) [0 inode_91->i_nlinks+0 S1 A8])) "fs/namei.c":609:14 77 {*movqi_internal}
     (nil))
(insn 172 171 173 15 (parallel [
            (set (reg:QI 1 dx [orig:112 _31 ] [112])
                (plus:QI (reg:QI 0 ax [orig:111 _29 ] [111])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":609:24 213 {*addqi_1}
     (nil))
(insn 173 172 174 15 (set (reg/f:SI 0 ax [184])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":609:24 75 {*movsi_internal}
     (nil))
(insn 174 173 175 15 (set (mem:QI (plus:SI (reg/f:SI 0 ax [184])
                (const_int 13 [0xd])) [0 inode_91->i_nlinks+0 S1 A8])
        (reg:QI 1 dx [orig:112 _31 ] [112])) "fs/namei.c":609:24 77 {*movqi_internal}
     (nil))
(insn 175 174 176 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":610:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 176 175 178 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":610:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 178 176 179 15 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":610:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 179 178 180 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":610:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 180 179 390 15 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":611:16 75 {*movsi_internal}
     (nil))
(jump_insn 390 180 391 15 (set (pc)
        (label_ref 369)) "fs/namei.c":611:16 807 {jump}
     (nil)
 -> 369)
(barrier 391 390 183)
(code_label 183 391 184 16 137 (nil) [1 uses])
(note 184 183 185 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 16 (set (reg/f:SI 0 ax [185])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":613:19 75 {*movsi_internal}
     (nil))
(insn 186 185 187 16 (set (mem:QI (plus:SI (reg/f:SI 0 ax [185])
                (const_int 51 [0x33])) [0 inode_91->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":613:19 77 {*movqi_internal}
     (nil))
(insn 187 186 188 16 (set (reg/f:SI 0 ax [186])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":614:56 75 {*movsi_internal}
     (nil))
(insn 188 187 189 16 (set (reg:HI 0 ax [orig:113 _32 ] [113])
        (mem:HI (plus:SI (reg/f:SI 0 ax [186])
                (const_int 14 [0xe])) [4 inode_91->i_zone[0]+0 S2 A16])) "fs/namei.c":614:56 76 {*movhi_internal}
     (nil))
(insn 189 188 190 16 (set (reg:SI 1 dx [orig:114 _33 ] [114])
        (zero_extend:SI (reg:HI 0 ax [orig:113 _32 ] [113]))) "fs/namei.c":614:23 144 {*zero_extendhisi2}
     (nil))
(insn 190 189 191 16 (set (reg/f:SI 0 ax [187])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":614:34 75 {*movsi_internal}
     (nil))
(insn 191 190 192 16 (set (reg:HI 0 ax [orig:115 _34 ] [115])
        (mem:HI (plus:SI (reg/f:SI 0 ax [187])
                (const_int 44 [0x2c])) [4 inode_91->i_dev+0 S2 A32])) "fs/namei.c":614:34 76 {*movhi_internal}
     (nil))
(insn 192 191 193 16 (set (reg:SI 0 ax [orig:116 _35 ] [116])
        (zero_extend:SI (reg:HI 0 ax [orig:115 _34 ] [115]))) "fs/namei.c":614:23 144 {*zero_extendhisi2}
     (nil))
(insn 193 192 194 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":614:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 194 193 195 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:114 _33 ] [114])) "fs/namei.c":614:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 195 194 197 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:116 _35 ] [116])) "fs/namei.c":614:23 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 197 195 198 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7f2fcf30e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":614:23 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 198 197 200 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":614:23 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 200 198 201 16 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 dir_block+0 S4 A32])
        (reg:SI 0 ax [188])) "fs/namei.c":614:23 75 {*movsi_internal}
     (nil))
(insn 201 200 202 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [9 dir_block+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":614:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 202 201 203 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) "fs/namei.c":614:8 806 {*jcc}
     (nil)
 -> 235)
(note 203 202 204 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 17 (set (reg/f:SI 0 ax [orig:117 dir.143_36 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":615:9 75 {*movsi_internal}
     (nil))
(insn 205 204 206 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":615:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 206 205 208 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:117 dir.143_36 ] [117])) "fs/namei.c":615:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 208 206 209 17 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":615:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 209 208 210 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":615:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 210 209 211 17 (set (reg/f:SI 0 ax [189])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":616:47 75 {*movsi_internal}
     (nil))
(insn 211 210 212 17 (set (reg:HI 0 ax [orig:118 _37 ] [118])
        (mem:HI (plus:SI (reg/f:SI 0 ax [189])
                (const_int 14 [0xe])) [4 inode_91->i_zone[0]+0 S2 A16])) "fs/namei.c":616:47 76 {*movhi_internal}
     (nil))
(insn 212 211 213 17 (set (reg:SI 1 dx [orig:119 _38 ] [119])
        (zero_extend:SI (reg:HI 0 ax [orig:118 _37 ] [118]))) "fs/namei.c":616:9 144 {*zero_extendhisi2}
     (nil))
(insn 213 212 214 17 (set (reg/f:SI 0 ax [190])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":616:25 75 {*movsi_internal}
     (nil))
(insn 214 213 215 17 (set (reg:HI 0 ax [orig:120 _39 ] [120])
        (mem:HI (plus:SI (reg/f:SI 0 ax [190])
                (const_int 44 [0x2c])) [4 inode_91->i_dev+0 S2 A32])) "fs/namei.c":616:25 76 {*movhi_internal}
     (nil))
(insn 215 214 216 17 (set (reg:SI 0 ax [orig:121 _40 ] [121])
        (zero_extend:SI (reg:HI 0 ax [orig:120 _39 ] [120]))) "fs/namei.c":616:9 144 {*zero_extendhisi2}
     (nil))
(insn 216 215 217 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":616:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 217 216 218 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:119 _38 ] [119])) "fs/namei.c":616:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 218 217 220 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:121 _40 ] [121])) "fs/namei.c":616:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 220 218 221 17 (call (mem:QI (symbol_ref:SI ("free_block") [flags 0x41]  <function_decl 0x7f2fcf30e300 free_block>) [0 free_block S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":616:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 221 220 222 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":616:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 222 221 223 17 (set (reg/f:SI 0 ax [191])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":617:14 75 {*movsi_internal}
     (nil))
(insn 223 222 224 17 (set (reg:QI 0 ax [orig:122 _41 ] [122])
        (mem:QI (plus:SI (reg/f:SI 0 ax [191])
                (const_int 13 [0xd])) [0 inode_91->i_nlinks+0 S1 A8])) "fs/namei.c":617:14 77 {*movqi_internal}
     (nil))
(insn 224 223 225 17 (parallel [
            (set (reg:QI 1 dx [orig:123 _43 ] [123])
                (plus:QI (reg:QI 0 ax [orig:122 _41 ] [122])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":617:24 213 {*addqi_1}
     (nil))
(insn 225 224 226 17 (set (reg/f:SI 0 ax [192])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":617:24 75 {*movsi_internal}
     (nil))
(insn 226 225 227 17 (set (mem:QI (plus:SI (reg/f:SI 0 ax [192])
                (const_int 13 [0xd])) [0 inode_91->i_nlinks+0 S1 A8])
        (reg:QI 1 dx [orig:123 _43 ] [123])) "fs/namei.c":617:24 77 {*movqi_internal}
     (nil))
(insn 227 226 228 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":618:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 228 227 230 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":618:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 230 228 231 17 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":618:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 231 230 232 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":618:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 232 231 392 17 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -99 [0xffffffffffffff9d])) "fs/namei.c":619:16 75 {*movsi_internal}
     (nil))
(jump_insn 392 232 393 17 (set (pc)
        (label_ref 369)) "fs/namei.c":619:16 807 {jump}
     (nil)
 -> 369)
(barrier 393 392 235)
(code_label 235 393 236 18 138 (nil) [1 uses])
(note 236 235 237 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 18 (set (reg/f:SI 0 ax [193])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 dir_block+0 S4 A32])) "fs/namei.c":621:39 75 {*movsi_internal}
     (nil))
(insn 238 237 239 18 (set (reg/f:SI 0 ax [orig:124 _44 ] [124])
        (mem/f:SI (reg/f:SI 0 ax [193]) [8 dir_block_100->b_data+0 S4 A32])) "fs/namei.c":621:39 75 {*movsi_internal}
     (nil))
(insn 239 238 240 18 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [orig:124 _44 ] [124])) "fs/namei.c":621:8 75 {*movsi_internal}
     (nil))
(insn 240 239 241 18 (set (reg/f:SI 0 ax [orig:125 de.144_45 ] [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":622:7 75 {*movsi_internal}
     (nil))
(insn 241 240 242 18 (set (reg/f:SI 1 dx [194])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":622:22 75 {*movsi_internal}
     (nil))
(insn 242 241 243 18 (set (reg:HI 1 dx [orig:126 _46 ] [126])
        (mem:HI (plus:SI (reg/f:SI 1 dx [194])
                (const_int 46 [0x2e])) [4 inode_91->i_num+0 S2 A16])) "fs/namei.c":622:22 76 {*movhi_internal}
     (nil))
(insn 243 242 244 18 (set (mem:HI (reg/f:SI 0 ax [orig:125 de.144_45 ] [125]) [4 de.144_45->inode+0 S2 A16])
        (reg:HI 1 dx [orig:126 _46 ] [126])) "fs/namei.c":622:15 76 {*movhi_internal}
     (nil))
(insn 244 243 245 18 (set (reg/f:SI 0 ax [orig:127 de.145_47 ] [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":623:14 75 {*movsi_internal}
     (nil))
(insn 245 244 246 18 (parallel [
            (set (reg/f:SI 1 dx [orig:128 _48 ] [128])
                (plus:SI (reg/f:SI 0 ax [orig:127 de.145_47 ] [127])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":623:14 209 {*addsi_1}
     (nil))
(insn 246 245 247 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":623:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 247 246 248 18 (set (reg/f:SI 0 ax [195])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f2fcf01a870 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":623:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f2fcf01a870 *.LC4>)
        (nil)))
(insn 248 247 249 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [195])) "fs/namei.c":623:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 249 248 251 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 1 dx [orig:128 _48 ] [128])) "fs/namei.c":623:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 251 249 252 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x7f2fcf33a900 strcpy>) [0 strcpy S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":623:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 252 251 253 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":623:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 253 252 254 18 (set (reg/f:SI 0 ax [orig:129 de.146_49 ] [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":624:7 75 {*movsi_internal}
     (nil))
(insn 254 253 255 18 (parallel [
            (set (reg/f:SI 0 ax [orig:130 _50 ] [130])
                (plus:SI (reg/f:SI 0 ax [orig:129 de.146_49 ] [129])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":624:7 209 {*addsi_1}
     (nil))
(insn 255 254 256 18 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [orig:130 _50 ] [130])) "fs/namei.c":624:7 75 {*movsi_internal}
     (nil))
(insn 256 255 257 18 (set (reg/f:SI 1 dx [orig:131 dir.147_51 ] [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":625:20 75 {*movsi_internal}
     (nil))
(insn 257 256 258 18 (set (reg/f:SI 0 ax [orig:132 de.148_52 ] [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":625:7 75 {*movsi_internal}
     (nil))
(insn 258 257 259 18 (set (reg:HI 1 dx [orig:133 _53 ] [133])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:131 dir.147_51 ] [131])
                (const_int 46 [0x2e])) [4 dir.147_51->i_num+0 S2 A16])) "fs/namei.c":625:20 76 {*movhi_internal}
     (nil))
(insn 259 258 260 18 (set (mem:HI (reg/f:SI 0 ax [orig:132 de.148_52 ] [132]) [4 de.148_52->inode+0 S2 A16])
        (reg:HI 1 dx [orig:133 _53 ] [133])) "fs/namei.c":625:15 76 {*movhi_internal}
     (nil))
(insn 260 259 261 18 (set (reg/f:SI 0 ax [orig:134 de.149_54 ] [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":626:14 75 {*movsi_internal}
     (nil))
(insn 261 260 262 18 (parallel [
            (set (reg/f:SI 1 dx [orig:135 _55 ] [135])
                (plus:SI (reg/f:SI 0 ax [orig:134 de.149_54 ] [134])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":626:14 209 {*addsi_1}
     (nil))
(insn 262 261 263 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":626:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 263 262 264 18 (set (reg/f:SI 0 ax [196])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f2fcf01a900 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":626:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f2fcf01a900 *.LC5>)
        (nil)))
(insn 264 263 265 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [196])) "fs/namei.c":626:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 265 264 267 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 1 dx [orig:135 _55 ] [135])) "fs/namei.c":626:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 267 265 268 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcpy") [flags 0x41]  <function_decl 0x7f2fcf33a900 strcpy>) [0 strcpy S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":626:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 268 267 269 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":626:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 269 268 270 18 (set (reg/f:SI 0 ax [197])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":627:21 75 {*movsi_internal}
     (nil))
(insn 270 269 271 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [197])
                (const_int 13 [0xd])) [0 inode_91->i_nlinks+0 S1 A8])
        (const_int 2 [0x2])) "fs/namei.c":627:21 77 {*movqi_internal}
     (nil))
(insn 271 270 272 18 (set (reg/f:SI 0 ax [198])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [9 dir_block+0 S4 A32])) "fs/namei.c":628:23 75 {*movsi_internal}
     (nil))
(insn 272 271 273 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [198])
                (const_int 11 [0xb])) [0 dir_block_100->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":628:23 77 {*movqi_internal}
     (nil))
(insn 273 272 274 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":629:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 274 273 276 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [9 dir_block+0 S4 A32])) "fs/namei.c":629:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 276 274 277 18 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":629:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 277 276 278 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":629:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 278 277 280 18 (set (reg:SI 0 ax [199])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [11 mode+0 S4 A32])) "fs/namei.c":630:41 75 {*movsi_internal}
     (nil))
(insn 280 278 404 18 (parallel [
            (set (reg:HI 0 ax [orig:136 _56 ] [136])
                (and:HI (reg:HI 0 ax [orig:136 _56 ] [136])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":630:41 489 {*andhi_1}
     (nil))
(insn 404 280 281 18 (set (reg:HI 1 dx [orig:137 _57 ] [137])
        (reg:HI 0 ax [orig:136 _56 ] [136])) "fs/namei.c":630:41 76 {*movhi_internal}
     (nil))
(insn 281 404 282 18 (set (reg/f:SI 0 ax [200])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":630:58 75 {*movsi_internal}
     (nil))
(insn 282 281 283 18 (set (reg/f:SI 0 ax [orig:138 current.150_58 ] [138])
        (mem/f/c:SI (reg/f:SI 0 ax [200]) [6 current+0 S4 A32])) "fs/namei.c":630:58 75 {*movsi_internal}
     (nil))
(insn 283 282 285 18 (set (reg:HI 0 ax [orig:139 _59 ] [139])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:138 current.150_58 ] [138])
                (const_int 620 [0x26c])) [4 current.150_58->umask+0 S2 A32])) "fs/namei.c":630:58 76 {*movhi_internal}
     (nil))
(insn 285 283 286 18 (set (reg:HI 0 ax [orig:141 _61 ] [141])
        (not:HI (reg:HI 0 ax [orig:140 _60 ] [140]))) "fs/namei.c":630:48 631 {*one_cmplhi2_1}
     (nil))
(insn 286 285 287 18 (parallel [
            (set (reg:HI 0 ax [orig:142 _62 ] [142])
                (and:HI (reg:HI 0 ax [orig:141 _61 ] [141])
                    (reg:HI 1 dx [orig:137 _57 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":630:48 489 {*andhi_1}
     (nil))
(insn 287 286 288 18 (parallel [
            (set (reg:HI 0 ax [orig:143 _63 ] [143])
                (ior:HI (reg:HI 0 ax [orig:142 _62 ] [142])
                    (const_int 16384 [0x4000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":630:33 518 {*iorhi_1}
     (nil))
(insn 288 287 289 18 (set (reg:HI 1 dx [orig:144 _64 ] [144])
        (reg:HI 0 ax [orig:143 _63 ] [143])) "fs/namei.c":630:33 76 {*movhi_internal}
     (nil))
(insn 289 288 290 18 (set (reg/f:SI 0 ax [201])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":630:19 75 {*movsi_internal}
     (nil))
(insn 290 289 291 18 (set (mem:HI (reg/f:SI 0 ax [201]) [4 inode_91->i_mode+0 S2 A32])
        (reg:HI 1 dx [orig:144 _64 ] [144])) "fs/namei.c":630:19 76 {*movhi_internal}
     (nil))
(insn 291 290 292 18 (set (reg/f:SI 0 ax [202])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":631:19 75 {*movsi_internal}
     (nil))
(insn 292 291 293 18 (set (mem:QI (plus:SI (reg/f:SI 0 ax [202])
                (const_int 51 [0x33])) [0 inode_91->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":631:19 77 {*movqi_internal}
     (nil))
(insn 293 292 294 18 (set (reg:SI 2 cx [orig:145 namelen.151_65 ] [145])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 namelen+0 S4 A32])) "fs/namei.c":632:10 75 {*movsi_internal}
     (nil))
(insn 294 293 295 18 (set (reg/f:SI 1 dx [orig:146 basename.152_66 ] [146])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [8 basename+0 S4 A32])) "fs/namei.c":632:10 75 {*movsi_internal}
     (nil))
(insn 295 294 296 18 (set (reg/f:SI 0 ax [orig:147 dir.153_67 ] [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":632:10 75 {*movsi_internal}
     (nil))
(insn 296 295 297 18 (parallel [
            (set (reg:SI 4 si [203])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":632:10 209 {*addsi_1}
     (nil))
(insn 297 296 298 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 4 si [203])) "fs/namei.c":632:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 298 297 299 18 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 2 cx [orig:145 namelen.151_65 ] [145])) "fs/namei.c":632:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 299 298 300 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 1 dx [orig:146 basename.152_66 ] [146])) "fs/namei.c":632:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 300 299 301 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:147 dir.153_67 ] [147])) "fs/namei.c":632:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 301 300 302 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("add_entry") [flags 0x3]  <function_decl 0x7f2fcf349d00 add_entry>) [0 add_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":632:10 823 {*call_value}
     (nil)
    (nil))
(insn 302 301 304 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":632:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 304 302 305 18 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [204])) "fs/namei.c":632:10 75 {*movsi_internal}
     (nil))
(insn 305 304 306 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":633:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 306 305 307 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) "fs/namei.c":633:8 806 {*jcc}
     (nil)
 -> 336)
(note 307 306 308 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 19 (set (reg/f:SI 0 ax [orig:148 dir.154_68 ] [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":634:9 75 {*movsi_internal}
     (nil))
(insn 309 308 310 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":634:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 310 309 312 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:148 dir.154_68 ] [148])) "fs/namei.c":634:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 312 310 313 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":634:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 313 312 314 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":634:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 314 313 315 19 (set (reg/f:SI 0 ax [205])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":635:47 75 {*movsi_internal}
     (nil))
(insn 315 314 316 19 (set (reg:HI 0 ax [orig:149 _69 ] [149])
        (mem:HI (plus:SI (reg/f:SI 0 ax [205])
                (const_int 14 [0xe])) [4 inode_91->i_zone[0]+0 S2 A16])) "fs/namei.c":635:47 76 {*movhi_internal}
     (nil))
(insn 316 315 317 19 (set (reg:SI 1 dx [orig:150 _70 ] [150])
        (zero_extend:SI (reg:HI 0 ax [orig:149 _69 ] [149]))) "fs/namei.c":635:9 144 {*zero_extendhisi2}
     (nil))
(insn 317 316 318 19 (set (reg/f:SI 0 ax [206])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":635:25 75 {*movsi_internal}
     (nil))
(insn 318 317 319 19 (set (reg:HI 0 ax [orig:151 _71 ] [151])
        (mem:HI (plus:SI (reg/f:SI 0 ax [206])
                (const_int 44 [0x2c])) [4 inode_91->i_dev+0 S2 A32])) "fs/namei.c":635:25 76 {*movhi_internal}
     (nil))
(insn 319 318 320 19 (set (reg:SI 0 ax [orig:152 _72 ] [152])
        (zero_extend:SI (reg:HI 0 ax [orig:151 _71 ] [151]))) "fs/namei.c":635:9 144 {*zero_extendhisi2}
     (nil))
(insn 320 319 321 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":635:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 321 320 322 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:150 _70 ] [150])) "fs/namei.c":635:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 322 321 324 19 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:152 _72 ] [152])) "fs/namei.c":635:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 324 322 325 19 (call (mem:QI (symbol_ref:SI ("free_block") [flags 0x41]  <function_decl 0x7f2fcf30e300 free_block>) [0 free_block S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":635:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 325 324 326 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":635:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 326 325 327 19 (set (reg/f:SI 0 ax [207])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":636:25 75 {*movsi_internal}
     (nil))
(insn 327 326 328 19 (set (mem:QI (plus:SI (reg/f:SI 0 ax [207])
                (const_int 13 [0xd])) [0 inode_91->i_nlinks+0 S1 A8])
        (const_int 0 [0])) "fs/namei.c":636:25 77 {*movqi_internal}
     (nil))
(insn 328 327 329 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":637:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 329 328 331 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":637:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 331 329 332 19 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":637:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 332 331 333 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":637:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 333 332 394 19 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int -28 [0xffffffffffffffe4])) "fs/namei.c":638:16 75 {*movsi_internal}
     (nil))
(jump_insn 394 333 395 19 (set (pc)
        (label_ref 369)) "fs/namei.c":638:16 807 {jump}
     (nil)
 -> 369)
(barrier 395 394 336)
(code_label 336 395 337 20 139 (nil) [1 uses])
(note 337 336 338 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 20 (set (reg/f:SI 0 ax [orig:153 de.155_73 ] [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 de+0 S4 A32])) "fs/namei.c":640:7 75 {*movsi_internal}
     (nil))
(insn 339 338 340 20 (set (reg/f:SI 1 dx [208])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":640:22 75 {*movsi_internal}
     (nil))
(insn 340 339 341 20 (set (reg:HI 1 dx [orig:154 _74 ] [154])
        (mem:HI (plus:SI (reg/f:SI 1 dx [208])
                (const_int 46 [0x2e])) [4 inode_91->i_num+0 S2 A16])) "fs/namei.c":640:22 76 {*movhi_internal}
     (nil))
(insn 341 340 342 20 (set (mem:HI (reg/f:SI 0 ax [orig:153 de.155_73 ] [153]) [4 de.155_73->inode+0 S2 A16])
        (reg:HI 1 dx [orig:154 _74 ] [154])) "fs/namei.c":640:15 76 {*movhi_internal}
     (nil))
(insn 342 341 343 20 (set (reg/f:SI 0 ax [209])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])) "fs/namei.c":641:16 75 {*movsi_internal}
     (nil))
(insn 343 342 344 20 (set (mem:QI (plus:SI (reg/f:SI 0 ax [209])
                (const_int 11 [0xb])) [0 bh_114->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":641:16 77 {*movqi_internal}
     (nil))
(insn 344 343 345 20 (set (reg/f:SI 0 ax [orig:155 dir.156_75 ] [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":642:8 75 {*movsi_internal}
     (nil))
(insn 345 344 346 20 (set (reg:QI 1 dx [orig:156 _76 ] [156])
        (mem:QI (plus:SI (reg/f:SI 0 ax [orig:155 dir.156_75 ] [155])
                (const_int 13 [0xd])) [0 dir.156_75->i_nlinks+0 S1 A8])) "fs/namei.c":642:8 77 {*movqi_internal}
     (nil))
(insn 346 345 347 20 (parallel [
            (set (reg:QI 1 dx [orig:157 _78 ] [157])
                (plus:QI (reg:QI 1 dx [orig:156 _76 ] [156])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":642:18 213 {*addqi_1}
     (nil))
(insn 347 346 348 20 (set (mem:QI (plus:SI (reg/f:SI 0 ax [orig:155 dir.156_75 ] [155])
                (const_int 13 [0xd])) [0 dir.156_75->i_nlinks+0 S1 A8])
        (reg:QI 1 dx [orig:157 _78 ] [157])) "fs/namei.c":642:18 77 {*movqi_internal}
     (nil))
(insn 348 347 349 20 (set (reg/f:SI 0 ax [orig:158 dir.157_79 ] [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":643:8 75 {*movsi_internal}
     (nil))
(insn 349 348 350 20 (set (mem:QI (plus:SI (reg/f:SI 0 ax [orig:158 dir.157_79 ] [158])
                (const_int 51 [0x33])) [0 dir.157_79->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":643:17 77 {*movqi_internal}
     (nil))
(insn 350 349 351 20 (set (reg/f:SI 0 ax [orig:159 dir.158_80 ] [159])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 dir+0 S4 A32])) "fs/namei.c":644:5 75 {*movsi_internal}
     (nil))
(insn 351 350 352 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":644:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 352 351 354 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:159 dir.158_80 ] [159])) "fs/namei.c":644:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 354 352 355 20 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":644:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 355 354 356 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":644:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 356 355 357 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":645:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 357 356 359 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":645:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 359 357 360 20 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":645:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 360 359 361 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":645:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 361 360 362 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":646:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 362 361 364 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":646:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 364 362 365 20 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":646:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 365 364 366 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":646:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 366 365 369 20 (set (reg:SI 0 ax [orig:160 _81 ] [160])
        (const_int 0 [0])) "fs/namei.c":647:12 75 {*movsi_internal}
     (nil))
(code_label 369 366 370 21 140 (nil) [9 uses])
(note 370 369 376 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 376 370 397 21 (use (reg/i:SI 0 ax)) "fs/namei.c":648:1 -1
     (nil))
(note 397 376 0 NOTE_INSN_DELETED)

;; Function empty_dir (empty_dir, funcdef_no=20, decl_uid=1547, cgraph_uid=21, symbol_order=20)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 20:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 38:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 56:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 64:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 76:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 82:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 97:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 99:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 105:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 112:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 118:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 122:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 126:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 130:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 135:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 142:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 149:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 151:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 156:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 173:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 177:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 181:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 193:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 196:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 200:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6 7 8 9
EBB 10
EBB 11
EBB 12 13 14
EBB 15 16
EBB 17
EBB 18 19
EBB 20
EBB 21 22
EBB 23

********** Pseudo live ranges #1: **********

  BB 23
   Insn 209: point = 0, n_alt = -1
   Insn 208: point = 0, n_alt = -2
   Insn 204: point = 1, n_alt = -2
  BB 19
   Insn 221: point = 4, n_alt = -1
   Insn 182: point = 4, n_alt = 0
   Insn 181: point = 5, n_alt = 0
   Insn 180: point = 5, n_alt = 0
   Insn 179: point = 5, n_alt = -2
   Insn 178: point = 6, n_alt = 0
   Insn 177: point = 6, n_alt = 0
  BB 16
   Insn 219: point = 7, n_alt = -1
   Insn 162: point = 7, n_alt = 0
  BB 10
   Insn 213: point = 8, n_alt = -1
   Insn 106: point = 8, n_alt = 0
   Insn 105: point = 9, n_alt = 0
   Insn 104: point = 9, n_alt = 0
   Insn 103: point = 9, n_alt = -2
   Insn 102: point = 10, n_alt = 0
   Insn 101: point = 11, n_alt = 0
   Insn 100: point = 12, n_alt = 0
   Insn 99: point = 13, n_alt = 0
   Insn 98: point = 13, n_alt = 0
   Insn 97: point = 15, n_alt = 2
   Insn 96: point = 17, n_alt = 0
  BB 5
   Insn 211: point = 19, n_alt = -1
   Insn 47: point = 19, n_alt = 0
   Insn 46: point = 20, n_alt = 0
   Insn 45: point = 20, n_alt = 0
   Insn 44: point = 20, n_alt = -2
   Insn 43: point = 21, n_alt = 0
   Insn 42: point = 22, n_alt = 0
   Insn 41: point = 23, n_alt = 0
   Insn 40: point = 24, n_alt = 0
   Insn 39: point = 24, n_alt = 0
   Insn 38: point = 26, n_alt = 2
   Insn 37: point = 28, n_alt = 0
  BB 22
   Insn 201: point = 30, n_alt = 0
   Insn 200: point = 31, n_alt = 0
   Insn 199: point = 31, n_alt = 0
   Insn 198: point = 31, n_alt = -2
   Insn 197: point = 32, n_alt = 0
   Insn 196: point = 32, n_alt = 0
  BB 21
   Insn 194: point = 33, n_alt = -1
   Insn 193: point = 33, n_alt = 1
   Insn 192: point = 34, n_alt = 0
  BB 14
   Insn 217: point = 36, n_alt = -1
   Insn 143: point = 36, n_alt = 1
   Insn 142: point = 37, n_alt = 0
   Insn 141: point = 39, n_alt = 0
  BB 11
   Insn 215: point = 41, n_alt = -1
   Insn 112: point = 41, n_alt = 0
   Insn 111: point = 41, n_alt = 1
  BB 9
   Insn 93: point = 42, n_alt = -1
   Insn 92: point = 42, n_alt = 0
   Insn 91: point = 43, n_alt = -2
   Insn 90: point = 44, n_alt = 0
   Insn 89: point = 44, n_alt = 0
   Insn 88: point = 44, n_alt = -2
   Insn 87: point = 44, n_alt = 0
   Insn 86: point = 45, n_alt = 0
   Insn 85: point = 46, n_alt = 0
   Insn 84: point = 47, n_alt = 0
   Insn 83: point = 47, n_alt = 0
   Insn 82: point = 49, n_alt = 0
   Insn 81: point = 51, n_alt = 0
  BB 8
   Insn 79: point = 53, n_alt = -1
   Insn 78: point = 53, n_alt = 0
   Insn 77: point = 54, n_alt = -2
   Insn 76: point = 55, n_alt = 0
   Insn 75: point = 55, n_alt = 0
   Insn 74: point = 55, n_alt = -2
   Insn 73: point = 55, n_alt = 0
   Insn 72: point = 56, n_alt = 0
   Insn 71: point = 57, n_alt = 0
   Insn 70: point = 58, n_alt = 0
   Insn 69: point = 58, n_alt = 0
   Insn 68: point = 60, n_alt = 0
  BB 7
   Insn 66: point = 62, n_alt = -1
   Insn 65: point = 62, n_alt = 0
   Insn 64: point = 63, n_alt = 2
   Insn 63: point = 65, n_alt = 0
   Insn 62: point = 67, n_alt = 0
  BB 6
   Insn 60: point = 69, n_alt = -1
   Insn 59: point = 69, n_alt = 0
   Insn 58: point = 70, n_alt = 2
   Insn 57: point = 72, n_alt = 0
   Insn 56: point = 73, n_alt = 2
   Insn 55: point = 75, n_alt = 0
   Insn 54: point = 76, n_alt = 1
   Insn 53: point = 77, n_alt = 0
   Insn 52: point = 79, n_alt = 0
  BB 4
   Insn 34: point = 81, n_alt = -1
   Insn 33: point = 81, n_alt = 1
   Insn 32: point = 81, n_alt = 1
   Insn 31: point = 82, n_alt = -2
   Insn 30: point = 83, n_alt = 0
   Insn 29: point = 83, n_alt = 0
   Insn 28: point = 83, n_alt = -2
   Insn 27: point = 83, n_alt = 0
   Insn 26: point = 84, n_alt = 0
   Insn 25: point = 85, n_alt = 0
   Insn 24: point = 85, n_alt = 0
   Insn 23: point = 87, n_alt = 2
   Insn 22: point = 89, n_alt = 0
   Insn 21: point = 90, n_alt = 0
   Insn 20: point = 92, n_alt = 2
   Insn 19: point = 94, n_alt = 0
  BB 3
   Insn 17: point = 96, n_alt = -1
   Insn 16: point = 96, n_alt = 0
   Insn 15: point = 97, n_alt = 2
   Insn 14: point = 99, n_alt = 0
  BB 2
   Insn 12: point = 101, n_alt = -1
   Insn 11: point = 101, n_alt = 0
   Insn 8: point = 101, n_alt = 1
   Insn 7: point = 102, n_alt = 0
   Insn 6: point = 104, n_alt = 0
   Insn 5: point = 106, n_alt = 0
   Insn 223: point = 107, n_alt = 0
  BB 20
   Insn 188: point = 108, n_alt = 0
   Insn 187: point = 108, n_alt = 0
  BB 18
   Insn 175: point = 109, n_alt = -1
   Insn 174: point = 109, n_alt = 0
   Insn 173: point = 110, n_alt = 2
   Insn 172: point = 112, n_alt = 0
  BB 17
   Insn 169: point = 114, n_alt = 1
   Insn 168: point = 115, n_alt = 0
   Insn 167: point = 117, n_alt = 0
  BB 15
   Insn 160: point = 119, n_alt = -1
   Insn 159: point = 119, n_alt = 1
   Insn 158: point = 119, n_alt = 1
   Insn 157: point = 120, n_alt = -2
   Insn 156: point = 121, n_alt = 0
   Insn 155: point = 121, n_alt = 0
   Insn 154: point = 121, n_alt = -2
   Insn 153: point = 121, n_alt = 0
   Insn 152: point = 122, n_alt = 0
   Insn 151: point = 122, n_alt = 0
   Insn 150: point = 122, n_alt = 0
   Insn 149: point = 124, n_alt = 2
   Insn 148: point = 126, n_alt = 0
  BB 13
   Insn 139: point = 128, n_alt = -1
   Insn 138: point = 128, n_alt = 1
   Insn 137: point = 128, n_alt = 1
   Insn 136: point = 129, n_alt = -2
   Insn 135: point = 130, n_alt = 0
   Insn 134: point = 130, n_alt = 0
   Insn 133: point = 130, n_alt = -2
   Insn 132: point = 130, n_alt = 0
   Insn 131: point = 130, n_alt = 0
   Insn 130: point = 131, n_alt = 0
   Insn 129: point = 131, n_alt = -2
   Insn 128: point = 133, n_alt = 0
   Insn 127: point = 135, n_alt = 0
   Insn 126: point = 136, n_alt = 0
   Insn 125: point = 136, n_alt = 0
   Insn 124: point = 136, n_alt = -2
   Insn 123: point = 136, n_alt = 0
   Insn 122: point = 136, n_alt = 0
  BB 12
   Insn 120: point = 137, n_alt = -1
   Insn 119: point = 137, n_alt = 0
   Insn 118: point = 138, n_alt = 0
   Insn 117: point = 140, n_alt = 0
   Insn 116: point = 142, n_alt = 0
 r82: [31..143] [20..29] [9..18] [5..6]
 r83: [103..104]
 r84: [101..102]
 r85: [96..97]
 r86: [91..92]
 r87: [84..90]
 r88: [86..87]
 r89: [83..85]
 r90: [25..26]
 r91: [23..24]
 r92: [69..73]
 r93: [69..70]
 r94: [64..65]
 r95: [62..63]
 r96: [57..58]
 r97: [53..54]
 r98: [48..49]
 r99: [46..47]
 r100: [42..43]
 r101: [14..15]
 r102: [12..13]
 r103: [139..140]
 r104: [137..138]
 r105: [134..135]
 r106: [132..133]
 r107: [130..131]
 r108: [38..39]
 r109: [36..37]
 r110: [123..124]
 r111: [121..122]
 r112: [109..110]
 r113: [30..30] [19..19] [7..8] [2..4]
 r114: [0..1]
 r115: [105..106]
 r116: [98..99]
 r117: [93..94]
 r118: [88..89]
 r119: [81..82]
 r120: [27..28]
 r121: [21..22]
 r122: [78..79]
 r123: [76..77]
 r124: [74..75]
 r125: [71..72]
 r126: [66..67]
 r127: [59..60]
 r128: [55..56]
 r129: [50..51]
 r130: [44..45]
 r131: [16..17]
 r132: [10..11]
 r133: [141..142]
 r134: [128..129]
 r135: [125..126]
 r136: [119..120]
 r137: [116..117]
 r138: [114..115]
 r139: [111..112]
 r140: [33..34]
Compressing live ranges: from 144 to 118 - 81%
Ranges after the compression:
 r82: [26..117] [17..24] [8..15] [4..5]
 r83: [84..85]
 r84: [82..83]
 r85: [78..79]
 r86: [74..75]
 r87: [68..73]
 r88: [70..71]
 r89: [68..69]
 r90: [21..22]
 r91: [19..20]
 r92: [56..59]
 r93: [56..57]
 r94: [52..53]
 r95: [50..51]
 r96: [46..47]
 r97: [42..43]
 r98: [38..39]
 r99: [36..37]
 r100: [32..33]
 r101: [12..13]
 r102: [10..11]
 r103: [114..115]
 r104: [112..113]
 r105: [110..111]
 r106: [108..109]
 r107: [106..107]
 r108: [30..31]
 r109: [28..29]
 r110: [100..101]
 r111: [98..99]
 r112: [88..89]
 r113: [25..25] [16..16] [6..7] [2..3]
 r114: [0..1]
 r115: [86..87]
 r116: [80..81]
 r117: [76..77]
 r118: [72..73]
 r119: [66..67]
 r120: [23..24]
 r121: [17..18]
 r122: [64..65]
 r123: [62..63]
 r124: [60..61]
 r125: [58..59]
 r126: [54..55]
 r127: [48..49]
 r128: [44..45]
 r129: [40..41]
 r130: [34..35]
 r131: [14..15]
 r132: [8..9]
 r133: [116..117]
 r134: [104..105]
 r135: [102..103]
 r136: [96..97]
 r137: [94..95]
 r138: [92..93]
 r139: [90..91]
 r140: [26..27]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 223
changing reg in insn 198
changing reg in insn 179
changing reg in insn 154
changing reg in insn 133
changing reg in insn 124
changing reg in insn 103
changing reg in insn 101
changing reg in insn 88
changing reg in insn 86
changing reg in insn 74
changing reg in insn 72
changing reg in insn 44
changing reg in insn 42
changing reg in insn 28
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 26
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 27
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 41
changing reg in insn 56
changing reg in insn 59
changing reg in insn 58
changing reg in insn 59
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 69
changing reg in insn 71
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 85
changing reg in insn 91
changing reg in insn 92
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 100
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 119
changing reg in insn 127
changing reg in insn 128
changing reg in insn 128
changing reg in insn 128
changing reg in insn 129
changing reg in insn 129
changing reg in insn 131
changing reg in insn 141
changing reg in insn 142
changing reg in insn 142
changing reg in insn 143
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 153
changing reg in insn 173
changing reg in insn 174
changing reg in insn 201
changing reg in insn 182
changing reg in insn 162
changing reg in insn 106
changing reg in insn 47
changing reg in insn 204
changing reg in insn 204
changing reg in insn 208
changing reg in insn 5
changing reg in insn 6
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 31
changing reg in insn 32
changing reg in insn 37
changing reg in insn 38
changing reg in insn 42
changing reg in insn 43
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 62
changing reg in insn 63
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 81
changing reg in insn 82
changing reg in insn 86
changing reg in insn 87
changing reg in insn 96
changing reg in insn 97
changing reg in insn 101
changing reg in insn 102
changing reg in insn 116
changing reg in insn 117
changing reg in insn 136
changing reg in insn 137
changing reg in insn 148
changing reg in insn 149
changing reg in insn 157
changing reg in insn 158
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 169
changing reg in insn 172
changing reg in insn 173
changing reg in insn 192
changing reg in insn 193
deleting insn with uid = 28.
deleting insn with uid = 31.
deleting insn with uid = 44.
deleting insn with uid = 74.
deleting insn with uid = 77.
deleting insn with uid = 88.
deleting insn with uid = 91.
deleting insn with uid = 103.
deleting insn with uid = 124.
deleting insn with uid = 129.
deleting insn with uid = 133.
deleting insn with uid = 136.
deleting insn with uid = 154.
deleting insn with uid = 157.
deleting insn with uid = 179.
deleting insn with uid = 198.
deleting insn with uid = 204.
deleting insn with uid = 208.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 125.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 155.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 199.


empty_dir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={64d,55u,2e} r1={13d,2u} r2={11d} r3={1d,14u} r7={38d,134u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={54d,12u} r18={10d} r19={3e} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 1053{831d,217u,5e} in 145{135 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 223 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 223 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 223 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":660:16 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (mem:SI (plus:SI (reg/f:SI 0 ax [115])
                (const_int 4 [0x4])) [5 inode_43(D)->i_size+0 S4 A32])) "fs/namei.c":660:16 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (lshiftrt:SI (reg:SI 0 ax [orig:83 _1 ] [83])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":660:25 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [orig:83 _1 ] [83])
            (const_int 16 [0x10]))
        (nil)))
(insn 8 7 11 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 len+0 S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "fs/namei.c":660:9 75 {*movsi_internal}
     (nil))
(insn 11 8 12 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [11 len+0 S4 A32])
            (const_int 1 [0x1]))) "fs/namei.c":661:8 11 {*cmpsi_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/namei.c":661:8 806 {*jcc}
     (nil)
 -> 35)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg/f:SI 0 ax [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":661:34 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:HI 0 ax [orig:85 _3 ] [85])
        (mem:HI (plus:SI (reg/f:SI 0 ax [116])
                (const_int 14 [0xe])) [4 inode_43(D)->i_zone[0]+0 S2 A16])) "fs/namei.c":661:34 76 {*movhi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:85 _3 ] [85])
            (const_int 0 [0]))) "fs/namei.c":661:17 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "fs/namei.c":661:17 806 {*jcc}
     (nil)
 -> 35)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:SI 0 ax [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":662:49 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:HI 0 ax [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 0 ax [117])
                (const_int 14 [0xe])) [4 inode_43(D)->i_zone[0]+0 S2 A16])) "fs/namei.c":662:49 76 {*movhi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (zero_extend:SI (reg:HI 0 ax [orig:86 _4 ] [86]))) "fs/namei.c":662:16 144 {*zero_extendhisi2}
     (nil))
(insn 22 21 23 4 (set (reg/f:SI 0 ax [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":662:27 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:HI 0 ax [orig:88 _6 ] [88])
        (mem:HI (plus:SI (reg/f:SI 0 ax [118])
                (const_int 44 [0x2c])) [4 inode_43(D)->i_dev+0 S2 A32])) "fs/namei.c":662:27 76 {*movhi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (zero_extend:SI (reg:HI 0 ax [orig:88 _6 ] [88]))) "fs/namei.c":662:16 144 {*zero_extendhisi2}
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":662:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 26 25 27 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:87 _5 ] [87])) "fs/namei.c":662:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 27 26 29 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:89 _7 ] [89])) "fs/namei.c":662:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 29 27 30 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7f2fcf30e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":662:16 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 30 29 32 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":662:16 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 32 30 33 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [119])) "fs/namei.c":662:16 75 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":661:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "fs/namei.c":661:38 806 {*jcc}
     (nil)
 -> 50)
(code_label 35 34 36 5 142 (nil) [2 uses])
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (set (reg/f:SI 0 ax [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":663:61 75 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:HI 0 ax [orig:90 _8 ] [90])
        (mem:HI (plus:SI (reg/f:SI 0 ax [120])
                (const_int 44 [0x2c])) [4 inode_43(D)->i_dev+0 S2 A32])) "fs/namei.c":663:61 76 {*movhi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (zero_extend:SI (reg:HI 0 ax [orig:90 _8 ] [90]))) "fs/namei.c":663:9 144 {*zero_extendhisi2}
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":663:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 41 40 42 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:91 _9 ] [91])) "fs/namei.c":663:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 42 41 43 5 (set (reg/f:SI 0 ax [121])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7f2fcf01aab0 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":663:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7f2fcf01aab0 *.LC6>)
        (nil)))
(insn 43 42 45 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [121])) "fs/namei.c":663:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 45 43 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7f2fcf338900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":663:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 46 45 47 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":663:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 47 46 211 5 (set (reg:SI 0 ax [orig:113 _36 ] [113])
        (const_int 0 [0])) "fs/namei.c":664:16 75 {*movsi_internal}
     (nil))
(jump_insn 211 47 212 5 (set (pc)
        (label_ref 202)) "fs/namei.c":664:16 807 {jump}
     (nil)
 -> 202)
(barrier 212 211 50)
(code_label 50 212 51 6 143 (nil) [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg/f:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":666:8 75 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg/f:SI 0 ax [123])
        (mem/f:SI (reg/f:SI 0 ax [122]) [8 bh_46->b_data+0 S4 A32])) "fs/namei.c":666:8 75 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [123])) "fs/namei.c":666:8 75 {*movsi_internal}
     (nil))
(insn 55 54 56 6 (set (reg/f:SI 0 ax [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])) "fs/namei.c":667:14 75 {*movsi_internal}
     (nil))
(insn 56 55 57 6 (set (reg:HI 1 dx [orig:92 _10 ] [92])
        (mem:HI (reg/f:SI 0 ax [124]) [4 de_47->inode+0 S2 A16])) "fs/namei.c":667:14 76 {*movhi_internal}
     (nil))
(insn 57 56 58 6 (set (reg/f:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":667:29 75 {*movsi_internal}
     (nil))
(insn 58 57 59 6 (set (reg:HI 0 ax [orig:93 _11 ] [93])
        (mem:HI (plus:SI (reg/f:SI 0 ax [125])
                (const_int 46 [0x2e])) [4 inode_43(D)->i_num+0 S2 A16])) "fs/namei.c":667:29 76 {*movhi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:92 _10 ] [92])
            (reg:HI 0 ax [orig:93 _11 ] [93]))) "fs/namei.c":667:8 10 {*cmphi_1}
     (nil))
(jump_insn 60 59 61 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "fs/namei.c":667:8 806 {*jcc}
     (nil)
 -> 94)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/f:SI 0 ax [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])) "fs/namei.c":667:43 75 {*movsi_internal}
     (nil))
(insn 63 62 64 7 (parallel [
            (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
                (plus:SI (reg/f:SI 0 ax [126])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":667:43 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 de+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 64 63 65 7 (set (reg:HI 0 ax [orig:95 _13 ] [95])
        (mem:HI (reg/f:SI 0 ax [orig:94 _12 ] [94]) [4 _12->inode+0 S2 A16])) "fs/namei.c":667:46 76 {*movhi_internal}
     (nil))
(insn 65 64 66 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:95 _13 ] [95])
            (const_int 0 [0]))) "fs/namei.c":667:37 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 66 65 67 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "fs/namei.c":667:37 806 {*jcc}
     (nil)
 -> 94)
(note 67 66 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 8 (set (reg/f:SI 0 ax [127])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])) "fs/namei.c":668:26 75 {*movsi_internal}
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg/f:SI 0 ax [orig:96 _14 ] [96])
                (plus:SI (reg/f:SI 0 ax [127])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":668:26 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 de+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 70 69 71 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":668:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 71 70 72 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:96 _14 ] [96])) "fs/namei.c":668:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 72 71 73 8 (set (reg/f:SI 0 ax [128])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f2fcf01a870 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":668:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x7f2fcf01a870 *.LC4>)
        (nil)))
(insn 73 72 75 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [128])) "fs/namei.c":668:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 75 73 76 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x7f2fcf33af00 strcmp>) [0 strcmp S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":668:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 76 75 78 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":668:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 78 76 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:97 _15 ] [97])
            (const_int 0 [0]))) "fs/namei.c":667:53 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "fs/namei.c":667:53 806 {*jcc}
     (nil)
 -> 94)
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])) "fs/namei.c":668:51 75 {*movsi_internal}
     (nil))
(insn 82 81 83 9 (parallel [
            (set (reg/f:SI 0 ax [orig:98 _16 ] [98])
                (plus:SI (reg/f:SI 0 ax [129])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":668:51 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 de+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 83 82 84 9 (parallel [
            (set (reg/f:SI 0 ax [orig:99 _17 ] [99])
                (plus:SI (reg/f:SI 0 ax [orig:98 _16 ] [98])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":668:54 209 {*addsi_1}
     (nil))
(insn 84 83 85 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":668:36 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 85 84 86 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:99 _17 ] [99])) "fs/namei.c":668:36 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 86 85 87 9 (set (reg/f:SI 0 ax [130])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f2fcf01a900 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":668:36 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x7f2fcf01a900 *.LC5>)
        (nil)))
(insn 87 86 89 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [130])) "fs/namei.c":668:36 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 89 87 90 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strcmp") [flags 0x41]  <function_decl 0x7f2fcf33af00 strcmp>) [0 strcmp S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":668:36 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 90 89 92 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":668:36 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 92 90 93 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 _18 ] [100])
            (const_int 0 [0]))) "fs/namei.c":668:33 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 93 92 94 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "fs/namei.c":668:33 806 {*jcc}
     (nil)
 -> 109)
(code_label 94 93 95 10 145 (nil) [3 uses])
(note 95 94 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 10 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":669:62 75 {*movsi_internal}
     (nil))
(insn 97 96 98 10 (set (reg:HI 0 ax [orig:101 _19 ] [101])
        (mem:HI (plus:SI (reg/f:SI 0 ax [131])
                (const_int 44 [0x2c])) [4 inode_43(D)->i_dev+0 S2 A32])) "fs/namei.c":669:62 76 {*movhi_internal}
     (nil))
(insn 98 97 99 10 (set (reg:SI 0 ax [orig:102 _20 ] [102])
        (zero_extend:SI (reg:HI 0 ax [orig:101 _19 ] [101]))) "fs/namei.c":669:9 144 {*zero_extendhisi2}
     (nil))
(insn 99 98 100 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":669:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 100 99 101 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:102 _20 ] [102])) "fs/namei.c":669:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 101 100 102 10 (set (reg/f:SI 0 ax [132])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7f2fcf01ab40 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":669:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x7f2fcf01ab40 *.LC7>)
        (nil)))
(insn 102 101 104 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [132])) "fs/namei.c":669:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 104 102 105 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7f2fcf338900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":669:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 105 104 106 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":669:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 106 105 213 10 (set (reg:SI 0 ax [orig:113 _36 ] [113])
        (const_int 0 [0])) "fs/namei.c":670:16 75 {*movsi_internal}
     (nil))
(jump_insn 213 106 214 10 (set (pc)
        (label_ref 202)) "fs/namei.c":670:16 807 {jump}
     (nil)
 -> 202)
(barrier 214 213 109)
(code_label 109 214 110 11 146 (nil) [1 uses])
(note 110 109 111 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 11 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 nr+0 S4 A32])
        (const_int 2 [0x2])) "fs/namei.c":672:8 75 {*movsi_internal}
     (nil))
(insn 112 111 215 11 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 20 [0x14])) [1 de+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [1 de+0 S4 A32])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":673:8 209 {*addsi_1}
     (nil))
(jump_insn 215 112 216 11 (set (pc)
        (label_ref 189)) "fs/namei.c":674:11 807 {jump}
     (nil)
 -> 189)
(barrier 216 215 191)
(code_label 191 216 115 12 152 (nil) [1 uses])
(note 115 191 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 12 (set (reg/f:SI 0 ax [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":675:38 75 {*movsi_internal}
     (nil))
(insn 117 116 118 12 (set (reg/f:SI 0 ax [orig:103 _21 ] [103])
        (mem/f:SI (reg/f:SI 0 ax [133]) [8 bh_33->b_data+0 S4 A32])) "fs/namei.c":675:38 75 {*movsi_internal}
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg/f:SI 0 ax [orig:104 _22 ] [104])
                (plus:SI (reg/f:SI 0 ax [orig:103 _21 ] [103])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":675:47 209 {*addsi_1}
     (nil))
(insn 119 118 120 12 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [1 de+0 S4 A32])
            (reg/f:SI 0 ax [orig:104 _22 ] [104]))) "fs/namei.c":675:12 11 {*cmpsi_1}
     (nil))
(jump_insn 120 119 121 12 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "fs/namei.c":675:12 806 {*jcc}
     (nil)
 -> 170)
(note 121 120 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":676:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 123 122 125 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 bh+0 S4 A32])) "fs/namei.c":676:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 125 123 126 13 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":676:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 126 125 127 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":676:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 127 126 128 13 (set (reg:SI 0 ax [orig:105 nr.159_23 ] [105])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 nr+0 S4 A32])) "fs/namei.c":677:36 75 {*movsi_internal}
     (nil))
(insn 128 127 130 13 (parallel [
            (set (reg:SI 0 ax [orig:106 _24 ] [106])
                (lshiftrt:SI (reg:SI 0 ax [orig:105 nr.159_23 ] [105])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":677:36 701 {*lshrsi3_1}
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 0 ax [orig:105 nr.159_23 ] [105])
            (const_int 64 [0x40]))
        (nil)))
(insn 130 128 131 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":677:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 131 130 132 13 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:107 _25 ] [107])) "fs/namei.c":677:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 132 131 134 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [2 inode+0 S4 A32])) "fs/namei.c":677:21 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 134 132 135 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bmap") [flags 0x41]  <function_decl 0x7f2fcf30ed00 bmap>) [0 bmap S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":677:21 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 135 134 137 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":677:21 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 137 135 138 13 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [11 block+0 S4 A32])
        (reg:SI 0 ax [134])) "fs/namei.c":677:21 75 {*movsi_internal}
     (nil))
(insn 138 137 139 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [11 block+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":678:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 139 138 140 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "fs/namei.c":678:16 806 {*jcc}
     (nil)
 -> 146)
(note 140 139 141 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 14 (set (reg:SI 0 ax [orig:108 nr.160_26 ] [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 nr+0 S4 A32])) "fs/namei.c":679:20 75 {*movsi_internal}
     (nil))
(insn 142 141 143 14 (parallel [
            (set (reg:SI 0 ax [orig:109 _27 ] [109])
                (plus:SI (reg:SI 0 ax [orig:108 nr.160_26 ] [108])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":679:20 209 {*addsi_1}
     (nil))
(insn 143 142 217 14 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 nr+0 S4 A32])
        (reg:SI 0 ax [orig:109 _27 ] [109])) "fs/namei.c":679:20 75 {*movsi_internal}
     (nil))
(jump_insn 217 143 218 14 (set (pc)
        (label_ref 189)) "fs/namei.c":680:17 807 {jump}
     (nil)
 -> 189)
(barrier 218 217 146)
(code_label 146 218 147 15 149 (nil) [1 uses])
(note 147 146 148 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 15 (set (reg/f:SI 0 ax [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [2 inode+0 S4 A32])) "fs/namei.c":682:35 75 {*movsi_internal}
     (nil))
(insn 149 148 150 15 (set (reg:HI 0 ax [orig:110 _28 ] [110])
        (mem:HI (plus:SI (reg/f:SI 0 ax [135])
                (const_int 44 [0x2c])) [4 inode_43(D)->i_dev+0 S2 A32])) "fs/namei.c":682:35 76 {*movhi_internal}
     (nil))
(insn 150 149 151 15 (set (reg:SI 0 ax [orig:111 _29 ] [111])
        (zero_extend:SI (reg:HI 0 ax [orig:110 _28 ] [110]))) "fs/namei.c":682:24 144 {*zero_extendhisi2}
     (nil))
(insn 151 150 152 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":682:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 152 151 153 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [11 block+0 S4 A32])) "fs/namei.c":682:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 153 152 155 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:111 _29 ] [111])) "fs/namei.c":682:24 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 155 153 156 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("bread") [flags 0x41]  <function_decl 0x7f2fcf30e100 bread>) [0 bread S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":682:24 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 156 155 158 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":682:24 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 158 156 159 15 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [136])) "fs/namei.c":682:24 75 {*movsi_internal}
     (nil))
(insn 159 158 160 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":682:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 160 159 161 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "fs/namei.c":682:16 806 {*jcc}
     (nil)
 -> 165)
(note 161 160 162 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 219 16 (set (reg:SI 0 ax [orig:113 _36 ] [113])
        (const_int 0 [0])) "fs/namei.c":683:24 75 {*movsi_internal}
     (nil))
(jump_insn 219 162 220 16 (set (pc)
        (label_ref 202)) "fs/namei.c":683:24 807 {jump}
     (nil)
 -> 202)
(barrier 220 219 165)
(code_label 165 220 166 17 150 (nil) [1 uses])
(note 166 165 167 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 17 (set (reg/f:SI 0 ax [137])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [9 bh+0 S4 A32])) "fs/namei.c":684:16 75 {*movsi_internal}
     (nil))
(insn 168 167 169 17 (set (reg/f:SI 0 ax [138])
        (mem/f:SI (reg/f:SI 0 ax [137]) [8 bh_58->b_data+0 S4 A32])) "fs/namei.c":684:16 75 {*movsi_internal}
     (nil))
(insn 169 168 170 17 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])
        (reg/f:SI 0 ax [138])) "fs/namei.c":684:16 75 {*movsi_internal}
     (nil))
(code_label 170 169 171 18 148 (nil) [1 uses])
(note 171 170 172 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 18 (set (reg/f:SI 0 ax [139])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 de+0 S4 A32])) "fs/namei.c":686:15 75 {*movsi_internal}
     (nil))
(insn 173 172 174 18 (set (reg:HI 0 ax [orig:112 _30 ] [112])
        (mem:HI (reg/f:SI 0 ax [139]) [4 de_34->inode+0 S2 A16])) "fs/namei.c":686:15 76 {*movhi_internal}
     (nil))
(insn 174 173 175 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:112 _30 ] [112])
            (const_int 0 [0]))) "fs/namei.c":686:12 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 175 174 176 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "fs/namei.c":686:12 806 {*jcc}
     (nil)
 -> 185)
(note 176 175 177 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":687:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 178 177 180 19 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 bh+0 S4 A32])) "fs/namei.c":687:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 180 178 181 19 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":687:13 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 181 180 182 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":687:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 182 181 221 19 (set (reg:SI 0 ax [orig:113 _36 ] [113])
        (const_int 0 [0])) "fs/namei.c":688:20 75 {*movsi_internal}
     (nil))
(jump_insn 221 182 222 19 (set (pc)
        (label_ref 202)) "fs/namei.c":688:20 807 {jump}
     (nil)
 -> 202)
(barrier 222 221 185)
(code_label 185 222 186 20 151 (nil) [1 uses])
(note 186 185 187 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 20 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 20 [0x14])) [1 de+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [1 de+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":690:11 209 {*addsi_1}
     (nil))
(insn 188 187 189 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 28 [0x1c])) [11 nr+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 28 [0x1c])) [11 nr+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":691:11 209 {*addsi_1}
     (nil))
(code_label 189 188 190 21 147 (nil) [2 uses])
(note 190 189 192 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 192 190 193 21 (set (reg:SI 0 ax [140])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [11 nr+0 S4 A32])) "fs/namei.c":674:15 75 {*movsi_internal}
     (nil))
(insn 193 192 194 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [140])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [11 len+0 S4 A32]))) "fs/namei.c":674:15 11 {*cmpsi_1}
     (nil))
(jump_insn 194 193 195 21 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) "fs/namei.c":674:15 806 {*jcc}
     (nil)
 -> 191)
(note 195 194 196 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":693:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 197 196 199 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [9 bh+0 S4 A32])) "fs/namei.c":693:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 199 197 200 22 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":693:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 200 199 201 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":693:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 201 200 202 22 (set (reg:SI 0 ax [orig:113 _36 ] [113])
        (const_int 1 [0x1])) "fs/namei.c":694:12 75 {*movsi_internal}
     (nil))
(code_label 202 201 203 23 144 (nil) [4 uses])
(note 203 202 209 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 209 203 224 23 (use (reg/i:SI 0 ax)) "fs/namei.c":695:1 -1
     (nil))
(note 224 209 0 NOTE_INSN_DELETED)

;; Function sys_rmdir (sys_rmdir, funcdef_no=21, decl_uid=1558, cgraph_uid=22, symbol_order=21)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 19:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 51:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 77:  (0) r  (1) r  (2) le {*addsi_1} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 91:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 98:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 101:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 103:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 115:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 119:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 120:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 124:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 131:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 139:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 144:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 147:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 152:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 156:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 157:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 161:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 162:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 166:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 173:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 175:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 180:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 192:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 193:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 197:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 198:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 202:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 212:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 216:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 222:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 223:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 227:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 234:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 236:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 240:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 244:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 246:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 250:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 251:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 255:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 261:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 264:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 269:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 273:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 275:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 276:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 279:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 280:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 284:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 290:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 291:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 296:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 298:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 300:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 304:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 307:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 308:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 310:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 311:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 315:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 317:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 319:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 321:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 322:  (0) =qm  (1) %0  (2) qn {*addqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 323:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 326:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 327:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=172 from oldreg=170, assigning class AREG to r172
  327: {r164:SI=trunc(sign_extend(r172:SI)*sign_extend(r165:SI) 0>>0x20);clobber r172:SI;clobber flags:CC;}
      REG_DEAD r165:SI
      REG_UNUSED r170:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  389: r172:SI=r132:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 328:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=173 from oldreg=164, assigning class GENERAL_REGS to r173
  328: {r173:SI=r173:SI>>0x5;clobber flags:CC;}
      REG_DEAD r164:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  390: r173:SI=r164:SI
    Inserting insn reload after:
  391: r166:SI=r173:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 329:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 330:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=174 from oldreg=166, assigning class GENERAL_REGS to r174
  330: {r174:SI=r174:SI-r167:SI;clobber flags:CC;}
      REG_DEAD r167:SI
      REG_DEAD r166:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  392: r174:SI=r166:SI
    Inserting insn reload after:
  393: r133:SI=r174:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 339:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 340:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 341:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 343:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 347:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 348:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 352:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10 11
EBB 12 13
EBB 14 15 16 17
EBB 18 19
EBB 20
EBB 21 22
EBB 23 24
EBB 25 26
EBB 27 28
EBB 29
EBB 30

********** Pseudo live ranges #1: **********

  BB 30
   Insn 363: point = 0, n_alt = -1
   Insn 362: point = 0, n_alt = -2
   Insn 358: point = 1, n_alt = -2
  BB 26
   Insn 385: point = 4, n_alt = -1
   Insn 285: point = 4, n_alt = 0
   Insn 284: point = 5, n_alt = 0
   Insn 283: point = 5, n_alt = 0
   Insn 282: point = 5, n_alt = -2
   Insn 281: point = 6, n_alt = 0
   Insn 280: point = 6, n_alt = 0
   Insn 279: point = 6, n_alt = 0
   Insn 278: point = 6, n_alt = 0
   Insn 277: point = 6, n_alt = -2
   Insn 276: point = 6, n_alt = 0
   Insn 275: point = 7, n_alt = 0
   Insn 274: point = 7, n_alt = 0
   Insn 273: point = 8, n_alt = 0
   Insn 272: point = 8, n_alt = 0
   Insn 271: point = 8, n_alt = -2
   Insn 270: point = 8, n_alt = 0
   Insn 269: point = 8, n_alt = 0
  BB 22
   Insn 381: point = 9, n_alt = -1
   Insn 228: point = 9, n_alt = 0
   Insn 227: point = 10, n_alt = 0
   Insn 226: point = 10, n_alt = 0
   Insn 225: point = 10, n_alt = -2
   Insn 224: point = 11, n_alt = 0
   Insn 223: point = 11, n_alt = 0
   Insn 222: point = 11, n_alt = 0
   Insn 221: point = 11, n_alt = 0
   Insn 220: point = 11, n_alt = -2
   Insn 219: point = 11, n_alt = 0
   Insn 218: point = 12, n_alt = 0
   Insn 217: point = 12, n_alt = 0
   Insn 216: point = 13, n_alt = 0
   Insn 215: point = 13, n_alt = 0
   Insn 214: point = 13, n_alt = -2
   Insn 213: point = 13, n_alt = 0
   Insn 212: point = 13, n_alt = 0
  BB 20
   Insn 379: point = 14, n_alt = -1
   Insn 203: point = 14, n_alt = 0
   Insn 202: point = 15, n_alt = 0
   Insn 201: point = 15, n_alt = 0
   Insn 200: point = 15, n_alt = -2
   Insn 199: point = 16, n_alt = 0
   Insn 198: point = 16, n_alt = 0
   Insn 197: point = 16, n_alt = 0
   Insn 196: point = 16, n_alt = 0
   Insn 195: point = 16, n_alt = -2
   Insn 194: point = 16, n_alt = 0
   Insn 193: point = 16, n_alt = 0
   Insn 192: point = 16, n_alt = 0
   Insn 191: point = 16, n_alt = 0
   Insn 190: point = 16, n_alt = -2
   Insn 189: point = 16, n_alt = 0
   Insn 188: point = 17, n_alt = 0
   Insn 187: point = 17, n_alt = 0
  BB 17
   Insn 377: point = 19, n_alt = -1
   Insn 167: point = 19, n_alt = 0
   Insn 166: point = 20, n_alt = 0
   Insn 165: point = 20, n_alt = 0
   Insn 164: point = 20, n_alt = -2
   Insn 163: point = 21, n_alt = 0
   Insn 162: point = 21, n_alt = 0
   Insn 161: point = 21, n_alt = 0
   Insn 160: point = 21, n_alt = 0
   Insn 159: point = 21, n_alt = -2
   Insn 158: point = 21, n_alt = 0
   Insn 157: point = 21, n_alt = 0
   Insn 156: point = 21, n_alt = 0
   Insn 155: point = 21, n_alt = 0
   Insn 154: point = 21, n_alt = -2
   Insn 153: point = 21, n_alt = 0
   Insn 152: point = 22, n_alt = 0
   Insn 151: point = 22, n_alt = 0
  BB 13
   Insn 375: point = 24, n_alt = -1
   Insn 125: point = 24, n_alt = 0
   Insn 124: point = 25, n_alt = 0
   Insn 123: point = 25, n_alt = 0
   Insn 122: point = 25, n_alt = -2
   Insn 121: point = 26, n_alt = 0
   Insn 120: point = 26, n_alt = 0
   Insn 119: point = 26, n_alt = 0
   Insn 118: point = 26, n_alt = 0
   Insn 117: point = 26, n_alt = -2
   Insn 116: point = 26, n_alt = 0
   Insn 115: point = 27, n_alt = 0
   Insn 114: point = 27, n_alt = 0
  BB 11
   Insn 373: point = 29, n_alt = -1
   Insn 92: point = 29, n_alt = 0
   Insn 91: point = 30, n_alt = 0
   Insn 90: point = 30, n_alt = 0
   Insn 89: point = 30, n_alt = -2
   Insn 88: point = 31, n_alt = 0
   Insn 87: point = 32, n_alt = 0
   Insn 86: point = 32, n_alt = 0
  BB 9
   Insn 371: point = 34, n_alt = -1
   Insn 66: point = 34, n_alt = 0
   Insn 65: point = 35, n_alt = 0
   Insn 64: point = 35, n_alt = 0
   Insn 63: point = 35, n_alt = -2
   Insn 62: point = 36, n_alt = 0
   Insn 61: point = 37, n_alt = 0
   Insn 60: point = 37, n_alt = 0
  BB 7
   Insn 369: point = 39, n_alt = -1
   Insn 45: point = 39, n_alt = 0
   Insn 44: point = 40, n_alt = 0
   Insn 43: point = 40, n_alt = 0
   Insn 42: point = 40, n_alt = -2
   Insn 41: point = 41, n_alt = 0
   Insn 40: point = 42, n_alt = 0
   Insn 39: point = 42, n_alt = 0
  BB 5
   Insn 367: point = 44, n_alt = -1
   Insn 30: point = 44, n_alt = 0
  BB 3
   Insn 365: point = 45, n_alt = -1
   Insn 11: point = 45, n_alt = 0
  BB 24
   Insn 383: point = 46, n_alt = -1
   Insn 256: point = 46, n_alt = 0
   Insn 255: point = 47, n_alt = 0
   Insn 254: point = 47, n_alt = 0
   Insn 253: point = 47, n_alt = -2
   Insn 252: point = 48, n_alt = 0
   Insn 251: point = 48, n_alt = 0
   Insn 250: point = 48, n_alt = 0
   Insn 249: point = 48, n_alt = 0
   Insn 248: point = 48, n_alt = -2
   Insn 247: point = 48, n_alt = 0
   Insn 246: point = 49, n_alt = 0
   Insn 245: point = 49, n_alt = 0
   Insn 244: point = 50, n_alt = 0
   Insn 243: point = 50, n_alt = 0
   Insn 242: point = 50, n_alt = -2
   Insn 241: point = 50, n_alt = 0
   Insn 240: point = 50, n_alt = 0
  BB 29
   Insn 353: point = 51, n_alt = 0
   Insn 352: point = 52, n_alt = 0
   Insn 351: point = 52, n_alt = 0
   Insn 350: point = 52, n_alt = -2
   Insn 349: point = 53, n_alt = 0
   Insn 348: point = 53, n_alt = 0
   Insn 347: point = 53, n_alt = 0
   Insn 346: point = 53, n_alt = 0
   Insn 345: point = 53, n_alt = -2
   Insn 344: point = 53, n_alt = 0
   Insn 343: point = 54, n_alt = 0
   Insn 342: point = 54, n_alt = 0
   Insn 341: point = 55, n_alt = 8
   Insn 340: point = 56, n_alt = 0
   Insn 339: point = 57, n_alt = 1
   Insn 338: point = 58, n_alt = 0
   Insn 337: point = 60, n_alt = 0
   Insn 336: point = 61, n_alt = 1
   Insn 335: point = 62, n_alt = -2
   Insn 334: point = 64, n_alt = 0
   Insn 333: point = 65, n_alt = 0
   Insn 332: point = 67, n_alt = 0
   Insn 331: point = 69, n_alt = 0
   Insn 393: point = 70, n_alt = -2
	Hard reg 1 is preferable by r174 with profit 1000
   Insn 330: point = 72, n_alt = 0
   Insn 392: point = 74, n_alt = -2
	Hard reg 1 is preferable by r174 with profit 1000
	Hard reg 0 is preferable by r174 with profit 1000
   Insn 329: point = 76, n_alt = 1
   Insn 391: point = 78, n_alt = -2
	Hard reg 0 is preferable by r173 with profit 1000
   Insn 328: point = 80, n_alt = 0
   Insn 390: point = 81, n_alt = -2
	Hard reg 0 is preferable by r173 with profit 1000
	Hard reg 1 is preferable by r173 with profit 1000
   Insn 327: point = 83, n_alt = 0
   Insn 389: point = 85, n_alt = -2
	Hard reg 2 is preferable by r172 with profit 1000
   Insn 326: point = 86, n_alt = 0
   Insn 325: point = 87, n_alt = 0
   Insn 324: point = 89, n_alt = 0
   Insn 323: point = 90, n_alt = 8
   Insn 322: point = 91, n_alt = 0
   Insn 321: point = 93, n_alt = 4
   Insn 320: point = 94, n_alt = 0
   Insn 319: point = 95, n_alt = 8
   Insn 318: point = 96, n_alt = 0
   Insn 317: point = 97, n_alt = 8
   Insn 316: point = 98, n_alt = 0
   Insn 315: point = 99, n_alt = 0
   Insn 314: point = 99, n_alt = 0
   Insn 313: point = 99, n_alt = -2
   Insn 312: point = 99, n_alt = 0
   Insn 311: point = 99, n_alt = 0
   Insn 310: point = 99, n_alt = 8
   Insn 309: point = 100, n_alt = 0
   Insn 308: point = 101, n_alt = 3
   Insn 307: point = 102, n_alt = 0
  BB 28
   Insn 304: point = 104, n_alt = 0
   Insn 303: point = 104, n_alt = 0
   Insn 302: point = 104, n_alt = -2
   Insn 301: point = 104, n_alt = 0
   Insn 300: point = 105, n_alt = 0
   Insn 299: point = 106, n_alt = 0
   Insn 298: point = 107, n_alt = 0
   Insn 297: point = 107, n_alt = 0
   Insn 296: point = 109, n_alt = 4
   Insn 295: point = 111, n_alt = 0
  BB 27
   Insn 293: point = 113, n_alt = -1
   Insn 292: point = 113, n_alt = 0
   Insn 291: point = 114, n_alt = 4
   Insn 290: point = 116, n_alt = 0
  BB 25
   Insn 267: point = 118, n_alt = -1
   Insn 266: point = 118, n_alt = 0
   Insn 265: point = 119, n_alt = -2
   Insn 264: point = 120, n_alt = 0
   Insn 263: point = 120, n_alt = 0
   Insn 262: point = 120, n_alt = 0
   Insn 261: point = 120, n_alt = 0
  BB 23
   Insn 238: point = 121, n_alt = -1
   Insn 237: point = 121, n_alt = 0
   Insn 236: point = 122, n_alt = 0
   Insn 235: point = 124, n_alt = 0
   Insn 234: point = 126, n_alt = 2
   Insn 233: point = 128, n_alt = 0
  BB 21
   Insn 210: point = 130, n_alt = -1
   Insn 209: point = 130, n_alt = 0
   Insn 208: point = 131, n_alt = 0
  BB 19
   Insn 184: point = 133, n_alt = -1
   Insn 183: point = 133, n_alt = 0
   Insn 180: point = 134, n_alt = 2
   Insn 179: point = 136, n_alt = 0
  BB 18
   Insn 177: point = 138, n_alt = -1
   Insn 176: point = 138, n_alt = 0
   Insn 175: point = 139, n_alt = 2
   Insn 174: point = 141, n_alt = 0
   Insn 173: point = 142, n_alt = 2
   Insn 172: point = 144, n_alt = 0
  BB 16
   Insn 149: point = 146, n_alt = -1
   Insn 148: point = 146, n_alt = 0
   Insn 147: point = 147, n_alt = 2
   Insn 146: point = 149, n_alt = 0
   Insn 145: point = 151, n_alt = 0
   Insn 144: point = 152, n_alt = 2
   Insn 143: point = 154, n_alt = 0
  BB 15
   Insn 141: point = 156, n_alt = -1
   Insn 140: point = 156, n_alt = 0
   Insn 139: point = 157, n_alt = 2
   Insn 138: point = 159, n_alt = 0
   Insn 137: point = 161, n_alt = 0
  BB 14
   Insn 135: point = 163, n_alt = -1
   Insn 134: point = 163, n_alt = 0
   Insn 133: point = 164, n_alt = 0
   Insn 132: point = 166, n_alt = 0
   Insn 131: point = 168, n_alt = 2
   Insn 130: point = 170, n_alt = 0
  BB 12
   Insn 112: point = 172, n_alt = -1
   Insn 111: point = 172, n_alt = 1
   Insn 110: point = 172, n_alt = 1
   Insn 109: point = 173, n_alt = -2
   Insn 108: point = 174, n_alt = 0
   Insn 107: point = 174, n_alt = 0
   Insn 106: point = 174, n_alt = -2
   Insn 105: point = 174, n_alt = 0
   Insn 104: point = 175, n_alt = 0
   Insn 103: point = 176, n_alt = 0
   Insn 102: point = 176, n_alt = 0
   Insn 101: point = 178, n_alt = 2
   Insn 100: point = 180, n_alt = 0
   Insn 99: point = 181, n_alt = 0
   Insn 98: point = 183, n_alt = 2
   Insn 97: point = 185, n_alt = 0
  BB 10
   Insn 84: point = 187, n_alt = -1
   Insn 83: point = 187, n_alt = 1
   Insn 82: point = 187, n_alt = 1
   Insn 81: point = 188, n_alt = -2
   Insn 80: point = 189, n_alt = 0
   Insn 79: point = 189, n_alt = 0
   Insn 78: point = 189, n_alt = 0
   Insn 77: point = 190, n_alt = 3
   Insn 76: point = 191, n_alt = 0
   Insn 75: point = 192, n_alt = 0
   Insn 74: point = 193, n_alt = 0
   Insn 73: point = 194, n_alt = 3
   Insn 72: point = 195, n_alt = 0
   Insn 71: point = 196, n_alt = 0
  BB 8
   Insn 58: point = 198, n_alt = -1
   Insn 57: point = 198, n_alt = 0
   Insn 56: point = 199, n_alt = -2
   Insn 55: point = 200, n_alt = 0
   Insn 54: point = 200, n_alt = 0
   Insn 53: point = 200, n_alt = 0
   Insn 52: point = 201, n_alt = 0
   Insn 51: point = 201, n_alt = 0
   Insn 50: point = 201, n_alt = 0
  BB 6
   Insn 37: point = 203, n_alt = -1
   Insn 36: point = 203, n_alt = 0
   Insn 35: point = 204, n_alt = 0
  BB 4
   Insn 28: point = 206, n_alt = -1
   Insn 27: point = 206, n_alt = 0
   Insn 26: point = 207, n_alt = 0
   Insn 25: point = 208, n_alt = 1
   Insn 24: point = 209, n_alt = -2
   Insn 23: point = 210, n_alt = 0
   Insn 22: point = 210, n_alt = 0
   Insn 21: point = 210, n_alt = 0
   Insn 20: point = 210, n_alt = 0
   Insn 19: point = 211, n_alt = 3
   Insn 18: point = 212, n_alt = 0
   Insn 17: point = 213, n_alt = 3
   Insn 16: point = 214, n_alt = 0
  BB 2
   Insn 9: point = 215, n_alt = -1
   Insn 8: point = 215, n_alt = 0
   Insn 7: point = 216, n_alt = 2
   Insn 6: point = 218, n_alt = 0
   Insn 5: point = 220, n_alt = 0
   Insn 387: point = 221, n_alt = 0
 r82: [52..221] [47..50] [40..43] [35..38] [30..33] [25..28] [20..23] [15..18] [10..13] [5..8]
 r83: [217..218]
 r84: [215..216]
 r85: [208..209]
 r86: [206..207]
 r87: [203..204]
 r88: [41..42]
 r89: [200..201]
 r90: [198..199]
 r91: [36..37]
 r92: [192..196]
 r93: [191..195]
 r94: [31..32]
 r95: [184..185]
 r96: [182..183]
 r97: [175..181]
 r98: [179..180]
 r99: [177..178]
 r100: [174..176]
 r101: [26..27]
 r102: [169..170]
 r103: [167..168]
 r104: [165..166]
 r105: [163..164]
 r106: [158..159]
 r107: [156..157]
 r108: [146..152]
 r109: [148..149]
 r110: [146..147]
 r111: [21..22]
 r112: [138..142]
 r113: [140..141]
 r114: [138..139]
 r115: [133..134]
 r116: [16..17]
 r117: [130..131]
 r118: [11..12]
 r119: [125..126]
 r120: [123..124]
 r121: [121..122]
 r122: [48..49]
 r123: [118..119]
 r124: [6..7]
 r125: [113..114]
 r126: [108..109]
 r127: [106..107]
 r128: [101..102]
 r129: [90..94]
 r130: [92..93]
 r131: [90..91]
 r132: [77..87]
 r133: [66..70]
 r134: [66..67]
 r135: [63..65]
 r136: [59..64]
 r137: [61..62]
 r138: [57..60]
 r139: [57..58]
 r140: [55..56]
 r141: [53..54]
 r142: [51..51] [44..46] [39..39] [34..34] [29..29] [24..24] [19..19] [14..14] [9..9] [2..4]
 r143: [0..1]
 r144: [219..220]
 r145: [212..213]
 r146: [210..211]
 r147: [193..194]
 r148: [189..190]
 r149: [187..188]
 r150: [172..173]
 r151: [160..161]
 r152: [153..154]
 r153: [150..151]
 r154: [143..144]
 r155: [135..136]
 r156: [127..128]
 r157: [115..116]
 r158: [110..111]
 r159: [104..105]
 r160: [99..100]
 r161: [97..98]
 r162: [95..96]
 r163: [88..89]
 r164: [82..83]
 r165: [84..86]
 r166: [75..78]
 r167: [73..76]
 r168: [68..69]
 r172: [83..85]
 r173: [79..81]
 r174: [71..74]
Compressing live ranges: from 222 to 168 - 75%
Ranges after the compression:
 r82: [32..167] [29..30] [25..26] [22..23] [19..20] [16..17] [13..14] [10..11] [7..8] [4..5]
 r83: [164..165]
 r84: [162..163]
 r85: [156..157]
 r86: [154..155]
 r87: [152..153]
 r88: [25..26]
 r89: [150..151]
 r90: [148..149]
 r91: [22..23]
 r92: [146..147]
 r93: [146..147]
 r94: [19..20]
 r95: [140..141]
 r96: [138..139]
 r97: [132..137]
 r98: [136..137]
 r99: [134..135]
 r100: [132..133]
 r101: [16..17]
 r102: [128..129]
 r103: [126..127]
 r104: [124..125]
 r105: [122..123]
 r106: [118..119]
 r107: [116..117]
 r108: [108..113]
 r109: [110..111]
 r110: [108..109]
 r111: [13..14]
 r112: [102..105]
 r113: [104..105]
 r114: [102..103]
 r115: [98..99]
 r116: [10..11]
 r117: [96..97]
 r118: [7..8]
 r119: [92..93]
 r120: [90..91]
 r121: [88..89]
 r122: [29..30]
 r123: [86..87]
 r124: [4..5]
 r125: [82..83]
 r126: [78..79]
 r127: [76..77]
 r128: [72..73]
 r129: [62..65]
 r130: [64..65]
 r131: [62..63]
 r132: [52..59]
 r133: [44..47]
 r134: [44..45]
 r135: [42..43]
 r136: [38..43]
 r137: [40..41]
 r138: [36..39]
 r139: [36..37]
 r140: [34..35]
 r141: [32..33]
 r142: [31..31] [27..28] [24..24] [21..21] [18..18] [15..15] [12..12] [9..9] [6..6] [2..3]
 r143: [0..1]
 r144: [166..167]
 r145: [160..161]
 r146: [158..159]
 r147: [146..147]
 r148: [144..145]
 r149: [142..143]
 r150: [130..131]
 r151: [120..121]
 r152: [114..115]
 r153: [112..113]
 r154: [106..107]
 r155: [100..101]
 r156: [94..95]
 r157: [84..85]
 r158: [80..81]
 r159: [74..75]
 r160: [70..71]
 r161: [68..69]
 r162: [66..67]
 r163: [60..61]
 r164: [56..57]
 r165: [58..59]
 r166: [50..53]
 r167: [48..51]
 r168: [46..47]
 r172: [57..59]
 r173: [54..55]
 r174: [48..49]

********** Assignment #1: **********

	 Assigning to 172 (cl=AREG, orig=170, freq=2000, tfirst=172, tfreq=2000)...
	   Assign 0 to reload r172 (freq=2000)
	 Assigning to 173 (cl=GENERAL_REGS, orig=164, freq=3000, tfirst=173, tfreq=3000)...
	   Assign 0 to reload r173 (freq=3000)
	 Assigning to 174 (cl=GENERAL_REGS, orig=166, freq=3000, tfirst=174, tfreq=3000)...
	   Assign 0 to reload r174 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 387
changing reg in insn 350
changing reg in insn 345
changing reg in insn 331
changing reg in insn 324
changing reg in insn 313
changing reg in insn 302
changing reg in insn 300
changing reg in insn 282
changing reg in insn 277
changing reg in insn 271
changing reg in insn 253
changing reg in insn 248
changing reg in insn 242
changing reg in insn 225
changing reg in insn 220
changing reg in insn 214
changing reg in insn 200
changing reg in insn 195
changing reg in insn 190
changing reg in insn 164
changing reg in insn 159
changing reg in insn 154
changing reg in insn 145
changing reg in insn 137
changing reg in insn 122
changing reg in insn 117
changing reg in insn 106
changing reg in insn 89
changing reg in insn 63
changing reg in insn 42
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 50
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 60
changing reg in insn 62
changing reg in insn 71
changing reg in insn 75
changing reg in insn 72
changing reg in insn 76
changing reg in insn 86
changing reg in insn 88
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 104
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 105
changing reg in insn 114
changing reg in insn 116
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 133
changing reg in insn 133
changing reg in insn 134
changing reg in insn 138
changing reg in insn 139
changing reg in insn 139
changing reg in insn 140
changing reg in insn 144
changing reg in insn 148
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 148
changing reg in insn 151
changing reg in insn 153
changing reg in insn 173
changing reg in insn 176
changing reg in insn 174
changing reg in insn 175
changing reg in insn 175
changing reg in insn 176
changing reg in insn 180
changing reg in insn 183
changing reg in insn 187
changing reg in insn 189
changing reg in insn 208
changing reg in insn 209
changing reg in insn 217
changing reg in insn 219
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 236
changing reg in insn 236
changing reg in insn 237
changing reg in insn 245
changing reg in insn 247
changing reg in insn 265
changing reg in insn 266
changing reg in insn 274
changing reg in insn 276
changing reg in insn 291
changing reg in insn 292
changing reg in insn 296
changing reg in insn 297
changing reg in insn 297
changing reg in insn 299
changing reg in insn 307
changing reg in insn 308
changing reg in insn 320
changing reg in insn 323
changing reg in insn 321
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 323
changing reg in insn 325
changing reg in insn 329
changing reg in insn 333
changing reg in insn 332
changing reg in insn 333
changing reg in insn 333
changing reg in insn 335
changing reg in insn 334
changing reg in insn 338
changing reg in insn 336
changing reg in insn 335
changing reg in insn 336
changing reg in insn 337
changing reg in insn 339
changing reg in insn 338
changing reg in insn 339
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
changing reg in insn 344
changing reg in insn 353
changing reg in insn 285
changing reg in insn 256
changing reg in insn 228
changing reg in insn 203
changing reg in insn 167
changing reg in insn 125
changing reg in insn 92
changing reg in insn 66
changing reg in insn 45
changing reg in insn 30
changing reg in insn 11
changing reg in insn 358
changing reg in insn 358
changing reg in insn 362
changing reg in insn 5
changing reg in insn 6
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 73
changing reg in insn 74
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 82
changing reg in insn 109
changing reg in insn 110
changing reg in insn 137
changing reg in insn 138
changing reg in insn 143
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 172
changing reg in insn 173
changing reg in insn 179
changing reg in insn 180
changing reg in insn 233
changing reg in insn 234
changing reg in insn 290
changing reg in insn 291
changing reg in insn 295
changing reg in insn 296
changing reg in insn 300
changing reg in insn 301
changing reg in insn 309
changing reg in insn 310
changing reg in insn 316
changing reg in insn 317
changing reg in insn 318
changing reg in insn 319
changing reg in insn 324
changing reg in insn 325
changing reg in insn 327
changing reg in insn 326
changing reg in insn 327
changing reg in insn 329
changing reg in insn 330
changing reg in insn 331
changing reg in insn 332
deleting insn with uid = 24.
deleting insn with uid = 42.
deleting insn with uid = 56.
deleting insn with uid = 63.
deleting insn with uid = 81.
deleting insn with uid = 89.
deleting insn with uid = 106.
deleting insn with uid = 109.
deleting insn with uid = 117.
deleting insn with uid = 122.
deleting insn with uid = 154.
deleting insn with uid = 159.
deleting insn with uid = 164.
deleting insn with uid = 190.
deleting insn with uid = 195.
deleting insn with uid = 200.
deleting insn with uid = 214.
deleting insn with uid = 220.
deleting insn with uid = 225.
deleting insn with uid = 242.
deleting insn with uid = 248.
deleting insn with uid = 253.
deleting insn with uid = 265.
deleting insn with uid = 271.
deleting insn with uid = 277.
deleting insn with uid = 282.
deleting insn with uid = 302.
deleting insn with uid = 313.
deleting insn with uid = 391.
deleting insn with uid = 392.
deleting insn with uid = 335.
deleting insn with uid = 345.
deleting insn with uid = 350.
deleting insn with uid = 358.
deleting insn with uid = 362.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 155.
verify found no changes in insn with uid = 160.
verify found no changes in insn with uid = 165.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 196.
verify found no changes in insn with uid = 201.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 226.
verify found no changes in insn with uid = 243.
verify found no changes in insn with uid = 249.
verify found no changes in insn with uid = 254.
verify found no changes in insn with uid = 263.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 278.
verify found no changes in insn with uid = 283.
verify found no changes in insn with uid = 303.
verify found no changes in insn with uid = 314.
verify found no changes in insn with uid = 346.
verify found no changes in insn with uid = 351.


sys_rmdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={110d,76u} r1={41d,11u} r2={33d,4u} r3={1d,31u} r7={95d,269u} r8={29d} r9={29d} r10={29d} r11={29d} r12={29d} r13={29d} r14={29d} r15={29d} r17={114d,15u} r18={29d} r20={29d} r21={29d} r22={29d} r23={29d} r24={29d} r25={29d} r26={29d} r27={29d} r28={29d} r29={29d} r30={29d} r31={29d} r32={29d} r33={29d} r34={29d} r35={29d} r36={29d} r37={29d} r38={29d} r39={29d} r40={29d} r41={29d} r42={29d} r43={29d} r44={29d} r45={29d} r46={29d} r47={29d} r48={29d} r49={29d} r50={29d} r51={29d} r52={29d} r53={29d} r54={29d} r55={29d} r56={29d} r57={29d} r58={29d} r59={29d} r60={29d} r61={29d} r62={29d} r63={29d} r64={29d} r65={29d} r66={29d} r67={29d} r68={29d} r69={29d} r70={29d} r71={29d} r72={29d} r73={29d} r74={29d} r75={29d} 
;;    total ref usage 2685{2279d,406u,0e} in 270{241 regular + 29 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 387 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 387 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 387 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [144])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":705:10 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 current.161_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [144]) [6 current+0 S4 A32])) "fs/namei.c":705:10 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:83 current.161_1 ] [83])
                (const_int 578 [0x242])) [4 current.161_1->euid+0 S2 A16])) "fs/namei.c":705:10 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "fs/namei.c":705:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "fs/namei.c":705:8 806 {*jcc}
     (nil)
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 365 3 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":706:16 75 {*movsi_internal}
     (nil))
(jump_insn 365 11 366 3 (set (pc)
        (label_ref 356)) "fs/namei.c":706:16 807 {jump}
     (nil)
 -> 356)
(barrier 366 365 14)
(code_label 14 366 15 4 154 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":707:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 0 ax [145])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":707:17 209 {*addsi_1}
     (nil))
(insn 18 17 19 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [26  S4 A32])
        (reg:SI 0 ax [145])) "fs/namei.c":707:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:SI 0 ax [146])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":707:17 209 {*addsi_1}
     (nil))
(insn 20 19 21 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [25  S4 A32])
        (reg:SI 0 ax [146])) "fs/namei.c":707:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 60 [0x3c])) [8 name+0 S4 A32])) "fs/namei.c":707:17 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("dir_namei") [flags 0x3]  <function_decl 0x7f2fcf349b00 dir_namei>) [0 dir_namei S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":707:17 823 {*call_value}
     (nil)
    (nil))
(insn 23 22 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":707:17 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 25 23 26 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])
        (reg/f:SI 0 ax [orig:85 _3 ] [85])) "fs/namei.c":707:15 75 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 0 ax [orig:86 dir.162_4 ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":707:15 75 {*movsi_internal}
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:86 dir.162_4 ] [86])
            (const_int 0 [0]))) "fs/namei.c":707:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "fs/namei.c":707:8 806 {*jcc}
     (nil)
 -> 33)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 367 5 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":708:16 75 {*movsi_internal}
     (nil))
(jump_insn 367 30 368 5 (set (pc)
        (label_ref 356)) "fs/namei.c":708:16 807 {jump}
     (nil)
 -> 356)
(barrier 368 367 33)
(code_label 33 368 34 6 156 (nil) [1 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 0 ax [orig:87 namelen.163_5 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 namelen+0 S4 A32])) "fs/namei.c":709:9 75 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 namelen.163_5 ] [87])
            (const_int 0 [0]))) "fs/namei.c":709:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "fs/namei.c":709:8 806 {*jcc}
     (nil)
 -> 48)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 0 ax [orig:88 dir.164_6 ] [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":710:9 75 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":710:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 41 40 43 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:88 dir.164_6 ] [88])) "fs/namei.c":710:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 43 41 44 7 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":710:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 44 43 45 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":710:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 44 369 7 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":711:16 75 {*movsi_internal}
     (nil))
(jump_insn 369 45 370 7 (set (pc)
        (label_ref 356)) "fs/namei.c":711:16 807 {jump}
     (nil)
 -> 356)
(barrier 370 369 48)
(code_label 48 370 49 8 157 (nil) [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg/f:SI 0 ax [orig:89 dir.165_7 ] [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":713:10 75 {*movsi_internal}
     (nil))
(insn 51 50 52 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":713:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 52 51 53 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (const_int 2 [0x2])) "fs/namei.c":713:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 53 52 54 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:89 dir.165_7 ] [89])) "fs/namei.c":713:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("permission") [flags 0x3]  <function_decl 0x7f2fcf349300 permission>) [0 permission S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":713:10 823 {*call_value}
     (nil)
    (nil))
(insn 55 54 57 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":713:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 57 55 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "fs/namei.c":713:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "fs/namei.c":713:8 806 {*jcc}
     (nil)
 -> 69)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:SI 0 ax [orig:91 dir.166_9 ] [91])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":714:9 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":714:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 62 61 64 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:91 dir.166_9 ] [91])) "fs/namei.c":714:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 64 62 65 9 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":714:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 65 64 66 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":714:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 66 65 371 9 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":715:16 75 {*movsi_internal}
     (nil))
(jump_insn 371 66 372 9 (set (pc)
        (label_ref 356)) "fs/namei.c":715:16 807 {jump}
     (nil)
 -> 356)
(barrier 372 371 69)
(code_label 69 372 70 10 158 (nil) [1 uses])
(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 10 (set (reg:SI 1 dx [orig:92 namelen.167_10 ] [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [11 namelen+0 S4 A32])) "fs/namei.c":717:10 75 {*movsi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:SI 0 ax [orig:93 basename.168_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [8 basename+0 S4 A32])) "fs/namei.c":717:10 75 {*movsi_internal}
     (nil))
(insn 73 72 74 10 (parallel [
            (set (reg:SI 2 cx [147])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":717:10 209 {*addsi_1}
     (nil))
(insn 74 73 75 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [23  S4 A32])
        (reg:SI 2 cx [147])) "fs/namei.c":717:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 75 74 76 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:92 namelen.167_10 ] [92])) "fs/namei.c":717:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 76 75 77 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [orig:93 basename.168_11 ] [93])) "fs/namei.c":717:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 77 76 78 10 (parallel [
            (set (reg:SI 0 ax [148])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":717:10 209 {*addsi_1}
     (nil))
(insn 78 77 79 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [22  S4 A32])
        (reg:SI 0 ax [148])) "fs/namei.c":717:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 79 78 80 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("find_entry") [flags 0x3]  <function_decl 0x7f2fcf349700 find_entry>) [0 find_entry S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":717:10 823 {*call_value}
     (nil)
    (nil))
(insn 80 79 82 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":717:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 82 80 83 10 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])
        (reg:SI 0 ax [149])) "fs/namei.c":717:10 75 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [9 bh+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":718:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 84 83 85 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "fs/namei.c":718:8 806 {*jcc}
     (nil)
 -> 95)
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (set (reg/f:SI 0 ax [orig:94 dir.169_12 ] [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":719:9 75 {*movsi_internal}
     (nil))
(insn 87 86 88 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":719:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 88 87 90 11 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:94 dir.169_12 ] [94])) "fs/namei.c":719:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 90 88 91 11 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":719:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 91 90 92 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":719:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 92 91 373 11 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -2 [0xfffffffffffffffe])) "fs/namei.c":720:16 75 {*movsi_internal}
     (nil))
(jump_insn 373 92 374 11 (set (pc)
        (label_ref 356)) "fs/namei.c":720:16 807 {jump}
     (nil)
 -> 356)
(barrier 374 373 95)
(code_label 95 374 96 12 159 (nil) [1 uses])
(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 12 (set (reg/f:SI 0 ax [orig:95 de.170_13 ] [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 de+0 S4 A32])) "fs/namei.c":722:38 75 {*movsi_internal}
     (nil))
(insn 98 97 99 12 (set (reg:HI 0 ax [orig:96 _14 ] [96])
        (mem:HI (reg/f:SI 0 ax [orig:95 de.170_13 ] [95]) [4 de.170_13->inode+0 S2 A16])) "fs/namei.c":722:38 76 {*movhi_internal}
     (nil))
(insn 99 98 100 12 (set (reg:SI 1 dx [orig:97 _15 ] [97])
        (zero_extend:SI (reg:HI 0 ax [orig:96 _14 ] [96]))) "fs/namei.c":722:19 144 {*zero_extendhisi2}
     (nil))
(insn 100 99 101 12 (set (reg/f:SI 0 ax [orig:98 dir.171_16 ] [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":722:27 75 {*movsi_internal}
     (nil))
(insn 101 100 102 12 (set (reg:HI 0 ax [orig:99 _17 ] [99])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:98 dir.171_16 ] [98])
                (const_int 44 [0x2c])) [4 dir.171_16->i_dev+0 S2 A32])) "fs/namei.c":722:27 76 {*movhi_internal}
     (nil))
(insn 102 101 103 12 (set (reg:SI 0 ax [orig:100 _18 ] [100])
        (zero_extend:SI (reg:HI 0 ax [orig:99 _17 ] [99]))) "fs/namei.c":722:19 144 {*zero_extendhisi2}
     (nil))
(insn 103 102 104 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":722:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 104 103 105 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 1 dx [orig:97 _15 ] [97])) "fs/namei.c":722:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 105 104 107 12 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:100 _18 ] [100])) "fs/namei.c":722:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 107 105 108 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("iget") [flags 0x41]  <function_decl 0x7f2fcf30e900 iget>) [0 iget S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":722:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 108 107 110 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":722:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 110 108 111 12 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])
        (reg:SI 0 ax [150])) "fs/namei.c":722:19 75 {*movsi_internal}
     (nil))
(insn 111 110 112 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [2 inode+0 S4 A32])
            (const_int 0 [0]))) "fs/namei.c":722:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 112 111 113 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "fs/namei.c":722:8 806 {*jcc}
     (nil)
 -> 128)
(note 113 112 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 13 (set (reg/f:SI 0 ax [orig:101 dir.172_19 ] [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":723:9 75 {*movsi_internal}
     (nil))
(insn 115 114 116 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":723:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 116 115 118 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:101 dir.172_19 ] [101])) "fs/namei.c":723:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 118 116 119 13 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":723:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 119 118 120 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":723:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 120 119 121 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":724:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 121 120 123 13 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":724:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 123 121 124 13 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":724:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 124 123 125 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":724:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 125 124 375 13 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":725:16 75 {*movsi_internal}
     (nil))
(jump_insn 375 125 376 13 (set (pc)
        (label_ref 356)) "fs/namei.c":725:16 807 {jump}
     (nil)
 -> 356)
(barrier 376 375 128)
(code_label 128 376 129 14 160 (nil) [1 uses])
(note 129 128 130 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 14 (set (reg/f:SI 0 ax [orig:102 dir.173_20 ] [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":727:13 75 {*movsi_internal}
     (nil))
(insn 131 130 132 14 (set (reg:HI 0 ax [orig:103 _21 ] [103])
        (mem:HI (reg/f:SI 0 ax [orig:102 dir.173_20 ] [102]) [4 dir.173_20->i_mode+0 S2 A32])) "fs/namei.c":727:13 76 {*movhi_internal}
     (nil))
(insn 132 131 133 14 (set (reg:SI 0 ax [orig:104 _22 ] [104])
        (zero_extend:SI (reg:HI 0 ax [orig:103 _21 ] [103]))) "fs/namei.c":727:22 144 {*zero_extendhisi2}
     (nil))
(insn 133 132 134 14 (parallel [
            (set (reg:SI 0 ax [orig:105 _23 ] [105])
                (and:SI (reg:SI 0 ax [orig:104 _22 ] [104])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":727:22 490 {*andsi_1}
     (nil))
(insn 134 133 135 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:105 _23 ] [105])
            (const_int 0 [0]))) "fs/namei.c":727:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 135 134 136 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "fs/namei.c":727:8 806 {*jcc}
     (nil)
 -> 170)
(note 136 135 137 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 15 (set (reg/f:SI 0 ax [151])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":727:43 75 {*movsi_internal}
     (nil))
(insn 138 137 139 15 (set (reg/f:SI 0 ax [orig:106 current.174_24 ] [106])
        (mem/f/c:SI (reg/f:SI 0 ax [151]) [6 current+0 S4 A32])) "fs/namei.c":727:43 75 {*movsi_internal}
     (nil))
(insn 139 138 140 15 (set (reg:HI 0 ax [orig:107 _25 ] [107])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:106 current.174_24 ] [106])
                (const_int 578 [0x242])) [4 current.174_24->euid+0 S2 A16])) "fs/namei.c":727:43 76 {*movhi_internal}
     (nil))
(insn 140 139 141 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:107 _25 ] [107])
            (const_int 0 [0]))) "fs/namei.c":727:33 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 141 140 142 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "fs/namei.c":727:33 806 {*jcc}
     (nil)
 -> 170)
(note 142 141 143 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 16 (set (reg/f:SI 0 ax [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":728:15 75 {*movsi_internal}
     (nil))
(insn 144 143 145 16 (set (reg:HI 1 dx [orig:108 _26 ] [108])
        (mem:HI (plus:SI (reg/f:SI 0 ax [152])
                (const_int 2 [0x2])) [4 inode_72->i_uid+0 S2 A16])) "fs/namei.c":728:15 76 {*movhi_internal}
     (nil))
(insn 145 144 146 16 (set (reg/f:SI 0 ax [153])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7f2fcf32e120 current>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":728:33 75 {*movsi_internal}
     (nil))
(insn 146 145 147 16 (set (reg/f:SI 0 ax [orig:109 current.175_27 ] [109])
        (mem/f/c:SI (reg/f:SI 0 ax [153]) [6 current+0 S4 A32])) "fs/namei.c":728:33 75 {*movsi_internal}
     (nil))
(insn 147 146 148 16 (set (reg:HI 0 ax [orig:110 _28 ] [110])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:109 current.175_27 ] [109])
                (const_int 578 [0x242])) [4 current.175_27->euid+0 S2 A16])) "fs/namei.c":728:33 76 {*movhi_internal}
     (nil))
(insn 148 147 149 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:108 _26 ] [108])
            (reg:HI 0 ax [orig:110 _28 ] [110]))) "fs/namei.c":727:50 10 {*cmphi_1}
     (nil))
(jump_insn 149 148 150 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "fs/namei.c":727:50 806 {*jcc}
     (nil)
 -> 170)
(note 150 149 151 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 17 (set (reg/f:SI 0 ax [orig:111 dir.176_29 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":729:9 75 {*movsi_internal}
     (nil))
(insn 152 151 153 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":729:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 153 152 155 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:111 dir.176_29 ] [111])) "fs/namei.c":729:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 155 153 156 17 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":729:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 156 155 157 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":729:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 157 156 158 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":730:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 158 157 160 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":730:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 160 158 161 17 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":730:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 161 160 162 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":730:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 162 161 163 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":731:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 163 162 165 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":731:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 165 163 166 17 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":731:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 166 165 167 17 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":731:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 167 166 377 17 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":732:16 75 {*movsi_internal}
     (nil))
(jump_insn 377 167 378 17 (set (pc)
        (label_ref 356)) "fs/namei.c":732:16 807 {jump}
     (nil)
 -> 356)
(barrier 378 377 170)
(code_label 170 378 171 18 161 (nil) [3 uses])
(note 171 170 172 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 18 (set (reg/f:SI 0 ax [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":734:14 75 {*movsi_internal}
     (nil))
(insn 173 172 174 18 (set (reg:HI 1 dx [orig:112 _30 ] [112])
        (mem:HI (plus:SI (reg/f:SI 0 ax [154])
                (const_int 44 [0x2c])) [4 inode_72->i_dev+0 S2 A32])) "fs/namei.c":734:14 76 {*movhi_internal}
     (nil))
(insn 174 173 175 18 (set (reg/f:SI 0 ax [orig:113 dir.177_31 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":734:28 75 {*movsi_internal}
     (nil))
(insn 175 174 176 18 (set (reg:HI 0 ax [orig:114 _32 ] [114])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:113 dir.177_31 ] [113])
                (const_int 44 [0x2c])) [4 dir.177_31->i_dev+0 S2 A32])) "fs/namei.c":734:28 76 {*movhi_internal}
     (nil))
(insn 176 175 177 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:112 _30 ] [112])
            (reg:HI 0 ax [orig:114 _32 ] [114]))) "fs/namei.c":734:8 10 {*cmphi_1}
     (nil))
(jump_insn 177 176 178 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "fs/namei.c":734:8 806 {*jcc}
     (nil)
 -> 185)
(note 178 177 179 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 19 (set (reg/f:SI 0 ax [155])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":734:44 75 {*movsi_internal}
     (nil))
(insn 180 179 183 19 (set (reg:HI 0 ax [orig:115 _33 ] [115])
        (mem:HI (plus:SI (reg/f:SI 0 ax [155])
                (const_int 48 [0x30])) [4 inode_72->i_count+0 S2 A32])) "fs/namei.c":734:44 76 {*movhi_internal}
     (nil))
(insn 183 180 184 19 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 0 ax [orig:115 _33 ] [115])
            (const_int 1 [0x1]))) "fs/namei.c":734:36 10 {*cmphi_1}
     (nil))
(jump_insn 184 183 185 19 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "fs/namei.c":734:36 806 {*jcc}
     (nil)
 -> 206)
(code_label 185 184 186 20 162 (nil) [1 uses])
(note 186 185 187 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 20 (set (reg/f:SI 0 ax [orig:116 dir.178_34 ] [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":735:9 75 {*movsi_internal}
     (nil))
(insn 188 187 189 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":735:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 189 188 191 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:116 dir.178_34 ] [116])) "fs/namei.c":735:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 191 189 192 20 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":735:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 192 191 193 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":735:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 193 192 194 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":736:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 194 193 196 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":736:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 196 194 197 20 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":736:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 197 196 198 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":736:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 198 197 199 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":737:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 199 198 201 20 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":737:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 201 199 202 20 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":737:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 202 201 203 20 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":737:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 203 202 379 20 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":738:16 75 {*movsi_internal}
     (nil))
(jump_insn 379 203 380 20 (set (pc)
        (label_ref 356)) "fs/namei.c":738:16 807 {jump}
     (nil)
 -> 356)
(barrier 380 379 206)
(code_label 206 380 207 21 163 (nil) [1 uses])
(note 207 206 208 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 21 (set (reg/f:SI 0 ax [orig:117 dir.179_35 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":740:15 75 {*movsi_internal}
     (nil))
(insn 209 208 210 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [2 inode+0 S4 A32])
            (reg/f:SI 0 ax [orig:117 dir.179_35 ] [117]))) "fs/namei.c":740:8 11 {*cmpsi_1}
     (nil))
(jump_insn 210 209 211 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) "fs/namei.c":740:8 806 {*jcc}
     (nil)
 -> 231)
(note 211 210 212 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":741:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 213 212 215 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":741:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 215 213 216 22 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":741:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 216 215 217 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":741:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 217 216 218 22 (set (reg/f:SI 0 ax [orig:118 dir.180_36 ] [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":742:9 75 {*movsi_internal}
     (nil))
(insn 218 217 219 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":742:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 219 218 221 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:118 dir.180_36 ] [118])) "fs/namei.c":742:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 221 219 222 22 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":742:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 222 221 223 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":742:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 223 222 224 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":743:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 224 223 226 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":743:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 226 224 227 22 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":743:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 227 226 228 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":743:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 228 227 381 22 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -1 [0xffffffffffffffff])) "fs/namei.c":744:16 75 {*movsi_internal}
     (nil))
(jump_insn 381 228 382 22 (set (pc)
        (label_ref 356)) "fs/namei.c":744:16 807 {jump}
     (nil)
 -> 356)
(barrier 382 381 231)
(code_label 231 382 232 23 164 (nil) [1 uses])
(note 232 231 233 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 23 (set (reg/f:SI 0 ax [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":746:10 75 {*movsi_internal}
     (nil))
(insn 234 233 235 23 (set (reg:HI 0 ax [orig:119 _37 ] [119])
        (mem:HI (reg/f:SI 0 ax [156]) [4 inode_72->i_mode+0 S2 A32])) "fs/namei.c":746:10 76 {*movhi_internal}
     (nil))
(insn 235 234 236 23 (set (reg:SI 0 ax [orig:120 _38 ] [120])
        (zero_extend:SI (reg:HI 0 ax [orig:119 _37 ] [119]))) "fs/namei.c":746:10 144 {*zero_extendhisi2}
     (nil))
(insn 236 235 237 23 (parallel [
            (set (reg:SI 0 ax [orig:121 _39 ] [121])
                (and:SI (reg:SI 0 ax [orig:120 _38 ] [120])
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":746:10 490 {*andsi_1}
     (nil))
(insn 237 236 238 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:121 _39 ] [121])
            (const_int 16384 [0x4000]))) "fs/namei.c":746:8 11 {*cmpsi_1}
     (nil))
(jump_insn 238 237 239 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) "fs/namei.c":746:8 806 {*jcc}
     (nil)
 -> 259)
(note 239 238 240 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":747:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 241 240 243 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":747:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 243 241 244 24 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":747:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 244 243 245 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":747:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 245 244 246 24 (set (reg/f:SI 0 ax [orig:122 dir.181_40 ] [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":748:9 75 {*movsi_internal}
     (nil))
(insn 246 245 247 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":748:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 247 246 249 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:122 dir.181_40 ] [122])) "fs/namei.c":748:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 249 247 250 24 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":748:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 250 249 251 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":748:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 251 250 252 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":749:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 252 251 254 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":749:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 254 252 255 24 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":749:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 255 254 256 24 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":749:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 256 255 383 24 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -20 [0xffffffffffffffec])) "fs/namei.c":750:16 75 {*movsi_internal}
     (nil))
(jump_insn 383 256 384 24 (set (pc)
        (label_ref 356)) "fs/namei.c":750:16 807 {jump}
     (nil)
 -> 356)
(barrier 384 383 259)
(code_label 259 384 260 25 165 (nil) [1 uses])
(note 260 259 261 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":752:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 262 261 263 25 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":752:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 263 262 264 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("empty_dir") [flags 0x3]  <function_decl 0x7f2fcf35ea00 empty_dir>) [0 empty_dir S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":752:10 823 {*call_value}
     (nil)
    (nil))
(insn 264 263 266 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":752:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 266 264 267 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:123 _41 ] [123])
            (const_int 0 [0]))) "fs/namei.c":752:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 267 266 268 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) "fs/namei.c":752:8 806 {*jcc}
     (nil)
 -> 288)
(note 268 267 269 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":753:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 270 269 272 26 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":753:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 272 270 273 26 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":753:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 273 272 274 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":753:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 274 273 275 26 (set (reg/f:SI 0 ax [orig:124 dir.182_42 ] [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":754:9 75 {*movsi_internal}
     (nil))
(insn 275 274 276 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":754:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 276 275 278 26 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:124 dir.182_42 ] [124])) "fs/namei.c":754:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 278 276 279 26 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":754:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 279 278 280 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":754:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 280 279 281 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":755:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 281 280 283 26 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":755:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 283 281 284 26 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":755:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 284 283 285 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":755:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 285 284 385 26 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int -39 [0xffffffffffffffd9])) "fs/namei.c":756:16 75 {*movsi_internal}
     (nil))
(jump_insn 385 285 386 26 (set (pc)
        (label_ref 356)) "fs/namei.c":756:16 807 {jump}
     (nil)
 -> 356)
(barrier 386 385 288)
(code_label 288 386 289 27 166 (nil) [1 uses])
(note 289 288 290 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 27 (set (reg/f:SI 0 ax [157])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":758:14 75 {*movsi_internal}
     (nil))
(insn 291 290 292 27 (set (reg:QI 0 ax [orig:125 _43 ] [125])
        (mem:QI (plus:SI (reg/f:SI 0 ax [157])
                (const_int 13 [0xd])) [0 inode_72->i_nlinks+0 S1 A8])) "fs/namei.c":758:14 77 {*movqi_internal}
     (nil))
(insn 292 291 293 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:125 _43 ] [125])
            (const_int 2 [0x2]))) "fs/namei.c":758:8 9 {*cmpqi_1}
     (nil))
(jump_insn 293 292 294 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) "fs/namei.c":758:8 806 {*jcc}
     (nil)
 -> 305)
(note 294 293 295 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 28 (set (reg/f:SI 0 ax [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":759:60 75 {*movsi_internal}
     (nil))
(insn 296 295 297 28 (set (reg:QI 0 ax [orig:126 _44 ] [126])
        (mem:QI (plus:SI (reg/f:SI 0 ax [158])
                (const_int 13 [0xd])) [0 inode_72->i_nlinks+0 S1 A8])) "fs/namei.c":759:60 77 {*movqi_internal}
     (nil))
(insn 297 296 298 28 (set (reg:SI 0 ax [orig:127 _45 ] [127])
        (zero_extend:SI (reg:QI 0 ax [orig:126 _44 ] [126]))) "fs/namei.c":759:9 143 {*zero_extendqisi2}
     (nil))
(insn 298 297 299 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":759:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 299 298 300 28 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [11  S4 A32])
        (reg:SI 0 ax [orig:127 _45 ] [127])) "fs/namei.c":759:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 300 299 301 28 (set (reg/f:SI 0 ax [159])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7f2fcf01ac60 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "fs/namei.c":759:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x7f2fcf01ac60 *.LC8>)
        (nil)))
(insn 301 300 303 28 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg/f:SI 0 ax [159])) "fs/namei.c":759:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 303 301 304 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7f2fcf338900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "fs/namei.c":759:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 304 303 305 28 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":759:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 305 304 306 29 167 (nil) [1 uses])
(note 306 305 307 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 29 (set (reg/f:SI 0 ax [orig:128 de.183_46 ] [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [1 de+0 S4 A32])) "fs/namei.c":760:7 75 {*movsi_internal}
     (nil))
(insn 308 307 309 29 (set (mem:HI (reg/f:SI 0 ax [orig:128 de.183_46 ] [128]) [4 de.183_46->inode+0 S2 A16])
        (const_int 0 [0])) "fs/namei.c":760:15 76 {*movhi_internal}
     (nil))
(insn 309 308 310 29 (set (reg/f:SI 0 ax [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [9 bh+0 S4 A32])) "fs/namei.c":761:16 75 {*movsi_internal}
     (nil))
(insn 310 309 311 29 (set (mem:QI (plus:SI (reg/f:SI 0 ax [160])
                (const_int 11 [0xb])) [0 bh_70->b_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":761:16 77 {*movqi_internal}
     (nil))
(insn 311 310 312 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":762:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 312 311 314 29 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [9  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [9 bh+0 S4 A32])) "fs/namei.c":762:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 314 312 315 29 (call (mem:QI (symbol_ref:SI ("brelse") [flags 0x41]  <function_decl 0x7f2fcf30e200 brelse>) [0 brelse S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":762:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 315 314 316 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":762:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 316 315 317 29 (set (reg/f:SI 0 ax [161])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":763:21 75 {*movsi_internal}
     (nil))
(insn 317 316 318 29 (set (mem:QI (plus:SI (reg/f:SI 0 ax [161])
                (const_int 13 [0xd])) [0 inode_72->i_nlinks+0 S1 A8])
        (const_int 0 [0])) "fs/namei.c":763:21 77 {*movqi_internal}
     (nil))
(insn 318 317 319 29 (set (reg/f:SI 0 ax [162])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 inode+0 S4 A32])) "fs/namei.c":764:19 75 {*movsi_internal}
     (nil))
(insn 319 318 320 29 (set (mem:QI (plus:SI (reg/f:SI 0 ax [162])
                (const_int 51 [0x33])) [0 inode_72->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":764:19 77 {*movqi_internal}
     (nil))
(insn 320 319 321 29 (set (reg/f:SI 0 ax [orig:129 dir.184_47 ] [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":765:8 75 {*movsi_internal}
     (nil))
(insn 321 320 322 29 (set (reg:QI 1 dx [orig:130 _48 ] [130])
        (mem:QI (plus:SI (reg/f:SI 0 ax [orig:129 dir.184_47 ] [129])
                (const_int 13 [0xd])) [0 dir.184_47->i_nlinks+0 S1 A8])) "fs/namei.c":765:8 77 {*movqi_internal}
     (nil))
(insn 322 321 323 29 (parallel [
            (set (reg:QI 1 dx [orig:131 _50 ] [131])
                (plus:QI (reg:QI 1 dx [orig:130 _48 ] [130])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":765:18 213 {*addqi_1}
     (nil))
(insn 323 322 324 29 (set (mem:QI (plus:SI (reg/f:SI 0 ax [orig:129 dir.184_47 ] [129])
                (const_int 13 [0xd])) [0 dir.184_47->i_nlinks+0 S1 A8])
        (reg:QI 1 dx [orig:131 _50 ] [131])) "fs/namei.c":765:18 77 {*movqi_internal}
     (nil))
(insn 324 323 325 29 (set (reg/f:SI 0 ax [163])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x7f2fcf32e360 jiffies>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 325 324 326 29 (set (reg:SI 2 cx [orig:132 jiffies.185_51 ] [132])
        (mem/v/c:SI (reg/f:SI 0 ax [163]) [5 jiffies+0 S4 A32])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 326 325 389 29 (set (reg:SI 1 dx [165])
        (const_int 1374389535 [0x51eb851f])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 389 326 327 29 (set (reg:SI 0 ax [170])
        (reg:SI 2 cx [orig:132 jiffies.185_51 ] [132])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 327 389 390 29 (parallel [
            (set (reg:SI 1 dx [164])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [170]))
                            (sign_extend:DI (reg:SI 1 dx [165])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [170]))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":766:35 435 {*smulsi3_highpart_1}
     (nil))
(insn 390 327 328 29 (set (reg:SI 0 ax [164])
        (reg:SI 1 dx [164])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 328 390 329 29 (parallel [
            (set (reg:SI 0 ax [164])
                (ashiftrt:SI (reg:SI 0 ax [164])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":766:35 702 {*ashrsi3_1}
     (nil))
(insn 329 328 330 29 (parallel [
            (set (reg:SI 2 cx [167])
                (ashiftrt:SI (reg:SI 2 cx [orig:132 jiffies.185_51 ] [132])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":766:35 694 {ashrsi3_cvt}
     (nil))
(insn 330 329 393 29 (parallel [
            (set (reg:SI 0 ax [166])
                (minus:SI (reg:SI 0 ax [166])
                    (reg:SI 2 cx [167])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":766:35 282 {*subsi_1}
     (nil))
(insn 393 330 331 29 (set (reg:SI 1 dx [orig:133 _52 ] [133])
        (reg:SI 0 ax [166])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 331 393 332 29 (set (reg/f:SI 0 ax [168])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x7f2fcf32e3f0 startup_time>)
                        ] UNSPEC_GOT))) [12  S4 A8])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 332 331 333 29 (set (reg:SI 0 ax [orig:134 startup_time.186_53 ] [134])
        (mem/c:SI (reg/f:SI 0 ax [168]) [5 startup_time+0 S4 A32])) "fs/namei.c":766:35 75 {*movsi_internal}
     (nil))
(insn 333 332 334 29 (parallel [
            (set (reg:SI 1 dx [orig:135 _54 ] [135])
                (plus:SI (reg:SI 1 dx [orig:133 _52 ] [133])
                    (reg:SI 0 ax [orig:134 startup_time.186_53 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":766:35 209 {*addsi_1}
     (nil))
(insn 334 333 336 29 (set (reg/f:SI 0 ax [orig:136 dir.187_55 ] [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":766:23 75 {*movsi_internal}
     (nil))
(insn 336 334 337 29 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:136 dir.187_55 ] [136])
                (const_int 8 [0x8])) [5 dir.187_55->i_mtime+0 S4 A32])
        (reg:SI 1 dx [orig:137 _56 ] [137])) "fs/namei.c":766:33 75 {*movsi_internal}
     (nil))
(insn 337 336 338 29 (set (reg/f:SI 1 dx [orig:138 dir.188_57 ] [138])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":766:8 75 {*movsi_internal}
     (nil))
(insn 338 337 339 29 (set (reg:SI 0 ax [orig:139 _58 ] [139])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:136 dir.187_55 ] [136])
                (const_int 8 [0x8])) [5 dir.187_55->i_mtime+0 S4 A32])) "fs/namei.c":766:23 75 {*movsi_internal}
     (nil))
(insn 339 338 340 29 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:138 dir.188_57 ] [138])
                (const_int 40 [0x28])) [5 dir.188_57->i_ctime+0 S4 A32])
        (reg:SI 0 ax [orig:139 _58 ] [139])) "fs/namei.c":766:18 75 {*movsi_internal}
     (nil))
(insn 340 339 341 29 (set (reg/f:SI 0 ax [orig:140 dir.189_59 ] [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":767:8 75 {*movsi_internal}
     (nil))
(insn 341 340 342 29 (set (mem:QI (plus:SI (reg/f:SI 0 ax [orig:140 dir.189_59 ] [140])
                (const_int 51 [0x33])) [0 dir.189_59->i_dirt+0 S1 A8])
        (const_int 1 [0x1])) "fs/namei.c":767:17 77 {*movqi_internal}
     (nil))
(insn 342 341 343 29 (set (reg/f:SI 0 ax [orig:141 dir.190_60 ] [141])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 dir+0 S4 A32])) "fs/namei.c":768:5 75 {*movsi_internal}
     (nil))
(insn 343 342 344 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":768:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 344 343 346 29 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:141 dir.190_60 ] [141])) "fs/namei.c":768:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 346 344 347 29 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":768:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 347 346 348 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":768:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 348 347 349 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":769:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 349 348 351 29 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [2 inode+0 S4 A32])) "fs/namei.c":769:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 351 349 352 29 (call (mem:QI (symbol_ref:SI ("iput") [flags 0x41]  <function_decl 0x7f2fcf2d2d00 iput>) [0 iput S1 A8])
        (const_int 16 [0x10])) "fs/namei.c":769:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 352 351 353 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/namei.c":769:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 353 352 356 29 (set (reg:SI 0 ax [orig:142 _61 ] [142])
        (const_int 0 [0])) "fs/namei.c":770:12 75 {*movsi_internal}
     (nil))
(code_label 356 353 357 30 168 (nil) [11 uses])
(note 357 356 363 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 363 357 388 30 (use (reg/i:SI 0 ax)) "fs/namei.c":771:1 -1
     (nil))
(note 388 363 0 NOTE_INSN_DELETED)
