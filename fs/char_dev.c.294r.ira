
;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1321, cgraph_uid=2, symbol_order=1)

scanning new insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 5(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 18(l0): point = 14
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [7..8]
 a3(r86): [9..10]
 a4(r87): [11..12]
 a5(r82): [14..14]
Compressing live ranges: from 17 to 11 - 64%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r87): [8..9]
 a5(r82): [10..10]
  pref0:a0(r85)<-hr0@1500
  regions=1, blocks=3, points=11
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    5:r82  l0     0    2:r83  l0     3    1:r84  l0     0    0:r85  l0     0
    3:r86  l0     0    4:r87  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,2u} r17={2d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 31{16d,15u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 87)
        (mem/f/c:SI (reg/f:SI 16 argp) [1 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 86 [ _v ])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 87) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (expr_list:REG_DEAD (reg/f:SI 87)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 7 8 2 (set (reg/v:QI 83 [ _v ])
        (reg:QI 86 [ _v ])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86 [ _v ])
        (nil)))
(insn 8 5 11 2 (set (reg:QI 84 [ _4 ])
        (reg/v:QI 83 [ _v ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 83 [ _v ])
        (nil)))
(insn 11 8 15 2 (set (reg:QI 85 [ <retval> ])
        (reg:QI 84 [ _4 ])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84 [ _4 ])
        (nil)))
(insn 15 11 16 2 (set (reg/i:QI 0 ax)
        (reg:QI 85 [ <retval> ])) "include/asm/segment.h":10:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 85 [ <retval> ])
        (nil)))
(insn 16 15 0 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))

;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1326, cgraph_uid=3, symbol_order=2)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a0 (r85,l0) best Q_REGS, allocno Q_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a2 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a1(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 14(l0): point = 0
   Insn 10(l0): point = 3
   Insn 9(l0): point = 5
   Insn 8(l0): point = 7
   Insn 4(l0): point = 9
   Insn 3(l0): point = 11
   Insn 2(l0): point = 13
   Insn 15(l0): point = 15
 a0(r85): [4..7]
 a1(r86): [4..5]
 a2(r84): [10..11]
 a3(r83): [12..13]
 a4(r82): [15..15]
Compressing live ranges: from 18 to 7 - 38%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r86): [0..1]
 a2(r84): [2..3]
 a3(r83): [4..5]
 a4(r82): [6..6]
  regions=1, blocks=4, points=7
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    3:r83  l0     0    2:r84  l0     0    0:r85  l0     0
    1:r86  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,3u} r7={1d,3u} r16={1d,4u} r17={2d} r19={1d,5u} r82={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 33{14d,19u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(insn 2 15 3 2 (set (reg:SI 83)
        (mem/c:SI (reg/f:SI 16 argp) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (reg:QI 84)
        (subreg:QI (reg:SI 83) 0)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 83)
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])
        (reg:QI 84)) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 85)
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 86)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 85)
                    (mem:QI (reg/f:SI 86) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (expr_list:REG_DEAD (reg/f:SI 86)
        (expr_list:REG_DEAD (reg:QI 85)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))

;; Function rw_ram (rw_ram, funcdef_no=8, decl_uid=1368, cgraph_uid=9, symbol_order=8)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 8(l0): point = 4
   Insn 5(l0): point = 6
   Insn 15(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [8..8]
Compressing live ranges: from 11 to 5 - 45%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_ram

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 83 [ _1 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/char_dev.c":22:12 75 {*movsi_internal}
     (nil))
(insn 8 5 12 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _1 ])) "fs/char_dev.c":22:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/char_dev.c":23:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) "fs/char_dev.c":23:1 -1
     (nil))

;; Function rw_mem (rw_mem, funcdef_no=9, decl_uid=1374, cgraph_uid=10, symbol_order=9)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 8(l0): point = 4
   Insn 5(l0): point = 6
   Insn 15(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [8..8]
Compressing live ranges: from 11 to 5 - 45%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_mem

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 83 [ _1 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/char_dev.c":27:12 75 {*movsi_internal}
     (nil))
(insn 8 5 12 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _1 ])) "fs/char_dev.c":27:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/char_dev.c":28:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) "fs/char_dev.c":28:1 -1
     (nil))

;; Function rw_kmem (rw_kmem, funcdef_no=10, decl_uid=1380, cgraph_uid=11, symbol_order=10)

scanning new insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 8(l0): point = 4
   Insn 5(l0): point = 6
   Insn 15(l0): point = 8
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r82): [8..8]
Compressing live ranges: from 11 to 5 - 45%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..4]
  pref0:a0(r84)<-hr0@1500
  regions=1, blocks=3, points=5
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_kmem

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r19={1d,2u} r82={1d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 83 [ _1 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/char_dev.c":32:12 75 {*movsi_internal}
     (nil))
(insn 8 5 12 2 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _1 ])) "fs/char_dev.c":32:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/char_dev.c":33:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) "fs/char_dev.c":33:1 -1
     (nil))

;; Function rw_port (rw_port, funcdef_no=11, decl_uid=1386, cgraph_uid=12, symbol_order=11)

scanning new insn with uid = 83.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5 4 3 8
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 3 9 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r101,l0) best DREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r99,l0) best DREG, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a18 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a17 (r84,l0) best Q_REGS, allocno Q_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a2(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a6(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a10(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a11(r87,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a12(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a13(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a14(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a15(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a16(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:17000
  a17(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:6000
  a18(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a19(r98,l0) costs: AREG:4000 DREG:2000 CREG:2000 BREG:2000 SIREG:4000 DIREG:4000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:12000
  a20(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a21(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a22(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a23(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a24(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000

   Insn 77(l0): point = 0
   Insn 76(l0): point = 2
   Insn 72(l0): point = 4
   Insn 69(l0): point = 6
   Insn 68(l0): point = 8
   Insn 67(l0): point = 10
   Insn 66(l0): point = 12
   Insn 65(l0): point = 14
   Insn 64(l0): point = 16
   Insn 63(l0): point = 18
   Insn 62(l0): point = 20
   Insn 61(l0): point = 22
   Insn 60(l0): point = 24
   Insn 12(l0): point = 27
   Insn 11(l0): point = 29
   Insn 57(l0): point = 32
   Insn 56(l0): point = 34
   Insn 51(l0): point = 37
   Insn 50(l0): point = 39
   Insn 47(l0): point = 41
   Insn 46(l0): point = 43
   Insn 45(l0): point = 45
   Insn 42(l0): point = 48
   Insn 39(l0): point = 51
   Insn 38(l0): point = 53
   Insn 37(l0): point = 55
   Insn 36(l0): point = 57
   Insn 35(l0): point = 59
   Insn 34(l0): point = 61
   Insn 33(l0): point = 63
   Insn 32(l0): point = 65
   Insn 31(l0): point = 67
   Insn 81(l0): point = 70
   Insn 26(l0): point = 72
   Insn 25(l0): point = 74
   Insn 24(l0): point = 76
   Insn 23(l0): point = 78
   Insn 22(l0): point = 80
   Insn 21(l0): point = 82
   Insn 20(l0): point = 84
   Insn 17(l0): point = 86
   Insn 19(l0): point = 88
   Insn 18(l0): point = 90
   Insn 16(l0): point = 92
   Insn 15(l0): point = 94
   Insn 14(l0): point = 96
   Insn 79(l0): point = 99
   Insn 7(l0): point = 101
   Insn 6(l0): point = 103
   Insn 5(l0): point = 105
   Insn 83(l0): point = 107
 a0(r94): [3..4]
 a1(r93): [5..6]
 a2(r106): [9..10]
 a3(r91): [9..12]
 a4(r105): [13..14]
 a5(r90): [13..16]
 a6(r104): [17..18]
 a7(r89): [21..22]
 a8(r103): [23..24]
 a9(r88): [40..45]
 a10(r102): [42..43]
 a11(r87): [52..55]
 a12(r101): [52..53]
 a13(r86): [62..67]
 a14(r100): [64..65]
 a15(r85): [77..80]
 a16(r83): [79..96]
 a17(r84): [81..82]
 a18(r92): [83..84]
 a19(r98): [87..88]
 a20(r99): [89..90]
 a21(r97): [93..94]
 a22(r96): [102..103]
 a23(r95): [104..105]
 a24(r82): [107..107]
Compressing live ranges: from 110 to 37 - 33%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r106): [4..5]
 a3(r91): [4..5]
 a4(r105): [6..7]
 a5(r90): [6..7]
 a6(r104): [8..9]
 a7(r89): [10..11]
 a8(r103): [12..13]
 a9(r88): [14..15]
 a10(r102): [14..15]
 a11(r87): [16..17]
 a12(r101): [16..17]
 a13(r86): [18..19]
 a14(r100): [18..19]
 a15(r85): [20..21]
 a16(r83): [20..31]
 a17(r84): [22..23]
 a18(r92): [24..25]
 a19(r98): [26..27]
 a20(r99): [28..29]
 a21(r97): [30..31]
 a22(r96): [32..33]
 a23(r95): [34..35]
 a24(r82): [36..36]
  pref0:a12(r101)<-hr1@1000
  pref1:a20(r99)<-hr1@1000
  pref2:a19(r98)<-hr0@2000
  pref3:a0(r94)<-hr0@1500
  pref4:a11(r87)<-hr0@2500
  regions=1, blocks=10, points=37
    allocnos=25 (big 0), copies=0, conflicts=0, ranges=25
Disposition:
   24:r82  l0     0   16:r83  l0     2   17:r84  l0     0   15:r85  l0     0
   13:r86  l0     0   11:r87  l0     0    9:r88  l0     0    7:r89  l0     0
    5:r90  l0     1    3:r91  l0     1   18:r92  l0     0    1:r93  l0     0
    0:r94  l0     0   23:r95  l0     0   22:r96  l0     0   21:r97  l0     0
   19:r98  l0     0   20:r99  l0     0   14:r100 l0     1   12:r101 l0     1
   10:r102 l0     1    8:r103 l0     0    6:r104 l0     0    4:r105 l0     0
    2:r106 l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_port

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r6={1d,9u} r7={6d,18u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,19u} r17={16d,3u} r18={2d} r19={1d,21u,1e} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d} r83={1d,2u} r84={1d,1u} r85={1d,1u} r86={1d,2u} r87={1d,1u} r88={1d,2u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} 
;;    total ref usage 292{190d,100u,2e} in 51{49 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 83 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 83 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:SI 82)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_CFA_FLUSH_QUEUE (nil)
                (nil)))))
(note 2 83 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [3 pos+0 S4 A32])) "fs/char_dev.c":37:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 96)
        (mem:SI (reg/f:SI 95) [4 *pos_17(D)+0 S4 A32])) "fs/char_dev.c":37:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 95)
        (nil)))
(insn 7 6 79 2 (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (reg:SI 96)) "fs/char_dev.c":37:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(jump_insn 79 7 80 2 (set (pc)
        (label_ref 43)) "fs/char_dev.c":39:11 807 {jump}
     (nil)
 -> 43)
(barrier 80 79 53)
(code_label 53 80 10 3 15 (nil) [1 uses])
(note 10 53 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])
            (const_int 0 [0]))) "fs/char_dev.c":40:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "fs/char_dev.c":40:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:SI 83 [ buf.0_1 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 buf+0 S4 A32])) "fs/char_dev.c":41:13 75 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:SI 97)
                (plus:SI (reg/f:SI 83 [ buf.0_1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":41:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 18 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 buf+0 S4 A32])
        (reg:SI 97)) "fs/char_dev.c":41:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 18 16 19 4 (set (reg:SI 99)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "fs/char_dev.c":41:25 75 {*movsi_internal}
     (nil))
(insn 19 18 17 4 (parallel [
            (set (reg:QI 98 [ _v ])
                (asm_operands/v:QI ("inb %%dx, %%al") ("=a") 0 [
                        (reg:SI 99)
                    ]
                     [
                        (asm_input:SI ("d") fs/char_dev.c:41)
                    ]
                     [] fs/char_dev.c:41))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":41:25 -1
     (expr_list:REG_DEAD (reg:SI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 19 20 4 (set (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -5 [0xfffffffffffffffb])) [0 _v+0 S1 A8])
        (reg:QI 98 [ _v ])) "fs/char_dev.c":41:25 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 98 [ _v ])
        (nil)))
(insn 20 17 21 4 (set (reg:QI 92 [ _27 ])
        (mem/c:QI (plus:SI (reg/f:SI 19 frame)
                (const_int -5 [0xfffffffffffffffb])) [0 _v+0 S1 A8])) "fs/char_dev.c":41:25 77 {*movqi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:QI 84 [ _2 ])
        (reg:QI 92 [ _27 ])) "fs/char_dev.c":41:25 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ _27 ])
        (nil)))
(insn 22 21 23 4 (set (reg:SI 85 [ _3 ])
        (sign_extend:SI (reg:QI 84 [ _2 ]))) "fs/char_dev.c":41:13 153 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 84 [ _2 ])
        (nil)))
(insn 23 22 24 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 83 [ buf.0_1 ])) "fs/char_dev.c":41:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 83 [ buf.0_1 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 24 23 25 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 85 [ _3 ])) "fs/char_dev.c":41:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 85 [ _3 ])
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x795b5ef39a00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 8 [0x8])) "fs/char_dev.c":41:13 812 {*call}
     (nil)
    (nil))
(insn 26 25 81 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":41:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 81 26 82 4 (set (pc)
        (label_ref 40)) 807 {jump}
     (nil)
 -> 40)
(barrier 82 81 29)
(code_label 29 82 30 5 12 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/f:SI 86 [ buf.1_4 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 buf+0 S4 A32])) "fs/char_dev.c":43:13 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:SI 100)
                (plus:SI (reg/f:SI 86 [ buf.1_4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":43:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [1 buf+0 S4 A32])
        (reg:SI 100)) "fs/char_dev.c":43:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 34 33 35 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg/f:SI 86 [ buf.1_4 ])) "fs/char_dev.c":43:13 54 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 86 [ buf.1_4 ])
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(call_insn 35 34 36 5 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x795b5ef39800 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 4 [0x4]))) "fs/char_dev.c":43:13 823 {*call_value}
     (nil)
    (nil))
(insn 36 35 37 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":43:13 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 37 36 38 5 (set (reg:QI 87 [ _5 ])
        (reg:QI 0 ax)) "fs/char_dev.c":43:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 38 37 39 5 (set (reg:SI 101)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "fs/char_dev.c":43:13 75 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg:QI 87 [ _5 ])
                    (reg:SI 101)
                ]
                 [
                    (asm_input:QI ("a") fs/char_dev.c:43)
                    (asm_input:SI ("d") fs/char_dev.c:43)
                ]
                 [] fs/char_dev.c:43)
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":43:13 -1
     (expr_list:REG_DEAD (reg:SI 101)
        (expr_list:REG_DEAD (reg:QI 87 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(code_label 40 39 41 6 13 (nil) [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":44:10 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 43 42 44 7 11 (nil) [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:SI 88 [ count.2_6 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 count+0 S4 A32])) "fs/char_dev.c":39:17 75 {*movsi_internal}
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:SI 102)
                (plus:SI (reg:SI 88 [ count.2_6 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":39:17 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 50 7 (set (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [2 count+0 S4 A32])
        (reg:SI 102)) "fs/char_dev.c":39:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 50 47 51 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 88 [ count.2_6 ])
            (const_int 0 [0]))) "fs/char_dev.c":39:24 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 88 [ count.2_6 ])
        (nil)))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/char_dev.c":39:24 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 58)
(note 52 51 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 52 57 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
            (const_int 65535 [0xffff]))) "fs/char_dev.c":39:24 11 {*cmpsi_1}
     (nil))
(jump_insn 57 56 58 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "fs/char_dev.c":39:24 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 53)
(code_label 58 57 59 9 14 (nil) [1 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg/f:SI 103)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [3 pos+0 S4 A32])) "fs/char_dev.c":46:10 75 {*movsi_internal}
     (nil))
(insn 61 60 62 9 (set (reg:SI 89 [ _7 ])
        (mem:SI (reg/f:SI 103) [4 *pos_17(D)+0 S4 A32])) "fs/char_dev.c":46:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 103)
        (nil)))
(insn 62 61 63 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                    (reg:SI 89 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":46:7 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 63 62 64 9 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [3 pos+0 S4 A32])) "fs/char_dev.c":47:10 75 {*movsi_internal}
     (nil))
(insn 64 63 65 9 (set (reg:SI 90 [ _8 ])
        (mem:SI (reg/f:SI 104) [4 *pos_17(D)+0 S4 A32])) "fs/char_dev.c":47:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (nil)))
(insn 65 64 66 9 (set (reg:SI 105)
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "fs/char_dev.c":47:10 75 {*movsi_internal}
     (nil))
(insn 66 65 67 9 (parallel [
            (set (reg:SI 91 [ _9 ])
                (plus:SI (reg:SI 90 [ _8 ])
                    (reg:SI 105)))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":47:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105)
        (expr_list:REG_DEAD (reg:SI 90 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 90 [ _8 ])
                        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32]))
                    (nil))))))
(insn 67 66 68 9 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [3 pos+0 S4 A32])) "fs/char_dev.c":47:10 75 {*movsi_internal}
     (nil))
(insn 68 67 69 9 (set (mem:SI (reg/f:SI 106) [4 *pos_17(D)+0 S4 A32])
        (reg:SI 91 [ _9 ])) "fs/char_dev.c":47:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (expr_list:REG_DEAD (reg:SI 91 [ _9 ])
            (nil))))
(insn 69 68 72 9 (set (reg:SI 93 [ _32 ])
        (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "fs/char_dev.c":48:12 75 {*movsi_internal}
     (nil))
(insn 72 69 76 9 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ _32 ])) "fs/char_dev.c":48:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _32 ])
        (nil)))
(insn 76 72 77 9 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) "fs/char_dev.c":49:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ <retval> ])
        (nil)))
(insn 77 76 0 9 (use (reg/i:SI 0 ax)) "fs/char_dev.c":49:1 -1
     (nil))

;; Function rw_memory (rw_memory, funcdef_no=12, decl_uid=1399, cgraph_uid=13, symbol_order=12)

scanning new insn with uid = 101.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 18 count 13 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 11 3 }
;; 3 succs { 10 4 5 6 7 }
;; 4 succs { 12 }
;; 5 succs { 12 }
;; 6 succs { 12 }
;; 7 succs { 8 9 }
;; 8 succs { 12 }
;; 9 succs { 12 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 CLOBBERED_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 TLS_GOTBASE_REGS:8000 GENERAL_REGS:8000 MEM:37000
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a3(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:13000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 86(l0): point = 0
   Insn 85(l0): point = 2
   Insn 81(l0): point = 4
   Insn 78(l0): point = 7
   Insn 99(l0): point = 10
   Insn 73(l0): point = 12
   Insn 72(l0): point = 14
   Insn 71(l0): point = 16
   Insn 70(l0): point = 18
   Insn 69(l0): point = 20
   Insn 68(l0): point = 22
   Insn 67(l0): point = 24
   Insn 97(l0): point = 27
   Insn 60(l0): point = 29
   Insn 95(l0): point = 32
   Insn 55(l0): point = 34
   Insn 53(l0): point = 37
   Insn 52(l0): point = 39
   Insn 93(l0): point = 42
   Insn 47(l0): point = 44
   Insn 46(l0): point = 46
   Insn 45(l0): point = 48
   Insn 44(l0): point = 50
   Insn 43(l0): point = 52
   Insn 42(l0): point = 54
   Insn 41(l0): point = 56
   Insn 91(l0): point = 59
   Insn 36(l0): point = 61
   Insn 35(l0): point = 63
   Insn 34(l0): point = 65
   Insn 33(l0): point = 67
   Insn 32(l0): point = 69
   Insn 31(l0): point = 71
   Insn 30(l0): point = 73
   Insn 89(l0): point = 76
   Insn 25(l0): point = 78
   Insn 24(l0): point = 80
   Insn 23(l0): point = 82
   Insn 22(l0): point = 84
   Insn 21(l0): point = 86
   Insn 20(l0): point = 88
   Insn 19(l0): point = 90
   Insn 13(l0): point = 93
   Insn 12(l0): point = 95
   Insn 11(l0): point = 97
   Insn 10(l0): point = 99
   Insn 9(l0): point = 101
   Insn 8(l0): point = 104
   Insn 7(l0): point = 106
   Insn 101(l0): point = 108
 a0(r84): [3..4]
 a1(r83): [76..78] [59..61] [42..44] [32..34] [27..29] [10..12] [5..7]
 a2(r88): [94..95]
 a3(r82): [96..108]
 a4(r87): [96..97]
 a5(r86): [98..99]
 a6(r85): [100..101]
Compressing live ranges: from 111 to 24 - 21%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..15]
 a2(r88): [16..17]
 a3(r82): [18..23]
 a4(r87): [18..19]
 a5(r86): [20..21]
 a6(r85): [22..23]
  pref0:a0(r84)<-hr0@1500
  pref1:a1(r83)<-hr0@6000
  regions=1, blocks=13, points=24
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    3:r82  l0     0    1:r83  l0     0    0:r84  l0     0    6:r85  l0     1
    5:r86  l0     1    4:r87  l0     1    2:r88  l0     0
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_memory

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,6u} r1={5d} r2={5d} r6={1d,12u} r7={21d,40u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,31u} r17={13d,2u} r18={4d} r19={1d,12u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,2u} r83={7d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 437{326d,111u,0e} in 50{46 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 101 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 101 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 101 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])) [2 minor+0 S4 A32])
            (const_int 4 [0x4]))) "fs/char_dev.c":53:5 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 88 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "fs/char_dev.c":53:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 76)
(note 88 8 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 88 10 3 (set (reg:SI 85)
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 minor+0 S4 A32])) "fs/char_dev.c":53:5 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg:SI 86)
                (ashift:SI (reg:SI 85)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":53:5 655 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 85)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 11 10 12 3 (set (reg:SI 87)
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 86)
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (label_ref:SI 14)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) "fs/char_dev.c":53:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (insn_list:REG_LABEL_OPERAND 14 (nil))))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 88)
                (plus:SI (reg:SI 87)
                    (reg:SI 82)))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":53:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87)
        (expr_list:REG_DEAD (reg:SI 82)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 13 12 14 3 (parallel [
            (set (pc)
                (reg:SI 88))
            (use (label_ref 14))
        ]) "fs/char_dev.c":53:5 810 {*tablejump_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil))
 -> 14)
(code_label 14 13 15 20 (nil) [2 uses])
(jump_table_data 15 14 16 (addr_diff_vec:SI (label_ref:SI 14)
         [
            (label_ref:SI 17)
            (label_ref:SI 28)
            (label_ref:SI 39)
            (label_ref:SI 50)
            (label_ref:SI 65)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 16 15 17)
(code_label 17 16 18 4 24 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [3 pos+0 S4 A32])) "fs/char_dev.c":55:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 20 19 21 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":55:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 21 20 22 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":55:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 22 21 23 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])) "fs/char_dev.c":55:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_ram") [flags 0x3]  <function_decl 0x795b5ef3a800 rw_ram>) [0 rw_ram S1 A8])
            (const_int 16 [0x10]))) "fs/char_dev.c":55:16 823 {*call_value}
     (nil)
    (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":55:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 25 24 89 4 (set (reg:SI 83 [ _1 ])
        (reg:SI 0 ax)) "fs/char_dev.c":55:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 89 25 90 4 (set (pc)
        (label_ref 79)) "fs/char_dev.c":55:16 807 {jump}
     (nil)
 -> 79)
(barrier 90 89 28)
(code_label 28 90 29 5 23 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [3 pos+0 S4 A32])) "fs/char_dev.c":57:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 31 30 32 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":57:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 32 31 33 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":57:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])) "fs/char_dev.c":57:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 33 35 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_mem") [flags 0x3]  <function_decl 0x795b5ef3aa00 rw_mem>) [0 rw_mem S1 A8])
            (const_int 16 [0x10]))) "fs/char_dev.c":57:16 823 {*call_value}
     (nil)
    (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":57:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 91 5 (set (reg:SI 83 [ _1 ])
        (reg:SI 0 ax)) "fs/char_dev.c":57:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 91 36 92 5 (set (pc)
        (label_ref 79)) "fs/char_dev.c":57:16 807 {jump}
     (nil)
 -> 79)
(barrier 92 91 39)
(code_label 39 92 40 6 22 (nil) [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [3 pos+0 S4 A32])) "fs/char_dev.c":59:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 42 41 43 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":59:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 43 42 44 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":59:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 44 43 45 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])) "fs/char_dev.c":59:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_kmem") [flags 0x3]  <function_decl 0x795b5ef3ac00 rw_kmem>) [0 rw_kmem S1 A8])
            (const_int 16 [0x10]))) "fs/char_dev.c":59:16 823 {*call_value}
     (nil)
    (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":59:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 47 46 93 6 (set (reg:SI 83 [ _1 ])
        (reg:SI 0 ax)) "fs/char_dev.c":59:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 93 47 94 6 (set (pc)
        (label_ref 79)) "fs/char_dev.c":59:16 807 {jump}
     (nil)
 -> 79)
(barrier 94 93 50)
(code_label 50 94 51 7 21 (nil) [1 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])
            (const_int 0 [0]))) "fs/char_dev.c":61:33 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 53 52 54 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "fs/char_dev.c":61:33 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 58)
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 95 8 (set (reg:SI 83 [ _1 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":61:33 75 {*movsi_internal}
     (nil))
(jump_insn 95 55 96 8 (set (pc)
        (label_ref 79)) "fs/char_dev.c":61:33 807 {jump}
     (nil)
 -> 79)
(barrier 96 95 58)
(code_label 58 96 59 9 26 (nil) [1 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 97 9 (set (reg:SI 83 [ _1 ])
        (const_int 0 [0])) "fs/char_dev.c":61:33 75 {*movsi_internal}
     (nil))
(jump_insn 97 60 98 9 (set (pc)
        (label_ref 79)) "fs/char_dev.c":61:33 807 {jump}
     (nil)
 -> 79)
(barrier 98 97 65)
(code_label 65 98 66 10 19 (nil) [1 uses])
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [3 pos+0 S4 A32])) "fs/char_dev.c":63:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 68 67 69 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":63:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 69 68 70 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":63:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 70 69 71 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])) "fs/char_dev.c":63:16 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 71 70 72 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_port") [flags 0x3]  <function_decl 0x795b5ef3ae00 rw_port>) [0 rw_port S1 A8])
            (const_int 16 [0x10]))) "fs/char_dev.c":63:16 823 {*call_value}
     (nil)
    (nil))
(insn 72 71 73 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":63:16 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 73 72 99 10 (set (reg:SI 83 [ _1 ])
        (reg:SI 0 ax)) "fs/char_dev.c":63:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 99 73 100 10 (set (pc)
        (label_ref 79)) "fs/char_dev.c":63:16 807 {jump}
     (nil)
 -> 79)
(barrier 100 99 76)
(code_label 76 100 77 11 18 (nil) [1 uses])
(note 77 76 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 11 (set (reg:SI 83 [ _1 ])
        (const_int -5 [0xfffffffffffffffb])) "fs/char_dev.c":65:16 75 {*movsi_internal}
     (nil))
(code_label 79 78 80 12 25 (nil) [6 uses])
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 85 12 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _1 ])) "fs/char_dev.c":67:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _1 ])
        (nil)))
(insn 85 81 86 12 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/char_dev.c":67:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 86 85 0 12 (use (reg/i:SI 0 ax)) "fs/char_dev.c":67:1 -1
     (nil))

;; Function rw_ttyx (rw_ttyx, funcdef_no=13, decl_uid=1413, cgraph_uid=14, symbol_order=13)

scanning new insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred BREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best BREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r83,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:17000
  a2(r82,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 MEM:18000

   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 32(l0): point = 4
   Insn 27(l0): point = 7
   Insn 26(l0): point = 9
   Insn 25(l0): point = 11
   Insn 24(l0): point = 13
   Insn 23(l0): point = 15
   Insn 22(l0): point = 17
   Insn 21(l0): point = 19
   Insn 20(l0): point = 21
   Insn 39(l0): point = 24
   Insn 15(l0): point = 26
   Insn 14(l0): point = 28
   Insn 13(l0): point = 30
   Insn 12(l0): point = 32
   Insn 11(l0): point = 34
   Insn 10(l0): point = 36
   Insn 9(l0): point = 38
   Insn 8(l0): point = 40
   Insn 6(l0): point = 43
   Insn 5(l0): point = 45
   Insn 41(l0): point = 47
 a0(r84): [3..4]
 a1(r83): [24..26] [5..7]
 a2(r82): [33..47] [14..23]
Compressing live ranges: from 50 to 10 - 20%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [6..7] [2..3]
 a2(r82): [8..9] [4..5]
  pref0:a0(r84)<-hr0@1500
  pref1:a1(r83)<-hr0@3000
  pref2:a2(r82)<-hr3@3000
  regions=1, blocks=6, points=10
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_ttyx

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r3={2d,2u} r6={1d,5u} r7={11d,21u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,11u} r17={8d,1u} r18={2d} r19={1d,5u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,2u} r83={2d,1u} r84={1d,1u} 
;;    total ref usage 221{168d,53u,0e} in 23{21 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 41 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 41 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 41 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])
            (const_int 0 [0]))) "fs/char_dev.c":71:56 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "fs/char_dev.c":71:56 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":71:28 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 9 8 10 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":71:28 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 10 9 11 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":71:28 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 11 10 12 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 minor+0 S4 A32])) "fs/char_dev.c":71:28 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 12 11 13 3 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/char_dev.c":71:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 13 12 14 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("tty_read") [flags 0x41]  <function_decl 0x795b5ef3a600 tty_read>) [0 tty_read S1 A8])
            (const_int 16 [0x10]))) "fs/char_dev.c":71:28 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 14 13 15 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":71:28 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 15 14 39 3 (set (reg:SI 83 [ iftmp.4_1 ])
        (reg:SI 0 ax)) "fs/char_dev.c":71:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn 39 15 40 3 (set (pc)
        (label_ref 30)) "fs/char_dev.c":71:56 807 {jump}
     (nil)
 -> 30)
(barrier 40 39 18)
(code_label 18 40 19 4 29 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":72:28 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 21 20 22 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":72:28 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 22 21 23 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":72:28 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 23 22 24 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 minor+0 S4 A32])) "fs/char_dev.c":72:28 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 24 23 25 4 (set (reg:SI 3 bx)
        (reg:SI 82)) "fs/char_dev.c":72:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("tty_write") [flags 0x41]  <function_decl 0x795b5ef16d00 tty_write>) [0 tty_write S1 A8])
            (const_int 16 [0x10]))) "fs/char_dev.c":72:28 823 {*call_value}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil))
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":72:28 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 27 26 30 4 (set (reg:SI 83 [ iftmp.4_1 ])
        (reg:SI 0 ax)) "fs/char_dev.c":72:28 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(code_label 30 27 31 5 31 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 36 5 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ iftmp.4_1 ])) "fs/char_dev.c":71:56 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ iftmp.4_1 ])
        (nil)))
(insn 36 32 37 5 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "fs/char_dev.c":73:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 37 36 0 5 (use (reg/i:SI 0 ax)) "fs/char_dev.c":73:1 -1
     (nil))

;; Function rw_tty (rw_tty, funcdef_no=14, decl_uid=1420, cgraph_uid=15, symbol_order=14)

scanning new insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:18000
  a7(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a8(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a9(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 33(l0): point = 4
   Insn 30(l0): point = 7
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 27(l0): point = 13
   Insn 26(l0): point = 15
   Insn 25(l0): point = 17
   Insn 24(l0): point = 19
   Insn 23(l0): point = 21
   Insn 22(l0): point = 23
   Insn 21(l0): point = 25
   Insn 20(l0): point = 27
   Insn 19(l0): point = 29
   Insn 18(l0): point = 31
   Insn 40(l0): point = 34
   Insn 13(l0): point = 36
   Insn 11(l0): point = 39
   Insn 10(l0): point = 41
   Insn 7(l0): point = 43
   Insn 6(l0): point = 45
   Insn 5(l0): point = 47
   Insn 42(l0): point = 49
 a0(r89): [3..4]
 a1(r88): [34..36] [5..7]
 a2(r87): [16..25]
 a3(r86): [26..27]
 a4(r85): [28..29]
 a5(r91): [30..31]
 a6(r82): [39..49] [32..33]
 a7(r84): [42..43]
 a8(r83): [44..45]
 a9(r90): [46..47]
Compressing live ranges: from 52 to 22 - 42%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [14..15] [2..3]
 a2(r87): [4..5]
 a3(r86): [6..7]
 a4(r85): [8..9]
 a5(r91): [10..11]
 a6(r82): [16..21] [12..13]
 a7(r84): [16..17]
 a8(r83): [18..19]
 a9(r90): [20..21]
  pref0:a0(r89)<-hr0@1500
  pref1:a1(r88)<-hr0@1500
  regions=1, blocks=6, points=22
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
    6:r82  l0     0    8:r83  l0     1    7:r84  l0     1    4:r85  l0     0
    3:r86  l0     0    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0
    9:r90  l0     1    5:r91  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_tty

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,5u} r7={8d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,8u} r17={5d,1u} r18={1d} r19={1d,5u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,2u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={2d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 147{99d,48u,0e} in 24{23 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 42 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 42 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 42 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 90)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x795b5ef1a1b0 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "fs/char_dev.c":77:16 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 83 [ current.5_1 ])
        (mem/f/c:SI (reg/f:SI 90) [5 current+0 S4 A32])) "fs/char_dev.c":77:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90)
        (nil)))
(insn 7 6 10 2 (set (reg:SI 84 [ _2 ])
        (mem:SI (plus:SI (reg/f:SI 83 [ current.5_1 ])
                (const_int 616 [0x268])) [2 current.5_1->tty+0 S4 A32])) "fs/char_dev.c":77:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ current.5_1 ])
        (nil)))
(insn 10 7 11 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 84 [ _2 ])
            (const_int 0 [0]))) "fs/char_dev.c":77:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "fs/char_dev.c":77:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 16)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 40 3 (set (reg:SI 88 [ _6 ])
        (const_int -1 [0xffffffffffffffff])) "fs/char_dev.c":78:16 75 {*movsi_internal}
     (nil))
(jump_insn 40 13 41 3 (set (pc)
        (label_ref 31)) "fs/char_dev.c":78:16 807 {jump}
     (nil)
 -> 31)
(barrier 41 40 16)
(code_label 16 41 17 4 33 (nil) [1 uses])
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 91)
        (mem/u/c:SI (plus:SI (reg:SI 82)
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x795b5ef1a1b0 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "fs/char_dev.c":79:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82)
        (nil)))
(insn 19 18 20 4 (set (reg/f:SI 85 [ current.6_3 ])
        (mem/f/c:SI (reg/f:SI 91) [5 current+0 S4 A32])) "fs/char_dev.c":79:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 20 19 21 4 (set (reg:SI 86 [ _4 ])
        (mem:SI (plus:SI (reg/f:SI 85 [ current.6_3 ])
                (const_int 616 [0x268])) [2 current.6_3->tty+0 S4 A32])) "fs/char_dev.c":79:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ current.6_3 ])
        (nil)))
(insn 21 20 22 4 (set (reg:SI 87 [ _5 ])
        (reg:SI 86 [ _4 ])) "fs/char_dev.c":79:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (nil)))
(insn 22 21 23 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":79:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 23 22 24 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [3 pos+0 S4 A32])) "fs/char_dev.c":79:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 24 23 25 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":79:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 25 24 26 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":79:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 26 25 27 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 87 [ _5 ])) "fs/char_dev.c":79:12 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 87 [ _5 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 27 26 28 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])) "fs/char_dev.c":79:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("rw_ttyx") [flags 0x3]  <function_decl 0x795b5ef46200 rw_ttyx>) [0 rw_ttyx S1 A8])
            (const_int 32 [0x20]))) "fs/char_dev.c":79:12 823 {*call_value}
     (nil)
    (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":79:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 30 29 31 4 (set (reg:SI 88 [ _6 ])
        (reg:SI 0 ax)) "fs/char_dev.c":79:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(code_label 31 30 32 5 34 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 37 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ _6 ])) "fs/char_dev.c":80:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (nil)))
(insn 37 33 38 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) "fs/char_dev.c":80:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 38 37 0 5 (use (reg/i:SI 0 ax)) "fs/char_dev.c":80:1 -1
     (nil))

;; Function rw_char (rw_char, funcdef_no=15, decl_uid=1428, cgraph_uid=16, symbol_order=16)

scanning new insn with uid = 54.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a4 (r87,l0) best Q_REGS, allocno Q_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:7000
  a1(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:13000
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2000 DIREG:2000 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:11000
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:12000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a8(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a10(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000

   Insn 48(l0): point = 0
   Insn 47(l0): point = 2
   Insn 43(l0): point = 4
   Insn 40(l0): point = 7
   Insn 39(l0): point = 9
   Insn 38(l0): point = 11
   Insn 37(l0): point = 13
   Insn 36(l0): point = 15
   Insn 35(l0): point = 17
   Insn 34(l0): point = 19
   Insn 33(l0): point = 21
   Insn 32(l0): point = 23
   Insn 31(l0): point = 25
   Insn 30(l0): point = 27
   Insn 29(l0): point = 29
   Insn 52(l0): point = 32
   Insn 24(l0): point = 34
   Insn 22(l0): point = 37
   Insn 21(l0): point = 39
   Insn 20(l0): point = 41
   Insn 19(l0): point = 43
   Insn 18(l0): point = 45
   Insn 17(l0): point = 47
   Insn 50(l0): point = 50
   Insn 12(l0): point = 52
   Insn 10(l0): point = 55
   Insn 9(l0): point = 57
   Insn 6(l0): point = 59
   Insn 5(l0): point = 61
   Insn 54(l0): point = 63
 a0(r90): [3..4]
 a1(r89): [50..52] [32..34] [5..7]
 a2(r92): [12..13]
 a3(r88): [18..27]
 a4(r87): [28..29]
 a5(r91): [42..43]
 a6(r82): [55..63] [44..49]
 a7(r86): [44..45]
 a8(r85): [46..47]
 a9(r84): [58..59]
 a10(r83): [60..61]
Compressing live ranges: from 66 to 24 - 36%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [18..19] [10..11] [2..3]
 a2(r92): [4..5]
 a3(r88): [6..7]
 a4(r87): [8..9]
 a5(r91): [12..13]
 a6(r82): [20..23] [14..17]
 a7(r86): [14..15]
 a8(r85): [16..17]
 a9(r84): [20..21]
 a10(r83): [22..23]
  pref0:a0(r90)<-hr0@1500
  pref1:a1(r89)<-hr0@1500
  regions=1, blocks=8, points=24
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
    6:r82  l0     0   10:r83  l0     1    9:r84  l0     1    8:r85  l0     1
    7:r86  l0     1    4:r87  l0     0    3:r88  l0     0    1:r89  l0     0
    0:r90  l0     0    5:r91  l0     0    2:r92  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rw_char

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,7u} r7={8d,17u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,13u} r17={8d,2u} r18={1d} r19={1d,10u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={3d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 167{104d,63u,0e} in 30{29 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 54 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 54 3 2 2 (parallel [
            (set (reg:SI 82)
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_FLUSH_QUEUE (nil)
            (nil))))
(note 2 54 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 83 [ dev.7_1 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 dev+0 S4 A32])) "fs/char_dev.c":99:9 75 {*movsi_internal}
     (nil))
(insn 6 5 9 2 (parallel [
            (set (reg:SI 84 [ _2 ])
                (lshiftrt:SI (reg:SI 83 [ dev.7_1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":99:9 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 83 [ dev.7_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 6 10 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 84 [ _2 ])
            (const_int 7 [0x7]))) "fs/char_dev.c":99:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _2 ])
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "fs/char_dev.c":99:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 15)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 50 3 (set (reg:SI 89 [ _7 ])
        (const_int -19 [0xffffffffffffffed])) "fs/char_dev.c":100:16 75 {*movsi_internal}
     (nil))
(jump_insn 50 12 51 3 (set (pc)
        (label_ref 41)) "fs/char_dev.c":100:16 807 {jump}
     (nil)
 -> 41)
(barrier 51 50 15)
(code_label 15 51 16 4 36 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 85 [ dev.8_3 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 dev+0 S4 A32])) "fs/char_dev.c":101:33 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 86 [ _4 ])
                (lshiftrt:SI (reg:SI 85 [ dev.8_3 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":101:33 701 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 85 [ dev.8_3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg/f:SI 91)
        (mem/f:SI (plus:SI (plus:SI (mult:SI (reg:SI 86 [ _4 ])
                        (const_int 4 [0x4]))
                    (reg:SI 82))
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("crw_table") [flags 0x2]  <var_decl 0x795b5ef1a900 crw_table>)
                        ] UNSPEC_GOTOFF))) [17 crw_table[_4]+0 S4 A32])) "fs/char_dev.c":101:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _4 ])
        (expr_list:REG_DEAD (reg:SI 82)
            (nil))))
(insn 20 19 21 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [17 call_addr+0 S4 A32])
        (reg/f:SI 91)) "fs/char_dev.c":101:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (nil)))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [17 call_addr+0 S4 A32])
            (const_int 0 [0]))) "fs/char_dev.c":101:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "fs/char_dev.c":101:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 52 5 (set (reg:SI 89 [ _7 ])
        (const_int -19 [0xffffffffffffffed])) "fs/char_dev.c":102:16 75 {*movsi_internal}
     (nil))
(jump_insn 52 24 53 5 (set (pc)
        (label_ref 41)) "fs/char_dev.c":102:16 807 {jump}
     (nil)
 -> 41)
(barrier 53 52 27)
(code_label 27 53 28 6 38 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 87 [ dev.9_5 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [2 dev+0 S4 A32])) "fs/char_dev.c":103:26 75 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:SI 88 [ _6 ])
        (zero_extend:SI (subreg:QI (reg:SI 87 [ dev.9_5 ]) 0))) "fs/char_dev.c":103:12 143 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:SI 87 [ dev.9_5 ])
        (nil)))
(insn 31 30 32 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":103:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 32 31 33 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 16 [0x10])) [3 pos+0 S4 A32])) "fs/char_dev.c":103:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 33 32 34 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 12 [0xc])) [2 count+0 S4 A32])) "fs/char_dev.c":103:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 34 33 35 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [1 buf+0 S4 A32])) "fs/char_dev.c":103:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 35 34 36 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 88 [ _6 ])) "fs/char_dev.c":103:12 54 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 88 [ _6 ])
        (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
            (nil))))
(insn 36 35 37 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (reg/f:SI 16 argp) [2 rw+0 S4 A32])) "fs/char_dev.c":103:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 37 36 38 6 (set (reg/f:SI 92)
        (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [17 call_addr+0 S4 A32])) "fs/char_dev.c":103:12 75 {*movsi_internal}
     (nil))
(call_insn 38 37 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:SI 92) [0 *(int (*<T328>) (int, unsigned int, char *, int, off_t *)) call_addr_11 S1 A8])
            (const_int 32 [0x20]))) "fs/char_dev.c":103:12 823 {*call_value}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (nil))
    (nil))
(insn 39 38 40 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "fs/char_dev.c":103:12 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 40 39 41 6 (set (reg:SI 89 [ _7 ])
        (reg:SI 0 ax)) "fs/char_dev.c":103:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(code_label 41 40 42 7 37 (nil) [2 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 47 7 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ _7 ])) "fs/char_dev.c":104:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _7 ])
        (nil)))
(insn 47 43 48 7 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) "fs/char_dev.c":104:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ <retval> ])
        (nil)))
(insn 48 47 0 7 (use (reg/i:SI 0 ax)) "fs/char_dev.c":104:1 -1
     (nil))
