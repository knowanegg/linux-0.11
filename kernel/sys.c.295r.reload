
;; Function put_fs_byte (put_fs_byte, funcdef_no=2, decl_uid=1348, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =Q  (1) Q {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 8:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 14: point = 0, n_alt = -1
  BB 2
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 1, n_alt = 0
   Insn 8: point = 2, n_alt = 4
   Insn 4: point = 3, n_alt = 8
   Insn 3: point = 4, n_alt = 0
   Insn 2: point = 6, n_alt = 0
   Insn 15: point = 7, n_alt = 0
 r82: [7..7]
 r83: [5..6]
 r84: [3..4]
 r85: [0..2]
 r86: [0..1]
Compressing live ranges: from 8 to 7 - 87%
Ranges after the compression:
 r82: [6..6]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=4, prev_offset=4)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
deleting insn with uid = 3.
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d,1u} r2={1d} r7={1d,7u} r17={2d} 
;;    total ref usage 20{10d,10u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 6 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(insn 2 15 4 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0 val+0 S4 A32])) "include/asm/segment.h":13:1 75 {*movsi_internal}
     (nil))
(insn 4 2 5 2 (set (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])
        (reg:QI 0 ax [84])) "include/asm/segment.h":13:1 77 {*movqi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:QI 0 ax [85])
        (mem/c:QI (reg/f:SI 7 sp) [0 val+0 S1 A32])) "include/asm/segment.h":14:5 77 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 1 dx [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [14 addr+0 S4 A32])) "include/asm/segment.h":14:5 75 {*movsi_internal}
     (nil))
(insn 10 9 13 2 (parallel [
            (asm_operands/v ("movb %0, %%fs:%1") ("") 0 [
                    (reg:QI 0 ax [85])
                    (mem:QI (reg/f:SI 1 dx [86]) [0 *addr_3(D)+0 S1 A8])
                ]
                 [
                    (asm_input:QI ("r") include/asm/segment.h:14)
                    (asm_input:QI ("m") include/asm/segment.h:14)
                ]
                 [] include/asm/segment.h:14)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":14:5 -1
     (nil))
(note 13 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 16 3 (const_int 0 [0]) "include/asm/segment.h":15:1 843 {nop}
     (nil))
(note 16 14 0 NOTE_INSN_DELETED)

;; Function put_fs_long (put_fs_long, funcdef_no=3, decl_uid=1352, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 11: point = 0, n_alt = -1
  BB 2
   Insn 7: point = 0, n_alt = 0
   Insn 6: point = 1, n_alt = 0
   Insn 5: point = 2, n_alt = 0
   Insn 12: point = 3, n_alt = 0
 r82: [3..3]
 r83: [0..2]
 r84: [0..1]
Compressing live ranges: from 4 to 3 - 75%
Ranges after the compression:
 r82: [2..2]
 r83: [0..1]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 5
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
starting the processing of deferred insns
ending the processing of deferred insns


put_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={3d,1u} r1={2d,1u} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 12 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 12 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [3 val+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [84])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [15 addr+0 S4 A32])) "include/asm/segment.h":19:5 75 {*movsi_internal}
     (nil))
(insn 7 6 10 2 (parallel [
            (asm_operands/v ("movl %0, %%fs:%1") ("") 0 [
                    (reg:SI 0 ax [83])
                    (mem:SI (reg/f:SI 1 dx [84]) [3 *addr_3(D)+0 S4 A32])
                ]
                 [
                    (asm_input:SI ("r") include/asm/segment.h:19)
                    (asm_input:SI ("m") include/asm/segment.h:19)
                ]
                 [] include/asm/segment.h:19)
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":19:5 -1
     (nil))
(note 10 7 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 13 3 (const_int 0 [0]) "include/asm/segment.h":20:1 843 {nop}
     (nil))
(note 13 11 0 NOTE_INSN_DELETED)

;; Function get_fs_long (get_fs_long, funcdef_no=4, decl_uid=1355, cgraph_uid=5, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = 0
   Insn 5: point = 4, n_alt = 1
   Insn 7: point = 5, n_alt = 0
   Insn 6: point = 7, n_alt = 0
   Insn 18: point = 8, n_alt = 0
 r82: [8..8]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
 r86: [6..7]
Compressing live ranges: from 9 to 9 - 100%
Ranges after the compression:
 r82: [8..8]
 r83: [2..3]
 r84: [0..1]
 r85: [4..5]
 r86: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_long

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 19{10d,9u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [15 addr+0 S4 A32])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 0 ax [orig:85 _v ] [85])
                (asm_operands:SI ("movl %%fs:%1, %0") ("=r") 0 [
                        (mem:SI (reg/f:SI 0 ax [86]) [3 *addr_2(D)+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") include/asm/segment.h:26)
                    ]
                     [] include/asm/segment.h:26))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":26:5 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 _v+0 S4 A32])
        (reg:SI 0 ax [orig:85 _v ] [85])) "include/asm/segment.h":26:5 75 {*movsi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:SI 0 ax [orig:83 _4 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 _v+0 S4 A32])) "include/asm/segment.h":27:12 75 {*movsi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:SI 0 ax)) "include/asm/segment.h":28:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function sys_time (sys_time, funcdef_no=8, decl_uid=1371, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 8:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=99 from oldreg=97, assigning class AREG to r99
    8: {r90:SI=trunc(sign_extend(r99:SI)*sign_extend(r91:SI) 0>>0x20);clobber r99:SI;clobber flags:CC;}
      REG_DEAD r91:SI
      REG_UNUSED r97:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   45: r99:SI=r83:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 9:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=100 from oldreg=90, assigning class GENERAL_REGS to r100
    9: {r100:SI=r100:SI>>0x5;clobber flags:CC;}
      REG_DEAD r90:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   46: r100:SI=r90:SI
    Inserting insn reload after:
   47: r92:SI=r100:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) rm  (1) 0 {ashrsi3_cvt}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=101 from oldreg=92, assigning class GENERAL_REGS to r101
   11: {r101:SI=r101:SI-r93:SI;clobber flags:CC;}
      REG_DEAD r93:SI
      REG_DEAD r92:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   48: r101:SI=r92:SI
    Inserting insn reload after:
   49: r84:SI=r101:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 14
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = -2
   Insn 36: point = 1, n_alt = -2
   Insn 33: point = 3, n_alt = 0
  BB 3
   Insn 30: point = 4, n_alt = 0
   Insn 29: point = 4, n_alt = 0
   Insn 28: point = 4, n_alt = 0
   Insn 27: point = 5, n_alt = 0
   Insn 26: point = 5, n_alt = 0
   Insn 25: point = 5, n_alt = 0
   Insn 24: point = 6, n_alt = 0
   Insn 23: point = 6, n_alt = 0
   Insn 22: point = 6, n_alt = -2
   Insn 21: point = 7, n_alt = 0
   Insn 20: point = 7, n_alt = 0
   Insn 19: point = 7, n_alt = 0
  BB 2
   Insn 17: point = 8, n_alt = -1
   Insn 16: point = 8, n_alt = 1
   Insn 15: point = 8, n_alt = 1
   Insn 14: point = 9, n_alt = 0
   Insn 13: point = 11, n_alt = 0
   Insn 12: point = 13, n_alt = 0
   Insn 49: point = 14, n_alt = -2
	Hard reg 1 is preferable by r101 with profit 1000
   Insn 11: point = 16, n_alt = 0
   Insn 48: point = 18, n_alt = -2
	Hard reg 1 is preferable by r101 with profit 1000
	Hard reg 0 is preferable by r101 with profit 1000
   Insn 10: point = 20, n_alt = 1
   Insn 47: point = 22, n_alt = -2
	Hard reg 0 is preferable by r100 with profit 1000
   Insn 9: point = 24, n_alt = 0
   Insn 46: point = 25, n_alt = -2
	Hard reg 0 is preferable by r100 with profit 1000
	Hard reg 1 is preferable by r100 with profit 1000
   Insn 8: point = 27, n_alt = 0
   Insn 45: point = 29, n_alt = -2
	Hard reg 3 is preferable by r99 with profit 1000
   Insn 7: point = 30, n_alt = 0
   Insn 6: point = 31, n_alt = 0
   Insn 5: point = 33, n_alt = 0
   Insn 43: point = 34, n_alt = 0
 r82: [6..34]
 r83: [21..31]
 r84: [10..14]
 r85: [10..11]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]
 r89: [32..33]
 r90: [26..27]
 r91: [28..30]
 r92: [19..22]
 r93: [17..20]
 r94: [12..13]
 r95: [8..9]
 r99: [27..29]
 r100: [23..25]
 r101: [15..18]
Compressing live ranges: from 35 to 26 - 74%
Ranges after the compression:
 r82: [6..25]
 r83: [16..23]
 r84: [8..11]
 r85: [8..9]
 r86: [4..5]
 r87: [2..3]
 r88: [0..1]
 r89: [24..25]
 r90: [20..21]
 r91: [22..23]
 r92: [14..17]
 r93: [12..15]
 r94: [10..11]
 r95: [6..7]
 r99: [21..23]
 r100: [18..19]
 r101: [12..13]

********** Assignment #1: **********

	 Assigning to 99 (cl=AREG, orig=97, freq=2000, tfirst=99, tfreq=2000)...
	   Assign 0 to reload r99 (freq=2000)
	 Assigning to 100 (cl=GENERAL_REGS, orig=90, freq=3000, tfirst=100, tfreq=3000)...
	   Assign 0 to reload r100 (freq=3000)
	 Assigning to 101 (cl=GENERAL_REGS, orig=92, freq=3000, tfirst=101, tfreq=3000)...
	   Assign 0 to reload r101 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 43
changing reg in insn 22
changing reg in insn 12
changing reg in insn 5
changing reg in insn 6
changing reg in insn 10
changing reg in insn 13
changing reg in insn 25
changing reg in insn 28
changing reg in insn 33
changing reg in insn 36
changing reg in insn 36
changing reg in insn 40
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
deleting insn with uid = 47.
deleting insn with uid = 48.
deleting insn with uid = 36.
deleting insn with uid = 40.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 29.


sys_time

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,11u} r1={6d,3u} r2={4d,3u} r3={3d,4u} r7={9d,24u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={13d,1u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 225{179d,46u,0e} in 31{29 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 43 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 43 3 2 2 (parallel [
            (set (reg:SI 2 cx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 43 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [89])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x735c1dd2e360 jiffies>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 3 bx [orig:83 jiffies.0_1 ] [83])
        (mem/v/c:SI (reg/f:SI 0 ax [89]) [3 jiffies+0 S4 A32])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 7 6 45 2 (set (reg:SI 1 dx [91])
        (const_int 1374389535 [0x51eb851f])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 45 7 8 2 (set (reg:SI 0 ax [97])
        (reg:SI 3 bx [orig:83 jiffies.0_1 ] [83])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 8 45 46 2 (parallel [
            (set (reg:SI 1 dx [90])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [97]))
                            (sign_extend:DI (reg:SI 1 dx [91])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [97]))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":21:9 435 {*smulsi3_highpart_1}
     (nil))
(insn 46 8 9 2 (set (reg:SI 0 ax [90])
        (reg:SI 1 dx [90])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 9 46 10 2 (parallel [
            (set (reg:SI 0 ax [90])
                (ashiftrt:SI (reg:SI 0 ax [90])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":21:9 702 {*ashrsi3_1}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 3 bx [93])
                (ashiftrt:SI (reg:SI 3 bx [orig:83 jiffies.0_1 ] [83])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":21:9 694 {ashrsi3_cvt}
     (nil))
(insn 11 10 49 2 (parallel [
            (set (reg:SI 0 ax [92])
                (minus:SI (reg:SI 0 ax [92])
                    (reg:SI 3 bx [93])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":21:9 282 {*subsi_1}
     (nil))
(insn 49 11 12 2 (set (reg:SI 1 dx [orig:84 _2 ] [84])
        (reg:SI 0 ax [92])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 12 49 13 2 (set (reg/f:SI 0 ax [94])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x735c1dd2e3f0 startup_time>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 ax [orig:85 startup_time.1_3 ] [85])
        (mem/c:SI (reg/f:SI 0 ax [94]) [3 startup_time+0 S4 A32])) "kernel/sys.c":21:9 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 0 ax [95])
                (plus:SI (reg:SI 0 ax [orig:85 startup_time.1_3 ] [85])
                    (reg:SI 1 dx [orig:84 _2 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":21:7 209 {*addsi_1}
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])
        (reg:SI 0 ax [95])) "kernel/sys.c":21:7 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [16 tloc+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":22:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "kernel/sys.c":22:8 806 {*jcc}
     (nil)
 -> 31)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":23:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 20 19 21 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 4 [0x4])) "kernel/sys.c":23:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 21 20 22 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [16 tloc+0 S4 A32])) "kernel/sys.c":23:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 22 21 23 3 (set (reg:SI 3 bx)
        (reg:SI 2 cx [82])) "kernel/sys.c":23:9 75 {*movsi_internal}
     (nil))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x735c1dd38500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":23:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":23:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 25 24 26 3 (set (reg:SI 0 ax [orig:86 i.2_4 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":24:9 75 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":24:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 27 26 28 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [16 tloc+0 S4 A32])) "kernel/sys.c":24:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 28 27 29 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:86 i.2_4 ] [86])) "kernel/sys.c":24:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 29 28 30 3 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x735c1dd38a00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":24:9 812 {*call}
     (nil)
    (nil))
(insn 30 29 31 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":24:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 31 30 32 4 6 (nil) [1 uses])
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 41 4 (set (reg:SI 0 ax [orig:87 _11 ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":26:12 75 {*movsi_internal}
     (nil))
(insn 41 33 44 4 (use (reg/i:SI 0 ax)) "kernel/sys.c":27:1 -1
     (nil))
(note 44 41 0 NOTE_INSN_DELETED)

;; Function sys_break (sys_break, funcdef_no=9, decl_uid=1375, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_break

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":31:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":32:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_setreuid (sys_setreuid, funcdef_no=10, decl_uid=1379, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 28:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 65:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 7
EBB 8 9 10 11
EBB 12
EBB 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 97: point = 0, n_alt = -1
   Insn 96: point = 0, n_alt = -2
   Insn 92: point = 1, n_alt = -2
  BB 13
   Insn 105: point = 4, n_alt = -1
   Insn 84: point = 4, n_alt = 0
   Insn 83: point = 5, n_alt = 3
   Insn 82: point = 6, n_alt = 0
   Insn 81: point = 8, n_alt = 0
   Insn 80: point = 9, n_alt = 0
   Insn 79: point = 11, n_alt = 0
  BB 7
   Insn 101: point = 14, n_alt = -1
   Insn 42: point = 14, n_alt = 0
  BB 14
   Insn 89: point = 15, n_alt = 0
  BB 12
   Insn 103: point = 16, n_alt = -1
   Insn 74: point = 16, n_alt = 3
   Insn 73: point = 17, n_alt = 0
   Insn 72: point = 19, n_alt = 0
   Insn 71: point = 20, n_alt = 0
   Insn 70: point = 22, n_alt = 0
  BB 11
   Insn 67: point = 25, n_alt = -1
   Insn 66: point = 25, n_alt = 0
   Insn 65: point = 26, n_alt = 2
   Insn 64: point = 28, n_alt = 0
   Insn 63: point = 30, n_alt = 0
  BB 10
   Insn 61: point = 32, n_alt = -1
   Insn 60: point = 32, n_alt = 0
   Insn 59: point = 33, n_alt = 0
   Insn 58: point = 35, n_alt = 2
   Insn 57: point = 37, n_alt = 0
   Insn 56: point = 39, n_alt = 0
  BB 9
   Insn 54: point = 41, n_alt = -1
   Insn 53: point = 41, n_alt = 1
   Insn 52: point = 42, n_alt = 0
  BB 8
   Insn 50: point = 44, n_alt = -1
   Insn 49: point = 44, n_alt = 1
  BB 6
   Insn 99: point = 45, n_alt = -1
   Insn 37: point = 45, n_alt = 3
   Insn 36: point = 46, n_alt = 0
   Insn 35: point = 48, n_alt = 0
   Insn 34: point = 49, n_alt = 0
   Insn 33: point = 51, n_alt = 0
  BB 5
   Insn 30: point = 53, n_alt = -1
   Insn 29: point = 53, n_alt = 0
   Insn 28: point = 54, n_alt = 2
   Insn 27: point = 56, n_alt = 0
   Insn 26: point = 58, n_alt = 0
  BB 4
   Insn 24: point = 60, n_alt = -1
   Insn 23: point = 60, n_alt = 1
   Insn 22: point = 61, n_alt = 0
  BB 3
   Insn 20: point = 63, n_alt = -1
   Insn 19: point = 63, n_alt = 0
   Insn 18: point = 64, n_alt = 0
   Insn 17: point = 66, n_alt = 2
   Insn 16: point = 68, n_alt = 0
   Insn 15: point = 70, n_alt = 0
  BB 2
   Insn 13: point = 72, n_alt = -1
   Insn 12: point = 72, n_alt = 1
   Insn 9: point = 72, n_alt = 1
   Insn 8: point = 73, n_alt = 0
   Insn 7: point = 75, n_alt = 2
   Insn 6: point = 77, n_alt = 0
   Insn 5: point = 79, n_alt = 0
   Insn 107: point = 80, n_alt = 0
 r82: [23..80] [12..13]
 r83: [76..77]
 r84: [74..75]
 r85: [67..68]
 r86: [65..66]
 r87: [63..64]
 r88: [55..56]
 r89: [53..54]
 r90: [45..49]
 r91: [45..46]
 r92: [36..37]
 r93: [34..35]
 r94: [32..33]
 r95: [27..28]
 r96: [25..26]
 r97: [16..20]
 r98: [16..17]
 r99: [5..9]
 r100: [5..6]
 r101: [14..15] [2..4]
 r102: [0..1]
 r103: [78..79]
 r104: [72..73]
 r105: [69..70]
 r106: [60..61]
 r107: [57..58]
 r108: [50..51]
 r109: [47..48]
 r110: [41..42]
 r111: [38..39]
 r112: [29..30]
 r113: [21..22]
 r114: [18..19]
 r115: [10..11]
 r116: [7..8]
Compressing live ranges: from 81 to 66 - 81%
Ranges after the compression:
 r82: [20..65] [10..11]
 r83: [62..63]
 r84: [60..61]
 r85: [54..55]
 r86: [52..53]
 r87: [50..51]
 r88: [44..45]
 r89: [42..43]
 r90: [36..39]
 r91: [36..37]
 r92: [30..31]
 r93: [28..29]
 r94: [26..27]
 r95: [22..23]
 r96: [20..21]
 r97: [14..17]
 r98: [14..15]
 r99: [4..7]
 r100: [4..5]
 r101: [12..13] [2..3]
 r102: [0..1]
 r103: [64..65]
 r104: [58..59]
 r105: [56..57]
 r106: [48..49]
 r107: [46..47]
 r108: [40..41]
 r109: [38..39]
 r110: [34..35]
 r111: [32..33]
 r112: [24..25]
 r113: [18..19]
 r114: [16..17]
 r115: [8..9]
 r116: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 107
changing reg in insn 79
changing reg in insn 70
changing reg in insn 63
changing reg in insn 56
changing reg in insn 33
changing reg in insn 26
changing reg in insn 15
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 71
changing reg in insn 74
changing reg in insn 73
changing reg in insn 74
changing reg in insn 80
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 89
changing reg in insn 84
changing reg in insn 42
changing reg in insn 92
changing reg in insn 92
changing reg in insn 96
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 15
changing reg in insn 16
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 27
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 52
changing reg in insn 53
changing reg in insn 56
changing reg in insn 57
changing reg in insn 63
changing reg in insn 64
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
deleting insn with uid = 36.
deleting insn with uid = 73.
deleting insn with uid = 82.
deleting insn with uid = 92.
deleting insn with uid = 96.
starting the processing of deferred insns
ending the processing of deferred insns


sys_setreuid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={9d,14u} r1={25d,24u} r2={2d,1u} r7={1d,27u} r17={9d,8u} 
;;    total ref usage 120{46d,74u,0e} in 58{58 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 107 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 107 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 107 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [103])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":40:27 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [orig:83 current.3_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [103]) [1 current+0 S4 A32])) "kernel/sys.c":40:27 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 1 dx [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:83 current.3_1 ] [83])
                (const_int 576 [0x240])) [8 current.3_1->uid+0 S2 A32])) "kernel/sys.c":40:27 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 dx [104])
        (zero_extend:SI (reg:HI 1 dx [orig:84 _2 ] [84]))) "kernel/sys.c":40:9 144 {*zero_extendhisi2}
     (nil))
(insn 9 8 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 old_ruid+0 S4 A32])
        (reg:SI 1 dx [104])) "kernel/sys.c":40:9 75 {*movsi_internal}
     (nil))
(insn 12 9 13 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [6 ruid+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":42:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "kernel/sys.c":42:8 806 {*jcc}
     (nil)
 -> 45)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:SI 1 dx [105])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":43:21 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 1 dx [orig:85 current.4_3 ] [85])
        (mem/f/c:SI (reg/f:SI 1 dx [105]) [1 current+0 S4 A32])) "kernel/sys.c":43:21 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:HI 1 dx [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:85 current.4_3 ] [85])
                (const_int 578 [0x242])) [8 current.4_3->euid+0 S2 A16])) "kernel/sys.c":43:21 76 {*movhi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (zero_extend:SI (reg:HI 1 dx [orig:86 _4 ] [86]))) "kernel/sys.c":43:21 144 {*zero_extendhisi2}
     (nil))
(insn 19 18 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [6 ruid+0 S4 A32])
            (reg:SI 1 dx [orig:87 _5 ] [87]))) "kernel/sys.c":43:12 11 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "kernel/sys.c":43:12 806 {*jcc}
     (nil)
 -> 31)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg:SI 1 dx [106])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 old_ruid+0 S4 A32])) "kernel/sys.c":43:37 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [106])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [6 ruid+0 S4 A32]))) "kernel/sys.c":43:37 11 {*cmpsi_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "kernel/sys.c":43:37 806 {*jcc}
     (nil)
 -> 31)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:SI 1 dx [107])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":45:13 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 1 dx [orig:88 current.5_6 ] [88])
        (mem/f/c:SI (reg/f:SI 1 dx [107]) [1 current+0 S4 A32])) "kernel/sys.c":45:13 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:HI 1 dx [orig:89 _7 ] [89])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:88 current.5_6 ] [88])
                (const_int 578 [0x242])) [8 current.5_6->euid+0 S2 A16])) "kernel/sys.c":45:13 76 {*movhi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:89 _7 ] [89])
            (const_int 0 [0]))) "kernel/sys.c":44:32 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/sys.c":44:32 806 {*jcc}
     (nil)
 -> 40)
(code_label 31 30 32 6 12 (nil) [2 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 1 dx [108])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":46:20 75 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg/f:SI 1 dx [orig:90 current.6_8 ] [90])
        (mem/f/c:SI (reg/f:SI 1 dx [108]) [1 current+0 S4 A32])) "kernel/sys.c":46:20 75 {*movsi_internal}
     (nil))
(insn 35 34 37 6 (set (reg:SI 2 cx [109])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 ruid+0 S4 A32])) "kernel/sys.c":46:26 75 {*movsi_internal}
     (nil))
(insn 37 35 99 6 (set (mem:HI (plus:SI (reg/f:SI 1 dx [orig:90 current.6_8 ] [90])
                (const_int 576 [0x240])) [8 current.6_8->uid+0 S2 A32])
        (reg:HI 2 cx [orig:91 _9 ] [91])) "kernel/sys.c":46:26 76 {*movhi_internal}
     (nil))
(jump_insn 99 37 100 6 (set (pc)
        (label_ref 45)) "kernel/sys.c":46:26 807 {jump}
     (nil)
 -> 45)
(barrier 100 99 40)
(code_label 40 100 41 7 13 (nil) [1 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 101 7 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":48:20 75 {*movsi_internal}
     (nil))
(jump_insn 101 42 102 7 (set (pc)
        (label_ref 90)) "kernel/sys.c":48:20 807 {jump}
     (nil)
 -> 90)
(barrier 102 101 45)
(code_label 45 102 46 8 11 (nil) [2 uses])
(note 46 45 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 46 50 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [6 euid+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":50:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "kernel/sys.c":50:8 806 {*jcc}
     (nil)
 -> 87)
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 9 (set (reg:SI 1 dx [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 old_ruid+0 S4 A32])) "kernel/sys.c":51:12 75 {*movsi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [110])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [6 euid+0 S4 A32]))) "kernel/sys.c":51:12 11 {*cmpsi_1}
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "kernel/sys.c":51:12 806 {*jcc}
     (nil)
 -> 68)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 10 (set (reg/f:SI 1 dx [111])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":52:21 75 {*movsi_internal}
     (nil))
(insn 57 56 58 10 (set (reg/f:SI 1 dx [orig:92 current.7_10 ] [92])
        (mem/f/c:SI (reg/f:SI 1 dx [111]) [1 current+0 S4 A32])) "kernel/sys.c":52:21 75 {*movsi_internal}
     (nil))
(insn 58 57 59 10 (set (reg:HI 1 dx [orig:93 _11 ] [93])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:92 current.7_10 ] [92])
                (const_int 578 [0x242])) [8 current.7_10->euid+0 S2 A16])) "kernel/sys.c":52:21 76 {*movhi_internal}
     (nil))
(insn 59 58 60 10 (set (reg:SI 1 dx [orig:94 _12 ] [94])
        (zero_extend:SI (reg:HI 1 dx [orig:93 _11 ] [93]))) "kernel/sys.c":52:21 144 {*zero_extendhisi2}
     (nil))
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [6 euid+0 S4 A32])
            (reg:SI 1 dx [orig:94 _12 ] [94]))) "kernel/sys.c":51:32 11 {*cmpsi_1}
     (nil))
(jump_insn 61 60 62 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "kernel/sys.c":51:32 806 {*jcc}
     (nil)
 -> 68)
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg/f:SI 1 dx [112])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":53:13 75 {*movsi_internal}
     (nil))
(insn 64 63 65 11 (set (reg/f:SI 1 dx [orig:95 current.8_13 ] [95])
        (mem/f/c:SI (reg/f:SI 1 dx [112]) [1 current+0 S4 A32])) "kernel/sys.c":53:13 75 {*movsi_internal}
     (nil))
(insn 65 64 66 11 (set (reg:HI 1 dx [orig:96 _14 ] [96])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:95 current.8_13 ] [95])
                (const_int 578 [0x242])) [8 current.8_13->euid+0 S2 A16])) "kernel/sys.c":53:13 76 {*movhi_internal}
     (nil))
(insn 66 65 67 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:96 _14 ] [96])
            (const_int 0 [0]))) "kernel/sys.c":52:37 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 67 66 68 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "kernel/sys.c":52:37 806 {*jcc}
     (nil)
 -> 77)
(code_label 68 67 69 12 16 (nil) [2 uses])
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 12 (set (reg/f:SI 0 ax [113])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":54:20 75 {*movsi_internal}
     (nil))
(insn 71 70 72 12 (set (reg/f:SI 0 ax [orig:97 current.9_15 ] [97])
        (mem/f/c:SI (reg/f:SI 0 ax [113]) [1 current+0 S4 A32])) "kernel/sys.c":54:20 75 {*movsi_internal}
     (nil))
(insn 72 71 74 12 (set (reg:SI 1 dx [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 euid+0 S4 A32])) "kernel/sys.c":54:27 75 {*movsi_internal}
     (nil))
(insn 74 72 103 12 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:97 current.9_15 ] [97])
                (const_int 578 [0x242])) [8 current.9_15->euid+0 S2 A16])
        (reg:HI 1 dx [orig:98 _16 ] [98])) "kernel/sys.c":54:27 76 {*movhi_internal}
     (nil))
(jump_insn 103 74 104 12 (set (pc)
        (label_ref 87)) "kernel/sys.c":54:27 807 {jump}
     (nil)
 -> 87)
(barrier 104 103 77)
(code_label 77 104 78 13 17 (nil) [1 uses])
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 13 (set (reg/f:SI 0 ax [115])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":56:20 75 {*movsi_internal}
     (nil))
(insn 80 79 81 13 (set (reg/f:SI 0 ax [orig:99 current.10_17 ] [99])
        (mem/f/c:SI (reg/f:SI 0 ax [115]) [1 current+0 S4 A32])) "kernel/sys.c":56:20 75 {*movsi_internal}
     (nil))
(insn 81 80 83 13 (set (reg:SI 1 dx [116])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 old_ruid+0 S4 A32])) "kernel/sys.c":56:26 75 {*movsi_internal}
     (nil))
(insn 83 81 84 13 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:99 current.10_17 ] [99])
                (const_int 576 [0x240])) [8 current.10_17->uid+0 S2 A32])
        (reg:HI 1 dx [orig:100 _18 ] [100])) "kernel/sys.c":56:26 76 {*movhi_internal}
     (nil))
(insn 84 83 105 13 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":57:20 75 {*movsi_internal}
     (nil))
(jump_insn 105 84 106 13 (set (pc)
        (label_ref 90)) "kernel/sys.c":57:20 807 {jump}
     (nil)
 -> 90)
(barrier 106 105 87)
(code_label 87 106 88 14 15 (nil) [2 uses])
(note 88 87 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 14 (set (reg:SI 0 ax [orig:101 _19 ] [101])
        (const_int 0 [0])) "kernel/sys.c":60:12 75 {*movsi_internal}
     (nil))
(code_label 90 89 91 15 14 (nil) [2 uses])
(note 91 90 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 91 108 15 (use (reg/i:SI 0 ax)) "kernel/sys.c":61:1 -1
     (nil))
(note 108 97 0 NOTE_INSN_DELETED)

;; Function sys_setuid (sys_setuid, funcdef_no=11, decl_uid=1383, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) lBwBz {*call_value} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = -2
   Insn 12: point = 1, n_alt = -2
   Insn 9: point = 3, n_alt = -2
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 4, n_alt = 0
   Insn 5: point = 4, n_alt = 0
   Insn 19: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 19
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
deleting insn with uid = 9.
deleting insn with uid = 12.
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns


sys_setuid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r7={4d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={3d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 90{79d,11u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 19 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 uid+0 S4 A32])) "kernel/sys.c":65:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 uid+0 S4 A32])) "kernel/sys.c":65:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_setreuid") [flags 0x3]  <function_decl 0x735c1dd3cc00 sys_setreuid>) [0 sys_setreuid S1 A8])
            (const_int 8 [0x8]))) "kernel/sys.c":65:13 823 {*call_value}
     (nil)
    (nil))
(insn 8 7 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":65:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 17 8 20 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":66:1 -1
     (nil))
(note 20 17 0 NOTE_INSN_DELETED)

;; Function sys_stime (sys_stime, funcdef_no=12, decl_uid=1386, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=12, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=21,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 23:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=103 from oldreg=101, assigning class AREG to r103
   23: {r95:SI=trunc(sign_extend(r103:SI)*sign_extend(r96:SI) 0>>0x20);clobber r103:SI;clobber flags:CC;}
      REG_DEAD r96:SI
      REG_UNUSED r101:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   46: r103:SI=r86:SI

          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 24:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=104 from oldreg=95, assigning class GENERAL_REGS to r104
   24: {r104:SI=r104:SI>>0x5;clobber flags:CC;}
      REG_DEAD r95:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   47: r104:SI=r95:SI
    Inserting insn reload after:
   48: r97:SI=r104:SI

            0 Costly set: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=11,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 25:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=105 from oldreg=86, assigning class GENERAL_REGS to r105
   25: {r105:SI=r105:SI>>0x1f;clobber flags:CC;}
      REG_DEAD r86:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   49: r105:SI=r86:SI
    Inserting insn reload after:
   50: r98:SI=r105:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=106 from oldreg=85, assigning class GENERAL_REGS to r106
   28: {r106:SI=r106:SI-r88:SI;clobber flags:CC;}
      REG_DEAD r88:SI
      REG_DEAD r85:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   51: r106:SI=r85:SI
    Inserting insn reload after:
   52: r89:SI=r106:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 40: point = 0, n_alt = -1
   Insn 39: point = 0, n_alt = -2
   Insn 35: point = 1, n_alt = -2
  BB 3
   Insn 42: point = 4, n_alt = -1
   Insn 11: point = 4, n_alt = 0
  BB 4
   Insn 32: point = 5, n_alt = 0
   Insn 31: point = 6, n_alt = 1
   Insn 30: point = 7, n_alt = 0
   Insn 29: point = 9, n_alt = -2
   Insn 52: point = 11, n_alt = -2
	Hard reg 0 is preferable by r106 with profit 1000
   Insn 28: point = 13, n_alt = 0
   Insn 51: point = 15, n_alt = -2
	Hard reg 0 is preferable by r106 with profit 1000
	Hard reg 4 is preferable by r106 with profit 1000
   Insn 27: point = 17, n_alt = -2
   Insn 26: point = 19, n_alt = 0
   Insn 50: point = 21, n_alt = -2
	Hard reg 1 is preferable by r105 with profit 1000
   Insn 25: point = 23, n_alt = 1
   Insn 49: point = 24, n_alt = -2
	Hard reg 1 is preferable by r105 with profit 1000
	Hard reg 2 is preferable by r105 with profit 1000
   Insn 48: point = 26, n_alt = -2
	Hard reg 0 is preferable by r104 with profit 1000
   Insn 24: point = 28, n_alt = 0
   Insn 47: point = 29, n_alt = -2
	Hard reg 0 is preferable by r104 with profit 1000
	Hard reg 1 is preferable by r104 with profit 1000
   Insn 23: point = 31, n_alt = 0
   Insn 46: point = 33, n_alt = -2
	Hard reg 2 is preferable by r103 with profit 1000
   Insn 22: point = 34, n_alt = 0
   Insn 21: point = 35, n_alt = 0
   Insn 20: point = 37, n_alt = 0
   Insn 19: point = 38, n_alt = -2
   Insn 18: point = 39, n_alt = 0
   Insn 17: point = 39, n_alt = 0
   Insn 16: point = 39, n_alt = 0
  BB 2
   Insn 9: point = 40, n_alt = -1
   Insn 8: point = 40, n_alt = 0
   Insn 7: point = 41, n_alt = 2
   Insn 6: point = 43, n_alt = 0
   Insn 5: point = 45, n_alt = 0
   Insn 44: point = 46, n_alt = 0
 r82: [8..46]
 r83: [42..43]
 r84: [40..41]
 r85: [16..38]
 r86: [25..35]
 r87: [18..19]
 r88: [14..17]
 r89: [10..11]
 r90: [6..9]
 r91: [2..5]
 r92: [0..1]
 r93: [44..45]
 r94: [36..37]
 r95: [30..31]
 r96: [32..34]
 r97: [20..26]
 r98: [20..21]
 r99: [6..7]
 r103: [31..33]
 r104: [27..29]
 r105: [22..24]
 r106: [12..15]
Compressing live ranges: from 47 to 36 - 76%
Ranges after the compression:
 r82: [6..35]
 r83: [32..33]
 r84: [30..31]
 r85: [12..29]
 r86: [20..27]
 r87: [14..15]
 r88: [10..13]
 r89: [8..9]
 r90: [4..7]
 r91: [2..3]
 r92: [0..1]
 r93: [34..35]
 r94: [28..29]
 r95: [24..25]
 r96: [26..27]
 r97: [16..21]
 r98: [16..17]
 r99: [4..5]
 r103: [25..27]
 r104: [22..23]
 r105: [18..19]
 r106: [10..11]

********** Assignment #1: **********

	 Assigning to 103 (cl=AREG, orig=101, freq=2000, tfirst=103, tfreq=2000)...
	   Assign 0 to reload r103 (freq=2000)
	 Assigning to 104 (cl=GENERAL_REGS, orig=95, freq=3000, tfirst=104, tfreq=3000)...
	   Assign 0 to reload r104 (freq=3000)
	 Assigning to 105 (cl=GENERAL_REGS, orig=86, freq=3000, tfirst=105, tfreq=3000)...
	   Assign 2 to reload r105 (freq=3000)
	 Assigning to 106 (cl=GENERAL_REGS, orig=85, freq=3000, tfirst=106, tfreq=3000)...
	   Assign 0 to reload r106 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=12, prev_offset=12)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 44
changing reg in insn 30
changing reg in insn 20
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 19
changing reg in insn 21
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 11
changing reg in insn 35
changing reg in insn 35
changing reg in insn 39
changing reg in insn 5
changing reg in insn 6
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
deleting insn with uid = 48.
deleting insn with uid = 49.
deleting insn with uid = 52.
deleting insn with uid = 35.
deleting insn with uid = 39.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.


sys_stime

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,14u} r1={7d,5u} r2={4d,3u} r3={1d,3u} r4={1d,1u} r7={3d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={9d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 143{106d,37u,0e} in 30{29 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 44 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 44 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [93])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":70:10 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 current.11_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [93]) [1 current+0 S4 A32])) "kernel/sys.c":70:10 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 0 ax [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 0 ax [orig:83 current.11_1 ] [83])
                (const_int 578 [0x242])) [8 current.11_1->euid+0 S2 A16])) "kernel/sys.c":70:10 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "kernel/sys.c":70:8 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "kernel/sys.c":70:8 806 {*jcc}
     (nil)
 -> 14)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 42 3 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":71:16 75 {*movsi_internal}
     (nil))
(jump_insn 42 11 43 3 (set (pc)
        (label_ref 33)) "kernel/sys.c":71:16 807 {jump}
     (nil)
 -> 33)
(barrier 43 42 14)
(code_label 14 43 15 4 21 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [16 tptr+0 S4 A32])) "kernel/sys.c":72:20 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_long") [flags 0x3]  <function_decl 0x735c1dd3c000 get_fs_long>) [0 get_fs_long S1 A8])
            (const_int 4 [0x4]))) "kernel/sys.c":72:20 823 {*call_value}
     (nil)
    (nil))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":72:20 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 18 20 4 (set (reg:SI 4 si [orig:85 _3 ] [85])
        (reg:SI 0 ax)) "kernel/sys.c":72:20 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 0 ax [94])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x735c1dd2e360 jiffies>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":72:65 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 2 cx [orig:86 jiffies.12_4 ] [86])
        (mem/v/c:SI (reg/f:SI 0 ax [94]) [3 jiffies+0 S4 A32])) "kernel/sys.c":72:65 75 {*movsi_internal}
     (nil))
(insn 22 21 46 4 (set (reg:SI 1 dx [96])
        (const_int 1374389535 [0x51eb851f])) "kernel/sys.c":72:65 75 {*movsi_internal}
     (nil))
(insn 46 22 23 4 (set (reg:SI 0 ax [101])
        (reg:SI 2 cx [orig:86 jiffies.12_4 ] [86])) "kernel/sys.c":72:65 75 {*movsi_internal}
     (nil))
(insn 23 46 47 4 (parallel [
            (set (reg:SI 1 dx [95])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [101]))
                            (sign_extend:DI (reg:SI 1 dx [96])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [101]))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":72:65 435 {*smulsi3_highpart_1}
     (nil))
(insn 47 23 24 4 (set (reg:SI 0 ax [95])
        (reg:SI 1 dx [95])) "kernel/sys.c":72:65 75 {*movsi_internal}
     (nil))
(insn 24 47 25 4 (parallel [
            (set (reg:SI 0 ax [95])
                (ashiftrt:SI (reg:SI 0 ax [95])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":72:65 702 {*ashrsi3_1}
     (nil))
(insn 25 24 50 4 (parallel [
            (set (reg:SI 2 cx [orig:86 jiffies.12_4 ] [86])
                (ashiftrt:SI (reg:SI 2 cx [orig:86 jiffies.12_4 ] [86])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":72:65 694 {ashrsi3_cvt}
     (nil))
(insn 50 25 26 4 (set (reg:SI 1 dx [98])
        (reg:SI 2 cx [orig:86 jiffies.12_4 ] [86])) "kernel/sys.c":72:65 75 {*movsi_internal}
     (nil))
(insn 26 50 27 4 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (minus:SI (reg:SI 0 ax [97])
                    (reg:SI 1 dx [98])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":72:65 282 {*subsi_1}
     (nil))
(insn 27 26 51 4 (set (reg:SI 1 dx [orig:88 _6 ] [88])
        (reg:SI 0 ax [orig:87 _5 ] [87])) "kernel/sys.c":72:65 75 {*movsi_internal}
     (nil))
(insn 51 27 28 4 (set (reg:SI 0 ax [orig:85 _3 ] [85])
        (reg:SI 4 si [orig:85 _3 ] [85])) "kernel/sys.c":72:55 75 {*movsi_internal}
     (nil))
(insn 28 51 29 4 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (minus:SI (reg:SI 0 ax [orig:85 _3 ] [85])
                    (reg:SI 1 dx [orig:88 _6 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":72:55 282 {*subsi_1}
     (nil))
(insn 29 28 30 4 (set (reg:SI 1 dx [orig:90 _8 ] [90])
        (reg:SI 0 ax [orig:89 _7 ] [89])) "kernel/sys.c":72:55 75 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg/f:SI 0 ax [99])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("startup_time") [flags 0x40]  <var_decl 0x735c1dd2e3f0 startup_time>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":72:18 75 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (mem/c:SI (reg/f:SI 0 ax [99]) [3 startup_time+0 S4 A32])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "kernel/sys.c":72:18 75 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 0 ax [orig:91 _9 ] [91])
        (const_int 0 [0])) "kernel/sys.c":73:12 75 {*movsi_internal}
     (nil))
(code_label 33 32 34 5 22 (nil) [1 uses])
(note 34 33 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 34 45 5 (use (reg/i:SI 0 ax)) "kernel/sys.c":74:1 -1
     (nil))
(note 45 40 0 NOTE_INSN_DELETED)

;; Function sys_times (sys_times, funcdef_no=13, decl_uid=1389, cgraph_uid=14, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 25:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 36:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 47:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 68: point = 0, n_alt = -1
   Insn 67: point = 0, n_alt = -2
   Insn 63: point = 1, n_alt = -2
   Insn 60: point = 3, n_alt = 0
   Insn 59: point = 5, n_alt = 0
  BB 3
   Insn 56: point = 8, n_alt = 0
   Insn 55: point = 8, n_alt = 0
   Insn 54: point = 8, n_alt = 0
   Insn 53: point = 9, n_alt = 0
   Insn 52: point = 10, n_alt = 0
   Insn 51: point = 10, n_alt = -2
   Insn 50: point = 12, n_alt = 0
   Insn 49: point = 14, n_alt = 0
   Insn 48: point = 16, n_alt = 0
   Insn 47: point = 17, n_alt = 3
   Insn 46: point = 19, n_alt = 0
   Insn 45: point = 20, n_alt = 0
   Insn 44: point = 20, n_alt = 0
   Insn 43: point = 20, n_alt = 0
   Insn 42: point = 21, n_alt = 0
   Insn 41: point = 22, n_alt = 0
   Insn 40: point = 22, n_alt = -2
   Insn 39: point = 24, n_alt = 0
   Insn 38: point = 26, n_alt = 0
   Insn 37: point = 28, n_alt = 0
   Insn 36: point = 29, n_alt = 3
   Insn 35: point = 31, n_alt = 0
   Insn 34: point = 32, n_alt = 0
   Insn 33: point = 32, n_alt = 0
   Insn 32: point = 32, n_alt = 0
   Insn 31: point = 33, n_alt = 0
   Insn 30: point = 34, n_alt = 0
   Insn 29: point = 34, n_alt = -2
   Insn 28: point = 36, n_alt = 0
   Insn 27: point = 38, n_alt = 0
   Insn 26: point = 40, n_alt = 0
   Insn 25: point = 41, n_alt = 3
   Insn 24: point = 43, n_alt = 0
   Insn 23: point = 44, n_alt = 0
   Insn 22: point = 44, n_alt = 0
   Insn 21: point = 44, n_alt = 0
   Insn 20: point = 45, n_alt = 0
   Insn 19: point = 46, n_alt = 0
   Insn 18: point = 46, n_alt = -2
   Insn 17: point = 48, n_alt = 0
   Insn 16: point = 50, n_alt = 0
   Insn 15: point = 52, n_alt = 0
   Insn 14: point = 53, n_alt = 0
   Insn 13: point = 54, n_alt = 0
   Insn 12: point = 54, n_alt = 0
   Insn 11: point = 54, n_alt = -2
   Insn 10: point = 54, n_alt = 0
   Insn 9: point = 54, n_alt = 0
   Insn 8: point = 54, n_alt = 0
  BB 2
   Insn 6: point = 55, n_alt = -1
   Insn 5: point = 55, n_alt = 1
   Insn 70: point = 55, n_alt = 0
 r82: [6..55]
 r83: [45..53]
 r84: [49..50]
 r85: [47..48]
 r86: [44..46]
 r87: [33..41]
 r88: [37..38]
 r89: [35..36]
 r90: [32..34]
 r91: [21..29]
 r92: [25..26]
 r93: [23..24]
 r94: [20..22]
 r95: [9..17]
 r96: [13..14]
 r97: [11..12]
 r98: [8..10]
 r99: [2..3]
 r100: [0..1]
 r101: [51..52]
 r102: [42..43]
 r103: [39..40]
 r104: [30..31]
 r105: [27..28]
 r106: [18..19]
 r107: [15..16]
 r108: [4..5]
Compressing live ranges: from 56 to 44 - 78%
Ranges after the compression:
 r82: [6..43]
 r83: [36..43]
 r84: [40..41]
 r85: [38..39]
 r86: [36..37]
 r87: [26..33]
 r88: [30..31]
 r89: [28..29]
 r90: [26..27]
 r91: [16..23]
 r92: [20..21]
 r93: [18..19]
 r94: [16..17]
 r95: [6..13]
 r96: [10..11]
 r97: [8..9]
 r98: [6..7]
 r99: [2..3]
 r100: [0..1]
 r101: [42..43]
 r102: [34..35]
 r103: [32..33]
 r104: [24..25]
 r105: [22..23]
 r106: [14..15]
 r107: [12..13]
 r108: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 70
changing reg in insn 59
changing reg in insn 48
changing reg in insn 37
changing reg in insn 26
changing reg in insn 15
changing reg in insn 11
changing reg in insn 14
changing reg in insn 20
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 21
changing reg in insn 25
changing reg in insn 31
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 32
changing reg in insn 36
changing reg in insn 42
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 43
changing reg in insn 47
changing reg in insn 53
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 54
changing reg in insn 60
changing reg in insn 63
changing reg in insn 63
changing reg in insn 67
changing reg in insn 15
changing reg in insn 16
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 59
changing reg in insn 60
deleting insn with uid = 11.
deleting insn with uid = 18.
deleting insn with uid = 29.
deleting insn with uid = 40.
deleting insn with uid = 51.
deleting insn with uid = 63.
deleting insn with uid = 67.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 55.


sys_times

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={21d,16u} r1={12d,6u} r2={6d} r3={1d,6u} r7={21d,45u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={3e} r17={20d,1u} r18={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 483{406d,74u,3e} in 50{45 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 70 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 70 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 70 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [18 tbuf+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":78:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "kernel/sys.c":78:8 806 {*jcc}
     (nil)
 -> 57)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":79:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 9 8 10 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 16 [0x10])) "kernel/sys.c":79:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 10 9 12 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [18  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [18 tbuf+0 S4 A32])) "kernel/sys.c":79:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 12 10 13 3 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x735c1dd38500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":79:9 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 13 12 14 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":79:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 14 13 15 3 (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [18 tbuf+0 S4 A32])) "kernel/sys.c":80:54 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg/f:SI 1 dx [101])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":80:28 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 1 dx [orig:84 current.13_2 ] [84])
        (mem/f/c:SI (reg/f:SI 1 dx [101]) [1 current+0 S4 A32])) "kernel/sys.c":80:28 75 {*movsi_internal}
     (nil))
(insn 17 16 19 3 (set (reg:SI 1 dx [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:84 current.13_2 ] [84])
                (const_int 592 [0x250])) [3 current.13_2->utime+0 S4 A32])) "kernel/sys.c":80:28 75 {*movsi_internal}
     (nil))
(insn 19 17 20 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":80:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 20 19 21 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 0 ax [orig:83 _1 ] [83])) "kernel/sys.c":80:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 21 20 22 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:86 _4 ] [86])) "kernel/sys.c":80:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x735c1dd38a00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":80:9 812 {*call}
     (nil)
    (nil))
(insn 23 22 24 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":80:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 24 23 25 3 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [18 tbuf+0 S4 A32])) "kernel/sys.c":81:54 75 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg/f:SI 1 dx [orig:87 _5 ] [87])
                (plus:SI (reg/f:SI 0 ax [102])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":81:54 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 tbuf+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 26 25 27 3 (set (reg/f:SI 0 ax [103])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":81:28 75 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg/f:SI 0 ax [orig:88 current.14_6 ] [88])
        (mem/f/c:SI (reg/f:SI 0 ax [103]) [1 current+0 S4 A32])) "kernel/sys.c":81:28 75 {*movsi_internal}
     (nil))
(insn 28 27 30 3 (set (reg:SI 0 ax [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:88 current.14_6 ] [88])
                (const_int 596 [0x254])) [3 current.14_6->stime+0 S4 A32])) "kernel/sys.c":81:28 75 {*movsi_internal}
     (nil))
(insn 30 28 31 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":81:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 31 30 32 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 1 dx [orig:87 _5 ] [87])) "kernel/sys.c":81:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 32 31 33 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:90 _8 ] [90])) "kernel/sys.c":81:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 33 32 34 3 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x735c1dd38a00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":81:9 812 {*call}
     (nil)
    (nil))
(insn 34 33 35 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":81:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 35 34 36 3 (set (reg/f:SI 0 ax [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [18 tbuf+0 S4 A32])) "kernel/sys.c":82:55 75 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (parallel [
            (set (reg/f:SI 1 dx [orig:91 _9 ] [91])
                (plus:SI (reg/f:SI 0 ax [104])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":82:55 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 tbuf+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 37 36 38 3 (set (reg/f:SI 0 ax [105])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":82:28 75 {*movsi_internal}
     (nil))
(insn 38 37 39 3 (set (reg/f:SI 0 ax [orig:92 current.15_10 ] [92])
        (mem/f/c:SI (reg/f:SI 0 ax [105]) [1 current+0 S4 A32])) "kernel/sys.c":82:28 75 {*movsi_internal}
     (nil))
(insn 39 38 41 3 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:92 current.15_10 ] [92])
                (const_int 600 [0x258])) [3 current.15_10->cutime+0 S4 A32])) "kernel/sys.c":82:28 75 {*movsi_internal}
     (nil))
(insn 41 39 42 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":82:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 42 41 43 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 1 dx [orig:91 _9 ] [91])) "kernel/sys.c":82:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 43 42 44 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:94 _12 ] [94])) "kernel/sys.c":82:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 44 43 45 3 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x735c1dd38a00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":82:9 812 {*call}
     (nil)
    (nil))
(insn 45 44 46 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":82:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 46 45 47 3 (set (reg/f:SI 0 ax [106])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [18 tbuf+0 S4 A32])) "kernel/sys.c":83:55 75 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (parallel [
            (set (reg/f:SI 1 dx [orig:95 _13 ] [95])
                (plus:SI (reg/f:SI 0 ax [106])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":83:55 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [18 tbuf+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 48 47 49 3 (set (reg/f:SI 0 ax [107])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":83:28 75 {*movsi_internal}
     (nil))
(insn 49 48 50 3 (set (reg/f:SI 0 ax [orig:96 current.16_14 ] [96])
        (mem/f/c:SI (reg/f:SI 0 ax [107]) [1 current+0 S4 A32])) "kernel/sys.c":83:28 75 {*movsi_internal}
     (nil))
(insn 50 49 52 3 (set (reg:SI 0 ax [orig:97 _15 ] [97])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:96 current.16_14 ] [96])
                (const_int 604 [0x25c])) [3 current.16_14->cstime+0 S4 A32])) "kernel/sys.c":83:28 75 {*movsi_internal}
     (nil))
(insn 52 50 53 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":83:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 53 52 54 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [16  S4 A32])
        (reg/f:SI 1 dx [orig:95 _13 ] [95])) "kernel/sys.c":83:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 54 53 55 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:98 _16 ] [98])) "kernel/sys.c":83:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 55 54 56 3 (call (mem:QI (symbol_ref:SI ("put_fs_long") [flags 0x3]  <function_decl 0x735c1dd38a00 put_fs_long>) [0 put_fs_long S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":83:9 812 {*call}
     (nil)
    (nil))
(insn 56 55 57 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":83:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 57 56 58 4 24 (nil) [1 uses])
(note 58 57 59 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 4 (set (reg/f:SI 0 ax [108])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("jiffies") [flags 0x40]  <var_decl 0x735c1dd2e360 jiffies>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":85:12 75 {*movsi_internal}
     (nil))
(insn 60 59 68 4 (set (reg:SI 0 ax [orig:99 _25 ] [99])
        (mem/v/c:SI (reg/f:SI 0 ax [108]) [3 jiffies+0 S4 A32])) "kernel/sys.c":85:12 75 {*movsi_internal}
     (nil))
(insn 68 60 71 4 (use (reg/i:SI 0 ax)) "kernel/sys.c":86:1 -1
     (nil))
(note 71 68 0 NOTE_INSN_DELETED)

;; Function sys_brk (sys_brk, funcdef_no=14, decl_uid=1392, cgraph_uid=15, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 35: point = 0, n_alt = -1
   Insn 34: point = 0, n_alt = -2
   Insn 30: point = 1, n_alt = -2
   Insn 27: point = 3, n_alt = -2
   Insn 26: point = 5, n_alt = 0
   Insn 25: point = 7, n_alt = 0
   Insn 24: point = 9, n_alt = 0
  BB 4
   Insn 21: point = 12, n_alt = 1
   Insn 20: point = 13, n_alt = 0
   Insn 19: point = 14, n_alt = 0
   Insn 18: point = 16, n_alt = 0
  BB 3
   Insn 16: point = 18, n_alt = -1
   Insn 15: point = 18, n_alt = 0
   Insn 14: point = 19, n_alt = 0
   Insn 13: point = 21, n_alt = 0
   Insn 12: point = 23, n_alt = 0
   Insn 11: point = 25, n_alt = 0
  BB 2
   Insn 9: point = 27, n_alt = -1
   Insn 8: point = 27, n_alt = 0
   Insn 7: point = 28, n_alt = 0
   Insn 6: point = 30, n_alt = 0
   Insn 5: point = 32, n_alt = 0
   Insn 37: point = 33, n_alt = 0
 r82: [10..33]
 r83: [29..30]
 r84: [27..28]
 r85: [22..23]
 r86: [20..21]
 r87: [18..19]
 r88: [12..14]
 r89: [6..7]
 r90: [4..5]
 r91: [2..3]
 r92: [0..1]
 r93: [31..32]
 r94: [24..25]
 r95: [15..16]
 r96: [12..13]
 r97: [8..9]
Compressing live ranges: from 34 to 28 - 82%
Ranges after the compression:
 r82: [10..27]
 r83: [24..25]
 r84: [22..23]
 r85: [18..19]
 r86: [16..17]
 r87: [14..15]
 r88: [10..11]
 r89: [6..7]
 r90: [4..5]
 r91: [2..3]
 r92: [0..1]
 r93: [26..27]
 r94: [20..21]
 r95: [12..13]
 r96: [10..11]
 r97: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 37
changing reg in insn 24
changing reg in insn 18
changing reg in insn 11
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 21
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 30
changing reg in insn 30
changing reg in insn 34
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 27.
deleting insn with uid = 30.
deleting insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns


sys_brk

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={5d,8u} r1={10d,9u} r2={2d,1u} r7={1d,8u} r17={4d,2u} 
;;    total ref usage 50{22d,28u,0e} in 20{20 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 37 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 37 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 37 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [93])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":90:32 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [orig:83 current.17_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [93]) [1 current+0 S4 A32])) "kernel/sys.c":90:32 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:83 current.17_1 ] [83])
                (const_int 540 [0x21c])) [3 current.17_1->end_code+0 S4 A32])) "kernel/sys.c":90:32 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [3 end_data_seg+0 S4 A32])
            (reg:SI 1 dx [orig:84 _2 ] [84]))) "kernel/sys.c":90:8 11 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "kernel/sys.c":90:8 806 {*jcc}
     (nil)
 -> 22)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 1 dx [94])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":91:32 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 1 dx [orig:85 current.18_3 ] [85])
        (mem/f/c:SI (reg/f:SI 1 dx [94]) [1 current+0 S4 A32])) "kernel/sys.c":91:32 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 1 dx [orig:86 _4 ] [86])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:85 current.18_3 ] [85])
                (const_int 552 [0x228])) [3 current.18_3->start_stack+0 S4 A32])) "kernel/sys.c":91:32 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (plus:SI (reg:SI 1 dx [orig:86 _4 ] [86])
                    (const_int -16384 [0xffffffffffffc000])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":91:46 209 {*addsi_1}
     (nil))
(insn 15 14 16 3 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [3 end_data_seg+0 S4 A32])
            (reg:SI 1 dx [orig:87 _5 ] [87]))) "kernel/sys.c":90:43 11 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "kernel/sys.c":90:43 806 {*jcc}
     (nil)
 -> 22)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 1 dx [95])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":92:16 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 1 dx [orig:88 current.19_6 ] [88])
        (mem/f/c:SI (reg/f:SI 1 dx [95]) [1 current+0 S4 A32])) "kernel/sys.c":92:16 75 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 2 cx [96])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [3 end_data_seg+0 S4 A32])) "kernel/sys.c":92:22 75 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:88 current.19_6 ] [88])
                (const_int 548 [0x224])) [3 current.19_6->brk+0 S4 A32])
        (reg:SI 2 cx [96])) "kernel/sys.c":92:22 75 {*movsi_internal}
     (nil))
(code_label 22 21 23 5 27 (nil) [2 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 0 ax [97])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":93:19 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 0 ax [orig:89 current.20_7 ] [89])
        (mem/f/c:SI (reg/f:SI 0 ax [97]) [1 current+0 S4 A32])) "kernel/sys.c":93:19 75 {*movsi_internal}
     (nil))
(insn 26 25 35 5 (set (reg:SI 0 ax [orig:90 _8 ] [90])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:89 current.20_7 ] [89])
                (const_int 548 [0x224])) [3 current.20_7->brk+0 S4 A32])) "kernel/sys.c":93:19 75 {*movsi_internal}
     (nil))
(insn 35 26 38 5 (use (reg/i:SI 0 ax)) "kernel/sys.c":94:1 -1
     (nil))
(note 38 35 0 NOTE_INSN_DELETED)

;; Function sys_setregid (sys_setregid, funcdef_no=15, decl_uid=1396, cgraph_uid=16, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 19:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 45:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 52:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 59:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 66:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 75:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6
EBB 7 8 9 10 11
EBB 12
EBB 13
EBB 14
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 93: point = 0, n_alt = -1
   Insn 92: point = 0, n_alt = -2
   Insn 88: point = 1, n_alt = -2
  BB 13
   Insn 101: point = 4, n_alt = -1
   Insn 80: point = 4, n_alt = 0
  BB 6
   Insn 97: point = 5, n_alt = -1
   Insn 33: point = 5, n_alt = 0
  BB 14
   Insn 85: point = 6, n_alt = 0
  BB 12
   Insn 99: point = 7, n_alt = -1
   Insn 75: point = 7, n_alt = 3
   Insn 74: point = 8, n_alt = 0
   Insn 73: point = 10, n_alt = 0
   Insn 72: point = 11, n_alt = 0
   Insn 71: point = 13, n_alt = 0
  BB 11
   Insn 68: point = 16, n_alt = -1
   Insn 67: point = 16, n_alt = 0
   Insn 66: point = 17, n_alt = 2
   Insn 65: point = 19, n_alt = 0
   Insn 64: point = 21, n_alt = 0
  BB 10
   Insn 62: point = 23, n_alt = -1
   Insn 61: point = 23, n_alt = 0
   Insn 60: point = 24, n_alt = 0
   Insn 59: point = 26, n_alt = 2
   Insn 58: point = 28, n_alt = 0
   Insn 57: point = 30, n_alt = 0
  BB 9
   Insn 55: point = 32, n_alt = -1
   Insn 54: point = 32, n_alt = 0
   Insn 53: point = 33, n_alt = 0
   Insn 52: point = 35, n_alt = 2
   Insn 51: point = 37, n_alt = 0
   Insn 50: point = 39, n_alt = 0
  BB 8
   Insn 48: point = 41, n_alt = -1
   Insn 47: point = 41, n_alt = 0
   Insn 46: point = 42, n_alt = 0
   Insn 45: point = 44, n_alt = 2
   Insn 44: point = 46, n_alt = 0
   Insn 43: point = 48, n_alt = 0
  BB 7
   Insn 41: point = 50, n_alt = -1
   Insn 40: point = 50, n_alt = 1
  BB 5
   Insn 95: point = 51, n_alt = -1
   Insn 28: point = 51, n_alt = 3
   Insn 27: point = 52, n_alt = 0
   Insn 26: point = 54, n_alt = 0
   Insn 25: point = 55, n_alt = 0
   Insn 24: point = 57, n_alt = 0
  BB 4
   Insn 21: point = 59, n_alt = -1
   Insn 20: point = 59, n_alt = 0
   Insn 19: point = 60, n_alt = 2
   Insn 18: point = 62, n_alt = 0
   Insn 17: point = 64, n_alt = 0
  BB 3
   Insn 15: point = 66, n_alt = -1
   Insn 14: point = 66, n_alt = 0
   Insn 13: point = 67, n_alt = 0
   Insn 12: point = 69, n_alt = 2
   Insn 11: point = 71, n_alt = 0
   Insn 10: point = 73, n_alt = 0
  BB 2
   Insn 8: point = 75, n_alt = -1
   Insn 7: point = 75, n_alt = 1
   Insn 103: point = 75, n_alt = 0
 r82: [14..75]
 r83: [70..71]
 r84: [68..69]
 r85: [66..67]
 r86: [61..62]
 r87: [59..60]
 r88: [51..55]
 r89: [51..52]
 r90: [45..46]
 r91: [43..44]
 r92: [41..42]
 r93: [36..37]
 r94: [34..35]
 r95: [32..33]
 r96: [27..28]
 r97: [25..26]
 r98: [23..24]
 r99: [18..19]
 r100: [16..17]
 r101: [7..11]
 r102: [7..8]
 r103: [2..6]
 r104: [0..1]
 r105: [72..73]
 r106: [63..64]
 r107: [56..57]
 r108: [53..54]
 r109: [47..48]
 r110: [38..39]
 r111: [29..30]
 r112: [20..21]
 r113: [12..13]
 r114: [9..10]
Compressing live ranges: from 76 to 60 - 78%
Ranges after the compression:
 r82: [10..59]
 r83: [56..57]
 r84: [54..55]
 r85: [52..53]
 r86: [48..49]
 r87: [46..47]
 r88: [40..43]
 r89: [40..41]
 r90: [36..37]
 r91: [34..35]
 r92: [32..33]
 r93: [28..29]
 r94: [26..27]
 r95: [24..25]
 r96: [20..21]
 r97: [18..19]
 r98: [16..17]
 r99: [12..13]
 r100: [10..11]
 r101: [4..7]
 r102: [4..5]
 r103: [2..3]
 r104: [0..1]
 r105: [58..59]
 r106: [50..51]
 r107: [44..45]
 r108: [42..43]
 r109: [38..39]
 r110: [30..31]
 r111: [22..23]
 r112: [14..15]
 r113: [8..9]
 r114: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 103
changing reg in insn 71
changing reg in insn 64
changing reg in insn 57
changing reg in insn 50
changing reg in insn 43
changing reg in insn 24
changing reg in insn 17
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 25
changing reg in insn 28
changing reg in insn 27
changing reg in insn 28
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 67
changing reg in insn 72
changing reg in insn 75
changing reg in insn 74
changing reg in insn 75
changing reg in insn 85
changing reg in insn 80
changing reg in insn 33
changing reg in insn 88
changing reg in insn 88
changing reg in insn 92
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 43
changing reg in insn 44
changing reg in insn 50
changing reg in insn 51
changing reg in insn 57
changing reg in insn 58
changing reg in insn 64
changing reg in insn 65
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
deleting insn with uid = 27.
deleting insn with uid = 74.
deleting insn with uid = 88.
deleting insn with uid = 92.
starting the processing of deferred insns
ending the processing of deferred insns


sys_setregid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={7d,12u} r1={26d,25u} r2={2d,1u} r7={1d,23u} r17={9d,8u} 
;;    total ref usage 114{45d,69u,0e} in 55{55 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 103 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 103 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 103 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [6 rgid+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":98:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) "kernel/sys.c":98:8 806 {*jcc}
     (nil)
 -> 36)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 1 dx [105])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":99:21 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:SI 1 dx [orig:83 current.21_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [105]) [1 current+0 S4 A32])) "kernel/sys.c":99:21 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:HI 1 dx [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:83 current.21_1 ] [83])
                (const_int 582 [0x246])) [8 current.21_1->gid+0 S2 A16])) "kernel/sys.c":99:21 76 {*movhi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 1 dx [orig:85 _3 ] [85])
        (zero_extend:SI (reg:HI 1 dx [orig:84 _2 ] [84]))) "kernel/sys.c":99:21 144 {*zero_extendhisi2}
     (nil))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [6 rgid+0 S4 A32])
            (reg:SI 1 dx [orig:85 _3 ] [85]))) "kernel/sys.c":99:12 11 {*cmpsi_1}
     (nil))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "kernel/sys.c":99:12 806 {*jcc}
     (nil)
 -> 22)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 1 dx [106])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":100:14 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 1 dx [orig:86 current.22_4 ] [86])
        (mem/f/c:SI (reg/f:SI 1 dx [106]) [1 current+0 S4 A32])) "kernel/sys.c":100:14 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:HI 1 dx [orig:87 _5 ] [87])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:86 current.22_4 ] [86])
                (const_int 578 [0x242])) [8 current.22_4->euid+0 S2 A16])) "kernel/sys.c":100:14 76 {*movhi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:87 _5 ] [87])
            (const_int 0 [0]))) "kernel/sys.c":99:36 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "kernel/sys.c":99:36 806 {*jcc}
     (nil)
 -> 31)
(code_label 22 21 23 5 31 (nil) [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:SI 1 dx [107])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":101:20 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 1 dx [orig:88 current.23_6 ] [88])
        (mem/f/c:SI (reg/f:SI 1 dx [107]) [1 current+0 S4 A32])) "kernel/sys.c":101:20 75 {*movsi_internal}
     (nil))
(insn 26 25 28 5 (set (reg:SI 2 cx [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 rgid+0 S4 A32])) "kernel/sys.c":101:26 75 {*movsi_internal}
     (nil))
(insn 28 26 95 5 (set (mem:HI (plus:SI (reg/f:SI 1 dx [orig:88 current.23_6 ] [88])
                (const_int 582 [0x246])) [8 current.23_6->gid+0 S2 A16])
        (reg:HI 2 cx [orig:89 _7 ] [89])) "kernel/sys.c":101:26 76 {*movhi_internal}
     (nil))
(jump_insn 95 28 96 5 (set (pc)
        (label_ref 36)) "kernel/sys.c":101:26 807 {jump}
     (nil)
 -> 36)
(barrier 96 95 31)
(code_label 31 96 32 6 32 (nil) [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 97 6 (set (reg:SI 0 ax [orig:103 _21 ] [103])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":103:20 75 {*movsi_internal}
     (nil))
(jump_insn 97 33 98 6 (set (pc)
        (label_ref 86)) "kernel/sys.c":103:20 807 {jump}
     (nil)
 -> 86)
(barrier 98 97 36)
(code_label 36 98 37 7 30 (nil) [2 uses])
(note 37 36 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 37 41 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 egid+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":105:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 42 7 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "kernel/sys.c":105:8 806 {*jcc}
     (nil)
 -> 83)
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg/f:SI 1 dx [109])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":106:21 75 {*movsi_internal}
     (nil))
(insn 44 43 45 8 (set (reg/f:SI 1 dx [orig:90 current.24_8 ] [90])
        (mem/f/c:SI (reg/f:SI 1 dx [109]) [1 current+0 S4 A32])) "kernel/sys.c":106:21 75 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:HI 1 dx [orig:91 _9 ] [91])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:90 current.24_8 ] [90])
                (const_int 582 [0x246])) [8 current.24_8->gid+0 S2 A16])) "kernel/sys.c":106:21 76 {*movhi_internal}
     (nil))
(insn 46 45 47 8 (set (reg:SI 1 dx [orig:92 _10 ] [92])
        (zero_extend:SI (reg:HI 1 dx [orig:91 _9 ] [91]))) "kernel/sys.c":106:21 144 {*zero_extendhisi2}
     (nil))
(insn 47 46 48 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 egid+0 S4 A32])
            (reg:SI 1 dx [orig:92 _10 ] [92]))) "kernel/sys.c":106:12 11 {*cmpsi_1}
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "kernel/sys.c":106:12 806 {*jcc}
     (nil)
 -> 69)
(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 9 (set (reg/f:SI 1 dx [110])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":107:21 75 {*movsi_internal}
     (nil))
(insn 51 50 52 9 (set (reg/f:SI 1 dx [orig:93 current.25_11 ] [93])
        (mem/f/c:SI (reg/f:SI 1 dx [110]) [1 current+0 S4 A32])) "kernel/sys.c":107:21 75 {*movsi_internal}
     (nil))
(insn 52 51 53 9 (set (reg:HI 1 dx [orig:94 _12 ] [94])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:93 current.25_11 ] [93])
                (const_int 584 [0x248])) [8 current.25_11->egid+0 S2 A32])) "kernel/sys.c":107:21 76 {*movhi_internal}
     (nil))
(insn 53 52 54 9 (set (reg:SI 1 dx [orig:95 _13 ] [95])
        (zero_extend:SI (reg:HI 1 dx [orig:94 _12 ] [94]))) "kernel/sys.c":107:21 144 {*zero_extendhisi2}
     (nil))
(insn 54 53 55 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 egid+0 S4 A32])
            (reg:SI 1 dx [orig:95 _13 ] [95]))) "kernel/sys.c":106:36 11 {*cmpsi_1}
     (nil))
(jump_insn 55 54 56 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "kernel/sys.c":106:36 806 {*jcc}
     (nil)
 -> 69)
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg/f:SI 1 dx [111])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":108:21 75 {*movsi_internal}
     (nil))
(insn 58 57 59 10 (set (reg/f:SI 1 dx [orig:96 current.26_14 ] [96])
        (mem/f/c:SI (reg/f:SI 1 dx [111]) [1 current+0 S4 A32])) "kernel/sys.c":108:21 75 {*movsi_internal}
     (nil))
(insn 59 58 60 10 (set (reg:HI 1 dx [orig:97 _15 ] [97])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:96 current.26_14 ] [96])
                (const_int 586 [0x24a])) [8 current.26_14->sgid+0 S2 A16])) "kernel/sys.c":108:21 76 {*movhi_internal}
     (nil))
(insn 60 59 61 10 (set (reg:SI 1 dx [orig:98 _16 ] [98])
        (zero_extend:SI (reg:HI 1 dx [orig:97 _15 ] [97]))) "kernel/sys.c":108:21 144 {*zero_extendhisi2}
     (nil))
(insn 61 60 62 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [6 egid+0 S4 A32])
            (reg:SI 1 dx [orig:98 _16 ] [98]))) "kernel/sys.c":107:37 11 {*cmpsi_1}
     (nil))
(jump_insn 62 61 63 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "kernel/sys.c":107:37 806 {*jcc}
     (nil)
 -> 69)
(note 63 62 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 11 (set (reg/f:SI 1 dx [112])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":109:14 75 {*movsi_internal}
     (nil))
(insn 65 64 66 11 (set (reg/f:SI 1 dx [orig:99 current.27_17 ] [99])
        (mem/f/c:SI (reg/f:SI 1 dx [112]) [1 current+0 S4 A32])) "kernel/sys.c":109:14 75 {*movsi_internal}
     (nil))
(insn 66 65 67 11 (set (reg:HI 1 dx [orig:100 _18 ] [100])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:99 current.27_17 ] [99])
                (const_int 578 [0x242])) [8 current.27_17->euid+0 S2 A16])) "kernel/sys.c":109:14 76 {*movhi_internal}
     (nil))
(insn 67 66 68 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:100 _18 ] [100])
            (const_int 0 [0]))) "kernel/sys.c":108:37 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 68 67 69 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "kernel/sys.c":108:37 806 {*jcc}
     (nil)
 -> 78)
(code_label 69 68 70 12 35 (nil) [3 uses])
(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (set (reg/f:SI 0 ax [113])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":110:20 75 {*movsi_internal}
     (nil))
(insn 72 71 73 12 (set (reg/f:SI 0 ax [orig:101 current.28_19 ] [101])
        (mem/f/c:SI (reg/f:SI 0 ax [113]) [1 current+0 S4 A32])) "kernel/sys.c":110:20 75 {*movsi_internal}
     (nil))
(insn 73 72 75 12 (set (reg:SI 1 dx [114])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 egid+0 S4 A32])) "kernel/sys.c":110:27 75 {*movsi_internal}
     (nil))
(insn 75 73 99 12 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:101 current.28_19 ] [101])
                (const_int 584 [0x248])) [8 current.28_19->egid+0 S2 A32])
        (reg:HI 1 dx [orig:102 _20 ] [102])) "kernel/sys.c":110:27 76 {*movhi_internal}
     (nil))
(jump_insn 99 75 100 12 (set (pc)
        (label_ref 83)) "kernel/sys.c":110:27 807 {jump}
     (nil)
 -> 83)
(barrier 100 99 78)
(code_label 78 100 79 13 36 (nil) [1 uses])
(note 79 78 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 101 13 (set (reg:SI 0 ax [orig:103 _21 ] [103])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":112:20 75 {*movsi_internal}
     (nil))
(jump_insn 101 80 102 13 (set (pc)
        (label_ref 86)) "kernel/sys.c":112:20 807 {jump}
     (nil)
 -> 86)
(barrier 102 101 83)
(code_label 83 102 84 14 34 (nil) [2 uses])
(note 84 83 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 14 (set (reg:SI 0 ax [orig:103 _21 ] [103])
        (const_int 0 [0])) "kernel/sys.c":114:12 75 {*movsi_internal}
     (nil))
(code_label 86 85 87 15 33 (nil) [2 uses])
(note 87 86 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 87 104 15 (use (reg/i:SI 0 ax)) "kernel/sys.c":115:1 -1
     (nil))
(note 104 93 0 NOTE_INSN_DELETED)

;; Function sys_setgid (sys_setgid, funcdef_no=16, decl_uid=1399, cgraph_uid=17, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) lBwBz {*call_value} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-8)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 17: point = 0, n_alt = -1
   Insn 16: point = 0, n_alt = -2
   Insn 12: point = 1, n_alt = -2
   Insn 9: point = 3, n_alt = -2
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 4, n_alt = 0
   Insn 5: point = 4, n_alt = 0
   Insn 19: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 19
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
deleting insn with uid = 9.
deleting insn with uid = 12.
deleting insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns


sys_setgid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r7={4d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={3d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 90{79d,11u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 19 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 19 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 19 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [6 gid+0 S4 A32])) "kernel/sys.c":119:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [6 gid+0 S4 A32])) "kernel/sys.c":119:12 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("sys_setregid") [flags 0x3]  <function_decl 0x735c1dd46600 sys_setregid>) [0 sys_setregid S1 A8])
            (const_int 8 [0x8]))) "kernel/sys.c":119:12 823 {*call_value}
     (nil)
    (nil))
(insn 8 7 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":119:12 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 17 8 20 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":120:1 -1
     (nil))
(note 20 17 0 NOTE_INSN_DELETED)

;; Function sys_setpgid (sys_setpgid, funcdef_no=17, decl_uid=1403, cgraph_uid=18, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8 9 10
EBB 11 12
EBB 13
EBB 14
EBB 15 16
EBB 17

********** Pseudo live ranges #1: **********

  BB 17
   Insn 94: point = 0, n_alt = -1
   Insn 93: point = 0, n_alt = -2
   Insn 89: point = 1, n_alt = -2
  BB 13
   Insn 102: point = 4, n_alt = -1
   Insn 72: point = 4, n_alt = 0
   Insn 71: point = 5, n_alt = 1
   Insn 70: point = 6, n_alt = 0
   Insn 69: point = 7, n_alt = 0
   Insn 68: point = 9, n_alt = 0
   Insn 67: point = 10, n_alt = 0
  BB 12
   Insn 100: point = 13, n_alt = -1
   Insn 62: point = 13, n_alt = 0
  BB 11
   Insn 60: point = 14, n_alt = -1
   Insn 59: point = 14, n_alt = 0
   Insn 58: point = 15, n_alt = 0
   Insn 57: point = 17, n_alt = 0
   Insn 56: point = 19, n_alt = 0
   Insn 55: point = 20, n_alt = 0
   Insn 54: point = 22, n_alt = 0
   Insn 53: point = 24, n_alt = 0
   Insn 52: point = 25, n_alt = 0
  BB 10
   Insn 98: point = 27, n_alt = -1
   Insn 47: point = 27, n_alt = 0
  BB 9
   Insn 45: point = 28, n_alt = -1
   Insn 44: point = 28, n_alt = 0
   Insn 43: point = 29, n_alt = 0
   Insn 42: point = 31, n_alt = 0
   Insn 41: point = 33, n_alt = 0
   Insn 40: point = 34, n_alt = 0
  BB 16
   Insn 86: point = 36, n_alt = 0
  BB 15
   Insn 84: point = 37, n_alt = -1
   Insn 83: point = 37, n_alt = 0
  BB 6
   Insn 96: point = 38, n_alt = -1
   Insn 23: point = 38, n_alt = 1
  BB 5
   Insn 20: point = 39, n_alt = 1
   Insn 19: point = 40, n_alt = 0
   Insn 18: point = 42, n_alt = 0
   Insn 17: point = 44, n_alt = 0
  BB 4
   Insn 15: point = 46, n_alt = -1
   Insn 14: point = 46, n_alt = 1
  BB 3
   Insn 11: point = 47, n_alt = 1
   Insn 10: point = 48, n_alt = 0
   Insn 9: point = 50, n_alt = 0
   Insn 8: point = 52, n_alt = 0
  BB 2
   Insn 6: point = 54, n_alt = -1
   Insn 5: point = 54, n_alt = 1
   Insn 104: point = 54, n_alt = 0
  BB 14
   Insn 77: point = 55, n_alt = 0
  BB 8
   Insn 38: point = 56, n_alt = -1
   Insn 37: point = 56, n_alt = 0
   Insn 36: point = 57, n_alt = 0
   Insn 35: point = 59, n_alt = 0
   Insn 34: point = 61, n_alt = 0
   Insn 33: point = 62, n_alt = 0
  BB 7
   Insn 31: point = 64, n_alt = -1
   Insn 30: point = 64, n_alt = 0
   Insn 29: point = 65, n_alt = 0
   Insn 28: point = 67, n_alt = 0
   Insn 27: point = 68, n_alt = 0
 r82: [37..69] [28..35] [14..26] [11..12]
 r83: [49..50]
 r84: [41..42]
 r85: [64..65]
 r86: [58..59]
 r87: [56..57]
 r88: [30..31]
 r89: [28..29]
 r90: [21..22]
 r91: [14..20]
 r92: [16..17]
 r93: [14..15]
 r94: [5..7]
 r95: [36..36] [27..27] [13..13] [2..4]
 r96: [0..1]
 r97: [51..52]
 r98: [47..48]
 r99: [43..44]
 r100: [39..40]
 r101: [66..68]
 r102: [66..67]
 r103: [60..62]
 r104: [60..61]
 r105: [32..34]
 r106: [32..33]
 r107: [23..25]
 r108: [23..24]
 r109: [18..19]
 r110: [8..10]
 r111: [8..9]
 r112: [5..6]
Compressing live ranges: from 70 to 51 - 72%
Ranges after the compression:
 r82: [29..50] [22..27] [11..20] [8..9]
 r83: [37..38]
 r84: [31..32]
 r85: [47..48]
 r86: [43..44]
 r87: [41..42]
 r88: [24..25]
 r89: [22..23]
 r90: [17..18]
 r91: [11..16]
 r92: [13..14]
 r93: [11..12]
 r94: [4..5]
 r95: [28..28] [21..21] [10..10] [2..3]
 r96: [0..1]
 r97: [39..40]
 r98: [35..36]
 r99: [33..34]
 r100: [29..30]
 r101: [49..50]
 r102: [49..50]
 r103: [45..46]
 r104: [45..46]
 r105: [26..27]
 r106: [26..27]
 r107: [19..20]
 r108: [19..20]
 r109: [15..16]
 r110: [6..7]
 r111: [6..7]
 r112: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 104
changing reg in insn 67
changing reg in insn 56
changing reg in insn 52
changing reg in insn 40
changing reg in insn 33
changing reg in insn 27
changing reg in insn 17
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 29
changing reg in insn 30
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 59
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 69
changing reg in insn 71
changing reg in insn 86
changing reg in insn 72
changing reg in insn 62
changing reg in insn 47
changing reg in insn 89
changing reg in insn 89
changing reg in insn 93
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 27
changing reg in insn 29
changing reg in insn 28
changing reg in insn 29
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 42
changing reg in insn 52
changing reg in insn 54
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 57
changing reg in insn 67
changing reg in insn 69
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
deleting insn with uid = 89.
deleting insn with uid = 93.
starting the processing of deferred insns
ending the processing of deferred insns


sys_setpgid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={8d,12u} r1={22d,21u} r2={6d,5u} r7={1d,32u} r17={9d,7u} 
;;    total ref usage 123{46d,77u,0e} in 57{57 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 104 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 104 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 104 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [6 pid+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":131:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) "kernel/sys.c":131:8 806 {*jcc}
     (nil)
 -> 12)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg/f:SI 1 dx [97])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":132:22 75 {*movsi_internal}
     (nil))
(insn 9 8 10 3 (set (reg/f:SI 1 dx [orig:83 current.29_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [97]) [1 current+0 S4 A32])) "kernel/sys.c":132:22 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 1 dx [98])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:83 current.29_1 ] [83])
                (const_int 556 [0x22c])) [3 current.29_1->pid+0 S4 A32])) "kernel/sys.c":132:13 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 pid+0 S4 A32])
        (reg:SI 1 dx [98])) "kernel/sys.c":132:13 75 {*movsi_internal}
     (nil))
(code_label 12 11 13 4 40 (nil) [1 uses])
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 24 [0x18])) [6 pgid+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":133:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "kernel/sys.c":133:8 806 {*jcc}
     (nil)
 -> 21)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:SI 1 dx [99])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":134:23 75 {*movsi_internal}
     (nil))
(insn 18 17 19 5 (set (reg/f:SI 1 dx [orig:84 current.30_2 ] [84])
        (mem/f/c:SI (reg/f:SI 1 dx [99]) [1 current+0 S4 A32])) "kernel/sys.c":134:23 75 {*movsi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:SI 1 dx [100])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:84 current.30_2 ] [84])
                (const_int 556 [0x22c])) [3 current.30_2->pid+0 S4 A32])) "kernel/sys.c":134:14 75 {*movsi_internal}
     (nil))
(insn 20 19 21 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 pgid+0 S4 A32])
        (reg:SI 1 dx [100])) "kernel/sys.c":134:14 75 {*movsi_internal}
     (nil))
(code_label 21 20 22 6 41 (nil) [1 uses])
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 96 6 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])
        (const_int 0 [0])) "kernel/sys.c":135:12 75 {*movsi_internal}
     (nil))
(jump_insn 96 23 97 6 (set (pc)
        (label_ref 78)) "kernel/sys.c":135:5 807 {jump}
     (nil)
 -> 78)
(barrier 97 96 80)
(code_label 80 97 26 7 47 (nil) [1 uses])
(note 26 80 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg/f:SI 1 dx [101])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x735c1dd2e1b0 task>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":136:17 75 {*movsi_internal}
     (nil))
(insn 28 27 29 7 (set (reg:SI 2 cx [102])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":136:17 75 {*movsi_internal}
     (nil))
(insn 29 28 30 7 (set (reg/f:SI 1 dx [orig:85 _3 ] [85])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [102])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [101])) [1 task[i_15]+0 S4 A32])) "kernel/sys.c":136:17 75 {*movsi_internal}
     (nil))
(insn 30 29 31 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:85 _3 ] [85])
            (const_int 0 [0]))) "kernel/sys.c":136:12 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "kernel/sys.c":136:12 806 {*jcc}
     (nil)
 -> 75)
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg/f:SI 1 dx [103])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x735c1dd2e1b0 task>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":136:28 75 {*movsi_internal}
     (nil))
(insn 34 33 35 8 (set (reg:SI 2 cx [104])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":136:28 75 {*movsi_internal}
     (nil))
(insn 35 34 36 8 (set (reg/f:SI 1 dx [orig:86 _4 ] [86])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [104])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [103])) [1 task[i_15]+0 S4 A32])) "kernel/sys.c":136:28 75 {*movsi_internal}
     (nil))
(insn 36 35 37 8 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:86 _4 ] [86])
                (const_int 556 [0x22c])) [3 _4->pid+0 S4 A32])) "kernel/sys.c":136:31 75 {*movsi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 20 [0x14])) [6 pid+0 S4 A32])
            (reg:SI 1 dx [orig:87 _5 ] [87]))) "kernel/sys.c":136:21 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "kernel/sys.c":136:21 806 {*jcc}
     (nil)
 -> 75)
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg/f:SI 1 dx [105])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x735c1dd2e1b0 task>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":137:21 75 {*movsi_internal}
     (nil))
(insn 41 40 42 9 (set (reg:SI 2 cx [106])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":137:21 75 {*movsi_internal}
     (nil))
(insn 42 41 43 9 (set (reg/f:SI 1 dx [orig:88 _6 ] [88])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [106])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [105])) [1 task[i_15]+0 S4 A32])) "kernel/sys.c":137:21 75 {*movsi_internal}
     (nil))
(insn 43 42 44 9 (set (reg:SI 1 dx [orig:89 _7 ] [89])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:88 _6 ] [88])
                (const_int 572 [0x23c])) [3 _6->leader+0 S4 A32])) "kernel/sys.c":137:24 75 {*movsi_internal}
     (nil))
(insn 44 43 45 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:89 _7 ] [89])
            (const_int 0 [0]))) "kernel/sys.c":137:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 45 44 46 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "kernel/sys.c":137:16 806 {*jcc}
     (nil)
 -> 50)
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 98 10 (set (reg:SI 0 ax [orig:95 _16 ] [95])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":138:24 75 {*movsi_internal}
     (nil))
(jump_insn 98 47 99 10 (set (pc)
        (label_ref 87)) "kernel/sys.c":138:24 807 {jump}
     (nil)
 -> 87)
(barrier 99 98 50)
(code_label 50 99 51 11 44 (nil) [1 uses])
(note 51 50 52 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 11 (set (reg/f:SI 1 dx [107])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x735c1dd2e1b0 task>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":139:21 75 {*movsi_internal}
     (nil))
(insn 53 52 54 11 (set (reg:SI 2 cx [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":139:21 75 {*movsi_internal}
     (nil))
(insn 54 53 55 11 (set (reg/f:SI 1 dx [orig:90 _8 ] [90])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 2 cx [108])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [107])) [1 task[i_15]+0 S4 A32])) "kernel/sys.c":139:21 75 {*movsi_internal}
     (nil))
(insn 55 54 56 11 (set (reg:SI 2 cx [orig:91 _9 ] [91])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:90 _8 ] [90])
                (const_int 568 [0x238])) [3 _8->session+0 S4 A32])) "kernel/sys.c":139:24 75 {*movsi_internal}
     (nil))
(insn 56 55 57 11 (set (reg/f:SI 1 dx [109])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":139:44 75 {*movsi_internal}
     (nil))
(insn 57 56 58 11 (set (reg/f:SI 1 dx [orig:92 current.31_10 ] [92])
        (mem/f/c:SI (reg/f:SI 1 dx [109]) [1 current+0 S4 A32])) "kernel/sys.c":139:44 75 {*movsi_internal}
     (nil))
(insn 58 57 59 11 (set (reg:SI 1 dx [orig:93 _11 ] [93])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:92 current.31_10 ] [92])
                (const_int 568 [0x238])) [3 current.31_10->session+0 S4 A32])) "kernel/sys.c":139:44 75 {*movsi_internal}
     (nil))
(insn 59 58 60 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:91 _9 ] [91])
            (reg:SI 1 dx [orig:93 _11 ] [93]))) "kernel/sys.c":139:16 11 {*cmpsi_1}
     (nil))
(jump_insn 60 59 61 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) "kernel/sys.c":139:16 806 {*jcc}
     (nil)
 -> 65)
(note 61 60 62 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 100 12 (set (reg:SI 0 ax [orig:95 _16 ] [95])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":140:24 75 {*movsi_internal}
     (nil))
(jump_insn 100 62 101 12 (set (pc)
        (label_ref 87)) "kernel/sys.c":140:24 807 {jump}
     (nil)
 -> 87)
(barrier 101 100 65)
(code_label 65 101 66 13 46 (nil) [1 uses])
(note 66 65 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 13 (set (reg/f:SI 0 ax [110])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("task") [flags 0x40]  <var_decl 0x735c1dd2e1b0 task>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":141:17 75 {*movsi_internal}
     (nil))
(insn 68 67 69 13 (set (reg:SI 1 dx [111])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":141:17 75 {*movsi_internal}
     (nil))
(insn 69 68 70 13 (set (reg/f:SI 0 ax [orig:94 _12 ] [94])
        (mem/f:SI (plus:SI (mult:SI (reg:SI 1 dx [111])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 ax [110])) [1 task[i_15]+0 S4 A32])) "kernel/sys.c":141:17 75 {*movsi_internal}
     (nil))
(insn 70 69 71 13 (set (reg:SI 1 dx [112])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 pgid+0 S4 A32])) "kernel/sys.c":141:27 75 {*movsi_internal}
     (nil))
(insn 71 70 72 13 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:94 _12 ] [94])
                (const_int 564 [0x234])) [3 _12->pgrp+0 S4 A32])
        (reg:SI 1 dx [112])) "kernel/sys.c":141:27 75 {*movsi_internal}
     (nil))
(insn 72 71 102 13 (set (reg:SI 0 ax [orig:95 _16 ] [95])
        (const_int 0 [0])) "kernel/sys.c":142:20 75 {*movsi_internal}
     (nil))
(jump_insn 102 72 103 13 (set (pc)
        (label_ref 87)) "kernel/sys.c":142:20 807 {jump}
     (nil)
 -> 87)
(barrier 103 102 75)
(code_label 75 103 76 14 43 (nil) [2 uses])
(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [6 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":135:32 209 {*addsi_1}
     (nil))
(code_label 78 77 79 15 42 (nil) [1 uses])
(note 79 78 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 83 79 84 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [6 i+0 S4 A32])
            (const_int 63 [0x3f]))) "kernel/sys.c":135:19 11 {*cmpsi_1}
     (nil))
(jump_insn 84 83 85 15 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "kernel/sys.c":135:19 806 {*jcc}
     (nil)
 -> 80)
(note 85 84 86 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 16 (set (reg:SI 0 ax [orig:95 _16 ] [95])
        (const_int -3 [0xfffffffffffffffd])) "kernel/sys.c":144:12 75 {*movsi_internal}
     (nil))
(code_label 87 86 88 17 45 (nil) [3 uses])
(note 88 87 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 94 88 105 17 (use (reg/i:SI 0 ax)) "kernel/sys.c":145:1 -1
     (nil))
(note 105 94 0 NOTE_INSN_DELETED)

;; Function sys_uname (sys_uname, funcdef_no=18, decl_uid=1411, cgraph_uid=19, symbol_order=18)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 28
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 54: point = 0, n_alt = -1
   Insn 53: point = 0, n_alt = -2
   Insn 49: point = 1, n_alt = -2
  BB 3
   Insn 56: point = 4, n_alt = -1
   Insn 8: point = 4, n_alt = 0
  BB 7
   Insn 46: point = 5, n_alt = 0
  BB 6
   Insn 44: point = 6, n_alt = -1
   Insn 43: point = 6, n_alt = 0
   Insn 39: point = 7, n_alt = 0
  BB 4
   Insn 58: point = 9, n_alt = -1
   Insn 19: point = 9, n_alt = 1
   Insn 18: point = 9, n_alt = 0
   Insn 17: point = 9, n_alt = 0
   Insn 16: point = 9, n_alt = -2
   Insn 15: point = 9, n_alt = 0
   Insn 14: point = 9, n_alt = 0
   Insn 13: point = 9, n_alt = 0
  BB 2
   Insn 6: point = 10, n_alt = -1
   Insn 5: point = 10, n_alt = 1
   Insn 60: point = 10, n_alt = 0
  BB 5
   Insn 36: point = 11, n_alt = 0
   Insn 35: point = 11, n_alt = 0
   Insn 34: point = 11, n_alt = 0
   Insn 33: point = 11, n_alt = 0
   Insn 32: point = 12, n_alt = 0
   Insn 31: point = 13, n_alt = 0
   Insn 30: point = 13, n_alt = 0
   Insn 29: point = 15, n_alt = 4
   Insn 28: point = 17, n_alt = 0
   Insn 27: point = 19, n_alt = 0
   Insn 26: point = 20, n_alt = 0
   Insn 25: point = 21, n_alt = 0
   Insn 24: point = 23, n_alt = 0
   Insn 23: point = 24, n_alt = 0
 r82: [6..25]
 r83: [22..24]
 r84: [12..21]
 r85: [18..20]
 r86: [16..17]
 r87: [14..15]
 r88: [11..13]
 r89: [6..7]
 r90: [2..5]
 r91: [0..1]
 r92: [22..23]
 r93: [18..19]
Compressing live ranges: from 26 to 16 - 61%
Ranges after the compression:
 r82: [4..15]
 r83: [14..15]
 r84: [6..13]
 r85: [12..13]
 r86: [10..11]
 r87: [8..9]
 r88: [6..7]
 r89: [4..5]
 r90: [2..3]
 r91: [0..1]
 r92: [14..15]
 r93: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 60
changing reg in insn 27
changing reg in insn 16
changing reg in insn 23
changing reg in insn 25
changing reg in insn 25
changing reg in insn 25
changing reg in insn 32
changing reg in insn 26
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 33
changing reg in insn 39
changing reg in insn 43
changing reg in insn 46
changing reg in insn 8
changing reg in insn 49
changing reg in insn 49
changing reg in insn 53
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
deleting insn with uid = 16.
deleting insn with uid = 49.
deleting insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 34.


sys_uname

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,8u} r1={5d,2u,1e} r2={4d,1u} r3={1d,2u} r7={9d,31u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={12d,2u} r18={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 220{172d,46u,2e} in 31{29 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 60 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 60 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])) [19 name+0 S4 A32])
            (const_int 0 [0]))) "kernel/sys.c":154:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 6 5 7 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) "kernel/sys.c":154:8 806 {*jcc}
     (nil)
 -> 11)
(note 7 6 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 56 3 (set (reg:SI 0 ax [orig:90 _9 ] [90])
        (const_int -99 [0xffffffffffffff9d])) "kernel/sys.c":155:16 75 {*movsi_internal}
     (nil))
(jump_insn 56 8 57 3 (set (pc)
        (label_ref 47)) "kernel/sys.c":155:16 807 {jump}
     (nil)
 -> 47)
(barrier 57 56 11)
(code_label 11 57 12 4 49 (nil) [1 uses])
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":156:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 14 13 15 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (const_int 45 [0x2d])) "kernel/sys.c":156:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 15 14 17 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [19  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [19 name+0 S4 A32])) "kernel/sys.c":156:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 17 15 18 4 (call (mem:QI (symbol_ref:SI ("verify_area") [flags 0x41]  <function_decl 0x735c1dd38500 verify_area>) [0 verify_area S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":156:5 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":156:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 18 58 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])
        (const_int 0 [0])) "kernel/sys.c":157:12 75 {*movsi_internal}
     (nil))
(jump_insn 58 19 59 4 (set (pc)
        (label_ref 37)) "kernel/sys.c":157:5 807 {jump}
     (nil)
 -> 37)
(barrier 59 58 40)
(code_label 40 59 22 5 52 (nil) [1 uses])
(note 22 40 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:SI 1 dx [orig:83 i.32_1 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":158:9 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (reg/f:SI 0 ax [92])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [19 name+0 S4 A32])) "kernel/sys.c":158:9 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg/f:SI 1 dx [orig:84 _2 ] [84])
                (plus:SI (reg:SI 1 dx [orig:83 i.32_1 ] [83])
                    (reg/f:SI 0 ax [92])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":158:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [19 name+0 S4 A32])
            (reg:SI 1 dx [orig:83 i.32_1 ] [83]))
        (nil)))
(insn 26 25 27 5 (set (reg:SI 2 cx [orig:85 i.33_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":158:40 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:SI 0 ax [93])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref:SI ("thisname.0") [flags 0x2]  <var_decl 0x735c1dd2e990 thisname>)
                    ] UNSPEC_GOTOFF)))) "kernel/sys.c":158:40 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref:SI ("thisname.0") [flags 0x2]  <var_decl 0x735c1dd2e990 thisname>)
        (nil)))
(insn 28 27 29 5 (parallel [
            (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (plus:SI (reg:SI 0 ax [93])
                    (reg:SI 2 cx [orig:85 i.33_3 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":158:40 209 {*addsi_1}
     (nil))
(insn 29 28 30 5 (set (reg:QI 0 ax [orig:87 _5 ] [87])
        (mem:QI (reg/f:SI 0 ax [orig:86 _4 ] [86]) [0 *_4+0 S1 A8])) "kernel/sys.c":158:40 77 {*movqi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (sign_extend:SI (reg:QI 0 ax [orig:87 _5 ] [87]))) "kernel/sys.c":158:9 153 {extendqisi2}
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":158:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 32 31 33 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [14  S4 A32])
        (reg/f:SI 1 dx [orig:84 _2 ] [84])) "kernel/sys.c":158:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [orig:88 _6 ] [88])) "kernel/sys.c":158:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 33 35 5 (call (mem:QI (symbol_ref:SI ("put_fs_byte") [flags 0x3]  <function_decl 0x735c1dd38e00 put_fs_byte>) [0 put_fs_byte S1 A8])
        (const_int 16 [0x10])) "kernel/sys.c":158:9 812 {*call}
     (nil)
    (nil))
(insn 35 34 36 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":158:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 36 35 37 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [6 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [6 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":157:37 209 {*addsi_1}
     (nil))
(code_label 37 36 38 6 51 (nil) [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 43 6 (set (reg:SI 0 ax [orig:89 i.34_7 ] [89])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 i+0 S4 A32])) "kernel/sys.c":157:19 75 {*movsi_internal}
     (nil))
(insn 43 39 44 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:89 i.34_7 ] [89])
            (const_int 44 [0x2c]))) "kernel/sys.c":157:19 11 {*cmpsi_1}
     (nil))
(jump_insn 44 43 45 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "kernel/sys.c":157:19 806 {*jcc}
     (nil)
 -> 40)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:SI 0 ax [orig:90 _9 ] [90])
        (const_int 0 [0])) "kernel/sys.c":159:12 75 {*movsi_internal}
     (nil))
(code_label 47 46 48 8 50 (nil) [1 uses])
(note 48 47 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 48 61 8 (use (reg/i:SI 0 ax)) "kernel/sys.c":160:1 -1
     (nil))
(note 61 54 0 NOTE_INSN_DELETED)

;; Function sys_umask (sys_umask, funcdef_no=19, decl_uid=1420, cgraph_uid=20, symbol_order=19)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rm {*zero_extendhisi2}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) r {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) rn {*andhi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 24: point = 0, n_alt = -1
   Insn 23: point = 0, n_alt = -2
   Insn 19: point = 1, n_alt = -2
   Insn 16: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 3
   Insn 14: point = 5, n_alt = 0
   Insn 13: point = 7, n_alt = 0
   Insn 12: point = 9, n_alt = 0
   Insn 11: point = 11, n_alt = 0
   Insn 10: point = 13, n_alt = 0
   Insn 9: point = 14, n_alt = 1
   Insn 8: point = 15, n_alt = 0
   Insn 7: point = 17, n_alt = 2
   Insn 6: point = 19, n_alt = 0
   Insn 5: point = 21, n_alt = 0
   Insn 26: point = 22, n_alt = 0
 r82: [10..22]
 r83: [18..19]
 r84: [16..17]
 r85: [6..11]
 r86: [4..7]
 r87: [4..5]
 r88: [2..3]
 r89: [0..1]
 r90: [20..21]
 r91: [14..15]
 r92: [12..13]
 r93: [8..9]
Compressing live ranges: from 23 to 22 - 95%
Ranges after the compression:
 r82: [10..21]
 r83: [18..19]
 r84: [16..17]
 r85: [6..11]
 r86: [4..7]
 r87: [4..5]
 r88: [2..3]
 r89: [0..1]
 r90: [20..21]
 r91: [14..15]
 r92: [12..13]
 r93: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 26
changing reg in insn 12
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 19
changing reg in insn 23
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
deleting insn with uid = 11.
deleting insn with uid = 19.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns


sys_umask

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={5d,6u} r1={7d,6u} r2={1d} r7={1d,5u} r17={2d} 
;;    total ref usage 33{16d,17u,0e} in 13{13 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 26 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 26 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [90])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":164:22 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [orig:83 current.35_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [90]) [1 current+0 S4 A32])) "kernel/sys.c":164:22 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:HI 1 dx [orig:84 _2 ] [84])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:83 current.35_1 ] [83])
                (const_int 620 [0x26c])) [8 current.35_1->umask+0 S2 A32])) "kernel/sys.c":164:22 76 {*movhi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 1 dx [91])
        (zero_extend:SI (reg:HI 1 dx [orig:84 _2 ] [84]))) "kernel/sys.c":164:9 144 {*zero_extendhisi2}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 old+0 S4 A32])
        (reg:SI 1 dx [91])) "kernel/sys.c":164:9 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (set (reg:SI 1 dx [92])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [6 mask+0 S4 A32])) "kernel/sys.c":166:27 75 {*movsi_internal}
     (nil))
(insn 12 10 13 2 (set (reg/f:SI 0 ax [93])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":166:12 75 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 0 ax [orig:86 current.36_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [93]) [1 current+0 S4 A32])) "kernel/sys.c":166:12 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:HI 1 dx [orig:87 _5 ] [87])
                (and:HI (reg:HI 1 dx [orig:85 _3 ] [85])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/sys.c":166:27 489 {*andhi_1}
     (nil))
(insn 15 14 16 2 (set (mem:HI (plus:SI (reg/f:SI 0 ax [orig:86 current.36_4 ] [86])
                (const_int 620 [0x26c])) [8 current.36_4->umask+0 S2 A32])
        (reg:HI 1 dx [orig:87 _5 ] [87])) "kernel/sys.c":166:20 76 {*movhi_internal}
     (nil))
(insn 16 15 24 2 (set (reg:SI 0 ax [orig:88 _10 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [6 old+0 S4 A32])) "kernel/sys.c":167:12 75 {*movsi_internal}
     (nil))
(insn 24 16 27 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":168:1 -1
     (nil))
(note 27 24 0 NOTE_INSN_DELETED)

;; Function sys_setsid (sys_setsid, funcdef_no=20, decl_uid=1424, cgraph_uid=21, symbol_order=20)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) r {*cmphi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 48: point = 0, n_alt = -1
   Insn 47: point = 0, n_alt = -2
   Insn 43: point = 1, n_alt = -2
  BB 4
   Insn 50: point = 4, n_alt = -1
   Insn 17: point = 4, n_alt = 0
  BB 5
   Insn 40: point = 5, n_alt = 0
   Insn 39: point = 7, n_alt = 0
   Insn 38: point = 9, n_alt = 0
   Insn 37: point = 11, n_alt = 1
   Insn 36: point = 12, n_alt = 0
   Insn 35: point = 14, n_alt = 0
   Insn 34: point = 15, n_alt = 1
   Insn 33: point = 16, n_alt = 0
   Insn 32: point = 18, n_alt = 0
   Insn 31: point = 20, n_alt = 0
   Insn 30: point = 21, n_alt = 1
   Insn 29: point = 22, n_alt = 0
   Insn 28: point = 24, n_alt = 0
   Insn 27: point = 26, n_alt = 0
   Insn 26: point = 27, n_alt = 0
   Insn 25: point = 29, n_alt = 0
   Insn 24: point = 30, n_alt = 1
   Insn 23: point = 31, n_alt = 0
   Insn 22: point = 33, n_alt = 0
  BB 3
   Insn 15: point = 35, n_alt = -1
   Insn 14: point = 35, n_alt = 0
   Insn 13: point = 36, n_alt = 2
   Insn 12: point = 38, n_alt = 0
   Insn 11: point = 40, n_alt = 0
  BB 2
   Insn 9: point = 42, n_alt = -1
   Insn 8: point = 42, n_alt = 0
   Insn 7: point = 43, n_alt = 0
   Insn 6: point = 45, n_alt = 0
   Insn 5: point = 47, n_alt = 0
   Insn 52: point = 48, n_alt = 0
 r82: [10..48]
 r83: [44..45]
 r84: [42..43]
 r85: [37..38]
 r86: [35..36]
 r87: [30..31]
 r88: [23..27]
 r89: [17..24]
 r90: [21..22]
 r91: [15..18]
 r92: [15..16]
 r93: [11..12]
 r94: [6..7]
 r95: [2..5]
 r96: [0..1]
 r97: [46..47]
 r98: [39..40]
 r99: [32..33]
 r100: [28..29]
 r101: [25..26]
 r102: [19..20]
 r103: [13..14]
 r104: [8..9]
Compressing live ranges: from 49 to 42 - 85%
Ranges after the compression:
 r82: [8..41]
 r83: [38..39]
 r84: [36..37]
 r85: [32..33]
 r86: [30..31]
 r87: [26..27]
 r88: [20..23]
 r89: [14..21]
 r90: [18..19]
 r91: [12..15]
 r92: [12..13]
 r93: [8..9]
 r94: [4..5]
 r95: [2..3]
 r96: [0..1]
 r97: [40..41]
 r98: [34..35]
 r99: [28..29]
 r100: [24..25]
 r101: [22..23]
 r102: [16..17]
 r103: [10..11]
 r104: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 52
changing reg in insn 38
changing reg in insn 35
changing reg in insn 31
changing reg in insn 27
changing reg in insn 25
changing reg in insn 22
changing reg in insn 11
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 29
changing reg in insn 28
changing reg in insn 33
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 17
changing reg in insn 43
changing reg in insn 43
changing reg in insn 47
changing reg in insn 5
changing reg in insn 6
changing reg in insn 11
changing reg in insn 12
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 32
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
deleting insn with uid = 43.
deleting insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns


sys_setsid

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={6d,12u} r1={15d,15u} r2={5d,4u} r7={1d,6u} r17={3d,2u} 
;;    total ref usage 69{30d,39u,0e} in 33{33 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 52 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 52 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 52 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [97])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":172:16 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [orig:83 current.37_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [97]) [1 current+0 S4 A32])) "kernel/sys.c":172:16 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx [orig:84 _2 ] [84])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:83 current.37_1 ] [83])
                (const_int 572 [0x23c])) [3 current.37_1->leader+0 S4 A32])) "kernel/sys.c":172:16 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:84 _2 ] [84])
            (const_int 0 [0]))) "kernel/sys.c":172:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "kernel/sys.c":172:8 806 {*jcc}
     (nil)
 -> 20)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 1 dx [98])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":172:29 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 1 dx [orig:85 current.38_3 ] [85])
        (mem/f/c:SI (reg/f:SI 1 dx [98]) [1 current+0 S4 A32])) "kernel/sys.c":172:29 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:HI 1 dx [orig:86 _4 ] [86])
        (mem:HI (plus:SI (reg/f:SI 1 dx [orig:85 current.38_3 ] [85])
                (const_int 578 [0x242])) [8 current.38_3->euid+0 S2 A16])) "kernel/sys.c":172:29 76 {*movhi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:86 _4 ] [86])
            (const_int 0 [0]))) "kernel/sys.c":172:25 6 {*cmphi_ccno_1}
     (nil))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "kernel/sys.c":172:25 806 {*jcc}
     (nil)
 -> 20)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 50 4 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":173:16 75 {*movsi_internal}
     (nil))
(jump_insn 50 17 51 4 (set (pc)
        (label_ref 41)) "kernel/sys.c":173:16 807 {jump}
     (nil)
 -> 41)
(barrier 51 50 20)
(code_label 20 51 21 5 56 (nil) [2 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 1 dx [99])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":174:12 75 {*movsi_internal}
     (nil))
(insn 23 22 24 5 (set (reg/f:SI 1 dx [orig:87 current.39_5 ] [87])
        (mem/f/c:SI (reg/f:SI 1 dx [99]) [1 current+0 S4 A32])) "kernel/sys.c":174:12 75 {*movsi_internal}
     (nil))
(insn 24 23 25 5 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:87 current.39_5 ] [87])
                (const_int 572 [0x23c])) [3 current.39_5->leader+0 S4 A32])
        (const_int 1 [0x1])) "kernel/sys.c":174:21 75 {*movsi_internal}
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 1 dx [100])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":175:47 75 {*movsi_internal}
     (nil))
(insn 26 25 27 5 (set (reg/f:SI 2 cx [orig:88 current.40_6 ] [88])
        (mem/f/c:SI (reg/f:SI 1 dx [100]) [1 current+0 S4 A32])) "kernel/sys.c":175:47 75 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 1 dx [101])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":175:31 75 {*movsi_internal}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 1 dx [orig:89 current.41_7 ] [89])
        (mem/f/c:SI (reg/f:SI 1 dx [101]) [1 current+0 S4 A32])) "kernel/sys.c":175:31 75 {*movsi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:SI 2 cx [orig:90 _8 ] [90])
        (mem:SI (plus:SI (reg/f:SI 2 cx [orig:88 current.40_6 ] [88])
                (const_int 556 [0x22c])) [3 current.40_6->pid+0 S4 A32])) "kernel/sys.c":175:47 75 {*movsi_internal}
     (nil))
(insn 30 29 31 5 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:89 current.41_7 ] [89])
                (const_int 564 [0x234])) [3 current.41_7->pgrp+0 S4 A32])
        (reg:SI 2 cx [orig:90 _8 ] [90])) "kernel/sys.c":175:38 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg/f:SI 2 cx [102])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":175:12 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (set (reg/f:SI 2 cx [orig:91 current.42_9 ] [91])
        (mem/f/c:SI (reg/f:SI 2 cx [102]) [1 current+0 S4 A32])) "kernel/sys.c":175:12 75 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:SI 1 dx [orig:92 _10 ] [92])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:89 current.41_7 ] [89])
                (const_int 564 [0x234])) [3 current.41_7->pgrp+0 S4 A32])) "kernel/sys.c":175:31 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (mem:SI (plus:SI (reg/f:SI 2 cx [orig:91 current.42_9 ] [91])
                (const_int 568 [0x238])) [3 current.42_9->session+0 S4 A32])
        (reg:SI 1 dx [orig:92 _10 ] [92])) "kernel/sys.c":175:22 75 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg/f:SI 1 dx [103])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":176:12 75 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg/f:SI 1 dx [orig:93 current.43_11 ] [93])
        (mem/f/c:SI (reg/f:SI 1 dx [103]) [1 current+0 S4 A32])) "kernel/sys.c":176:12 75 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (mem:SI (plus:SI (reg/f:SI 1 dx [orig:93 current.43_11 ] [93])
                (const_int 616 [0x268])) [6 current.43_11->tty+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "kernel/sys.c":176:18 75 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg/f:SI 0 ax [104])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":177:19 75 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (set (reg/f:SI 0 ax [orig:94 current.44_12 ] [94])
        (mem/f/c:SI (reg/f:SI 0 ax [104]) [1 current+0 S4 A32])) "kernel/sys.c":177:19 75 {*movsi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:SI 0 ax [orig:95 _13 ] [95])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:94 current.44_12 ] [94])
                (const_int 564 [0x234])) [3 current.44_12->pgrp+0 S4 A32])) "kernel/sys.c":177:19 75 {*movsi_internal}
     (nil))
(code_label 41 40 42 6 57 (nil) [1 uses])
(note 42 41 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 42 53 6 (use (reg/i:SI 0 ax)) "kernel/sys.c":178:1 -1
     (nil))
(note 53 48 0 NOTE_INSN_DELETED)

;; Function sys_getpgrp (sys_getpgrp, funcdef_no=21, decl_uid=1427, cgraph_uid=22, symbol_order=21)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 15: point = 0, n_alt = -1
   Insn 14: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = -2
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 5, n_alt = 0
   Insn 5: point = 7, n_alt = 0
   Insn 17: point = 9, n_alt = 0
 r82: [8..9]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
Compressing live ranges: from 10 to 10 - 100%
Ranges after the compression:
 r82: [8..9]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 10
changing reg in insn 10
changing reg in insn 14
changing reg in insn 5
changing reg in insn 6
deleting insn with uid = 10.
deleting insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns


sys_getpgrp

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={5d,5u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 16{9d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 17 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 17 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [86])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x735c1dd2e120 current>)
                        ] UNSPEC_GOT))) [17  S4 A8])) "kernel/sys.c":182:19 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 0 ax [orig:83 current.45_1 ] [83])
        (mem/f/c:SI (reg/f:SI 0 ax [86]) [1 current+0 S4 A32])) "kernel/sys.c":182:19 75 {*movsi_internal}
     (nil))
(insn 7 6 15 2 (set (reg:SI 0 ax [orig:84 _3 ] [84])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:83 current.45_1 ] [83])
                (const_int 564 [0x234])) [3 current.45_1->pgrp+0 S4 A32])) "kernel/sys.c":182:19 75 {*movsi_internal}
     (nil))
(insn 15 7 18 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":183:1 -1
     (nil))
(note 18 15 0 NOTE_INSN_DELETED)

;; Function sys_ptrace (sys_ptrace, funcdef_no=22, decl_uid=1430, cgraph_uid=23, symbol_order=22)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_ptrace

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":187:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":188:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_stty (sys_stty, funcdef_no=23, decl_uid=1433, cgraph_uid=24, symbol_order=23)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_stty

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":192:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":193:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_gtty (sys_gtty, funcdef_no=24, decl_uid=1436, cgraph_uid=25, symbol_order=24)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_gtty

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":197:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":198:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_rename (sys_rename, funcdef_no=25, decl_uid=1439, cgraph_uid=26, symbol_order=25)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_rename

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":202:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":203:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_prof (sys_prof, funcdef_no=26, decl_uid=1442, cgraph_uid=27, symbol_order=26)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_prof

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":207:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":208:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_acct (sys_acct, funcdef_no=27, decl_uid=1445, cgraph_uid=28, symbol_order=27)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_acct

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":212:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":213:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_phys (sys_phys, funcdef_no=28, decl_uid=1448, cgraph_uid=29, symbol_order=28)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_phys

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":217:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":218:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_lock (sys_lock, funcdef_no=29, decl_uid=1451, cgraph_uid=30, symbol_order=29)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_lock

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":222:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":223:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_mpx (sys_mpx, funcdef_no=30, decl_uid=1454, cgraph_uid=31, symbol_order=30)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_mpx

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":227:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":228:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_ulimit (sys_ulimit, funcdef_no=31, decl_uid=1457, cgraph_uid=32, symbol_order=31)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_ulimit

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":232:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":233:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)

;; Function sys_ftime (sys_ftime, funcdef_no=32, decl_uid=1460, cgraph_uid=33, symbol_order=32)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 13: point = 0, n_alt = -1
   Insn 12: point = 0, n_alt = -2
   Insn 8: point = 1, n_alt = -2
   Insn 5: point = 3, n_alt = 0
   Insn 15: point = 4, n_alt = 0
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 5 to 5 - 100%
Ranges after the compression:
 r82: [4..4]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 12
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


sys_ftime

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={1d} r2={1d} r7={1d,2u} r17={1d} 
;;    total ref usage 11{7d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 15 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 15 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 13 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (const_int -38 [0xffffffffffffffda])) "kernel/sys.c":237:12 75 {*movsi_internal}
     (nil))
(insn 13 5 16 2 (use (reg/i:SI 0 ax)) "kernel/sys.c":238:1 -1
     (nil))
(note 16 13 0 NOTE_INSN_DELETED)
