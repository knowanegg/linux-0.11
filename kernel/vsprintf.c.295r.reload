
;; Function skip_atoi (skip_atoi, funcdef_no=0, decl_uid=1034, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r {*set_got}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 18:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 23
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 54: point = 0, n_alt = -1
   Insn 53: point = 0, n_alt = -2
   Insn 49: point = 1, n_alt = -2
   Insn 46: point = 3, n_alt = 0
  BB 4
   Insn 34: point = 4, n_alt = -1
   Insn 33: point = 4, n_alt = 0
   Insn 30: point = 5, n_alt = 4
   Insn 29: point = 7, n_alt = 0
   Insn 28: point = 9, n_alt = 0
  BB 2
   Insn 56: point = 10, n_alt = -1
   Insn 5: point = 10, n_alt = 1
   Insn 58: point = 10, n_alt = 0
  BB 3
   Insn 25: point = 11, n_alt = 1
   Insn 24: point = 12, n_alt = 0
   Insn 23: point = 14, n_alt = 0
   Insn 22: point = 16, n_alt = 0
   Insn 21: point = 18, n_alt = 4
   Insn 20: point = 20, n_alt = 1
   Insn 19: point = 21, n_alt = 0
   Insn 18: point = 22, n_alt = 3
   Insn 17: point = 23, n_alt = 0
   Insn 16: point = 25, n_alt = 0
   Insn 15: point = 26, n_alt = -2
   Insn 14: point = 28, n_alt = -2
   Insn 13: point = 30, n_alt = 0
   Insn 12: point = 32, n_alt = 0
   Insn 11: point = 34, n_alt = 0
   Insn 10: point = 35, n_alt = -2
   Insn 9: point = 36, n_alt = 0
  BB 5
   Insn 43: point = 37, n_alt = -1
   Insn 42: point = 37, n_alt = 0
   Insn 38: point = 38, n_alt = 4
   Insn 37: point = 40, n_alt = 0
   Insn 36: point = 42, n_alt = 0
 r82: [10..10]
 r83: [15..26]
 r84: [19..23]
 r85: [20..22]
 r86: [17..18]
 r87: [15..16]
 r88: [13..14]
 r89: [6..7]
 r90: [4..5]
 r91: [39..40]
 r92: [37..38]
 r93: [2..3]
 r94: [0..1]
 r95: [33..36]
 r96: [31..35] [27..28]
 r97: [29..30]
 r98: [24..25]
 r99: [20..21]
 r100: [11..12]
 r101: [8..9]
 r102: [41..42]
Compressing live ranges: from 43 to 35 - 81%
Ranges after the compression:
 r82: [10..10]
 r83: [15..22]
 r84: [19..20]
 r85: [19..20]
 r86: [17..18]
 r87: [15..16]
 r88: [13..14]
 r89: [6..7]
 r90: [4..5]
 r91: [31..32]
 r92: [29..30]
 r93: [2..3]
 r94: [0..1]
 r95: [27..28]
 r96: [27..28] [23..24]
 r97: [25..26]
 r98: [21..22]
 r99: [19..20]
 r100: [11..12]
 r101: [8..9]
 r102: [33..34]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 58
changing reg in insn 15
changing reg in insn 17
changing reg in insn 21
changing reg in insn 18
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 33
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 42
changing reg in insn 46
changing reg in insn 49
changing reg in insn 49
changing reg in insn 53
changing reg in insn 9
changing reg in insn 12
changing reg in insn 10
changing reg in insn 12
changing reg in insn 14
changing reg in insn 12
changing reg in insn 11
changing reg in insn 10
changing reg in insn 15
changing reg in insn 13
changing reg in insn 12
changing reg in insn 11
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
deleting insn with uid = 14.
deleting insn with uid = 49.
deleting insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns


skip_atoi

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={19d,19u} r1={3d,3u,1e} r2={2d,1u} r3={1d,1u} r7={1d,14u} r17={9d,2u} 
;;    total ref usage 76{35d,40u,1e} in 31{31 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 58 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 56 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 i+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":14:6 75 {*movsi_internal}
     (nil))
(jump_insn 56 5 57 2 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":16:8 807 {jump}
     (nil)
 -> 26)
(barrier 57 56 39)
(code_label 39 57 8 3 4 (nil) [1 uses])
(note 8 39 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 1 dx [95])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 i+0 S4 A32])) "kernel/vsprintf.c":17:9 75 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:SI 0 ax [96])
        (reg:SI 1 dx [95])) "kernel/vsprintf.c":17:9 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (parallel [
            (set (reg:SI 0 ax [96])
                (ashift:SI (reg:SI 0 ax [96])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:9 655 {*ashlsi3_1}
     (nil))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 0 ax [96])
                (plus:SI (reg:SI 0 ax [96])
                    (reg:SI 1 dx [95])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:9 209 {*addsi_1}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 1 dx [95])
            (const_int 5 [0x5]))
        (nil)))
(insn 13 12 15 3 (parallel [
            (set (reg:SI 0 ax [97])
                (ashift:SI (reg:SI 0 ax [96])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:9 655 {*ashlsi3_1}
     (nil))
(insn 15 13 16 3 (set (reg:SI 3 bx [orig:83 _1 ] [83])
        (reg:SI 0 ax [96])) "kernel/vsprintf.c":17:9 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 0 ax [98])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 s+0 S4 A32])) "kernel/vsprintf.c":17:19 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
        (mem/f:SI (reg/f:SI 0 ax [98]) [1 *s_16(D)+0 S4 A32])) "kernel/vsprintf.c":17:19 75 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg/f:SI 2 cx [orig:85 _4 ] [85])
                (plus:SI (reg/f:SI 0 ax [orig:84 _2 ] [84])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:22 209 {*addsi_1}
     (nil))
(insn 19 18 20 3 (set (reg/f:SI 1 dx [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 s+0 S4 A32])) "kernel/vsprintf.c":17:22 75 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (mem/f:SI (reg/f:SI 1 dx [99]) [1 *s_16(D)+0 S4 A32])
        (reg/f:SI 2 cx [orig:85 _4 ] [85])) "kernel/vsprintf.c":17:22 75 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:QI 0 ax [orig:86 _5 ] [86])
        (mem:QI (reg/f:SI 0 ax [orig:84 _2 ] [84]) [0 *_3+0 S1 A8])) "kernel/vsprintf.c":17:16 77 {*movqi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:SI 0 ax [orig:87 _6 ] [87])
        (sign_extend:SI (reg:QI 0 ax [orig:86 _5 ] [86]))) "kernel/vsprintf.c":17:16 153 {extendqisi2}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg:SI 0 ax [orig:88 _7 ] [88])
                (plus:SI (reg:SI 0 ax [orig:87 _6 ] [87])
                    (reg:SI 3 bx [orig:83 _1 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:14 209 {*addsi_1}
     (nil))
(insn 24 23 25 3 (parallel [
            (set (reg:SI 0 ax [100])
                (plus:SI (reg:SI 0 ax [orig:88 _7 ] [88])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":17:5 209 {*addsi_1}
     (nil))
(insn 25 24 26 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 i+0 S4 A32])
        (reg:SI 0 ax [100])) "kernel/vsprintf.c":17:5 75 {*movsi_internal}
     (nil))
(code_label 26 25 27 4 2 (nil) [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg/f:SI 0 ax [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 s+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg/f:SI 0 ax [orig:89 _8 ] [89])
        (mem/f:SI (reg/f:SI 0 ax [101]) [1 *s_16(D)+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (nil))
(insn 30 29 33 4 (set (reg:QI 0 ax [orig:90 _9 ] [90])
        (mem:QI (reg/f:SI 0 ax [orig:89 _8 ] [89]) [0 *_8+0 S1 A8])) "kernel/vsprintf.c":16:9 77 {*movqi_internal}
     (nil))
(insn 33 30 34 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 0 ax [orig:90 _9 ] [90])
            (const_int 47 [0x2f]))) "kernel/vsprintf.c":16:9 9 {*cmpqi_1}
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "kernel/vsprintf.c":16:9 806 {*jcc}
     (nil)
 -> 44)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg/f:SI 0 ax [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [6 s+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg/f:SI 0 ax [orig:91 _10 ] [91])
        (mem/f:SI (reg/f:SI 0 ax [102]) [1 *s_16(D)+0 S4 A32])) "kernel/vsprintf.c":16:9 75 {*movsi_internal}
     (nil))
(insn 38 37 42 5 (set (reg:QI 0 ax [orig:92 _11 ] [92])
        (mem:QI (reg/f:SI 0 ax [orig:91 _10 ] [91]) [0 *_10+0 S1 A8])) "kernel/vsprintf.c":16:9 77 {*movqi_internal}
     (nil))
(insn 42 38 43 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 0 ax [orig:92 _11 ] [92])
            (const_int 57 [0x39]))) "kernel/vsprintf.c":16:9 9 {*cmpqi_1}
     (nil))
(jump_insn 43 42 44 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "kernel/vsprintf.c":16:9 806 {*jcc}
     (nil)
 -> 39)
(code_label 44 43 45 6 3 (nil) [1 uses])
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 54 6 (set (reg:SI 0 ax [orig:93 _19 ] [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 i+0 S4 A32])) "kernel/vsprintf.c":18:9 75 {*movsi_internal}
     (nil))
(insn 54 46 59 6 (use (reg/i:SI 0 ax)) "kernel/vsprintf.c":19:1 -1
     (nil))
(note 59 54 0 NOTE_INSN_DELETED)

;; Function number (number, funcdef_no=1, decl_uid=1046, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=68, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Ts {*leasi}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) r {*cmpsi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) q  (1) n {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) q  (1) n {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 53:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 64:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =rm  (1) 0 {*negsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 78:  (0) =qm  (1) %0  (2) qn {*andqi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) q  (1) n {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 86:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 103:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 111:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 119:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 121:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =a  (1) =d  (2) 0  (3) 1  (4) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 138:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 140:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 142:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 143:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 152:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 162:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 170:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 172:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 176:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 185:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 189:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 191:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 192:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 196:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 204:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 205:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 206:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 215:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 216:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 217:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 219:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 221:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 222:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 223:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 224:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 228:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 236:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 237:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 238:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 239:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 243:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 256:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 257:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 258:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 262:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 263:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 272:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 273:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 274:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 276
	 Choosing alt 0 in insn 276:  (0) =rm  (1) %0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 277:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 278:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 282:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 283:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 294:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 295:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 296:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 300:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 301:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8
EBB 9 10
EBB 11
EBB 12 13 14
EBB 15 16
EBB 17
EBB 18
EBB 19 20
EBB 21 22 23
EBB 24 25
EBB 26 27
EBB 28
EBB 29
EBB 30
EBB 31 32
EBB 33 34
EBB 35
EBB 36
EBB 37 38
EBB 39 40 41
EBB 42 43
EBB 44 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50 51
EBB 52
EBB 53 54
EBB 55
EBB 56 57
EBB 58

********** Pseudo live ranges #1: **********

  BB 58
   Insn 318: point = 0, n_alt = -1
   Insn 317: point = 0, n_alt = -2
   Insn 313: point = 1, n_alt = -2
  BB 8
   Insn 320: point = 4, n_alt = -1
   Insn 35: point = 4, n_alt = 0
  BB 57
   Insn 308: point = 5, n_alt = 0
  BB 56
   Insn 306: point = 6, n_alt = -1
   Insn 305: point = 6, n_alt = 0
   Insn 301: point = 7, n_alt = 1
   Insn 300: point = 8, n_alt = 3
   Insn 299: point = 9, n_alt = 0
  BB 54
   Insn 344: point = 10, n_alt = -1
  BB 53
   Insn 288: point = 10, n_alt = -1
   Insn 287: point = 10, n_alt = 0
   Insn 283: point = 11, n_alt = 1
   Insn 282: point = 12, n_alt = 3
   Insn 281: point = 13, n_alt = 0
  BB 51
   Insn 342: point = 14, n_alt = -1
  BB 50
   Insn 266: point = 14, n_alt = -1
   Insn 265: point = 14, n_alt = 0
   Insn 263: point = 15, n_alt = 1
   Insn 262: point = 16, n_alt = 3
   Insn 261: point = 17, n_alt = 0
  BB 48
   Insn 340: point = 18, n_alt = -1
  BB 47
   Insn 249: point = 18, n_alt = -1
   Insn 248: point = 18, n_alt = 0
   Insn 244: point = 19, n_alt = 1
   Insn 243: point = 20, n_alt = 3
   Insn 242: point = 21, n_alt = 0
  BB 45
   Insn 338: point = 22, n_alt = -1
  BB 46
   Insn 239: point = 22, n_alt = 8
   Insn 238: point = 23, n_alt = 4
   Insn 237: point = 24, n_alt = 1
   Insn 236: point = 25, n_alt = 3
   Insn 235: point = 26, n_alt = 0
  BB 44
   Insn 230: point = 27, n_alt = -1
   Insn 229: point = 27, n_alt = 0
   Insn 228: point = 28, n_alt = 0
   Insn 227: point = 30, n_alt = 0
  BB 41
   Insn 336: point = 31, n_alt = -1
   Insn 206: point = 31, n_alt = 8
   Insn 205: point = 32, n_alt = 1
   Insn 204: point = 33, n_alt = 3
   Insn 203: point = 34, n_alt = 0
  BB 43
   Insn 224: point = 35, n_alt = 8
   Insn 223: point = 36, n_alt = 4
   Insn 222: point = 38, n_alt = 1
   Insn 221: point = 39, n_alt = 3
   Insn 220: point = 40, n_alt = 0
   Insn 219: point = 41, n_alt = 3
   Insn 218: point = 43, n_alt = 0
   Insn 217: point = 44, n_alt = 8
   Insn 216: point = 45, n_alt = 1
   Insn 215: point = 46, n_alt = 3
   Insn 214: point = 47, n_alt = 0
  BB 42
   Insn 212: point = 48, n_alt = -1
   Insn 211: point = 48, n_alt = 0
  BB 40
   Insn 201: point = 48, n_alt = -1
   Insn 200: point = 48, n_alt = 0
  BB 39
   Insn 198: point = 48, n_alt = -1
   Insn 197: point = 48, n_alt = 0
   Insn 196: point = 49, n_alt = 0
   Insn 195: point = 51, n_alt = 0
  BB 38
   Insn 192: point = 52, n_alt = 8
   Insn 191: point = 53, n_alt = 4
   Insn 190: point = 54, n_alt = 1
   Insn 189: point = 55, n_alt = 3
   Insn 188: point = 56, n_alt = 0
  BB 37
   Insn 186: point = 57, n_alt = -1
   Insn 185: point = 57, n_alt = 1
  BB 36
   Insn 182: point = 57, n_alt = -1
   Insn 181: point = 57, n_alt = 0
   Insn 177: point = 58, n_alt = 1
   Insn 176: point = 59, n_alt = 3
   Insn 175: point = 60, n_alt = 0
  BB 34
   Insn 334: point = 61, n_alt = -1
  BB 35
   Insn 172: point = 61, n_alt = 8
   Insn 171: point = 62, n_alt = 1
   Insn 170: point = 63, n_alt = 3
   Insn 169: point = 64, n_alt = 0
  BB 33
   Insn 164: point = 65, n_alt = -1
   Insn 163: point = 65, n_alt = 0
   Insn 162: point = 66, n_alt = 0
   Insn 161: point = 68, n_alt = 0
   Insn 160: point = 69, n_alt = 0
   Insn 159: point = 70, n_alt = 0
  BB 32
   Insn 156: point = 71, n_alt = 1
   Insn 155: point = 72, n_alt = 0
  BB 31
   Insn 153: point = 73, n_alt = -1
   Insn 152: point = 73, n_alt = 1
   Insn 151: point = 74, n_alt = 0
  BB 27
   Insn 330: point = 75, n_alt = -1
   Insn 121: point = 75, n_alt = 8
   Insn 120: point = 76, n_alt = 1
   Insn 119: point = 77, n_alt = 3
   Insn 118: point = 78, n_alt = 0
  BB 30
   Insn 148: point = 79, n_alt = -1
   Insn 147: point = 79, n_alt = 1
  BB 28
   Insn 332: point = 79, n_alt = -1
  BB 26
   Insn 116: point = 79, n_alt = -1
   Insn 115: point = 79, n_alt = 1
   Insn 114: point = 79, n_alt = 1
  BB 23
   Insn 328: point = 79, n_alt = -1
   Insn 103: point = 79, n_alt = 0
  BB 25
   Insn 111: point = 79, n_alt = 0
  BB 24
   Insn 109: point = 79, n_alt = -1
   Insn 108: point = 79, n_alt = 0
  BB 22
   Insn 101: point = 79, n_alt = -1
   Insn 100: point = 79, n_alt = 0
  BB 21
   Insn 98: point = 79, n_alt = -1
   Insn 97: point = 79, n_alt = 0
   Insn 96: point = 80, n_alt = 0
   Insn 95: point = 82, n_alt = 0
  BB 20
   Insn 92: point = 83, n_alt = 0
  BB 19
   Insn 90: point = 83, n_alt = -1
   Insn 89: point = 83, n_alt = 1
  BB 14
   Insn 324: point = 83, n_alt = -1
   Insn 65: point = 83, n_alt = 0
   Insn 64: point = 83, n_alt = 8
  BB 18
   Insn 86: point = 83, n_alt = 8
  BB 16
   Insn 326: point = 85, n_alt = -1
   Insn 78: point = 85, n_alt = 0
   Insn 77: point = 87, n_alt = 0
   Insn 76: point = 89, n_alt = 0
   Insn 75: point = 91, n_alt = 0
  BB 17
   Insn 83: point = 92, n_alt = 3
  BB 15
   Insn 73: point = 93, n_alt = -1
   Insn 72: point = 93, n_alt = 0
   Insn 71: point = 94, n_alt = 0
   Insn 70: point = 96, n_alt = 0
  BB 13
   Insn 62: point = 97, n_alt = -1
   Insn 61: point = 97, n_alt = 1
  BB 12
   Insn 57: point = 97, n_alt = -1
   Insn 56: point = 97, n_alt = 0
   Insn 55: point = 98, n_alt = 0
   Insn 54: point = 100, n_alt = 0
   Insn 53: point = 101, n_alt = 8
  BB 10
   Insn 322: point = 103, n_alt = -1
   Insn 45: point = 103, n_alt = 3
  BB 11
   Insn 50: point = 104, n_alt = 3
  BB 9
   Insn 43: point = 105, n_alt = -1
   Insn 42: point = 105, n_alt = 0
   Insn 41: point = 106, n_alt = 0
   Insn 40: point = 108, n_alt = 0
  BB 7
   Insn 32: point = 109, n_alt = -1
   Insn 31: point = 109, n_alt = 0
  BB 6
   Insn 27: point = 109, n_alt = -1
   Insn 26: point = 109, n_alt = 0
  BB 5
   Insn 21: point = 109, n_alt = 0
  BB 4
   Insn 19: point = 109, n_alt = -1
   Insn 18: point = 109, n_alt = 0
   Insn 17: point = 110, n_alt = 0
   Insn 16: point = 112, n_alt = 0
  BB 3
   Insn 13: point = 113, n_alt = 1
   Insn 12: point = 114, n_alt = 0
  BB 2
   Insn 10: point = 117, n_alt = -1
   Insn 9: point = 117, n_alt = 0
   Insn 8: point = 118, n_alt = 0
   Insn 7: point = 120, n_alt = 0
   Insn 6: point = 121, n_alt = 1
   Insn 5: point = 122, n_alt = 0
   Insn 348: point = 123, n_alt = 0
  BB 29
   Insn 143: point = 124, n_alt = 8
   Insn 142: point = 125, n_alt = 4
   Insn 141: point = 127, n_alt = 1
   Insn 140: point = 128, n_alt = 3
   Insn 139: point = 129, n_alt = 0
   Insn 138: point = 130, n_alt = 3
   Insn 137: point = 132, n_alt = 0
   Insn 136: point = 133, n_alt = -2
   Insn 135: point = 135, n_alt = 0
   Insn 130: point = 136, n_alt = 1
   Insn 129: point = 137, n_alt = 1
   Insn 134: point = 138, n_alt = 0
   Insn 347: point = 140, n_alt = -2
   Insn 346: point = 142, n_alt = -2
   Insn 133: point = 144, n_alt = 0
   Insn 132: point = 145, n_alt = 0
   Insn 131: point = 146, n_alt = 0
  BB 49
   Insn 258: point = 147, n_alt = 8
   Insn 257: point = 148, n_alt = 1
   Insn 256: point = 149, n_alt = 3
   Insn 255: point = 150, n_alt = 0
  BB 52
   Insn 278: point = 151, n_alt = 8
   Insn 277: point = 152, n_alt = 4
   Insn 276: point = 154, n_alt = 0
   Insn 275: point = 156, n_alt = 0
   Insn 274: point = 157, n_alt = 3
   Insn 273: point = 158, n_alt = 1
   Insn 272: point = 159, n_alt = 3
   Insn 271: point = 160, n_alt = 0
  BB 55
   Insn 296: point = 161, n_alt = 8
   Insn 295: point = 162, n_alt = 1
   Insn 294: point = 163, n_alt = 3
   Insn 293: point = 164, n_alt = 0
 r82: [115..123]
 r83: [117..118]
 r84: [109..110]
 r85: [105..106]
 r86: [97..98]
 r87: [93..94]
 r88: [88..89]
 r89: [86..87]
 r90: [79..80]
 r91: [75..78]
 r92: [131..133]
 r93: [126..130]
 r94: [124..129]
 r95: [124..125]
 r96: [65..66]
 r97: [61..64]
 r98: [57..60]
 r99: [52..56]
 r100: [48..49]
 r101: [31..34]
 r102: [44..47]
 r103: [37..41]
 r104: [35..40]
 r105: [35..36]
 r106: [27..28]
 r107: [22..26]
 r108: [18..21]
 r109: [147..150]
 r110: [14..17]
 r111: [151..160]
 r112: [151..152]
 r113: [10..13]
 r114: [161..164]
 r115: [6..9]
 r116: [2..5]
 r117: [101..104]
 r118: [92..92] [83..85]
 r119: [134..135]
 r120: [0..1]
 r121: [121..122]
 r122: [119..120]
 r123: [113..114]
 r124: [111..112]
 r125: [107..108]
 r126: [99..100]
 r127: [95..96]
 r128: [90..91]
 r129: [81..82]
 r130: [76..77]
 r131: [137..142]
 r132: [136..140]
 r133: [143..146]
 r134: [141..145]
 r135: [139..144]
 r136: [131..132]
 r137: [127..128]
 r138: [73..74]
 r139: [71..72]
 r140: [69..70]
 r141: [67..68]
 r142: [62..63]
 r143: [58..59]
 r144: [54..55]
 r145: [52..53]
 r146: [50..51]
 r147: [32..33]
 r148: [45..46]
 r149: [42..43]
 r150: [38..39]
 r151: [29..30]
 r152: [24..25]
 r153: [22..23]
 r154: [19..20]
 r155: [148..149]
 r156: [15..16]
 r157: [158..159]
 r158: [155..157]
 r159: [153..154]
 r160: [155..156]
 r161: [11..12]
 r162: [162..163]
 r163: [7..8]
Compressing live ranges: from 165 to 119 - 72%
Ranges after the compression:
 r82: [87..92]
 r83: [87..88]
 r84: [81..82]
 r85: [77..78]
 r86: [71..72]
 r87: [67..68]
 r88: [62..63]
 r89: [60..61]
 r90: [54..55]
 r91: [52..53]
 r92: [97..98]
 r93: [95..96]
 r94: [93..96]
 r95: [93..94]
 r96: [42..43]
 r97: [40..41]
 r98: [38..39]
 r99: [34..37]
 r100: [30..31]
 r101: [20..21]
 r102: [28..29]
 r103: [24..25]
 r104: [22..25]
 r105: [22..23]
 r106: [16..17]
 r107: [12..15]
 r108: [10..11]
 r109: [107..108]
 r110: [8..9]
 r111: [109..116]
 r112: [109..110]
 r113: [6..7]
 r114: [117..118]
 r115: [4..5]
 r116: [2..3]
 r117: [75..76]
 r118: [66..66] [58..59]
 r119: [99..100]
 r120: [0..1]
 r121: [91..92]
 r122: [89..90]
 r123: [85..86]
 r124: [83..84]
 r125: [79..80]
 r126: [73..74]
 r127: [69..70]
 r128: [64..65]
 r129: [56..57]
 r130: [52..53]
 r131: [101..104]
 r132: [101..102]
 r133: [105..106]
 r134: [103..106]
 r135: [101..106]
 r136: [97..98]
 r137: [95..96]
 r138: [50..51]
 r139: [48..49]
 r140: [46..47]
 r141: [44..45]
 r142: [40..41]
 r143: [38..39]
 r144: [36..37]
 r145: [34..35]
 r146: [32..33]
 r147: [20..21]
 r148: [28..29]
 r149: [26..27]
 r150: [24..25]
 r151: [18..19]
 r152: [14..15]
 r153: [12..13]
 r154: [10..11]
 r155: [107..108]
 r156: [8..9]
 r157: [115..116]
 r158: [113..114]
 r159: [111..112]
 r160: [113..114]
 r161: [6..7]
 r162: [117..118]
 r163: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=68, prev_offset=68)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=64, prev_offset=64)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 348
changing reg in insn 12
changing reg in insn 5
changing reg in insn 8
changing reg in insn 9
changing reg in insn 17
changing reg in insn 18
changing reg in insn 41
changing reg in insn 42
changing reg in insn 55
changing reg in insn 56
changing reg in insn 71
changing reg in insn 72
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 96
changing reg in insn 97
changing reg in insn 118
changing reg in insn 121
changing reg in insn 119
changing reg in insn 136
changing reg in insn 138
changing reg in insn 138
changing reg in insn 138
changing reg in insn 142
changing reg in insn 139
changing reg in insn 143
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 162
changing reg in insn 163
changing reg in insn 169
changing reg in insn 172
changing reg in insn 170
changing reg in insn 175
changing reg in insn 181
changing reg in insn 176
changing reg in insn 188
changing reg in insn 192
changing reg in insn 189
changing reg in insn 196
changing reg in insn 197
changing reg in insn 203
changing reg in insn 206
changing reg in insn 204
changing reg in insn 214
changing reg in insn 217
changing reg in insn 215
changing reg in insn 219
changing reg in insn 223
changing reg in insn 220
changing reg in insn 224
changing reg in insn 221
changing reg in insn 223
changing reg in insn 224
changing reg in insn 228
changing reg in insn 229
changing reg in insn 235
changing reg in insn 239
changing reg in insn 236
changing reg in insn 242
changing reg in insn 248
changing reg in insn 243
changing reg in insn 255
changing reg in insn 258
changing reg in insn 256
changing reg in insn 261
changing reg in insn 265
changing reg in insn 262
changing reg in insn 271
changing reg in insn 278
changing reg in insn 272
changing reg in insn 277
changing reg in insn 278
changing reg in insn 281
changing reg in insn 287
changing reg in insn 282
changing reg in insn 293
changing reg in insn 296
changing reg in insn 294
changing reg in insn 299
changing reg in insn 305
changing reg in insn 300
changing reg in insn 308
changing reg in insn 35
changing reg in insn 313
changing reg in insn 50
changing reg in insn 45
changing reg in insn 53
changing reg in insn 83
changing reg in insn 78
changing reg in insn 86
changing reg in insn 135
changing reg in insn 136
changing reg in insn 313
changing reg in insn 317
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 40
changing reg in insn 41
changing reg in insn 54
changing reg in insn 55
changing reg in insn 70
changing reg in insn 71
changing reg in insn 75
changing reg in insn 76
changing reg in insn 95
changing reg in insn 96
changing reg in insn 119
changing reg in insn 120
changing reg in insn 346
changing reg in insn 134
changing reg in insn 134
changing reg in insn 129
changing reg in insn 347
changing reg in insn 134
changing reg in insn 134
changing reg in insn 130
changing reg in insn 131
changing reg in insn 346
changing reg in insn 132
changing reg in insn 347
changing reg in insn 133
changing reg in insn 134
changing reg in insn 137
changing reg in insn 138
changing reg in insn 140
changing reg in insn 141
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 156
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 170
changing reg in insn 171
changing reg in insn 176
changing reg in insn 177
changing reg in insn 189
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 195
changing reg in insn 196
changing reg in insn 204
changing reg in insn 205
changing reg in insn 215
changing reg in insn 216
changing reg in insn 218
changing reg in insn 219
changing reg in insn 221
changing reg in insn 222
changing reg in insn 227
changing reg in insn 228
changing reg in insn 236
changing reg in insn 237
changing reg in insn 238
changing reg in insn 239
changing reg in insn 243
changing reg in insn 244
changing reg in insn 256
changing reg in insn 257
changing reg in insn 262
changing reg in insn 263
changing reg in insn 272
changing reg in insn 273
changing reg in insn 274
changing reg in insn 276
changing reg in insn 276
changing reg in insn 277
changing reg in insn 275
changing reg in insn 282
changing reg in insn 283
changing reg in insn 294
changing reg in insn 295
changing reg in insn 300
changing reg in insn 301
deleting insn with uid = 77.
deleting insn with uid = 346.
deleting insn with uid = 347.
deleting insn with uid = 313.
deleting insn with uid = 317.
starting the processing of deferred insns
ending the processing of deferred insns


number

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;;  ref usage 	r0={51d,65u} r1={30d,29u,1e} r2={5d,4u,1e} r7={1d,149u} r16={10e} r17={65d,26u} r19={3e} 
;;    total ref usage 440{152d,273u,15e} in 190{190 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 348 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 348 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 348 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [121])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7d98a1d45000 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/vsprintf.c":38:14 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7d98a1d45000 *.LC0>)
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 digits+0 S4 A32])
        (reg/f:SI 1 dx [121])) "kernel/vsprintf.c":38:14 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx [122])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":41:11 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:SI 1 dx [orig:83 _1 ] [83])
                (and:SI (reg:SI 1 dx [122])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":41:11 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 64 [0x40]))
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:83 _1 ] [83])
            (const_int 0 [0]))) "kernel/vsprintf.c":41:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) "kernel/vsprintf.c":41:5 806 {*jcc}
     (nil)
 -> 14)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:SI 0 ax [123])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7d98a1d45090 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/vsprintf.c":42:10 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7d98a1d45090 *.LC1>)
        (nil)))
(insn 13 12 14 3 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 digits+0 S4 A32])
        (reg/f:SI 0 ax [123])) "kernel/vsprintf.c":42:10 75 {*movsi_internal}
     (nil))
(code_label 14 13 15 4 7 (nil) [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 0 ax [124])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":43:11 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 0 ax [orig:84 _2 ] [84])
                (and:SI (reg:SI 0 ax [124])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":43:11 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _2 ] [84])
            (const_int 0 [0]))) "kernel/vsprintf.c":43:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "kernel/vsprintf.c":43:5 806 {*jcc}
     (nil)
 -> 22)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 88 [0x58])) [2 type+0 S4 A32])
                (and:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 88 [0x58])) [2 type+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":44:8 490 {*andsi_1}
     (nil))
(code_label 22 21 23 6 8 (nil) [1 uses])
(note 23 22 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 23 27 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 76 [0x4c])) [2 base+0 S4 A32])
            (const_int 1 [0x1]))) "kernel/vsprintf.c":45:5 11 {*cmpsi_1}
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "kernel/vsprintf.c":45:5 806 {*jcc}
     (nil)
 -> 33)
(note 28 27 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 28 32 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 76 [0x4c])) [2 base+0 S4 A32])
            (const_int 36 [0x24]))) "kernel/vsprintf.c":45:15 11 {*cmpsi_1}
     (nil))
(jump_insn 32 31 33 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "kernel/vsprintf.c":45:15 806 {*jcc}
     (nil)
 -> 38)
(code_label 33 32 34 8 9 (nil) [1 uses])
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 320 8 (set (reg/f:SI 0 ax [orig:116 _60 ] [116])
        (const_int 0 [0])) "kernel/vsprintf.c":46:10 75 {*movsi_internal}
     (nil))
(jump_insn 320 35 321 8 (set (pc)
        (label_ref 311)) "kernel/vsprintf.c":46:10 807 {jump}
     (nil)
 -> 311)
(barrier 321 320 38)
(code_label 38 321 39 9 10 (nil) [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:SI 0 ax [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":48:12 75 {*movsi_internal}
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:SI 0 ax [orig:85 _3 ] [85])
                (and:SI (reg:SI 0 ax [125])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":48:12 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 42 41 43 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _3 ] [85])
            (const_int 0 [0]))) "kernel/vsprintf.c":48:4 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 43 42 44 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "kernel/vsprintf.c":48:4 806 {*jcc}
     (nil)
 -> 48)
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 322 10 (set (reg:QI 0 ax [orig:117 iftmp.0_61 ] [117])
        (const_int 48 [0x30])) "kernel/vsprintf.c":48:4 77 {*movqi_internal}
     (nil))
(jump_insn 322 45 323 10 (set (pc)
        (label_ref 51)) 807 {jump}
     (nil)
 -> 51)
(barrier 323 322 48)
(code_label 48 323 49 11 12 (nil) [1 uses])
(note 49 48 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 11 (set (reg:QI 0 ax [orig:117 iftmp.0_61 ] [117])
        (const_int 32 [0x20])) "kernel/vsprintf.c":48:4 77 {*movqi_internal}
     (nil))
(code_label 51 50 52 12 13 (nil) [1 uses])
(note 52 51 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 12 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 51 [0x33])) [0 c+0 S1 A8])
        (reg:QI 0 ax [orig:117 iftmp.0_61 ] [117])) "kernel/vsprintf.c":48:4 77 {*movqi_internal}
     (nil))
(insn 54 53 55 12 (set (reg:SI 0 ax [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":49:11 75 {*movsi_internal}
     (nil))
(insn 55 54 56 12 (parallel [
            (set (reg:SI 0 ax [orig:86 _4 ] [86])
                (and:SI (reg:SI 0 ax [126])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":49:11 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 56 55 57 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _4 ] [86])
            (const_int 0 [0]))) "kernel/vsprintf.c":49:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "kernel/vsprintf.c":49:5 806 {*jcc}
     (nil)
 -> 68)
(note 58 57 61 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 61 58 62 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 72 [0x48])) [2 num+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":49:18 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 62 61 63 13 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "kernel/vsprintf.c":49:18 806 {*jcc}
     (nil)
 -> 68)
(note 63 62 64 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 14 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 63 [0x3f])) [0 sign+0 S1 A8])
        (const_int 45 [0x2d])) "kernel/vsprintf.c":50:8 77 {*movqi_internal}
     (nil))
(insn 65 64 324 14 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 72 [0x48])) [2 num+0 S4 A32])
                (neg:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 72 [0x48])) [2 num+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":51:7 575 {*negsi_1}
     (nil))
(jump_insn 324 65 325 14 (set (pc)
        (label_ref 87)) "kernel/vsprintf.c":51:7 807 {jump}
     (nil)
 -> 87)
(barrier 325 324 68)
(code_label 68 325 69 15 14 (nil) [2 uses])
(note 69 68 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 15 (set (reg:SI 0 ax [127])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":53:16 75 {*movsi_internal}
     (nil))
(insn 71 70 72 15 (parallel [
            (set (reg:SI 0 ax [orig:87 _5 ] [87])
                (and:SI (reg:SI 0 ax [127])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":53:16 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 72 71 73 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:87 _5 ] [87])
            (const_int 0 [0]))) "kernel/vsprintf.c":53:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "kernel/vsprintf.c":53:8 806 {*jcc}
     (nil)
 -> 81)
(note 74 73 75 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 16 (set (reg:SI 0 ax [128])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":53:54 75 {*movsi_internal}
     (nil))
(insn 76 75 78 16 (parallel [
            (set (reg:SI 0 ax [orig:88 _6 ] [88])
                (ashift:SI (reg:SI 0 ax [128])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":53:54 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 78 76 326 16 (parallel [
            (set (reg:QI 0 ax [orig:118 iftmp.1_62 ] [118])
                (and:QI (reg:QI 0 ax [orig:89 _7 ] [89])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":53:8 491 {*andqi_1}
     (nil))
(jump_insn 326 78 327 16 (set (pc)
        (label_ref 84)) 807 {jump}
     (nil)
 -> 84)
(barrier 327 326 81)
(code_label 81 327 82 17 16 (nil) [1 uses])
(note 82 81 83 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 17 (set (reg:QI 0 ax [orig:118 iftmp.1_62 ] [118])
        (const_int 43 [0x2b])) "kernel/vsprintf.c":53:8 77 {*movqi_internal}
     (nil))
(code_label 84 83 85 18 17 (nil) [1 uses])
(note 85 84 86 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 18 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 63 [0x3f])) [0 sign+0 S1 A8])
        (reg:QI 0 ax [orig:118 iftmp.1_62 ] [118])) "kernel/vsprintf.c":53:8 77 {*movqi_internal}
     (nil))
(code_label 87 86 88 19 15 (nil) [1 uses])
(note 88 87 89 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 63 [0x3f])) [0 sign+0 S1 A8])
            (const_int 0 [0]))) "kernel/vsprintf.c":54:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 90 89 91 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) "kernel/vsprintf.c":54:5 806 {*jcc}
     (nil)
 -> 93)
(note 91 90 92 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 20 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 80 [0x50])) [2 size+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 80 [0x50])) [2 size+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":55:7 209 {*addsi_1}
     (nil))
(code_label 93 92 94 21 18 (nil) [1 uses])
(note 94 93 95 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 21 (set (reg:SI 0 ax [129])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":56:11 75 {*movsi_internal}
     (nil))
(insn 96 95 97 21 (parallel [
            (set (reg:SI 0 ax [orig:90 _8 ] [90])
                (and:SI (reg:SI 0 ax [129])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":56:11 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 97 96 98 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:90 _8 ] [90])
            (const_int 0 [0]))) "kernel/vsprintf.c":56:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 98 97 99 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "kernel/vsprintf.c":56:5 806 {*jcc}
     (nil)
 -> 112)
(note 99 98 100 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 76 [0x4c])) [2 base+0 S4 A32])
            (const_int 16 [0x10]))) "kernel/vsprintf.c":57:6 11 {*cmpsi_1}
     (nil))
(jump_insn 101 100 102 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) "kernel/vsprintf.c":57:6 806 {*jcc}
     (nil)
 -> 106)
(note 102 101 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 328 23 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 80 [0x50])) [2 size+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 80 [0x50])) [2 size+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":58:9 209 {*addsi_1}
     (nil))
(jump_insn 328 103 329 23 (set (pc)
        (label_ref 112)) 807 {jump}
     (nil)
 -> 112)
(barrier 329 328 106)
(code_label 106 329 107 24 20 (nil) [1 uses])
(note 107 106 108 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 76 [0x4c])) [2 base+0 S4 A32])
            (const_int 8 [0x8]))) "kernel/vsprintf.c":59:11 11 {*cmpsi_1}
     (nil))
(jump_insn 109 108 110 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "kernel/vsprintf.c":59:11 806 {*jcc}
     (nil)
 -> 112)
(note 110 109 111 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 25 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 80 [0x50])) [2 size+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 80 [0x50])) [2 size+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":60:8 209 {*addsi_1}
     (nil))
(code_label 112 111 113 26 19 (nil) [3 uses])
(note 113 112 114 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 26 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":62:4 75 {*movsi_internal}
     (nil))
(insn 115 114 116 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 72 [0x48])) [2 num+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":63:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 116 115 117 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) "kernel/vsprintf.c":63:5 806 {*jcc}
     (nil)
 -> 124)
(note 117 116 118 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 27 (set (reg:SI 0 ax [orig:91 i.2_9 ] [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])) "kernel/vsprintf.c":64:8 75 {*movsi_internal}
     (nil))
(insn 119 118 120 27 (parallel [
            (set (reg:SI 1 dx [130])
                (plus:SI (reg:SI 0 ax [orig:91 i.2_9 ] [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":64:8 209 {*addsi_1}
     (nil))
(insn 120 119 121 27 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])
        (reg:SI 1 dx [130])) "kernel/vsprintf.c":64:8 75 {*movsi_internal}
     (nil))
(insn 121 120 330 27 (set (mem:QI (plus:SI (plus:SI (reg/f:SI 7 sp)
                    (reg:SI 0 ax [orig:91 i.2_9 ] [91]))
                (const_int 8 [0x8])) [0 tmp[i.2_9]+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":64:12 77 {*movqi_internal}
     (nil))
(jump_insn 330 121 331 27 (set (pc)
        (label_ref 149)) 807 {jump}
     (nil)
 -> 149)
(barrier 331 330 124)
(code_label 124 331 125 28 21 (nil) [1 uses])
(note 125 124 332 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 332 125 333 28 (set (pc)
        (label_ref 144)) "kernel/vsprintf.c":66:9 807 {jump}
     (nil)
 -> 144)
(barrier 333 332 146)
(code_label 146 333 128 29 24 (nil) [1 uses])
(note 128 146 131 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 131 128 132 29 (set (reg:SI 0 ax [133])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [2 num+0 S4 A32])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 132 131 133 29 (set (reg:SI 1 dx [134])
        (const_int 0 [0])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 133 132 134 29 (set (reg:SI 2 cx [135])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [2 base+0 S4 A32])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 134 133 129 29 (parallel [
            (set (reg:SI 0 ax [orig:131 num ] [131])
                (asm_operands:SI ("divl %4") ("=a") 0 [
                        (reg:SI 0 ax [orig:131 num ] [131])
                        (reg:SI 1 dx [orig:132 __res ] [132])
                        (reg:SI 2 cx [135])
                    ]
                     [
                        (asm_input:SI ("0") kernel/vsprintf.c:67)
                        (asm_input:SI ("1") kernel/vsprintf.c:67)
                        (asm_input:SI ("r") kernel/vsprintf.c:67)
                    ]
                     [] kernel/vsprintf.c:67))
            (set (reg:SI 1 dx [orig:132 __res ] [132])
                (asm_operands:SI ("divl %4") ("=d") 1 [
                        (reg:SI 0 ax [orig:131 num ] [131])
                        (reg:SI 1 dx [orig:132 __res ] [132])
                        (reg:SI 2 cx [135])
                    ]
                     [
                        (asm_input:SI ("0") kernel/vsprintf.c:67)
                        (asm_input:SI ("1") kernel/vsprintf.c:67)
                        (asm_input:SI ("r") kernel/vsprintf.c:67)
                    ]
                     [] kernel/vsprintf.c:67))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":67:22 -1
     (nil))
(insn 129 134 130 29 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [2 num+0 S4 A32])
        (reg:SI 0 ax [orig:131 num ] [131])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 130 129 135 29 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [2 __res+0 S4 A32])
        (reg:SI 1 dx [orig:132 __res ] [132])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 135 130 136 29 (set (reg:SI 0 ax [orig:119 _97 ] [119])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [2 __res+0 S4 A32])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 136 135 137 29 (set (reg:SI 1 dx [orig:92 _10 ] [92])
        (reg:SI 0 ax [orig:119 _97 ] [119])) "kernel/vsprintf.c":67:22 75 {*movsi_internal}
     (nil))
(insn 137 136 138 29 (set (reg/f:SI 0 ax [136])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 digits+0 S4 A32])) "kernel/vsprintf.c":67:21 75 {*movsi_internal}
     (nil))
(insn 138 137 139 29 (parallel [
            (set (reg/f:SI 2 cx [orig:93 _11 ] [93])
                (plus:SI (reg:SI 1 dx [orig:92 _10 ] [92])
                    (reg/f:SI 0 ax [136])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":67:21 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])
            (reg:SI 1 dx [orig:92 _10 ] [92]))
        (nil)))
(insn 139 138 140 29 (set (reg:SI 0 ax [orig:94 i.3_12 ] [94])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])) "kernel/vsprintf.c":67:9 75 {*movsi_internal}
     (nil))
(insn 140 139 141 29 (parallel [
            (set (reg:SI 1 dx [137])
                (plus:SI (reg:SI 0 ax [orig:94 i.3_12 ] [94])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":67:9 209 {*addsi_1}
     (nil))
(insn 141 140 142 29 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])
        (reg:SI 1 dx [137])) "kernel/vsprintf.c":67:9 75 {*movsi_internal}
     (nil))
(insn 142 141 143 29 (set (reg:QI 1 dx [orig:95 _13 ] [95])
        (mem:QI (reg/f:SI 2 cx [orig:93 _11 ] [93]) [0 *_11+0 S1 A8])) "kernel/vsprintf.c":67:21 77 {*movqi_internal}
     (nil))
(insn 143 142 144 29 (set (mem:QI (plus:SI (plus:SI (reg/f:SI 7 sp)
                    (reg:SI 0 ax [orig:94 i.3_12 ] [94]))
                (const_int 8 [0x8])) [0 tmp[i.3_12]+0 S1 A8])
        (reg:QI 1 dx [orig:95 _13 ] [95])) "kernel/vsprintf.c":67:13 77 {*movqi_internal}
     (nil))
(code_label 144 143 145 30 23 (nil) [1 uses])
(note 145 144 147 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 147 145 148 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 72 [0x48])) [2 num+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":66:14 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 148 147 149 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "kernel/vsprintf.c":66:14 806 {*jcc}
     (nil)
 -> 146)
(code_label 149 148 150 31 22 (nil) [1 uses])
(note 150 149 151 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 31 (set (reg:SI 0 ax [138])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])) "kernel/vsprintf.c":68:5 75 {*movsi_internal}
     (nil))
(insn 152 151 153 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [138])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 84 [0x54])) [2 precision+0 S4 A32]))) "kernel/vsprintf.c":68:5 11 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 31 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) "kernel/vsprintf.c":68:5 806 {*jcc}
     (nil)
 -> 157)
(note 154 153 155 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 32 (set (reg:SI 0 ax [139])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])) "kernel/vsprintf.c":69:13 75 {*movsi_internal}
     (nil))
(insn 156 155 157 32 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [2 precision+0 S4 A32])
        (reg:SI 0 ax [139])) "kernel/vsprintf.c":69:13 75 {*movsi_internal}
     (nil))
(code_label 157 156 158 33 25 (nil) [1 uses])
(note 158 157 159 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 33 (set (reg:SI 0 ax [140])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":70:7 75 {*movsi_internal}
     (nil))
(insn 160 159 161 33 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 80 [0x50])) [2 size+0 S4 A32])
                (minus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 80 [0x50])) [2 size+0 S4 A32])
                    (reg:SI 0 ax [140])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":70:7 282 {*subsi_1}
     (nil))
(insn 161 160 162 33 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":71:13 75 {*movsi_internal}
     (nil))
(insn 162 161 163 33 (parallel [
            (set (reg:SI 0 ax [orig:96 _14 ] [96])
                (and:SI (reg:SI 0 ax [141])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":71:13 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 17 [0x11]))
        (nil)))
(insn 163 162 164 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:96 _14 ] [96])
            (const_int 0 [0]))) "kernel/vsprintf.c":71:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 164 163 165 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "kernel/vsprintf.c":71:5 806 {*jcc}
     (nil)
 -> 183)
(note 165 164 334 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 334 165 335 34 (set (pc)
        (label_ref 173)) "kernel/vsprintf.c":72:9 807 {jump}
     (nil)
 -> 173)
(barrier 335 334 178)
(code_label 178 335 168 35 28 (nil) [1 uses])
(note 168 178 169 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 35 (set (reg/f:SI 0 ax [orig:97 str.4_15 ] [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":73:8 75 {*movsi_internal}
     (nil))
(insn 170 169 171 35 (parallel [
            (set (reg:SI 1 dx [142])
                (plus:SI (reg/f:SI 0 ax [orig:97 str.4_15 ] [97])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":73:8 209 {*addsi_1}
     (nil))
(insn 171 170 172 35 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [142])) "kernel/vsprintf.c":73:8 75 {*movsi_internal}
     (nil))
(insn 172 171 173 35 (set (mem:QI (reg/f:SI 0 ax [orig:97 str.4_15 ] [97]) [0 *str.4_15+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":73:11 77 {*movqi_internal}
     (nil))
(code_label 173 172 174 36 27 (nil) [1 uses])
(note 174 173 175 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 36 (set (reg:SI 0 ax [orig:98 size.5_16 ] [98])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [2 size+0 S4 A32])) "kernel/vsprintf.c":72:14 75 {*movsi_internal}
     (nil))
(insn 176 175 177 36 (parallel [
            (set (reg:SI 1 dx [143])
                (plus:SI (reg:SI 0 ax [orig:98 size.5_16 ] [98])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":72:14 209 {*addsi_1}
     (nil))
(insn 177 176 181 36 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [2 size+0 S4 A32])
        (reg:SI 1 dx [143])) "kernel/vsprintf.c":72:14 75 {*movsi_internal}
     (nil))
(insn 181 177 182 36 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:98 size.5_16 ] [98])
            (const_int 0 [0]))) "kernel/vsprintf.c":72:17 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 182 181 183 36 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "kernel/vsprintf.c":72:17 806 {*jcc}
     (nil)
 -> 178)
(code_label 183 182 184 37 26 (nil) [1 uses])
(note 184 183 185 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 63 [0x3f])) [0 sign+0 S1 A8])
            (const_int 0 [0]))) "kernel/vsprintf.c":74:5 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 186 185 187 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 193)
            (pc))) "kernel/vsprintf.c":74:5 806 {*jcc}
     (nil)
 -> 193)
(note 187 186 188 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 38 (set (reg/f:SI 0 ax [orig:99 str.6_17 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":75:7 75 {*movsi_internal}
     (nil))
(insn 189 188 190 38 (parallel [
            (set (reg:SI 1 dx [144])
                (plus:SI (reg/f:SI 0 ax [orig:99 str.6_17 ] [99])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":75:7 209 {*addsi_1}
     (nil))
(insn 190 189 191 38 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [144])) "kernel/vsprintf.c":75:7 75 {*movsi_internal}
     (nil))
(insn 191 190 192 38 (set (reg:QI 1 dx [145])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 63 [0x3f])) [0 sign+0 S1 A8])) "kernel/vsprintf.c":75:10 77 {*movqi_internal}
     (nil))
(insn 192 191 193 38 (set (mem:QI (reg/f:SI 0 ax [orig:99 str.6_17 ] [99]) [0 *str.6_17+0 S1 A8])
        (reg:QI 1 dx [145])) "kernel/vsprintf.c":75:10 77 {*movqi_internal}
     (nil))
(code_label 193 192 194 39 29 (nil) [1 uses])
(note 194 193 195 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 39 (set (reg:SI 0 ax [146])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":76:11 75 {*movsi_internal}
     (nil))
(insn 196 195 197 39 (parallel [
            (set (reg:SI 0 ax [orig:100 _18 ] [100])
                (and:SI (reg:SI 0 ax [146])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":76:11 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 197 196 198 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:100 _18 ] [100])
            (const_int 0 [0]))) "kernel/vsprintf.c":76:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 198 197 199 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) "kernel/vsprintf.c":76:5 806 {*jcc}
     (nil)
 -> 225)
(note 199 198 200 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 76 [0x4c])) [2 base+0 S4 A32])
            (const_int 8 [0x8]))) "kernel/vsprintf.c":77:6 11 {*cmpsi_1}
     (nil))
(jump_insn 201 200 202 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) "kernel/vsprintf.c":77:6 806 {*jcc}
     (nil)
 -> 209)
(note 202 201 203 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 41 (set (reg/f:SI 0 ax [orig:101 str.7_19 ] [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":78:8 75 {*movsi_internal}
     (nil))
(insn 204 203 205 41 (parallel [
            (set (reg:SI 1 dx [147])
                (plus:SI (reg/f:SI 0 ax [orig:101 str.7_19 ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":78:8 209 {*addsi_1}
     (nil))
(insn 205 204 206 41 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [147])) "kernel/vsprintf.c":78:8 75 {*movsi_internal}
     (nil))
(insn 206 205 336 41 (set (mem:QI (reg/f:SI 0 ax [orig:101 str.7_19 ] [101]) [0 *str.7_19+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":78:11 77 {*movqi_internal}
     (nil))
(jump_insn 336 206 337 41 (set (pc)
        (label_ref 225)) 807 {jump}
     (nil)
 -> 225)
(barrier 337 336 209)
(code_label 209 337 210 42 31 (nil) [1 uses])
(note 210 209 211 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 76 [0x4c])) [2 base+0 S4 A32])
            (const_int 16 [0x10]))) "kernel/vsprintf.c":79:11 11 {*cmpsi_1}
     (nil))
(jump_insn 212 211 213 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) "kernel/vsprintf.c":79:11 806 {*jcc}
     (nil)
 -> 225)
(note 213 212 214 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 43 (set (reg/f:SI 0 ax [orig:102 str.8_20 ] [102])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":80:8 75 {*movsi_internal}
     (nil))
(insn 215 214 216 43 (parallel [
            (set (reg:SI 1 dx [148])
                (plus:SI (reg/f:SI 0 ax [orig:102 str.8_20 ] [102])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":80:8 209 {*addsi_1}
     (nil))
(insn 216 215 217 43 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [148])) "kernel/vsprintf.c":80:8 75 {*movsi_internal}
     (nil))
(insn 217 216 218 43 (set (mem:QI (reg/f:SI 0 ax [orig:102 str.8_20 ] [102]) [0 *str.8_20+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":80:11 77 {*movqi_internal}
     (nil))
(insn 218 217 219 43 (set (reg/f:SI 0 ax [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 digits+0 S4 A32])) "kernel/vsprintf.c":81:19 75 {*movsi_internal}
     (nil))
(insn 219 218 220 43 (parallel [
            (set (reg/f:SI 2 cx [orig:103 _21 ] [103])
                (plus:SI (reg/f:SI 0 ax [149])
                    (const_int 33 [0x21])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":81:19 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 digits+0 S4 A32])
            (const_int 33 [0x21]))
        (nil)))
(insn 220 219 221 43 (set (reg/f:SI 0 ax [orig:104 str.9_22 ] [104])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":81:8 75 {*movsi_internal}
     (nil))
(insn 221 220 222 43 (parallel [
            (set (reg:SI 1 dx [150])
                (plus:SI (reg/f:SI 0 ax [orig:104 str.9_22 ] [104])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":81:8 209 {*addsi_1}
     (nil))
(insn 222 221 223 43 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [150])) "kernel/vsprintf.c":81:8 75 {*movsi_internal}
     (nil))
(insn 223 222 224 43 (set (reg:QI 1 dx [orig:105 _23 ] [105])
        (mem:QI (reg/f:SI 2 cx [orig:103 _21 ] [103]) [0 *_21+0 S1 A8])) "kernel/vsprintf.c":81:19 77 {*movqi_internal}
     (nil))
(insn 224 223 225 43 (set (mem:QI (reg/f:SI 0 ax [orig:104 str.9_22 ] [104]) [0 *str.9_22+0 S1 A8])
        (reg:QI 1 dx [orig:105 _23 ] [105])) "kernel/vsprintf.c":81:11 77 {*movqi_internal}
     (nil))
(code_label 225 224 226 44 30 (nil) [3 uses])
(note 226 225 227 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 44 (set (reg:SI 0 ax [151])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 88 [0x58])) [2 type+0 S4 A32])) "kernel/vsprintf.c":84:13 75 {*movsi_internal}
     (nil))
(insn 228 227 229 44 (parallel [
            (set (reg:SI 0 ax [orig:106 _24 ] [106])
                (and:SI (reg:SI 0 ax [151])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":84:13 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 20 [0x14])) [2 type+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 229 228 230 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:106 _24 ] [106])
            (const_int 0 [0]))) "kernel/vsprintf.c":84:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 230 229 231 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) "kernel/vsprintf.c":84:5 806 {*jcc}
     (nil)
 -> 250)
(note 231 230 338 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(jump_insn 338 231 339 45 (set (pc)
        (label_ref 240)) "kernel/vsprintf.c":85:9 807 {jump}
     (nil)
 -> 240)
(barrier 339 338 245)
(code_label 245 339 234 46 34 (nil) [1 uses])
(note 234 245 235 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 46 (set (reg/f:SI 0 ax [orig:107 str.10_25 ] [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":86:8 75 {*movsi_internal}
     (nil))
(insn 236 235 237 46 (parallel [
            (set (reg:SI 1 dx [152])
                (plus:SI (reg/f:SI 0 ax [orig:107 str.10_25 ] [107])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":86:8 209 {*addsi_1}
     (nil))
(insn 237 236 238 46 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [152])) "kernel/vsprintf.c":86:8 75 {*movsi_internal}
     (nil))
(insn 238 237 239 46 (set (reg:QI 1 dx [153])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 51 [0x33])) [0 c+0 S1 A8])) "kernel/vsprintf.c":86:11 77 {*movqi_internal}
     (nil))
(insn 239 238 240 46 (set (mem:QI (reg/f:SI 0 ax [orig:107 str.10_25 ] [107]) [0 *str.10_25+0 S1 A8])
        (reg:QI 1 dx [153])) "kernel/vsprintf.c":86:11 77 {*movqi_internal}
     (nil))
(code_label 240 239 241 47 33 (nil) [1 uses])
(note 241 240 242 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 47 (set (reg:SI 0 ax [orig:108 size.11_26 ] [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [2 size+0 S4 A32])) "kernel/vsprintf.c":85:14 75 {*movsi_internal}
     (nil))
(insn 243 242 244 47 (parallel [
            (set (reg:SI 1 dx [154])
                (plus:SI (reg:SI 0 ax [orig:108 size.11_26 ] [108])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":85:14 209 {*addsi_1}
     (nil))
(insn 244 243 248 47 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [2 size+0 S4 A32])
        (reg:SI 1 dx [154])) "kernel/vsprintf.c":85:14 75 {*movsi_internal}
     (nil))
(insn 248 244 249 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:108 size.11_26 ] [108])
            (const_int 0 [0]))) "kernel/vsprintf.c":85:17 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 249 248 250 47 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) "kernel/vsprintf.c":85:17 806 {*jcc}
     (nil)
 -> 245)
(code_label 250 249 251 48 32 (nil) [1 uses])
(note 251 250 340 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(jump_insn 340 251 341 48 (set (pc)
        (label_ref 259)) "kernel/vsprintf.c":87:8 807 {jump}
     (nil)
 -> 259)
(barrier 341 340 264)
(code_label 264 341 254 49 36 (nil) [1 uses])
(note 254 264 255 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 49 (set (reg/f:SI 0 ax [orig:109 str.12_27 ] [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":88:7 75 {*movsi_internal}
     (nil))
(insn 256 255 257 49 (parallel [
            (set (reg:SI 1 dx [155])
                (plus:SI (reg/f:SI 0 ax [orig:109 str.12_27 ] [109])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":88:7 209 {*addsi_1}
     (nil))
(insn 257 256 258 49 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [155])) "kernel/vsprintf.c":88:7 75 {*movsi_internal}
     (nil))
(insn 258 257 259 49 (set (mem:QI (reg/f:SI 0 ax [orig:109 str.12_27 ] [109]) [0 *str.12_27+0 S1 A8])
        (const_int 48 [0x30])) "kernel/vsprintf.c":88:10 77 {*movqi_internal}
     (nil))
(code_label 259 258 260 50 35 (nil) [1 uses])
(note 260 259 261 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 50 (set (reg:SI 0 ax [orig:110 precision.13_28 ] [110])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":87:22 75 {*movsi_internal}
     (nil))
(insn 262 261 263 50 (parallel [
            (set (reg:SI 1 dx [156])
                (plus:SI (reg:SI 0 ax [orig:110 precision.13_28 ] [110])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":87:22 209 {*addsi_1}
     (nil))
(insn 263 262 265 50 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [2 precision+0 S4 A32])
        (reg:SI 1 dx [156])) "kernel/vsprintf.c":87:22 75 {*movsi_internal}
     (nil))
(insn 265 263 266 50 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 52 [0x34])) [2 i+0 S4 A32])
            (reg:SI 0 ax [orig:110 precision.13_28 ] [110]))) "kernel/vsprintf.c":87:11 11 {*cmpsi_1}
     (nil))
(jump_insn 266 265 267 50 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) "kernel/vsprintf.c":87:11 806 {*jcc}
     (nil)
 -> 264)
(note 267 266 342 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(jump_insn 342 267 343 51 (set (pc)
        (label_ref 279)) "kernel/vsprintf.c":89:8 807 {jump}
     (nil)
 -> 279)
(barrier 343 342 284)
(code_label 284 343 270 52 38 (nil) [1 uses])
(note 270 284 271 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 52 (set (reg/f:SI 0 ax [orig:111 str.14_29 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":90:7 75 {*movsi_internal}
     (nil))
(insn 272 271 273 52 (parallel [
            (set (reg:SI 1 dx [157])
                (plus:SI (reg/f:SI 0 ax [orig:111 str.14_29 ] [111])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":90:7 209 {*addsi_1}
     (nil))
(insn 273 272 274 52 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [157])) "kernel/vsprintf.c":90:7 75 {*movsi_internal}
     (nil))
(insn 274 273 275 52 (parallel [
            (set (reg:SI 2 cx [158])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":90:15 209 {*addsi_1}
     (nil))
(insn 275 274 276 52 (set (reg:SI 1 dx [160])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])) "kernel/vsprintf.c":90:15 75 {*movsi_internal}
     (nil))
(insn 276 275 277 52 (parallel [
            (set (reg/f:SI 1 dx [159])
                (plus:SI (reg:SI 1 dx [160])
                    (reg:SI 2 cx [158])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":90:15 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [158])
            (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 277 276 278 52 (set (reg:QI 1 dx [orig:112 _30 ] [112])
        (mem:QI (reg/f:SI 1 dx [159]) [0 tmp[i_121]+0 S1 A8])) "kernel/vsprintf.c":90:15 77 {*movqi_internal}
     (nil))
(insn 278 277 279 52 (set (mem:QI (reg/f:SI 0 ax [orig:111 str.14_29 ] [111]) [0 *str.14_29+0 S1 A8])
        (reg:QI 1 dx [orig:112 _30 ] [112])) "kernel/vsprintf.c":90:10 77 {*movqi_internal}
     (nil))
(code_label 279 278 280 53 37 (nil) [1 uses])
(note 280 279 281 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 53 (set (reg:SI 0 ax [orig:113 i.15_31 ] [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])) "kernel/vsprintf.c":89:10 75 {*movsi_internal}
     (nil))
(insn 282 281 283 53 (parallel [
            (set (reg:SI 1 dx [161])
                (plus:SI (reg:SI 0 ax [orig:113 i.15_31 ] [113])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":89:10 209 {*addsi_1}
     (nil))
(insn 283 282 287 53 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [2 i+0 S4 A32])
        (reg:SI 1 dx [161])) "kernel/vsprintf.c":89:10 75 {*movsi_internal}
     (nil))
(insn 287 283 288 53 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:113 i.15_31 ] [113])
            (const_int 0 [0]))) "kernel/vsprintf.c":89:13 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 288 287 289 53 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) "kernel/vsprintf.c":89:13 806 {*jcc}
     (nil)
 -> 284)
(note 289 288 344 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 344 289 345 54 (set (pc)
        (label_ref 297)) "kernel/vsprintf.c":91:8 807 {jump}
     (nil)
 -> 297)
(barrier 345 344 302)
(code_label 302 345 292 55 40 (nil) [1 uses])
(note 292 302 293 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 55 (set (reg/f:SI 0 ax [orig:114 str.16_32 ] [114])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":92:7 75 {*movsi_internal}
     (nil))
(insn 294 293 295 55 (parallel [
            (set (reg:SI 1 dx [162])
                (plus:SI (reg/f:SI 0 ax [orig:114 str.16_32 ] [114])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":92:7 209 {*addsi_1}
     (nil))
(insn 295 294 296 55 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])
        (reg:SI 1 dx [162])) "kernel/vsprintf.c":92:7 75 {*movsi_internal}
     (nil))
(insn 296 295 297 55 (set (mem:QI (reg/f:SI 0 ax [orig:114 str.16_32 ] [114]) [0 *str.16_32+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":92:10 77 {*movqi_internal}
     (nil))
(code_label 297 296 298 56 39 (nil) [1 uses])
(note 298 297 299 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 56 (set (reg:SI 0 ax [orig:115 size.17_33 ] [115])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [2 size+0 S4 A32])) "kernel/vsprintf.c":91:13 75 {*movsi_internal}
     (nil))
(insn 300 299 301 56 (parallel [
            (set (reg:SI 1 dx [163])
                (plus:SI (reg:SI 0 ax [orig:115 size.17_33 ] [115])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":91:13 209 {*addsi_1}
     (nil))
(insn 301 300 305 56 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [2 size+0 S4 A32])
        (reg:SI 1 dx [163])) "kernel/vsprintf.c":91:13 75 {*movsi_internal}
     (nil))
(insn 305 301 306 56 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:115 size.17_33 ] [115])
            (const_int 0 [0]))) "kernel/vsprintf.c":91:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 306 305 307 56 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "kernel/vsprintf.c":91:16 806 {*jcc}
     (nil)
 -> 302)
(note 307 306 308 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 311 57 (set (reg/f:SI 0 ax [orig:116 _60 ] [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 str+0 S4 A32])) "kernel/vsprintf.c":93:9 75 {*movsi_internal}
     (nil))
(code_label 311 308 312 58 41 (nil) [1 uses])
(note 312 311 318 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 318 312 349 58 (use (reg/i:SI 0 ax)) "kernel/vsprintf.c":94:1 -1
     (nil))
(note 349 318 0 NOTE_INSN_DELETED)

;; Function vsprintf (vsprintf, funcdef_no=2, decl_uid=1076, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 20:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 32:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) rBw {*tablejump_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 53:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 58:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 68:  (0) =rm  (1) %0  (2) re {*iorsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 75:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 82:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) qm  (1) qn {*cmpqi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 88:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 91:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 99:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 103:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =rm  (1) 0 {*negsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 113:  (0) =rm  (1) %0  (2) re {*iorsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 118:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 123:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 126:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 133:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) qm  (1) qn {*cmpqi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=23,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 139:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (1) lBwBz {*call_value} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 142:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-4)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 150:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 154:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 169:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 174:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 179:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 186:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 190:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 192:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) rBw {*tablejump_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 207:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 215:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 216:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 217:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 220:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 224:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 228:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 230:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 233:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 234:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =Q  (1) Q {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 236:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 241:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 243:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 246:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 250:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 257:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 261:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 265:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 267:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 270:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 274:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 280:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 288:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 296:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 297:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 298:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 302:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 303:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 309:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 314:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 317:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 318:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 319:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 320:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 321:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 326:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 333:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 335:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 339:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 340:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 349:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 351:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 354:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 362:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 364:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 373:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 376:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 377:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 378:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 381:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 383:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 389:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 396:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 399:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 401:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 402:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 404:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 405:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 412:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 414:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 419:  (0) =rm  (1) %0  (2) re {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 422:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 424:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 427:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 435:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 437:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 442:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 445:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 446:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 447:  (0) r  (1) 0  (2) m {*subsi_1}
      Creating newreg=219 from oldreg=211, assigning class GENERAL_REGS to r219
  447: {r219:SI=r219:SI-[argp:SI+0x30];clobber flags:CC;}
      REG_DEAD r211:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:SI-0xc]-[argp:SI]
    Inserting insn reload before:
  566: r219:SI=r211:SI
    Inserting insn reload after:
  567: r147:SI=r219:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 449:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 455:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 456:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 459:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 460:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 461:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 462:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 465:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 466:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 472:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 473:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 474:  (0) q  (1) m {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 475:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 480:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 481:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 482:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 488:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 489:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 493:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 499:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) r  (1) 0  (2) m {*subsi_1}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13 14 15
EBB 16 17 18
EBB 19 20 21 22
EBB 23 24
EBB 25 26
EBB 27 28 29
EBB 30
EBB 31 32
EBB 33 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39 40
EBB 41 42
EBB 43 44
EBB 45 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51 52
EBB 53
EBB 54 55
EBB 56
EBB 57 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65 66
EBB 67 68
EBB 69
EBB 73
EBB 70
EBB 71 72

********** Pseudo live ranges #1: **********

  BB 72
   Insn 509: point = 0, n_alt = -1
   Insn 508: point = 0, n_alt = -2
   Insn 504: point = 1, n_alt = -2
   Insn 501: point = 3, n_alt = 1
   Insn 500: point = 5, n_alt = 0
   Insn 499: point = 6, n_alt = 8
   Insn 498: point = 7, n_alt = 0
  BB 71
   Insn 496: point = 8, n_alt = -1
   Insn 495: point = 8, n_alt = 0
   Insn 493: point = 9, n_alt = 4
   Insn 492: point = 11, n_alt = 0
  BB 2
   Insn 513: point = 13, n_alt = -1
   Insn 6: point = 13, n_alt = 1
   Insn 5: point = 14, n_alt = 0
   Insn 564: point = 15, n_alt = 0
  BB 70
   Insn 489: point = 16, n_alt = 1
   Insn 488: point = 17, n_alt = 0
   Insn 487: point = 19, n_alt = 0
  BB 73
   Insn 562: point = 21, n_alt = -1
  BB 68
   Insn 559: point = 22, n_alt = -1
   Insn 475: point = 22, n_alt = 8
   Insn 474: point = 23, n_alt = 4
   Insn 473: point = 25, n_alt = 1
   Insn 472: point = 26, n_alt = 3
   Insn 471: point = 27, n_alt = 0
   Insn 470: point = 28, n_alt = 0
  BB 69
   Insn 482: point = 30, n_alt = 1
   Insn 481: point = 31, n_alt = 0
   Insn 480: point = 33, n_alt = 0
  BB 67
   Insn 468: point = 35, n_alt = -1
   Insn 467: point = 35, n_alt = 0
   Insn 466: point = 36, n_alt = 4
   Insn 465: point = 38, n_alt = 0
  BB 66
   Insn 462: point = 40, n_alt = 8
   Insn 461: point = 41, n_alt = 1
   Insn 460: point = 42, n_alt = 3
   Insn 459: point = 43, n_alt = 0
  BB 65
   Insn 457: point = 45, n_alt = -1
   Insn 456: point = 45, n_alt = 0
   Insn 455: point = 46, n_alt = 4
   Insn 454: point = 48, n_alt = 0
  BB 63
   Insn 555: point = 50, n_alt = -1
   Insn 437: point = 50, n_alt = 1
   Insn 436: point = 51, n_alt = -2
   Insn 435: point = 52, n_alt = 0
   Insn 434: point = 52, n_alt = 0
   Insn 433: point = 52, n_alt = 0
   Insn 432: point = 52, n_alt = 0
   Insn 431: point = 53, n_alt = 0
   Insn 430: point = 53, n_alt = 0
   Insn 429: point = 53, n_alt = 0
   Insn 428: point = 53, n_alt = 0
   Insn 427: point = 53, n_alt = 0
   Insn 426: point = 53, n_alt = -2
   Insn 425: point = 55, n_alt = 0
   Insn 424: point = 57, n_alt = 0
   Insn 423: point = 59, n_alt = 0
   Insn 422: point = 60, n_alt = 0
  BB 62
   Insn 419: point = 61, n_alt = 0
  BB 61
   Insn 553: point = 62, n_alt = -1
   Insn 414: point = 62, n_alt = 1
   Insn 413: point = 63, n_alt = -2
   Insn 412: point = 64, n_alt = 0
   Insn 411: point = 64, n_alt = 0
   Insn 410: point = 64, n_alt = 0
   Insn 409: point = 64, n_alt = 0
   Insn 408: point = 65, n_alt = 0
   Insn 407: point = 65, n_alt = 0
   Insn 406: point = 65, n_alt = 0
   Insn 405: point = 65, n_alt = 0
   Insn 404: point = 65, n_alt = 0
   Insn 403: point = 65, n_alt = -2
   Insn 402: point = 67, n_alt = 0
   Insn 401: point = 69, n_alt = 0
   Insn 400: point = 71, n_alt = 0
   Insn 399: point = 72, n_alt = 0
  BB 60
   Insn 396: point = 73, n_alt = 0
  BB 59
   Insn 551: point = 74, n_alt = -1
   Insn 391: point = 74, n_alt = 1
   Insn 390: point = 75, n_alt = -2
   Insn 389: point = 76, n_alt = 0
   Insn 388: point = 76, n_alt = 0
   Insn 387: point = 76, n_alt = 0
   Insn 386: point = 76, n_alt = 0
   Insn 385: point = 77, n_alt = 0
   Insn 384: point = 77, n_alt = 0
   Insn 383: point = 77, n_alt = 0
   Insn 382: point = 77, n_alt = 0
   Insn 381: point = 77, n_alt = 0
   Insn 380: point = 77, n_alt = -2
   Insn 379: point = 79, n_alt = 0
   Insn 378: point = 81, n_alt = 0
   Insn 377: point = 83, n_alt = 0
   Insn 376: point = 84, n_alt = 0
  BB 58
   Insn 373: point = 85, n_alt = 0
   Insn 372: point = 85, n_alt = 1
  BB 57
   Insn 370: point = 86, n_alt = -1
   Insn 369: point = 86, n_alt = 0
  BB 56
   Insn 549: point = 87, n_alt = -1
   Insn 364: point = 87, n_alt = 1
   Insn 363: point = 88, n_alt = -2
   Insn 362: point = 89, n_alt = 0
   Insn 361: point = 89, n_alt = 0
   Insn 360: point = 89, n_alt = 0
   Insn 359: point = 89, n_alt = 0
   Insn 358: point = 90, n_alt = 0
   Insn 357: point = 90, n_alt = 0
   Insn 356: point = 90, n_alt = 0
   Insn 355: point = 90, n_alt = 0
   Insn 354: point = 90, n_alt = 0
   Insn 353: point = 90, n_alt = -2
   Insn 352: point = 92, n_alt = 0
   Insn 351: point = 94, n_alt = 0
   Insn 350: point = 96, n_alt = 0
   Insn 349: point = 97, n_alt = 0
  BB 55
   Insn 547: point = 98, n_alt = -1
  BB 54
   Insn 343: point = 99, n_alt = -1
   Insn 342: point = 99, n_alt = 0
   Insn 340: point = 100, n_alt = 1
   Insn 339: point = 101, n_alt = 3
   Insn 338: point = 102, n_alt = 0
  BB 52
   Insn 544: point = 104, n_alt = -1
  BB 51
   Insn 327: point = 105, n_alt = -1
   Insn 326: point = 105, n_alt = 1
   Insn 325: point = 106, n_alt = 0
  BB 49
   Insn 542: point = 108, n_alt = -1
   Insn 309: point = 108, n_alt = 1
  BB 48
   Insn 306: point = 109, n_alt = -1
   Insn 305: point = 109, n_alt = 0
   Insn 303: point = 110, n_alt = 1
   Insn 302: point = 111, n_alt = 3
   Insn 301: point = 112, n_alt = 0
  BB 46
   Insn 540: point = 114, n_alt = -1
  BB 47
   Insn 298: point = 115, n_alt = 8
   Insn 297: point = 116, n_alt = 1
   Insn 296: point = 117, n_alt = 3
   Insn 295: point = 118, n_alt = 0
  BB 45
   Insn 290: point = 120, n_alt = -1
   Insn 289: point = 120, n_alt = 0
   Insn 288: point = 121, n_alt = 0
   Insn 287: point = 123, n_alt = 0
  BB 42
   Insn 538: point = 125, n_alt = -1
   Insn 274: point = 125, n_alt = 1
   Insn 273: point = 126, n_alt = 0
  BB 44
   Insn 284: point = 128, n_alt = 1
   Insn 283: point = 129, n_alt = 0
  BB 43
   Insn 281: point = 131, n_alt = -1
   Insn 280: point = 131, n_alt = 1
   Insn 279: point = 132, n_alt = 0
  BB 41
   Insn 271: point = 134, n_alt = -1
   Insn 270: point = 134, n_alt = 1
   Insn 267: point = 134, n_alt = 1
   Insn 266: point = 135, n_alt = -2
   Insn 265: point = 136, n_alt = 0
   Insn 264: point = 136, n_alt = 0
   Insn 263: point = 136, n_alt = -2
   Insn 262: point = 136, n_alt = 0
   Insn 261: point = 136, n_alt = 0
   Insn 260: point = 136, n_alt = 1
   Insn 259: point = 137, n_alt = 0
   Insn 258: point = 139, n_alt = 0
   Insn 257: point = 140, n_alt = 0
  BB 50
   Insn 321: point = 141, n_alt = 0
   Insn 320: point = 141, n_alt = 8
   Insn 319: point = 142, n_alt = 4
   Insn 318: point = 144, n_alt = 1
   Insn 317: point = 145, n_alt = 3
   Insn 316: point = 146, n_alt = 0
   Insn 315: point = 147, n_alt = 1
   Insn 314: point = 148, n_alt = 3
   Insn 313: point = 149, n_alt = 0
  BB 53
   Insn 335: point = 151, n_alt = 8
   Insn 334: point = 152, n_alt = 1
   Insn 333: point = 153, n_alt = 3
   Insn 332: point = 154, n_alt = 0
  BB 40
   Insn 536: point = 156, n_alt = -1
  BB 39
   Insn 251: point = 157, n_alt = -1
   Insn 250: point = 157, n_alt = 1
   Insn 246: point = 157, n_alt = 0
  BB 37
   Insn 533: point = 158, n_alt = -1
   Insn 236: point = 158, n_alt = 8
   Insn 235: point = 159, n_alt = 0
   Insn 234: point = 161, n_alt = 1
   Insn 233: point = 162, n_alt = 3
   Insn 232: point = 163, n_alt = 0
   Insn 231: point = 164, n_alt = 0
   Insn 230: point = 166, n_alt = 0
   Insn 229: point = 168, n_alt = 0
   Insn 228: point = 169, n_alt = 0
  BB 36
   Insn 225: point = 170, n_alt = -1
   Insn 224: point = 170, n_alt = 1
   Insn 220: point = 170, n_alt = 0
  BB 34
   Insn 531: point = 171, n_alt = -1
  BB 35
   Insn 217: point = 172, n_alt = 8
   Insn 216: point = 173, n_alt = 1
   Insn 215: point = 174, n_alt = 3
   Insn 214: point = 175, n_alt = 0
  BB 33
   Insn 209: point = 177, n_alt = -1
   Insn 208: point = 177, n_alt = 0
   Insn 207: point = 178, n_alt = 0
   Insn 206: point = 180, n_alt = 0
  BB 38
   Insn 243: point = 182, n_alt = 8
   Insn 242: point = 183, n_alt = 1
   Insn 241: point = 184, n_alt = 3
   Insn 240: point = 185, n_alt = 0
  BB 4
   Insn 515: point = 187, n_alt = -1
   Insn 20: point = 187, n_alt = 8
   Insn 19: point = 188, n_alt = 4
   Insn 18: point = 190, n_alt = 1
   Insn 17: point = 191, n_alt = 3
   Insn 16: point = 192, n_alt = 0
   Insn 15: point = 193, n_alt = 0
  BB 64
   Insn 557: point = 195, n_alt = -1
   Insn 449: point = 195, n_alt = 1
   Insn 448: point = 196, n_alt = 0
   Insn 567: point = 197, n_alt = -2
	Hard reg 1 is preferable by r219 with profit 1000
   Insn 447: point = 199, n_alt = 1
   Insn 566: point = 200, n_alt = -2
	Hard reg 1 is preferable by r219 with profit 1000
	Hard reg 0 is preferable by r219 with profit 1000
   Insn 446: point = 202, n_alt = 0
   Insn 445: point = 203, n_alt = 1
   Insn 444: point = 204, n_alt = 0
   Insn 443: point = 206, n_alt = 0
   Insn 442: point = 207, n_alt = 0
  BB 32
   Insn 200: point = 208, n_alt = 0
   Insn 199: point = 209, n_alt = 0
   Insn 198: point = 211, n_alt = 0
   Insn 197: point = 213, n_alt = 0
  BB 31
   Insn 196: point = 216, n_alt = -1
   Insn 195: point = 216, n_alt = 0
   Insn 192: point = 216, n_alt = 0
   Insn 191: point = 218, n_alt = 0
   Insn 190: point = 220, n_alt = 4
   Insn 189: point = 222, n_alt = 0
  BB 30
   Insn 186: point = 224, n_alt = 1
   Insn 185: point = 225, n_alt = 0
   Insn 184: point = 227, n_alt = 0
  BB 29
   Insn 181: point = 229, n_alt = -1
   Insn 180: point = 229, n_alt = 0
   Insn 179: point = 230, n_alt = 4
   Insn 178: point = 232, n_alt = 0
  BB 28
   Insn 176: point = 234, n_alt = -1
   Insn 175: point = 234, n_alt = 0
   Insn 174: point = 235, n_alt = 4
   Insn 173: point = 237, n_alt = 0
  BB 27
   Insn 171: point = 239, n_alt = -1
   Insn 170: point = 239, n_alt = 0
   Insn 169: point = 240, n_alt = 4
   Insn 168: point = 242, n_alt = 0
  BB 26
   Insn 165: point = 244, n_alt = 1
  BB 25
   Insn 163: point = 245, n_alt = -1
   Insn 162: point = 245, n_alt = 1
  BB 22
   Insn 529: point = 246, n_alt = -1
   Insn 144: point = 246, n_alt = 1
   Insn 143: point = 247, n_alt = -2
   Insn 142: point = 248, n_alt = 0
   Insn 141: point = 248, n_alt = 0
   Insn 140: point = 248, n_alt = 0
   Insn 139: point = 249, n_alt = 3
  BB 24
   Insn 157: point = 251, n_alt = 1
   Insn 156: point = 252, n_alt = 0
   Insn 155: point = 254, n_alt = 0
   Insn 154: point = 255, n_alt = 0
  BB 23
   Insn 152: point = 256, n_alt = -1
   Insn 151: point = 256, n_alt = 0
   Insn 150: point = 257, n_alt = 4
   Insn 149: point = 259, n_alt = 0
  BB 21
   Insn 137: point = 261, n_alt = -1
   Insn 136: point = 261, n_alt = 0
   Insn 133: point = 262, n_alt = 4
   Insn 132: point = 264, n_alt = 0
  BB 20
   Insn 130: point = 266, n_alt = -1
   Insn 129: point = 266, n_alt = 0
   Insn 126: point = 267, n_alt = 4
   Insn 125: point = 269, n_alt = 0
   Insn 124: point = 270, n_alt = 1
   Insn 123: point = 271, n_alt = 0
   Insn 122: point = 273, n_alt = 0
  BB 19
   Insn 120: point = 275, n_alt = -1
   Insn 119: point = 275, n_alt = 0
   Insn 118: point = 276, n_alt = 4
   Insn 117: point = 278, n_alt = 0
   Insn 116: point = 279, n_alt = 1
  BB 15
   Insn 527: point = 280, n_alt = -1
   Insn 93: point = 280, n_alt = 1
   Insn 92: point = 281, n_alt = -2
   Insn 91: point = 282, n_alt = 0
   Insn 90: point = 282, n_alt = 0
   Insn 89: point = 282, n_alt = 0
   Insn 88: point = 283, n_alt = 3
  BB 18
   Insn 113: point = 285, n_alt = 0
   Insn 112: point = 285, n_alt = 0
  BB 17
   Insn 110: point = 286, n_alt = -1
   Insn 109: point = 286, n_alt = 1
   Insn 106: point = 286, n_alt = 1
   Insn 105: point = 287, n_alt = 0
   Insn 104: point = 289, n_alt = 0
   Insn 103: point = 290, n_alt = 0
  BB 16
   Insn 101: point = 291, n_alt = -1
   Insn 100: point = 291, n_alt = 0
   Insn 99: point = 292, n_alt = 4
   Insn 98: point = 294, n_alt = 0
  BB 14
   Insn 86: point = 296, n_alt = -1
   Insn 85: point = 296, n_alt = 0
   Insn 82: point = 297, n_alt = 4
   Insn 81: point = 299, n_alt = 0
  BB 13
   Insn 79: point = 301, n_alt = -1
   Insn 78: point = 301, n_alt = 0
   Insn 75: point = 302, n_alt = 4
   Insn 74: point = 304, n_alt = 0
   Insn 73: point = 305, n_alt = 1
  BB 7
   Insn 42: point = 306, n_alt = 0
   Insn 41: point = 307, n_alt = 0
   Insn 40: point = 309, n_alt = 0
   Insn 39: point = 311, n_alt = 0
  BB 6
   Insn 38: point = 314, n_alt = -1
   Insn 37: point = 314, n_alt = 0
   Insn 34: point = 314, n_alt = 0
   Insn 33: point = 316, n_alt = 0
   Insn 32: point = 318, n_alt = 4
   Insn 31: point = 320, n_alt = 0
   Insn 30: point = 321, n_alt = 1
   Insn 29: point = 322, n_alt = 0
   Insn 28: point = 324, n_alt = 0
  BB 12
   Insn 525: point = 326, n_alt = -1
   Insn 68: point = 326, n_alt = 0
  BB 10
   Insn 521: point = 327, n_alt = -1
   Insn 58: point = 327, n_alt = 0
  BB 9
   Insn 519: point = 328, n_alt = -1
   Insn 53: point = 328, n_alt = 0
  BB 8
   Insn 517: point = 329, n_alt = -1
   Insn 48: point = 329, n_alt = 0
  BB 11
   Insn 523: point = 330, n_alt = -1
   Insn 63: point = 330, n_alt = 0
  BB 5
   Insn 25: point = 331, n_alt = 1
  BB 3
   Insn 13: point = 332, n_alt = -1
   Insn 12: point = 332, n_alt = 0
   Insn 11: point = 333, n_alt = 4
   Insn 10: point = 335, n_alt = 0
 r82: [8..336]
 r83: [334..335]
 r84: [332..333]
 r85: [189..193]
 r86: [187..192]
 r87: [187..188]
 r88: [323..324]
 r89: [321..322]
 r90: [319..320]
 r91: [317..318]
 r92: [315..316]
 r93: [303..304]
 r94: [301..302]
 r95: [298..299]
 r96: [296..297]
 r97: [293..294]
 r98: [291..292]
 r99: [277..278]
 r100: [275..276]
 r101: [272..273]
 r102: [270..271]
 r103: [268..269]
 r104: [266..267]
 r105: [263..264]
 r106: [261..262]
 r107: [258..259]
 r108: [256..257]
 r109: [241..242]
 r110: [239..240]
 r111: [236..237]
 r112: [234..235]
 r113: [231..232]
 r114: [229..230]
 r115: [226..227]
 r116: [224..225]
 r117: [221..222]
 r118: [219..220]
 r119: [217..218]
 r120: [177..178]
 r121: [172..175]
 r122: [165..166]
 r123: [160..164]
 r124: [158..163]
 r125: [158..159]
 r126: [182..185]
 r127: [120..121]
 r128: [115..118]
 r129: [109..112]
 r130: [143..149]
 r131: [141..146]
 r132: [141..142]
 r133: [151..154]
 r134: [99..102]
 r135: [93..94]
 r136: [91..92]
 r137: [89..90]
 r138: [80..81]
 r139: [78..79]
 r140: [76..77]
 r141: [68..69]
 r142: [66..67]
 r143: [64..65]
 r144: [56..57]
 r145: [54..55]
 r146: [52..53]
 r147: [195..197]
 r148: [47..48]
 r149: [45..46]
 r150: [40..43]
 r151: [37..38]
 r152: [35..36]
 r153: [24..28]
 r154: [22..27]
 r155: [22..23]
 r156: [32..33]
 r157: [30..31]
 r158: [18..19]
 r159: [16..17]
 r160: [10..11]
 r161: [8..9]
 r162: [2..3]
 r163: [0..1]
 r164: [13..14]
 r165: [190..191]
 r166: [312..314]
 r167: [310..311]
 r168: [308..309]
 r169: [306..307]
 r170: [282..283]
 r171: [280..281]
 r172: [288..289]
 r173: [286..287]
 r174: [248..249]
 r175: [246..247]
 r176: [253..254]
 r177: [251..252]
 r178: [214..216]
 r179: [212..213]
 r180: [210..211]
 r181: [208..209]
 r182: [179..180]
 r183: [173..174]
 r184: [167..168]
 r185: [161..162]
 r186: [183..184]
 r187: [138..139]
 r188: [136..137]
 r189: [134..135]
 r190: [125..126]
 r191: [131..132]
 r192: [128..129]
 r193: [122..123]
 r194: [116..117]
 r195: [110..111]
 r196: [147..148]
 r197: [144..145]
 r198: [105..106]
 r199: [152..153]
 r200: [100..101]
 r201: [95..96]
 r202: [87..88]
 r203: [82..83]
 r204: [74..75]
 r205: [70..71]
 r206: [62..63]
 r207: [58..59]
 r208: [50..51]
 r209: [205..206]
 r210: [203..204]
 r211: [201..202]
 r212: [195..196]
 r213: [41..42]
 r214: [25..26]
 r215: [6..7]
 r216: [4..5]
 r219: [198..200]
Compressing live ranges: from 337 to 238 - 70%
Ranges after the compression:
 r82: [8..237]
 r83: [236..237]
 r84: [234..235]
 r85: [126..127]
 r86: [124..127]
 r87: [124..125]
 r88: [232..233]
 r89: [230..231]
 r90: [228..229]
 r91: [226..227]
 r92: [224..225]
 r93: [214..215]
 r94: [212..213]
 r95: [210..211]
 r96: [208..209]
 r97: [206..207]
 r98: [204..205]
 r99: [194..195]
 r100: [192..193]
 r101: [190..191]
 r102: [188..189]
 r103: [186..187]
 r104: [184..185]
 r105: [182..183]
 r106: [180..181]
 r107: [178..179]
 r108: [176..177]
 r109: [166..167]
 r110: [164..165]
 r111: [162..163]
 r112: [160..161]
 r113: [158..159]
 r114: [156..157]
 r115: [154..155]
 r116: [152..153]
 r117: [150..151]
 r118: [148..149]
 r119: [146..147]
 r120: [118..119]
 r121: [116..117]
 r122: [112..113]
 r123: [110..111]
 r124: [108..111]
 r125: [108..109]
 r126: [122..123]
 r127: [84..85]
 r128: [82..83]
 r129: [80..81]
 r130: [102..105]
 r131: [100..103]
 r132: [100..101]
 r133: [106..107]
 r134: [76..77]
 r135: [72..73]
 r136: [70..71]
 r137: [68..69]
 r138: [62..63]
 r139: [60..61]
 r140: [58..59]
 r141: [52..53]
 r142: [50..51]
 r143: [48..49]
 r144: [42..43]
 r145: [40..41]
 r146: [38..39]
 r147: [128..129]
 r148: [34..35]
 r149: [32..33]
 r150: [30..31]
 r151: [28..29]
 r152: [26..27]
 r153: [20..21]
 r154: [18..21]
 r155: [18..19]
 r156: [24..25]
 r157: [22..23]
 r158: [16..17]
 r159: [14..15]
 r160: [10..11]
 r161: [8..9]
 r162: [2..3]
 r163: [0..1]
 r164: [12..13]
 r165: [126..127]
 r166: [222..223]
 r167: [220..221]
 r168: [218..219]
 r169: [216..217]
 r170: [198..199]
 r171: [196..197]
 r172: [202..203]
 r173: [200..201]
 r174: [170..171]
 r175: [168..169]
 r176: [174..175]
 r177: [172..173]
 r178: [144..145]
 r179: [142..143]
 r180: [140..141]
 r181: [138..139]
 r182: [120..121]
 r183: [116..117]
 r184: [114..115]
 r185: [110..111]
 r186: [122..123]
 r187: [98..99]
 r188: [96..97]
 r189: [94..95]
 r190: [88..89]
 r191: [92..93]
 r192: [90..91]
 r193: [86..87]
 r194: [82..83]
 r195: [80..81]
 r196: [104..105]
 r197: [102..103]
 r198: [78..79]
 r199: [106..107]
 r200: [76..77]
 r201: [74..75]
 r202: [66..67]
 r203: [64..65]
 r204: [56..57]
 r205: [54..55]
 r206: [46..47]
 r207: [44..45]
 r208: [36..37]
 r209: [136..137]
 r210: [134..135]
 r211: [132..133]
 r212: [128..129]
 r213: [30..31]
 r214: [20..21]
 r215: [6..7]
 r216: [4..5]
 r219: [130..131]

********** Assignment #1: **********

	 Assigning to 219 (cl=GENERAL_REGS, orig=211, freq=3000, tfirst=219, tfreq=3000)...
	   Assign 0 to reload r219 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=48, prev_offset=48)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=32, prev_offset=32)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 564
changing reg in insn 263
changing reg in insn 199
changing reg in insn 198
changing reg in insn 41
changing reg in insn 40
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 19
changing reg in insn 16
changing reg in insn 20
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 78
changing reg in insn 81
changing reg in insn 82
changing reg in insn 82
changing reg in insn 85
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 100
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 119
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 129
changing reg in insn 132
changing reg in insn 133
changing reg in insn 133
changing reg in insn 136
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 151
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 170
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 175
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 180
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 186
changing reg in insn 189
changing reg in insn 190
changing reg in insn 190
changing reg in insn 191
changing reg in insn 191
changing reg in insn 192
changing reg in insn 207
changing reg in insn 208
changing reg in insn 214
changing reg in insn 217
changing reg in insn 215
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 232
changing reg in insn 236
changing reg in insn 233
changing reg in insn 235
changing reg in insn 236
changing reg in insn 240
changing reg in insn 243
changing reg in insn 241
changing reg in insn 288
changing reg in insn 289
changing reg in insn 295
changing reg in insn 298
changing reg in insn 296
changing reg in insn 301
changing reg in insn 305
changing reg in insn 302
changing reg in insn 313
changing reg in insn 319
changing reg in insn 314
changing reg in insn 316
changing reg in insn 320
changing reg in insn 317
changing reg in insn 319
changing reg in insn 320
changing reg in insn 332
changing reg in insn 335
changing reg in insn 333
changing reg in insn 338
changing reg in insn 342
changing reg in insn 339
changing reg in insn 351
changing reg in insn 352
changing reg in insn 352
changing reg in insn 353
changing reg in insn 353
changing reg in insn 359
changing reg in insn 378
changing reg in insn 379
changing reg in insn 379
changing reg in insn 380
changing reg in insn 380
changing reg in insn 386
changing reg in insn 401
changing reg in insn 402
changing reg in insn 402
changing reg in insn 403
changing reg in insn 403
changing reg in insn 409
changing reg in insn 424
changing reg in insn 425
changing reg in insn 425
changing reg in insn 426
changing reg in insn 426
changing reg in insn 432
changing reg in insn 449
changing reg in insn 454
changing reg in insn 455
changing reg in insn 455
changing reg in insn 456
changing reg in insn 459
changing reg in insn 462
changing reg in insn 460
changing reg in insn 465
changing reg in insn 466
changing reg in insn 466
changing reg in insn 467
changing reg in insn 470
changing reg in insn 474
changing reg in insn 471
changing reg in insn 475
changing reg in insn 472
changing reg in insn 474
changing reg in insn 475
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 482
changing reg in insn 487
changing reg in insn 488
changing reg in insn 488
changing reg in insn 489
changing reg in insn 492
changing reg in insn 493
changing reg in insn 493
changing reg in insn 495
changing reg in insn 501
changing reg in insn 504
changing reg in insn 504
changing reg in insn 508
changing reg in insn 5
changing reg in insn 6
changing reg in insn 17
changing reg in insn 18
changing reg in insn 34
changing reg in insn 39
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 88
changing reg in insn 89
changing reg in insn 92
changing reg in insn 93
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 139
changing reg in insn 140
changing reg in insn 143
changing reg in insn 144
changing reg in insn 155
changing reg in insn 156
changing reg in insn 156
changing reg in insn 157
changing reg in insn 192
changing reg in insn 197
changing reg in insn 195
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 199
changing reg in insn 199
changing reg in insn 200
changing reg in insn 206
changing reg in insn 207
changing reg in insn 215
changing reg in insn 216
changing reg in insn 229
changing reg in insn 230
changing reg in insn 233
changing reg in insn 234
changing reg in insn 241
changing reg in insn 242
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 260
changing reg in insn 266
changing reg in insn 267
changing reg in insn 273
changing reg in insn 274
changing reg in insn 279
changing reg in insn 280
changing reg in insn 283
changing reg in insn 284
changing reg in insn 287
changing reg in insn 288
changing reg in insn 296
changing reg in insn 297
changing reg in insn 302
changing reg in insn 303
changing reg in insn 314
changing reg in insn 315
changing reg in insn 317
changing reg in insn 318
changing reg in insn 325
changing reg in insn 326
changing reg in insn 333
changing reg in insn 334
changing reg in insn 339
changing reg in insn 340
changing reg in insn 350
changing reg in insn 351
changing reg in insn 363
changing reg in insn 364
changing reg in insn 377
changing reg in insn 378
changing reg in insn 390
changing reg in insn 391
changing reg in insn 400
changing reg in insn 401
changing reg in insn 413
changing reg in insn 414
changing reg in insn 423
changing reg in insn 424
changing reg in insn 436
changing reg in insn 437
changing reg in insn 443
changing reg in insn 444
changing reg in insn 444
changing reg in insn 445
changing reg in insn 446
changing reg in insn 448
changing reg in insn 449
changing reg in insn 460
changing reg in insn 461
changing reg in insn 472
changing reg in insn 473
changing reg in insn 498
changing reg in insn 499
changing reg in insn 500
changing reg in insn 501
deleting insn with uid = 92.
deleting insn with uid = 143.
deleting insn with uid = 263.
deleting insn with uid = 266.
deleting insn with uid = 353.
deleting insn with uid = 363.
deleting insn with uid = 380.
deleting insn with uid = 390.
deleting insn with uid = 403.
deleting insn with uid = 413.
deleting insn with uid = 426.
deleting insn with uid = 436.
deleting insn with uid = 566.
deleting insn with uid = 504.
deleting insn with uid = 508.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 264.
verify found no changes in insn with uid = 361.
verify found no changes in insn with uid = 388.
verify found no changes in insn with uid = 411.
verify found no changes in insn with uid = 434.


vsprintf

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={111d,124u} r1={24d,17u} r2={12d,4u} r3={1d,5u} r7={40d,298u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={7e} r17={104d,28u} r18={7d} r19={4e} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 1234{747d,476u,11e} in 323{316 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 564 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 564 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 564 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [164])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [1 buf+0 S4 A32])) "kernel/vsprintf.c":109:14 75 {*movsi_internal}
     (nil))
(insn 6 5 513 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg/f:SI 0 ax [164])) "kernel/vsprintf.c":109:14 75 {*movsi_internal}
     (nil))
(jump_insn 513 6 514 2 (set (pc)
        (label_ref 490)) "kernel/vsprintf.c":109:5 807 {jump}
     (nil)
 -> 490)
(barrier 514 513 494)
(code_label 494 514 9 3 90 (nil) [1 uses])
(note 9 494 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:SI 0 ax [orig:83 fmt.18_1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":110:13 75 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:QI 0 ax [orig:84 _2 ] [84])
        (mem:QI (reg/f:SI 0 ax [orig:83 fmt.18_1 ] [83]) [0 *fmt.18_1+0 S1 A8])) "kernel/vsprintf.c":110:13 77 {*movqi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:84 _2 ] [84])
            (const_int 37 [0x25]))) "kernel/vsprintf.c":110:12 9 {*cmpqi_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "kernel/vsprintf.c":110:12 806 {*jcc}
     (nil)
 -> 23)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:SI 1 dx [orig:85 fmt.19_3 ] [85])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":111:22 75 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg/f:SI 0 ax [orig:86 str.20_4 ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":111:17 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:SI 2 cx [165])
                (plus:SI (reg/f:SI 0 ax [orig:86 str.20_4 ] [86])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":111:17 209 {*addsi_1}
     (nil))
(insn 18 17 19 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 2 cx [165])) "kernel/vsprintf.c":111:17 75 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:QI 1 dx [orig:87 _5 ] [87])
        (mem:QI (reg/f:SI 1 dx [orig:85 fmt.19_3 ] [85]) [0 *fmt.19_3+0 S1 A8])) "kernel/vsprintf.c":111:22 77 {*movqi_internal}
     (nil))
(insn 20 19 515 4 (set (mem:QI (reg/f:SI 0 ax [orig:86 str.20_4 ] [86]) [0 *str.20_4+0 S1 A8])
        (reg:QI 1 dx [orig:87 _5 ] [87])) "kernel/vsprintf.c":111:20 77 {*movqi_internal}
     (nil))
(jump_insn 515 20 516 4 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":112:13 807 {jump}
     (nil)
 -> 485)
(barrier 516 515 23)
(code_label 23 516 24 5 44 (nil) [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 flags+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":116:15 75 {*movsi_internal}
     (nil))
(code_label 26 25 27 6 46 ("repeat") [5 uses])
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:SI 0 ax [orig:88 fmt.21_6 ] [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":118:9 75 {*movsi_internal}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg/f:SI 0 ax [orig:89 _7 ] [89])
                (plus:SI (reg/f:SI 0 ax [orig:88 fmt.21_6 ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":118:9 209 {*addsi_1}
     (nil))
(insn 30 29 31 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])
        (reg/f:SI 0 ax [orig:89 _7 ] [89])) "kernel/vsprintf.c":118:9 75 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg/f:SI 0 ax [orig:90 fmt.22_8 ] [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":119:17 75 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:QI 0 ax [orig:91 _9 ] [91])
        (mem:QI (reg/f:SI 0 ax [orig:90 fmt.22_8 ] [90]) [0 *fmt.22_8+0 S1 A8])) "kernel/vsprintf.c":119:17 77 {*movqi_internal}
     (nil))
(insn 33 32 34 6 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (sign_extend:SI (reg:QI 0 ax [orig:91 _9 ] [91]))) "kernel/vsprintf.c":119:17 153 {extendqisi2}
     (nil))
(insn 34 33 37 6 (parallel [
            (set (reg:SI 0 ax [166])
                (plus:SI (reg:SI 0 ax [orig:92 _10 ] [92])
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":119:9 209 {*addsi_1}
     (nil))
(insn 37 34 38 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [166])
            (const_int 16 [0x10]))) "kernel/vsprintf.c":119:9 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 511 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) "kernel/vsprintf.c":119:9 806 {*jcc}
     (nil)
 -> 71)
(note 511 38 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 511 40 7 (parallel [
            (set (reg:SI 0 ax [167])
                (ashift:SI (reg:SI 0 ax [166])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":119:9 655 {*ashlsi3_1}
     (nil))
(insn 40 39 41 7 (set (reg:SI 0 ax [168])
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 0 ax [167])
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (label_ref:SI 43)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) "kernel/vsprintf.c":119:9 75 {*movsi_internal}
     (insn_list:REG_LABEL_OPERAND 43 (nil)))
(insn 41 40 42 7 (parallel [
            (set (reg:SI 0 ax [169])
                (plus:SI (reg:SI 0 ax [168])
                    (reg:SI 3 bx [82])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":119:9 209 {*addsi_1}
     (nil))
(jump_insn 42 41 43 7 (parallel [
            (set (pc)
                (reg:SI 0 ax [169]))
            (use (label_ref 43))
        ]) "kernel/vsprintf.c":119:9 810 {*tablejump_1}
     (nil)
 -> 43)
(code_label 43 42 44 49 (nil) [2 uses])
(jump_table_data 44 43 45 (addr_diff_vec:SI (label_ref:SI 43)
         [
            (label_ref:SI 56)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 61)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 51)
            (label_ref:SI 71)
            (label_ref:SI 46)
            (label_ref:SI 71)
            (label_ref:SI 71)
            (label_ref:SI 66)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 45 44 46)
(code_label 46 45 47 8 50 (nil) [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 517 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":121:19 520 {*iorsi_1}
     (nil))
(jump_insn 517 48 518 8 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":122:13 807 {jump}
     (nil)
 -> 26)
(barrier 518 517 51)
(code_label 51 518 52 9 51 (nil) [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 519 9 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":124:19 520 {*iorsi_1}
     (nil))
(jump_insn 519 53 520 9 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":125:13 807 {jump}
     (nil)
 -> 26)
(barrier 520 519 56)
(code_label 56 520 57 10 53 (nil) [1 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 521 10 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":127:19 520 {*iorsi_1}
     (nil))
(jump_insn 521 58 522 10 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":128:13 807 {jump}
     (nil)
 -> 26)
(barrier 522 521 61)
(code_label 61 522 62 11 52 (nil) [1 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 523 11 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":130:19 520 {*iorsi_1}
     (nil))
(jump_insn 523 63 524 11 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":131:13 807 {jump}
     (nil)
 -> 26)
(barrier 524 523 66)
(code_label 66 524 67 12 48 (nil) [1 uses])
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 525 12 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":133:19 520 {*iorsi_1}
     (nil))
(jump_insn 525 68 526 12 (set (pc)
        (label_ref 26)) "kernel/vsprintf.c":134:13 807 {jump}
     (nil)
 -> 26)
(barrier 526 525 71)
(code_label 71 526 72 13 47 (nil) [13 uses])
(note 72 71 73 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 13 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "kernel/vsprintf.c":137:21 75 {*movsi_internal}
     (nil))
(insn 74 73 75 13 (set (reg/f:SI 0 ax [orig:93 fmt.23_11 ] [93])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":138:13 75 {*movsi_internal}
     (nil))
(insn 75 74 78 13 (set (reg:QI 0 ax [orig:94 _12 ] [94])
        (mem:QI (reg/f:SI 0 ax [orig:93 fmt.23_11 ] [93]) [0 *fmt.23_11+0 S1 A8])) "kernel/vsprintf.c":138:13 77 {*movqi_internal}
     (nil))
(insn 78 75 79 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 0 ax [orig:94 _12 ] [94])
            (const_int 47 [0x2f]))) "kernel/vsprintf.c":138:12 9 {*cmpqi_1}
     (nil))
(jump_insn 79 78 80 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "kernel/vsprintf.c":138:12 806 {*jcc}
     (nil)
 -> 96)
(note 80 79 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 14 (set (reg/f:SI 0 ax [orig:95 fmt.24_13 ] [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":138:13 75 {*movsi_internal}
     (nil))
(insn 82 81 85 14 (set (reg:QI 0 ax [orig:96 _14 ] [96])
        (mem:QI (reg/f:SI 0 ax [orig:95 fmt.24_13 ] [95]) [0 *fmt.24_13+0 S1 A8])) "kernel/vsprintf.c":138:13 77 {*movqi_internal}
     (nil))
(insn 85 82 86 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 0 ax [orig:96 _14 ] [96])
            (const_int 57 [0x39]))) "kernel/vsprintf.c":138:13 9 {*cmpqi_1}
     (nil))
(jump_insn 86 85 87 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "kernel/vsprintf.c":138:13 806 {*jcc}
     (nil)
 -> 96)
(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 15 (parallel [
            (set (reg:SI 0 ax [170])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":139:27 209 {*addsi_1}
     (nil))
(insn 89 88 90 15 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [170])) "kernel/vsprintf.c":139:27 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 90 89 91 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("skip_atoi") [flags 0x3]  <function_decl 0x7d98a1cf4200 skip_atoi>) [0 skip_atoi S1 A8])
            (const_int 4 [0x4]))) "kernel/vsprintf.c":139:27 823 {*call_value}
     (nil)
    (nil))
(insn 91 90 93 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":139:27 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 93 91 527 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])
        (reg:SI 0 ax [171])) "kernel/vsprintf.c":139:27 75 {*movsi_internal}
     (nil))
(jump_insn 527 93 528 15 (set (pc)
        (label_ref 114)) "kernel/vsprintf.c":139:25 807 {jump}
     (nil)
 -> 114)
(barrier 528 527 96)
(code_label 96 528 97 16 54 (nil) [2 uses])
(note 97 96 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 16 (set (reg/f:SI 0 ax [orig:97 fmt.25_15 ] [97])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":140:18 75 {*movsi_internal}
     (nil))
(insn 99 98 100 16 (set (reg:QI 0 ax [orig:98 _16 ] [98])
        (mem:QI (reg/f:SI 0 ax [orig:97 fmt.25_15 ] [97]) [0 *fmt.25_15+0 S1 A8])) "kernel/vsprintf.c":140:18 77 {*movqi_internal}
     (nil))
(insn 100 99 101 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:98 _16 ] [98])
            (const_int 42 [0x2a]))) "kernel/vsprintf.c":140:17 9 {*cmpqi_1}
     (nil))
(jump_insn 101 100 102 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "kernel/vsprintf.c":140:17 806 {*jcc}
     (nil)
 -> 114)
(note 102 101 103 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 17 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":142:27 209 {*addsi_1}
     (nil))
(insn 104 103 105 17 (set (reg/f:SI 0 ax [172])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":142:25 75 {*movsi_internal}
     (nil))
(insn 105 104 106 17 (set (reg:SI 0 ax [173])
        (mem:SI (plus:SI (reg/f:SI 0 ax [172])
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[(int *)args_146 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":142:25 75 {*movsi_internal}
     (nil))
(insn 106 105 109 17 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])
        (reg:SI 0 ax [173])) "kernel/vsprintf.c":142:25 75 {*movsi_internal}
     (nil))
(insn 109 106 110 17 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 field_width+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":143:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 110 109 111 17 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "kernel/vsprintf.c":143:16 806 {*jcc}
     (nil)
 -> 114)
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 18 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [2 field_width+0 S4 A32])
                (neg:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [2 field_width+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":144:29 575 {*negsi_1}
     (nil))
(insn 113 112 114 18 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":145:23 520 {*iorsi_1}
     (nil))
(code_label 114 113 115 19 55 (nil) [3 uses])
(note 115 114 116 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 precision+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) "kernel/vsprintf.c":150:19 75 {*movsi_internal}
     (nil))
(insn 117 116 118 19 (set (reg/f:SI 0 ax [orig:99 fmt.26_17 ] [99])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":151:13 75 {*movsi_internal}
     (nil))
(insn 118 117 119 19 (set (reg:QI 0 ax [orig:100 _18 ] [100])
        (mem:QI (reg/f:SI 0 ax [orig:99 fmt.26_17 ] [99]) [0 *fmt.26_17+0 S1 A8])) "kernel/vsprintf.c":151:13 77 {*movqi_internal}
     (nil))
(insn 119 118 120 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:100 _18 ] [100])
            (const_int 46 [0x2e]))) "kernel/vsprintf.c":151:12 9 {*cmpqi_1}
     (nil))
(jump_insn 120 119 121 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "kernel/vsprintf.c":151:12 806 {*jcc}
     (nil)
 -> 166)
(note 121 120 122 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 20 (set (reg/f:SI 0 ax [orig:101 fmt.27_19 ] [101])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":152:13 75 {*movsi_internal}
     (nil))
(insn 123 122 124 20 (parallel [
            (set (reg/f:SI 0 ax [orig:102 _20 ] [102])
                (plus:SI (reg/f:SI 0 ax [orig:101 fmt.27_19 ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":152:13 209 {*addsi_1}
     (nil))
(insn 124 123 125 20 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])
        (reg/f:SI 0 ax [orig:102 _20 ] [102])) "kernel/vsprintf.c":152:13 75 {*movsi_internal}
     (nil))
(insn 125 124 126 20 (set (reg/f:SI 0 ax [orig:103 fmt.28_21 ] [103])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":153:17 75 {*movsi_internal}
     (nil))
(insn 126 125 129 20 (set (reg:QI 0 ax [orig:104 _22 ] [104])
        (mem:QI (reg/f:SI 0 ax [orig:103 fmt.28_21 ] [103]) [0 *fmt.28_21+0 S1 A8])) "kernel/vsprintf.c":153:17 77 {*movqi_internal}
     (nil))
(insn 129 126 130 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 0 ax [orig:104 _22 ] [104])
            (const_int 47 [0x2f]))) "kernel/vsprintf.c":153:16 9 {*cmpqi_1}
     (nil))
(jump_insn 130 129 131 20 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "kernel/vsprintf.c":153:16 806 {*jcc}
     (nil)
 -> 147)
(note 131 130 132 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 21 (set (reg/f:SI 0 ax [orig:105 fmt.29_23 ] [105])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":153:17 75 {*movsi_internal}
     (nil))
(insn 133 132 136 21 (set (reg:QI 0 ax [orig:106 _24 ] [106])
        (mem:QI (reg/f:SI 0 ax [orig:105 fmt.29_23 ] [105]) [0 *fmt.29_23+0 S1 A8])) "kernel/vsprintf.c":153:17 77 {*movqi_internal}
     (nil))
(insn 136 133 137 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 0 ax [orig:106 _24 ] [106])
            (const_int 57 [0x39]))) "kernel/vsprintf.c":153:17 9 {*cmpqi_1}
     (nil))
(jump_insn 137 136 138 21 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) "kernel/vsprintf.c":153:17 806 {*jcc}
     (nil)
 -> 147)
(note 138 137 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 22 (parallel [
            (set (reg:SI 0 ax [174])
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":154:29 209 {*addsi_1}
     (nil))
(insn 140 139 141 22 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [6  S4 A32])
        (reg:SI 0 ax [174])) "kernel/vsprintf.c":154:29 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(call_insn 141 140 142 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("skip_atoi") [flags 0x3]  <function_decl 0x7d98a1cf4200 skip_atoi>) [0 skip_atoi S1 A8])
            (const_int 4 [0x4]))) "kernel/vsprintf.c":154:29 823 {*call_value}
     (nil)
    (nil))
(insn 142 141 144 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":154:29 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 144 142 529 22 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 precision+0 S4 A32])
        (reg:SI 0 ax [175])) "kernel/vsprintf.c":154:29 75 {*movsi_internal}
     (nil))
(jump_insn 529 144 530 22 (set (pc)
        (label_ref 158)) "kernel/vsprintf.c":154:27 807 {jump}
     (nil)
 -> 158)
(barrier 530 529 147)
(code_label 147 530 148 23 57 (nil) [2 uses])
(note 148 147 149 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 23 (set (reg/f:SI 0 ax [orig:107 fmt.30_25 ] [107])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":155:22 75 {*movsi_internal}
     (nil))
(insn 150 149 151 23 (set (reg:QI 0 ax [orig:108 _26 ] [108])
        (mem:QI (reg/f:SI 0 ax [orig:107 fmt.30_25 ] [107]) [0 *fmt.30_25+0 S1 A8])) "kernel/vsprintf.c":155:22 77 {*movqi_internal}
     (nil))
(insn 151 150 152 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:108 _26 ] [108])
            (const_int 42 [0x2a]))) "kernel/vsprintf.c":155:21 9 {*cmpqi_1}
     (nil))
(jump_insn 152 151 153 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) "kernel/vsprintf.c":155:21 806 {*jcc}
     (nil)
 -> 158)
(note 153 152 154 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 24 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":157:29 209 {*addsi_1}
     (nil))
(insn 155 154 156 24 (set (reg/f:SI 0 ax [176])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":157:27 75 {*movsi_internal}
     (nil))
(insn 156 155 157 24 (set (reg:SI 0 ax [177])
        (mem:SI (plus:SI (reg/f:SI 0 ax [176])
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[(int *)args_154 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":157:27 75 {*movsi_internal}
     (nil))
(insn 157 156 158 24 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 precision+0 S4 A32])
        (reg:SI 0 ax [177])) "kernel/vsprintf.c":157:27 75 {*movsi_internal}
     (nil))
(code_label 158 157 159 25 58 (nil) [2 uses])
(note 159 158 162 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 162 159 163 25 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [2 precision+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":159:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 163 162 164 25 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 166)
            (pc))) "kernel/vsprintf.c":159:16 806 {*jcc}
     (nil)
 -> 166)
(note 164 163 165 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 26 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 precision+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":160:27 75 {*movsi_internal}
     (nil))
(code_label 166 165 167 27 56 (nil) [2 uses])
(note 167 166 168 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 27 (set (reg/f:SI 0 ax [orig:109 fmt.31_27 ] [109])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":163:13 75 {*movsi_internal}
     (nil))
(insn 169 168 170 27 (set (reg:QI 0 ax [orig:110 _28 ] [110])
        (mem:QI (reg/f:SI 0 ax [orig:109 fmt.31_27 ] [109]) [0 *fmt.31_27+0 S1 A8])) "kernel/vsprintf.c":163:13 77 {*movqi_internal}
     (nil))
(insn 170 169 171 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:110 _28 ] [110])
            (const_int 104 [0x68]))) "kernel/vsprintf.c":163:12 9 {*cmpqi_1}
     (nil))
(jump_insn 171 170 172 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "kernel/vsprintf.c":163:12 806 {*jcc}
     (nil)
 -> 182)
(note 172 171 173 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 28 (set (reg/f:SI 0 ax [orig:111 fmt.32_29 ] [111])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":163:28 75 {*movsi_internal}
     (nil))
(insn 174 173 175 28 (set (reg:QI 0 ax [orig:112 _30 ] [112])
        (mem:QI (reg/f:SI 0 ax [orig:111 fmt.32_29 ] [111]) [0 *fmt.32_29+0 S1 A8])) "kernel/vsprintf.c":163:28 77 {*movqi_internal}
     (nil))
(insn 175 174 176 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:112 _30 ] [112])
            (const_int 108 [0x6c]))) "kernel/vsprintf.c":163:25 9 {*cmpqi_1}
     (nil))
(jump_insn 176 175 177 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "kernel/vsprintf.c":163:25 806 {*jcc}
     (nil)
 -> 182)
(note 177 176 178 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 29 (set (reg/f:SI 0 ax [orig:113 fmt.33_31 ] [113])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":163:43 75 {*movsi_internal}
     (nil))
(insn 179 178 180 29 (set (reg:QI 0 ax [orig:114 _32 ] [114])
        (mem:QI (reg/f:SI 0 ax [orig:113 fmt.33_31 ] [113]) [0 *fmt.33_31+0 S1 A8])) "kernel/vsprintf.c":163:43 77 {*movqi_internal}
     (nil))
(insn 180 179 181 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:114 _32 ] [114])
            (const_int 76 [0x4c]))) "kernel/vsprintf.c":163:40 9 {*cmpqi_1}
     (nil))
(jump_insn 181 180 182 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) "kernel/vsprintf.c":163:40 806 {*jcc}
     (nil)
 -> 187)
(code_label 182 181 183 30 59 (nil) [2 uses])
(note 183 182 184 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 30 (set (reg/f:SI 0 ax [orig:115 fmt.34_33 ] [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":164:13 75 {*movsi_internal}
     (nil))
(insn 185 184 186 30 (parallel [
            (set (reg/f:SI 0 ax [orig:116 _34 ] [116])
                (plus:SI (reg/f:SI 0 ax [orig:115 fmt.34_33 ] [115])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":164:13 209 {*addsi_1}
     (nil))
(insn 186 185 187 30 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])
        (reg/f:SI 0 ax [orig:116 _34 ] [116])) "kernel/vsprintf.c":164:13 75 {*movsi_internal}
     (nil))
(code_label 187 186 188 31 60 (nil) [1 uses])
(note 188 187 189 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 31 (set (reg/f:SI 0 ax [orig:117 fmt.35_35 ] [117])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":166:17 75 {*movsi_internal}
     (nil))
(insn 190 189 191 31 (set (reg:QI 0 ax [orig:118 _36 ] [118])
        (mem:QI (reg/f:SI 0 ax [orig:117 fmt.35_35 ] [117]) [0 *fmt.35_35+0 S1 A8])) "kernel/vsprintf.c":166:17 77 {*movqi_internal}
     (nil))
(insn 191 190 192 31 (set (reg:SI 0 ax [orig:119 _37 ] [119])
        (sign_extend:SI (reg:QI 0 ax [orig:118 _36 ] [118]))) "kernel/vsprintf.c":166:17 153 {extendqisi2}
     (nil))
(insn 192 191 195 31 (parallel [
            (set (reg:SI 0 ax [178])
                (plus:SI (reg:SI 0 ax [orig:119 _37 ] [119])
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":166:9 209 {*addsi_1}
     (nil))
(insn 195 192 196 31 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [178])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":166:9 11 {*cmpsi_1}
     (nil))
(jump_insn 196 195 512 31 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) "kernel/vsprintf.c":166:9 806 {*jcc}
     (nil)
 -> 452)
(note 512 196 197 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 197 512 198 32 (parallel [
            (set (reg:SI 0 ax [179])
                (ashift:SI (reg:SI 0 ax [178])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":166:9 655 {*ashlsi3_1}
     (nil))
(insn 198 197 199 32 (set (reg:SI 0 ax [180])
        (mem/u/c:SI (plus:SI (plus:SI (reg:SI 0 ax [179])
                    (reg:SI 3 bx [82]))
                (const:SI (unspec:SI [
                            (label_ref:SI 201)
                        ] UNSPEC_GOTOFF))) [0  S4 A8])) "kernel/vsprintf.c":166:9 75 {*movsi_internal}
     (insn_list:REG_LABEL_OPERAND 201 (nil)))
(insn 199 198 200 32 (parallel [
            (set (reg:SI 0 ax [181])
                (plus:SI (reg:SI 0 ax [180])
                    (reg:SI 3 bx [82])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":166:9 209 {*addsi_1}
     (nil))
(jump_insn 200 199 201 32 (parallel [
            (set (pc)
                (reg:SI 0 ax [181]))
            (use (label_ref 201))
        ]) "kernel/vsprintf.c":166:9 810 {*tablejump_1}
     (nil)
 -> 201)
(code_label 201 200 202 63 (nil) [2 uses])
(jump_table_data 202 201 203 (addr_diff_vec:SI (label_ref:SI 201)
         [
            (label_ref:SI 397)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 204)
            (label_ref:SI 417)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 417)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 440)
            (label_ref:SI 347)
            (label_ref:SI 367)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 255)
            (label_ref:SI 452)
            (label_ref:SI 420)
            (label_ref:SI 452)
            (label_ref:SI 452)
            (label_ref:SI 394)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 203 202 204)
(code_label 204 203 205 33 70 (nil) [1 uses])
(note 205 204 206 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 33 (set (reg:SI 0 ax [182])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":168:25 75 {*movsi_internal}
     (nil))
(insn 207 206 208 33 (parallel [
            (set (reg:SI 0 ax [orig:120 _38 ] [120])
                (and:SI (reg:SI 0 ax [182])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":168:25 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 208 207 209 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:120 _38 ] [120])
            (const_int 0 [0]))) "kernel/vsprintf.c":168:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 209 208 210 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) "kernel/vsprintf.c":168:16 806 {*jcc}
     (nil)
 -> 226)
(note 210 209 531 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 531 210 532 34 (set (pc)
        (label_ref 218)) "kernel/vsprintf.c":169:23 807 {jump}
     (nil)
 -> 218)
(barrier 532 531 221)
(code_label 221 532 213 35 74 (nil) [1 uses])
(note 213 221 214 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 35 (set (reg/f:SI 0 ax [orig:121 str.36_39 ] [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":170:25 75 {*movsi_internal}
     (nil))
(insn 215 214 216 35 (parallel [
            (set (reg:SI 1 dx [183])
                (plus:SI (reg/f:SI 0 ax [orig:121 str.36_39 ] [121])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":170:25 209 {*addsi_1}
     (nil))
(insn 216 215 217 35 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 1 dx [183])) "kernel/vsprintf.c":170:25 75 {*movsi_internal}
     (nil))
(insn 217 216 218 35 (set (mem:QI (reg/f:SI 0 ax [orig:121 str.36_39 ] [121]) [0 *str.36_39+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":170:28 77 {*movqi_internal}
     (nil))
(code_label 218 217 219 36 73 (nil) [1 uses])
(note 219 218 220 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 224 36 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [2 field_width+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [2 field_width+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":169:38 209 {*addsi_1}
     (nil))
(insn 224 220 225 36 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 field_width+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":169:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 225 224 226 36 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 221)
            (pc))) "kernel/vsprintf.c":169:38 806 {*jcc}
     (nil)
 -> 221)
(code_label 226 225 227 37 72 (nil) [1 uses])
(note 227 226 228 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 37 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":171:41 209 {*addsi_1}
     (nil))
(insn 229 228 230 37 (set (reg/f:SI 0 ax [184])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":171:41 75 {*movsi_internal}
     (nil))
(insn 230 229 231 37 (parallel [
            (set (reg/f:SI 0 ax [orig:122 _40 ] [122])
                (plus:SI (reg/f:SI 0 ax [184])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":171:41 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [1 args+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))
(insn 231 230 232 37 (set (reg:SI 2 cx [orig:123 _41 ] [123])
        (mem:SI (reg/f:SI 0 ax [orig:122 _40 ] [122]) [2 MEM[(int *)_40]+0 S4 A32])) "kernel/vsprintf.c":171:41 75 {*movsi_internal}
     (nil))
(insn 232 231 233 37 (set (reg/f:SI 0 ax [orig:124 str.37_42 ] [124])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":171:21 75 {*movsi_internal}
     (nil))
(insn 233 232 234 37 (parallel [
            (set (reg:SI 1 dx [185])
                (plus:SI (reg/f:SI 0 ax [orig:124 str.37_42 ] [124])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":171:21 209 {*addsi_1}
     (nil))
(insn 234 233 235 37 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 1 dx [185])) "kernel/vsprintf.c":171:21 75 {*movsi_internal}
     (nil))
(insn 235 234 236 37 (set (reg:QI 1 dx [orig:125 _43 ] [125])
        (reg:QI 2 cx [orig:123 _41 ] [123])) "kernel/vsprintf.c":171:24 77 {*movqi_internal}
     (nil))
(insn 236 235 533 37 (set (mem:QI (reg/f:SI 0 ax [orig:124 str.37_42 ] [124]) [0 *str.37_42+0 S1 A8])
        (reg:QI 1 dx [orig:125 _43 ] [125])) "kernel/vsprintf.c":171:24 77 {*movqi_internal}
     (nil))
(jump_insn 533 236 534 37 (set (pc)
        (label_ref 244)) "kernel/vsprintf.c":172:23 807 {jump}
     (nil)
 -> 244)
(barrier 534 533 247)
(code_label 247 534 239 38 76 (nil) [1 uses])
(note 239 247 240 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 38 (set (reg/f:SI 0 ax [orig:126 str.38_44 ] [126])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":173:25 75 {*movsi_internal}
     (nil))
(insn 241 240 242 38 (parallel [
            (set (reg:SI 1 dx [186])
                (plus:SI (reg/f:SI 0 ax [orig:126 str.38_44 ] [126])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":173:25 209 {*addsi_1}
     (nil))
(insn 242 241 243 38 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 1 dx [186])) "kernel/vsprintf.c":173:25 75 {*movsi_internal}
     (nil))
(insn 243 242 244 38 (set (mem:QI (reg/f:SI 0 ax [orig:126 str.38_44 ] [126]) [0 *str.38_44+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":173:28 77 {*movqi_internal}
     (nil))
(code_label 244 243 245 39 75 (nil) [1 uses])
(note 245 244 246 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 250 39 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 8 [0x8])) [2 field_width+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [2 field_width+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":172:38 209 {*addsi_1}
     (nil))
(insn 250 246 251 39 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 field_width+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":172:38 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 251 250 535 39 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) "kernel/vsprintf.c":172:38 806 {*jcc}
     (nil)
 -> 247)
(note 535 251 536 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 536 535 537 40 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":174:17 807 {jump}
     (nil)
 -> 485)
(barrier 537 536 255)
(code_label 255 537 256 41 65 (nil) [1 uses])
(note 256 255 257 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 41 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":177:17 209 {*addsi_1}
     (nil))
(insn 258 257 259 41 (set (reg/f:SI 0 ax [187])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":177:15 75 {*movsi_internal}
     (nil))
(insn 259 258 260 41 (set (reg/f:SI 0 ax [188])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [187])
                (const_int -4 [0xfffffffffffffffc])) [1 MEM[(char * *)args_159 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":177:15 75 {*movsi_internal}
     (nil))
(insn 260 259 261 41 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 s+0 S4 A32])
        (reg/f:SI 0 ax [188])) "kernel/vsprintf.c":177:15 75 {*movsi_internal}
     (nil))
(insn 261 260 262 41 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":178:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 262 261 264 41 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [1 s+0 S4 A32])) "kernel/vsprintf.c":178:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 264 262 265 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("strlen") [flags 0x41]  <function_decl 0x7d98a1cd2f00 strlen>) [0 strlen S1 A8])
            (const_int 16 [0x10]))) "kernel/vsprintf.c":178:19 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 265 264 267 41 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":178:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 267 265 270 41 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 len+0 S4 A32])
        (reg:SI 0 ax [189])) "kernel/vsprintf.c":178:19 75 {*movsi_internal}
     (nil))
(insn 270 267 271 41 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [2 precision+0 S4 A32])
            (const_int 0 [0]))) "kernel/vsprintf.c":179:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 271 270 272 41 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) "kernel/vsprintf.c":179:16 806 {*jcc}
     (nil)
 -> 277)
(note 272 271 273 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 42 (set (reg:SI 0 ax [190])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 len+0 S4 A32])) "kernel/vsprintf.c":180:27 75 {*movsi_internal}
     (nil))
(insn 274 273 538 42 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 precision+0 S4 A32])
        (reg:SI 0 ax [190])) "kernel/vsprintf.c":180:27 75 {*movsi_internal}
     (nil))
(jump_insn 538 274 539 42 (set (pc)
        (label_ref 285)) 807 {jump}
     (nil)
 -> 285)
(barrier 539 538 277)
(code_label 277 539 278 43 77 (nil) [1 uses])
(note 278 277 279 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 43 (set (reg:SI 0 ax [191])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 len+0 S4 A32])) "kernel/vsprintf.c":181:21 75 {*movsi_internal}
     (nil))
(insn 280 279 281 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [191])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [2 precision+0 S4 A32]))) "kernel/vsprintf.c":181:21 11 {*cmpsi_1}
     (nil))
(jump_insn 281 280 282 43 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) "kernel/vsprintf.c":181:21 806 {*jcc}
     (nil)
 -> 285)
(note 282 281 283 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 44 (set (reg:SI 0 ax [192])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":182:21 75 {*movsi_internal}
     (nil))
(insn 284 283 285 44 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [2 len+0 S4 A32])
        (reg:SI 0 ax [192])) "kernel/vsprintf.c":182:21 75 {*movsi_internal}
     (nil))
(code_label 285 284 286 45 78 (nil) [2 uses])
(note 286 285 287 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 45 (set (reg:SI 0 ax [193])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":184:25 75 {*movsi_internal}
     (nil))
(insn 288 287 289 45 (parallel [
            (set (reg:SI 0 ax [orig:127 _45 ] [127])
                (and:SI (reg:SI 0 ax [193])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":184:25 490 {*andsi_1}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 flags+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 289 288 290 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:127 _45 ] [127])
            (const_int 0 [0]))) "kernel/vsprintf.c":184:16 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 290 289 291 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 307)
            (pc))) "kernel/vsprintf.c":184:16 806 {*jcc}
     (nil)
 -> 307)
(note 291 290 540 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 540 291 541 46 (set (pc)
        (label_ref 299)) "kernel/vsprintf.c":185:23 807 {jump}
     (nil)
 -> 299)
(barrier 541 540 304)
(code_label 304 541 294 47 81 (nil) [1 uses])
(note 294 304 295 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 47 (set (reg/f:SI 0 ax [orig:128 str.39_46 ] [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":186:25 75 {*movsi_internal}
     (nil))
(insn 296 295 297 47 (parallel [
            (set (reg:SI 1 dx [194])
                (plus:SI (reg/f:SI 0 ax [orig:128 str.39_46 ] [128])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":186:25 209 {*addsi_1}
     (nil))
(insn 297 296 298 47 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 1 dx [194])) "kernel/vsprintf.c":186:25 75 {*movsi_internal}
     (nil))
(insn 298 297 299 47 (set (mem:QI (reg/f:SI 0 ax [orig:128 str.39_46 ] [128]) [0 *str.39_46+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":186:28 77 {*movqi_internal}
     (nil))
(code_label 299 298 300 48 80 (nil) [1 uses])
(note 300 299 301 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 48 (set (reg:SI 0 ax [orig:129 field_width.40_47 ] [129])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":185:41 75 {*movsi_internal}
     (nil))
(insn 302 301 303 48 (parallel [
            (set (reg:SI 1 dx [195])
                (plus:SI (reg:SI 0 ax [orig:129 field_width.40_47 ] [129])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":185:41 209 {*addsi_1}
     (nil))
(insn 303 302 305 48 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])
        (reg:SI 1 dx [195])) "kernel/vsprintf.c":185:41 75 {*movsi_internal}
     (nil))
(insn 305 303 306 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [2 len+0 S4 A32])
            (reg:SI 0 ax [orig:129 field_width.40_47 ] [129]))) "kernel/vsprintf.c":185:28 11 {*cmpsi_1}
     (nil))
(jump_insn 306 305 307 48 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) "kernel/vsprintf.c":185:28 806 {*jcc}
     (nil)
 -> 304)
(code_label 307 306 308 49 79 (nil) [1 uses])
(note 308 307 309 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 542 49 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 i+0 S4 A32])
        (const_int 0 [0])) "kernel/vsprintf.c":187:24 75 {*movsi_internal}
     (nil))
(jump_insn 542 309 543 49 (set (pc)
        (label_ref 322)) "kernel/vsprintf.c":187:17 807 {jump}
     (nil)
 -> 322)
(barrier 543 542 324)
(code_label 324 543 312 50 83 (nil) [1 uses])
(note 312 324 313 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 50 (set (reg/f:SI 1 dx [orig:130 s.41_48 ] [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 s+0 S4 A32])) "kernel/vsprintf.c":188:31 75 {*movsi_internal}
     (nil))
(insn 314 313 315 50 (parallel [
            (set (reg:SI 0 ax [196])
                (plus:SI (reg/f:SI 1 dx [orig:130 s.41_48 ] [130])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":188:31 209 {*addsi_1}
     (nil))
(insn 315 314 316 50 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [1 s+0 S4 A32])
        (reg:SI 0 ax [196])) "kernel/vsprintf.c":188:31 75 {*movsi_internal}
     (nil))
(insn 316 315 317 50 (set (reg/f:SI 0 ax [orig:131 str.42_49 ] [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":188:24 75 {*movsi_internal}
     (nil))
(insn 317 316 318 50 (parallel [
            (set (reg:SI 2 cx [197])
                (plus:SI (reg/f:SI 0 ax [orig:131 str.42_49 ] [131])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":188:24 209 {*addsi_1}
     (nil))
(insn 318 317 319 50 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 2 cx [197])) "kernel/vsprintf.c":188:24 75 {*movsi_internal}
     (nil))
(insn 319 318 320 50 (set (reg:QI 1 dx [orig:132 _50 ] [132])
        (mem:QI (reg/f:SI 1 dx [orig:130 s.41_48 ] [130]) [0 *s.41_48+0 S1 A8])) "kernel/vsprintf.c":188:29 77 {*movqi_internal}
     (nil))
(insn 320 319 321 50 (set (mem:QI (reg/f:SI 0 ax [orig:131 str.42_49 ] [131]) [0 *str.42_49+0 S1 A8])
        (reg:QI 1 dx [orig:132 _50 ] [132])) "kernel/vsprintf.c":188:27 77 {*movqi_internal}
     (nil))
(insn 321 320 322 50 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 24 [0x18])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 24 [0x18])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":187:39 209 {*addsi_1}
     (nil))
(code_label 322 321 323 51 82 (nil) [1 uses])
(note 323 322 325 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 325 323 326 51 (set (reg:SI 0 ax [198])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 i+0 S4 A32])) "kernel/vsprintf.c":187:31 75 {*movsi_internal}
     (nil))
(insn 326 325 327 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [198])
            (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [2 len+0 S4 A32]))) "kernel/vsprintf.c":187:31 11 {*cmpsi_1}
     (nil))
(jump_insn 327 326 328 51 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) "kernel/vsprintf.c":187:31 806 {*jcc}
     (nil)
 -> 324)
(note 328 327 544 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 544 328 545 52 (set (pc)
        (label_ref 336)) "kernel/vsprintf.c":189:23 807 {jump}
     (nil)
 -> 336)
(barrier 545 544 341)
(code_label 341 545 331 53 85 (nil) [1 uses])
(note 331 341 332 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 53 (set (reg/f:SI 0 ax [orig:133 str.43_51 ] [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":190:24 75 {*movsi_internal}
     (nil))
(insn 333 332 334 53 (parallel [
            (set (reg:SI 1 dx [199])
                (plus:SI (reg/f:SI 0 ax [orig:133 str.43_51 ] [133])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":190:24 209 {*addsi_1}
     (nil))
(insn 334 333 335 53 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 1 dx [199])) "kernel/vsprintf.c":190:24 75 {*movsi_internal}
     (nil))
(insn 335 334 336 53 (set (mem:QI (reg/f:SI 0 ax [orig:133 str.43_51 ] [133]) [0 *str.43_51+0 S1 A8])
        (const_int 32 [0x20])) "kernel/vsprintf.c":190:27 77 {*movqi_internal}
     (nil))
(code_label 336 335 337 54 84 (nil) [1 uses])
(note 337 336 338 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 54 (set (reg:SI 0 ax [orig:134 field_width.44_52 ] [134])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":189:41 75 {*movsi_internal}
     (nil))
(insn 339 338 340 54 (parallel [
            (set (reg:SI 1 dx [200])
                (plus:SI (reg:SI 0 ax [orig:134 field_width.44_52 ] [134])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":189:41 209 {*addsi_1}
     (nil))
(insn 340 339 342 54 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])
        (reg:SI 1 dx [200])) "kernel/vsprintf.c":189:41 75 {*movsi_internal}
     (nil))
(insn 342 340 343 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])) [2 len+0 S4 A32])
            (reg:SI 0 ax [orig:134 field_width.44_52 ] [134]))) "kernel/vsprintf.c":189:28 11 {*cmpsi_1}
     (nil))
(jump_insn 343 342 546 54 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) "kernel/vsprintf.c":189:28 806 {*jcc}
     (nil)
 -> 341)
(note 546 343 547 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 547 546 548 55 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":191:17 807 {jump}
     (nil)
 -> 485)
(barrier 548 547 347)
(code_label 347 548 348 56 67 (nil) [1 uses])
(note 348 347 349 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 56 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:31 209 {*addsi_1}
     (nil))
(insn 350 349 351 56 (set (reg/f:SI 0 ax [201])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":194:31 75 {*movsi_internal}
     (nil))
(insn 351 350 352 56 (parallel [
            (set (reg/f:SI 0 ax [orig:135 _53 ] [135])
                (plus:SI (reg/f:SI 0 ax [201])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:31 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [1 args+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))
(insn 352 351 354 56 (set (reg:SI 0 ax [orig:136 _54 ] [136])
        (mem:SI (reg/f:SI 0 ax [orig:135 _53 ] [135]) [3 MEM[(long unsigned int *)_53]+0 S4 A32])) "kernel/vsprintf.c":194:31 75 {*movsi_internal}
     (nil))
(insn 354 352 355 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 355 354 356 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 356 355 357 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 357 356 358 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 358 357 359 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 8 [0x8])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 359 358 360 56 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:137 _55 ] [137])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 360 359 361 56 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [1 str+0 S4 A32])) "kernel/vsprintf.c":194:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 361 360 362 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":194:19 823 {*call_value}
     (nil)
    (nil))
(insn 362 361 364 56 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":194:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 364 362 549 56 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 0 ax [202])) "kernel/vsprintf.c":194:19 75 {*movsi_internal}
     (nil))
(jump_insn 549 364 550 56 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":196:13 807 {jump}
     (nil)
 -> 485)
(barrier 550 549 367)
(code_label 367 550 368 57 66 (nil) [1 uses])
(note 368 367 369 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])) [2 field_width+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "kernel/vsprintf.c":199:16 11 {*cmpsi_1}
     (nil))
(jump_insn 370 369 371 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 374)
            (pc))) "kernel/vsprintf.c":199:16 806 {*jcc}
     (nil)
 -> 374)
(note 371 370 372 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 58 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 field_width+0 S4 A32])
        (const_int 8 [0x8])) "kernel/vsprintf.c":200:29 75 {*movsi_internal}
     (nil))
(insn 373 372 374 58 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":201:23 520 {*iorsi_1}
     (nil))
(code_label 374 373 375 59 86 (nil) [1 uses])
(note 375 374 376 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 59 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":204:38 209 {*addsi_1}
     (nil))
(insn 377 376 378 59 (set (reg/f:SI 0 ax [203])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":204:38 75 {*movsi_internal}
     (nil))
(insn 378 377 379 59 (parallel [
            (set (reg/f:SI 0 ax [orig:138 _56 ] [138])
                (plus:SI (reg/f:SI 0 ax [203])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":204:38 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [1 args+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))
(insn 379 378 381 59 (set (reg/f:SI 0 ax [orig:139 _57 ] [139])
        (mem/f:SI (reg/f:SI 0 ax [orig:138 _56 ] [138]) [4 MEM[(void * *)_56]+0 S4 A32])) "kernel/vsprintf.c":204:38 75 {*movsi_internal}
     (nil))
(insn 381 379 382 59 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":203:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 382 381 383 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 383 382 384 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 384 383 385 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 385 384 386 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 16 [0x10])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 386 385 387 59 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:140 _58 ] [140])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 387 386 388 59 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [1 str+0 S4 A32])) "kernel/vsprintf.c":203:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 388 387 389 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":203:19 823 {*call_value}
     (nil)
    (nil))
(insn 389 388 391 59 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":203:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 391 389 551 59 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 0 ax [204])) "kernel/vsprintf.c":203:19 75 {*movsi_internal}
     (nil))
(jump_insn 551 391 552 59 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":206:13 807 {jump}
     (nil)
 -> 485)
(barrier 552 551 394)
(code_label 394 552 395 60 62 (nil) [1 uses])
(note 395 394 396 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 60 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":209:19 520 {*iorsi_1}
     (nil))
(code_label 397 396 398 61 71 (nil) [1 uses])
(note 398 397 399 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 61 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:31 209 {*addsi_1}
     (nil))
(insn 400 399 401 61 (set (reg/f:SI 0 ax [205])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":211:31 75 {*movsi_internal}
     (nil))
(insn 401 400 402 61 (parallel [
            (set (reg/f:SI 0 ax [orig:141 _59 ] [141])
                (plus:SI (reg/f:SI 0 ax [205])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:31 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [1 args+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))
(insn 402 401 404 61 (set (reg:SI 0 ax [orig:142 _60 ] [142])
        (mem:SI (reg/f:SI 0 ax [orig:141 _59 ] [141]) [3 MEM[(long unsigned int *)_59]+0 S4 A32])) "kernel/vsprintf.c":211:31 75 {*movsi_internal}
     (nil))
(insn 404 402 405 61 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 405 404 406 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 406 405 407 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 407 406 408 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 408 407 409 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 16 [0x10])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 409 408 410 61 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:143 _61 ] [143])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 410 409 411 61 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [1 str+0 S4 A32])) "kernel/vsprintf.c":211:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 411 410 412 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":211:19 823 {*call_value}
     (nil)
    (nil))
(insn 412 411 414 61 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":211:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 414 412 553 61 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 0 ax [206])) "kernel/vsprintf.c":211:19 75 {*movsi_internal}
     (nil))
(jump_insn 553 414 554 61 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":213:13 807 {jump}
     (nil)
 -> 485)
(barrier 554 553 417)
(code_label 417 554 418 62 69 (nil) [2 uses])
(note 418 417 419 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 62 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [2 flags+0 S4 A32])
                (ior:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [2 flags+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":217:19 520 {*iorsi_1}
     (nil))
(code_label 420 419 421 63 64 (nil) [1 uses])
(note 421 420 422 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 423 63 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:31 209 {*addsi_1}
     (nil))
(insn 423 422 424 63 (set (reg/f:SI 0 ax [207])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":219:31 75 {*movsi_internal}
     (nil))
(insn 424 423 425 63 (parallel [
            (set (reg/f:SI 0 ax [orig:144 _62 ] [144])
                (plus:SI (reg/f:SI 0 ax [207])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:31 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [1 args+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))
(insn 425 424 427 63 (set (reg:SI 0 ax [orig:145 _63 ] [145])
        (mem:SI (reg/f:SI 0 ax [orig:144 _62 ] [144]) [3 MEM[(long unsigned int *)_62]+0 S4 A32])) "kernel/vsprintf.c":219:31 75 {*movsi_internal}
     (nil))
(insn 427 425 428 63 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 428 427 429 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [2 flags+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 429 428 430 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [2 precision+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 430 429 431 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 field_width+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 431 430 432 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (const_int 10 [0xa])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 432 431 433 63 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg:SI 0 ax [orig:146 _64 ] [146])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 433 432 434 63 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [1 str+0 S4 A32])) "kernel/vsprintf.c":219:19 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 434 433 435 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("number") [flags 0x3]  <function_decl 0x7d98a1cf4400 number>) [0 number S1 A8])
            (const_int 32 [0x20]))) "kernel/vsprintf.c":219:19 823 {*call_value}
     (nil)
    (nil))
(insn 435 434 437 63 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":219:19 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 437 435 555 63 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 0 ax [208])) "kernel/vsprintf.c":219:19 75 {*movsi_internal}
     (nil))
(jump_insn 555 437 556 63 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":221:13 807 {jump}
     (nil)
 -> 485)
(barrier 556 555 440)
(code_label 440 556 441 64 68 (nil) [1 uses])
(note 441 440 442 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 64 (parallel [
            (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 56 [0x38])) [1 args+0 S4 A32])
                (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 56 [0x38])) [1 args+0 S4 A32])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":224:18 209 {*addsi_1}
     (nil))
(insn 443 442 444 64 (set (reg/f:SI 0 ax [209])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 args+0 S4 A32])) "kernel/vsprintf.c":224:16 75 {*movsi_internal}
     (nil))
(insn 444 443 445 64 (set (reg/f:SI 0 ax [210])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [209])
                (const_int -4 [0xfffffffffffffffc])) [5 MEM[(int * *)args_184 + 4294967292B]+0 S4 A32])) "kernel/vsprintf.c":224:16 75 {*movsi_internal}
     (nil))
(insn 445 444 446 64 (set (mem/f/c:SI (reg/f:SI 7 sp) [5 ip+0 S4 A32])
        (reg/f:SI 0 ax [210])) "kernel/vsprintf.c":224:16 75 {*movsi_internal}
     (nil))
(insn 446 445 447 64 (set (reg/f:SI 0 ax [211])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":225:24 75 {*movsi_internal}
     (nil))
(insn 447 446 567 64 (parallel [
            (set (reg/f:SI 0 ax [211])
                (minus:SI (reg/f:SI 0 ax [211])
                    (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 48 [0x30])) [1 buf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":225:24 282 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
            (mem/f/c:SI (reg/f:SI 16 argp) [1 buf+0 S4 A32]))
        (nil)))
(insn 567 447 448 64 (set (reg:SI 1 dx [orig:147 _65 ] [147])
        (reg/f:SI 0 ax [211])) "kernel/vsprintf.c":225:24 75 {*movsi_internal}
     (nil))
(insn 448 567 449 64 (set (reg/f:SI 0 ax [212])
        (mem/f/c:SI (reg/f:SI 7 sp) [5 ip+0 S4 A32])) "kernel/vsprintf.c":225:17 75 {*movsi_internal}
     (nil))
(insn 449 448 557 64 (set (mem:SI (reg/f:SI 0 ax [212]) [2 *ip_185+0 S4 A32])
        (reg:SI 1 dx [orig:147 _65 ] [147])) "kernel/vsprintf.c":225:17 75 {*movsi_internal}
     (nil))
(jump_insn 557 449 558 64 (set (pc)
        (label_ref 485)) "kernel/vsprintf.c":226:13 807 {jump}
     (nil)
 -> 485)
(barrier 558 557 452)
(code_label 452 558 453 65 61 (nil) [24 uses])
(note 453 452 454 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 65 (set (reg/f:SI 0 ax [orig:148 fmt.45_66 ] [148])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":229:17 75 {*movsi_internal}
     (nil))
(insn 455 454 456 65 (set (reg:QI 0 ax [orig:149 _67 ] [149])
        (mem:QI (reg/f:SI 0 ax [orig:148 fmt.45_66 ] [148]) [0 *fmt.45_66+0 S1 A8])) "kernel/vsprintf.c":229:17 77 {*movqi_internal}
     (nil))
(insn 456 455 457 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:149 _67 ] [149])
            (const_int 37 [0x25]))) "kernel/vsprintf.c":229:16 9 {*cmpqi_1}
     (nil))
(jump_insn 457 456 458 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) "kernel/vsprintf.c":229:16 806 {*jcc}
     (nil)
 -> 463)
(note 458 457 459 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 66 (set (reg/f:SI 0 ax [orig:150 str.46_68 ] [150])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":230:21 75 {*movsi_internal}
     (nil))
(insn 460 459 461 66 (parallel [
            (set (reg:SI 1 dx [213])
                (plus:SI (reg/f:SI 0 ax [orig:150 str.46_68 ] [150])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":230:21 209 {*addsi_1}
     (nil))
(insn 461 460 462 66 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 1 dx [213])) "kernel/vsprintf.c":230:21 75 {*movsi_internal}
     (nil))
(insn 462 461 463 66 (set (mem:QI (reg/f:SI 0 ax [orig:150 str.46_68 ] [150]) [0 *str.46_68+0 S1 A8])
        (const_int 37 [0x25])) "kernel/vsprintf.c":230:24 77 {*movqi_internal}
     (nil))
(code_label 463 462 464 67 87 (nil) [1 uses])
(note 464 463 465 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 67 (set (reg/f:SI 0 ax [orig:151 fmt.47_69 ] [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":231:17 75 {*movsi_internal}
     (nil))
(insn 466 465 467 67 (set (reg:QI 0 ax [orig:152 _70 ] [152])
        (mem:QI (reg/f:SI 0 ax [orig:151 fmt.47_69 ] [151]) [0 *fmt.47_69+0 S1 A8])) "kernel/vsprintf.c":231:17 77 {*movqi_internal}
     (nil))
(insn 467 466 468 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:152 _70 ] [152])
            (const_int 0 [0]))) "kernel/vsprintf.c":231:16 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 468 467 469 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) "kernel/vsprintf.c":231:16 806 {*jcc}
     (nil)
 -> 478)
(note 469 468 470 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 470 469 471 68 (set (reg/f:SI 1 dx [orig:153 fmt.48_71 ] [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":232:26 75 {*movsi_internal}
     (nil))
(insn 471 470 472 68 (set (reg/f:SI 0 ax [orig:154 str.49_72 ] [154])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":232:21 75 {*movsi_internal}
     (nil))
(insn 472 471 473 68 (parallel [
            (set (reg:SI 2 cx [214])
                (plus:SI (reg/f:SI 0 ax [orig:154 str.49_72 ] [154])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":232:21 209 {*addsi_1}
     (nil))
(insn 473 472 474 68 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])
        (reg:SI 2 cx [214])) "kernel/vsprintf.c":232:21 75 {*movsi_internal}
     (nil))
(insn 474 473 475 68 (set (reg:QI 1 dx [orig:155 _73 ] [155])
        (mem:QI (reg/f:SI 1 dx [orig:153 fmt.48_71 ] [153]) [0 *fmt.48_71+0 S1 A8])) "kernel/vsprintf.c":232:26 77 {*movqi_internal}
     (nil))
(insn 475 474 559 68 (set (mem:QI (reg/f:SI 0 ax [orig:154 str.49_72 ] [154]) [0 *str.49_72+0 S1 A8])
        (reg:QI 1 dx [orig:155 _73 ] [155])) "kernel/vsprintf.c":232:24 77 {*movqi_internal}
     (nil))
(jump_insn 559 475 560 68 (set (pc)
        (label_ref:SI 563)) "kernel/vsprintf.c":235:13 807 {jump}
     (nil)
 -> 563)
(barrier 560 559 478)
(code_label 478 560 479 69 88 (nil) [1 uses])
(note 479 478 480 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 69 (set (reg/f:SI 0 ax [orig:156 fmt.50_74 ] [156])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":234:17 75 {*movsi_internal}
     (nil))
(insn 481 480 482 69 (parallel [
            (set (reg/f:SI 0 ax [orig:157 _75 ] [157])
                (plus:SI (reg/f:SI 0 ax [orig:156 fmt.50_74 ] [156])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":234:17 209 {*addsi_1}
     (nil))
(insn 482 481 563 69 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])
        (reg/f:SI 0 ax [orig:157 _75 ] [157])) "kernel/vsprintf.c":234:17 75 {*movsi_internal}
     (nil))
(code_label 563 482 561 73 92 (nil) [1 uses])
(note 561 563 562 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 485 73 (const_int 0 [0]) "kernel/vsprintf.c":235:13 843 {nop}
     (nil))
(code_label 485 562 486 70 45 (nil) [8 uses])
(note 486 485 487 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 70 (set (reg/f:SI 0 ax [orig:158 fmt.51_76 ] [158])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":109:27 75 {*movsi_internal}
     (nil))
(insn 488 487 489 70 (parallel [
            (set (reg/f:SI 0 ax [orig:159 _77 ] [159])
                (plus:SI (reg/f:SI 0 ax [orig:158 fmt.51_76 ] [158])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":109:27 209 {*addsi_1}
     (nil))
(insn 489 488 490 70 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])
        (reg/f:SI 0 ax [orig:159 _77 ] [159])) "kernel/vsprintf.c":109:27 75 {*movsi_internal}
     (nil))
(code_label 490 489 491 71 43 (nil) [1 uses])
(note 491 490 492 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 71 (set (reg/f:SI 0 ax [orig:160 fmt.52_78 ] [160])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [1 fmt+0 S4 A32])) "kernel/vsprintf.c":109:21 75 {*movsi_internal}
     (nil))
(insn 493 492 495 71 (set (reg:QI 0 ax [orig:161 _79 ] [161])
        (mem:QI (reg/f:SI 0 ax [orig:160 fmt.52_78 ] [160]) [0 *fmt.52_78+0 S1 A8])) "kernel/vsprintf.c":109:21 77 {*movqi_internal}
     (nil))
(insn 495 493 496 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:161 _79 ] [161])
            (const_int 0 [0]))) "kernel/vsprintf.c":109:21 5 {*cmpqi_ccno_1}
     (nil))
(jump_insn 496 495 497 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "kernel/vsprintf.c":109:21 806 {*jcc}
     (nil)
 -> 494)
(note 497 496 498 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 72 (set (reg/f:SI 0 ax [215])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":238:10 75 {*movsi_internal}
     (nil))
(insn 499 498 500 72 (set (mem:QI (reg/f:SI 0 ax [215]) [0 *str_97+0 S1 A8])
        (const_int 0 [0])) "kernel/vsprintf.c":238:10 77 {*movqi_internal}
     (nil))
(insn 500 499 501 72 (set (reg/f:SI 0 ax [216])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [1 str+0 S4 A32])) "kernel/vsprintf.c":239:16 75 {*movsi_internal}
     (nil))
(insn 501 500 509 72 (parallel [
            (set (reg:SI 0 ax [orig:162 _135 ] [162])
                (minus:SI (reg/f:SI 0 ax [216])
                    (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 48 [0x30])) [1 buf+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/vsprintf.c":239:16 282 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 str+0 S4 A32])
            (mem/f/c:SI (reg/f:SI 16 argp) [1 buf+0 S4 A32]))
        (nil)))
(insn 509 501 565 72 (use (reg/i:SI 0 ax)) "kernel/vsprintf.c":240:1 -1
     (nil))
(note 565 509 0 NOTE_INSN_DELETED)
