
;; Function _get_base (_get_base, funcdef_no=0, decl_uid=1278, cgraph_uid=1, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=20, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 6:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 10:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            0 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
      Creating newreg=94 from oldreg=91, assigning class DREG to r94
   12: {r94:SI=asm_operands;clobber flags:CC;}
      REG_DEAD r85:SI
      REG_DEAD r84:SI
      REG_DEAD r83:SI
      REG_UNUSED flags:CC
    Inserting insn reload after:
   25: r91:SI=r94:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 21: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = -2
   Insn 16: point = 1, n_alt = -2
   Insn 13: point = 3, n_alt = 0
   Insn 11: point = 4, n_alt = 1
   Insn 25: point = 5, n_alt = -2
	Hard reg 0 is preferable by r94 with profit 1000
   Insn 12: point = 7, n_alt = 0
   Insn 10: point = 8, n_alt = 0
   Insn 9: point = 10, n_alt = 0
   Insn 8: point = 11, n_alt = 0
   Insn 7: point = 13, n_alt = 0
   Insn 6: point = 14, n_alt = 0
   Insn 5: point = 16, n_alt = 0
   Insn 23: point = 17, n_alt = 0
 r82: [17..17]
 r83: [7..14]
 r84: [7..11]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [15..16]
 r89: [12..13]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r82: [15..15]
 r83: [7..12]
 r84: [7..10]
 r85: [7..8]
 r86: [2..3]
 r87: [0..1]
 r88: [13..14]
 r89: [11..12]
 r90: [9..10]
 r91: [4..5]
 r94: [6..7]

********** Assignment #1: **********

	 Assigning to 94 (cl=DREG, orig=91, freq=2000, tfirst=94, tfreq=2000)...
	 Trying 1: spill 84(freq=2000)	 Now best 1(cost=0, bad_spills=0, insn_pseudos=1)

      Spill r84(hr=1, freq=2000) for r94
	   Assign 1 to reload r94 (freq=2000)
  Reassigning non-reload pseudos
	   Assign 3 to r84 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=20)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =&d  (1) m  (2) m  (3) m
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*addsi_1}
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=24, prev_offset=24)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 23
changing reg in insn 6
changing reg in insn 12
changing reg in insn 8
changing reg in insn 12
changing reg in insn 10
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
deleting insn with uid = 16.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns


_get_base

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={3d,2u} r2={3d,2u} r3={1d,1u} r7={1d,7u} r16={3e} r17={5d} 
;;    total ref usage 39{19d,17u,3e} in 12{12 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 23 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 23 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 0 ax [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 addr+0 S4 A32])) "include/linux/sched.h":219:28 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 0 ax [orig:83 _1 ] [83])
                (plus:SI (reg/f:SI 0 ax [88])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":219:28 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [89])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 addr+0 S4 A32])) "include/linux/sched.h":219:48 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 3 bx [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 1 dx [89])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":219:48 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 9 8 10 2 (set (reg/f:SI 2 cx [90])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [2 addr+0 S4 A32])) "include/linux/sched.h":219:68 75 {*movsi_internal}
     (nil))
(insn 10 9 12 2 (parallel [
            (set (reg/f:SI 2 cx [orig:85 _3 ] [85])
                (plus:SI (reg/f:SI 2 cx [90])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":219:68 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [2 addr+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 12 10 25 2 (parallel [
            (set (reg:SI 1 dx [orig:91 __base ] [91])
                (asm_operands:SI ("movb %3, %%dh
	movb %2, %%dl
	shll $16, %%edx
	movw %1, %%dx") ("=&d") 0 [
                        (mem:QI (reg/f:SI 0 ax [orig:83 _1 ] [83]) [0 *_1+0 S1 A8])
                        (mem:QI (reg/f:SI 3 bx [orig:84 _2 ] [84]) [0 *_2+0 S1 A8])
                        (mem:QI (reg/f:SI 2 cx [orig:85 _3 ] [85]) [0 *_3+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/linux/sched.h:215)
                        (asm_input:QI ("m") include/linux/sched.h:215)
                        (asm_input:QI ("m") include/linux/sched.h:215)
                    ]
                     [] include/linux/sched.h:215))
            (clobber (reg:CC 17 flags))
        ]) "include/linux/sched.h":215:5 -1
     (nil))
(insn 25 12 11 2 (set (reg:SI 0 ax [orig:91 __base ] [91])
        (reg:SI 1 dx [orig:91 __base ] [91])) "include/linux/sched.h":215:5 75 {*movsi_internal}
     (nil))
(insn 11 25 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __base+0 S4 A32])
        (reg:SI 0 ax [orig:91 __base ] [91])) "include/linux/sched.h":215:5 75 {*movsi_internal}
     (nil))
(insn 13 11 21 2 (set (reg:SI 0 ax [orig:86 _7 ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [1 __base+0 S4 A32])) "include/linux/sched.h":220:12 75 {*movsi_internal}
     (nil))
(insn 21 13 24 2 (use (reg/i:SI 0 ax)) "include/linux/sched.h":221:1 -1
     (nil))
(note 24 21 0 NOTE_INSN_DELETED)

;; Function die (die, funcdef_no=1, decl_uid=1374, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 21:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) Ts {*leasi} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) r
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 59:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 60:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 79:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 92:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 95
	 Choosing alt 0 in insn 95:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =a  (1) 0  (2) m
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 101:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 107:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 117:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 122:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =a  (1) a  (2) i
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 140:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 146:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 152
	 Choosing alt 0 in insn 152:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =a  (1) 0  (2) m
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 159:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 165:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 166:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 175:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 180:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 181:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6
EBB 7
EBB 8
EBB 9 10 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 193: point = 0, n_alt = -1
  BB 10
   Insn 185: point = 0, n_alt = 0
   Insn 184: point = 0, n_alt = 0
   Insn 183: point = 0, n_alt = -2
   Insn 182: point = 1, n_alt = 0
   Insn 181: point = 1, n_alt = 0
   Insn 180: point = 1, n_alt = 0
   Insn 179: point = 1, n_alt = 0
   Insn 178: point = 1, n_alt = -2
   Insn 177: point = 1, n_alt = 0
   Insn 176: point = 2, n_alt = 0
   Insn 175: point = 3, n_alt = 0
  BB 9
   Insn 173: point = 4, n_alt = -1
   Insn 172: point = 4, n_alt = 0
  BB 7
   Insn 190: point = 5, n_alt = -1
   Insn 141: point = 5, n_alt = 1
   Insn 140: point = 5, n_alt = 0
   Insn 139: point = 5, n_alt = 0
   Insn 138: point = 5, n_alt = -2
   Insn 137: point = 5, n_alt = 0
   Insn 136: point = 6, n_alt = 0
   Insn 135: point = 7, n_alt = 0
   Insn 134: point = 8, n_alt = 0
   Insn 133: point = 9, n_alt = 0
   Insn 132: point = 9, n_alt = 0
   Insn 131: point = 11, n_alt = 0
   Insn 130: point = 13, n_alt = 0
   Insn 129: point = 14, n_alt = 0
   Insn 128: point = 16, n_alt = 0
   Insn 125: point = 17, n_alt = 1
   Insn 127: point = 18, n_alt = 0
   Insn 126: point = 20, n_alt = 0
  BB 6
   Insn 122: point = 22, n_alt = 0
   Insn 121: point = 22, n_alt = 0
   Insn 120: point = 22, n_alt = -2
   Insn 119: point = 22, n_alt = 0
   Insn 118: point = 23, n_alt = 0
   Insn 117: point = 24, n_alt = 0
  BB 5
   Insn 115: point = 25, n_alt = -1
   Insn 114: point = 25, n_alt = 0
  BB 3
   Insn 188: point = 26, n_alt = -1
   Insn 85: point = 26, n_alt = 1
   Insn 84: point = 26, n_alt = 0
   Insn 83: point = 26, n_alt = 0
   Insn 82: point = 26, n_alt = -2
   Insn 81: point = 26, n_alt = 0
   Insn 80: point = 27, n_alt = 0
   Insn 79: point = 28, n_alt = 0
  BB 4
   Insn 108: point = 29, n_alt = 0
   Insn 107: point = 29, n_alt = 0
   Insn 106: point = 29, n_alt = 0
   Insn 105: point = 29, n_alt = -2
   Insn 104: point = 29, n_alt = 0
   Insn 103: point = 30, n_alt = 0
   Insn 102: point = 31, n_alt = 0
   Insn 101: point = 32, n_alt = 0
   Insn 100: point = 32, n_alt = -2
   Insn 97: point = 34, n_alt = -2
   Insn 99: point = 36, n_alt = 0
   Insn 194: point = 38, n_alt = -2
   Insn 98: point = 40, n_alt = 0
   Insn 96: point = 41, n_alt = -2
   Insn 95: point = 43, n_alt = 0
   Insn 94: point = 45, n_alt = -2
   Insn 93: point = 47, n_alt = 0
   Insn 92: point = 49, n_alt = 0
   Insn 91: point = 51, n_alt = 0
   Insn 90: point = 52, n_alt = 1
   Insn 89: point = 54, n_alt = 0
  BB 2
   Insn 77: point = 56, n_alt = -1
   Insn 76: point = 56, n_alt = 0
   Insn 75: point = 57, n_alt = 0
   Insn 74: point = 59, n_alt = 0
   Insn 73: point = 61, n_alt = 0
   Insn 72: point = 62, n_alt = 0
   Insn 71: point = 62, n_alt = 0
   Insn 70: point = 62, n_alt = -2
   Insn 69: point = 62, n_alt = 0
   Insn 68: point = 63, n_alt = 0
   Insn 67: point = 64, n_alt = 0
   Insn 66: point = 65, n_alt = 0
   Insn 65: point = 66, n_alt = 0
   Insn 64: point = 66, n_alt = -2
   Insn 63: point = 67, n_alt = 0
   Insn 62: point = 67, n_alt = 0
   Insn 61: point = 67, n_alt = 0
   Insn 60: point = 68, n_alt = 0
   Insn 59: point = 68, n_alt = 0
   Insn 58: point = 70, n_alt = 0
   Insn 57: point = 72, n_alt = 0
   Insn 56: point = 73, n_alt = 0
   Insn 53: point = 74, n_alt = 1
   Insn 55: point = 75, n_alt = 0
   Insn 54: point = 77, n_alt = 0
   Insn 52: point = 78, n_alt = 0
   Insn 51: point = 78, n_alt = 0
   Insn 50: point = 78, n_alt = -2
   Insn 49: point = 78, n_alt = 0
   Insn 48: point = 79, n_alt = 0
   Insn 47: point = 80, n_alt = 0
   Insn 46: point = 81, n_alt = 0
   Insn 45: point = 81, n_alt = 0
   Insn 44: point = 83, n_alt = -2
   Insn 42: point = 85, n_alt = -2
   Insn 43: point = 87, n_alt = 0
   Insn 41: point = 88, n_alt = 0
   Insn 40: point = 88, n_alt = 0
   Insn 39: point = 88, n_alt = -2
   Insn 38: point = 88, n_alt = 0
   Insn 37: point = 89, n_alt = 0
   Insn 36: point = 90, n_alt = 0
   Insn 35: point = 91, n_alt = 0
   Insn 34: point = 92, n_alt = 0
   Insn 33: point = 93, n_alt = 0
   Insn 32: point = 94, n_alt = 0
   Insn 31: point = 95, n_alt = 0
   Insn 30: point = 95, n_alt = 0
   Insn 29: point = 97, n_alt = 0
   Insn 28: point = 99, n_alt = 0
   Insn 27: point = 100, n_alt = 0
   Insn 26: point = 102, n_alt = 0
   Insn 25: point = 103, n_alt = 0
   Insn 24: point = 105, n_alt = 0
   Insn 23: point = 107, n_alt = 0
   Insn 22: point = 108, n_alt = 0
   Insn 21: point = 110, n_alt = 0
   Insn 20: point = 112, n_alt = 0
   Insn 19: point = 113, n_alt = 0
   Insn 18: point = 115, n_alt = 0
   Insn 17: point = 117, n_alt = 0
   Insn 16: point = 118, n_alt = 0
   Insn 15: point = 118, n_alt = 0
   Insn 14: point = 118, n_alt = -2
   Insn 13: point = 118, n_alt = 0
   Insn 12: point = 119, n_alt = 0
   Insn 11: point = 120, n_alt = 0
   Insn 10: point = 120, n_alt = 0
   Insn 9: point = 121, n_alt = 0
   Insn 8: point = 121, n_alt = 0
   Insn 7: point = 123, n_alt = 0
   Insn 6: point = 124, n_alt = 1
   Insn 5: point = 125, n_alt = 0
   Insn 195: point = 126, n_alt = 0
  BB 8
   Insn 166: point = 127, n_alt = 0
   Insn 165: point = 127, n_alt = 0
   Insn 164: point = 127, n_alt = 0
   Insn 163: point = 127, n_alt = -2
   Insn 162: point = 127, n_alt = 0
   Insn 161: point = 128, n_alt = 0
   Insn 160: point = 129, n_alt = 0
   Insn 159: point = 130, n_alt = 0
   Insn 158: point = 130, n_alt = 0
   Insn 157: point = 132, n_alt = 0
   Insn 156: point = 134, n_alt = -2
   Insn 154: point = 136, n_alt = -2
   Insn 155: point = 138, n_alt = 0
   Insn 153: point = 140, n_alt = -2
   Insn 152: point = 142, n_alt = 0
   Insn 151: point = 144, n_alt = 0
   Insn 150: point = 145, n_alt = -2
   Insn 149: point = 147, n_alt = 0
   Insn 148: point = 149, n_alt = 0
   Insn 147: point = 150, n_alt = 0
   Insn 146: point = 152, n_alt = 0
   Insn 145: point = 154, n_alt = 0
 r82: [0..155]
 r83: [120..121]
 r84: [114..115]
 r85: [94..113]
 r86: [109..110]
 r87: [93..108]
 r88: [104..105]
 r89: [92..103]
 r90: [91..100]
 r91: [96..97]
 r92: [90..95]
 r93: [80..81]
 r94: [69..70]
 r95: [67..68]
 r96: [64..66]
 r97: [58..59]
 r98: [56..57]
 r99: [53..54]
 r100: [44..52]
 r101: [48..49]
 r102: [46..47]
 r103: [44..45]
 r104: [42..43]
 r105: [37..41]
 r106: [8..14]
 r107: [10..11]
 r108: [7..9]
 r109: [151..152]
 r110: [139..150]
 r111: [146..147]
 r112: [143..145]
 r113: [143..144]
 r114: [141..142]
 r115: [139..140]
 r116: [131..132]
 r117: [129..130]
 r118: [84..85]
 r119: [82..83]
 r120: [65..73]
 r121: [33..34]
 r122: [31..32]
 r123: [135..136]
 r124: [133..134]
 r125: [124..125]
 r126: [122..123]
 r127: [118..119]
 r128: [116..117]
 r129: [111..112]
 r130: [106..107]
 r131: [101..102]
 r132: [98..99]
 r133: [88..89]
 r134: [86..87]
 r135: [78..79]
 r136: [74..75]
 r137: [76..77]
 r138: [71..72]
 r139: [62..63]
 r140: [60..61]
 r141: [26..27]
 r142: [50..51]
 r143: [35..38]
 r144: [39..40]
 r145: [29..30]
 r146: [22..23]
 r147: [17..18]
 r148: [19..20]
 r149: [15..16]
 r150: [12..13]
 r151: [5..6]
 r152: [153..154]
 r153: [148..149]
 r154: [137..138]
 r155: [127..128]
 r156: [1..2]
Compressing live ranges: from 156 to 128 - 82%
Ranges after the compression:
 r82: [0..127]
 r83: [96..97]
 r84: [90..91]
 r85: [74..89]
 r86: [86..87]
 r87: [74..85]
 r88: [82..83]
 r89: [74..81]
 r90: [74..79]
 r91: [76..77]
 r92: [74..75]
 r93: [64..65]
 r94: [54..55]
 r95: [52..53]
 r96: [50..51]
 r97: [44..45]
 r98: [42..43]
 r99: [40..41]
 r100: [32..39]
 r101: [36..37]
 r102: [34..35]
 r103: [32..33]
 r104: [30..31]
 r105: [26..29]
 r106: [4..9]
 r107: [6..7]
 r108: [4..5]
 r109: [124..125]
 r110: [114..123]
 r111: [120..121]
 r112: [118..119]
 r113: [118..119]
 r114: [116..117]
 r115: [114..115]
 r116: [106..107]
 r117: [104..105]
 r118: [68..69]
 r119: [66..67]
 r120: [50..57]
 r121: [24..25]
 r122: [22..23]
 r123: [110..111]
 r124: [108..109]
 r125: [100..101]
 r126: [98..99]
 r127: [94..95]
 r128: [92..93]
 r129: [88..89]
 r130: [84..85]
 r131: [80..81]
 r132: [78..79]
 r133: [72..73]
 r134: [70..71]
 r135: [62..63]
 r136: [58..59]
 r137: [60..61]
 r138: [56..57]
 r139: [48..49]
 r140: [46..47]
 r141: [18..19]
 r142: [38..39]
 r143: [26..27]
 r144: [28..29]
 r145: [20..21]
 r146: [16..17]
 r147: [12..13]
 r148: [14..15]
 r149: [10..11]
 r150: [8..9]
 r151: [2..3]
 r152: [126..127]
 r153: [122..123]
 r154: [112..113]
 r155: [102..103]
 r156: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 195
changing reg in insn 183
changing reg in insn 178
changing reg in insn 176
changing reg in insn 163
changing reg in insn 161
changing reg in insn 138
changing reg in insn 136
changing reg in insn 130
changing reg in insn 120
changing reg in insn 118
changing reg in insn 105
changing reg in insn 103
changing reg in insn 82
changing reg in insn 80
changing reg in insn 70
changing reg in insn 68
changing reg in insn 57
changing reg in insn 50
changing reg in insn 48
changing reg in insn 39
changing reg in insn 37
changing reg in insn 14
changing reg in insn 12
changing reg in insn 8
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 32
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 33
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 34
changing reg in insn 27
changing reg in insn 35
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 36
changing reg in insn 45
changing reg in insn 47
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 61
changing reg in insn 64
changing reg in insn 67
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 99
changing reg in insn 129
changing reg in insn 134
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 135
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 155
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 157
changing reg in insn 158
changing reg in insn 160
changing reg in insn 42
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 56
changing reg in insn 66
changing reg in insn 97
changing reg in insn 100
changing reg in insn 100
changing reg in insn 102
changing reg in insn 154
changing reg in insn 156
changing reg in insn 156
changing reg in insn 157
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 37
changing reg in insn 38
changing reg in insn 43
changing reg in insn 42
changing reg in insn 48
changing reg in insn 49
changing reg in insn 55
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 57
changing reg in insn 58
changing reg in insn 68
changing reg in insn 69
changing reg in insn 73
changing reg in insn 74
changing reg in insn 80
changing reg in insn 81
changing reg in insn 91
changing reg in insn 92
changing reg in insn 194
changing reg in insn 99
changing reg in insn 99
changing reg in insn 97
changing reg in insn 98
changing reg in insn 194
changing reg in insn 103
changing reg in insn 104
changing reg in insn 118
changing reg in insn 119
changing reg in insn 127
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 131
changing reg in insn 136
changing reg in insn 137
changing reg in insn 145
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 155
changing reg in insn 154
changing reg in insn 161
changing reg in insn 162
changing reg in insn 176
changing reg in insn 177
deleting insn with uid = 14.
deleting insn with uid = 39.
deleting insn with uid = 50.
deleting insn with uid = 64.
deleting insn with uid = 70.
deleting insn with uid = 82.
deleting insn with uid = 94.
deleting insn with uid = 194.
deleting insn with uid = 105.
deleting insn with uid = 120.
deleting insn with uid = 138.
deleting insn with uid = 153.
deleting insn with uid = 163.
deleting insn with uid = 178.
deleting insn with uid = 183.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 179.
verify found no changes in insn with uid = 184.


die

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={68d,56u} r1={21d,8u} r2={15d,2u} r3={1d,23u} r4={5d,5u} r5={1d,1u} r7={51d,124u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1e} r17={58d,3u} r18={12d} r19={8e} r20={12d} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} 
;;    total ref usage 1231{1000d,222u,9e} in 150{138 regular + 12 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 195 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 195 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 195 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [125])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [1 esp_ptr+0 S4 A32])) "kernel/traps.c":59:11 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])
        (reg:SI 0 ax [125])) "kernel/traps.c":59:11 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [126])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [1 nr+0 S4 A32])) "kernel/traps.c":62:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:83 _1 ] [83])
        (zero_extend:SI (reg:HI 0 ax [126]))) "kernel/traps.c":62:5 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                    (const_int 8 [0x8])) [1 nr+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":62:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 10 9 11 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:83 _1 ] [83])) "kernel/traps.c":62:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 11 10 12 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [2 str+0 S4 A32])) "kernel/traps.c":62:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 0 ax [127])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7458043931b0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":62:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7458043931b0 *.LC0>)
        (nil)))
(insn 13 12 15 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [127])) "kernel/traps.c":62:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 15 13 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":62:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":62:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 17 16 18 2 (set (reg/f:SI 0 ax [128])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:43 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [128])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:43 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 19 18 20 2 (set (reg:SI 5 di [orig:85 _3 ] [85])
        (mem:SI (reg/f:SI 0 ax [orig:84 _2 ] [84]) [1 *_2+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:SI 0 ax [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:35 75 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (plus:SI (reg/f:SI 0 ax [129])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:35 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 22 21 23 2 (set (reg:SI 4 si [orig:87 _5 ] [87])
        (mem:SI (reg/f:SI 0 ax [orig:86 _4 ] [86]) [1 *_4+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:SI 0 ax [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:27 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:SI 0 ax [orig:88 _6 ] [88])
                (plus:SI (reg/f:SI 0 ax [130])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 25 24 26 2 (set (reg:SI 2 cx [orig:89 _7 ] [89])
        (mem:SI (reg/f:SI 0 ax [orig:88 _6 ] [88]) [1 *_6+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:SI 0 ax [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 1 dx [orig:90 _8 ] [90])
        (mem:SI (reg/f:SI 0 ax [131]) [1 *esp_42+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 0 ax [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":64:11 75 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 0 ax [orig:91 _9 ] [91])
                (plus:SI (reg/f:SI 0 ax [132])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":64:11 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 30 29 31 2 (set (reg:SI 0 ax [orig:92 _10 ] [92])
        (mem:SI (reg/f:SI 0 ax [orig:91 _9 ] [91]) [1 *_9+0 S4 A32])) "kernel/traps.c":63:5 75 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":63:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 32 31 33 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 5 di [orig:85 _3 ] [85])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 4 si [orig:87 _5 ] [87])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 34 33 35 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 2 cx [orig:89 _7 ] [89])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 35 34 36 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 1 dx [orig:90 _8 ] [90])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 36 35 37 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:92 _10 ] [92])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 37 36 38 2 (set (reg/f:SI 0 ax [133])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x745804393240 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":63:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x745804393240 *.LC1>)
        (nil)))
(insn 38 37 40 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [133])) "kernel/traps.c":63:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 40 38 41 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":63:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 41 40 43 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":63:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 43 41 42 2 (parallel [
            (set (reg:HI 0 ax [orig:134 __res ] [134])
                (asm_operands:HI ("mov %%fs, %%ax") ("=a") 0 []
                     []
                     [] kernel/traps.c:65))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":65:26 -1
     (nil))
(insn 42 43 44 2 (set (reg/v:HI 4 si [orig:118 __res ] [118])
        (reg:HI 0 ax [orig:134 __res ] [134])) "kernel/traps.c":65:26 76 {*movhi_internal}
     (nil))
(insn 44 42 45 2 (set (reg:HI 0 ax [orig:119 _49 ] [119])
        (reg/v:HI 4 si [orig:118 __res ] [118])) "kernel/traps.c":65:26 76 {*movhi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SI 0 ax [orig:93 _11 ] [93])
        (zero_extend:SI (reg:HI 0 ax [orig:119 _49 ] [119]))) "kernel/traps.c":65:5 144 {*zero_extendhisi2}
     (nil))
(insn 46 45 47 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":65:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 47 46 48 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:93 _11 ] [93])) "kernel/traps.c":65:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 48 47 49 2 (set (reg/f:SI 0 ax [135])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x745804393360 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":65:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x745804393360 *.LC2>)
        (nil)))
(insn 49 48 51 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [135])) "kernel/traps.c":65:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 51 49 52 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":65:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 52 51 54 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":65:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 54 52 55 2 (set (reg:SI 0 ax [137])
        (const_int 23 [0x17])) "kernel/traps.c":67:9 75 {*movsi_internal}
     (nil))
(insn 55 54 53 2 (parallel [
            (set (reg:SI 0 ax [orig:136 __limit ] [136])
                (asm_operands:SI ("lsll %1, %0
	incl %0") ("=r") 0 [
                        (reg:SI 0 ax [137])
                    ]
                     [
                        (asm_input:SI ("r") kernel/traps.c:67)
                    ]
                     [] kernel/traps.c:67))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":67:9 -1
     (nil))
(insn 53 55 56 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 __limit+0 S4 A32])
        (reg:SI 0 ax [orig:136 __limit ] [136])) "kernel/traps.c":67:9 75 {*movsi_internal}
     (nil))
(insn 56 53 57 2 (set (reg:SI 4 si [orig:120 _52 ] [120])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [1 __limit+0 S4 A32])) "kernel/traps.c":67:9 75 {*movsi_internal}
     (nil))
(insn 57 56 58 2 (set (reg/f:SI 0 ax [138])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x745804319360 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":66:37 75 {*movsi_internal}
     (nil))
(insn 58 57 59 2 (set (reg/f:SI 0 ax [orig:94 current.0_12 ] [94])
        (mem/f/c:SI (reg/f:SI 0 ax [138]) [5 current+0 S4 A32])) "kernel/traps.c":66:37 75 {*movsi_internal}
     (nil))
(insn 59 58 60 2 (parallel [
            (set (reg/f:SI 0 ax [orig:95 _13 ] [95])
                (plus:SI (reg/f:SI 0 ax [orig:94 current.0_12 ] [94])
                    (const_int 728 [0x2d8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:37 209 {*addsi_1}
     (nil))
(insn 60 59 61 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 61 60 62 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [7  S4 A32])
        (reg/f:SI 0 ax [orig:95 _13 ] [95])) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 62 61 63 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_get_base") [flags 0x3]  <function_decl 0x745804317900 _get_base>) [0 _get_base S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":66:5 823 {*call_value}
     (nil)
    (nil))
(insn 63 62 65 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 65 63 66 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 66 65 67 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 4 si [orig:120 _52 ] [120])) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 67 66 68 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:96 _14 ] [96])) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 68 67 69 2 (set (reg/f:SI 0 ax [139])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x745804393480 *.LC3>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":66:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2]  <var_decl 0x745804393480 *.LC3>)
        (nil)))
(insn 69 68 71 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [139])) "kernel/traps.c":66:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 71 69 72 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":66:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 72 71 73 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":66:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 73 72 74 2 (set (reg/f:SI 0 ax [140])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":68:12 75 {*movsi_internal}
     (nil))
(insn 74 73 75 2 (parallel [
            (set (reg/f:SI 0 ax [orig:97 _15 ] [97])
                (plus:SI (reg/f:SI 0 ax [140])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":68:12 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 75 74 76 2 (set (reg:SI 0 ax [orig:98 _16 ] [98])
        (mem:SI (reg/f:SI 0 ax [orig:97 _15 ] [97]) [1 *_15+0 S4 A32])) "kernel/traps.c":68:12 75 {*movsi_internal}
     (nil))
(insn 76 75 77 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 _16 ] [98])
            (const_int 23 [0x17]))) "kernel/traps.c":68:8 11 {*cmpsi_1}
     (nil))
(jump_insn 77 76 78 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) "kernel/traps.c":68:8 806 {*jcc}
     (nil)
 -> 123)
(note 78 77 79 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":69:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 80 79 81 3 (set (reg/f:SI 0 ax [141])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x745804393510 *.LC4>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":69:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2]  <var_decl 0x745804393510 *.LC4>)
        (nil)))
(insn 81 80 83 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [141])) "kernel/traps.c":69:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 83 81 84 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":69:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 84 83 85 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":69:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 85 84 188 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "kernel/traps.c":70:16 75 {*movsi_internal}
     (nil))
(jump_insn 188 85 189 3 (set (pc)
        (label_ref 109)) "kernel/traps.c":70:9 807 {jump}
     (nil)
 -> 109)
(barrier 189 188 111)
(code_label 111 189 88 4 6 (nil) [1 uses])
(note 88 111 89 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 4 (set (reg:SI 0 ax [orig:99 i.1_17 ] [99])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 90 89 91 4 (parallel [
            (set (reg:SI 1 dx [orig:100 _18 ] [100])
                (ashift:SI (reg:SI 0 ax [orig:99 i.1_17 ] [99])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 655 {*ashlsi3_1}
     (nil))
(insn 91 90 92 4 (set (reg/f:SI 0 ax [142])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 92 91 93 4 (parallel [
            (set (reg/f:SI 0 ax [orig:101 _19 ] [101])
                (plus:SI (reg/f:SI 0 ax [142])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 93 92 95 4 (set (reg:SI 0 ax [orig:102 _20 ] [102])
        (mem:SI (reg/f:SI 0 ax [orig:101 _19 ] [101]) [1 *_19+0 S4 A32])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 95 93 96 4 (parallel [
            (set (reg:SI 0 ax [orig:104 _22 ] [104])
                (plus:SI (reg:SI 0 ax [orig:103 _21 ] [103])
                    (reg:SI 1 dx [orig:100 _18 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 209 {*addsi_1}
     (nil))
(insn 96 95 98 4 (set (reg/f:SI 1 dx [orig:105 _23 ] [105])
        (reg:SI 0 ax [orig:104 _22 ] [104])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 98 96 99 4 (set (reg:SI 0 ax [144])
        (const_int 23 [0x17])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 99 98 97 4 (parallel [
            (set (reg:SI 0 ax [orig:143 __res ] [143])
                (asm_operands:SI ("push %%fs; mov %%ax, %%fs; movl %%fs:%2, %%eax; pop %%fs") ("=a") 0 [
                        (reg:SI 0 ax [orig:143 __res ] [143])
                        (mem:SI (reg/f:SI 1 dx [orig:105 _23 ] [105]) [1 *_23+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("0") kernel/traps.c:71)
                        (asm_input:SI ("m") kernel/traps.c:71)
                    ]
                     [] kernel/traps.c:71))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:27 -1
     (nil))
(insn 97 99 100 4 (set (reg/v:SI 4 si [orig:121 __res ] [121])
        (reg:SI 0 ax [orig:143 __res ] [143])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 100 97 101 4 (set (reg:SI 0 ax [orig:122 _59 ] [122])
        (reg/v:SI 4 si [orig:121 __res ] [121])) "kernel/traps.c":71:27 75 {*movsi_internal}
     (nil))
(insn 101 100 102 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 102 101 103 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:122 _59 ] [122])) "kernel/traps.c":71:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 103 102 104 4 (set (reg/f:SI 0 ax [145])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x745804393630 *.LC5>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":71:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2]  <var_decl 0x745804393630 *.LC5>)
        (nil)))
(insn 104 103 106 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [145])) "kernel/traps.c":71:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 106 104 107 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":71:13 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 107 106 108 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":71:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 108 107 109 4 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":70:29 209 {*addsi_1}
     (nil))
(code_label 109 108 110 5 5 (nil) [1 uses])
(note 110 109 114 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 114 110 115 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [3 i+0 S4 A32])
            (const_int 3 [0x3]))) "kernel/traps.c":70:23 11 {*cmpsi_1}
     (nil))
(jump_insn 115 114 116 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) "kernel/traps.c":70:23 806 {*jcc}
     (nil)
 -> 111)
(note 116 115 117 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":72:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 118 117 119 6 (set (reg/f:SI 0 ax [146])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7458043936c0 *.LC6>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":72:13 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2]  <var_decl 0x7458043936c0 *.LC6>)
        (nil)))
(insn 119 118 121 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [146])) "kernel/traps.c":72:13 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 121 119 122 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":72:13 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 122 121 123 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":72:13 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 123 122 124 7 4 (nil) [1 uses])
(note 124 123 126 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 126 124 127 7 (set (reg:SI 0 ax [148])
        (const_int 0 [0])) "kernel/traps.c":74:5 75 {*movsi_internal}
     (nil))
(insn 127 126 125 7 (parallel [
            (set (reg:SI 0 ax [orig:147 i ] [147])
                (asm_operands:SI ("str %%ax
	subl %2, %%eax
	shrl $4, %%eax") ("=a") 0 [
                        (reg:SI 0 ax [148])
                        (const_int 32 [0x20])
                    ]
                     [
                        (asm_input:SI ("a") kernel/traps.c:74)
                        (asm_input:SI ("i") kernel/traps.c:74)
                    ]
                     [] kernel/traps.c:74))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":74:5 -1
     (nil))
(insn 125 127 128 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])
        (reg:SI 0 ax [orig:147 i ] [147])) "kernel/traps.c":74:5 75 {*movsi_internal}
     (nil))
(insn 128 125 129 7 (set (reg:SI 0 ax [149])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])) "kernel/traps.c":75:5 75 {*movsi_internal}
     (nil))
(insn 129 128 130 7 (set (reg:SI 1 dx [orig:106 _24 ] [106])
        (zero_extend:SI (reg:HI 0 ax [149]))) "kernel/traps.c":75:5 144 {*zero_extendhisi2}
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 65535 [0xffff]))
        (nil)))
(insn 130 129 131 7 (set (reg/f:SI 0 ax [150])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x745804319360 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":75:50 75 {*movsi_internal}
     (nil))
(insn 131 130 132 7 (set (reg/f:SI 0 ax [orig:107 current.2_25 ] [107])
        (mem/f/c:SI (reg/f:SI 0 ax [150]) [5 current+0 S4 A32])) "kernel/traps.c":75:50 75 {*movsi_internal}
     (nil))
(insn 132 131 133 7 (set (reg:SI 0 ax [orig:108 _26 ] [108])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:107 current.2_25 ] [107])
                (const_int 556 [0x22c])) [1 current.2_25->pid+0 S4 A32])) "kernel/traps.c":75:5 75 {*movsi_internal}
     (nil))
(insn 133 132 134 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":75:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 134 133 135 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 1 dx [orig:106 _24 ] [106])) "kernel/traps.c":75:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 135 134 136 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:108 _26 ] [108])) "kernel/traps.c":75:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 136 135 137 7 (set (reg/f:SI 0 ax [151])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x745804393870 *.LC7>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":75:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2]  <var_decl 0x745804393870 *.LC7>)
        (nil)))
(insn 137 136 139 7 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [151])) "kernel/traps.c":75:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 139 137 140 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":75:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 140 139 141 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":75:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 141 140 190 7 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "kernel/traps.c":77:12 75 {*movsi_internal}
     (nil))
(jump_insn 190 141 191 7 (set (pc)
        (label_ref 167)) "kernel/traps.c":77:5 807 {jump}
     (nil)
 -> 167)
(barrier 191 190 169)
(code_label 169 191 144 8 8 (nil) [1 uses])
(note 144 169 145 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 8 (set (reg/f:SI 0 ax [152])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 146 145 147 8 (parallel [
            (set (reg/f:SI 0 ax [orig:109 _27 ] [109])
                (plus:SI (reg/f:SI 0 ax [152])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:32 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 esp+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 147 146 148 8 (set (reg:SI 0 ax [orig:110 _28 ] [110])
        (mem:SI (reg/f:SI 0 ax [orig:109 _27 ] [109]) [1 *_27+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 148 147 149 8 (set (reg/f:SI 1 dx [153])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [4 esp+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 149 148 150 8 (set (reg:SI 1 dx [orig:111 _29 ] [111])
        (mem:SI (reg/f:SI 1 dx [153]) [1 *esp_42+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 150 149 151 8 (set (reg:SI 2 cx [orig:112 _30 ] [112])
        (reg:SI 1 dx [orig:111 _29 ] [111])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 151 150 152 8 (set (reg:SI 1 dx [orig:113 i.3_31 ] [113])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])) "kernel/traps.c":78:32 75 {*movsi_internal}
     (nil))
(insn 152 151 155 8 (parallel [
            (set (reg:SI 1 dx [orig:114 _32 ] [114])
                (plus:SI (reg:SI 1 dx [orig:113 i.3_31 ] [113])
                    (reg:SI 2 cx [orig:112 _30 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:32 209 {*addsi_1}
     (nil))
(insn 155 152 154 8 (parallel [
            (set (reg:QI 0 ax [orig:154 __res ] [154])
                (asm_operands:QI ("push %%fs; mov %%ax, %%fs; movb %%fs:%2, %%al; pop %%fs") ("=a") 0 [
                        (reg:SI 0 ax [orig:110 _28 ] [110])
                        (mem:QI (reg/f:SI 1 dx [orig:115 _33 ] [115]) [0 *_33+0 S1 A8])
                    ]
                     [
                        (asm_input:SI ("0") kernel/traps.c:78)
                        (asm_input:QI ("m") kernel/traps.c:78)
                    ]
                     [] kernel/traps.c:78))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:32 -1
     (nil))
(insn 154 155 156 8 (set (reg/v:QI 4 si [orig:123 __res ] [123])
        (reg:QI 0 ax [orig:154 __res ] [154])) "kernel/traps.c":78:32 77 {*movqi_internal}
     (nil))
(insn 156 154 157 8 (set (reg:QI 0 ax [orig:124 _68 ] [124])
        (reg/v:QI 4 si [orig:123 __res ] [123])) "kernel/traps.c":78:32 77 {*movqi_internal}
     (nil))
(insn 157 156 158 8 (set (reg:SI 0 ax [orig:116 _34 ] [116])
        (sign_extend:SI (reg:QI 0 ax [orig:124 _68 ] [124]))) "kernel/traps.c":78:32 153 {extendqisi2}
     (nil))
(insn 158 157 159 8 (set (reg:SI 0 ax [orig:117 _35 ] [117])
        (zero_extend:SI (reg:QI 0 ax [orig:116 _34 ] [116]))) "kernel/traps.c":78:9 143 {*zero_extendqisi2}
     (nil))
(insn 159 158 160 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 160 159 161 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (reg:SI 0 ax [orig:117 _35 ] [117])) "kernel/traps.c":78:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 161 160 162 8 (set (reg/f:SI 0 ax [155])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x745804393990 *.LC8>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":78:9 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2]  <var_decl 0x745804393990 *.LC8>)
        (nil)))
(insn 162 161 164 8 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [155])) "kernel/traps.c":78:9 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 164 162 165 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":78:9 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 165 164 166 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":78:9 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 166 165 167 8 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":77:26 209 {*addsi_1}
     (nil))
(code_label 167 166 168 9 7 (nil) [1 uses])
(note 168 167 172 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 172 168 173 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [3 i+0 S4 A32])
            (const_int 9 [0x9]))) "kernel/traps.c":77:19 11 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "kernel/traps.c":77:19 806 {*jcc}
     (nil)
 -> 169)
(note 174 173 175 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":81:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 176 175 177 10 (set (reg/f:SI 0 ax [156])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x745804393a20 *.LC9>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":81:5 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2]  <var_decl 0x745804393a20 *.LC9>)
        (nil)))
(insn 177 176 179 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [156])) "kernel/traps.c":81:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 179 177 180 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":81:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 180 179 181 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":81:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 181 180 182 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":82:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 182 181 184 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (const_int 11 [0xb])) "kernel/traps.c":82:5 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 184 182 185 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("do_exit") [flags 0x41]  <function_decl 0x74580433bc00 do_exit>) [0 do_exit S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":82:5 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 185 184 192 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":82:5 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 192 185 193 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 196 11 (const_int 0 [0]) "kernel/traps.c":83:1 843 {nop}
     (nil))
(note 196 193 0 NOTE_INSN_DELETED)

;; Function do_double_fault (do_double_fault, funcdef_no=2, decl_uid=1396, cgraph_uid=3, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_double_fault

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":87:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":87:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":87:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x745804393b40 *.LC10>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":87:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2]  <var_decl 0x745804393b40 *.LC10>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":87:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":87:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":87:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":88:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_general_protection (do_general_protection, funcdef_no=3, decl_uid=1400, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_general_protection

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":92:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":92:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":92:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x745804393bd0 *.LC11>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":92:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2]  <var_decl 0x745804393bd0 *.LC11>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":92:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":92:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":92:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":93:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_divide_error (do_divide_error, funcdef_no=4, decl_uid=1404, cgraph_uid=5, symbol_order=4)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_divide_error

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":97:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":97:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":97:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x745804393c60 *.LC12>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":97:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC12") [flags 0x2]  <var_decl 0x745804393c60 *.LC12>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":97:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":97:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":97:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":98:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_int3 (do_int3, funcdef_no=5, decl_uid=1418, cgraph_uid=6, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =a  (1) 0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 8:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) Ts {*leasi} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) Ts {*leasi} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) Ts {*leasi} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =<  (1) ri*m {*pushsi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 54:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 58: point = 0, n_alt = -1
  BB 2
   Insn 54: point = 0, n_alt = 0
   Insn 53: point = 0, n_alt = 0
   Insn 52: point = 0, n_alt = -2
   Insn 51: point = 1, n_alt = 0
   Insn 50: point = 2, n_alt = 0
   Insn 49: point = 3, n_alt = 0
   Insn 48: point = 4, n_alt = 0
   Insn 47: point = 5, n_alt = 0
   Insn 46: point = 6, n_alt = 0
   Insn 45: point = 8, n_alt = 0
   Insn 44: point = 9, n_alt = 0
   Insn 43: point = 11, n_alt = 0
   Insn 42: point = 13, n_alt = 0
   Insn 41: point = 14, n_alt = 0
   Insn 40: point = 16, n_alt = 0
   Insn 39: point = 18, n_alt = 0
   Insn 38: point = 19, n_alt = 0
   Insn 37: point = 19, n_alt = 0
   Insn 36: point = 19, n_alt = -2
   Insn 35: point = 19, n_alt = 0
   Insn 34: point = 20, n_alt = 0
   Insn 33: point = 21, n_alt = 0
   Insn 32: point = 21, n_alt = 0
   Insn 31: point = 21, n_alt = 0
   Insn 30: point = 21, n_alt = 0
   Insn 29: point = 21, n_alt = 0
   Insn 28: point = 21, n_alt = 0
   Insn 27: point = 21, n_alt = 0
   Insn 26: point = 21, n_alt = -2
   Insn 25: point = 21, n_alt = 0
   Insn 24: point = 22, n_alt = 0
   Insn 23: point = 23, n_alt = 0
   Insn 22: point = 23, n_alt = 0
   Insn 21: point = 23, n_alt = 0
   Insn 20: point = 23, n_alt = 0
   Insn 19: point = 24, n_alt = 0
   Insn 18: point = 24, n_alt = 0
   Insn 17: point = 25, n_alt = 0
   Insn 16: point = 25, n_alt = 0
   Insn 15: point = 25, n_alt = -2
   Insn 14: point = 25, n_alt = 0
   Insn 13: point = 26, n_alt = 0
   Insn 12: point = 27, n_alt = 0
   Insn 11: point = 27, n_alt = 0
   Insn 10: point = 27, n_alt = 0
   Insn 9: point = 27, n_alt = 0
   Insn 8: point = 27, n_alt = 0
   Insn 5: point = 27, n_alt = 1
   Insn 7: point = 28, n_alt = 0
   Insn 59: point = 29, n_alt = -2
   Insn 6: point = 31, n_alt = 0
   Insn 60: point = 32, n_alt = 0
 r82: [0..32]
 r83: [23..24]
 r84: [15..16]
 r85: [5..14]
 r86: [10..11]
 r87: [4..9]
 r88: [3..6]
 r89: [27..29]
 r90: [30..31]
 r91: [25..26]
 r92: [21..22]
 r93: [19..20]
 r94: [17..18]
 r95: [12..13]
 r96: [7..8]
 r97: [1..2]
Compressing live ranges: from 33 to 26 - 78%
Ranges after the compression:
 r82: [0..25]
 r83: [18..19]
 r84: [10..11]
 r85: [2..9]
 r86: [6..7]
 r87: [2..5]
 r88: [2..3]
 r89: [22..23]
 r90: [24..25]
 r91: [20..21]
 r92: [16..17]
 r93: [14..15]
 r94: [12..13]
 r95: [8..9]
 r96: [4..5]
 r97: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 60
changing reg in insn 52
changing reg in insn 50
changing reg in insn 36
changing reg in insn 34
changing reg in insn 26
changing reg in insn 24
changing reg in insn 15
changing reg in insn 13
changing reg in insn 18
changing reg in insn 20
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 47
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 48
changing reg in insn 46
changing reg in insn 49
changing reg in insn 59
changing reg in insn 7
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 59
changing reg in insn 13
changing reg in insn 14
changing reg in insn 24
changing reg in insn 25
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 51
deleting insn with uid = 59.
deleting insn with uid = 15.
deleting insn with uid = 26.
deleting insn with uid = 36.
deleting insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 53.


do_int3

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;;  ref usage 	r0={18d,13u} r1={6d,1u} r2={6d,1u} r3={1d,8u} r7={27d,56u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={2e} r17={15d} r18={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 414{333d,79u,2e} in 48{44 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 60 3 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 60 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg:SI 0 ax [90])
        (const_int 0 [0])) "kernel/traps.c":107:2 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:SI 0 ax [orig:89 tr ] [89])
                (asm_operands:SI ("str %%ax") ("=a") 0 [
                        (reg:SI 0 ax [orig:89 tr ] [89])
                    ]
                     [
                        (asm_input:SI ("0") kernel/traps.c:107)
                    ]
                     [] kernel/traps.c:107))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":107:2 -1
     (nil))
(insn 5 7 8 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 tr+0 S4 A32])
        (reg:SI 0 ax [orig:89 tr ] [89])) "kernel/traps.c":107:2 75 {*movsi_internal}
     (nil))
(insn 8 5 9 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":108:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 9 8 10 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 76 [0x4c])) [1 edx+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 10 9 11 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 84 [0x54])) [1 ecx+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 92 [0x5c])) [1 ebx+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 12 11 13 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 100 [0x64])) [1 eax+0 S4 A32])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 13 12 14 2 (set (reg/f:SI 0 ax [91])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x745804393d80 *.LC13>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":108:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC13") [flags 0x2]  <var_decl 0x745804393d80 *.LC13>)
        (nil)))
(insn 14 13 16 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [91])) "kernel/traps.c":108:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 16 14 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":108:2 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":108:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 18 17 19 2 (set (reg:SI 0 ax [orig:83 esp.4_1 ] [83])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [4 esp+0 S4 A32])) "kernel/traps.c":110:2 75 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":110:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 20 19 21 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:83 esp.4_1 ] [83])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 21 20 22 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 68 [0x44])) [1 ebp+0 S4 A32])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 22 21 23 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [1 edi+0 S4 A32])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 23 22 24 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 80 [0x50])) [1 esi+0 S4 A32])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 24 23 25 2 (set (reg/f:SI 0 ax [92])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x745804393e10 *.LC14>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":110:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC14") [flags 0x2]  <var_decl 0x745804393e10 *.LC14>)
        (nil)))
(insn 25 24 27 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [92])) "kernel/traps.c":110:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 27 25 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":110:2 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":110:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":112:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 30 29 31 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [3  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [3 tr+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 31 30 32 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 56 [0x38])) [1 fs+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 32 31 33 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [1 es+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 33 32 34 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 72 [0x48])) [1 ds+0 S4 A32])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 34 33 35 2 (set (reg/f:SI 0 ax [93])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x745804393ea0 *.LC15>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":112:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC15") [flags 0x2]  <var_decl 0x745804393ea0 *.LC15>)
        (nil)))
(insn 35 34 37 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [93])) "kernel/traps.c":112:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 37 35 38 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/traps.c":112:2 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 38 37 39 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":112:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 39 38 40 2 (set (reg/f:SI 0 ax [94])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [4 esp+0 S4 A32])) "kernel/traps.c":113:68 75 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg/f:SI 0 ax [orig:84 _2 ] [84])
                (plus:SI (reg/f:SI 0 ax [94])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":113:68 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 41 40 42 2 (set (reg:SI 2 cx [orig:85 _3 ] [85])
        (mem:SI (reg/f:SI 0 ax [orig:84 _2 ] [84]) [1 *_2+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg/f:SI 0 ax [95])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [4 esp+0 S4 A32])) "kernel/traps.c":113:60 75 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg/f:SI 0 ax [orig:86 _4 ] [86])
                (plus:SI (reg/f:SI 0 ax [95])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":113:60 209 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [4 esp+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 44 43 45 2 (set (reg:SI 1 dx [orig:87 _5 ] [87])
        (mem:SI (reg/f:SI 0 ax [orig:86 _4 ] [86]) [1 *_4+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg/f:SI 0 ax [96])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [4 esp+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 0 ax [orig:88 _6 ] [88])
        (mem:SI (reg/f:SI 0 ax [96]) [1 *esp_14(D)+0 S4 A32])) "kernel/traps.c":113:2 75 {*movsi_internal}
     (nil))
(insn 47 46 48 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 2 cx [orig:85 _3 ] [85])) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 48 47 49 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 1 dx [orig:87 _5 ] [87])) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 49 48 50 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 0 ax [orig:88 _6 ] [88])) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 50 49 51 2 (set (reg/f:SI 0 ax [97])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x745804393f30 *.LC16>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":113:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC16") [flags 0x2]  <var_decl 0x745804393f30 *.LC16>)
        (nil)))
(insn 51 50 53 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [97])) "kernel/traps.c":113:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 53 51 54 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x74580433b900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/traps.c":113:2 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 54 53 57 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":113:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 57 54 58 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 3 (const_int 0 [0]) "kernel/traps.c":114:1 843 {nop}
     (nil))
(note 61 58 0 NOTE_INSN_DELETED)

;; Function do_nmi (do_nmi, funcdef_no=6, decl_uid=1423, cgraph_uid=7, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_nmi

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":118:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":118:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":118:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x745804393120 *.LC17>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":118:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC17") [flags 0x2]  <var_decl 0x745804393120 *.LC17>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":118:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":118:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":118:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":119:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_debug (do_debug, funcdef_no=7, decl_uid=1427, cgraph_uid=8, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_debug

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":123:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":123:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":123:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC18") [flags 0x2]  <var_decl 0x7458043937e0 *.LC18>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":123:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC18") [flags 0x2]  <var_decl 0x7458043937e0 *.LC18>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":123:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":123:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":123:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":124:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_overflow (do_overflow, funcdef_no=8, decl_uid=1431, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_overflow

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":128:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":128:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":128:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC19") [flags 0x2]  <var_decl 0x745804393ab0 *.LC19>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":128:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC19") [flags 0x2]  <var_decl 0x745804393ab0 *.LC19>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":128:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":128:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":128:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":129:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_bounds (do_bounds, funcdef_no=9, decl_uid=1435, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_bounds

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":133:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":133:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":133:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x7458043c3000 *.LC20>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":133:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC20") [flags 0x2]  <var_decl 0x7458043c3000 *.LC20>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":133:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":133:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":133:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":134:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_invalid_op (do_invalid_op, funcdef_no=10, decl_uid=1439, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_invalid_op

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":138:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":138:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":138:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC21") [flags 0x2]  <var_decl 0x7458043c3090 *.LC21>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":138:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC21") [flags 0x2]  <var_decl 0x7458043c3090 *.LC21>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":138:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":138:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":138:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":139:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_device_not_available (do_device_not_available, funcdef_no=11, decl_uid=1443, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_device_not_available

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":143:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":143:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":143:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC22") [flags 0x2]  <var_decl 0x7458043c3120 *.LC22>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":143:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC22") [flags 0x2]  <var_decl 0x7458043c3120 *.LC22>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":143:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":143:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":143:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":144:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_coprocessor_segment_overrun (do_coprocessor_segment_overrun, funcdef_no=12, decl_uid=1447, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_coprocessor_segment_overrun

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":148:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":148:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":148:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC23") [flags 0x2]  <var_decl 0x7458043c31b0 *.LC23>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":148:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC23") [flags 0x2]  <var_decl 0x7458043c31b0 *.LC23>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":148:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":148:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":148:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":149:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_invalid_TSS (do_invalid_TSS, funcdef_no=13, decl_uid=1451, cgraph_uid=14, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_invalid_TSS

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":153:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":153:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":153:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC24") [flags 0x2]  <var_decl 0x7458043c3240 *.LC24>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":153:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC24") [flags 0x2]  <var_decl 0x7458043c3240 *.LC24>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":153:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":153:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":153:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":154:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_segment_not_present (do_segment_not_present, funcdef_no=14, decl_uid=1455, cgraph_uid=15, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_segment_not_present

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":158:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":158:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":158:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC25") [flags 0x2]  <var_decl 0x7458043c32d0 *.LC25>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":158:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC25") [flags 0x2]  <var_decl 0x7458043c32d0 *.LC25>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":158:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":158:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":158:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":159:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_stack_segment (do_stack_segment, funcdef_no=15, decl_uid=1459, cgraph_uid=16, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_stack_segment

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":163:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":163:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":163:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC26") [flags 0x2]  <var_decl 0x7458043c3360 *.LC26>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":163:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC26") [flags 0x2]  <var_decl 0x7458043c3360 *.LC26>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":163:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":163:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":163:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":164:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function do_coprocessor_error (do_coprocessor_error, funcdef_no=16, decl_uid=1463, cgraph_uid=17, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 27: point = 0, n_alt = -1
   Insn 22: point = 0, n_alt = 0
   Insn 21: point = 0, n_alt = 0
   Insn 20: point = 0, n_alt = 0
   Insn 19: point = 1, n_alt = 0
   Insn 18: point = 3, n_alt = 0
   Insn 17: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
  BB 5
   Insn 31: point = 4, n_alt = -1
  BB 2
   Insn 10: point = 4, n_alt = -1
   Insn 9: point = 4, n_alt = 0
   Insn 8: point = 5, n_alt = 0
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 8, n_alt = 0
   Insn 5: point = 10, n_alt = 0
   Insn 32: point = 11, n_alt = 0
 r82: [2..11]
 r83: [4..8]
 r84: [4..5]
 r85: [9..10]
 r86: [6..7]
 r87: [0..1]
Compressing live ranges: from 12 to 8 - 66%
Ranges after the compression:
 r82: [2..7]
 r83: [2..5]
 r84: [2..3]
 r85: [6..7]
 r86: [4..5]
 r87: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 32
changing reg in insn 19
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 9
changing reg in insn 8
changing reg in insn 9
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 19
changing reg in insn 20
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.


do_coprocessor_error

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={5d,3u} r2={3d,1u} r7={6d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={5d,1u} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 112{88d,24u,0e} in 16{15 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 32 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 32 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 1 dx [85])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x745804319480 last_task_used_math>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 2 cx [orig:83 last_task_used_math.5_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [85]) [5 last_task_used_math+0 S4 A32])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [86])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x745804319360 current>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 1 dx [orig:84 current.6_2 ] [84])
        (mem/f/c:SI (reg/f:SI 1 dx [86]) [5 current+0 S4 A32])) "kernel/traps.c":168:26 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 2 cx [orig:83 last_task_used_math.5_1 ] [83])
            (reg/f:SI 1 dx [orig:84 current.6_2 ] [84]))) "kernel/traps.c":168:5 11 {*cmpsi_1}
     (nil))
(jump_insn 10 9 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 30)
            (pc))) "kernel/traps.c":168:5 806 {*jcc}
     (nil)
 -> 30)
(note 15 10 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":170:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 17 16 18 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":170:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 18 17 19 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":170:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 19 18 20 3 (set (reg/f:SI 0 ax [87])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC27") [flags 0x2]  <var_decl 0x7458043c33f0 *.LC27>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":170:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC27") [flags 0x2]  <var_decl 0x7458043c33f0 *.LC27>)
        (nil)))
(insn 20 19 21 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [87])) "kernel/traps.c":170:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 21 20 22 3 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":170:2 812 {*call}
     (nil)
    (nil))
(insn 22 21 27 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":170:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 27 22 28 3 (set (pc)
        (label_ref 25)) 807 {jump}
     (nil)
 -> 25)
(barrier 28 27 30)
(code_label 30 28 29 5 26 (nil) [1 uses])
(note 29 30 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 29 25 5 (const_int 0 [0]) "kernel/traps.c":169:3 843 {nop}
     (nil))
(code_label 25 31 26 4 23 (nil) [1 uses])
(note 26 25 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 33 26 0 NOTE_INSN_DELETED)

;; Function do_reserved (do_reserved, funcdef_no=17, decl_uid=1467, cgraph_uid=18, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 0
   Insn 10: point = 0, n_alt = 0
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 1, n_alt = 0
   Insn 7: point = 3, n_alt = 0
   Insn 6: point = 3, n_alt = 0
   Insn 5: point = 3, n_alt = 0
   Insn 16: point = 3, n_alt = 0
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=16)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 16
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.


do_reserved

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={2d} r2={2d} r7={6d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 98{83d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 16 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 16 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":175:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 error_code+0 S4 A32])) "kernel/traps.c":175:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [1 esp+0 S4 A32])) "kernel/traps.c":175:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 8 7 9 2 (set (reg/f:SI 0 ax [83])
        (plus:SI (reg:SI 0 ax [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC28") [flags 0x2]  <var_decl 0x7458043c3480 *.LC28>)
                    ] UNSPEC_GOTOFF)))) "kernel/traps.c":175:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC28") [flags 0x2]  <var_decl 0x7458043c3480 *.LC28>)
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [83])) "kernel/traps.c":175:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("die") [flags 0x3]  <function_decl 0x74580433ee00 die>) [0 die S1 A8])
        (const_int 16 [0x10])) "kernel/traps.c":175:2 812 {*call}
     (nil)
    (nil))
(insn 11 10 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":175:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 17 3 (const_int 0 [0]) "kernel/traps.c":176:1 843 {nop}
     (nil))
(note 17 15 0 NOTE_INSN_DELETED)

;; Function trap_init (trap_init, funcdef_no=18, decl_uid=1299, cgraph_uid=19, symbol_order=18)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) i  (1) o  (2) o  (3) d  (4) a
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 146:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 149:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            alt=1,overall=18,losers=2 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 154
	 Choosing alt 0 in insn 154:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 155:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 160:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) i  (1) o  (2) o  (3) d  (4) a
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 179:  (0) =a  (1) d
      Creating newreg=243 from oldreg=232, assigning class DREG to r243
  179: {r231:QI=asm_operands;clobber flags:CC;}
      REG_DEAD r232:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  209: r243:SI=r232:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 177:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 180:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 182:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
          alt=0,overall=9,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 187:  (0) =a  (1) d
      Creating newreg=244 from oldreg=235, assigning class DREG to r244
  187: {r234:QI=asm_operands;clobber flags:CC;}
      REG_DEAD r235:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  210: r244:SI=r235:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 185:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 188:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 190:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) a  (1) d
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) Ts {*leasi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) i  (1) o  (2) o  (3) d  (4) a
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6

********** Pseudo live ranges #1: **********

  BB 6
   Insn 206: point = 0, n_alt = -1
  BB 5
   Insn 200: point = 0, n_alt = 0
   Insn 199: point = 1, n_alt = 0
   Insn 198: point = 2, n_alt = -2
   Insn 197: point = 4, n_alt = 0
   Insn 196: point = 6, n_alt = 0
   Insn 195: point = 8, n_alt = 0
   Insn 194: point = 9, n_alt = 0
   Insn 193: point = 11, n_alt = 0
   Insn 192: point = 12, n_alt = 0
   Insn 191: point = 13, n_alt = 0
   Insn 190: point = 14, n_alt = 0
   Insn 189: point = 16, n_alt = 0
   Insn 188: point = 18, n_alt = 4
   Insn 185: point = 19, n_alt = 8
   Insn 187: point = 20, n_alt = 0
   Insn 210: point = 22, n_alt = -2
	Hard reg 0 is preferable by r244 with profit 1000
   Insn 186: point = 24, n_alt = 0
   Insn 184: point = 25, n_alt = 0
   Insn 183: point = 26, n_alt = 0
   Insn 182: point = 27, n_alt = 0
   Insn 181: point = 29, n_alt = 0
   Insn 180: point = 31, n_alt = 4
   Insn 177: point = 32, n_alt = 8
   Insn 179: point = 33, n_alt = 0
   Insn 209: point = 35, n_alt = -2
	Hard reg 0 is preferable by r243 with profit 1000
   Insn 178: point = 37, n_alt = 0
   Insn 176: point = 38, n_alt = 0
   Insn 175: point = 39, n_alt = 0
   Insn 174: point = 40, n_alt = -2
   Insn 173: point = 42, n_alt = 0
   Insn 172: point = 43, n_alt = 0
   Insn 171: point = 45, n_alt = 0
   Insn 170: point = 46, n_alt = 0
   Insn 169: point = 48, n_alt = 0
  BB 4
   Insn 167: point = 50, n_alt = -1
   Insn 166: point = 50, n_alt = 0
  BB 2
   Insn 203: point = 51, n_alt = -1
   Insn 141: point = 51, n_alt = 1
   Insn 140: point = 51, n_alt = 0
   Insn 139: point = 52, n_alt = 0
   Insn 138: point = 53, n_alt = -2
   Insn 137: point = 55, n_alt = 0
   Insn 136: point = 56, n_alt = 0
   Insn 135: point = 58, n_alt = 0
   Insn 134: point = 59, n_alt = 0
   Insn 133: point = 61, n_alt = 0
   Insn 132: point = 62, n_alt = 0
   Insn 131: point = 63, n_alt = 0
   Insn 130: point = 64, n_alt = -2
   Insn 129: point = 66, n_alt = 0
   Insn 128: point = 67, n_alt = 0
   Insn 127: point = 69, n_alt = 0
   Insn 126: point = 70, n_alt = 0
   Insn 125: point = 72, n_alt = 0
   Insn 124: point = 73, n_alt = 0
   Insn 123: point = 74, n_alt = 0
   Insn 122: point = 75, n_alt = -2
   Insn 121: point = 77, n_alt = 0
   Insn 120: point = 78, n_alt = 0
   Insn 119: point = 80, n_alt = 0
   Insn 118: point = 81, n_alt = 0
   Insn 117: point = 83, n_alt = 0
   Insn 116: point = 84, n_alt = 0
   Insn 115: point = 85, n_alt = 0
   Insn 114: point = 86, n_alt = -2
   Insn 113: point = 88, n_alt = 0
   Insn 112: point = 89, n_alt = 0
   Insn 111: point = 91, n_alt = 0
   Insn 110: point = 92, n_alt = 0
   Insn 109: point = 94, n_alt = 0
   Insn 108: point = 95, n_alt = 0
   Insn 107: point = 96, n_alt = 0
   Insn 106: point = 97, n_alt = -2
   Insn 105: point = 99, n_alt = 0
   Insn 104: point = 100, n_alt = 0
   Insn 103: point = 102, n_alt = 0
   Insn 102: point = 103, n_alt = 0
   Insn 101: point = 105, n_alt = 0
   Insn 100: point = 106, n_alt = 0
   Insn 99: point = 107, n_alt = 0
   Insn 98: point = 108, n_alt = -2
   Insn 97: point = 110, n_alt = 0
   Insn 96: point = 111, n_alt = 0
   Insn 95: point = 113, n_alt = 0
   Insn 94: point = 114, n_alt = 0
   Insn 93: point = 116, n_alt = 0
   Insn 92: point = 117, n_alt = 0
   Insn 91: point = 118, n_alt = 0
   Insn 90: point = 119, n_alt = -2
   Insn 89: point = 121, n_alt = 0
   Insn 88: point = 122, n_alt = 0
   Insn 87: point = 124, n_alt = 0
   Insn 86: point = 125, n_alt = 0
   Insn 85: point = 127, n_alt = 0
   Insn 84: point = 128, n_alt = 0
   Insn 83: point = 129, n_alt = 0
   Insn 82: point = 130, n_alt = -2
   Insn 81: point = 132, n_alt = 0
   Insn 80: point = 133, n_alt = 0
   Insn 79: point = 135, n_alt = 0
   Insn 78: point = 136, n_alt = 0
   Insn 77: point = 138, n_alt = 0
   Insn 76: point = 139, n_alt = 0
   Insn 75: point = 140, n_alt = 0
   Insn 74: point = 141, n_alt = -2
   Insn 73: point = 143, n_alt = 0
   Insn 72: point = 144, n_alt = 0
   Insn 71: point = 146, n_alt = 0
   Insn 70: point = 147, n_alt = 0
   Insn 69: point = 149, n_alt = 0
   Insn 68: point = 150, n_alt = 0
   Insn 67: point = 151, n_alt = 0
   Insn 66: point = 152, n_alt = -2
   Insn 65: point = 154, n_alt = 0
   Insn 64: point = 155, n_alt = 0
   Insn 63: point = 157, n_alt = 0
   Insn 62: point = 158, n_alt = 0
   Insn 61: point = 160, n_alt = 0
   Insn 60: point = 161, n_alt = 0
   Insn 59: point = 162, n_alt = 0
   Insn 58: point = 163, n_alt = -2
   Insn 57: point = 165, n_alt = 0
   Insn 56: point = 166, n_alt = 0
   Insn 55: point = 168, n_alt = 0
   Insn 54: point = 169, n_alt = 0
   Insn 53: point = 171, n_alt = 0
   Insn 52: point = 172, n_alt = 0
   Insn 51: point = 173, n_alt = 0
   Insn 50: point = 174, n_alt = -2
   Insn 49: point = 176, n_alt = 0
   Insn 48: point = 177, n_alt = 0
   Insn 47: point = 179, n_alt = 0
   Insn 46: point = 180, n_alt = 0
   Insn 45: point = 182, n_alt = 0
   Insn 44: point = 183, n_alt = 0
   Insn 43: point = 184, n_alt = 0
   Insn 42: point = 185, n_alt = -2
   Insn 41: point = 187, n_alt = 0
   Insn 40: point = 188, n_alt = 0
   Insn 39: point = 190, n_alt = 0
   Insn 38: point = 191, n_alt = 0
   Insn 37: point = 193, n_alt = 0
   Insn 36: point = 194, n_alt = 0
   Insn 35: point = 195, n_alt = 0
   Insn 34: point = 196, n_alt = -2
   Insn 33: point = 198, n_alt = 0
   Insn 32: point = 199, n_alt = 0
   Insn 31: point = 201, n_alt = 0
   Insn 30: point = 202, n_alt = 0
   Insn 29: point = 204, n_alt = 0
   Insn 28: point = 205, n_alt = 0
   Insn 27: point = 206, n_alt = 0
   Insn 26: point = 207, n_alt = -2
   Insn 25: point = 209, n_alt = 0
   Insn 24: point = 210, n_alt = 0
   Insn 23: point = 212, n_alt = 0
   Insn 22: point = 213, n_alt = 0
   Insn 21: point = 215, n_alt = 0
   Insn 20: point = 216, n_alt = 0
   Insn 19: point = 217, n_alt = 0
   Insn 18: point = 218, n_alt = -2
   Insn 17: point = 220, n_alt = 0
   Insn 16: point = 221, n_alt = 0
   Insn 15: point = 223, n_alt = 0
   Insn 14: point = 224, n_alt = 0
   Insn 13: point = 226, n_alt = 0
   Insn 12: point = 227, n_alt = 0
   Insn 11: point = 228, n_alt = 0
   Insn 10: point = 229, n_alt = -2
   Insn 9: point = 231, n_alt = 0
   Insn 8: point = 232, n_alt = 0
   Insn 7: point = 234, n_alt = 0
   Insn 6: point = 235, n_alt = -2
   Insn 5: point = 237, n_alt = 0
   Insn 207: point = 238, n_alt = 0
  BB 3
   Insn 160: point = 239, n_alt = 0
   Insn 159: point = 239, n_alt = 0
   Insn 158: point = 240, n_alt = 0
   Insn 157: point = 241, n_alt = -2
   Insn 156: point = 243, n_alt = 0
   Insn 155: point = 244, n_alt = 3
   Insn 154: point = 246, n_alt = 0
   Insn 153: point = 248, n_alt = -2
   Insn 152: point = 250, n_alt = 0
   Insn 151: point = 251, n_alt = 1
   Insn 150: point = 253, n_alt = 0
   Insn 149: point = 254, n_alt = 3
   Insn 148: point = 256, n_alt = -2
   Insn 147: point = 258, n_alt = 0
   Insn 146: point = 259, n_alt = 1
   Insn 145: point = 261, n_alt = 0
 r82: [5..262]
 r83: [227..235]
 r84: [227..232]
 r85: [216..224]
 r86: [216..221]
 r87: [205..213]
 r88: [205..210]
 r89: [194..202]
 r90: [194..199]
 r91: [183..191]
 r92: [183..188]
 r93: [172..180]
 r94: [172..177]
 r95: [161..169]
 r96: [161..166]
 r97: [150..158]
 r98: [150..155]
 r99: [139..147]
 r100: [139..144]
 r101: [128..136]
 r102: [128..133]
 r103: [117..125]
 r104: [117..122]
 r105: [106..114]
 r106: [106..111]
 r107: [95..103]
 r108: [95..100]
 r109: [84..92]
 r110: [84..89]
 r111: [73..81]
 r112: [73..78]
 r113: [62..70]
 r114: [62..67]
 r115: [51..59]
 r116: [51..56]
 r117: [239..254]
 r118: [245..246]
 r119: [239..244]
 r120: [38..46]
 r121: [38..43]
 r122: [28..29]
 r123: [25..27]
 r124: [15..16]
 r125: [12..14]
 r126: [0..9]
 r127: [0..6]
 r128: [30..31]
 r129: [17..18]
 r130: [236..237]
 r131: [233..234]
 r132: [227..229]
 r133: [230..231]
 r134: [227..228]
 r135: [225..226]
 r136: [222..223]
 r137: [216..218]
 r138: [219..220]
 r139: [216..217]
 r140: [214..215]
 r141: [211..212]
 r142: [205..207]
 r143: [208..209]
 r144: [205..206]
 r145: [203..204]
 r146: [200..201]
 r147: [194..196]
 r148: [197..198]
 r149: [194..195]
 r150: [192..193]
 r151: [189..190]
 r152: [183..185]
 r153: [186..187]
 r154: [183..184]
 r155: [181..182]
 r156: [178..179]
 r157: [172..174]
 r158: [175..176]
 r159: [172..173]
 r160: [170..171]
 r161: [167..168]
 r162: [161..163]
 r163: [164..165]
 r164: [161..162]
 r165: [159..160]
 r166: [156..157]
 r167: [150..152]
 r168: [153..154]
 r169: [150..151]
 r170: [148..149]
 r171: [145..146]
 r172: [139..141]
 r173: [142..143]
 r174: [139..140]
 r175: [137..138]
 r176: [134..135]
 r177: [128..130]
 r178: [131..132]
 r179: [128..129]
 r180: [126..127]
 r181: [123..124]
 r182: [117..119]
 r183: [120..121]
 r184: [117..118]
 r185: [115..116]
 r186: [112..113]
 r187: [106..108]
 r188: [109..110]
 r189: [106..107]
 r190: [104..105]
 r191: [101..102]
 r192: [95..97]
 r193: [98..99]
 r194: [95..96]
 r195: [93..94]
 r196: [90..91]
 r197: [84..86]
 r198: [87..88]
 r199: [84..85]
 r200: [82..83]
 r201: [79..80]
 r202: [73..75]
 r203: [76..77]
 r204: [73..74]
 r205: [71..72]
 r206: [68..69]
 r207: [62..64]
 r208: [65..66]
 r209: [62..63]
 r210: [60..61]
 r211: [57..58]
 r212: [51..53]
 r213: [54..55]
 r214: [51..52]
 r215: [255..259]
 r216: [260..261]
 r217: [255..256]
 r218: [257..258]
 r219: [247..251]
 r220: [252..253]
 r221: [247..248]
 r222: [249..250]
 r223: [239..241]
 r224: [242..243]
 r225: [239..240]
 r226: [47..48]
 r227: [44..45]
 r228: [38..40]
 r229: [41..42]
 r230: [38..39]
 r231: [32..33]
 r232: [36..37]
 r233: [25..26]
 r234: [19..20]
 r235: [23..24]
 r236: [12..13]
 r237: [10..11]
 r238: [7..8]
 r239: [0..2]
 r240: [3..4]
 r241: [0..1]
 r243: [34..35]
 r244: [21..22]
Compressing live ranges: from 263 to 196 - 74%
Ranges after the compression:
 r82: [4..195]
 r83: [170..175]
 r84: [170..173]
 r85: [162..167]
 r86: [162..165]
 r87: [154..159]
 r88: [154..157]
 r89: [146..151]
 r90: [146..149]
 r91: [138..143]
 r92: [138..141]
 r93: [130..135]
 r94: [130..133]
 r95: [122..127]
 r96: [122..125]
 r97: [114..119]
 r98: [114..117]
 r99: [106..111]
 r100: [106..109]
 r101: [98..103]
 r102: [98..101]
 r103: [90..95]
 r104: [90..93]
 r105: [82..87]
 r106: [82..85]
 r107: [74..79]
 r108: [74..77]
 r109: [66..71]
 r110: [66..69]
 r111: [58..63]
 r112: [58..61]
 r113: [50..55]
 r114: [50..53]
 r115: [42..47]
 r116: [42..45]
 r117: [178..189]
 r118: [182..183]
 r119: [178..181]
 r120: [34..39]
 r121: [34..37]
 r122: [24..25]
 r123: [22..23]
 r124: [12..13]
 r125: [10..11]
 r126: [0..7]
 r127: [0..5]
 r128: [26..27]
 r129: [14..15]
 r130: [176..177]
 r131: [174..175]
 r132: [170..171]
 r133: [172..173]
 r134: [170..171]
 r135: [168..169]
 r136: [166..167]
 r137: [162..163]
 r138: [164..165]
 r139: [162..163]
 r140: [160..161]
 r141: [158..159]
 r142: [154..155]
 r143: [156..157]
 r144: [154..155]
 r145: [152..153]
 r146: [150..151]
 r147: [146..147]
 r148: [148..149]
 r149: [146..147]
 r150: [144..145]
 r151: [142..143]
 r152: [138..139]
 r153: [140..141]
 r154: [138..139]
 r155: [136..137]
 r156: [134..135]
 r157: [130..131]
 r158: [132..133]
 r159: [130..131]
 r160: [128..129]
 r161: [126..127]
 r162: [122..123]
 r163: [124..125]
 r164: [122..123]
 r165: [120..121]
 r166: [118..119]
 r167: [114..115]
 r168: [116..117]
 r169: [114..115]
 r170: [112..113]
 r171: [110..111]
 r172: [106..107]
 r173: [108..109]
 r174: [106..107]
 r175: [104..105]
 r176: [102..103]
 r177: [98..99]
 r178: [100..101]
 r179: [98..99]
 r180: [96..97]
 r181: [94..95]
 r182: [90..91]
 r183: [92..93]
 r184: [90..91]
 r185: [88..89]
 r186: [86..87]
 r187: [82..83]
 r188: [84..85]
 r189: [82..83]
 r190: [80..81]
 r191: [78..79]
 r192: [74..75]
 r193: [76..77]
 r194: [74..75]
 r195: [72..73]
 r196: [70..71]
 r197: [66..67]
 r198: [68..69]
 r199: [66..67]
 r200: [64..65]
 r201: [62..63]
 r202: [58..59]
 r203: [60..61]
 r204: [58..59]
 r205: [56..57]
 r206: [54..55]
 r207: [50..51]
 r208: [52..53]
 r209: [50..51]
 r210: [48..49]
 r211: [46..47]
 r212: [42..43]
 r213: [44..45]
 r214: [42..43]
 r215: [190..193]
 r216: [194..195]
 r217: [190..191]
 r218: [192..193]
 r219: [184..187]
 r220: [188..189]
 r221: [184..185]
 r222: [186..187]
 r223: [178..179]
 r224: [180..181]
 r225: [178..179]
 r226: [40..41]
 r227: [38..39]
 r228: [34..35]
 r229: [36..37]
 r230: [34..35]
 r231: [28..29]
 r232: [32..33]
 r233: [22..23]
 r234: [16..17]
 r235: [20..21]
 r236: [10..11]
 r237: [8..9]
 r238: [6..7]
 r239: [0..1]
 r240: [2..3]
 r241: [0..1]
 r243: [30..31]
 r244: [18..19]

********** Assignment #1: **********

	 Assigning to 243 (cl=DREG, orig=232, freq=2000, tfirst=243, tfreq=2000)...
	   Assign 1 to reload r243 (freq=2000)
	 Assigning to 244 (cl=DREG, orig=235, freq=2000, tfirst=244, tfreq=2000)...
	   Assign 1 to reload r244 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=28, prev_offset=28)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-8, prev_offset=0)
changing reg in insn 207
changing reg in insn 197
changing reg in insn 195
changing reg in insn 193
changing reg in insn 173
changing reg in insn 171
changing reg in insn 169
changing reg in insn 156
changing reg in insn 152
changing reg in insn 147
changing reg in insn 137
changing reg in insn 135
changing reg in insn 133
changing reg in insn 129
changing reg in insn 127
changing reg in insn 125
changing reg in insn 121
changing reg in insn 119
changing reg in insn 117
changing reg in insn 113
changing reg in insn 111
changing reg in insn 109
changing reg in insn 105
changing reg in insn 103
changing reg in insn 101
changing reg in insn 97
changing reg in insn 95
changing reg in insn 93
changing reg in insn 89
changing reg in insn 87
changing reg in insn 85
changing reg in insn 81
changing reg in insn 79
changing reg in insn 77
changing reg in insn 73
changing reg in insn 71
changing reg in insn 69
changing reg in insn 65
changing reg in insn 63
changing reg in insn 61
changing reg in insn 57
changing reg in insn 55
changing reg in insn 53
changing reg in insn 49
changing reg in insn 47
changing reg in insn 45
changing reg in insn 41
changing reg in insn 39
changing reg in insn 37
changing reg in insn 33
changing reg in insn 31
changing reg in insn 29
changing reg in insn 25
changing reg in insn 23
changing reg in insn 21
changing reg in insn 17
changing reg in insn 15
changing reg in insn 13
changing reg in insn 9
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 12
changing reg in insn 8
changing reg in insn 12
changing reg in insn 14
changing reg in insn 20
changing reg in insn 16
changing reg in insn 20
changing reg in insn 22
changing reg in insn 28
changing reg in insn 24
changing reg in insn 28
changing reg in insn 30
changing reg in insn 36
changing reg in insn 32
changing reg in insn 36
changing reg in insn 38
changing reg in insn 44
changing reg in insn 40
changing reg in insn 44
changing reg in insn 46
changing reg in insn 52
changing reg in insn 48
changing reg in insn 52
changing reg in insn 54
changing reg in insn 60
changing reg in insn 56
changing reg in insn 60
changing reg in insn 62
changing reg in insn 68
changing reg in insn 64
changing reg in insn 68
changing reg in insn 70
changing reg in insn 76
changing reg in insn 72
changing reg in insn 76
changing reg in insn 78
changing reg in insn 84
changing reg in insn 80
changing reg in insn 84
changing reg in insn 86
changing reg in insn 92
changing reg in insn 88
changing reg in insn 92
changing reg in insn 94
changing reg in insn 100
changing reg in insn 96
changing reg in insn 100
changing reg in insn 102
changing reg in insn 108
changing reg in insn 104
changing reg in insn 108
changing reg in insn 110
changing reg in insn 116
changing reg in insn 112
changing reg in insn 116
changing reg in insn 118
changing reg in insn 124
changing reg in insn 120
changing reg in insn 124
changing reg in insn 126
changing reg in insn 132
changing reg in insn 128
changing reg in insn 132
changing reg in insn 134
changing reg in insn 140
changing reg in insn 136
changing reg in insn 140
changing reg in insn 149
changing reg in insn 159
changing reg in insn 154
changing reg in insn 155
changing reg in insn 155
changing reg in insn 159
changing reg in insn 170
changing reg in insn 176
changing reg in insn 172
changing reg in insn 176
changing reg in insn 181
changing reg in insn 182
changing reg in insn 182
changing reg in insn 184
changing reg in insn 189
changing reg in insn 190
changing reg in insn 190
changing reg in insn 192
changing reg in insn 194
changing reg in insn 200
changing reg in insn 196
changing reg in insn 200
changing reg in insn 180
changing reg in insn 181
changing reg in insn 188
changing reg in insn 189
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 12
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 20
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 28
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 34
changing reg in insn 36
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 44
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 50
changing reg in insn 52
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 58
changing reg in insn 60
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 66
changing reg in insn 68
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 74
changing reg in insn 76
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 82
changing reg in insn 84
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 92
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 98
changing reg in insn 100
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 106
changing reg in insn 108
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 114
changing reg in insn 116
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 122
changing reg in insn 124
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 132
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 138
changing reg in insn 140
changing reg in insn 137
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 146
changing reg in insn 149
changing reg in insn 145
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 147
changing reg in insn 148
changing reg in insn 151
changing reg in insn 150
changing reg in insn 151
changing reg in insn 153
changing reg in insn 152
changing reg in insn 153
changing reg in insn 157
changing reg in insn 159
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 174
changing reg in insn 176
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 176
changing reg in insn 179
changing reg in insn 177
changing reg in insn 178
changing reg in insn 183
changing reg in insn 184
changing reg in insn 187
changing reg in insn 185
changing reg in insn 186
changing reg in insn 191
changing reg in insn 192
changing reg in insn 193
changing reg in insn 194
changing reg in insn 195
changing reg in insn 196
changing reg in insn 198
changing reg in insn 200
changing reg in insn 197
changing reg in insn 198
changing reg in insn 199
changing reg in insn 200
deleting insn with uid = 148.
deleting insn with uid = 153.
starting the processing of deferred insns
ending the processing of deferred insns


trap_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;;  ref usage 	r0={94d,93u} r1={27d,26u} r2={2d,60u} r3={20d,20u} r4={20d,20u} r7={1d,16u} r17={34d,1u} r19={2e} 
;;    total ref usage 436{198d,236u,2e} in 190{190 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 207 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 207 3 2 2 (parallel [
            (set (reg:SI 2 cx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 207 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 0 ax [130])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 4 si [orig:83 _1 ] [83])
        (reg:SI 0 ax [130])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
        (nil)))
(insn 7 6 8 2 (set (reg:SI 0 ax [131])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 3 bx [orig:84 _2 ] [84])
        (plus:SI (reg:SI 0 ax [131])
            (const_int 4 [0x4]))) "kernel/traps.c":182:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 4 [0x4])))
        (nil)))
(insn 9 8 10 2 (set (reg:SI 0 ax [133])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("divide_error") [flags 0x41]  <function_decl 0x74580433bd00 divide_error>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 1 dx [132])
        (reg:SI 0 ax [133])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("divide_error") [flags 0x41]  <function_decl 0x74580433bd00 divide_error>)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 0 ax [134])
        (const_int 524288 [0x80000])) "kernel/traps.c":182:5 75 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 4 si [orig:83 _1 ] [83]) [0 MEM[(char *)_1]+0 S1 A8])
                    (mem:QI (reg/f:SI 3 bx [orig:84 _2 ] [84]) [0 *_2+0 S1 A8])
                    (reg/f:SI 1 dx [132])
                    (reg:SI 0 ax [134])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:182)
                    (asm_input:QI ("o") kernel/traps.c:182)
                    (asm_input:QI ("o") kernel/traps.c:182)
                    (asm_input:SI ("d") kernel/traps.c:182)
                    (asm_input:SI ("a") kernel/traps.c:182)
                ]
                 [] kernel/traps.c:182)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":182:5 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 ax [135])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 3 bx [orig:85 _3 ] [85])
        (plus:SI (reg:SI 0 ax [135])
            (const_int 8 [0x8]))) "kernel/traps.c":183:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 8 [0x8])))
        (nil)))
(insn 15 14 16 2 (set (reg:SI 0 ax [136])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 4 si [orig:86 _4 ] [86])
        (plus:SI (reg:SI 0 ax [136])
            (const_int 12 [0xc]))) "kernel/traps.c":183:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 12 [0xc])))
        (nil)))
(insn 17 16 18 2 (set (reg:SI 0 ax [138])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("debug") [flags 0x41]  <function_decl 0x74580433be00 debug>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 1 dx [137])
        (reg:SI 0 ax [138])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("debug") [flags 0x41]  <function_decl 0x74580433be00 debug>)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 0 ax [139])
        (const_int 524288 [0x80000])) "kernel/traps.c":183:5 75 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:85 _3 ] [85]) [0 MEM[(char *)_3]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:86 _4 ] [86]) [0 *_4+0 S1 A8])
                    (reg/f:SI 1 dx [137])
                    (reg:SI 0 ax [139])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:183)
                    (asm_input:QI ("o") kernel/traps.c:183)
                    (asm_input:QI ("o") kernel/traps.c:183)
                    (asm_input:SI ("d") kernel/traps.c:183)
                    (asm_input:SI ("a") kernel/traps.c:183)
                ]
                 [] kernel/traps.c:183)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":183:5 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 0 ax [140])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 3 bx [orig:87 _5 ] [87])
        (plus:SI (reg:SI 0 ax [140])
            (const_int 16 [0x10]))) "kernel/traps.c":184:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 16 [0x10])))
        (nil)))
(insn 23 22 24 2 (set (reg:SI 0 ax [141])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 4 si [orig:88 _6 ] [88])
        (plus:SI (reg:SI 0 ax [141])
            (const_int 20 [0x14]))) "kernel/traps.c":184:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 20 [0x14])))
        (nil)))
(insn 25 24 26 2 (set (reg:SI 0 ax [143])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("nmi") [flags 0x41]  <function_decl 0x74580433bf00 nmi>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:SI 1 dx [142])
        (reg:SI 0 ax [143])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("nmi") [flags 0x41]  <function_decl 0x74580433bf00 nmi>)
        (nil)))
(insn 27 26 28 2 (set (reg:SI 0 ax [144])
        (const_int 524288 [0x80000])) "kernel/traps.c":184:5 75 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:87 _5 ] [87]) [0 MEM[(char *)_5]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:88 _6 ] [88]) [0 *_6+0 S1 A8])
                    (reg/f:SI 1 dx [142])
                    (reg:SI 0 ax [144])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:184)
                    (asm_input:QI ("o") kernel/traps.c:184)
                    (asm_input:QI ("o") kernel/traps.c:184)
                    (asm_input:SI ("d") kernel/traps.c:184)
                    (asm_input:SI ("a") kernel/traps.c:184)
                ]
                 [] kernel/traps.c:184)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":184:5 -1
     (nil))
(insn 29 28 30 2 (set (reg:SI 0 ax [145])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg/f:SI 3 bx [orig:89 _7 ] [89])
        (plus:SI (reg:SI 0 ax [145])
            (const_int 24 [0x18]))) "kernel/traps.c":185:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 24 [0x18])))
        (nil)))
(insn 31 30 32 2 (set (reg:SI 0 ax [146])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:SI 4 si [orig:90 _8 ] [90])
        (plus:SI (reg:SI 0 ax [146])
            (const_int 28 [0x1c]))) "kernel/traps.c":185:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 28 [0x1c])))
        (nil)))
(insn 33 32 34 2 (set (reg:SI 0 ax [148])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("int3") [flags 0x41]  <function_decl 0x74580433ba00 int3>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg/f:SI 1 dx [147])
        (reg:SI 0 ax [148])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("int3") [flags 0x41]  <function_decl 0x74580433ba00 int3>)
        (nil)))
(insn 35 34 36 2 (set (reg:SI 0 ax [149])
        (const_int 524288 [0x80000])) "kernel/traps.c":185:5 75 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -4352 [0xffffffffffffef00])
                    (mem:QI (reg/f:SI 3 bx [orig:89 _7 ] [89]) [0 MEM[(char *)_7]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:90 _8 ] [90]) [0 *_8+0 S1 A8])
                    (reg/f:SI 1 dx [147])
                    (reg:SI 0 ax [149])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:185)
                    (asm_input:QI ("o") kernel/traps.c:185)
                    (asm_input:QI ("o") kernel/traps.c:185)
                    (asm_input:SI ("d") kernel/traps.c:185)
                    (asm_input:SI ("a") kernel/traps.c:185)
                ]
                 [] kernel/traps.c:185)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":185:5 -1
     (nil))
(insn 37 36 38 2 (set (reg:SI 0 ax [150])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg/f:SI 3 bx [orig:91 _9 ] [91])
        (plus:SI (reg:SI 0 ax [150])
            (const_int 32 [0x20]))) "kernel/traps.c":186:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 32 [0x20])))
        (nil)))
(insn 39 38 40 2 (set (reg:SI 0 ax [151])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (set (reg/f:SI 4 si [orig:92 _10 ] [92])
        (plus:SI (reg:SI 0 ax [151])
            (const_int 36 [0x24]))) "kernel/traps.c":186:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 36 [0x24])))
        (nil)))
(insn 41 40 42 2 (set (reg:SI 0 ax [153])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("overflow") [flags 0x41]  <function_decl 0x74580433bb00 overflow>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg/f:SI 1 dx [152])
        (reg:SI 0 ax [153])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("overflow") [flags 0x41]  <function_decl 0x74580433bb00 overflow>)
        (nil)))
(insn 43 42 44 2 (set (reg:SI 0 ax [154])
        (const_int 524288 [0x80000])) "kernel/traps.c":186:5 75 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -4352 [0xffffffffffffef00])
                    (mem:QI (reg/f:SI 3 bx [orig:91 _9 ] [91]) [0 MEM[(char *)_9]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:92 _10 ] [92]) [0 *_10+0 S1 A8])
                    (reg/f:SI 1 dx [152])
                    (reg:SI 0 ax [154])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:186)
                    (asm_input:QI ("o") kernel/traps.c:186)
                    (asm_input:QI ("o") kernel/traps.c:186)
                    (asm_input:SI ("d") kernel/traps.c:186)
                    (asm_input:SI ("a") kernel/traps.c:186)
                ]
                 [] kernel/traps.c:186)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":186:5 -1
     (nil))
(insn 45 44 46 2 (set (reg:SI 0 ax [155])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg/f:SI 3 bx [orig:93 _11 ] [93])
        (plus:SI (reg:SI 0 ax [155])
            (const_int 40 [0x28]))) "kernel/traps.c":187:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 40 [0x28])))
        (nil)))
(insn 47 46 48 2 (set (reg:SI 0 ax [156])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 48 47 49 2 (set (reg/f:SI 4 si [orig:94 _12 ] [94])
        (plus:SI (reg:SI 0 ax [156])
            (const_int 44 [0x2c]))) "kernel/traps.c":187:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 44 [0x2c])))
        (nil)))
(insn 49 48 50 2 (set (reg:SI 0 ax [158])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("bounds") [flags 0x41]  <function_decl 0x74580433e000 bounds>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 50 49 51 2 (set (reg/f:SI 1 dx [157])
        (reg:SI 0 ax [158])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("bounds") [flags 0x41]  <function_decl 0x74580433e000 bounds>)
        (nil)))
(insn 51 50 52 2 (set (reg:SI 0 ax [159])
        (const_int 524288 [0x80000])) "kernel/traps.c":187:5 75 {*movsi_internal}
     (nil))
(insn 52 51 53 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -4352 [0xffffffffffffef00])
                    (mem:QI (reg/f:SI 3 bx [orig:93 _11 ] [93]) [0 MEM[(char *)_11]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:94 _12 ] [94]) [0 *_12+0 S1 A8])
                    (reg/f:SI 1 dx [157])
                    (reg:SI 0 ax [159])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:187)
                    (asm_input:QI ("o") kernel/traps.c:187)
                    (asm_input:QI ("o") kernel/traps.c:187)
                    (asm_input:SI ("d") kernel/traps.c:187)
                    (asm_input:SI ("a") kernel/traps.c:187)
                ]
                 [] kernel/traps.c:187)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":187:5 -1
     (nil))
(insn 53 52 54 2 (set (reg:SI 0 ax [160])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 54 53 55 2 (set (reg/f:SI 3 bx [orig:95 _13 ] [95])
        (plus:SI (reg:SI 0 ax [160])
            (const_int 48 [0x30]))) "kernel/traps.c":188:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 48 [0x30])))
        (nil)))
(insn 55 54 56 2 (set (reg:SI 0 ax [161])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 56 55 57 2 (set (reg/f:SI 4 si [orig:96 _14 ] [96])
        (plus:SI (reg:SI 0 ax [161])
            (const_int 52 [0x34]))) "kernel/traps.c":188:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 52 [0x34])))
        (nil)))
(insn 57 56 58 2 (set (reg:SI 0 ax [163])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("invalid_op") [flags 0x41]  <function_decl 0x74580433e100 invalid_op>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 58 57 59 2 (set (reg/f:SI 1 dx [162])
        (reg:SI 0 ax [163])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("invalid_op") [flags 0x41]  <function_decl 0x74580433e100 invalid_op>)
        (nil)))
(insn 59 58 60 2 (set (reg:SI 0 ax [164])
        (const_int 524288 [0x80000])) "kernel/traps.c":188:5 75 {*movsi_internal}
     (nil))
(insn 60 59 61 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:95 _13 ] [95]) [0 MEM[(char *)_13]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:96 _14 ] [96]) [0 *_14+0 S1 A8])
                    (reg/f:SI 1 dx [162])
                    (reg:SI 0 ax [164])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:188)
                    (asm_input:QI ("o") kernel/traps.c:188)
                    (asm_input:QI ("o") kernel/traps.c:188)
                    (asm_input:SI ("d") kernel/traps.c:188)
                    (asm_input:SI ("a") kernel/traps.c:188)
                ]
                 [] kernel/traps.c:188)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":188:5 -1
     (nil))
(insn 61 60 62 2 (set (reg:SI 0 ax [165])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 62 61 63 2 (set (reg/f:SI 3 bx [orig:97 _15 ] [97])
        (plus:SI (reg:SI 0 ax [165])
            (const_int 56 [0x38]))) "kernel/traps.c":189:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 56 [0x38])))
        (nil)))
(insn 63 62 64 2 (set (reg:SI 0 ax [166])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 64 63 65 2 (set (reg/f:SI 4 si [orig:98 _16 ] [98])
        (plus:SI (reg:SI 0 ax [166])
            (const_int 60 [0x3c]))) "kernel/traps.c":189:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 60 [0x3c])))
        (nil)))
(insn 65 64 66 2 (set (reg:SI 0 ax [168])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("device_not_available") [flags 0x41]  <function_decl 0x74580433e200 device_not_available>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg/f:SI 1 dx [167])
        (reg:SI 0 ax [168])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("device_not_available") [flags 0x41]  <function_decl 0x74580433e200 device_not_available>)
        (nil)))
(insn 67 66 68 2 (set (reg:SI 0 ax [169])
        (const_int 524288 [0x80000])) "kernel/traps.c":189:5 75 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:97 _15 ] [97]) [0 MEM[(char *)_15]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:98 _16 ] [98]) [0 *_16+0 S1 A8])
                    (reg/f:SI 1 dx [167])
                    (reg:SI 0 ax [169])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:189)
                    (asm_input:QI ("o") kernel/traps.c:189)
                    (asm_input:QI ("o") kernel/traps.c:189)
                    (asm_input:SI ("d") kernel/traps.c:189)
                    (asm_input:SI ("a") kernel/traps.c:189)
                ]
                 [] kernel/traps.c:189)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":189:5 -1
     (nil))
(insn 69 68 70 2 (set (reg:SI 0 ax [170])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (set (reg/f:SI 3 bx [orig:99 _17 ] [99])
        (plus:SI (reg:SI 0 ax [170])
            (const_int 64 [0x40]))) "kernel/traps.c":190:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 64 [0x40])))
        (nil)))
(insn 71 70 72 2 (set (reg:SI 0 ax [171])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 72 71 73 2 (set (reg/f:SI 4 si [orig:100 _18 ] [100])
        (plus:SI (reg:SI 0 ax [171])
            (const_int 68 [0x44]))) "kernel/traps.c":190:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 68 [0x44])))
        (nil)))
(insn 73 72 74 2 (set (reg:SI 0 ax [173])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("double_fault") [flags 0x41]  <function_decl 0x74580433e300 double_fault>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 74 73 75 2 (set (reg/f:SI 1 dx [172])
        (reg:SI 0 ax [173])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("double_fault") [flags 0x41]  <function_decl 0x74580433e300 double_fault>)
        (nil)))
(insn 75 74 76 2 (set (reg:SI 0 ax [174])
        (const_int 524288 [0x80000])) "kernel/traps.c":190:5 75 {*movsi_internal}
     (nil))
(insn 76 75 77 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:99 _17 ] [99]) [0 MEM[(char *)_17]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:100 _18 ] [100]) [0 *_18+0 S1 A8])
                    (reg/f:SI 1 dx [172])
                    (reg:SI 0 ax [174])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:190)
                    (asm_input:QI ("o") kernel/traps.c:190)
                    (asm_input:QI ("o") kernel/traps.c:190)
                    (asm_input:SI ("d") kernel/traps.c:190)
                    (asm_input:SI ("a") kernel/traps.c:190)
                ]
                 [] kernel/traps.c:190)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":190:5 -1
     (nil))
(insn 77 76 78 2 (set (reg:SI 0 ax [175])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 78 77 79 2 (set (reg/f:SI 3 bx [orig:101 _19 ] [101])
        (plus:SI (reg:SI 0 ax [175])
            (const_int 72 [0x48]))) "kernel/traps.c":191:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 72 [0x48])))
        (nil)))
(insn 79 78 80 2 (set (reg:SI 0 ax [176])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 80 79 81 2 (set (reg/f:SI 4 si [orig:102 _20 ] [102])
        (plus:SI (reg:SI 0 ax [176])
            (const_int 76 [0x4c]))) "kernel/traps.c":191:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 76 [0x4c])))
        (nil)))
(insn 81 80 82 2 (set (reg:SI 0 ax [178])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("coprocessor_segment_overrun") [flags 0x41]  <function_decl 0x74580433e400 coprocessor_segment_overrun>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 82 81 83 2 (set (reg/f:SI 1 dx [177])
        (reg:SI 0 ax [178])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("coprocessor_segment_overrun") [flags 0x41]  <function_decl 0x74580433e400 coprocessor_segment_overrun>)
        (nil)))
(insn 83 82 84 2 (set (reg:SI 0 ax [179])
        (const_int 524288 [0x80000])) "kernel/traps.c":191:5 75 {*movsi_internal}
     (nil))
(insn 84 83 85 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:101 _19 ] [101]) [0 MEM[(char *)_19]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:102 _20 ] [102]) [0 *_20+0 S1 A8])
                    (reg/f:SI 1 dx [177])
                    (reg:SI 0 ax [179])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:191)
                    (asm_input:QI ("o") kernel/traps.c:191)
                    (asm_input:QI ("o") kernel/traps.c:191)
                    (asm_input:SI ("d") kernel/traps.c:191)
                    (asm_input:SI ("a") kernel/traps.c:191)
                ]
                 [] kernel/traps.c:191)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":191:5 -1
     (nil))
(insn 85 84 86 2 (set (reg:SI 0 ax [180])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 86 85 87 2 (set (reg/f:SI 3 bx [orig:103 _21 ] [103])
        (plus:SI (reg:SI 0 ax [180])
            (const_int 80 [0x50]))) "kernel/traps.c":192:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 80 [0x50])))
        (nil)))
(insn 87 86 88 2 (set (reg:SI 0 ax [181])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 88 87 89 2 (set (reg/f:SI 4 si [orig:104 _22 ] [104])
        (plus:SI (reg:SI 0 ax [181])
            (const_int 84 [0x54]))) "kernel/traps.c":192:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 84 [0x54])))
        (nil)))
(insn 89 88 90 2 (set (reg:SI 0 ax [183])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("invalid_TSS") [flags 0x41]  <function_decl 0x74580433e500 invalid_TSS>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 90 89 91 2 (set (reg/f:SI 1 dx [182])
        (reg:SI 0 ax [183])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("invalid_TSS") [flags 0x41]  <function_decl 0x74580433e500 invalid_TSS>)
        (nil)))
(insn 91 90 92 2 (set (reg:SI 0 ax [184])
        (const_int 524288 [0x80000])) "kernel/traps.c":192:5 75 {*movsi_internal}
     (nil))
(insn 92 91 93 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:103 _21 ] [103]) [0 MEM[(char *)_21]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:104 _22 ] [104]) [0 *_22+0 S1 A8])
                    (reg/f:SI 1 dx [182])
                    (reg:SI 0 ax [184])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:192)
                    (asm_input:QI ("o") kernel/traps.c:192)
                    (asm_input:QI ("o") kernel/traps.c:192)
                    (asm_input:SI ("d") kernel/traps.c:192)
                    (asm_input:SI ("a") kernel/traps.c:192)
                ]
                 [] kernel/traps.c:192)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":192:5 -1
     (nil))
(insn 93 92 94 2 (set (reg:SI 0 ax [185])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 94 93 95 2 (set (reg/f:SI 3 bx [orig:105 _23 ] [105])
        (plus:SI (reg:SI 0 ax [185])
            (const_int 88 [0x58]))) "kernel/traps.c":193:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 88 [0x58])))
        (nil)))
(insn 95 94 96 2 (set (reg:SI 0 ax [186])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 96 95 97 2 (set (reg/f:SI 4 si [orig:106 _24 ] [106])
        (plus:SI (reg:SI 0 ax [186])
            (const_int 92 [0x5c]))) "kernel/traps.c":193:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 92 [0x5c])))
        (nil)))
(insn 97 96 98 2 (set (reg:SI 0 ax [188])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("segment_not_present") [flags 0x41]  <function_decl 0x74580433e600 segment_not_present>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 98 97 99 2 (set (reg/f:SI 1 dx [187])
        (reg:SI 0 ax [188])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("segment_not_present") [flags 0x41]  <function_decl 0x74580433e600 segment_not_present>)
        (nil)))
(insn 99 98 100 2 (set (reg:SI 0 ax [189])
        (const_int 524288 [0x80000])) "kernel/traps.c":193:5 75 {*movsi_internal}
     (nil))
(insn 100 99 101 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:105 _23 ] [105]) [0 MEM[(char *)_23]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:106 _24 ] [106]) [0 *_24+0 S1 A8])
                    (reg/f:SI 1 dx [187])
                    (reg:SI 0 ax [189])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:193)
                    (asm_input:QI ("o") kernel/traps.c:193)
                    (asm_input:QI ("o") kernel/traps.c:193)
                    (asm_input:SI ("d") kernel/traps.c:193)
                    (asm_input:SI ("a") kernel/traps.c:193)
                ]
                 [] kernel/traps.c:193)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":193:5 -1
     (nil))
(insn 101 100 102 2 (set (reg:SI 0 ax [190])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 102 101 103 2 (set (reg/f:SI 3 bx [orig:107 _25 ] [107])
        (plus:SI (reg:SI 0 ax [190])
            (const_int 96 [0x60]))) "kernel/traps.c":194:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 96 [0x60])))
        (nil)))
(insn 103 102 104 2 (set (reg:SI 0 ax [191])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 104 103 105 2 (set (reg/f:SI 4 si [orig:108 _26 ] [108])
        (plus:SI (reg:SI 0 ax [191])
            (const_int 100 [0x64]))) "kernel/traps.c":194:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 100 [0x64])))
        (nil)))
(insn 105 104 106 2 (set (reg:SI 0 ax [193])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("stack_segment") [flags 0x41]  <function_decl 0x74580433e700 stack_segment>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 106 105 107 2 (set (reg/f:SI 1 dx [192])
        (reg:SI 0 ax [193])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("stack_segment") [flags 0x41]  <function_decl 0x74580433e700 stack_segment>)
        (nil)))
(insn 107 106 108 2 (set (reg:SI 0 ax [194])
        (const_int 524288 [0x80000])) "kernel/traps.c":194:5 75 {*movsi_internal}
     (nil))
(insn 108 107 109 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:107 _25 ] [107]) [0 MEM[(char *)_25]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:108 _26 ] [108]) [0 *_26+0 S1 A8])
                    (reg/f:SI 1 dx [192])
                    (reg:SI 0 ax [194])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:194)
                    (asm_input:QI ("o") kernel/traps.c:194)
                    (asm_input:QI ("o") kernel/traps.c:194)
                    (asm_input:SI ("d") kernel/traps.c:194)
                    (asm_input:SI ("a") kernel/traps.c:194)
                ]
                 [] kernel/traps.c:194)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":194:5 -1
     (nil))
(insn 109 108 110 2 (set (reg:SI 0 ax [195])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 110 109 111 2 (set (reg/f:SI 3 bx [orig:109 _27 ] [109])
        (plus:SI (reg:SI 0 ax [195])
            (const_int 104 [0x68]))) "kernel/traps.c":195:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 104 [0x68])))
        (nil)))
(insn 111 110 112 2 (set (reg:SI 0 ax [196])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 112 111 113 2 (set (reg/f:SI 4 si [orig:110 _28 ] [110])
        (plus:SI (reg:SI 0 ax [196])
            (const_int 108 [0x6c]))) "kernel/traps.c":195:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 108 [0x6c])))
        (nil)))
(insn 113 112 114 2 (set (reg:SI 0 ax [198])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("general_protection") [flags 0x41]  <function_decl 0x74580433e800 general_protection>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 114 113 115 2 (set (reg/f:SI 1 dx [197])
        (reg:SI 0 ax [198])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("general_protection") [flags 0x41]  <function_decl 0x74580433e800 general_protection>)
        (nil)))
(insn 115 114 116 2 (set (reg:SI 0 ax [199])
        (const_int 524288 [0x80000])) "kernel/traps.c":195:5 75 {*movsi_internal}
     (nil))
(insn 116 115 117 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:109 _27 ] [109]) [0 MEM[(char *)_27]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:110 _28 ] [110]) [0 *_28+0 S1 A8])
                    (reg/f:SI 1 dx [197])
                    (reg:SI 0 ax [199])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:195)
                    (asm_input:QI ("o") kernel/traps.c:195)
                    (asm_input:QI ("o") kernel/traps.c:195)
                    (asm_input:SI ("d") kernel/traps.c:195)
                    (asm_input:SI ("a") kernel/traps.c:195)
                ]
                 [] kernel/traps.c:195)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":195:5 -1
     (nil))
(insn 117 116 118 2 (set (reg:SI 0 ax [200])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 118 117 119 2 (set (reg/f:SI 3 bx [orig:111 _29 ] [111])
        (plus:SI (reg:SI 0 ax [200])
            (const_int 112 [0x70]))) "kernel/traps.c":196:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 112 [0x70])))
        (nil)))
(insn 119 118 120 2 (set (reg:SI 0 ax [201])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 120 119 121 2 (set (reg/f:SI 4 si [orig:112 _30 ] [112])
        (plus:SI (reg:SI 0 ax [201])
            (const_int 116 [0x74]))) "kernel/traps.c":196:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 116 [0x74])))
        (nil)))
(insn 121 120 122 2 (set (reg:SI 0 ax [203])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("page_fault") [flags 0x41]  <function_decl 0x74580433e900 page_fault>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 122 121 123 2 (set (reg/f:SI 1 dx [202])
        (reg:SI 0 ax [203])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("page_fault") [flags 0x41]  <function_decl 0x74580433e900 page_fault>)
        (nil)))
(insn 123 122 124 2 (set (reg:SI 0 ax [204])
        (const_int 524288 [0x80000])) "kernel/traps.c":196:5 75 {*movsi_internal}
     (nil))
(insn 124 123 125 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:111 _29 ] [111]) [0 MEM[(char *)_29]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:112 _30 ] [112]) [0 *_30+0 S1 A8])
                    (reg/f:SI 1 dx [202])
                    (reg:SI 0 ax [204])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:196)
                    (asm_input:QI ("o") kernel/traps.c:196)
                    (asm_input:QI ("o") kernel/traps.c:196)
                    (asm_input:SI ("d") kernel/traps.c:196)
                    (asm_input:SI ("a") kernel/traps.c:196)
                ]
                 [] kernel/traps.c:196)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":196:5 -1
     (nil))
(insn 125 124 126 2 (set (reg:SI 0 ax [205])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 126 125 127 2 (set (reg/f:SI 3 bx [orig:113 _31 ] [113])
        (plus:SI (reg:SI 0 ax [205])
            (const_int 120 [0x78]))) "kernel/traps.c":197:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 120 [0x78])))
        (nil)))
(insn 127 126 128 2 (set (reg:SI 0 ax [206])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 128 127 129 2 (set (reg/f:SI 4 si [orig:114 _32 ] [114])
        (plus:SI (reg:SI 0 ax [206])
            (const_int 124 [0x7c]))) "kernel/traps.c":197:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 124 [0x7c])))
        (nil)))
(insn 129 128 130 2 (set (reg:SI 0 ax [208])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x74580433eb00 reserved>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 130 129 131 2 (set (reg/f:SI 1 dx [207])
        (reg:SI 0 ax [208])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x74580433eb00 reserved>)
        (nil)))
(insn 131 130 132 2 (set (reg:SI 0 ax [209])
        (const_int 524288 [0x80000])) "kernel/traps.c":197:5 75 {*movsi_internal}
     (nil))
(insn 132 131 133 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:113 _31 ] [113]) [0 MEM[(char *)_31]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:114 _32 ] [114]) [0 *_32+0 S1 A8])
                    (reg/f:SI 1 dx [207])
                    (reg:SI 0 ax [209])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:197)
                    (asm_input:QI ("o") kernel/traps.c:197)
                    (asm_input:QI ("o") kernel/traps.c:197)
                    (asm_input:SI ("d") kernel/traps.c:197)
                    (asm_input:SI ("a") kernel/traps.c:197)
                ]
                 [] kernel/traps.c:197)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":197:5 -1
     (nil))
(insn 133 132 134 2 (set (reg:SI 0 ax [210])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 134 133 135 2 (set (reg/f:SI 3 bx [orig:115 _33 ] [115])
        (plus:SI (reg:SI 0 ax [210])
            (const_int 128 [0x80]))) "kernel/traps.c":198:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 128 [0x80])))
        (nil)))
(insn 135 134 136 2 (set (reg:SI 0 ax [211])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 136 135 137 2 (set (reg/f:SI 4 si [orig:116 _34 ] [116])
        (plus:SI (reg:SI 0 ax [211])
            (const_int 132 [0x84]))) "kernel/traps.c":198:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 132 [0x84])))
        (nil)))
(insn 137 136 138 2 (set (reg:SI 0 ax [213])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("coprocessor_error") [flags 0x41]  <function_decl 0x74580433ea00 coprocessor_error>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 138 137 139 2 (set (reg/f:SI 1 dx [212])
        (reg:SI 0 ax [213])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("coprocessor_error") [flags 0x41]  <function_decl 0x74580433ea00 coprocessor_error>)
        (nil)))
(insn 139 138 140 2 (set (reg:SI 0 ax [214])
        (const_int 524288 [0x80000])) "kernel/traps.c":198:5 75 {*movsi_internal}
     (nil))
(insn 140 139 141 2 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:115 _33 ] [115]) [0 MEM[(char *)_33]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:116 _34 ] [116]) [0 *_34+0 S1 A8])
                    (reg/f:SI 1 dx [212])
                    (reg:SI 0 ax [214])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:198)
                    (asm_input:QI ("o") kernel/traps.c:198)
                    (asm_input:QI ("o") kernel/traps.c:198)
                    (asm_input:SI ("d") kernel/traps.c:198)
                    (asm_input:SI ("a") kernel/traps.c:198)
                ]
                 [] kernel/traps.c:198)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":198:5 -1
     (nil))
(insn 141 140 203 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])
        (const_int 17 [0x11])) "kernel/traps.c":200:12 75 {*movsi_internal}
     (nil))
(jump_insn 203 141 204 2 (set (pc)
        (label_ref 161)) "kernel/traps.c":200:5 807 {jump}
     (nil)
 -> 161)
(barrier 204 203 163)
(code_label 163 204 144 3 30 (nil) [1 uses])
(note 144 163 145 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 3 (set (reg:SI 0 ax [216])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 146 145 147 3 (parallel [
            (set (reg:SI 1 dx [215])
                (ashift:SI (reg:SI 0 ax [216])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 147 146 149 3 (set (reg:SI 0 ax [218])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 149 147 150 3 (parallel [
            (set (reg/f:SI 3 bx [orig:117 _35 ] [117])
                (plus:SI (reg:SI 1 dx [215])
                    (reg:SI 0 ax [217])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 209 {*addsi_1}
     (nil))
(insn 150 149 151 3 (set (reg:SI 0 ax [220])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [3 i+0 S4 A32])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 151 150 152 3 (parallel [
            (set (reg:SI 1 dx [219])
                (ashift:SI (reg:SI 0 ax [220])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 655 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 152 151 154 3 (set (reg:SI 0 ax [222])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 154 152 155 3 (parallel [
            (set (reg/f:SI 0 ax [orig:118 _36 ] [118])
                (plus:SI (reg:SI 0 ax [221])
                    (reg:SI 1 dx [219])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 209 {*addsi_1}
     (nil))
(insn 155 154 156 3 (parallel [
            (set (reg/f:SI 4 si [orig:119 _37 ] [119])
                (plus:SI (reg/f:SI 0 ax [orig:118 _36 ] [118])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 209 {*addsi_1}
     (nil))
(insn 156 155 157 3 (set (reg:SI 0 ax [224])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x74580433eb00 reserved>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 157 156 158 3 (set (reg/f:SI 1 dx [223])
        (reg:SI 0 ax [224])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("reserved") [flags 0x41]  <function_decl 0x74580433eb00 reserved>)
        (nil)))
(insn 158 157 159 3 (set (reg:SI 0 ax [225])
        (const_int 524288 [0x80000])) "kernel/traps.c":201:9 75 {*movsi_internal}
     (nil))
(insn 159 158 160 3 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:117 _35 ] [117]) [0 MEM[(char *)_35]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:119 _37 ] [119]) [0 *_37+0 S1 A8])
                    (reg/f:SI 1 dx [223])
                    (reg:SI 0 ax [225])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:201)
                    (asm_input:QI ("o") kernel/traps.c:201)
                    (asm_input:QI ("o") kernel/traps.c:201)
                    (asm_input:SI ("d") kernel/traps.c:201)
                    (asm_input:SI ("a") kernel/traps.c:201)
                ]
                 [] kernel/traps.c:201)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":201:9 -1
     (nil))
(insn 160 159 161 3 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 12 [0xc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 12 [0xc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":200:27 209 {*addsi_1}
     (nil))
(code_label 161 160 162 4 29 (nil) [1 uses])
(note 162 161 166 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 166 162 167 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])) [3 i+0 S4 A32])
            (const_int 47 [0x2f]))) "kernel/traps.c":200:20 11 {*cmpsi_1}
     (nil))
(jump_insn 167 166 168 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "kernel/traps.c":200:20 806 {*jcc}
     (nil)
 -> 163)
(note 168 167 169 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 5 (set (reg:SI 0 ax [226])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 170 169 171 5 (set (reg/f:SI 3 bx [orig:120 _38 ] [120])
        (plus:SI (reg:SI 0 ax [226])
            (const_int 360 [0x168]))) "kernel/traps.c":203:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 360 [0x168])))
        (nil)))
(insn 171 170 172 5 (set (reg:SI 0 ax [227])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 172 171 173 5 (set (reg/f:SI 4 si [orig:121 _39 ] [121])
        (plus:SI (reg:SI 0 ax [227])
            (const_int 364 [0x16c]))) "kernel/traps.c":203:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 364 [0x16c])))
        (nil)))
(insn 173 172 174 5 (set (reg:SI 0 ax [229])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("irq13") [flags 0x41]  <function_decl 0x74580433ed00 irq13>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 174 173 175 5 (set (reg/f:SI 1 dx [228])
        (reg:SI 0 ax [229])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("irq13") [flags 0x41]  <function_decl 0x74580433ed00 irq13>)
        (nil)))
(insn 175 174 176 5 (set (reg:SI 0 ax [230])
        (const_int 524288 [0x80000])) "kernel/traps.c":203:5 75 {*movsi_internal}
     (nil))
(insn 176 175 178 5 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:120 _38 ] [120]) [0 MEM[(char *)_38]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:121 _39 ] [121]) [0 *_39+0 S1 A8])
                    (reg/f:SI 1 dx [228])
                    (reg:SI 0 ax [230])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:203)
                    (asm_input:QI ("o") kernel/traps.c:203)
                    (asm_input:QI ("o") kernel/traps.c:203)
                    (asm_input:SI ("d") kernel/traps.c:203)
                    (asm_input:SI ("a") kernel/traps.c:203)
                ]
                 [] kernel/traps.c:203)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":203:5 -1
     (nil))
(insn 178 176 209 5 (set (reg:SI 0 ax [232])
        (const_int 33 [0x21])) "kernel/traps.c":204:5 75 {*movsi_internal}
     (nil))
(insn 209 178 179 5 (set (reg:SI 1 dx [232])
        (reg:SI 0 ax [232])) "kernel/traps.c":204:5 75 {*movsi_internal}
     (nil))
(insn 179 209 177 5 (parallel [
            (set (reg:QI 0 ax [orig:231 _v ] [231])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 1 dx [232])
                    ]
                     [
                        (asm_input:SI ("d") kernel/traps.c:204)
                    ]
                     [] kernel/traps.c:204))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":204:5 -1
     (nil))
(insn 177 179 180 5 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 11 [0xb])) [0 _v+0 S1 A8])
        (reg:QI 0 ax [orig:231 _v ] [231])) "kernel/traps.c":204:5 77 {*movqi_internal}
     (nil))
(insn 180 177 181 5 (set (reg:QI 0 ax [orig:128 _50 ] [128])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 11 [0xb])) [0 _v+0 S1 A8])) "kernel/traps.c":204:5 77 {*movqi_internal}
     (nil))
(insn 181 180 182 5 (set (reg:SI 0 ax [orig:122 _40 ] [122])
        (zero_extend:SI (reg:QI 0 ax [orig:128 _50 ] [128]))) "kernel/traps.c":204:5 143 {*zero_extendqisi2}
     (nil))
(insn 182 181 183 5 (parallel [
            (set (reg:SI 0 ax [orig:123 _41 ] [123])
                (and:SI (reg:SI 0 ax [orig:122 _40 ] [122])
                    (const_int 251 [0xfb])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":204:5 490 {*andsi_1}
     (nil))
(insn 183 182 184 5 (set (reg:SI 1 dx [233])
        (const_int 33 [0x21])) "kernel/traps.c":204:5 75 {*movsi_internal}
     (nil))
(insn 184 183 186 5 (parallel [
            (asm_operands/v ("outb %%al, %%dx
	jmp 1f
1:	jmp 1f
1:") ("") 0 [
                    (reg:SI 0 ax [orig:123 _41 ] [123])
                    (reg:SI 1 dx [233])
                ]
                 [
                    (asm_input:SI ("a") kernel/traps.c:204)
                    (asm_input:SI ("d") kernel/traps.c:204)
                ]
                 [] kernel/traps.c:204)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":204:5 -1
     (nil))
(insn 186 184 210 5 (set (reg:SI 0 ax [235])
        (const_int 161 [0xa1])) "kernel/traps.c":205:5 75 {*movsi_internal}
     (nil))
(insn 210 186 187 5 (set (reg:SI 1 dx [235])
        (reg:SI 0 ax [235])) "kernel/traps.c":205:5 75 {*movsi_internal}
     (nil))
(insn 187 210 185 5 (parallel [
            (set (reg:QI 0 ax [orig:234 _v ] [234])
                (asm_operands/v:QI ("inb %%dx, %%al
	jmp 1f
1:	jmp 1f
1:") ("=a") 0 [
                        (reg:SI 1 dx [235])
                    ]
                     [
                        (asm_input:SI ("d") kernel/traps.c:205)
                    ]
                     [] kernel/traps.c:205))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":205:5 -1
     (nil))
(insn 185 187 188 5 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 10 [0xa])) [0 _v+0 S1 A16])
        (reg:QI 0 ax [orig:234 _v ] [234])) "kernel/traps.c":205:5 77 {*movqi_internal}
     (nil))
(insn 188 185 189 5 (set (reg:QI 0 ax [orig:129 _52 ] [129])
        (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 10 [0xa])) [0 _v+0 S1 A16])) "kernel/traps.c":205:5 77 {*movqi_internal}
     (nil))
(insn 189 188 190 5 (set (reg:SI 0 ax [orig:124 _42 ] [124])
        (zero_extend:SI (reg:QI 0 ax [orig:129 _52 ] [129]))) "kernel/traps.c":205:5 143 {*zero_extendqisi2}
     (nil))
(insn 190 189 191 5 (parallel [
            (set (reg:SI 0 ax [orig:125 _43 ] [125])
                (and:SI (reg:SI 0 ax [orig:124 _42 ] [124])
                    (const_int 223 [0xdf])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":205:5 490 {*andsi_1}
     (nil))
(insn 191 190 192 5 (set (reg:SI 1 dx [236])
        (const_int 161 [0xa1])) "kernel/traps.c":205:5 75 {*movsi_internal}
     (nil))
(insn 192 191 193 5 (parallel [
            (asm_operands/v ("outb %%al, %%dx") ("") 0 [
                    (reg:SI 0 ax [orig:125 _43 ] [125])
                    (reg:SI 1 dx [236])
                ]
                 [
                    (asm_input:SI ("a") kernel/traps.c:205)
                    (asm_input:SI ("d") kernel/traps.c:205)
                ]
                 [] kernel/traps.c:205)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":205:5 -1
     (nil))
(insn 193 192 194 5 (set (reg:SI 0 ax [237])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (nil))
(insn 194 193 195 5 (set (reg/f:SI 3 bx [orig:126 _44 ] [126])
        (plus:SI (reg:SI 0 ax [237])
            (const_int 312 [0x138]))) "kernel/traps.c":206:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 312 [0x138])))
        (nil)))
(insn 195 194 196 5 (set (reg:SI 0 ax [238])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (nil))
(insn 196 195 197 5 (set (reg/f:SI 4 si [orig:127 _45 ] [127])
        (plus:SI (reg:SI 0 ax [238])
            (const_int 316 [0x13c]))) "kernel/traps.c":206:5 205 {*leasi}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("idt") [flags 0x40]  <var_decl 0x7458057c6e10 idt>)
                (const_int 316 [0x13c])))
        (nil)))
(insn 197 196 198 5 (set (reg:SI 0 ax [240])
        (mem/u/c:SI (plus:SI (reg:SI 2 cx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("parallel_interrupt") [flags 0x41]  <function_decl 0x74580433ec00 parallel_interrupt>)
                        ] UNSPEC_GOT))) [6  S4 A8])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (nil))
(insn 198 197 199 5 (set (reg/f:SI 1 dx [239])
        (reg:SI 0 ax [240])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (expr_list:REG_EQUAL (symbol_ref:SI ("parallel_interrupt") [flags 0x41]  <function_decl 0x74580433ec00 parallel_interrupt>)
        (nil)))
(insn 199 198 200 5 (set (reg:SI 0 ax [241])
        (const_int 524288 [0x80000])) "kernel/traps.c":206:5 75 {*movsi_internal}
     (nil))
(insn 200 199 205 5 (parallel [
            (asm_operands/v ("movw %%dx, %%ax
	movw %0, %%dx
	movl %%eax, %1
	movl %%edx, %2") ("") 0 [
                    (const_int -28928 [0xffffffffffff8f00])
                    (mem:QI (reg/f:SI 3 bx [orig:126 _44 ] [126]) [0 MEM[(char *)_44]+0 S1 A8])
                    (mem:QI (reg/f:SI 4 si [orig:127 _45 ] [127]) [0 *_45+0 S1 A8])
                    (reg/f:SI 1 dx [239])
                    (reg:SI 0 ax [241])
                ]
                 [
                    (asm_input:HI ("i") kernel/traps.c:206)
                    (asm_input:QI ("o") kernel/traps.c:206)
                    (asm_input:QI ("o") kernel/traps.c:206)
                    (asm_input:SI ("d") kernel/traps.c:206)
                    (asm_input:SI ("a") kernel/traps.c:206)
                ]
                 [] kernel/traps.c:206)
            (clobber (reg:CC 17 flags))
        ]) "kernel/traps.c":206:5 -1
     (nil))
(note 205 200 206 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 208 6 (const_int 0 [0]) "kernel/traps.c":207:1 843 {nop}
     (nil))
(note 208 206 0 NOTE_INSN_DELETED)
