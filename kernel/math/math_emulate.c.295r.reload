
;; Function get_fs_byte (get_fs_byte, funcdef_no=1, decl_uid=1332, cgraph_uid=2, symbol_order=1)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) m
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = -2
   Insn 5: point = 5, n_alt = -2
   Insn 7: point = 7, n_alt = 0
   Insn 6: point = 9, n_alt = 0
   Insn 18: point = 10, n_alt = 0
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]
Compressing live ranges: from 11 to 11 - 100%
Ranges after the compression:
 r82: [10..10]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
 r86: [6..7]
 r87: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=8)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=-4, prev_offset=0)
changing reg in insn 18
changing reg in insn 5
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 7
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns


get_fs_byte

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 3 [bx] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={1d} r2={1d} r3={1d,1u} r7={1d,3u} r17={2d} 
;;    total ref usage 19{11d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 18 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 18 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 18 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 0 ax [87])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [2 addr+0 S4 A32])) "include/asm/segment.h":8:5 75 {*movsi_internal}
     (nil))
(insn 7 6 5 2 (parallel [
            (set (reg:QI 0 ax [orig:86 _v ] [86])
                (asm_operands:QI ("movb %%fs:%1, %0") ("=r") 0 [
                        (mem:QI (reg/f:SI 0 ax [87]) [0 *addr_2(D)+0 S1 A8])
                    ]
                     [
                        (asm_input:QI ("m") include/asm/segment.h:8)
                    ]
                     [] include/asm/segment.h:8))
            (clobber (reg:CC 17 flags))
        ]) "include/asm/segment.h":8:5 -1
     (nil))
(insn 5 7 8 2 (set (reg/v:QI 3 bx [orig:83 _v ] [83])
        (reg:QI 0 ax [orig:86 _v ] [86])) "include/asm/segment.h":8:5 77 {*movqi_internal}
     (nil))
(insn 8 5 16 2 (set (reg:QI 0 ax [orig:84 _4 ] [84])
        (reg/v:QI 3 bx [orig:83 _v ] [83])) "include/asm/segment.h":9:12 77 {*movqi_internal}
     (nil))
(insn 16 8 19 2 (use (reg/i:QI 0 ax)) "include/asm/segment.h":10:1 -1
     (nil))
(note 19 16 0 NOTE_INSN_DELETED)

;; Function math_error (math_error, funcdef_no=8, decl_uid=1359, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 16:  (0) =rm  (1) %0  (2) re {*iorsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 5
   Insn 26: point = 0, n_alt = -1
  BB 3
   Insn 17: point = 0, n_alt = 1
   Insn 16: point = 1, n_alt = 0
   Insn 15: point = 3, n_alt = 0
   Insn 14: point = 5, n_alt = 0
   Insn 13: point = 7, n_alt = 0
   Insn 12: point = 9, n_alt = 0
   Insn 11: point = 11, n_alt = 0
  BB 2
   Insn 9: point = 13, n_alt = -1
   Insn 8: point = 13, n_alt = 0
   Insn 7: point = 14, n_alt = 0
   Insn 6: point = 16, n_alt = 0
   Insn 5: point = 17, n_alt = -1
   Insn 27: point = 17, n_alt = 0
 r82: [6..17]
 r83: [13..14]
 r84: [8..9]
 r85: [2..7]
 r86: [0..3]
 r87: [0..1]
 r88: [15..16]
 r89: [10..11]
 r90: [4..5]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r82: [6..15]
 r83: [12..13]
 r84: [8..9]
 r85: [2..7]
 r86: [0..3]
 r87: [0..1]
 r88: [14..15]
 r89: [10..11]
 r90: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=4, prev_offset=4)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 27
changing reg in insn 14
changing reg in insn 11
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 15
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
starting the processing of deferred insns
ending the processing of deferred insns


math_error

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 17 [flags]
;;  ref usage 	r0={4d,5u} r1={7d,6u} r2={1d} r7={1d,5u} r17={4d,1u} 
;;    total ref usage 34{17d,17u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 27 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 27 3 2 2 (parallel [
            (set (reg:SI 0 ax [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(note 2 27 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (parallel [
            (asm_input/v ("fnclex") kernel/math/math_emulate.c:11)
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":11:2 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 1 dx [88])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7752a0f2e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [4  S4 A8])) "kernel/math/math_emulate.c":12:6 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 1 dx [orig:83 last_task_used_math.0_1 ] [83])
        (mem/f/c:SI (reg/f:SI 1 dx [88]) [3 last_task_used_math+0 S4 A32])) "kernel/math/math_emulate.c":12:6 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:83 last_task_used_math.0_1 ] [83])
            (const_int 0 [0]))) "kernel/math/math_emulate.c":12:5 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 25)
            (pc))) "kernel/math/math_emulate.c":12:5 806 {*jcc}
     (nil)
 -> 25)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 1 dx [89])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7752a0f2e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [4  S4 A8])) "kernel/math/math_emulate.c":13:31 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:SI 1 dx [orig:84 last_task_used_math.1_2 ] [84])
        (mem/f/c:SI (reg/f:SI 1 dx [89]) [3 last_task_used_math+0 S4 A32])) "kernel/math/math_emulate.c":13:31 75 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 1 dx [orig:85 _3 ] [85])
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:84 last_task_used_math.1_2 ] [84])
                (const_int 12 [0xc])) [1 last_task_used_math.1_2->signal+0 S4 A32])) "kernel/math/math_emulate.c":13:31 75 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:SI 0 ax [90])
        (mem/u/c:SI (plus:SI (reg:SI 0 ax [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("last_task_used_math") [flags 0x40]  <var_decl 0x7752a0f2e240 last_task_used_math>)
                        ] UNSPEC_GOT))) [4  S4 A8])) "kernel/math/math_emulate.c":13:31 75 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg/f:SI 0 ax [orig:86 last_task_used_math.2_4 ] [86])
        (mem/f/c:SI (reg/f:SI 0 ax [90]) [3 last_task_used_math+0 S4 A32])) "kernel/math/math_emulate.c":13:31 75 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:SI 1 dx [orig:87 _5 ] [87])
                (ior:SI (reg:SI 1 dx [orig:85 _3 ] [85])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":13:31 520 {*iorsi_1}
     (nil))
(insn 17 16 25 3 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:86 last_task_used_math.2_4 ] [86])
                (const_int 12 [0xc])) [1 last_task_used_math.2_4->signal+0 S4 A32])
        (reg:SI 1 dx [orig:87 _5 ] [87])) "kernel/math/math_emulate.c":13:31 75 {*movsi_internal}
     (nil))
(code_label 25 17 24 5 5 (nil) [1 uses])
(note 24 25 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 24 20 5 (const_int 0 [0]) "kernel/math/math_emulate.c":14:1 843 {nop}
     (nil))
(code_label 20 26 21 4 3 (nil) [0 uses])
(note 21 20 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 28 21 0 NOTE_INSN_DELETED)

;; Function math_emulate (math_emulate, funcdef_no=9, decl_uid=1377, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r {*set_got}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) r {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rm  (1) rn {*cmphi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-4)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) Ts {*leasi} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) lBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 42:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 45:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 48:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 50:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=21,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 52:  (0) r  (1) r  (2) le {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 55:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (1) lBwBz {*call_value} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 58:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-16)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 60:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 64:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) rm {*zero_extendhisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-12)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-20)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) Ts {*leasi} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =<  (1) ri*m {*pushsi2} (sp_off=-28)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (1) lBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 75:  (0) =rm  (1) %0  (2) re {*addsi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =rm  (1) %0  (2) re {*iorsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 86: point = 0, n_alt = -1
  BB 4
   Insn 82: point = 0, n_alt = 1
   Insn 81: point = 1, n_alt = 0
   Insn 80: point = 3, n_alt = 0
   Insn 79: point = 5, n_alt = 0
   Insn 78: point = 7, n_alt = 0
   Insn 77: point = 9, n_alt = 0
   Insn 76: point = 11, n_alt = 0
   Insn 75: point = 12, n_alt = 0
   Insn 74: point = 12, n_alt = 0
   Insn 73: point = 12, n_alt = -2
   Insn 72: point = 12, n_alt = 0
   Insn 71: point = 13, n_alt = 0
   Insn 70: point = 14, n_alt = 0
   Insn 69: point = 15, n_alt = 0
   Insn 68: point = 16, n_alt = 0
   Insn 67: point = 17, n_alt = 0
   Insn 66: point = 18, n_alt = 0
   Insn 65: point = 18, n_alt = 0
   Insn 64: point = 19, n_alt = 3
   Insn 63: point = 21, n_alt = 0
   Insn 62: point = 22, n_alt = 0
   Insn 61: point = 23, n_alt = 0
   Insn 60: point = 24, n_alt = 8
   Insn 59: point = 25, n_alt = -2
   Insn 58: point = 26, n_alt = 0
   Insn 57: point = 26, n_alt = 0
   Insn 56: point = 26, n_alt = 0
   Insn 55: point = 27, n_alt = 0
   Insn 54: point = 27, n_alt = -2
   Insn 53: point = 29, n_alt = 1
   Insn 52: point = 30, n_alt = 3
   Insn 51: point = 31, n_alt = 0
   Insn 50: point = 32, n_alt = 8
   Insn 49: point = 33, n_alt = -2
   Insn 48: point = 34, n_alt = 0
   Insn 47: point = 34, n_alt = 0
   Insn 46: point = 34, n_alt = 0
   Insn 45: point = 35, n_alt = 0
   Insn 44: point = 35, n_alt = -2
   Insn 43: point = 37, n_alt = 1
   Insn 42: point = 38, n_alt = 3
   Insn 41: point = 39, n_alt = 0
  BB 3
   Insn 38: point = 41, n_alt = 0
   Insn 37: point = 41, n_alt = 0
   Insn 36: point = 41, n_alt = -2
   Insn 35: point = 41, n_alt = 0
   Insn 34: point = 42, n_alt = 0
   Insn 33: point = 43, n_alt = 0
   Insn 32: point = 43, n_alt = 0
   Insn 31: point = 43, n_alt = 0
   Insn 30: point = 43, n_alt = -2
   Insn 29: point = 43, n_alt = 0
   Insn 28: point = 44, n_alt = 0
   Insn 27: point = 45, n_alt = 0
   Insn 26: point = 46, n_alt = 0
   Insn 25: point = 47, n_alt = 0
   Insn 24: point = 47, n_alt = 0
   Insn 23: point = 48, n_alt = 0
  BB 2
   Insn 21: point = 50, n_alt = -1
   Insn 20: point = 50, n_alt = 0
   Insn 16: point = 50, n_alt = 3
   Insn 15: point = 51, n_alt = 0
   Insn 13: point = 53, n_alt = 3
   Insn 12: point = 54, n_alt = 0
   Insn 10: point = 56, n_alt = 3
   Insn 9: point = 57, n_alt = 0
   Insn 7: point = 59, n_alt = 3
   Insn 6: point = 60, n_alt = 0
   Insn 4: point = 62, n_alt = 3
   Insn 3: point = 63, n_alt = 0
   Insn 14: point = 65, n_alt = 0
   Insn 11: point = 66, n_alt = 0
   Insn 8: point = 67, n_alt = 0
   Insn 5: point = 68, n_alt = 0
   Insn 2: point = 69, n_alt = 0
   Insn 87: point = 70, n_alt = 0
 r82: [6..70]
 r83: [46..48]
 r84: [45..47]
 r85: [36..39]
 r86: [37..38]
 r87: [34..35]
 r88: [28..31]
 r89: [29..30]
 r90: [26..27]
 r91: [17..23]
 r92: [16..22]
 r93: [20..21]
 r94: [15..19]
 r95: [14..18]
 r96: [8..9]
 r97: [2..7]
 r98: [0..3]
 r99: [0..1]
 r100: [64..69]
 r101: [62..63]
 r102: [61..68]
 r103: [59..60]
 r104: [58..67]
 r105: [56..57]
 r106: [55..66]
 r107: [53..54]
 r108: [52..65]
 r109: [50..51]
 r110: [43..44]
 r111: [41..42]
 r112: [32..33]
 r113: [24..25]
 r114: [12..13]
 r115: [10..11]
 r116: [4..5]
Compressing live ranges: from 71 to 48 - 67%
Ranges after the compression:
 r82: [6..47]
 r83: [34..35]
 r84: [34..35]
 r85: [28..29]
 r86: [28..29]
 r87: [26..27]
 r88: [22..23]
 r89: [22..23]
 r90: [20..21]
 r91: [14..17]
 r92: [14..17]
 r93: [16..17]
 r94: [14..15]
 r95: [14..15]
 r96: [8..9]
 r97: [2..7]
 r98: [0..3]
 r99: [0..1]
 r100: [46..47]
 r101: [44..45]
 r102: [44..47]
 r103: [42..43]
 r104: [42..47]
 r105: [40..41]
 r106: [40..47]
 r107: [38..39]
 r108: [38..47]
 r109: [36..37]
 r110: [32..33]
 r111: [30..31]
 r112: [24..25]
 r113: [18..19]
 r114: [12..13]
 r115: [10..11]
 r116: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=64)
Can eliminate 16 to 6 (offset=4, prev_offset=0)
Can eliminate 19 to 7 (offset=48, prev_offset=48)
Can eliminate 19 to 6 (offset=-12, prev_offset=0)
changing reg in insn 87
changing reg in insn 79
changing reg in insn 76
changing reg in insn 73
changing reg in insn 71
changing reg in insn 36
changing reg in insn 34
changing reg in insn 30
changing reg in insn 28
changing reg in insn 23
changing reg in insn 26
changing reg in insn 24
changing reg in insn 27
changing reg in insn 41
changing reg in insn 44
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 46
changing reg in insn 51
changing reg in insn 54
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 56
changing reg in insn 61
changing reg in insn 67
changing reg in insn 62
changing reg in insn 68
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 69
changing reg in insn 65
changing reg in insn 70
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 81
changing reg in insn 80
changing reg in insn 82
changing reg in insn 81
changing reg in insn 82
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 35
changing reg in insn 49
changing reg in insn 50
changing reg in insn 59
changing reg in insn 60
changing reg in insn 71
changing reg in insn 72
changing reg in insn 76
changing reg in insn 77
changing reg in insn 79
changing reg in insn 80
deleting insn with uid = 3.
deleting insn with uid = 6.
deleting insn with uid = 9.
deleting insn with uid = 12.
deleting insn with uid = 15.
deleting insn with uid = 30.
deleting insn with uid = 36.
deleting insn with uid = 44.
deleting insn with uid = 49.
deleting insn with uid = 54.
deleting insn with uid = 59.
deleting insn with uid = 73.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 74.


math_emulate

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={19d,17u} r1={13d,7u} r2={8d,2u} r3={1d,8u} r4={2d,2u} r5={1d,1u} r7={22d,64u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={21d,1u} r18={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 514{412d,102u,0e} in 65{60 regular + 5 call} insns.
(note 1 0 18 NOTE_INSN_DELETED)
(note 18 1 87 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 87 18 2 2 (parallel [
            (set (reg:SI 3 bx [82])
                (unspec:SI [
                        (const_int 0 [0])
                    ] UNSPEC_SET_GOT))
            (clobber (reg:CC 17 flags))
        ]) 846 {*set_got}
     (expr_list:REG_CFA_FLUSH_QUEUE (nil)
        (nil)))
(insn 2 87 5 2 (set (reg:SI 5 di [100])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 96 [0x60])) [10 fs+0 S4 A32])) "kernel/math/math_emulate.c":21:1 75 {*movsi_internal}
     (nil))
(insn 5 2 8 2 (set (reg:SI 4 si [102])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 100 [0x64])) [10 es+0 S4 A32])) "kernel/math/math_emulate.c":21:1 75 {*movsi_internal}
     (nil))
(insn 8 5 11 2 (set (reg:SI 2 cx [104])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 104 [0x68])) [10 ds+0 S4 A32])) "kernel/math/math_emulate.c":21:1 75 {*movsi_internal}
     (nil))
(insn 11 8 14 2 (set (reg:SI 1 dx [106])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 112 [0x70])) [10 cs+0 S4 A32])) "kernel/math/math_emulate.c":21:1 75 {*movsi_internal}
     (nil))
(insn 14 11 4 2 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 120 [0x78])) [10 ss+0 S4 A32])) "kernel/math/math_emulate.c":21:1 75 {*movsi_internal}
     (nil))
(insn 4 14 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [10 fs+0 S2 A32])
        (reg:HI 5 di [101])) "kernel/math/math_emulate.c":21:1 76 {*movhi_internal}
     (nil))
(insn 7 4 10 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [10 es+0 S2 A32])
        (reg:HI 4 si [103])) "kernel/math/math_emulate.c":21:1 76 {*movhi_internal}
     (nil))
(insn 10 7 13 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [10 ds+0 S2 A32])
        (reg:HI 2 cx [105])) "kernel/math/math_emulate.c":21:1 76 {*movhi_internal}
     (nil))
(insn 13 10 16 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 16 [0x10])) [10 cs+0 S2 A32])
        (reg:HI 1 dx [107])) "kernel/math/math_emulate.c":21:1 76 {*movhi_internal}
     (nil))
(insn 16 13 17 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [10 ss+0 S2 A32])
        (reg:HI 0 ax [109])) "kernel/math/math_emulate.c":21:1 76 {*movhi_internal}
     (nil))
(note 17 16 20 2 NOTE_INSN_FUNCTION_BEG)
(insn 20 17 21 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [10 cs+0 S2 A32])
            (const_int 15 [0xf]))) "kernel/math/math_emulate.c":25:5 10 {*cmphi_1}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "kernel/math/math_emulate.c":25:5 806 {*jcc}
     (nil)
 -> 39)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (set (reg:SI 1 dx [orig:83 eip.3_1 ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 108 [0x6c])) [1 eip+0 S4 A32])) "kernel/math/math_emulate.c":26:3 75 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 0 ax [orig:84 _2 ] [84])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [10 cs+0 S2 A32]))) "kernel/math/math_emulate.c":26:3 144 {*zero_extendhisi2}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":26:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 26 25 27 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 1 dx [orig:83 eip.3_1 ] [83])) "kernel/math/math_emulate.c":26:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 27 26 28 3 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg:SI 0 ax [orig:84 _2 ] [84])) "kernel/math/math_emulate.c":26:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 28 27 29 3 (set (reg/f:SI 0 ax [110])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7752a0f2ecf0 *.LC0>)
                    ] UNSPEC_GOTOFF)))) "kernel/math/math_emulate.c":26:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7752a0f2ecf0 *.LC0>)
        (nil)))
(insn 29 28 31 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [110])) "kernel/math/math_emulate.c":26:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 31 29 32 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7752a0f38900 printk>) [0 printk S1 A8])
            (const_int 16 [0x10]))) "kernel/math/math_emulate.c":26:3 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 32 31 33 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":26:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 33 32 34 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":27:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 34 33 35 3 (set (reg/f:SI 0 ax [111])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7752a0f2ed80 *.LC1>)
                    ] UNSPEC_GOTOFF)))) "kernel/math/math_emulate.c":27:3 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7752a0f2ed80 *.LC1>)
        (nil)))
(insn 35 34 37 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [111])) "kernel/math/math_emulate.c":27:3 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 37 35 38 3 (call (mem:QI (symbol_ref:SI ("panic") [flags 0x41]  <function_decl 0x7752a0f38700 panic>) [0 panic S1 A8])
        (const_int 16 [0x10])) "kernel/math/math_emulate.c":27:3 812 {*call}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 38 37 39 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":27:3 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 39 38 40 4 7 (nil) [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 4 (set (reg:SI 0 ax [orig:85 eip.4_3 ] [85])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 108 [0x6c])) [1 eip+0 S4 A32])) "kernel/math/math_emulate.c":29:38 75 {*movsi_internal}
     (nil))
(insn 42 41 43 4 (parallel [
            (set (reg:SI 1 dx [orig:86 _5 ] [86])
                (plus:SI (reg:SI 0 ax [orig:85 eip.4_3 ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":29:38 209 {*addsi_1}
     (nil))
(insn 43 42 45 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 108 [0x6c])) [1 eip+0 S4 A32])
        (reg:SI 1 dx [orig:86 _5 ] [86])) "kernel/math/math_emulate.c":29:38 75 {*movsi_internal}
     (nil))
(insn 45 43 46 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":29:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 46 45 47 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:87 eip.6_6 ] [87])) "kernel/math/math_emulate.c":29:10 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 47 46 48 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7752a0f38c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "kernel/math/math_emulate.c":29:10 823 {*call_value}
     (nil)
    (nil))
(insn 48 47 50 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":29:10 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 50 48 51 4 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 47 [0x2f])) [0 first+0 S1 A8])
        (reg:QI 0 ax [112])) "kernel/math/math_emulate.c":29:10 77 {*movqi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:SI 0 ax [orig:88 eip.7_7 ] [88])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 108 [0x6c])) [1 eip+0 S4 A32])) "kernel/math/math_emulate.c":30:39 75 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (parallel [
            (set (reg:SI 1 dx [orig:89 _9 ] [89])
                (plus:SI (reg:SI 0 ax [orig:88 eip.7_7 ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":30:39 209 {*addsi_1}
     (nil))
(insn 53 52 55 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 108 [0x6c])) [1 eip+0 S4 A32])
        (reg:SI 1 dx [orig:89 _9 ] [89])) "kernel/math/math_emulate.c":30:39 75 {*movsi_internal}
     (nil))
(insn 55 53 56 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":30:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 56 55 57 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [orig:90 eip.9_10 ] [90])) "kernel/math/math_emulate.c":30:11 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 57 56 58 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("get_fs_byte") [flags 0x3]  <function_decl 0x7752a0f38c00 get_fs_byte>) [0 get_fs_byte S1 A8])
            (const_int 16 [0x10]))) "kernel/math/math_emulate.c":30:11 823 {*call_value}
     (nil)
    (nil))
(insn 58 57 60 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":30:11 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 60 58 61 4 (set (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                (const_int 46 [0x2e])) [0 second+0 S1 A16])
        (reg:QI 0 ax [113])) "kernel/math/math_emulate.c":30:11 77 {*movqi_internal}
     (nil))
(insn 61 60 62 4 (set (reg:SI 2 cx [orig:91 _11 ] [91])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 46 [0x2e])) [0 second+0 S1 A16]))) "kernel/math/math_emulate.c":31:2 143 {*zero_extendqisi2}
     (nil))
(insn 62 61 63 4 (set (reg:SI 1 dx [orig:92 _12 ] [92])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 sp)
                    (const_int 47 [0x2f])) [0 first+0 S1 A8]))) "kernel/math/math_emulate.c":31:2 143 {*zero_extendqisi2}
     (nil))
(insn 63 62 64 4 (set (reg:SI 0 ax [orig:93 eip.10_13 ] [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 108 [0x6c])) [1 eip+0 S4 A32])) "kernel/math/math_emulate.c":31:2 75 {*movsi_internal}
     (nil))
(insn 64 63 65 4 (parallel [
            (set (reg:SI 4 si [orig:94 _14 ] [94])
                (plus:SI (reg:SI 0 ax [orig:93 eip.10_13 ] [93])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":31:2 209 {*addsi_1}
     (nil))
(insn 65 64 66 4 (set (reg:SI 0 ax [orig:95 _15 ] [95])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])) [10 cs+0 S2 A32]))) "kernel/math/math_emulate.c":31:2 144 {*zero_extendhisi2}
     (nil))
(insn 66 65 67 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":31:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 67 66 68 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg:SI 2 cx [orig:91 _11 ] [91])) "kernel/math/math_emulate.c":31:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 68 67 69 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg:SI 1 dx [orig:92 _12 ] [92])) "kernel/math/math_emulate.c":31:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 69 68 70 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [1  S4 A32])
        (reg:SI 4 si [orig:94 _14 ] [94])) "kernel/math/math_emulate.c":31:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 70 69 71 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [8  S4 A32])
        (reg:SI 0 ax [orig:95 _15 ] [95])) "kernel/math/math_emulate.c":31:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 71 70 72 4 (set (reg/f:SI 0 ax [114])
        (plus:SI (reg:SI 3 bx [82])
            (const:SI (unspec:SI [
                        (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7752a0f2ee10 *.LC2>)
                    ] UNSPEC_GOTOFF)))) "kernel/math/math_emulate.c":31:2 205 {*leasi}
     (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2]  <var_decl 0x7752a0f2ee10 *.LC2>)
        (nil)))
(insn 72 71 74 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [2  S4 A32])
        (reg/f:SI 0 ax [114])) "kernel/math/math_emulate.c":31:2 54 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 74 72 75 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("printk") [flags 0x41]  <function_decl 0x7752a0f38900 printk>) [0 printk S1 A8])
            (const_int 32 [0x20]))) "kernel/math/math_emulate.c":31:2 823 {*call_value}
     (nil)
    (expr_list (use (reg:SI 3 bx))
        (nil)))
(insn 75 74 76 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":31:2 209 {*addsi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 76 75 77 4 (set (reg/f:SI 0 ax [115])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7752a0f2e120 current>)
                        ] UNSPEC_GOT))) [4  S4 A8])) "kernel/math/math_emulate.c":32:18 75 {*movsi_internal}
     (nil))
(insn 77 76 78 4 (set (reg/f:SI 0 ax [orig:96 current.11_16 ] [96])
        (mem/f/c:SI (reg/f:SI 0 ax [115]) [3 current+0 S4 A32])) "kernel/math/math_emulate.c":32:18 75 {*movsi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:SI 1 dx [orig:97 _17 ] [97])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:96 current.11_16 ] [96])
                (const_int 12 [0xc])) [1 current.11_16->signal+0 S4 A32])) "kernel/math/math_emulate.c":32:18 75 {*movsi_internal}
     (nil))
(insn 79 78 80 4 (set (reg/f:SI 0 ax [116])
        (mem/u/c:SI (plus:SI (reg:SI 3 bx [82])
                (const:SI (unspec:SI [
                            (symbol_ref:SI ("current") [flags 0x40]  <var_decl 0x7752a0f2e120 current>)
                        ] UNSPEC_GOT))) [4  S4 A8])) "kernel/math/math_emulate.c":32:18 75 {*movsi_internal}
     (nil))
(insn 80 79 81 4 (set (reg/f:SI 0 ax [orig:98 current.12_18 ] [98])
        (mem/f/c:SI (reg/f:SI 0 ax [116]) [3 current+0 S4 A32])) "kernel/math/math_emulate.c":32:18 75 {*movsi_internal}
     (nil))
(insn 81 80 82 4 (parallel [
            (set (reg:SI 1 dx [orig:99 _19 ] [99])
                (ior:SI (reg:SI 1 dx [orig:97 _17 ] [97])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) "kernel/math/math_emulate.c":32:18 520 {*iorsi_1}
     (nil))
(insn 82 81 85 4 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:98 current.12_18 ] [98])
                (const_int 12 [0xc])) [1 current.12_18->signal+0 S4 A32])
        (reg:SI 1 dx [orig:99 _19 ] [99])) "kernel/math/math_emulate.c":32:18 75 {*movsi_internal}
     (nil))
(note 85 82 86 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 88 5 (const_int 0 [0]) "kernel/math/math_emulate.c":33:1 843 {nop}
     (nil))
(note 88 86 0 NOTE_INSN_DELETED)
